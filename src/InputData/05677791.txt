Real-time Diagnosis System Using Incremental  Emerging Pattern Mining

Abstract? Currently, as a effort to reduce a rate of death by cardiovascular diseases, a lot of researches have been studied regarding real-time diagnosis system. So, we implement a prototype which is contained of stream data processor and incremental data mining module for automatic diagnosis of cardiovascular diseases. In the prototype, (i)ECG signal data which is transported from body-attached sensor is collected and pre-processed, and (ii)diagnosis features of the bio-signal data are extracted. And the patients are automatically diagnosed using the incremental emerging pattern mining module, then (iii)the diagnosis result is provided for the doctor in charge of the patients via a web application in order to manage the medical history of each patient. So, the prototype is able to diagnose and predict patient state on real-time, automatically.

Keywords? Incremental mining, emerging pattern, IEP-TFP, ECG analysis, diagnosis system

I. INTRODUCTION A rate of death is rapidly increased by cardiovascular  diseases during last several decades; therefore, a number of researches have been studied for preventing that. As the result of the researches, some units which are able to extract medical information through simple operator or a spatial dress are developed. After grafting USN (ubiquitous sensor network) technique onto simple diagnosis unit, it is possible to monitor patients on real-time. But, a novel system which is automatically able to diagnose the cardiovascular diseases is needed, because the monitoring system demands a continuous observation by someone. Therefore, a lot of data mining methodologies have been studied for classifying either normal or patient automatically.

In [1], [2], ECG signal data of a patient is collected and analysed off line. Then, those diagnose a patient?s state using the analysed result, which have a high accuracy in the diagnosis. However, the researches have some drawbacks.

Representatively, the state of the patient is only recorded in case of having an emergency. So, in [3], an ECG of a patient is monitored and diagnosed by using a PDA mobile, which machine learning is applied. However, one of the major problems of this research is low performance of the hardware, because most machine learning algorithms have a high time complexity.

In order to solve the problem, a signal processor of stream data collected from patient?s sensor and data mining technique which is able to diagnose patient?s state on real-time is demanded.

In this paper, a prototype which collects the ECG signal data and diagnoses cardiovascular diseases is proposed.

According to the prototype, optimal medical service is able to provide for the patients in emergency state. Also, accuracy of the diagnosis will be gradually improved by applying the incremental mining technique. That is able to apply for u- heath care system and support the tailored medical service to each patient. Also, a novel paradigm is suggested in the fields of medical industry and academia by taking fast measures for the patient?s emergency.



II. DATA PRE-PROCESSING AND EMERGING PATTERN MINING In this section, we describe feature extraction, emerging  pattern, and incremental emerging pattern-based total from partial(IEP-TFP), which are core in data mining server.

A. Extracting the Features A total of 13 features were extracted from HRV (heart rate  variability) in this study. These features included traditional HRV features adopted from previous studies [4], [5], [6].

The analysis of HRV, the variation of period between consecutive heart beats from ECG signal, provides valuable information to assess the autonomous nervous system (ANS), which can be significantly affected by many disease states and physiological change [7]. HRV analysis methods can be divided into frequency domain, time domain and nonlinear methods. In the following HRV analysis methods are discussed shortly. A detailed description of HRV features can be found in [8].

Time domain feature: The time domain features are the  simplest ones calculated directly from the RR interval time series (i.e. intervals between consecutive R-peaks). Time domain measures are the mean RR interval (RRm), the standard deviation of all RR intervals (SDRR), and the standard deviation of differences between adjacent RR intervals (SDSD).

Frequency Domain Feature: After computing the time  domain features (the mean RR intervals), we used fast Fourier transformation (FFT) to obtain the power spectrum of the RR intervals. Then, we defined various areas of spectral peaks [9].

The commonly used frequency bands are total power (TP, 0~0.4Hz), very low frequency (VLF, 0~0.04Hz), low frequency (LF, 0.04~0.15Hz), high frequency (HF, 0.15~0.4Hz). The most common frequency domain features     include the normalized power of LF and HF bands, and the LF to HF ratio.

Nonlinear Feature: It is realistic to presume that HRV also  contains nonlinear features due to the complex regulation mechanisms controlling it. The various nonlinear features of HRV can be evaluated by extracting regularity indexes. One simple and easy to comprehend nonlinear method is the so called Poincare plot. It is a graphical presentation of the correlation between consecutive RRIs. The Poincare plot may be analyzed quantitatively by fitting an ellipse to the plotted shape. The center of the ellipse is determined by the average RRI. SD1 means the standard deviation of the distances of points from the y = x axis, SD2 means the standard deviation of the distances of points from y = -x+RRm axis, where mRR  is the average RRIs. We also computed the features, SD2/SD1, and SD1SD2, describing the relationship between SD1 and SD2 in our study.

All features of HRV used in this paper are presented in Table I.

TABLE I.

DESCRIPTION OF HRV FEATURES  Feature Index Description  Frequency domain  nLF Normalized low frequency power nHF Normalized high frequency power LF/HF The ratio of low- and high-  frequency  power  Time domain  RRm The mean of RR intervals SDRR Standard deviation of all RR  intervals SDSD Standard deviation of differences  between adjacent RR intervals  Nonlinear  SD1 Standard deviation of the distance of RR(i)  from the line y = x in the Poincare  SD2 Standard deviation of the distance of RR(i)  from the line y = -x + RRm in the  Poincare  SD2/SD1 The ratio SD2 to SD1 SD1SD2 SD1?SD2  B. Emerging Pattern Mining Emerging Patterns (EPs) are contrast patterns between two  classes of data whose support changes significantly between the two classes. Those patterns have high support in target dataset and low support in opposed dataset. By aggregating the differentiating power of EPs, the constructed classifiers are usually more accurate than other existing state-of-the-art classifiers [10], [11].

The problem definition of EPs is following:  Definition 1: Given two different classes of datasets which  are background dataset D1, and target dataset D2. Let supD(X) is the support of itemset X in a dataset D, and the growth rate of an itemset X from D1 to D2 is defined as GR(X). EPs are those itemsets with high growth rates from D1 to D2.

otherwise XandXif XandXif  XGR X X  0)(sup0)(sup 0)(sup0)(sup0  )( 21  )(sup )(sup    => ==  ? ? ?  ?? ?  ?  ?=    Definition 2: Given a growth rate threshold ? > 1, if GR(X)  ? ?, an itemset X is said to be a ?-Emerging Pattern (?-EP) from D1 to D2. EPs for which growth rate is infinite are called jumping emerging patterns (JEPs). Those patterns occur only in the target dataset.

Definition 3: The strength of an emerging pattern X is  defined as strength(X).

)sup( 1)(  )()( X XGR  XGRXstrength ? +  =  If X is jumping emerging pattern, strength(X) equal to sup(X), because GR(X) is infinite.

Classification by aggregating emerging patterns (CAEP) is application of EPs for classification. It uses the scoring function which is sum of strength of EP X about each dataset.

Definition 4: Given a test instance T and a set E(Ci) of EPs  of data class Ci, the aggregate score of T for the class Ci is defined as score(T, Ci).

? ??  ? +  = )(,  )(sup 1)(  )(),( i  i CEXTX  Ci XXGR XGRCTscore  The Input transaction T is assigned the class which has the highest score using scoring function. If X is jumping emerging pattern, score(T, Ci) becomes ?X?T, X?E(Ci) supCi(X), because GR(X) equal to supD(X). In order to perform the classification by EPs, all attributes must have nominal type.

Therefore, if some attribute type of dataset is continuous- valued attributes, discretization task is essential about continuous-valued attributes.

C. Apriori-TFP and Incremental Emerging Pattern Mining The Apriori-TFP (Total from Partial) algorithm [12], [13] is  one of the efficient approaches for mining frequent patterns, which has all the functionality of Apriori-T [14], [15] except that it operates in a much more efficient manner as a result of the preprocessing advantages offered by the usage of the P- tree data structure [16], [17]. The idea of the Apriori-TFP can generate a T-tree from a P-tree in a similar Apriori manner as described in [15].

T-tree (Total Support Tree): The most well-known  association rule mining (ARM) algorithm that makes use of the Apriori [18]. Apriori algorithm used a hash tree data structure; however, Apriori can equally well be implemented using alternative structures such as set enumeration trees [19].

Set enumeration trees impose an ordering on items and then enumerate the itemsets according to this ordering. If we consider a data set comprised of three records with union of six items: {a,c,d}, {a,c,e} and {b,d,f}, then the tree would include one node for each large I with its support count. The    top level of the tree describes the support for 1-itemsets, the second level for 2-itemsets, and so on.

The implementation of this structure can be used effective by storing levels in the tree in the form of arrays, therefore reducing the number of links are required and it provides direct indexing. It is more convenient to build a reverse version of the tree, as shown in Fig. 1. The authors reference to this form of compressed set enumeration tree as a T-tree.

a  <2> b  <1> c  <2> d  <2> e  <1> f  <1>  a <2>  a <1>  b <1>  c <1>  a <1>  c <1>  b <1>  d <1>  a <1>  a <1>  b <1>  Fig. 1 T-tree stored in reverse order   P-tree (Partial Support Tree): The P-tree is a compressed  set enumeration tree to store partial support for itemsets and its internal structure. The top level is comprised of an array of nodes, each index describing a 1-itemset, with child references to P-tree nodes. The P-tree node are consisting: 1) a support field (sup) 2) an array of short integers (I) for the itemset that the node represents 3) child and sibling links to further P-tree nodes [13].

We pass through the input data record by record to build a P-tree. The P-tree will have all the itemsets present as distinct records in the input data when it is complete, The support stored at each node is an incomplete support total, comprised of the sum of the supports stored in the sub-tree of the node.

For each node in the tree, the contribution to the support count for that set which derives from all its lexicographically succeeding supersets has been included because of the way the tree is ordered.

It is the IEP_TFP (incremental emerging pattern-based total from partial) that emerging pattern mining is gradually evolved by using tree structure of Apriori_TFP and applying the lemmas of FUP[20] for incremental mining.

Fig. 2 Framework of IEP-TFP algorithm   Fig. 2 shows the whole framework of incrementally  constructing IEP-TFP tree.

EP-T treeDB: Scan the DB and construct the EP-T treeDB by  the original construction steps of EP-TFP tree without pruning.

EP-T treedb: The construction steps are similar to construction of EP-T treeDB. The main difference is that we use the concept of pre-minimum support to prune the pre- infrequent items.

EP-T treeUD: combine the EP-T treeDB and EP-T treedb to achieve the final EP-T treeUD. After that according to a given support to prune the infrequent items to get emerging patterns we wanted according to definition of emerging patterns.



III. INCREMENTAL DATA PROCESSING PROTOTYPE Fig.3 shows a concept of the implemented prototype. After  transferring the body sensor?s data via wireless network, the prototype has 3 steps for automatic diagnosis.

Fig. 3 Concept of the implemented prototype   That is consisting of the followings; stream data control  server, data mining server, and medical center.

? The stream data control server which collects and  processes the ECG signal data reduces the system load, by inserting the data collected from multiple clients in database on real-time.

? The data mining server contains feature extraction, except data mining module. In order to diagnose cardiovascular diseases, it has to extract some features from ECG signal data. Accordingly, if ECG signal data is send from stream data processor to data mining server, the feature extraction module extracts the features. The data mining module is automatically able to predict the cardiovascular diseases on real-time using extracted features. The module generates a classification model by using heart signal data (training dataset) which is verified by medical institution, and classifies the collected data (test dataset) from sensor. Also, after generating the first model, the model is gradually evolved by updating the additional training dataset because incremental mining technique is applied in the module.

? The medical center stores and manages the results diagnosed by mining module. So, it is possible that a    prompt action on emergency. Also, as a web application support medical history of each patient, the doctors make a diagnosis the state of patient, more accurately and efficiently.



IV. IMPLEMENTATION Fig.4 shows the data collection module in the stream data  control server. This module saves the entire ECG signal data transferred from multiple clients in database. There is a list of connected clients on the left of the user interface. If a client code of right is selected, simple information of the selected client is shown on the top of right of user interface.

Additionally, connecting state of clients is confirmed on the bottom of right of user interface.

Fig. 4 ECG signal stream data receiver   Fig. 5 An example screen shot of the feature extraction process   And then, a feature extraction module of the data mining  server generates all of the features from collected signal data.

Fig. 5 is shown the extraction result. There are the ECG signal and RR interval of a patient at the top of Fig. 5. Also, entire extracted features and several diagrams regarding the features are presented on the following.

The extracted features are saved in database, and the data is used for a web application of the medical center. Fig. 6 is a user interface of the web application for doctors, which is able to read the diagnosis result and history of some patients.

When a doctor logs in the web-site, he is able to see the list and clinical information of his patients on the top of this page.

If he selects a patient, he is able to review the medical career of the patient under the clinical information area.

Fig. 6 An example screen shot of web application   Additionally, two signal graphs, ECG and RR interval(Fig.

7) regarding past diagnosis result of a patient, are presented in detailed, by clicking a button labeled ?ECG&RRI Signal?.

Fig. 7 An example screen shot of bio-signal    CONCLUSIONS We present a prototype which is able to process stream data  and diagnose cardiovascular diseases. The prototype model is able to apply periodic or aperiodic medical examination and medical information management system for patients having cardiovascular diseases such as cardiac infarction, apoplexy.

Also, the prototype suggests a novel paradigm to the fields of medical academic and industry, because coping with emergency is feasible. And tailored medical diagnosis service will be offered by using bio-signal analysis technique on real- time.

