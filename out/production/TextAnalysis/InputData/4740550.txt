The Impact of Contextual Information on the Accuracy of Existing Recommender Systems for Web Personalization

Abstract  Traditionally, recommender systems for the Web deal with applications that have two types of entities/dimensions, users and items. With these dimensions, a recommendation model can be built and used to identify a set of N items that will be of interest to a certain user. In this paper we propose a direct method that enriches the information in the access logs with new dimensions. We empirically test this method with two recommender systems, an item-based collabora- tive filtering technique and association rules, on three data sets. Our results show that while collaborative filtering is not able to take advantage of the new dimensions added, association rules are capable of profiting from our direct method.

1 Introduction  Most Web sites offer a large number of information re- sources to their users. Finding relevant content has, thus, become a challenge for users. Recommender systems have emerged in response to this problem. A recommender sys- tem for a Web site receives (implicit or explicit) information about users and their behavior and recommends items that are likely to fit his/her needs [6].

Many recommender models for Web personalization are built from the historical record of accesses to a site, where one access is a pair < user, item >. Each access is in- terpreted as a positive binary rating given by the user to the item. However, other dimensions, such as time and location, can add contextual information and improve the accuracy of recommendations [1].

Existing multidimensional recommender systems typi- cally imply the adaptation of the algorithms to process the data in its multidimensional format (e.g., [1]). We follow an alternative approach, in which we transform the data  so that traditional algorithms can be used. In this paper we empirically test our approach with two recommendation techniques, item-based collaborative filtering and associa- tion rules, to assess the effect of adding new dimensions on the accuracy of traditional Web recommender systems. We present results obtained on three data sets.

2 Multidimensional Data  To explore multidimensional data for Web site automa- tion, we have built a data warehouse [4] whose fact and dimension tables store information about accesses, content and structure. From the data warehouse we chose some data fields to be used as additional dimensions in the experiments presented in this paper (more information on Table 1).

Table 1. Selected data fields.

Data Fields Description day Day of each access (from 01 to 31).

month Month of each access (from 01 to 12).

week day Week day of each access (from Monday to Sunday).

work day Stores whether the accesses were made during the  week (from Monday to Friday) or weekend (Satur- day or Sunday).

hour Hour of each access (from 01 to 24).

work hour Stores whether the accesses were made during the  working time (from 8 a.m. to 6 p.m.) or not.

location Location of the users (country/city).

uri referer Uri of the page containing the hyperlink that was  followed to the current page.

type referer Type of a referer: ?local? (page stored at the same  Web site) or ?global? (page on a remote server).

The data fields in Table 1 were chosen because they pro- vide contextual information about the activities of the user, namely in terms of time, space and the previous page that was visited. With the extra contextual information which temporally and spatially locates the last accessed page, we expect that recommender systems improve their accuracy.

DOI 10.1109/WIIAT.2008.219    DOI 10.1109/WIIAT.2008.219     3 Item-Based Collaborative Filtering  An item-based collaborative filtering (CF) technique an- alyzes stored accesses to identify relations between the items in a set I [5]. The recommendation model is a matrix representing the similarities between all the pairs of items, according to a chosen similarity measure. A representation of a similarity matrix is shown in Table 2. In the table, each item i ? I is an accessed page. The similarity measure used here is the cosine angle, defined by  sim(ik1 , ik2) = cos( ?? ik1 , ?? ik2) =  ?? ik1 .

?? ik2  || ?? ik1 ||?||  ?? ik2 ||  ,  where ??ik1 and ?? ik2 are binary vectors with as many compo-  nents as existing users. The value 1 means that the users accessed the respective item/page. The value 0 is the oppo- site. The ?.? denotes the dot-product of the two vectors.

Table 2. Similarity matrix.

i1 i2 ? ? ? ik  i1 1 sim(i1, i2) ? ? ? sim(i1, ik) i2 sim(i2, i1) 1 ? ? ? sim(i2, ik) ? ? ? ? ? ? ? ? ? 1 ? ? ? ik sim(ik, i1) sim(ik, i2) ? ? ? 1  To recommend N items to a user which accessed the items O ? I , we use the matrix to select the N most similar items to the set O.

Our approach to handle multiple dimensions with the item-based collaborative filtering algorithm is not by chang- ing the algorithm but simply by adding new dimensions to the matrix. We add a new row and column for each different value of the new dimension to the original similarity matrix and calculate the respective similarity values. A represen- tation of a similarity matrix with an additional dimension day = {d1, d2, ? ? ? , dv} is shown in Table 3. With this ex- tension an item can be a page or a possible value for the variable day (1 to 31). Although the additional dimension is used in the models, only pages are recommended. The recommendations will be the set of pages that are most sim- ilar to a given set of observable items O ? {I ? day}. The rationale behind this approach is that the similarity between a given item and a given day (for example) is higher if the item tends to be accessed on that day of the month. This way, the relation between items and the new dimension is captured. When a recommendation is made for an active session, the value of the extra dimension on that particu- lar session (e.g., the day of the month the active session is taking place) provides contextual information.

4 Recommender System Based on Associa- tion Rules  An association rule (AR) A ? B represents a relation- ship between the sets of items A and B. Each item is an atom representing a particular object. The relationship is characterized by two measures: support and confidence.

The support of a rule within a data set D, where D itself is a collection of sets of items (or transactions), is the number of transactions in D that contain all the elements in A?B. The confidence of the rule is the proportion of transactions that contain A ? B with respect to the number of transactions that contain A. The most common algorithm for discover- ing AR is Apriori [2].

A recommendation model M , based on association rules, is a set of rules R with the corresponding support and confidence. To generate the model, the accessed items are retrieved as a set of transactions, referred to as sessions in the context of the Web. As before, each session is a set of pairs < user, item > with the same user, where user and item respectively identify the user and the accessed page.

These sessions are used as input to Caren1, a java based association rule generator.

The generated model outputs a set of items/pages as rec- ommendations Rec, given a set of observable items O. We build the set Rec as follows:  Rec = {consequent(ri)|ri ?M and antecedent(ri) ? O and consequent(ri) /? O}.

To obtain the top N recommendations, we select from Rec the distinct recommendations corresponding to the rules with the highest confidence.

As before, to handle multiple dimensions with AR, we change the data rather than the algorithm. We include extra pairs user-item into the original set of sessions. For exam- ple, to use the dimension day, we add a pair < user, day = value > to the respective session with tag user, where day = value represents the day of the month when the ses- sion with tag user occurred. The set of augmented sessions are used as input to the recommendation algorithms. Notice that the additional dimension is used only as input informa- tion for the models. Therefore, the rules may include both items and day values (in the case of the day dimension) on the antecedent but only items on the consequent. Given an active session occurring on day x, the set of observables O includes the items in the active session and the extra item day = x (similarly for other dimensions).

5 Empirical Evaluation  The evaluation is carried out using three different data sets whose characteristics are shown in Table 4. The E-  1http://www.di.uminho.pt/?pja/class/caren.html     Table 3. Similarity matrix with the additional dimension day.

i1 ? ? ? ik d1 ? ? ? dv  i1 1 ? ? ? sim(i1, ik) sim(i1, d1) ? ? ? sim(i1, dv) ? ? ? ? ? ? 1 ? ? ? ? ? ? ? ? ? ? ? ? ik sim(ik, i1) ? ? ? 1 sim(ik, d1) ? ? ? sim(ik, dv) d1 sim(d1, i1) ? ? ? sim(d1, ik) 1 ? ? ? sim(d1, dv) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 1 ? ? ? dv sim(dv , i1) ? ? ? sim(dv , ik) sim(dv , d1) ? ? ? 1  Learning data set contains accesses to notes and exercises of a simple e-learning Web site of a computer science course.

The E-Commerce data set contains accesses to pages de- scribing products in the e-commerce Web site of a Por- tuguese computer store. E-Government is obtained from the Web site of a governmental human resources program.

This data set contains accesses to information and applica- tion forms (in portable document format - pdf).

Table 4. Characteristics of the data sets.

Data sets # Accesses 6= Items 6= Users  E-Learning 15689 541 698 E-Commerce 28726 2387 10864  E-Government 80142 173 38371  To measure the accuracy of the recommender systems we used the All But One protocol described in [3]. In this protocol, the sessions in the data set are split randomly into train and test. In our case, 80% for training and 20% for testing. The training set is used to generate the recommen- dation model (similarity matrix or association rules). For each session in the test set we randomly delete one pair < user, item >, referred to as hidden item. The remaining pairs represent the set of observables, O, based on which the recommendation is made.

The model is evaluated by comparing, for each session in the test set, the set of recommendations it makes with the hidden item. The quality of the recommender systems is measured in terms of Recall, Precision and the F1 met- ric [6]. Recall corresponds to the proportion of relevant rec- ommendations. Precision gives us the quality of each set of recommendations. F1 is a measure that combines Recall and Precision with an equal weight. It ranges from 0 to 1 and higher values indicate better recommendations.

Since many of the sessions in the data sets have one ac- cess only, we deleted these sessions from the test sets. This is justified by the fact that when a session with one access only is used for testing, the model makes a recommenda- tion on the basis of the additional dimension only. This is uninteresting in our experiment, since we do not want to evaluate the recommendations made solely on the basis of the additional dimensions, but whether the information in these dimensions complements the information tradition- ally used by recommender systems in a useful way. After  deleting singleton sessions, the test sets for E-Learning, E- Commerce and E-Government contain, respectively, 18%, 6% and 9% of their data sets, rather than 20% that were first selected for testing.

For the recommendation models based on association rules (AR), we chose a minimum support value keeping at least 50% of the items of the data sets. The minimum confi- dence values were defined as being the support value of the third most frequent item.

Figure 1 represents the F1 metric for the basic ap- proaches (user ? item) and for these with additional di- mensions (for instance, + day). Table 5 shows recall and precision values for the E-Commerce data set.

Contrarily to [1] where the collaborative filtering algo- rithm was adapted to work with extra features, the results show that our direct approach for using additional dimen- sions in the item-based collaborative filtering (CF) tech- nique does not improve the predictive performance of the recommendation models. The performance decreases in terms of Recall, Precision and the F1 metric. The only ex- ception is the uri referer dimension in the E-Government data set, with an F1 average gain of 36% compared to the same model without any additional dimension (Figure 1.e).

In some cases, adding a new dimension reduces both Recall and Precision to zero (Table 5).

On the other hand, our results clearly show that the methodology proposed here improves the accuracy of the Association Rules (AR) models. In Figure 1.b we have a maximal value of 0.54 (top 1 with work hour dimension).

This value represents a gain of 119% compared to the value of F1 without any additional dimension. In Figure 1.d, the F1 measure for all additional dimensions contain an average gain of about 90%. With respect to the E-Government data set (Figure 1.f) we have the highest gain for the F1 measure, 309% (value 0.542, top 1 with uri referer dimension). An interesting fact here is that the AR models using multidi- mensional data present a similar behavior for the three data sets, which does not happen with the CF models.

6 Conclusions and Future Work  In this paper we presented a direct method that enables existing recommender systems to take advantage of differ- ent dimensions of the behavior of the user, such as time     Table 5. Recall (R) and Precision (P) for E-Commerce data set.

user? item + day + month + week day + work day + hour + work hour + location  Technique N R P R P R P R P R P R P R P R P  1 0.08 0.08 0.001 0.001 0 0 0 0 0.001 0.001 0 0 0 0 0.01 0.01 2 0.13 0.06 0.006 0.003 0 0 0 0 0.001 0.0007 0.003 0.001 0 0 0.02 0.01  CF 3 0.16 0.05 0.007 0.002 0 0 0 0 0.001 0.0005 0.004 0.001 0 0 0.03 0.01 5 0.18 0.03 0.04 0.008 0.001 0.0003 0 0 0.001 0.0003 0.01 0.002 0 0 0.04 0.009 10 0.20 0.02 0.10 0.01 0.003 0.0003 0.003 0.0003 0.001 0.0001 0.05 0.005 0 0 0.06 0.006  1 0.06 0.06 0.10 0.10 0.12 0.12 0.09 0.09 0.12 0.12 0.08 0.08 0.11 0.11 0.10 0.10 2 0.09 0.04 0.14 0.07 0.17 0.09 0.13 0.085 0.16 0.08 0.11 0.074 0.15 0.08 0.16 0.08  AR 3 0.10 0.04 0.17 0.06 0.19 0.08 0.150 0.084 0.18 0.079 0.12 0.074 0.177 0.073 0.18 0.06 5 0.11 0.03 0.20 0.05 0.20 0.08 0.152 0.083 0.19 0.078 0.12 0.073 0.179 0.071 0.20 0.05 10 0.11 0.03 0.20 0.05 0.20 0.08 0.152 0.083 0.19 0.078 0.12 0.073 0.179 0.071 0.20 0.05  and space, without changing the algorithms. We discussed the results obtained using two recommendation techniques, item-based collaborative filtering and association rules. The use of multidimensional data with a conventional associa- tion rules generator revealed a great potential to improve the accuracy of recommender systems.

Currently, we are making a similar study with a recom- mender system based on Markov chains. Next, we will ex- ploit the combination of contextual information for improv- ing the accuracy of recommender systems.

7 Acknowledgments  Fundac?a?o para Cie?ncia e Tecnologia (SFRH/BD/22516/ 2005), POSC/EIA/58367/2004/Site-o-Matic Project, co- financed by FEDER.

