Non-Redundant Sequential Association Rule Mining

AbstractMany modern recommender systems are not suit-  able for recommending infrequently purchased products such as  cars due to lack of user rating data to infrequently purchased  products. A big challenge for recommending infrequently pur-  chased products is the lack of data about users interests. Web log  data is an important data resource to derive useful information  about users navigation patterns which in turn can help find  users information needs. In this paper, a novel method Closed  Sequence-Sequence Generator Mining (CSGM) is proposed to  generate closed sequences and sequence generators for non-  redundant sequential rule mining. By applying the proposed  method on web logs, we can extract sequential associations among  products which reflect users preference on products. We have  conducted experiments on recommending cars based on users  interests generated by utilizing the sequential rules extracted  using our method. Our experiments show that by using those  rules we can find users interests more accurately and thus  improve the quality of car recommendation compared to the  standard matching-based car search. Moreover, by only using the  non-redundant rules, the same or even better recommendations  can be generated than using the whole set of rules.

Index TermsRecommender system,closed sequence, sequence    generator, non-redundant sequential rule mining

I. INTRODUCTION  Nowadays, recommender systems can introduce user items  and products that are matching users preferences or interests  [1]. However, most of the recommender systems are developed  for recommending frequently purchased products such as  DVDs, books, and movies. Moreover, many of the recom-  mender systems are developed using collaborative filtering  which is heavily based on users ratings to products. But,  for infrequently purchased products, users rating data is very  limited as the products are not often purchased by the users  during their lifetime, and users are not able to provide ratings  for products that they never use. Thus the commonly used  recommendation techniques are not suitable for recommending  infrequently purchased products. Currently most of the avail-  able online systems for recommending infrequently purchased  products like cars and houses are matching-based search  engines, whereby the systems retrieve products that match  exactly with the users query. This query is normally short  and does not reflect the user requirements fully. Therefore, a  recommender system that can predict users preferences from  the initial input given by the users is needed for recommending  infrequently purchased products. Recently, web usage mining  techniques have been widely investigated and applied for web  page recommendation. The acquired knowledge from web  usage mining provides valuable information for predicting the  access behavior of users that can be used by recommender  systems for recommending infrequently products.

We have proposed a knowledge-based recommender system  which utilizes opinion mining and rough set association rule  mining to extract associations between product attributes from  user review data [2].In this paper, we propose a novel method  to generate non-redundant sequential rules from sequential  datasets. By applying the proposed method on web logs, we  can extract sequential associations among products which are  viewed or visited by users when they are navigating the web  site for products. These associations reflect users preferences  towards products. In this paper, we propose to expand users  profiles by using the extracted rules with the hope to more  accurately find users interests and thus generate more accurate  recommendations.

The outline of the paper is as follows. Section 2 is a    summary of related research works. Section 3 describes the  definitions and terminologies and details of our approach.

Section 4 discusses the experiment and performance. We  summarized our study in Section 5

II. RELATED WORK  Recently, some researchers have proposed recommender  system which utilizes sequential rules or sequential patterns. In  the paper [3], the author considers the evolution of customers  purchase sequences over a period of time in order to improve  the quality of traditional collaborative filtering system. The  proposed system involves two phases: In the model building  phase, the SOM (self organizing map) technique is used to  group transactions based on similarity between users purchase  history [3] , the clustered transactions are then transformed  into a sequence of transaction clusters, mainly represent cus-  tomers behavior locus. After that, sequential cluster rules are  generated by time-based association rule mining method [4]  in the recommendation phase, the best matching locus of a   Technology  978-0-7695-4191-4/10 $26.00  2010 IEEE  DOI 10.1109/WI-IAT.2010.253   target customer is determined by comparing the cluster locus  and the purchase sequence rules.

Paper [5] developed CSB-mine algorithm for efficient se-  quential pattern mining from web log data, the CSB-mine  algorithm was based directly on the conditional sequence bases  of each frequent event which eliminates the time and space  cost for constructing intermediate pattern trees, the CSB-mine  algorithm was latterly applied into a web personalized recom-  mender systems which predict the pages may be accessed by  current user.

However, methods from [3] require each users purchase  behaviour over a period of time, which is not available  for recommender systems of infrequent purchased products.

Methods introduced in [5] are only limited to recommending  webpages or links , which are not directly related to prod-  ucts recommendation. In contrast, our approach adapts non-  redundant sequential association rule mining method which  is totally different from the methods in [3-5]. In addition,  we conduct non-redundant sequential rule mining on users    navigation history (web access sequences). Instead of directly  using rules for recommendation purpose, we use rules to  expand users initial queries for user profiling. The following  section will discuss the proposed approach in detail.



III. APPROACHES  For those online e-commerce websites for infrequently  purchased products, because of lacking enough user feedback  or input information, the hidden information stored in web  logs could be considered as another important resource for  user profiling.By using web usage mining techniques, we can  build user access sessions, and transfer the web page of each  session into corresponding products according to its content.

By using the extracted patterns and sequential rules from these  sessions, we can predict the users preferred products.

The proposed approach contains two main processes: 1)  Non-redundant sequential association rule mining to generate  quality sequential rules from the user navigation histories.

2) Query expansion to expand users query by using users  navigation history sequential rules.

In this section, we define some useful concepts and entities  used in this paper.

A. Definitions  Definition 1 (Frequent closed sequences and Sequence  generators) A frequent sequence s is a frequent closed  sequence if there exists no sequence s such that (1) s ? s  and (2) support(s) = support (s). A frequent sequence s is a  generator if there exists no sequence s such that (1) s ? s  and (2) support(s) =support(s).

From Definitions , we can see that the minimal generator of  a closed sequence is the minimal subsequence of the closed  sequence whose closure is the closed sequence. Also any  generator of a closed sequence has the same support as the  closed sequence.

Definition 2 (Redundant Sequential Association Rules)  Let X ? Y and X ? ? Y ? be two sequential rules with  confidence cf and cf, respectively. X ? Y is said a redundant  rule to X ? ? Y ? if X ? X ?, Y ? Y ?, and cf ? cf.

For example, among the four rules: (1) A ? BC (cf =  2/3), (2) AB ? CE (cf = 2/3), (3) AB ? BC(cf = 2/3),  (4) A ? BCE (cf = 1), according to the definition, rules  (1), (2),(3) are considered redundant to rule (4) because rule  (1) has a shorter consequent than that of rule (4) and rules (2)    and (3) have a larger antecedent and a shorter consequent than  rule (4). And our aim is focused on mining sequential rules  with small antecedent but large consequent.

B. Non-redundant sequential rule mining  A non-redundant sequential mining method is adapted to  extract valuable information from the user navigation sessions  generated by web usage mining technique (we omit the details  due to the page limit). In non-sequential association rule min-  ing field, N.Pasquier [6] defined a condensed representation  for association rules; the representation was characterized by  frequent closed itemsets and their generators. And the research  aimed to present rules with minimal antecedent and maximal  consequent. This technique can remove significant amount  of redundant association rules to help improve the quality  of the mining result. We propose to extend the [6] non-  redundant association rule method to sequential rule mining  area. Our aim here is to represent non redundant sequential  association rules with minimal antecedent (sequential pattern)  and maximal consequent (sequential pattern).

1) Non-redundant rule mining method SeqMinMax: The  non-redundant sequential rules are generated from the frequent  closed sequences and the sequential generators discovered. In  each closed sequence (considered as a sequence closure), we  use the sequential generators as antecedents, for each gener-  ator, we discover its consequent in the form of removing the  same prefix parts from closed sequence which the generator  has, the remaining part of this closed sequence is considered as  the correspondent consequent . The following two bases define  the non-redundant sequential association rules generated based  on closed sequential patterns and sequential generators.

Definition 3 (Sequential Min-Max exact basis ) Let  ClosedSeq be the set of closed sequential patterns, and for  each closed sequential pattern cs, lets denote Gencs the set  of sequential generators of cs. The sequential min-max exact  basis is :  SeqMinMaxExact = {r : gs ? (cs/gs) | cs ? ClosedSeq?

gs ? Gencs ? gs 6= cs}  Definition 4 (Sequential Min-Max approximate basis)  we denote GenSeq the set of sequential generators of the  sequential closed patterns in Closed, the min-max approximate  basis is:  SeqMinMaxApprox = {r : gs ? (cs/gs) | cs ? ClosedSeq?

gs ? GenSeq ? SeqClosure(gs) ? cs}  2) Closed sequence and sequence generator mining method  CSGM: One important task is to generate both closed se-  quences and sequential generators. CloSpan [7] is an algorithm   to generate closed sequences, but this algorithm does not  generate sequence generators. Genminer introduced in [8] is  a sequence generator mining algorithm, however, it does not  extract the closed sequential patterns. Both of these methods  require a separate algorithm to find either generators or closed  sequences. In this paper we propose CSGM (Closed sequence  and sequence generator mining) in Algorithm 1 which ex-  tends the CloSpan mining method. Our method can produce  both sequence generators and closed sequences at once. The  method first scans the database once, finds all frequent length-  1 sequences(each pattern only contains 1-item). Since the  generators of length-1 sequences are themselves, we put these  sequences and a set of their corresponding generators together  as sequence-generators pairs. Each sequence-generators pair  (s, sg) will be used as the input to the method CGSpan in  Algorithm 2. CSGM will then recursively call the CGSPan  method until all the closed sequences which have the same  prefix s in (s, sg) and their corresponding generators are  discovered. Details of the algorithms are shown in Algorithm  1,2 and 3.

Algorithm 1 CSGM (D, min sup, L)  Input: a database D, and min sup  Output: The complete closed sequence set L  1: Remove infrequent and empty sequences from D  2: S1 ? a set of all sequence-generator pairs of (s, sg),  s is a frequent 1-item sequence  3: For each sequence-generator pair(s, sg) ? S1  4: Do CGSpan ((s, sg), Ds, min sup, L )  5: Eliminate non-closed sequences from L;  Algorithm 2 CGSpan ((s, sg), Ds,min sup, L)  Input: A sequence s, sg is the set of minimal generators of s, a  projected database Ds, and min sup  Output: The prefix search lattice L  1: Check whether a discovered sequence s? exists such that  either s? ? s or s ? s?,  and database size Size(Ds) = Size(D?s)  2: IF such super-pattern or sub-pattern exists then    3: Modify the link in L , Return;  4: ELSE insert s into L  5: Scan Ds once, find the set of frequent items ?

such that ? can be appended to s to form a  sequential pattern s??.

IF support(s) = support(s??), then (s??)g = sg  ELSE (s??)g = FindGenerator(s??, Ds??)  6: IF no valid ? available then Return  7: For each valid ? do  Call CGSpan((s?a, (s??)g), Ds??, min-sup, L )  8: Return  Our work here extracts non-redundant sequential rules from  user navigation sessions, those rules represent users prefer-  ence among a series of clicks to their interested products. The  association rules between the products show the relationship  between the first several products which are viewed by users  and other products that user may be interested in.

Algorithm 3 FindGenerator(s,Ds)  Input: a sequence s, and projected database Ds  Output: Sequence generator set G, initially G is empty.

1: For each subsequence s? of s which is appeared in Ds  2: IF support(s?) = support(s) and s? is not a super  sequence of any sequence in G,then insert s? into G  3: Eliminate all super sequences of s? from G  4: Return  C. Query Expansion  A users query Q is represented by a set of terms Q =  {q1, q2, ...qn} that user provides to the search engine. In the  product search, the terms in the query are attribute values  of the product that the user is looking for. For searching  products online using a product search engine, a user needs  to provide the search engine with a query which consists of  the products or product attributes which the user is interested  in. The query, generally, is very short and insufficient to  present the users actual preferences or needs. In this paper,  we propose to expand users query by using association rules  among products. The query expansion aims to improve the  initial users query in order to retrieve more products that  might fit the users needs.

Let Q = {q1, q2, ...qn} be the query sent by a user to  the search engine. For each q in Q, q is a product or a  product attribute. If q is a product, by using the sequential    rules which have q as the antecedent, we can derive more  products which are given in the consequent of the rules. These  derived products can be added to the query. The rationale  of using sequential rules to expand user query is based on  the interpretation to the associations. The association between  the antecedent and the consequent of a rule indicates that the  consequent could happen if the antecedent happens. Therefore,  the derived products which are in the consequent of a rule  could be interested by the user if the user has showed his  interested to the product in the antecedent of the rule.



IV. PERFORMANCE EVALUATION  A case study was conducted for an on-line car selling  domain. We conducted experiments on a dataset collected from  this website. The dataset includes a set of 947153 web server  log records involving 3119 types of cars.

From the log data, we generated 153491 sessions from  which 124769 sequential rules were extracted including 57906  non-redundant rules (with absolute support set to 260). The  minimum support was set to 260 to 300(absolute), and the  minimum confidence is set to 50%. We evaluated the effec-  tiveness and efficiency of generating non-redundant rules and  the effectiveness of using the rules to improve recommendation  quality.

We compared our CSGM based non-redundant sequential  rule mining method with the Prefix-Span[9] based full se-  quential rule mining method. The full sequential rules were  extracted from full frequent sequential patterns which gener-  ated by Prefix-Span algorithm. We recorded the running time  and extracted rules numbers of both algorithms with variety   Fig. 1. rules numbers and time cost comparation: varies support but with  same confidence =50%  Fig. 2. recommendation effectiveness for full rules and non redundant rules)  minimum support but same minimum confidence settings (at  50%). The results are shown in Figure 1.

The results showed that non-redundant rule mining method  had great improvements both in running time and com-  pactness of mined rules to the full sequential rules mining  method. The rule set size could be significantly reduced by  using non-redundant rule mining, the average reduction ratio  could achieve to 66%. In addition, non-redundant rule mining  method were running much more efficient than the full rule    mining one, especially in the case of using lower minimum  support setting.

In another aspect, we evaluated recommendation improve-  ment of our proposed approach by comparing the recom-  mendation results with and without initial query expansion.

User session records which contained sequences of products  (patterns) viewed by each user were used as testing data in  this stage. For the query expansion method, each session  line were splitted into two parts, the first product of each  session were chosen for initial query expansion to get the  TOP-N recommender results, rest of them were considered  as the user interested products. For the method without query  expansion, the first product was directly used to get the TOP-  N recommender results. We record the matched products  between the TOP-N (N=10,20,30,40 and 50) retrieved results  and user interested products for both methods, and calculated  average recalls and precisions in left part of figure 2. We found  that using non-redundant sequential rules for query expansion  during input stage would have a higher recall and precision.

We also conducted an experiment by using both non-  redundant and full sequential rules for initial query expanding.

The result in right part of figure 2 showed that using non-  redundant sequential rules to expanding query has the same or  even slightly better recommendation effectiveness than using  full frequent sequential rules. Since the cost of generating full  frequent sequential rules is far more expensive than producing  the non-redundant sequential rules. We consider it is more  efficient using non-redundant sequential rules in information  retrieval, and those large amount of removed redundant rules  will not cause information loss problem.



V. CONCLUSION  We have proposed a method which could extract non-  redundant sequential rules for users initial query expansion.

Our work first aims to reduce the redundant sequential rules  in the way of mining sequential rules from closed sequential  patterns and sequential generators instead of frequent sequen-  tial patterns. The method performs significant redundancy and  time-cost reduction. During the recommendation effectiveness  test, we found that by using sequential rules of user navigation  history for initial query expansion could improve the recom-  mendation results and using non-redundant did not cause any  information loss. In addition, we believe that some redundancy    still exists in our method. Further redundancy eliminating will  be considered in our future work.

