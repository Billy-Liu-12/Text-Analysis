Research of Adaptation Technologies for Web Interface

Abstract  This paper proposed a new idea based on adaptation  technologies for the Web Interface. Web usage mining is  used as a mission for mining personalized information  from users. We try to attack the problem from both  function objects in the interface and the interface region.

It is helpful to design algorithms for finding frequent  function objects pairs and a subregional set, which is  based on association rules and adequate for this problem.

Combining with adaptation technologies, we propose an  adaptive algorithm for Web Interface to realize this new  idea. Being tested repeatedly by several users, this  proposal has primarily realized the Web Interface  Adaptation.

Keywords Web Interface, Web usage mmmg, adaption  technologies, frequent pairs, subregional  1. Introduction  With the increasing usage of Internet, Web Interface  (WI) is rapidly developing to become a bridge between  Information Exchanges. Resources and information used  by people almost need to exchange by the WI. Yet the WI  just provides a kind of timeless and changeless structure  to meet demands users for functions. And this unchanging  mode is studied by users, which results in many covered  functions. Although most of adaptive web sites and  software may adjust their interfaces by using the count of  function objects. Essentially, it is little useful to help  interface meet the user's requirements. When a people  oriented concept is pouring into modem life, the study of  the well-behave Web Interface will become a new hotspot  [1 ].

Web Interface has become an important intermediary,  which helps people get and use information from the  Internet. And people would like to pick up the function  they are interested in for interacting. However, designing  an adaptive WI can improve and even solve this problem.

By considering frequency of object functions people used,  interface space and active states of object functions, user  interaction ability and using behaviors will be deduced in  order to build a personalized library. Using the adaptive  978-1-4244-6709-9/10/$26.00 2010 IEEE   ZHAN Guo-hua  School of Information Science and Technology,  Hangzhou Normal University,  Hangzhou310012, China  ghzhan@hznu.com  decision based on the library, the User Interface will be  adjusted for meeting user requirements as far as possible.

Web Mining is a better measure to extract interesting  and potentially useful patterns and implicit information  from artifacts or activity related to the Wodd Wide Web  [2]. According to the data category we use when getting  personalized information, it can be divided into three  categories [2]: Web Content Mining, Web Structure  Mining and Web Usage Mining. Through taking  advantage of these mining methods, we try our best to  find new technology for deal with the WI adaptation  problem.

In area of the adaptive interface, there are two  important definitions:  1) Function Object Activity reflects the statistics on  the frequency and probability of triggering function  objects directly or indirectly by various methods.

2) Subregion Interestingness is demonstrated the  cumulative information content of events triggered in  different regions.

Ideally, function objects can take seat according to the  ticket number of subregions, which attributes so much to  a lot of data, effective algorithms and suitable functions.

Http request  User Interface  Figure 1. Numerical performance of activity of  every function object  In this paper, Fig. 1 introduce adaptation technologies  simply for Web Interface: given a personalized  knowledge library mainly made up of the frequency  ordered pairs set and subregion set and two algorithms for    implementing WI. Firstly, we need to collect a large  number of data from Web logs and temporary file stored  in disks, which help us to gather information of user  habits and relevant data of WI usage. Secondly, we  therefore propose the Next Function Object algorithm,  which use statistical cluster mining to find cohesive object  pair. Thirdly, it finds a place, a sub-region, where one  function object should be arranged orderly. In other words,  frequency ordered pairs reflect the statistic on using  function objects, and sub-region set show us a space  partition relevant to user's interest or habit. Putting them  together is the best way to make WI adapt individual user  automatically.

2. Study on Adaptation Technologies for Web  Interface  In this section we define two hearts of Web Interface  adapting problem, describe our own approach, and  present two algorithms' description.

2.1. Related Work  The research about how to create this novel interface  has been very complex and covers many application  domains, including adaptive interface framework, user  behavior learning and etc.

There is an enormous difference between the  traditional interface and the adaptive interface.

Redeveloping an adaptive interface framework is essential  to the whole study. This framework is related to interface  region division and automatic layout of function objects.

One of the most important properties is the constraint  based on layout techniques. Two kinds of constraints are  introduced: abstract and spatial [6]. Abstract constraints  are descriptions of high-level relations between various  components in the layout (e.g. X references Y).Spatial  constraints are relations that directly express geometric  structure of the presentation (e.g. X above Y).

User behavior should be described by a special  structure, which can help interfaces trace user footsteps  and learning user habits. The complex of the structure  might affect the efficiency of some algorithms, e.g.

prediction algorithm. The interface learns user behavior  by computational approaches: Bayesian network,  mixed-initiative and model-based.

2.2. Predict user next movement  The frequent pairs set from user action can help predict  user next operation. Counting up function objects  respectively is easy to find out the object user most  frequently operates, which dose not mean we can pick out  the one that would like to be used after back one. People's  continuous movements are not unmeaningful. We hope to  extract user next movement from the frequent pairs set.

Most people think that this prediction can be realized by  frequency statistics of function objects usage. However,  there is a lot of information ignored by conventional  thinking, for example relationship information among  function objects, misoperation and something useful for  getting subregional layout.

In this paper, we focus on the relation between one and  another function object. So this section describes an  uncomplicated and new approach to reflect the number of  operation of every function object and help find user's  next movement. Suppose there are n functional objects,  we use an n-dimensional feature  vector A = [A1,Az," ',A"f to store these objects. Fig.

2 shows a matrix A* (A* = AT . A) constructed by  the  4 anI an2 ann  Figure 2. Numerical performance of activity of  every function object  feature vector. It is for getting a ji that we use Ai and  A j from the log of every user on the server. a ji is the  times of triggering the function object Ai in the train of  Aj. The value of Ai 's activity is expressed numerically  by computing ai = La ji The matrix P IS  j  generated by the A*. The P ji in the matrix P is  calculated by conditional probability  measure Pi = LP( Ai I Aj ) .

j  This prediction takes a web server access log as input  and maps it into a form ready for clustering. Furthermore,  whereas traditional clustering is concerned with placing  each function object in exactly one cluster [5]. Actually,  the algorithm has to adjust strategies in order to cater to    practical needs because this recommendation is not  always the best choice for user. The cluster mining,  mentioned in this paper, may place a single function  object in multiple overlapping clusters. Based on the  operate-coherence assumption, the NFOA (Next Function  Object Algorithm) uses cluster mining to customize paths  of related objects. The algorithm has five basic steps:  a) Process the Web usage log into operation;  b) Data preprocessing, compute the co-occurrence  frequencies between function objects and create two  matrixes A" and P;  c) Create the graph corresponding to the matrix, relying  on conditional probability;  d) Find optimal paths of every different starting in the  graph and store these as rules library;  e) It is after one object being triggered that user will be  recommended to use another (itself or other) when he  want to have a next operation; Update matrixes  A* and P then turn to c).

2.3. Divide subregions of web interface  The display of web interfaces is the layout of function  objects. The statistics of the function objects alone is  obviously not enough for achieving adaptive dynamic  changes, because each user has a different regional  interest for the whole interface. Except getting the  frequent pairs set of the relevant objects, we should also  analyze the regional interest degrees of the personalized  interfaces. This way we can locate the suitable function  objects in the suitable places and therefore achieve the  adaptive effect for the interfaces. As shown in Fig. 3, it is  doable and appropriate to represent the vertical and  horizontal spatial location changes with two-dimensional  grid [O,h] x [O,g] for the layout of the web interfaces [3].

Y: (0, g)  (0,0)  X: h, 0)  DElD  @Function objects  @lnterface subregion  @Other interface subregions  Figure3. Example of interface region and  function objects in web interfaces    The overall interface has been divided into an interface  subregion set R = ? ,r2 ,    " rn} by function objects.

The number of function objects is n. The region is divided  into n pieces. Each interface subregion is defined by rj  as (x j ,Y j ,S r  j  , Prj  ) to represent its location, region  and interest degree in the whole interface. (x j ,Y j )  represents the coordinates of the center point of the  subregion in the interface; S r is the regional area of the J  region; Pr means the information density [4] of the J  subregion. The calculation formula (1) of Pr is as J  follows:   n  (I)  Sr J  is the statistics for the information amount of n  triggering events bn OJn is the weight of event bn. It  should be noted that the interest degree of the users for  the region is reflected not only by the information density  function Pr but also by the information increment J  M rj  of the region rj, especially for intermittent  interest changes of the users where it can feedback the  user interest in time. The interest degree of subregions is  determined by the r function, Check formula (2) for the  interest degree of each subregion:  Sr Ir  r ___  J  _._  J  _.p (2) j  - ISrj I  I  rj  j  The updating of interfaces should be determined by the  vitality degree P; of the function objects and the interest  degree r j of the interface regions. And function objects    are not independent but a little adhesive. The reflection of  each function object Ai in the interfaces are marked by  Gi Gi is defined to be (Xi'Yi,SAi'  P;), (Xi'Yi)  represents the coordinates of central region of function  objects. S A  i  is the grid region of the function object.

P; is the vitality of the function (0 ::;; P; < 1). It is also  known that the number of neighborhoods nb) of  different interface regions is different ( 1 ::;; n{rj )::;; n -1 ).

So the formula (3) is the fitness function of function  object Ai and interface subregion rj:  e(p )=max[o 1 . L [1 d(o'J ,p,Jd(o",p,J I  I  "  p'  J '? "EN('j) (??d(o'j,pJ)Htd(P",pJ)  (3)  dtp r ,p r ) . d' fu "  c. h' h x Y IS a Istance nctIOn In ?orm, w lC can  be calculated in the data pre-processing phase. Purposely,  the interface fitness function (3) maintains the overall  interface in an optimal state of harmony. We hope to  solve the problem by converting it into dynamic planning,  mainly achieving an optimal solution for each function  object Ai and subregion rj through the dynamic  planning algorithm, namely with the maximum match  value and minimum distance.

During the interface adaptive process of the function  objects, the overall adaptability value should be  maintained optimal. Only in this way can the function  objects Ai and subregions rj be undated with the  following rules:  a) Initialization layout of Ai generates the set of  function objects; Gridding of the interface region  based on function objects Ai forms the set of the  initial interface subregion;  b) If the calculated degree of adaptability of the vitality  P; of Ai and the interface subregion rj is not  larger than that in the past, it means the users are used  to the mode changes. The function keys and regions  are not adjusted, and the interfaces are not updated;    c) When rule b) is not met, Ai needs to find the  interest region that matches its vitality, which means if  the interface region can't meet the region of the  function objects, each Ai has the threshold ()  (Restraints make it 0 ::::; () ::::; 1 theoretically, and ()  is achieved in the calculation of adaptability. The  dynamic update replacement happens only when  (/ :::; () and L ()' ::::; L () ), and other  Aj={1,2, .. ,n}&&j*i may need to be adjusted, too.

d) After c) appears and is executed, the interface needs to  be re-divided.

Based on the above description, the threshold value of the  matching between function objects and interface regions  stabilizes after several updates. The initial threshold ()  is O. Each interface update leads to the adaptive change of  (). The larger the threshold is, the more suitable the  functional objects and interfaces are. In other words, the  larger the overall interface () is, the better the interface  accords with the user rules.

3. Experiment and conclusion  The web interface used in the experiment is IE6.0  browser. The viewable region area calculated from the  screen resolution is 779 x 600. There are 9 function keys,  namely function objects. 4 people use the interface. The  server and machine in the experiment run in Windows XP  system, producing near 2 thousand records.

First of all, we get values of some important  parameters from the database and logs on the server,  i.e. a ji ,P ji' I{bn), () etc. These parameter values stray  from our estimation value slightly, but we know that  users' needs can be met sometimes by communicating  with our experimenters. Secondly, methods investigation   of users' requirements was conducted using  questionnaires and communication face to face.

The NFOA is simple and easy to implement which  helps servers save a part of computational effort required,  because it does not find a whole path - an ordered pairs  queue records all of function objects user will operate. In  a way, finding the next ordered pairs out of n function  objects needs to pick up any two function objects and then  search all pairs for the best pairs as the next movement    recommendation, which requires O{n2 ) . In the NFOA,  time complexity is reduced to O{n) ,because making use  of the matrix P to find the next function object seems to  know the Ai as long as (Ai '  A j ) is extracted from  a ji' However, getting the subregional set is still a big  problem because of difficulties in getting the amount of  information and setting rules of layout. It is even as  experimenters say: the layout of a whole interface is not  always satisfying. Our detailed technical and aesthetic  analyses indicate that it needs an additional interface rules  set for adjusting the layout slightly to user's visual.

Moreover, more factors still should be taken into account,  for example, time place and so on.

Although adaptation technologies for web interface  have implemented initially, there are still more work  waiting for us.

4. References  [1] WU Gang, DONG Jinxiang, HE Zhijun and CHEN Gang,  "The Model and Implementation of a Graphical Intelligent User  Interface Management System",.lournal of Software, Beijing,  1997.4, p. 283-290.

[2] LIU Bing, Web Data Mining, Tsinghua University Press,  Beijing, 2009.

[3] XU Xiaohua, CHEN Ling, "An Adaptive Ant Clustering  Algorithm", Journal ofSofiware, Beijing, 2006.9, p. 1884-1889.

[4] CHENG Guo-qing, CHEN Xiao-yun, "Clustering algorithm  for multi-density based on grid relative density", Computer  Engineering and Applications, Beijing, 2009.2, p. 156-169.

[5] M Perkowitz, 0 Etzioni, "Towards adaptive Web sites:  Conceptual framework and case study", Artificial Intelligence,  Elsevier Science, Elsevier, 2000, p. 245-275.

[6] S .Hossein Sadat and Ali A. Ghorbani, " A Presentation  Description Language for Adaptive Web Systems", CNSR'05,  Canada, 2005, p. 169 - 175.

