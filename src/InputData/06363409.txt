A Genetic Algorithm for Discovery of Association Rules

Abstract?A genetic algorithm is proposed in this article for discovery of association rules. The main characteristics of the algorithm are: (1) The individual is represented as a set of rules (2) The fitness function is a criteria combination to evaluate the rule?s quality ? high precision prediction, comprehensibility and interestingness ? (3) Subset Size-Oriented Common feature Crossover Operator (SSOCF) is used in the crossover stage (4) mutation is calculated through non-symmetric probability and selection strategy through tournament and (5) the algorithm was implemented using the library lambdaj.

Finally, the genetic algorithm effectiveness and the quality of the rule in the experimental results are shown.

Keywords-Association Rules; Data Mining; Genetic Algo- rithm; Knowledge Discovery

I. INTRODUCTION  In Knowledge Discovery and Data Mining (KDD) most  of the problems are represented as combinatorial optimiza-  tion problems. One of the most important problems is the  extraction of association rules.

The association rule technique was introduced in 1993 by  Agrawal et al. [1] and it is particularly useful for discovery  of hidden relations which might be interesting when it comes  to large databases.

The genetic algorithms are important when discovering  association rules because they work with global search to  discover the set of items frequency and they are less complex  than other algorithms often used in data mining [5].

The genetic algorithms for discovery of association rules  have been put into practice in real problems such as commer-  cial databases, biology and fraud detection event sequential  analysis [6].

One of the most important developed algorithms for  discovery of association rules is ASGARD (Adaptive Steady  state Genetic Algorithm for association Rule Discovery)1,  specially designed for bioinformatics.

In [6] there is a comparison of the main algorithm  techniques for the extraction of association rules as well  as a comparison of some rules quality measures, such as:  Confidence, PS, Lift, Conviction and Jmeasure.

The article is divided into six sections. Section II basic  concepts of association rules. Section III presents a brief  1http://www.lifl.fr/ jourdan/download/asgard.html  description of genetic algorithms. Section IV presents the  proposed genetic algorithm. In section V there are the ex-  perimental results and in section VI there are the conclusions  of work.



II. ASSOCIATION RULES  Association Rules Mining (ARM) consists in finding the  set of all item subsets or attributes which often happen in  database, it is also about extracting relations, associations,  patterns or casual structures which can help to determine  how an item subset influences the presence of other subsets  [8].

The idea of association rules is originated since the  market-basket where you want to find dependence between  two items X and Y . A good example is the way ?A client who wishes to buy products X1 and X2 will also buy product Y ?.

An association rule is an implication X ? Y , where X is the antecedent (a conjunction of conditions) and Y is the consequent (predict class). Besides, X and Y are disjoint sets of items, i.e., X ? Y = ?.

There are three general characteristics that discovery of  rules must satisfy; to have specifically a high precision  prediction, to be understandable and to be interesting [3].

A measure to predict the association rule precision X ? Y is the confidence. This measures the reliability of infer- ence made by the rule which is defined like:  C = |X ? Y |  |X| (1)  Where |X| is the number of examples that satisfies every condition in the antecedent X and |X ? Y | is the number of examples both of which satisfy the antecedent X and it has the class predicted by the consequent Y . But the confidence favors the rules overfitting the data [3]. Due to  this it is necessary to determine the way a rule is applicable  in dataset, such as, support. It is defined as:  S = |X ? Y |  N (2)  Where, N is the total number of examples. Support is  often used to eliminate non interesting rules [9].

DOI 10.1109/SCCC.2011.37    DOI 10.1109/SCCC.2011.37     A measure to determine a rule intestingness is to find  surprisingness of an attribute based on each attribute infor-  mation gain [4].



III. GENETIC ALGORITHM  Genetic algorithms are methods based on biological mech-  anisms, such as, Mendel?s laws and Darwin?s fundamental  principle of natural selection. The most important biological  terminology used in a genetic algorithm is [6]:  ? The chromosomes are elements on which the solutions  are built (individuals).

? Population is made of chromosomes.

? Reproduction is the chromosome combination stage.

Mutation and crossover are reproduction methods.

? Quality factor (fitness) is also known as performance in-  dex, it is an abstract measure to classify chromosomes.

? The evaluation function is the theoretical formula to  calculate a chromosome?s quality factor.

Genetic algorithms simulate the evolution process of  populations. A problem is represented by individuals (also  called chromosome or genotype of the genome), which  create a population of solutions. The genetic changes, which  are simulated on the chromosome, are performed using  operators such as crossover and/or mutation. These changes  are applied in order to achieve a population of solutions  increasingly adapted to the problem. This adaptation is then  evaluated by a quality factor called fitness.



IV. PROPOSED GENETIC ALGORITHM  Recently algorithms development for discovery of de-  cision rules has been about increasing efficiency. That is  reducing computational cost.

Association rules mining computational cost can be re-  duce to four ways [8]. One of this ways is reducing the  number of passes over the database. The proposed algorithm  is oriented towards this direction, using lambdaj2. Lambdaj  is a library which makes easier the access collections ma-  nipulation without explicit loops in a pseudo-functional and  static way.

Below each one of proposed genetic algorithm stages and  their correspondent characteristics.

A. Initial population  The individual representation is based on the Pittsburgh  [7], approach which is a number of rules X ? Y (IF X THEN Y ) they are codified as a string and handled as an individual (chromosome). Every individual has a fitness  value. A objective in a system based on rules consists in  searching high performance, this is, to make optimum use  of the fitness function.

2http://code.google.com/p/lambdaj/  B. Fitness function  Fitness function is the need of measuring the rule quality.

Thus, confidence and support are used for high precision  prediction; to measure comprehensibility, a value which  represents a relation between the number of rules and the  number of conditions and to measure the interestingness,  the attribute?s information gain. A rule?s prediction can be  represented by a matrix, called confusion matrix (Table I).

Association rule confidence (Eq. 1) can be defined, based  on the confusion matrix as:  C = TP  TP + FP (3)  Where TP is the number of instances which match with  the rule?s antecedent and consequent; FP is the instances  which match only with the rule?s antecedent. This measure is  known as positive predictive value or precision. The support  (Eq. 2) can also be represented in confusion matrix terms  like:  S = TP  TP + FN + TN + FP (4)  Where, FN is the instances which match only with the  rule?s consequence.

Predicted class  True class Yes No  Yes TP: True?Positive FN: False?Negative  No FP: False?Positive TN: True?Negative  Table I CONFUSION MATRIX  A value (K) which represents a number of rules and the number of these rules conditions, can be taken for the  characteristic of comprehensibility [2]. It is a proportional  inversely value relative to the number of conditions N (X) in the rule?s antecedent X . Whether a rule can have at least M conditions the comprehensibility can be defined as:  K = 1 ? (N (X)/M) (5)  It is necessary to calculate the entropy H for the database for the interestingness characteristic:  H(X) = ? n?  i=1  p(xi) log p(xi) (6)  Where, n is the number of different values in the dataset X; pi is the values frequency i in the dataset X . Now the expected entropy is calculated by the attribute A as:  H(X,A) = H(X) ? m?  j=1  p(aj)H(Xaj ) (7)  Where, m is the attribute different values number A in X; aj is j  th the possible value of A and H(Xaj ) is a subset of X which contains all the items where the value of A is aj .

The information gain G from the attribute A is used to calculate the rule?s interestingness like:  G(H(X,A)) = H(X) ?H(X,A) (8)  Therefore, the interestingness rule evaluation objective is:  I =  k?  j=1  G(X,Aj)  (9)  Finally the fitness function is:  F = (w1 ? C ? S) + (w2 ?K) + (w3 ? I) (10)  Where, w1, w2 and w3 are user-defined weights.

C. Selection  The proposed genetic algorithm uses tournament selection  (? ). This strategy consists in choosing individuals randomly uniform from the current population to execute many tour-  naments, where each tournament winner is the best fitness  individual.

D. Crossover  The proposed algorithm uses a specific type of crossover  for the chosen attributes: crossover Subset Size-Oriented  Common feature Crossover Operator (SSOCF) (Figure 1),  the advantages of this type of crossover are [6]:  ? Conservation of the useful information sets  ? Non-dominated set solutions better exploration  ? To produce children with the same parents distribution  The common attributes are preserved by the children and  the non?common attributes are inherited by ith father with  probability ni ? nc  nu , where, ni is the number of chosen  attributes from the parents, nc is the number of common attributes among them and nu is the number of non-shared chosen attributes.

E. Mutation  The mutation stage selects a number n of genes for chang- ing (in the algorithm is 4 ), this bits are chosen randomly and  changed by a non-symmetric probability. To change from 1  to 0 the probability is equal to 0.4 and to change from 0 to  1 the probability is equal to 1.



V. EXPERIMENTAL RESULTS  A. Dataset  The dataset is extracted from UCI repository for Machine  Learning3 it has the following characteristics (Table II):  The nineth attribute class is treated as the objective  class and it is among the values: not recom, recommended,  very recom, priority and spec prior. The rest of attributes  and their correspondent values are listed in Table III.

3http://archive.ics.uci.edu/ml/  Name Attributes Instances  Nursery 9 12960  Table II DATASET CHARACTERISTICS  Attributes Values  Parents usual, pretentious, great pret Has nurs Proper, less proper, improper, critical, very crit Form complete, completed, incomplete, foster Children 1,2,3, more Housing convenient, less conv, critical Finance convenient, inconv Social nonprob, slightly prob, problematic Health recommended, priority, not recom  Table III SUMMARY OF NURSERY DATASET  B. Parameters setting  The parameters used are the population, number of itera-  tions, number of chosen individuals to make the tournament  strategy (? ), the mutation probability (in the change from 1 to 0) and the user-defined weights.

The Table (IV) presents the parameters fitting to make the  experiments.

Population Iterations ?size pmut w1 w2 w3 300 100 150 0 .4 0 .5 0 .3 0 .2  Table IV PARAMETERS SETTING  C. Result analysis  In figure 2 the genetic algorithm behavior is watched  through generations, where the initial fitness generation of  the best individual fitness was 41.86, while the individual  fitness from the last generation was 517.16. Besides, the  average fitness in relation to maximum fitness shows how  the population does not fall down in a local optimum.

0  10  20  30  40  50  60  70  80  90  100  F it  n es  s  Generations  Maximum fitness Average fitness  Figure 2. Generations vs Fitness     Figure 1. Crossover using Subset Size-Oriented Common feature Crossover Operator (SSOCF)  Rule Accuracy F K I  IF has nurs IN (?improper?,?less proper?,?proper?) THEN class IN (?complete?) 0 .63 104 .66 0 .875 521 .06  IF form IN (?complete?,?completed?,?foster?) AND has nurs IN (?improper?,?less proper?,?proper?) 0 .64 155 .90 0 .75 777 .68 THEN class IN (?priority?)  IF has nurs IN (?critical?,?improper?,?less proper?,?proper?) AND children IN (?1?,?2?,?3?) AND form IN (?complete?,?completed?,?foster?) 0 .60 195 .97 0 .625 978 .38 THEN class IN (?priority?)  IF housing IN (?convenient?,?critical?) AND form IN (?complete?,?completed?,?foster?) AND has nurs IN (?critical?,?improper?,?less proper?,?proper?) 0 .62 188 .88 0 .5 943 .29 AND children IN (?1?,?2?,?3?) THEN class IN (?priority?)  IF social IN (?nonprob?,?problematic?) AND housing IN (?convenient?,?critical?) AND children IN (?1?,?2?,?3?) AND has nurs IN (?improper?,?less proper?,?proper?) 0 .67 517 .16 0 .375 2585 .01 AND form IN (?complete?,?completed?,?foster?) THEN class IN (?priority?)  Table V EXPERIMENTAL RESULTS  The best rules obtained in the experiments execution are  summarized in Table V, where, besides the association rule  obtained, the accuracy, the fitness result, the comprehensi-  bility and the interestingness are presented.

Besides measuring the rules quality, the accuracy of this  rule was found in order to determine a precision level. The  accuracy based on the confusion matrix (Table I) is equals:  A = TP + TN  TP + TN + FP + FN (11)  In figure 3 it is observed how as the number of individuals  and number of generations increase the found rule?s decision  accuracy is better.

Besides the results obtained, the inverse relation between  the comprehensibility and the interestingness can be ob-  served, the rules with a low level of comprehensibility  present the highest interests values of the rule. It was also  observed that the lowest comprehensibility level, the highest  the accuracy of the rule.

300 0        0.25  0.5  0.75   Accuracy  Individuals  Generations  Accuracy  Figure 3. Accuracy vs Individuals vs Generations

VI. CONCLUSIONS  A genetic algorithm for discovery of association rules  is proposed in this article. The proposed algorithm is an  alternative to find a set of association rules with high  precision prediction, comprehensibility and interestingness  are based on the experimental results.

The use of kind of crossover (SSOCF) on the proposed  algorithm allows the sets of useful information continuance  in order to be inherited, regardless the number of generations  individuals have.

The use of lambdaj library in the algorithm allows to  diminish the database querys, reducing computational cost,  apart from making this present work going towards efficient  and recent algorithms development in order to discover  association rules.

