Efficient Hybrid Rule Pruning for Intrusion Detection using

Abstract: Evolutionary algorithms for data mining have recently received increased attention due to their performance of the global search. Genetic Network Programming(GNP) has been proposed in recent years as one of the evolutionary algorithms and applied to data mining successfully, because of the prominent representation ability with the compact program derived from the directed graph structure and node reusability of GNP. Conventional GNP-based rule mining focused on binary-valued transaction data. Therefore, Fuzzy GNP based class association rule mining has been proposed to deal with the continuous-valued data types in the real network connection data. In this paper, firstly, many interesting rules are extracted by Fuzzy GNP-based hybrid class association rule mining from training data. Then, a post-processing method is used to prune class association rules. After that, a classifier is modeled based on the multi-dimensional proba- bility distribution for testing data. Experiments on KDDCup1999 data show the substantial improvement of the detection ability of the proposed method.

Keywords: Intrusion Detection; Fuzzy GNP; Genetic Algorithm; Multi-Dimensional Probability Distribution; Rule Pruning  1. INTRODUCTION  As the dependence on computers and networks in- creases in all aspects of lives, it is becoming more and more important to protect computers or networks from attacks or hackers. Therefore, firewall, which is a prevention-based approach, is designed as a part of the computer system or network to permit or deny network transmissions based on a set of rules and other criteria.

Whereas, it is difficult to ensure computers or networks absolutely by the firewall. In order to give another barrier to defend the computer systems, an alternative approach called intrusion detection came out. It provides a differ- ent notion of security in computer systems[1][2]. The ob- jective of intrusion detection is to identify the users (hosts or programs) who are using the system without autho- rization or abusing their priviledges under the legitimate access to the system.

In the last decade, Evolutionary Computation(EC) has experienced a tremendous growth in both theoretical analysis and industrial applications. Especially, recently, EC in data mining for extracting comprehensible rules has received increased attention as a promising technique because of its robustness and adaptiveness, performing a global search in the space of candidate solutions[3]. And its scope has covered a wide variety of computational al- gorithms and techniques[4]. EC was originally divided into four branches: Evolution Strategy(ES), Evolution- ary Programming(EP), Genetic Algorithm(GA) and Ge- netic Programming(GP)[5]. Since EC has simple con- cept, computation, capability of self optimization and ro- bustness to dynamic environments, EC has been intro- duced in the field of intrusion detection. In [6], GA is used as an unsupervised scheme to provide the level of proximity between the new event and the existing clus- ters to make the optimal decision. [7] proposed a rule  evolution approach based on GP for detecting known or novel attacks on the network.

All of the algorithms applied to intrusion detection can be mainly divided into two categories: misuse detection and anomaly detection. Misuse detection uses known attacks and attempts to match the current behavior with those attack patterns. The main advantage of misuse de- tection is that it focuses on the analysis of the audit data and typically produces few false results. However, an in- herent drawback of this method is that it cannot detect novel attacks. Anomaly detection, which uses normal be- haviors of network traffics, can detect unknown attacks by detecting significant deviations from the established normal patterns. Whereas, the disadvantage of detecting previously unknown attacks is paid for in terms of high false positive rate[8][9]. Therefore, a synthetical intru- sion detection is needed, which combines the feature of misuse detection that analyzes the known intrusion au- dit data and the feature of anomaly detection which uti- lizes normal behaviors. A synthetical intrusion detection method is proposed based on Genetic Network Program- ming(GNP) in [10]. GNP is one of the evolutionary al- gorithms, which is an extension of GA and GP. Differ- ent from the string structure of GA and tree structure of GP, GNP has the directed graph structure which can deal with partially observable processes and the reusability of node. Such advantages make GNP use really necessary nodes repeatedly and create compact structures to over- come the bloat problem of GP[11]. GNP-based associ- ation rule mining was proposed in [12], which can ex- tract rules through its evolution generation by generation without identifying frequent itemsets used in Apriori-like methods.

Basically, the proposed method in this paper combines the positive features of misuse and anomaly intrusion de-  SICE Annual Conference 2011 September 13-18, 2011, Waseda University, Tokyo, Japan  PR0001/11/0000-2822 ?400 ? 2011 SICE- 2822 -    tection to achieve higher detection rate and lower false alarm rate. Since the proposed method obtains the rules for all the classes during the training phase, the inte- grated method can detect not only intrusive attacks, but also anomalous connection transactions. Meanwhile, we proposed a hybrid rule mining algorithm by introduc- ing Fuzzy set theory into the conventional GNP-based class association rule mining[13]. In this paper, a two phased pruning procedure is proposed using GA, and multi-dimensional probability density functions for de- tecting the intrusions are introduced [13]. In addition, the weight parameters of the classifier are tuned with rule pruning to get better solutions.

The rest of this paper is organized as follows. Sec- tion 2 describes how to execute hybrid rule mining us- ing GNP. In section 3, the post-processing method of class association rules is described, while in section 4, the multi-dimensional probability distribution based classifi- cation is represented. Then, the simulation results using KDD99CUP data are given in section 5. Finally, the con- clusions are given in section 6.

2. HYBRID RULE MINING USING GNP  In this section, we firstly review the basic concept of Genetic Network Programming. Then, the conventional class association rule mining using GNP is briefly intro- duced. Finally, we describes how to extract hybrid rules based on GNP in detail.

Hybrid rule mining successfully combines Fuzzy set theory with the conventional class association rule min- ing, which utilizes discrete attributes and continuous at- tributes in one single rule.

2.1 Mining Class Association Rules by Genetic Net- work Programming  Genetic Network Programming, namely GNP, is an evolutionary optimization algorithm, which evolves the directed graph structure as solutions instead of using strings in GA or trees in GP. As Fig.1 shows, the ba- sic structure of GNP has three kinds of nodes: a start node, several processing nodes and several judgement nodes. Start node is used to determine the first node to be executed. A set of judgement nodes, J1,J2, ...,Jm, work as the functions to make decisions. Processing nodes represent the functions of actions or processes to be taken. The node transition begins from the start node, then the next node which is going to be executed is de- termined by the node transition. And the number of nodes and their concrete functions depend on the prob- lem, which are determined by the designers. In addition, judgment nodes have conditional branches, whereas pro- cessing nodes have not. GNP evolves the graph struc- ture with predetermined number of nodes, and reuse these judgement nodes and processing nodes during the execu- tion. This kind of compact structure makes the evolution more efficient and never cause the bloat in GP.

S  P1  P2  P3 J2J3  J4J5  J1  Judgment Node  Processing Node  Start Node  Fig. 1 Basic structure of GNP  P1  C A1=1  C A2=1  C A5=1  C A9=1  N  Yes Yes Yes a b c d  a(k) b(k) c(k) d(k)  No  P2  Yes  Fig. 2 Class association rule represented by GNP  2.2 Fuzzy GNP-based Hybrid Rule Mining Traditional association rules have the forms like X ?  Y which represent the association relationships or corre- lations among a set of attributes in a database. Conven- tionally, three kinds of measurements are used to eval- uate association rules. Since ??? divides one rule into the antecedent part and consequent part. Therefore, sup- port is used to represent the fraction of tuples which con- tains the antecedent and consequent part in the database.

Whereas, con f idence is defined as the ratio of the sup- port for antecedent part over the support for the com- plete rule. As to the chi-square value (?2) for measur- ing the significance of rules, ?2 of the rule X ?Y can be calculated by?2 = N(z?xy)   xy(1?x)(1?y) , where, support(X) = x, support(Y ) = y, support(X ?Y ) = z and the total num- ber of tuples is N.

Class association rule is a kind of association rule whose consequent part has class attributes. GNP has been shown to be an effective method to mine association rules or class association rules[12]. Different from the other as- sociation rule mining methods like Apriori and FP-tree, GNP is an evolutionary method and extracts many rules generation by generation. Fig. 2 is an example to explain how class association rules can be generated by GNP. P1 is a processing node which serves as counting the mea- surements for extracting class association rule. A1 = 1, A2 = 1, A5 = 1 and A9 = 1 denote the functions of the judgement nodes. N is the number of total tuples. A set of a, b, c, d and the other set of a(k), b(k), c(k) and d(k) are the numbers of tuples moving to the Yes-side at each judgement node and the numbers of tuples moving to Yes-side at each judgement node under the condition of class k, respectively. P2 is the next processing node to end the transition which is regarded as one rule. Table. 1  - 2823 -    P1  C  A1 Count_H  N  No  C  A2 Land=1  No  C  A9 Duration_L  No  C  A5 Service =http  No  Yes Yes Yes Yes a b c d  a(k) b(k) c(k) d(k)  P2  Yes  No  Ai  0.0  1.0  r iQ  iQ r  iQ r >  Fig. 3 Hybrid rule mining based on Fuzzy GNP  shows the candidate rules extracted by GNP in Fig. 2 and the calculations of support values and confidence values of these candidate rules.

Table 1 Candidate class association rules  associationrule support con f idence A1 ? (C = k) a(k)/N a(k)/a  A1 ?A2 ? (C = k) b(k)/N b(k)/b A1 ?A2 ?A5 ? (C = k) c(k)/N c(k)/c  A1 ?A2 ?A5 ?A9 ? (C = k) d(k)/N d(k)/d  According to the measurements of support, con f idence and ?2, we defined the candidate rules satisfying Eq.(2), Eq.(3) and Eq.(4) as interesting.

?2 ? ?2min, (1)  support ? supmin, (2) confidence ? confmin, (3)  Conventional class association rule mining methods are limited to handle attributes with binary values, which means an attribute exists or not in a transition. On the other hand, network connection data have both discrete and continuous attributes. Hybrid class association rule mining successfully applied Fuzzy GNP to the conven- tional class association rule mining, which utilizes dis- crete attributes and continuous attributes in one single rule. Fig. 3 shows an example of hybrid rule mining representation. The rule starts from the first processing node P1 and connects to a judgement node as shown in Fig. 3. Considering the attributes having Fuzzy mem- bership functions, the first judgement node examines the Fuzzy membership value of Count High in continuous attribute A1, the second judgement node examines the value of binary attribute A2 of Land = 1, the third judge- ment node examines the value of symbol attribute A5 of Service = htt p and the following judgement node exam- ines another Fuzzy membership value of Duration Low in continuous attribute A9. In Fig. 3, N is the number of total tuples. a, b, c, d, a(k), b(k), c(k) and d(k) have the same meaning as the conventional class association rule mining. The other important point is the node tran- sitions in GNP when examining a continuous attribute  and evolving the Fuzzy membership functions. Fig. 4 shows the node transition in Fuzzy GNP, which is called accurate probabilistic node transition[14]. In the accu- rate probabilistic node transition, a random number r is generated and compared to the membership value of the continuous attribute ?Qi(ai), where ai is the continuous value of the ith continuous Fuzzy attribute Ai, and ?Qi is its Fuzzy membership value. If the random number is smaller than or equal to the membership value, then go to the Yes-side of the judgement node, otherwise, go to the No-side of the judgement node. After initializing the parameters of ?i, ?i of Fuzzy attribute Ai based on the distribution of the data, parameter ?i is automatically calculated by 2?i ??i. Then, the initialized Fuzzy mem- bership function ?Qi is evolved by nonuniform mutation with GNP evolution.

2.3 Fitness Function and Genetic Operators GNP individuals are defined as a tool to pick up can-  didate rules. Therefore, the fitness function of GNP indi- viduals is defined by  F = ? r?R  {?2(r)+10(n(r)?1)+?new(r)}, (4)  where, R is set of suffixes of extracted important rules, ?2(r) is the ?2 value of rule r, n(r) is the number of at- tributes in the antecedent of rule r. ?new(r) is an addi- tional constant defined by the following equation  ?new(r) =  { ?new, when rule r is newly extracted, 0, otherwise.

(5)  ?2(r), n(r) and ?new(r) are concerned with importance, complexity and novelty of rule r, respectively.

Three kinds of genetic operators are implemented in each generation in GNP. Selection is to select individ- uals in the view of their fitness. When implementing crossover, two new offerspring are generated from two parents obtained using tournament selection by exchang- ing the genetic information. Each node in parents is se- lected as a crossover node with the probability of Pc. Mu- tation is executed in one individual obtained by tourna- ment selection and a new one is generated. Two kinds of mutation rate are used in the application of GNP-based data mining. Pm1 is the probability that the branch is se- lected to reconnect to another node. Pm2 is another prob- ability that the node function is selected to change to an- other one.

3. TWO-PHASES RULE PRUNING  In the rule mining procedure, a huge number of rules are generated. It is time consuming to build a classifier using all of the generated rules, and many of these class association rules may be redundant, irrelevant and even misleading. Hence, it is very important to reduce the number of rules and select the effective ones for intru- sion detection. In this section, a two-phases mechanism is  - 2824 -    used to prune the rules. Phase-1 is based on the matching degree of the rules with data, while phase-2 uses Genetic Algorithm to prune the rules.

3.1 Rule Pre-pruning based on the Matching Degree The matching degree based method is a kind of statis-  tic rule pruning method. Generally speaking, the average matching degree of data with rules is calculated and if it is less than a threshold value, then the rule is pruned since it is irrelevant.

The averaging matching degree of rule r in class k with data d can be defined by Eq. (8).

Matchk(d,r) = Nk(d,r) Nk(r)  , (6)  mk(r) =  ?Dk? ?d?Dk Matchk(d,r), (7)  where, Nk(r) is the number of attributes in the an- tecedent part of the rule r in class k; Nk(d,r) is the num- ber of matched attributes with data d in the antecedent part of the rule r in class k; Dk is the set of suffixes of data in class k. The mean value mk and standard devia- tion ?k of mk(r) over the rules in class k is calculated as follows:  ?k =  ?Rk? ?r?Rk mk(r), (8)  ?k = ?  ?Rk? ?r?Rk  (mk(r)??k)2, (9)  where, Rk is the set of suffixes of rules in class k. There- fore, if the average matching degree mk(r) of rule r with data falls in the region of less than ?k +? ? ?k, that is mk(r)< ?k +? ??k, then rule r regarded as redundant is pruned.

3.2 Rule Pruning based on Genetic Algorithm GA is a directed random search technique and has  been widely applied to optimization problems, and it can help to find out the optimal solution globally[15][16]. GA uses a performance criterion for evaluating solutions and a population of possible solutions is evolved to search for the global optimum.

In this phase, we consider real-coded GA, since binary coded or classical GAs are less efficient when applied to multidimensional and continuous problems. The general evolution scheme of GA is shown as Fig. 4. In Fig. 4, the gene of GA consists of the flags of the rules, which indicates whether the rules are pruned or not.

The objective of intrusion detection system is to im- prove the accuracy of detecting intrusions and avoid false alarms. Therefore, considering these two factors, we evaluate the performance of each individual by the fol- lowing function:  F = ? ?AC+?1 ?NFR+?2 ?PFR (10) where, AC is the accuracy which represents the rate of classifying data correctly; NFR is negative false rate  Procedure of GA begin  i->0                     // i: number of iteration initialize P(i)                        // P(i): population for iteration i  evaluate f(P(i))                     // f(P(i)) : fitness function while(not termination condition) do  begin i->i+1 select 2 parents p 1and p2 from p(i-1) perform genetic operations (crossover and mutati on) reproduce a new P(i) evaluate f(P(i))  end end  (c ro sso ver and  mutatio n)  Fig. 4 The flowchart of GA evolving  which means the rate of the intrusion data labeled as nor- mal, whereas, PFR is positive false rate that is the rate of the normal data labeled as intrusion. ? , ?1 and ?2 are the weights to be adjusted. In the real coded GA, the uniform crossover is implemented, while we consider a non-uniform mutation.

4. PROBABILISTIC CLASSIFICATION WITH MULTI-DIMENSIONAL  PROBABILITY DENSITY FUNCTION  After selecting interesting class association rules in- cluding normal and intrusion ones, another crucial phase is rule-based classification. The probabilistic classifica- tion for improving the classification accuracy concerns three aspects. First, the multi-dimensional probability density function is used. Second, the probability that data is classified to anomaly intrusion is also considered.

Third, weights are used to improve the classification ac- curacy.

4.1 Average Matching Degree of Data with Rule The matching degree of data d with rule r in class k  including p continuous attributes and q discrete attributes is defined by:  Matchk(d,r) =  p+q ( ?  i?CA ?Qi(ai)+ t), (11)  where, CA is the set of suffixes of continuous attributes of rule r in class k and t is the number of matched discrete attributes with data d of rule r in class k. ?Qi(ai) rep- resents the Fuzzy membership value of data ai of Fuzzy attribute Ai with linguistic term Qi. Then, the average matching degree can be calculated by  mk(d) =  ?Rk? ?r?Rk Matchk(d,r), (12)  where, Rk is the set of suffixes of rules in class k in the pruned rule pool.

4.2 Multi-dimensional Probability Density Function After estimating the joint probability density function  f (x1, ...,xk, ...,xK) of the average matching degrees of all training data d ? Dtrain with rules, the probability that  - 2825 -    new connection data d ? Dtest belongs to class k is repre- sented as follow:  Pk(d) = ? 1.0  mK(d) . . .

? mk(d)  . . .

? 1.0  m1(d)  f (x1, . . . ,xk, . . . ,xK)dx1 . . .dxk . . .dxK ,  (13)  where, K = ?C?, C is the set of suffixes of classes and Dtest is the set of suffix of testing data. Hence, the probability that d ? Dtest does not belong to class k ?C is defined by: P0(d) = 1? ?  k?C Pk(d). (14)  5. SIMULATIONS  To evaluate the performance of the proposed algo- rithm, the simulations are conducted using intrusion de- tection database of KDDCUP1999(KDDCUP?99). Till now, it still served as a reliable benchmark data set for many network-based intrusion detection algorithms. KD- DCUP?99 intrusion detection dataset contains a standard set of data to be audited. And each record represents a TCP/IP network connection with total 41 features. All the connections can be divided into 5 categories includ- ing normal network connection, and other four categories are Denial of Service Attack(DoS), User to Root At- tack(U2R), Remote to Local Attack(R2L) and Probing Attack. In our experiments, the parameter setting of GNP are summarized in Table. 2. The population size of GNP is set at 120. Due to the complexity of intrusion detec- tion, the number of processing nodes and judgment nodes are set at 10 and 100, respectively in order to diversify- ing the GNP structure to extract more interesting rules.

Additionally, we used ?2 = 6.63, con f idence = 0.8 and support = 0.1 as the standards to extract interesting rules.

As to crossover rate and mutation rate, we selected 1/5 for crossover, 1/3 for mutation rate1 and 1/3 for muta- tion rate2.

Table 2 Parameters for Fuzzy GNP  Parameter Value Population size 120 Generation size 1000  Processing nodes 10 Judgement nodes 100 Crossover rate 1/5 Mutation rate1 1/3 Mutation rate2 1/3  Minimum support 0.1 Minimum con f idence 0.8  Minimum ?2 6.63  We choose 10,000 audit records for the training from KDDCUP?99 dataset randomly which contains 5,000 normal audit records and 5,000 intrusion audit records including two kinds of attacks, neptune and smurf. Test- ing data contain 10,000 audit records which are also ran- domly selected from KDDCUP?99 dataset. There are another nine types of attacks except neptune and smurf,  Table 3 Parameters for GA  Parameter Value Population size 100 Generation size 80 Crossover rate 0.2 Mutation rate 0.1  threshold? 1.0  0 200 400 600 800 1000  0.5   1.5   2.5   3.5  x 10   Fig. 5 The number of rules extracted generation by generation  0 20 40 60 80 100 3.5   4.5   5.5   generation  fit ne  ss v  al ue  Fig. 6 The fitness curve for GA based pruning  which are not included in the training dataset. Validation data is also randomly selected from the database whose size is 1000.

The proposed GA-based two phase rule pruning method filters the redundant rules to make intrusions de- tect more efficient and effective. The parameters in Ta- ble. 3 are used in the proposed GA-based two phase rule pruning.

Since the system obtains the rules from all the classes during the training phase, it can detect intrusive attacks as well anomalous attacks. By evolving the GNP individ- uals generation by generation, a lot of interesting class association rules can be discovered. Fig. 5 shows the the number of rules extracted in each generation by all GNP individuals. It extracted 31920 normal rules and  - 2826 -    5685 misuse rules. In addition, the growth of the num- ber of rules was slowed down to some extent as the gen- eration goes on. After implementing the first phase rule pruning, that is, the matching degree-based method, 3445 rules are reserved in the rule pool, which are 2651 intru- sion rules and 794 normal rules. Then, GA-based pruning phase is implemented to select more effective rules to test the detection ability on the basis of classifier constructed.

Higher values of DR and Accuracy as well as lower val- ues of NFR and PFR represent better performance of the algorithm. Finally, 1671 rules are used to construct the classifier. Fig. 6 is the fitness curve of GA pruning.

Table 4 Classification results before two phase rule pruning  Normal(C) Known(C) Unknown(C) Total Normal(R) 1779 95 56 1930 Known(R) 186 7648 54 7888  Unknown(R) 99 65 18 182 Total 2064 7808 128 10000  In Table. 4 and Table. 5, DR, NFR, PFR and Accuracy are calculated before two phase rule pruning and after two phase rule pruning, respectively.

DR = (1779+7648+18+54+65)/10000 = 95.64%  (15)  NFR = (186+99)/(7888+182) = 3.53% (16)  PFR = (56+95)/1930 = 7.82% (17)  Accuracy = (1779+7648+18)/10000 = 94.45% (18)  Table 5 Classification results after two phase rule pruning  Normal(C) Known(C) Unknown(C) Total Normal(R) 1789 34 107 1930 Known(R) 51 7792 45 7888  Unknown(R) 17 55 110 182 Total 1857 7881 262 10000  DR = (1789+7792+110+55+45)/10000 = 97.91%  (19)  NFR = (51+17)/(7888+182) = 0.84% (20)  PFR = (34+107)/1930 = 7.31% (21)  Accuracy = (1789+7792+110)/10000 = 96.91% (22)  The classifier based on two phase rule pruning is effective compared with the method without rule pruning, since it can get higher DR and Accuracy as well as lower NFR and PFR. More importantly, rule pruning is more effi- cient for anomaly detection since the rules after pruning balances the normal rules and intrusion rules. Fig. 7 and Fig. 8 shows the comparison of the rule pruning case with no rule pruning case. It is clarified from Fig. 7 and Fig. 8 that using two phase pruning scheme can easily find the optimization solution globally.

92.00%  93.00%  94.00%  95.00%  96.00%  97.00%  98.00%  DR Accuracy  without rule pruning with rule pruning  Fig. 7 DR and Accuracy  0.00%  1.00%  2.00%  3.00%  4.00%  5.00%  6.00%  7.00%  8.00%  NFR PFR  without rule pruning  with rule pruning  Fig. 8 NFR and PFR  6. CONCLUSIONS  Generally, the hybrid rules extracting method using Fuzzy set theory is effective for discovering more in- teresting rules for IDS. However, too many rules in- clude much irrelevant and redundant, even misleading information when distinguishing new audit data. There- fore, we proposed a GA-based two phase rule pruning scheme, which utilizes both the statistical information among rules and global search ability of the evolution- ary algorithm. In this paper, a two phase rule pruning scheme is implemented using hybrid rules. To verify the effectiveness of this scheme, a multi-dimensional proba- bility classifier is modeled based on the pruned rules pool.

The simulation results show the better results of the pro- posed method compared with the conventional approach without rule pruning.

