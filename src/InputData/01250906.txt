Mining Significant Pairs of Patterns from Graph Structures with Class Labels

Abstract  In recent years, the problem of mining association rules over frequent itemsets in transactional data has been fre- quently studied and yielded several algorithms that can find association rules within a limited amount of time. Also more complex patterns have been considered such as or- dered trees, unordered trees, or labeled graphs. Although some approaches can efficiently derive all frequent sub- graphs from a massive dataset of graphs, a subgraph or subtree that is mathematically defined is not necessarily a better knowledge representation. In this paper, we propose an efficient approach to discover significant rules to clas- sify positive and negative graph examples by estimating a tight upper bound on the statistical metric. This approach abandons unimportant rules earlier in the computations, and thereby accelerates the overall performance. The per- formance has been evaluated using real world datasets, and the efficiency and effect of our approach has been confirmed with respect to the amount of data and the computation time.

1 Introduction  In recent years, the problem of mining association rules over frequent itemsets in transactional data has been thor- oughly studied and led to several algorithms that can find as- sociation rules within a limited amount of time. Also more complex patterns have been considered, such as ordered trees, unordered trees, or labeled graphs. Modeling objects using such complex structures allows us to represent arbi- trary relations among entities. Recently some approaches which can efficiently mine frequent substructures from a set of structured data such as graphs or trees have been pro- posed [6, 10, 19, 20, 1]. They mine frequent patterns step- wise in ascending order of their sizes beginning with fre- quent patterns of size 1, based on the anti-monotonic prop- erty of their support values. AGM [6, 8], TreeMiner [20], and FREQT [1] mine in a stepwise manner by expanding a  vertex, whereas FSG [10] and gSpan [19] are expanding an edge. From another perspective, AGM, FSG, and FREQT use breadth-first search whereas gSpan and TreeMiner are depth-first search algorithms. Although they are character- ized by their strategies to traverse the search space and by their strategies to expand patterns, the discovered patterns that are contained in each graph or tree are frequent sub- graphs which are mathematically defined in the graph the- ory domain.

However, a subgraph or subtree which is mathematically defined is not a necessarily better knowledge representation.

Assume that the above algorithms are applied to chemical compounds where each atom, chemical bond, atom type, and bond type in a compound correspond to vertex, edge, vertex label, and edge label in a graph, respectively, and that chemical compounds which contained Figure 1(a-1) ex- hibit some specified activity1. In general, a carbon atom with 2 single bonds has 2 other single bonds or a double bond. When the algorithms are applied to discover patterns or rules to classify active and inactive compounds, the pat- tern ? ? shown in Figure 1(b-1) may not be found, because a pattern is defined as a subgraph and the pattern ? ? is also contained in compounds which have Figure 1(a-2), which may not contribute to activity. Therefore, a representation to mine the rules in Figure 1(a-1) is needed.

? ? ?  (a-1)  ? ? ??  (a-2)  ? ? ?  (b-1)  ? ? ??  (b-2)  Figure 1. Examples of Patterns in Chemical Compounds  Some approaches have been applied to derive negative association rules and association rules which include nega- tive elements in the conventional Basket Analysis. A nega- tive association rule is represented as ? ? ? 	 where ? and  1We assume that a fragment shown in Figure 1(a-2) is contained in both active and inactive compounds.

? are itemsets. The negative rule indicates that the presence of itemset ? implies the absence of another itemset ? in the same transaction. An association rule with negative fac- tors is represented as ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? . [18] suggests that decision making in many applications such as product placement and investment analysis often involves a number of factors, some of which play advantageous roles and others play disadvantageous roles, and that negative re- lationships play the same important role as positive rela- tionship from experiences in science and engineering. We can represent a rule shown in Figure 1(a-1) as that chemi- cal compounds which contain the pattern ? ? shown in Fig- ure 1(b-1) and which do not contain the pattern ? ? shown in Figure 1(b-2) are associated with activity. We seek to dis- cover rules with negative factors from the labeled graphs.

A straightforward approach to derive the rules is to first enumerate all of the patterns which are contained as sub- graphs in the database and then to combine two patterns  ? ? and ? ? whose subgraph is ? ? in postprocessing. It is inefficient because the set of potential patterns is too large and its combinations are intractable. To design a more ef- ficient algorithm, we use the method of estimating a tight upper bound for the statistical metric. AprioriSMP which uses the upper bound can efficiently discover correlation rules maximizing a certain statistical measure from trans- actional database when an item corresponding to the right hand side of a rule is specified [12]. It can easily be inte- grated into graph mining algorithms to mine for the rules such as ? ? ? ? ? ? where ? is a graph with no negative factors. Furthermore, it can be easily expanded to discover rules with negative factors from a transactional database.

For example, the rule ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? can be derived by adding all ? ? ? ? ? ? s to a transaction without any ? ? ? ? ? s, and applying AprioriSMP. Given a set of trans- actions and a complete set of items, the transformation of transactions is easily calculated. However, in the case that input dataset is a set of graphs or trees, the transformation is intractable, because it is difficult to define a graph which contains all of the graphs in a database.

In this paper, we propose an efficient approach to dis- cover significant rules to classify positive and negative ex- amples. The rest of this paper is organized as follows. We define the problem statement to derive patterns and rules in Section 2. We introduce our algorithm in Section 3. In Section 4, we explain the algorithm in detail and in section 5 present experimental results. Section 6 reviews related work and Section 7 concludes.

2 Problem Statement  A graph  consists of 4 sets, the set of vertices ? , the set of edges ? , the set of vertex labels ? ? , and the set of edge  labels ? ? . When ? , ? , ? ? and ? ? are provided as ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ? ?  ? ! ? ? " # $ ? ! ? ? " % ? ? ? & ' ? ? ( )  ? ! # $ * ? ! % ? ? ? + , -  & . ? ? ( )  ? ? # $ * ? ? % ? ? ?  respectively, the graph  is mathematically defined as  / 0 ? ? ? ? ? ? ? ? ? 1 ?  where multiple vertices can have an identical label, and multiple edges also can have. For the convenience of de- scription, the tuples of  are represented as ? 0  1 , ? 0  1 ,  ? ? 0  1 and ? ? 0  1 respectively. Each vertex ? 2 ? and edge ? 2 ? have labels 3 4 0 ? 1 2 ? 5 and 3 4 0 ? 1 2 ? ? , respec- tively2. Given a graph  , the subgraph  6 of  fulfills the following conditions.

7 8 ?  9 : # ; ?  9 # ?  < % ?  9 : # ( )  < # ? ( )  7  < # # ? < ? = % ?  9 : # ( )  < ? = # ? ( )  7  < # ? 7  = # # ?  >  6 means that  6 is a subgraph of  or  includes 6 .

A database is given as a set of examples  ? / ? 0  ? ? @ ? 1 ? 0  ? ? @ ? 1 ? A A A ? 0  B ? @ B 1 ? where each example  0  ? ? @ ? 1 is given as a pair of the graph  ? and the class @ ? 2 ? C D ? E D ? that the graph belongs to. Given a set  ?

of graph structured data, the support F 0 G 1 for a graph G is defined as the number of graphs including G in  ? .

F 0 G 1 / H ? G H  2  ? ? G I  ? H  We call a graph whose support is more than or equal to 1 a pattern. We denote that the supports for graph G on a positive dataset and a negative dataset are F J 0 G 1 and F K 0 G 1 , respectively. The sum of F J 0 G 1 and F K 0 G 1 is equal to F 0 G 1 .

The expansion of a pattern ? is to add some vertices or some edges in order to generate a larger pattern ? L (Fig- ure 2). ? is a subgraph of ? L . For example, AGM, FSG, gSpan, and TreeMiner generate patterns of size M by joining two frequent patterns of size M E D if and only if certain con- ditions are fulfilled3. FREQT expands patterns by adding a vertex and an edge to a vertex in the right most path of the tree pattern4.

2The method presented in this paper can be integrate into AGM, FSG, and gSpan which can be applied to both undirected and directed graphs.

3In the cases of AGM and TreeMiner, the size is defined as the number of vertices in a graph. In other cases, it is the number of edges in a graph.

4In the case of Apriori, a itemset N ? and O ? of size P are expanded to Q ? R ? of size P S T by joining  N ? U V W X Y Z ? [ W X Y Z ? [ \ \ \ [ W X Y Z ? ] ? [ W X Y Z ? ^ and O ? UV W X Y Z ? [ W X Y Z ? [ \ \ \ [ W X Y Z ? ] ? [ W X Y Z ? R ? ^ to generate Q ? R ? UV W X Y Z ? [ W X Y Z ? [ \ \ \ [ W X Y Z ? R ? ^  .

? ??  ? ? ??  ?  (a) vertex expansion (b) edge expansion  ? ??  ?? ?  ?  size=3 size=4 size=4 size=5  Figure 2. Vertex and Edge Expansion  A rule discovered by our approach is denoted as  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? (1) ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? (2)  where ? , ? ? , and ? 	 are patterns and ? ? 	 ? 	 . The rule (2) means that data which contains pattern ? ? and does not con- tain pattern ? 	 correlates with positive (or negative). Our approach discovers both types of rule (1) and rule (2) si- multaneously. When a dataset which consists of a set of graphs is given as input, the problem is to discover a rule which maximizes a certain statistical metric or to list the  most significant rules with respect to the metric.

3 Statistical Measurement Property  Morishita et al. studied a method called AprioriSMP for efficiently computing significant association rules accord- ing to common statistical measures such as chi-square val- ues or correlation coefficient [12, 14]. They introduced a method of estimating a tight upper bound on the statistical metric associated with any superset of an itemset, as well as a novel use of the resulting information about upper bounds to prune unproductive supersets while traversing the item- set lattices. We also use this method to estimate the upper bounds of the statistical indices and expand it for our prob- lem. For the sake of simplicity in this paper, we use the chi-square value method.

Let ? be a dataset, and ? and ? be the number of positive and negative examples in the dataset ? , respec- tively. Let ? be the left-hand side of the rule, i.e., ? ? ? ? where ? ? 	 ? 	 , and ? be a positive class. Let  ? ? where  ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? denotes the number of graphs that fulfill both ? and ? . Let  ? where ?  ? ? ? ? ? ? ? ? ? denote the number of graphs that fulfill ? .  ? ? represents the number of graphs that fulfill ? , but which are not pos- itive examples.  ? represents the number of graphs that fulfill ? , which is equal to the sum of the values in the row  ? ? ?  ? ? .

We now consider how to estimate the upper bound of the  chi-square value for ? ? ? ? 	 ? ? ? ? ? ? ? ? ? . Let ? ? ? ? ? ? and ? ? ? ? 	 ? be the number of positive examples which con- tain ? ? and ? 	 , respectively, and ? ? ? ? ? ? and ? ? ? ? 	 ? be the number of negative examples which contain ? ? and  ? 	 , respectively.  ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? and  ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? , because graphs which contain ? 	 also contain ? ? according to ? ? 	 ? 	 . Table 1 is a contingency table summarizing the above definitions. For each pair  ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? , we calculate an expectation under the assumption of independence: ? ? ? ? ? ? ? ?? ? ? . We denote the chi-square value as ? 	 ? ? ? ? ? 	 ? or ? ? ? ?  ? ? ?  ? ? ? . The chi-square value ? 	 ? ? ? ? ? 	 ? is the normalized deviation of observation from expectation, namely,  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ?  ? ? !

? " # ? $ ? % $  " #  $  %  ? ? ?  & ! ?  ? ? ! ?  "  (3) In this definition, each  ? ? must be non-negative; hence,' ( ? ? ? ? 	 ? ( ? ? ? ? ? ? ( ? , and ' ( ? ? ? ? 	 ? ( ? ? ? ? ? ? (  ? . It is often helpful to explicitly state that  ? ? and  ? ? are determined by ? ? and ? 	 , and we define them as  ? ? ? ? ? ?  ? 	 ? and  ? ? ? ? ? ? ? 	 ? .

It is known that any convex function is maximized at one  of the vertices on the boundary of a convex polygon [5], and it has been proven that ? ? ? ?  ? ? ?  ? ? ? is a convex func- tion [12]. The upper bound of the chi-square value is de- rived as follows.

Let ? #? be a pattern which is made by expanding ? ? and ? $ be a pattern which includes ? #? , i.e., ? $ ) ? #? . It can be derived that  ? ? ? ? *? ? ? + ? , - % . & ? ? ? ? / 0 ? ? ? ? ? 1 ? ? ? ? ? ? 1 ? / 2 ? ? ? ? ? ' ? (4) because  1 , ? ?  ? ? *? ? ? + ? , / 0 ? ? ? ? % ( ) 1 , ? ?  ? ? *? ? ? + ? , / 2 ? ? ? ? "  In other words, defining  3 ? ? ? ? ? ? ? ? ? - % . & ? ? ? ? / 0 ? ? ? ? ? 1 ? ? ? ? ? ? 1 ? / 2 ? ? ? ? ? ' ?  inequality (4) implies that when a pattern ? ? is ex- panded into ? #? to generate larger patterns, ? 	 ? ? #? ? ? $ ? is bounded by 4 ? ? ? ? ? ? 	 ? . Figure 3 shows that ? ? ? ? ? #? ? ?  ? ? ? ? $ ? ? ? ? ? ? #? ? ? ? ? ? ? $ ? ? is mapped onto the gray rectan- gle whose vertices are ? ' ? ' ? , ? ? ? ? ? ? ? ? ' ? , ? ' ? ? ? ? ? ? ? ? and  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? .

56 789: ; < =>  ?

=<>  @A BB C  DE  FGFG HI JJ KK LL M  NO PQRS  TUTU VW XX YY ZZ [  Figure 3. Mapped Space of ?  ? ? ? ? #? ? ? $ ? ?  ? ? ? ? #? ? ? $ ? ?     Table 1. Contingency Table for ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  row ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ?  ? 	 ?  ? ? ? ? ? ? ? ? ?   ? ? 	 ? ? ? ? ? ? ?   ? ? ? ?  Moreover, let ? ?? be a pattern which fullfils ? ?? ? ? ? ? ? ? . It can be derived that  ? ? ? ? ? ?	 ? ? ? ? ?  	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ?  (5)  because ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ?	 ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ?	 ? ? ? ? ? ? ? ? ?  In other words, defining   ? ? ? ? ? 	 ? ? ? ? ?  	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ?  inequality (5) states that when a pattern ? ? is ex- panded into ? ?? to generate larger patterns, ? ? ? ? ? ? ? ?? ? is bounded by ? ? ? ? ? ? ? ? ? . Figure 4 shows that ? ? ? ? ? ? ? ?  ? ? ? ? ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ?? ? ? is mapped onto the gray rectan- gle whose vertices are ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ,  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? , ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? and ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? .

? ?  ? ??  ?? ?? ?  ??  ?? ???? ????? ??   !! "" #  $% &'()  *+*+ ,- .. // 00 1  Figure 4. Mapped Space of ? ? ? ? ? ? ? ? ? ?? ? ? ? ? ? ? ? ? ? ? ?? ? ?  When the type of the discovered rule is ? ? ? ? ? ? ? ? ? ? , let ? ? be a pattern which contains ? . Since ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ? ? ? 2 3 4 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 5 (6)  Inequality (6) is described as ? ? ? ? ? ? ? ? ? ? ? ? .

Although AprioriSMP uses only inequality (6), we use  inequalities (4) and (5) in addition to inequality (6).

4 Algorithm  We propose an algorithm to mine the significant rules in ascending order of their sizes. It gradually narrows down the space where ? ? ? ? ? ? ? ? ? is mapped by expanding the patterns. For the moment, for the sake of simplicity, we consider the case that the dataset consists of itemsets. How- ever, it can easily be integrated into the existing frequent graph mining and tree mining algorithms. When we discuss frequent itemset mining, the lattice representation is often used to represent the search space as in Figure 5 (a). The lat- tice of itemsets is scanned beginning with smaller itemsets and continuing to larger ones. Figure 5 (b) shows our lattice for mining the significant rules when the dataset has three types of items, A, B, and C. Instead of an itemset for each node in the conventional representation, a pair of patterns is described for each node. We always retain the current max- imum (or ? -th largest) chi-square value among all the chi- square values calculated so far, and set it to the cutoff value.

This discards unimportant rules earlier in the computations, and thereby accelerates the overall performance. We begin a rule with ? ?  ? ? ! ! and ? ?  ? ? ! ! . It is expanded by re- cursively adding one item in each step. If ? ?  ? ? , both ? ? and ? ? are expanded by adding the same item, or only ? ? is expanded with an item according to inequalities (4) and (6). Otherwise, ? ? is expanded by adding an item which ? ? does not have according to inequality (5). It is not possible that only ? ? is expanded, because it is not possible to nar- rows down the space where ? ? ? ? ? ? ? ? ? is mapped. Each node has 2 counters, one of them is for support on a posi- tive dataset and the other is for a negative dataset. There are seven nodes that have ? ?  ? ?  in Figure 5. Since it is re- dundant to scan the dataset seven times to count the support values of the itemset ? ?  , our algorithm is implemented to scan it once to count them. This is done by implementing the algorithm as though the nodes have pointers to one an- other. When the support value of one of them is counted, the value is propagated the others. In any node, if ? ? ? ? ? ? ? ? ? ,  ? ? ? ? ? ? ? ? ? , and ? ? ? ? ? ? are all less than a cutoff value, the node is pruned from the lattice according to inequalities (4), (5), and (6). For instance, when traversing from a node with  ? ?  ? ? ! ! and ? ?  ? ? ! ! to another node with ? ?  ? and ? ?  ? ?  , the space where ? ? ? ? ? ? ? ? ? is mapped     is gradually narrowed down as shown in Figure 6. Figure 7 presents our algorithm for mining the most significant rule.

?  ? ? ? ?  ? ?  ? ? ? ?? ? ? ? ?    ?  ?  ??  ?  ?? ?  ? ?  ? ? ?  ?? ?  ? ? ?  ?? ?  ? ? ?  ?? ?  ? ? ?  ?? ?  Figure 6. Transition of Mapped Space of ? ? ? ? ? ? ? ? ?  5 Experiments  The proposed algorithm was integrated into AcGM (Apriori-based connected Graph Mining) algorithm which is an optimized version of AGM to mine only frequent con- nected subgraphs [7]5. The method proposed in this pa- per was implemented using C++, and an IBM IntelliStation with Windows XP was used for the evaluation experiments, with a Xeon-2.4 GHz CPU and 2 GB of main memory in- stalled. For testing, we used two read world datasets in chemistry. In our experiment, each atom, chemical bond, atom type, and bond type in a compound correspond to ver- tex, edge, vertex label, and edge label in a graph, respec- tively. The number of vertices in a graph is called the size of the graph.

5.1 Carcinogenic Data  First, the molecular structure data of carcinogenic com- pounds was analyzed. This data was provided by Predictive Toxicology Evaluation [13], and contains information on 337 chemical compounds. Each data entry is categorized into either active or inactive. A total of 182 compounds are categorized into active and 155 compounds are categorized as inactive. The number of types of the atoms which con- stitute chemical compounds is 24. The atomic bonds which correspond to edges in a graph have 4 types. The average size of the graph data is around 27, and the maximum size is 214.

5Our method can also be integrated into other algorithms such as gSpan, FSG, TreeMiner, and FREQT.

Figure 8 shows the result of the distribution of chi-square values for the discovered rules when the 100 most signifi- cant rules were mined by using AcGM with the proposed method and AcGM without it. Although AcGM with- out the proposed method can mine the only type of rules  ? ? ? ? ? ? ? ? ? ? , AcGM with the method can mine both types of rules ? ? ? ? ? ? ? ? ? ? and ? ? ? ? ? ? ? ? ? ? ? ? ? ? . The figure shows that our proposed method can discover more significant rules than the existing frequent graph mining al- gorithms.

?  ?  ? ?  ? ?  ? ?  ? ?  ? ? ?  ?? ? ?  ?? ? ?  ?? ? ?  ?  ? ? ? ? ?  ! " # $ % " & ! $  '( ) * + ,  - ).

/0 .+  )2  3 # 4 3 4 ? $ 5 6 $ 7 ? 4 5  ? 4 8 % $ 8 7 ? 4 8 " & 6 $ 7 ? 4 5  Figure 8. Distribution of Chi-square Values of Discovered Rules  5.2 HIV Data  Next, we used Developmental Therapeutics Program?s AIDS Antiviral Screening Database. This project has checked tens of thousands of compounds for evidence of anti-HIV activity [4, 9]. The dataset contains 42,687 chem- ical compound structures and their screening data. Each data entry is categorized into either active (CA), moder- ately active (CM), or inactive (CI). We used the entries which are categorized to CA and CI. A total of 422 com- pounds are categorized into CA and 40,891 compounds are categorized as CI. The chemical compounds were formed from 69 atom types in the database, but hydrogen atoms are omitted and atoms with aromatic bonds are distinguished from atoms with no aromatic bonds in our experiment. The atomic bonds have 4 types. The average number of vertices in graph data is around 25.6, and the maximum number of vertices is 222.

The AcGM algorithm which integrated with the pro- posed method applied to the dataset. Figures 9 and 10 show the discovered rules. It took about 6 hours. ? ? in Figure 9 is contained in 64 compounds whose classes are CA and 16     ? ? ? ?? ? ? ?  ? ? ? ? ?? ? ? ? ?  ? ? ? ?? ? ? ? ? ? ? ?? ? ? ?  ? ? ? ? ?? ? ? ? ? ? ? ? ? ?? ? ? ? ?  ? ? ? ? ? ?? ? ? ? ? ?  ? ? ? ?? ? ? ? ?  ? ? ? ?? ? ? ? ? ?  ? ? ? ?? ? ? ? ?? ? ? ?? ? ? ? ? ? ? ? ?? ? ? ? ?  ? ? ? ?? ? ? ? ? ?  ? ? ? ?? ? ? ? ? ? ? ? ?? ? ? ? ?  ? ? ? ?? ? ? ? ? ?? ? ? ? ?? ? ? ? ? ? ? ? ? ? ?? ? ? ? ? ?? ? ? ? ?? ? ? ? ? ?  ? ? ? ? ? 	 	? ? ? ? ?  ? ? ?  ? ? ? ?  ? ? ? ? ? ?  ? ? ? ? ? ? ? ?  ? ? ? ? ?  ? ? ? ?   ? ?  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Figure 5. Lattice Representations of Search Space for Significant Rule Mining  // ? ?  is a database consisting of graph structured data.

//  ? , ! ? is a set of pairs of patterns, where the size of ? ? is " .

// # is a cut-off value.

0) Main(  ? ? )  ? 1)  ? $ ? all pairs of patterns ? ? and ? ? whose sizes are 1 ? ; 2) # $ ? ; 3) " $ % ; 4) while(  ? &? ' ) ? 5) Scan  ? ? to compute ?  ? ? ? ? ? ? ? ? , ?  ? ? ? ? ? , ?  ? ? ? ? ? , ?  ? ? ? ? ? ? ? ? ,  and ? ? ? ? ? ? ? ? ?  for each pair ? ? ? 	 ? ? ? ? ;  6) # $ ( ) * ? # 	 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? 	 ? ? ? ? ?  ? ? ? ? ? ? ? ? ? 	 ? ? ? ? ? ? ; 7) ! ? $ ? ? ? ? 	 ? ? ? ? ? ? ? ? ? ? ? + # 	 ? ? ? ? ? ? ? ? ? + # 	 ? , ? ? ? ? ? ? ? ? ? + # ? ; 8)  ?  ? ? ? ? ? ? ? ? ? ! ? ? ; // process to expand patterns 9) " $ " ? % ;  10) ?  11) return # with its corresponding pair of patterns; 12)  ?  Figure 7. Outline of Algorithm  compounds whose classes are CI and ? ? in Figure 9 is con- tained in 6 compounds whose classes are CI. The value of  ? ? ? ? ? ? ? ? ? is about 5,355.86. Hence, although a compound which contains ? ? in the figure and does not contain ? ? in the figure correlates with active, the difference between ? ? and ? ? may reduce the physiological activity. Similarly, Figure 10 also shows another discovered rule. The value of  ? ? ? ? ? ? ? ? ? is about 5,142.5. If a benzene ring is attached to the position of the figure as in the previous example, the physiological activity as an anti-HIV medicine may be re- duced.

Figure 11 shows the result of computation time for var- ious minimum support threshold, when all frequent sub- graph are derived by using the conventional AcGM algo- rithm. We can discover the rules shown in Figures 9 and 10 by first enumerating all of the frequent patterns with the AcGM and then combining two patterns in postprocessing.

6The value of - ? .

? ? / for ? ? in Figure 9 is about 4945.2.

However, the support values of the patterns ? ? in the fig- ures are very low, so the existing frequent graph mining algorithms can not mine the patterns because of the com- putation complexity shown in Figure 11. Our system could efficiently discover characteristic rules with statistical sig- nificance and they are candidates for developing new anti- HIV medicines.

P 01 2 3 4 5 6 7 8 9 : ; < = 2 3 4 5 6 7 0 8 P >1 2 3 4 5 6 7 ? : ; < = 2 3 4 5 6 7 8  @ @ A  A @  @  B C @  A AAD D  E E  D D D E  E  Figure 9. Discoverd Pair of Patterns (1)     ? ?  ? ?  ? ? ? ?  ?? ? ? ?  ? ? ? ?  ?  P ?? ? ? ? ? ? ? ?  ? ? ? ? ? ? ? 	 ? P ?? ? ? ? ? ? 	 ? ?  ? ? ? ? ? ? ? 	 ?  Figure 10. Discoverd Pair of Patterns (2)  ?  ? ?  ? ? ?  ? ? ? ?  ? ? ? ? ?  ? ? ? ? ? ?  ?? ?? ? ?? ? ? ?? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  !

"#$% &' (')  #*') $+, - + ".

/ ? ? ? ? ?  /  Figure 11. Computation Time of conventional AcGM Algorithm  6 Discussion and Related Work  Some approaches which can efficiently mine frequent substructures from a set of structured data such as graphs or trees have been proposed [6, 10, 19, 20, 1]. The discovered patterns that are contained in each graph or tree are frequent subgraphs which are mathematically defined in the graph theory domain. However, our approach can efficiently dis- cover more significant and complex rules than those which the existing algorithms discover.

Some approaches have been applied to derive negative association rules and association rules which include neg- ative elements in the conventional Basket Analysis. How- ever, the existing graph mining approaches can not be ap- plied to graphs for practical purposes, because of represen- tation of the negative factors and combinatorial explosion of patterns.

Liu et al. proposed a method to discover interest- ing rules from transactional database based on statisti- cal significance [11]. They introduced Direction Setting rules. The directions of the discovered rules ? ? ? ?  ? ? ? are categorized into either ?1?, ?-1?, or ?0?. The direction ?1? means that itemsets ? and ? are correl- ative, and ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? 1 ? . The direction  ?-1? means that itemsets ? and ? are correlative, and ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? 2 ? ? . The direction ?0? means that  itemsets ? and ? are independent. Assuming that itemsets  ? is divided into ? ? and ? ? , the method discovers the in- teresting rules ? ? ? ? ? ? ? , where directions of the rules  ? ? ? ? ? ? ? ? , ? ? ? ? ? ? ? ? and ? ? ? ? ? ? ? are ei- ther (0,0,1), (-1,-1,1), (-1,0,1), or (-1,1,1). Although our approach is similar to their method if we focused on a pair of rules ? ? ? ? ? ? ? ? and ? ? ? ? ? ? ? whose directions are different, their method first enumerates all frequent pat- terns from a database and then to discovers direction setting rules. On the other hand, our approach abandons unimpor- tant rules earlier in the computations, and thereby acceler- ates the overall performance. Suzuki introduced a method to discover exception rules which are represented as a pair of rules ? ? ? ? ? 3 ? and ? ? ? ? ? ? 3 ? where ? and ? are itemsets and 3 is an item [15, 16, 17]. Our approach is similar to their method. However, we can not apply the method to graph structures because the method is based on multidimensional normal distributions of vectors.

In this paper, we focused a combination ? ? ? ? ? of two patterns, assuming ? ? ? ? ? . However, there are various combinations of two patterns other than ? ? ? ? ? . Table 2 summarizes chi-square values for the combinations of pat- terns. The number of graphs which contain patterns both  ? ? and ? ? is equal to the number of graphs which con- tain ? ? , because graph which contain ? ? also contains ? ? according to ? ? ? ? ? . Hence, the first row of the table mentions that to discover a type of the rule ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ?  ? ? ? ? corresponds to discover a type of the rule ? ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? . The fourth and fifth rows means that no graph which fulfills the conditions  ? ? ? ? ? , and graphs which fulfill the conditions ? ? 4 ? ? are equal to graphs which fulfill ? ? ? ? ? . In the sixth to tenth rows, ? ? ? ? ? is equal to ? ? ? ? ? according to Equa- tion (3). Therefore, to mine a rule ? ? ? ? ? ? ? from a value ? ? ? ? ? corresponds to mine a rule ? ? ? ?  ? ? ? from ? ? ? ? ? . Although we focused the only combination  ? ? ? ? ? of two patterns, it is denoted that all combinations of two patterns and complex combinations of more patterns than two can be derived by using our proposed method.

7 Conclusion  In this paper, we proposed an efficient approach to dis- cover significant rules to classify positive and negative graphs by estimating a tight upper bound on the statistical metric. It abandons unimportant rules earlier in computa- tion, and thereby accelerates the overall performance. The performance has been evaluated using real world datasets, and the efficiency and effect of our approach has been con- firmed with respect to the amount of data and the computa- tion time. In our future work, we plan to use the discovered pairs of patterns as features of machine learning algorithms to develop a classifier, and to compare to other relational supervised learners such as SubdueCL[3] or ILP systems.

