ICCCCT10

Abstract Coverage analysis defines the tracing of a program by  test cases. It also helps in the testing process by finding the areas  of a program not exercised by a set of test cases. Introducing new  test cases to increase coverage, and determine the quantitative  measure of the code, which is an indirect measure of quality.

Coverage analysis provides more benefit when applied to an  application that makes a lot of decisions rather than data-centric  applications, such as a database application. This paper will  discuss the issues that make test case coverage analysis a  complicated task and how those issues are being addressed. We  will describe the  technique for improving the maximum coverage    for test case of a program  by using a data mining technique  called Association rule Mining.

Keywords:  Software testing,coverage,test case,test suite  ,Association-rule,    1  INTRODUCTION  Software testing is the process of executing a program  or system with the intent of finding errors. As a part of any  software development process, software testing represents  an opportunity to deliver quality software and to  substantially reduce development cost as much as 50% [1].

As software testing is an expensive software development  activity,the cost of testing to achieve certain adequency  according to given criterion is also importance comparison  of testing costs involves many factors ,one of the simplified  measure of test cost is the size of an adequacy criterion.

Generally softwares are tested through a test case. A test  case has components that describes an input ,event or action  and an expected response A test case is usually a single  step, or occasionally a sequence of steps, to test the correct  behaviour/functionalities. A test suite is a collection of test  cases that are intended to be used to test a software program  to show that it has some specified set of behaviours. A test  suite often contains detailed instructions or goals for each  collection of test cases and information on the system  configuration to be used during testing. A group of test  cases may also contain prerequisite states or steps, and  descriptions of the tests. As one test case can hardly satisfy  all the requirements, it is usually required to use a suite of  test cases to satisfy as many as possible requirements.

Intuitively, the more test cases are used, the more possible  the requirements are satisfied. Practically, a test suite  usually undergoes a process of expansion, as new test cases  are inserted into the test suite to ensure the requirements  being satisfied. As a result, a test suite may contain more  than enough test cases for satisfying the requirements.In  this paper we propose a technique for maximizing  coverage of a test case using a Association rule mining  from Data Mining.A set T consists of test cases  {t1,t2,t3,t4tm} which satisfy the requirements R set of  requirements {r1.r2.r3.r4.rm} by desired testing coverage    of a To find a subset of T one associated with the  requirements ri..

________________________________________________  r1          r2      r3   r4     r5       r6   r7         r8  ________________________________________________    t1      x       x         x    t2                    x                    x       x                             x    t3                    x         x                            x    t4                                x                  x                x    t5                    x                    x                  x                   x  ________________________________________________    Table 1    The above table shows that the coverage information of test  cases in a test suite {t1, t2, t3, t4, t5}. The symbol x  means satisfaction of a requirement by a test case. Here we  find out which test case achives the maximum coverage.so  that we can optimize the problem of repeated test case.[8]        978-1-4244-7770-8/10/$26.00 2010 IEEE  ICCCCT10   2. DATA MINING    Data mining sits at the interface between statistics,  computer science, artificial intelligence, machine learning,  database management and data visualization. It is the  process of identifying valid, novel, potentially useful, and  ultimately comprehensible knowledge from data that is  used to help by crucial decision-making. The search for an  optimal solutionin the test case generation problem has a  great computational cost and for this reason these  techniques try to obtain near optimal solutions. As a  consequence, they have attracted growing interest from    many researchers in recent years. So, we are trying to apply  mining techniques    3.COVERAGE ANALYSIS  Coverage analysis is the process of:  Finding areas of a program not exercised by a set  of test cases,  Creating additional test cases to increase coverage,  and  Determining a quantitative measure of code  coverage, which is an indirect measure of quality.

An optional aspect of  coverage analysis is:  Identifying redundant test cases that do not  increase coverage.

Coverage analysis is sometimes called test coverage  analysis. The two terms are synonymous. The academic  world more often uses the term "test coverage" while  practitioners more often use "code coverage". Likewise, a  coverage analyzer is sometimes called a coverage monitor.

4.ASSOCIATION  RULE AND MAXIMUM TEST  CASE COVERAGE  Association rule mining finds interesting association or  correlation relationships.The association rules are  considered interesting if they satisfy both a minimum  support threshold and a minimum confidence threshold  [among a large set of data items[3][4][2][6].The input to the  Association rule is a set of transcation id and items set . In  the test case maximum coverage problem the item id  considered  as requirements.and item as test cases . We  taken support count as 2 for the above problem. We taken  support count as 2 for the above problem. Fig 1 shows that  the architecture of a system.The test suite is given input to  the Association rule  mining module. the association mining  module finds strong relation/Correlation between the test  cases and requirements.the output delivers a maximum  coverage test cases                                                        Fig 1. System Architecture      Requir  ements  Test  cases  R0 t0,t1,t2,t5  R1 t0,t1,t4  R2 t3  R4 t0,t3,t4  R5 t1,t2,t3,t5  R6 t1,t2,t3            Test  cases  Support    t0,t1 2  t0,t4 3  t1,t2 3  t1,t3 2  t1,t5 2  t2.t3 2  t2,t5 2          Test cases Support  t0,t1,t4 1  t0,t1,t2 1  t0,t1,t3 0  t0,t1,t5 1  Orginal Test  Suite  Association Rule  Mining Technique  Support  Count  Require  ments  Maximum Test  Case Coverages  ICCCCT10   t1,t2,t3 2  t1,t2.t5 2  t1,t3,t5 1  t2,t3,t5 1        Test  cases  Support  t1,t2,t3 2  t5,t1,t2 2          Test cases Support  t1,t2,t3,t5 1      Confidence = ( ( X U Y ) * count )  /  ( X * count )      From the above calculation the t1,t2 of the test cases  covers maximum coverage of the requirements of a  program.

5.THE EXPERIMENT    5.1.Implementation Details    Our experiment is performed on a PC with an INTEL  Core 2 Duo  CPU 2.26GHz and 1GB memory. All the  studied test suite reduction techniques are implemented on  this PC by a single software engineer using C Languauage  and all the executables run on Windows Vista Home  Professional .Heuristic Greedy  and heuristic  Random  are  simply implemented as C programs.

5.2 Subject Programs and test cases    In our Experiment we tested 3 small C Programs these  programs results  are shown in the table 2.We considered  statement coverage as the primary requirement .To obtain  the statement coverage adequate test suites for each  program,we tested the triangle program for study .This  program basically accepts three positive integer value as  input.from users and determines whether it is a valid  triangle or not.Finally on the basis of this input it displays  corresponding messages as follows.

A triangle having  three sides are equal  ~ Equilateral Triangle  A triangle of  any two sides are equal  ~Isosceles Triangle  A triangle having three sides of different lengths  ~Scalene triangle      totally fourteen test cases are developed using whitebox  technique for validation purpose, from these experiemts  {t2,t3,t5} achieves a maximum coverage of test  cases.similarly for other program also    4.3 Experiemental Procedure:    In our experiment we use a coverage criterion as statement  coverage .As there are usually some none executable  statements in a program and some executable statements  may not be covered by any used test cases, the number of  requirements for each program is typically smaller than its  number of lines of code.

4.4. Subject Programs and test suite    Name of  the  Program  Lines  of  code  No  of  test  cases  No of  require  ments  Maximum  coverage  of test  cases  Quadratic  Equation  15 8 5 t1,t2,t4  Biggest  Numbers  12 15 7 t1,t5,t7  Triangle  Program  16 14 7 t2,t3,t5        Table 2.Results of maximum coverage of test cases.

4.6. Experimental Results    From the experiment shows that the algorithm  proves  maximum coverage of test cases based upon the  requirements.

5.CONCLUSION AND FUTURE WORK  .

