Mining Hierarchical Temporal Association Rules  in a Publication Database

Abstract-Different from the existing studies, this work  presents a new kind of rules with the concept of a hierarchy of  time granules, namely hierarchical temporal association rules.

The lifespan of an i tern in a time granule is calculated from the  publication time of the item to the end time in the time granule. A three-phase mining framework is pr oposed to effectively and  efficiently find this kind of rules from a temporal database. The  experimental results show the performance of the pr oposed  algorithm under the item lifespan definition.

Index Terms-Data mining; as sociation-rule mining; temporal  association rules; item lifespan; a hierarchy of time granules.



I. INTRODUCTION  Data mining techniques have widely been applied to extract useful patterns or rules from a set of data, such as biomedical data applications, supermarket promotions, mobile data applications, and so forth. In real-world applications, transaction data usually includes both the time when the transactions occurred and the exhibition periods of items other than those bought in the transactions. However, traditional association-rule mining techniques [1][3][10] cannot be applied to handle such data with time, and some useful rules in the set of data may be lost. Temporal data mining has thus been proposed to find temporal patterns and regularities from a temporal database, and it has attracted increasing attention in recent years [4][5][8][9].

In the past, most studies related to temporal data mining focus on the items in the first transactions occurring in a database [4], the whole exhibition periods of items in a store [5][8] or the on-shelf time periods of items in a store [9].

However, some useful information may not be found with existing temporal mining techniques. For example, a product is may not be a frequent item within its whole exhibition period, but may be a frequent one within part of this time.

Hence, the previous studies did not consider the concept of a hierarchy of time granules.

As above mentioned, this work thus introduces a new set of rules, called temporal association rules with time granules,  Proc.12th IEEE Int ConI. on Cognitive Inlormatics & Cognitive Computing IICCrCC'13 1 D.F. Hsu, Y. Wang, A.R. Rao, D. Zhang, W. Kinsner, W. Pedrvcz, R.C. Berwick & L.A. Zadeh IEds.J   Pei-Shan Wu Department of Computer Science and Engineering National Sun Yat-sen  University Kaohsiung, Taiwan  grani 1987@gmail.com  Shusaku Tsumoto Department of Medical  Informatics Shimane University School  of Medicine tsumoto@computer.org  which consider not only the exhibition periods of items, but also the concept of a hierarchy of time granules, in order to find the temporal association rules of various time granules in the hierarchy from a temporal database. In addition, to handle this, a three-phase mining framework is thus proposed to effectively and efficiently find hierarchical temporal association rules in a temporal database.

The rest of this paper is organized as follows. Some related data mining approaches are reviewed in Section II. The proposed three-phase hierarchical temporal mining algorithm with the predicting strategy (abbreviated as TPP) is presented in Section III. An example of the proposed three-phase mining algorithm is described in Section IV. The experimental results showing the performance of the proposed algorithm are presented in Section V, while the conclusions and future works are given in Section VI.



II. RELATED WORKS  One common type of data mining is to derive association rules [1][3][10] from transaction data, such that the presence of certain items in a transaction will imply the presence of some other items. To achieve this, Agrawal et al. proposed several mining algorithms based on the concept of large itemsets to find association rules from transaction data [1][3][10], and the Apriori algorithm [1] on association-rule mining is the most well-known of these. The process of association-rule mining can be divided into two main phases. In the first phase, candidate itemsets are generated and counted by scanning transaction data. If the count of an itemset in the transactions is larger than or equal to a pre-defined threshold value (called the minimum support threshold), the itemset is identified as a frequent one. Itemsets containing only one item are processed first. Frequent itemsets containing only single items are then combined to form candidate itemsets with two items. The above process is then repeated until no candidate itemsets are generated. In the second phase, association rules are derived from the set of frequent itemsets found in the first one. All possible association combinations for each frequent itemset are    formed, and those with calculated confidence values larger than or equal to a predefined threshold (called the minimum confidence threshold) are output as the association rules.

However, using traditional temporal mining techniques to handle a set of data with time may lead to the loss of some useful information. For example, a product may not be a frequent item within the whole period of the database [5], but the frequency of the product may be high within its exhibition periods.

To address the above problem, temporal data mining was proposed to concern with the analysis of temporal data, and is used to find temporal patterns and regularities from a set of data with time. Temporal patterns could be discovered in a variety of forms, like sequential association rules [2] and periodical association rules [5][8][9]. Temporal data mining is also called dynamic data mining. However, a product may not be a frequent item within its publication period [8], whole exhibition period [5] or the union of on-shelf time periods [9], but the frequency of the product may still be high within the partial periods of its whole exhibition period. Nevertheless, how to cluster exhibition periods in a temporal database is rather difficult. To solve this, our study then applies the concept of a hierarchy of time granules. The reason for this is that users can flexibly define the suitable time granules in each level of a hierarchy and then the temporal knowledge with various time granules that they want in temporal databases could be found. Therefore, our study aims to explore the issue of efficiently mining the hierarchical temporal association rules in temporal databases.



III. THE PROPOSED ALGORITHM  In the section, the execution procedures of the proposed three-phase hierarchical temporal mining algorithm with the Qredicting strategy (abbreviated as TP P) are then described as follows.

INPUT: A temporal database TDB with n transactions, each of which consists of transaction identification, transaction occurring time and items purchased, m items in TDB, a hierarchy with time granules HTG, a start exhibition table (SEP) with start period information of items, the minimum relative support threshold minJsup, and the minimum relative confidence threshold min Jcon!

OUTPUT: A final set of all hierarchical temporal association rules, HTAR.

Phase 1: Find temporal frequent item sets.

STEP 1: Transform the time each transaction occurred into the corresponding time period.

STEP 2: Initialize the PIT (Periodical Total Transaction) table as a zero table, in which the row number is the time period number of the bottom level in the hierarchy of time granules, and each entry in the table is set as O.

STEP 3: Find the periodical total transaction number ptti   within each time period Pj of the bottom level in HTG as the number of transactions in Pi' and put it in the PIT table.

STEP 4: Find the temporal frequent itemsets within each time period p by the Finding-Individual-TFI procedure.

Note that the Finding-Individual-TFI procedure can be executed by any frequent-itemset mmmg algorithm such as Apriori, FP-growth, and so on. In this study, the traditional Apriori algorithm is adopted to find frequent itemsets in each basic time period of HTG. Let the set of returned temporal frequent itemsets for the j-th time period Pi of the bottom level of HTG be denoted as TFf;.

Phase 2: Find all hierarchical temporal frequent itemsets.

STEP 5: Initially set the set of hierarchical temporal frequent itemsets (HTFI) as empty.

STEP 6: For each time period granule pg in each of all the other levels in HTG other than the bottom one, do the following substeps.

(a) Get the union of all TFI/s in pg, and denote them as possible itemsets, PIpX'  (b) For each itemset X in the set of P lpg, find the maximum common period MCPxof all the items in X within the time granule pg by using the SEP table.

(c) For each itemset X in set of P lpg, calculate the relative support upper-bound rsubpg,X of X within the time granule pg as:  rsubpg.x = ( + C??)/ L pttf, p)EMCT'x APjr;;;.pg Pj EMCT'x /\ Pi c;;;.pg  where Ci,x actual is the actual count of X within the j-th  time period Pi of the time granule pg by the sets of all TFli of the time granule pg, and Cp/b is the upper-bound (= A *ptti - I) of X within Pj of pg by the PTT table.

(d) Check whether the relative support upper-bound rsubpg, x of each X in the set of Plpg exceeds or equals the minimum relative support threshold minJsup. If it does not, remove X from the set of P Ipg; otherwise, keep X in the set of P Ipg.

(e) For each itemset X in the current set of P lpg, scan the transactions to find its actual count Cx in each time period Pj E MCPx and Pi E pg if the itemset X is not a frequent itemset in the time period p!-  (t) Calculate the relative support value rsuppg,x of each itemset X in the set of P Ipg,x within the time granule  pg as:  r suppg.x = LCfX / L pttf? PjEMCPXAPfr;;;.pg PjEMCT'xAp/r;;;.pg  (g) Check whether the relative support rsuppg,X of each X in the set of Plpg exceeds or equals the minimum    relative support threshold minJsup. If it does, put it into the set of hierarchical temporal frequent item sets (HTFf); otherwise, set Plpg= P1pg -x.

Phase 3: Find all hierarchical temporal association rules.

STEP 7: Initially set the set of hierarchical temporal frequent sub-itemsets (HTFS) as empty.

STEP 8: For each itemset X in the HTFI set, do the following substeps:  (a) Generate all possible sub-itemsets of the itemsetx.

(b) For each sub-itemset s, check whether the sub? itemset s with the same common period exists in the HTFI set. If it does, put the sub-itemset s in the HTFS set and use the relative support value of s in the HTFI set as the relative support value of s in the HTFS set; otherwise, scan the transactions of the required time periods to find the relative support value of s, and then put s with its relative support value in the HTFS set.

STEP 9:For each itemset X with items (x], X2, ... , Xl') in the HTFI set, do the following substeps:  (a) Generate all possible hierarchical temporal association rules as follows:  (b) Calculate the relative confidence value rconf'r,g.R of each possible rule R as follows:  rcon!pg,R = r suppg,XI r SUPpg ( X - xm),  where rsuppg,X is the relative support value of X within its corresponding time granule pg, X - Xm means remove the itemset Xm from X. and rsuppiX - xm) is the relative support value of X - Xm in the time granule pg in the HTFS set.

(c) Check whether the confidence rconf'r,g,R of each possible hierarchical temporal association rule R is larger than or equal to the minimum relative confidence minJconf. If it is, put the rule R in the set of hierarchical temporal association rules, HTAR.

STEP 10: Output the final set of hierarchical temporal association rules, HTAR.



IV. AN EXAMPLE OF TPP  In this section, an example is given to show how the proposed TPP algorithm can be easily used to find all the hierarchical temporal association rules from a temporal database (TDB). The data after this transformation are shown in TABLE I, and thus is used for mining. Also, assume the time hierarchy has three levels as shown in Fig. I, where there are four basic time periods in the bottom level, denoted as PI to P4. The start exhibition period information of the four items are shown in TABLE II. Moreover, the predefined minimum   relative support threshold A and the predefined mInImum relative confidence are set at 50% and 70%, respectively. To find the hierarchical temporal association rules in TDB, the proposed TP P algorithm proceeds as follows.

TABLE 1. The set of sixteen transactions for this example.

Period TID Items Trans! D Trans, C,D  P! Trans3 C Trans, D Transs A,C,D Trans(i A,B,C,D  P2 Trans, B,C,D Trans" A,D Trans9 B Trans!o A,C  P3 Transll A,B,C Trans!2 B,C Transl3 B,D Trans14 B,C,D  p, Transl5 B Trans!6 B,C,D  Levell PI23';  Level 2  Level 3  Fig. 1. The hierarchy of time granules with three levels for this example.

TABLE II. The start exhibition information of each item tor this example.

Item Start Period A P2 B P!

C P!

D PI  Phase 1: Find the set of temporal frequent itemsets.

STEPs 1 to 3: The time each transaction occurred is first transformed into the corresponding time period, as shown in TABLE I, and the PTT (?eriodical Iotal Iransaction) table is initialized as the zero table, in which the value of each entry is O. Next, for each time period p, the total number of transactions in each P is found.

STEP 4: The temporal frequent itemsets (TFJ) in each time period in the bottom level of HTG are found by the Finding? Individual-TFI procedure.

Phase 2: Fin d the se t of hierarchical temporal frequent itemsets.

I  STEPs 5 to 6: The set of hierarchical temporal frequent itemsets HTFI is initialized as empty. The possible temporal frequent item sets for each time granule in each level of HTG other than the bottom one are found. Take the second time period granule pg22 in the second level of HTG as an example.

Since the time granule pg22 includes two basic time periods, P3 and P?, the temporal frequent itemsets in the two periods are collected from the two TFI sets, TFl3 and TFh Next, the maximum common period of each itemset in the set of the possible itemsets (Ph2) is found by the SEP table. Take the  itemset {AC}?? in the set of P122 as an example. According to TABLE II, the start exhibition periods of the two items, A and C, are found as P2 and PI, respectively. The maximum common period of the itemset {AC}?? is then from P3 to P? in the time granule pg22.

The relative support upper-bound (rsub) of each item set in the set of P h2 is then calculated. In this example, since the  maximum common period of the itemset {AC}?? is from P3 to P4, and {AC}?? a frequent itemset in only P3, and its count is 2, the upper-bound of the {AC}?? within P 4 is [(50% * 4 - 1) = 1].

Therefore, the relative support upper-bound of {AC}?? in pg22 can be calculated as (2 + 1) / (4 + 4), which is 37.5%.

After the above process, the relative support upper-bound of each itemset in each of its maximum time periods in the set of PI22 are known. Next, if the relative upper-bound of an itemset is larger than or equal to the minimum relative support threshold minJsup, then the itemset is kept; otherwise, remove it from pg22. The results for all possible itemsets In  pg22 are shown in TABLE III.

TABLE III. The results of all the possible itemsets in pg22 after predict.

Non- Non- PIn rsub scanned PIn rsub scanned  Period Period  {B}?; 87.5% NIA {BC}?; 50% NIA  { C}?? 62.5% NIA {BD}?? 50% P3  {D}?; 50% P3  Take the itemset {BD} ?? as an example, since the maximum common period of itemset {BD}?? is from P3 to P?, and {BD}?? is a temporal frequent item set in only P4, with its count being 3, and the transactions within P3 have to scanned  to find the count of the itemset {BD}??. After this process, the count of {BD}?? in P3 is found to be O. Therefore, the total count of {BD}?? inpg22 can be calculated as 3 + 0, which is 3.

The temporal relative support value of {BD}?? inpg22 can thus be easily calculated as (3 + 0) / (4 + 4), which is 37.5%. Since  it is smaller than minJsup, which is 50%, the itemset {BD}?? is not put into the set of hierarchical temporal frequent itemsets (HTFl). All the other itemsets in the set of PI22 can be  processed in the same way. The final results for PI22 are shown in TABLE IV.

TABLE IV. The hierarchical temporal frequent item sets in pg22.

PI21 rsup PI21 rsup  {B}?; 87.5% {BC}?; 50%  (e)" 62.5%  Phase 3: Find t he set of hierarchical temporal association rules.

STEP 7: The set of hierarchical temporal frequent sub? itemsets (HTFS) is initialized as empty, which is used to maintain all sub-itemsets of the hierarchical temporal frequent itemsets and their relative support values within their time granules.

STEP 8: For each itemset in the HTFI set, the support values of all the sub-itemsets within its maximum common  period are found. Take the itemset {BC} ?? in pg22 as an example. The sub-itemsets of the itemset {BC}?? include {B}?? and {C}??. The relative supports of the two sub-itemsets, {B}??  and {C}zz, can thus be calculated as (3 + 4) / 8 (= 87.5%) and (3 + 2) / 8 (= 62.5%), respectively. All the other itemsets in HTFI can be similarly processed. All the sub-item sets in the HTFS set for the itemsets in the HTFI set for the time period  pg22 are shown in TABLE V.

TABLE V All the sub-itemsets in the HTFS set for pgn.

Sub-ltemset21 {B}?;  STEP 9: All the possible rules for each itemset in the HTFI set are generated, and the relative confidence values of the  rules are calculated. Again, take the itemset {BC} ?? in the HTFI set inpg22 as an example. Only two possible rules, {B? C}?? and {C?B}??, can be generated from the itemset {BC}??.

In addition, the relative supports of the two sub-itemsets {B}?? and {C}?? of {BC}?? are 87.5% and 62.5% in the time period  pg22. The relative confidence value of the rule {B?C}?? can thus be calculated as 50% / 87.5%, which is 57%, and the   confidence value of the other rule {C? Bb can be calculated as 50% / 62.5%, which is 80%. All the other item sets in the HTFI22 set can be similarly processed. The rules generated from the HTFl22 set are shown in TABLE VI.

All the hierarchical temporal association rules can be  found. Take the rule {C ? B} 22 as an example. Since its relative confidence is 80%, and the minimum relative  confidence threshold is set at 70%, the rule {C ? B} ?? is a hierarchical temporal association rule and is put in the set of  I    HTAR22? All the other rules can be processed in the same way.

After this step, there is only the rule {C--B}?? is in the set of HTAR22? The hierarchical temporal associations rules for the other time period granules can be found in the same way.

TABLE VI. All the rules with their relative confidences for pgn.

Rule Rule

V. EXPERIMENTAL EVALUATION  In the experimental evaluation, to show the effect of the predicting strategy in the proposed TPP, a three-phase mining approach for finding hierarchical temporal association rules (named TP-HTAR) was used as a baseline algorithm. The experiments were implemented in J2SDK 1.6.0 and executed on a PC with 3.0 GHz CPU and 2GB memory.

On the other hand, the public IBM data generator [6] was used in our experiments to produce the required datasets. To find hierarchical temporal association rules, we developed a simulation model, which was similar to that used in Lan et al.'s study [9], to generate the temporal database with time periods. Moreover, the hierarchy of time periods was also developed in the simulation model, and an integer value among 1 to the total number of given time periods was randomly assigned to each transaction in the generated datasets. In the experiments, the parameters used were T, I, N, D, and P, which represented the average length of items per transaction, the average length of the maximum number of potentially frequent itemsets, the total number of different items, the total number of transactions and the total number of time periods, respectively. The parameter values used in the experiments are shown in TABLE VII.

TABLE VII. Parameters used in the experiments.

Parameter Description Default Value  T ?he average length of items per transaction 10  I ?he average length of maximal potentially 4 frequent itemsets  N rrhe total number of items 4,000 D rrhe total number of transactions 100,000 p rrhe number of basic periods 16  Fig. 2. showed the effects of the proposed TPP over the TP-HTAR algorithm for the Tl 014N4KDl 00KP16 dataset with a hierarchy with 16 basic periods (P16) and 4 levels under different minimum relative support thresholds, Min_RSup.

It could be observed from this figure that the number of data scans required by the TPP algorithm was always less than that required by the TP-HTAR algorithm under various minimum relative support thresholds. The reason for this is that the proposed TP P algorithm adopted the effective predicting strategy to avoiding unnecessary data scans, but the TP-HTAR   not. The performance of the TP P algorithm thus outperformed the TP-HTAR under different thresholds.

" 1400 ? 1200 " 1000 "0 800 ? 600 = 400 ? 200  o - o " " ,0 E =  Z  Tl0I4N4KDlOOKP16 dataset  !IIIIII ? TP-HT AR HTL2 .TPP HTL2 0.60% 0.62% 0.64% 0.66% 0.68% 0.70%  Minimum Relative Support Threshold, Mio_RSup  Fig. 2. Comparison of numbers of scanned databases required by the two algorithms under ditlerent minimum relative support thresholds.



VI. CONCLUSIONS  Different from the traditional temporal data mining, this work introduced a new concept of temporal association rule mining with a hierarchy of time granules, which takes an item lifespan definition into consideration. In addition, two effective algorithms, TP-HTAR and TPP, are developed to mine various hierarchical temporal association rules from temporal databases. The experimental results also show the execution performance of the proposed two hierarchical temporal algorithms.

