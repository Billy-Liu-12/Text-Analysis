THE RESEARCH ON MODEL OF MINING ASSCICIATION RULES BASED  ON QUANTITATIVE EXTENDED CONCEPT LATTICE

Abstract: Concept Lattice represents knowledge with the  relationships between the intension and the extension of concepts, and the relationships between the generalization and the specialization of concepts, thus it is properly applied to the desription of mining association rules in databases. The Quantitative Extended Concept Lattice (QECL) evolves from concept lattice by introducing equivalent relationship to its intension and quantity to its extension, which further enriches the relationships between its intensions. Based on QECL, we can mine association rules, comparing with well-known Apriori, Mining association rules on QECL does not need to scan databases for many times, has higher quality of time wmplexity and shows association NI- on the Hasse diagram of QECL more visual and concise, moreover, it can he used to mine association d e s  interactively according to user's subjective interest.

Keywords: Data mining; Association rules; Concept lattice; Frequent item sets  1 Introduction  Concept lattice 'I' (also called Galois lattice) was firstly proposed by R. Wille in 1982, and built on binary relationships' between the intensions and extensions of concepts, the extensions of which represent a set of objects, the intension represents the common features that all objects in the extension have, and concept lattice reflects entity- attribute relationships between objects, and the corresponding Hasse diagram of concept lattice vividly visualizes the relationships in the concepts. However, there are some limitations in the concept lattice, xuegang Hu have improved Concept (Galois) Lattice to Extended Concept Lattice (ECL)  By introducing equivalent relationships to the intensions of concepts '2J.41, then enriches the relationships between intensions of concepts, afterwards, developed the Extended Concept Lattice to Quantitative Extended Concept Lattice (QECL) by quantifying its extensions of the extended concept lattice, in a sense, He have enriched concept lattice theory and made quantitative extended concept lattice present knowledge more concise and distinct.

Mining association Rules [s6,71 is'an important task in KDD, it, is to generate all association rules whose supports  and confidences are bigger than the user-specified minimum supports and minimum confidences respectively.

Some approaches have been proposed for minimg association rule!; based on concept lattice "I. In the paper we will present a model to mine association rules on quantitative extended concept lattice.

The paper is organized as follows: In Section 2, we review the preliminaries of association rules, Section 3 introduces basic notions of concept lattice, extended concept lattice and quantitative extended concept lattice.

Section 4 presents mining association rule on QECL.

Section 5 describes the generation algorithm of QECL and its analysis in 5;ection 6. Section 7 shows an example of mining associatim rules on QECL and the comparison with Apriori on well-known marked basket analysis.

2 Association rule  Mining association rules is an important branch of data mining, which describes potential relations among data items (attribute, variant) in databases, The well-known Apriori algorithm was proposed by R. Agrawal et. al., in 1993. Mining awociation rules can be stated as follows:  Let I=[il, il, . _ _  i, ] he a set of items. Let D, the task- relevant data, be a set of transactions, where each transaction T is it set of items such that Td. The quantities of items boughi: are not considered. Each transaction is assigned an identifier, called TID. Let A be a set of items.

A transaction T .is said to contain A if and only if ACT. An association rule is an implication of the form A*B, where A d ,  BcI, and AnB=0.  The rule A*B holds. in the transaction set Cl with support s, where s is the percentage.

of transactions iii D that contain AuB (i.e., both A and B).

This is taken to tie the probability, P (AuB). The rule A*B has confidence c in the transaction set D if c is the percentage of tansactions in D containing A that also contain B. This is taken to he the conditional probability, P (BIA). That is, Siipport (A*B)=P (AuB)=s,  Confidence (A=$B)=P (BIA)  Mining assoc.lation rules is to mine strong association rules that satisfy the user-specified both minimum support threshold and coofidence threshold.

=SupporC (A3B)ISupport (A)=c.

0-7803-7508-4/02/$17.00 W O 0 2  IEEE   mailto:wangdexing198706@sina.com mailto:wangzb@mail.hf.ah.cn    3 Concept lattice  A context is defined as a triple C= (0, D, R I  , where 0 is a set of objects, D is a set of attributes, and R is the binary relationships between 0 and D, according to the inclusion relationships between extensions, there is a unique ordered set that describes the structure of inherent lattice, which defines natural groupings and relationship descriptions between the objects and their attributes in the context. This structure is also known as Concept (galois) lattice.

Define 3.1: Each couple such as (A, B) derived from the context is called a concept, where AE P (0), BE P (D), and P (O), P (D) are the power sets of 0 and D respectively. A and B create a connection in terms of the following properties.

A'=(meDlVgeA, g R m J, B'=(gEOlVgEB, g Rm] .

Where A'=B, B'=A. A is called the extension of concept, and B is called the intension, denoted as Extension(C) and Intension (C) respectively.

Defme 3.2: In the context C=(O, D, R), for a given concept (A, B), if B, CA' and Bi'=A, then B, is called an equivalent feature grouping of A', simply called equivalent grouping, In particular, A' is also an equivalent feature group of itself, then Equ (A)=(B,I B, CA' and B,'=A] can be defined.

Define 3.3: A couple (A,B) derived from context C is called a basic concept, where AsP(O), BEP(D) and B?Equ(A). If two concepts CI= (A,B,) ,CZ= (A,Bz) are equivalent two basic concepts, B,, Bz are equivalent grouping, then we also call that B1, BZ are equivalent basic intensions, therefore, C=(A, Equ(A)={B, U B2]) is obtained, the rest may be deduced by analogy, When there are k basic concepts CI, CZ ,.__ Ck , we can deduce C= (A, Equ(A)) =(A, (BI U Bz U B3, ... U Bt)), which is called an extended concept, or simply called concept, and B,(I=1,2, ... k) is called equivalent intension.

Define 3.4 In a ECL, partial order relation "< " between concept C,=(AI, BI) and Cz=(A2, B2) is defined as CI<C2~BzCBI ,  then C1 is the sub-concept (son) of CZ. and Cz is the supconcept (father) of C,, that is, the relationship between Cz and CI is the relationship father and son, If CI<C2, there isn't a concept C=(A, B) such that satisfy CI<C<C2, C1<Cz is called an immediate-sub- concept- immediate-sup-concept-relation between C, and Cz, the Hasse diagram of concept lattice is generated according to the partial order relationship: If CI<C2 is an immediate-sub- concept-immediate-sup-conce-pt, there exists a edge from cz to c,.

If concepts CI=(AI, B1) and Cz=(Az, B2) in a ECL satisfy AlcAz in the context C, there is a sub-concept-sup- concept-relation between CI and C2, denoted as CI<C2 Concept sets and their immediate-sub-concept -immediate- sup-concept relationships in the context consist of a complete concept is called Extended Concept Lattice  (simply called ECL). It can be proofed that GCL and ECL is isomorphic.

In particular, the concept containing all objects of C is called full concept, and empty concept is such a concept that contains none of objects of C. The sets of concept with these equivalent relationships constitute a complete lattice structure is also an Extended Concept Lattice.

Define 3.5: The Generalized Super-concept of concept C, denoted as super(C), can be defined as follows: 0 The immediate supconcept of C is generalized Super(C); C < C p  CI E snper(C).

@Generalized Super(C) includes of generalized Super(C) of the immediate sup-concept of C.  namely, (C<CI)A(C~ E super(C,))+ C2 E super(C) J.

Define3.6: As for concept C=(A, B), C'=(IAI, B) is called Quantitative Extended Concept of C, C is real concept of C', where IAl is the cardinal of extension A.

We mark basic quantitative extended concept comprised of intension B by C (B), and extensions of those are N by BasC (N).

The equivalent basic concepts CI=(A, Bl), Cz=(A, B2) are corresponding to equivalent basic quantitative extended concepts CI'= (IAl, Bl), C,'=(IAI, B2) respectively, however, the relationships between quantitative extended concepts depend on relationships between real concepts, that is, C,<Cz if and only if Cl'<C;. Lattice derived from quantitative extended concepts is called Quantitative Extended Concept Lattice (simply called QECL). Since we have ignored the specific extension information, realization of some problems solutions will be changed.

Theorem 3.1 : Concept CI=(BI) and concept CZ=(BZ) whose intensions cannot intersect each other is equivalent in a BasC (N) if and only if C (B,uBz)E BasC (N).

Theorem 3.2: If concept CI=(Nl, Bl), concept CZ=(N~, B2) in aBasC (N) satisfy B,,Bz, then C I  and Cz is equivalent.

Theorem 3.3:In a BasC(N), C,=(NI,BI)~CZ=(NZ.BZ) if and only if 3 B I I ~ B I . 3 B Z , ~ B Z .  satisfying C(Bl,)oC(B2,).

Theorem 3.4 CI=(NlrBI) and Cz(N~.Bz) in a BasC(N), satisfying B,2Bz, and NIfNz, then C2Esuper(C1).

Above the proofs of theorems, we can prove them by the definitions and theorems of extended concept lattice, here a n  abridged.

4 Mining association rules in quantitative extended concept lattice  As for concept C=(IAI, B=(Bl, B2 ... Bk]) in a QECL, we can introduce Support (B)=IAI/M of intension B to concept C, M is the sum of transactions in D, IAl is the extension cardinal of concept C.

Define 4.1: If Support (B) of concept C in a QECL is big than the support threshold, C is called a frequent concept, where each intension B, (i=l,..k) of B is a basic frequent items, the redundant intension of B is called reaundant frequent items.

We can acquire basic frequent items from frequent concepts in a QECL, obviously, each grouping basic intension in frequent concepts is basic frequent item sets.

Since redundant intension is obtained from basic intension, therefore, we can also obtain basic frequent item sets from the corresponding to basic intensions of frequent concepts.

Theorem 4.1:Frequent items is corresponding to the intension of ECL each other.

Theorem 4.2: IfC=(IAI, B=(BI, BZ ... Bk]) is a concept in a QECL, the support of B, (i=l ... k) is IAI/M, where IAl is the extension cardinal of C, M is the sum of transactions in D. If B is frequent item sets whose support is bigger than the support threshold, B must be a group of equivalent intension (basic or redundant intension) of the concept.

Base on the theorems mentioned above, we could mine  association rules in a given QECL.

Theorem 43:OIf concepts CI=(Nl,B1), Cz=(NZ,Bz) satisfy CZ~sup(CI), we can gain association rule: Bz 3 BI-Bz, its confidence is NI I Nz, otherwise, BI-Bz s Bz, its confidence is 100%.

@If concepts C1=(NlrBI) I Cz=(Nz,Bz) do not satisfy Czesup(C1), and there exists nonempty common maximum-sub-concept C=(N,B), namely, 3C?=(N?,B?).

which makes CE sup(C?) AC;c sup(C) ACzs  sup(C?) true, there are association rules between BI and Bz: BISBZ, BZ 3 B,. their confidences are N/NI, NiNz respectively.

5 The generation algorithm of quantitative extended concept lattice  From above the discussion in Section 3, we can obtain the algorithm tn generate quantitative extended concept lattice, which should be inserted initial quantitative extended concepts (corresponding to initial concepts) one by one, then adjust it according to Theorem 3.1-3.4. The algorithm is written as following:  insert a quantitative extended concept into QECL.

( I )  A quantitative extended concept C=(N,B) is inserted in the QECL, if there is equivalent concept of C in the QECL such that 3Cli (Cli oC), we merge the intension of C into the intension of Cli then finish the operation of insertion, that is, Intension(Cli):=Intension (Clj)uIntension(C): Else Won the assumption that CO is an immediate sup-concept of C, fmtly insert C as a sub-concept of C, into the QECL, fmish the operation in turn as follows: 0 each CI~(C~~<C&;~<C] connects C as an immediate- sup-concept of Cli,at the same time, remove the connections between C;i and Co.

@ insert the concept Ck=(Nk,Ik) that is generated when C intersects concepts in the QECL into the QECL, by the way the judgment of the relationships of equivalence and father- son in the algorithm can?be implemented according to Theorem 3.1-3.4.

Attribute setA=(al, d... an] in the context (0, D, R), partition generated by attribute a, can be expressed by  Algorithm Insertion (QECL, C):  [Oillvil, Oizlvi z... Oidvi~] ,  where Oi]vij is a object set 0, of attribute ai whose value is vij. therefore, we can gain a array of i n  tial quantitative extended concepts QC(ai)=l(N,~,ai=,vi;),(Ni~,q=vi~), ... (Ni~,q=vm)J . by attribute q.

The generation algorithm of the QECL: Create-In-Attr (QECL) is belov.: ( 1 ) Initialization: To generate QECL with the complete  concept (0, ( 1) and the null concept (( 1, all) as only two concepts.

do for C;EC(ai) do Insertion(QECL, Ci).

( 2 )  for I:=l to n  6 Algorithm malysis  Compared with Apriori, The generation algorithm of QECL has some advantages: @)On time complexity: Apriori algorithm is an influential algorithm for inining frequent item sets for Boolean association rule::, Apriori employs an iterative approach known as a level-wise search., where k-item sets are used explore (k+l)-itcm sets. Its time complexity is 0 (2?), In the worst case, since confined conditions of the thresholds of support and confidence are added in Apriori, in practice, Its time complexity, will be improved better. However, time complexity of the QECL generation algorithm is exponential inn, In practice, the QECL has typically 0 (nZ) or even 0 (n) rather than 0 (2 ?), resulting in a typical running time oi? 0 (n3) ?*I; which makes it feasible to generate QECL i n  large contexts.

@On storage cclmplexity: There isn?t obvious difference: they all need large storage.

@On the mining: association rules: The Hasse diagram of QECL can show all frequent item sets and their supports on itself while Apriori can not; on the one band, when attributes, object;, the conditions of mining association rule have been changed, Apriori has nothing to do but repeat, However, If attributes and objects have not changed, when the mining association rules conditions have changed, QECL will not rxonstruct again, we can mine association rules until they satisfy the user appointed conditions; on the other band, QECL can present association rules concise and distinct, while Apriori algorithm?s presentation is complicated and Ibstract.

7 An example of mining association rules in QECL  From the definitions and theorems mentioned above, we can mine associition rules on a QECL, taking a typical Example 6.1 as market basket analysis on page 232 in literature [6], There are nine transactions and 5  Items in ALLllLectronics transaction database D, that is M=9, we use data in Tabte 1 to generate QECL according to the definitions and theorems in above Sections, draw the corresponding Hasse diagram of QECL from the ALLELectronics transactions database D. as shown in Fig.

1.

I Table 1 I  (6.11) (7.12) (6.13)  (4,1112) (4,1113) (4,1213) (2,1214.14)  Fig. I .  The Hasse diagram of QECL corresponding to the context in Table 1  In Fig.1, the support of frequent item sets is not divided by M=9 in order to be convenient for explanation, we can easily obtain frequent item sets, for example, such .as the support of frequent item sets ( I1  1, (12) and (13) is 6,7,6 respectively, the support of frequent item sets (11121, (III3), (12131, (I214, 14) is 4,4,4,2 respectively, the support of frequent item sets (I11213), (IlI215, I5 1, (111214) is 2,2,1 respectively etc.'61  Similarly, we can generate association rules from the Hasse diagram in Fig. 1,for example, association rule I1 A 12-15, the support of frequent item sets (1112) and (111215, IS) is 4.2 respectively, then the confidence of association rule I1 A I 2 A 5  is 24 ,  as such I2AI5-11, 11312AI5, I 2 d 1  A I5 , whose confidence is 2/2 , 2/6 , 2/7 respectively, However the association rule I2 A 15311.

Since concept (I215) does not exist,  There is an common maximum-sub-concept (111215,,15), whose support is 2, we can obtain the association rule 12A IS-Il,whose confidence is u2. The results are identified with Apriori in generating association rules.

Finally, we can generate association rules base on QECL, the approach presents association rules visual, vivid and  concise, improves mining association rules efficiency and avoids the blindness, Above all, user can interactively mine useful association rules in Hasse diagram of concept lattice according to his subjective interests:  8 Conclusions  In the paper, we discuss the algorithm of mining association rules base on QECL, Since frequent item sets and their supports are shown on the Hasse diagram of QECL, it is more convenient for us to mine association rules, improve mining association rules pertinence, reduce searching space of the algorithm, therefore it is obvious superior to Apriori, which need to scan databases for a great number of times, and sometimes repeat from scratch when the thresholds of support and confidence of association rules have been changed.

