Mining Negative Association Rules in Multi-database

Abstract   Negative association rules (NARs) catch mutually exclusive correlations among items. They play important roles in decision-making. But nowadays the techniques of NARs mining focus on mono-database.

With the rapid development of information and communication technologies, multi-database mining is becoming more and more important. Knowledge conflicts within databases may occur when mining both the positive and negative association rules simultaneously. This paper proposed synthesis correlation to resolve conflicts and a new algorithm PNAR_MDB for mining NARs in multi-database on base of previous work on multi-database mining. The experimental results demonstrate that the algorithm is correct and effective.

1. Introduction   Traditional association rule mining has been mainly focused on identifying the relationships strongly associated among itemsets that have frequent and high- correlation. It is the form X?Y call positive association rules (PARs). As an important supplement, the other three forms X??Y, ?X?Y, ?X??Y call NARs which can catch mutually exclusive correlations among items; they can provide much useful information and play an important role in decision-making.

Nowadays most of the techniques of NARs mining focus on mono-database. With the rapid development of information and communication technologies, a company?s data may be spread over several continents.

In such circumstances, multi-database mining plays a major role in the process of extracting knowledge from different data sources. Traditional multi-database  mining puts all the data into a single dataset, this way reflects one aspect of the data in multi-database and destroys the distribution of local patterns, so some important rules cannot be extracted form databases.

Furthermore, mining NARs in multi-database can cause knowledge conflicts within databases. In order to resolve conflicts, we determine the relevance of synthesizing frequent itemsets which generate contradictory rules and then obtain valid rules.

The main contributions of this paper are as follows: 1. We proposed synthesis correlation to resolve  knowledge conflicts.

2. An algorithm PNAR_MDB is proposed to discover  NARs in multi-database.

The rest of this paper is organized as follows.

Section 2 is an introduction of the techniques of NARs mining. A new method for discovering NARs in multi- database and algorithm design is presented in Section 3. Section 4 is experimental results and Section 5 is conclusions and future work.

2. The techniques of NARs mining  2.1. Problem statement   Let I = {i1, i2? im} be the universe of items. A set X  ? I of items is called an itemset. A transaction t = (tid, X) is a tuple where tid is a unique transaction ID and X is an itemset. A transaction database D is a set of transactions. The count of an itemset X in D, denoted by count(X), is the number of transactions in D containing X. The support of an itemset X in D, denoted by supp(X), is the proportion of transactions in D that contain X. The negative rule X??Y holds in the transaction set D with confidence conf (X??Y) = supp (X??Y)/supp (X). A    rule X??Y is a valid rule if its support and confidence meet user specified minimum   DOI 10.1109/FSKD.2008.120    DOI 10.1109/FSKD.2008.120     support (minsupp) and minimum confidence (minconf) thresholds.

2.2. Related work   Negative association was first noted by Brin et al.

[1]. Since then there have been several attempts to solve the problem of NARs mining. Savasere et al. [2] proposed a method to mine strong NARs. Yuan et al.

[3] proposed a method of mining NARs based on locality of similarity. In [4] and [5] the authors proposed a PR (Probability Ratio) model and proposed a new method to discover both positive and negative association rules. In [6] the authors proposed a PNARC (Positive and Negative Association Rules on Correlation) and proposed a simple but efficient method to calculate the support and confidence of NARs through positive association rule?s, furthermore this model can detect and delete those self? contradictory rules by correlation.

corrX,Y= ( )  ( ) ( ) supp XY  supp X supp Y   (1) If corrX, Y >1, then X and Y is positively correlated, the more events A occur, the more events Y do.

(2)If corrX, Y <1, then X and Y is negatively correlated, the more events A occur, the less events Y do.

(3)If corrX, Y =1, then X and Y is independent, the occurrence of event X has nothing to do with the occurrence of event Y.

A method of mining positive and negative association rules based on multi-confidence and Chi- squared test is proposed in[7], this method solutes a dilemmatic situation of using a single confidence threshold. [8] Proposed a new measure VRRCC and proposed a algorithm PNAR-MLMS which can generate mining positive and negative association rules from frequent and infrequent itemsets.

3. Mining NARs in multi-database   The process of multi-database mining can be divided into three steps: First, identifying quality data and searching for a good classification of the databases. Second, identifying two kinds of new patterns, high-vote patterns and exceptional patterns from local patterns. Third, synthesizing patterns in local patterns by weighting.

Weighting is a common way to gather, analyze, and synthesize information from different databases in scientific research and application. [9] Proposed a method of synthesizing rules by weighting. But it only  considers positive association rules; this will leave out much useful information probably, so that globe?s decision-making will be disadvantageous. Therefore, we extend the method to negative association rules of multi-database.

3.1. Synthesizing rules by weighting   In order to synthesize rules from different databases in the branches of a company, the weight for each database must be determined. In practice, a head office would be interested in rules that are supported, or voted for, by most of its branches. High-vote rules have a greater chance of becoming valid rule than low- vote rules.

1. Weight of rules  Let S= {S1, S2 ?Sm}, and R1, R2?Rn  be all rules in S. The weight of Ri as follows:   ( )  ( ) i  i R n  j j  N u m R  N u m R ?  =  = ?   Where i=1, 2?n, and Num(R) is the number of databases that contain rule R, or the vote of R in S.

2. Weight of databases  Let D1,D2,?Dm be m different databases in the branches of a company, Si the set of association rules from Di (i=1,2,?m,) S={S1,S2,?,Sm}, and R1,R2,?Rn be all rules in S. The weight of Di as follows:   ( )  ( )  i  k j  i  h  h j  k R R S  D m  h R j R S  N u m R  N u m R  ? ?  ?  ?  = ?  ? =  ?  ?  ? ?   3. Synthesizing rules by weighting Let D1, D2?Dm be m different databases from one  class of the branches of a large company, and Si be the set of association rules from Di (i=1, 2?m,). For given rules, suppose ?1, ?2??m are the weights of D1, D2?Dm respectively, synthesizing model as follows.

supp?(X?Y) =?1?supp1(X?Y) + ?2?supp2(X?Y)  +?+?m?suppm(X?Y)                     (1) conf?(X?Y) =?1?conf 1(X?Y) + ?2?conf 2(X?Y)  +?+?m?conf m(X?Y)                     (2) supp?(X??Y) =?1?supp1(X??Y) +  ?2?supp2(X??Y) +?+?m?suppm(X??Y)                  (3)  conf ?(X??Y) =?1?conf 1(X??Y) + ?2?conf 2(X??Y) +?+?m?conf m(X??Y) (4)  Other forms are similar.

Where supp?(R) is the support of R after synthesizing, conf? (R) is the confidence of R after synthesizing, suppi(R) is the support of R in Di, and confi(R) is the confidence of R in Di (i=1, 2?m,).

3.2. Select valid rules by synthesis correlation   Knowledge conflicts   within   databases     may occur when mining both the positive and negative association rules simultaneously, For example: if X?Y, X??Y, ?X?Y , ?X??Y in different databases respectively, here ,we do not consider the form Y? X, ?Y? X, Y??X, ?Y??X. The rules of the form X?Y, ?X??Y and?X?Y, ?X??Y are mutually contradictory. We can select valid rules by synthesis correlation of frequent itemsets X, Y in each database after synthesizing.  We define synthesis correlation is corr?(X,Y)   ( , ) ( )  ( ) ( )X Y supp XY  corr supp X supp Y  ? ?  ? ?  =                   (5)  Where supp ?(XY) is the support of frequent itemset XY in each database after synthesizing.supp ?(X) and supp ?(Y) is the support of frequent itemset X and Y in each database after synthesizing.

(1) If corr?(X, Y)>1, we mine rules of the forms X?Y and ?X??Y.

(2) If corr?(X, Y) <1, we mine rules of the forms X??Y and ?X?Y.

(3) If corr?(X, Y) =1, there is no rules generated.

.

3.3. Algorithm design  Algorithm: PNAR_MDB Input: S1, S2?Sm: rule sets; minsupp, minconf: threshold values; Output: S: synthesized association rules; (1) Let S ?{S 1?S 2?...?S m} (2) For each rule R in S do   ( )  ( ) i  i R n  j j  N u m R  N u m R ?  =  ? ?  ?  (3) For i = 1 to m do?   ( )  ( )  i  k j  i  h  h j  k R R S  D m  h R j R S  Num R  Num R  ? ?  ?  ?  = ?  ? ?  ?  ?  ? ? ?  (4)? Synthesize each rule in S by weighting (5) If (there are contradictory rules in S) then {  calculate synthesis correlation of contradictory rules by equation (5)  If corr?(X, Y) >1 then { S?S?{?X?Y, X??Y};}  If corr?(X, Y) <1then { S?S-{X?Y, ?X??Y} ;}}  (6) Output the high-rank rules in S whose support and confidence are at least minsupp and minconf respectively;  (7) End all.

4. Experimental results   In order to demonstrate the correctness of the algorithm, we use several experimental databases. We set minsupp=0.2, minconf=0.2, ?=0.05. We used the method of [8] to mine association rules. Flag=11, flag=12, flag=13, flag=14 denote association rules of the form A?B, A??B, ?A?B, ?A??B respectively.

Table 1. Experimental databases   database Tid 1 2 3 4  1 Tlist A, B,C B,D,E B,C C,E  2 Tlist C,D A,B,E A,B,C B,C  3 Tlist A,B,C D,E B,C,D   Table 2.Generate the number of association rules   database Flag 11 12 13 14 Grand 1 Total 20 6 6 20 52 2 Total 18 8 8 18 52 3 Total 18 6 6 18 48 synthesied Total 12   12 24   Table 2 shows if we put all the datasets into a  single dataset simply, it will lose some of the negative association rules and discard much useful information; so we cannot synthesize the databases simply, we should synthesize the rules by weighting.

The method of synthesizing rules by weighting is now illustrated by way of an example. Let S1, S2, S3 be the set of association rules from database D1, D2, D3 respectively, minsupp=0.2, minconf=0.3.

Table 3. The rule sets of databases   Rule set rules supp_L supp_R supp conf       S1  A?D 0.5 0.6 0.4 0.8 ?A??B 0.5 0.7 0.45 0.5 ?C?B 0.6 0.7 0.4 0.75 ?E?F 0.7 0.6 0.4 0.667   S2  A?D 0.4 0.5 0.35 0.875 ?A??B 0.4 0.6 0.3 0.5 ?C?B 0.5 0.6 0.25 0.7   S3  A?D 0.6 0.7 0.5 0.3 ?A??B 0.6 0.6 0.4 0.5 ?C??B 0.5 0.6 0.4 0.6 E?F 0.6 0.5 0.4 0.667  Note: supp_L, supp_R and supp are the supp of the frequent items.

We can get the weight of the three databases: ?D1=23/65, ?D2=22/65, ?D3=20/65.the supp and conf of association rules after synthesizing by the weight of the database as follows.

Table 4. Synthesize rules   Synthesize rule      supp? conf? R1:   A?D 0.4138 0.6715 R2: ?A??B 0.3838 0.5 R3:  ?C?B 0.2262 0.5023 R4:  ?E?F 0.4 0.667 R5:  ?C??B 0.4 0.6 R6:   E?F 0.4 0.667  From Table 4 we can see R3 and R5, R4 and R6 are  contradictory.  So we need calculate the synthesis correlation.

( , ) ( )  ( ) ( )B C supp BC  corr supp B supp C  ? ?  ? ?  = =1.0266>1  So the rule ?C??B is valid rule. Similarly  ( , ) ( )  ( ) ( )E F supp EF  corr supp E supp F  ? ?  ? ?  = =1.6717>1, so  E?F is the valid rule.

Finally we obtained the association rules are A?D,  ?A??B, ?C??B, E?F.

5. Conclusions and future work   NARs play an important role in decision-making.

Research on mining NARs in multi-database is very important. This paper proposed a new algorithm PNAR-MDB for mining negative association rules in multi-database. The experimental results demonstrate that the algorithm can work effectively. For future  work, we will look for a new approach to decrease the number of rules before the rules are synthesized   Acknowledgements   This work was partially supported by Shandong Science Foundation (Y2007G25); the National Post Doctor Foundation of China under Grant (20070420302) and Excellent Young Scientist Foundation of Shandong Province, China (2006BS01017).

6. References  [1] Brin, S., Motwani, R., and Silverstein, C.: Beyond  Market: Generalizing Association Rules to Correlations.

In: Processing of the ACM SIGMOD Conference (1997) 265-276.

[2] Savasere, A., Omiecinski, E., Navathe, S.: Mining for Strong Negative Associations in a Large Database of Customer Transaction. In: Proceedings of the 1998 494?502.

[3] Yuan, X., Buckles, Bill P., Yuan, Z., Zhang, J.: Mining Negative Association Rules. In: Proceedings of the Seventh IEEE Symposium on Computers and Communications (2002) 623-629.

[4] Wu, X., Zhang, C., Zhang, S.: Mining both Positive and Negative Association Rules. In: Proceedings of the 19th 658-665.

[5] Zhang, C., Zhang, S.: Association Rule Mining, LNAI 2307, Springer-Verlag Berlin Heidelberg (2002) 47-84.

[6] Dong, X., Wang, S., Song, H.: Study of Negative Association Rules, Beijing Institute of Technology Journal 2004, 24(11): 978-981.

[7]  Dong, X., Sun, F., Han, X., Hou, R.: Study of Positive and Negative Association Rules Based on Multi- confidence and Chi-Squared Test. LNAI 4093, Springer- Verlag Berlin Heidelberg (2006) 100-109.

[8] Dong, X., Niu, Z., Shi, X., Zhang, X., Zhu, D.: Mining both Positive and Negative Association Rules from Frequent and Infrequent Itemsets. ADMA 2007, LNAI 4632, Springer-Verlag Berlin Heidelberg (2007) 122? 133.

[9] Wu, X., Zhang, S.: Synthesizing high-frequency rules Knowledge and Data Engineering, (2003) 15(2):353?367.

