Geographic Knowledge Discovery in INGENS: an Inductive Database Perspective

Abstract  INGENS is a prototype of GIS which integrates a geo- graphic knowledge discovery engine to mine several kinds of spatial KDD objects from the topographic maps stored in a spatial database. In this paper we describe the main principles of an inductive spatial database in INGENS. In- ductive database allows to keep permanent KDD objects and integrate database technology with systems for the ge- ographic knowledge generation. In contrast to traditional spatial database technology, inductive database allows to answer queries which require synthesizing and applying plausible knowledge which is generated by (inductive) in- ference from both spatial objects and KDD objects (prior knowledge) stored in the same database.

1 Introduction  The huge amount of geographic data currently collected in geoscientific, economic and environmental situations has promoted the current generation of spatial database systems which is appositely designed to provide the database infras- tructure for adequately storing and searching geographic data. Similarly to conventional database systems, spatial database systems provide answers only if the answers are in the database or are computed by the spatial primitives in database. A deductive database overcomes this limitation by adding to a spatial database the capabilities for drawing deductive consequences from data using a rule base. The rule base (or knowledge base) can be constructed by spatial data mining methods. Research in spatial data mining and geographic knowledge discovery is very active in last years [15, 14]. Anyway if spatial data mining methods remain not integrated with database systems, employing domain knowledge in the geographic knowledge discovery process makes data miner in charge of integrating different tech-  nologies such as data mining, spatial databases, knowledge bases and GIS. This is the spatial counterpart of a Knowl- edge and Data Discovery Management System (KDDMS) [6] to manage spatial KDD applications.

The objects queried in spatial KDDMS are not only the spatial objects stored in the spatial database, but also the spatial KDD objects (Knowledge Discovery Objects) of the knowledge base. KDD objects may not exist a-priori, thus querying them may require their run time generation. Al- ternatively they may be simply retrieved in the case they are previously generated and stored in a database. This view gives rise to an inductive database (inductive queries, data mining language and inductive solvers) [3] in geographic knowledge discovery process in order to answer to spatial queries which require drawing spatial inductive inferences and deriving plausible conclusions.

Research on inductive database provides several propos- als for inductive query languages, such as Mine Rule [2], MSQL [7] and DMQL [5] and introduces constraint-based mining as a key mechanism for inductive query evaluation and thus knowledge discovery [4]. Anyway these works do not provide a general purpose solution to the specific issues posed by spatial dimension (i.e. computing spatial relation- ships and properties, e.g. area or perpendicularity, which are not explicitly encoded in database, spatial autocorrela- tion, spatial objects which can be considered at different levels of abstraction). For example, MO-DMQL [13] is a spatial data mining query language to support knowledge discovery from movement data only.

In this paper, we present the concepts and an implemen- tation of an inductive spatial database in INGENS that is a prototype of GIS which offers data mining facilities to support tasks of topographic map interpretation. Originally built [11, 12] around the idea of inducing classification rules from geo-referenced data, INGENS is extended by integrat- ing a spatial data mining query language, called SDMOQL [10], and by supporting the discovery of association rules   DOI 10.1109/ICDM.Workshops.2008.81    DOI 10.1109/ICDMW.2008.120     [1]. The answer to an SDMOQL is a collection of spatial KDD objects (classification or association rules) which are induced from the spatial database but not stored in it. The introduction of an inductive spatial database in INGENS al- lows to store spatial KDD objects to be available for sub- sequent queries. In this way, the geographic knowledge discovery process is performed by answering spatial KDD queries formulated in SDMOQL. A spatial KDD object can be intended as a spatial constraint to be satisfied in retriev- ing spatial objects which cover it or learning new spatial KDD objects which are spatially related to.

INGENS is briefly presented in the next Section. Princi- ples of the inductive spatial database are described in Sec- tion 3, while in Section 4 we present an extension of SD- MOQL to query the inductive database. Finally, in Section 5, some examples of SDMOQL queries are described.

2 INGENS: Concepts and Implementations  INGENS is a software system that provides the GIS in- frastructure for editing, storing, interpreting, and displaying topographic maps. Topographic maps are partitioned into a number of cells. Spatial objects located in a cell are vector- ized and stored an Oracle 10 g Spatial Database. The spa- tial data mining engine works in a first-order logic and al- lows to discover spatial patterns which capture a spatial ar- rangement of data. This arrangement is expressed in terms of spatial properties and relations. At present data mining engine integrates ATRE [9] to induce spatial classification rules and SPADA [8] to discover spatial association rules.

The engine works on a conceptual representation of data, but topographic maps are stored in a vector for- mat. INGENS integrates spatial primitives to compute primitive descriptors of spatial objects located in a cell.

Some descriptors are contain(C,L) (cell C contain a ge- ographic object L), type of (L) (type of L), part of (L,F) (the geographic object L is composed by the geometry F), line to line(F1,F2) (spatial relations between lines F1 and F2), line to region(F1,F2) (spatial relations between line F1 and polygon F2), region to region(F1,F2) (spatial relations between polygons F1 and F2) and so on. Descriptors which involve lines (e.g. line to line) cannot be computed on poly- gons or points. Similarly descriptors like region to region can be computed only on polygons. INGENS allows to compute descriptors to model direction relations between cells (e.g. north(C1,C2) - cell C2 is at north of cell C1).

The knowledge discovery process is condensed in a query written in SDMOQL and run on the server side.

3 Inductive Spatial Database  An inductive spatial database aims at transforming IN- GENS in a Spatial Knowledge and Spatial Data Manage-  ment System where the entire geographic knowledge dis- covery process is viewed as querying a database which con- tains both spatial data and generalization of spatial data in- duced by means of spatial data mining methods. The def- initions of inductive spatial database schema and inductive spatial database instance are adapted from [3].

Definition 1. An inductive spatial database schema is a pair ? = (R, (QR, e, V )), where R is a spatial database schema, QR is a collection of spatial KDD objects, V is a set of result values and e is the evaluation function that defines how a spatial KDD object occurs in some spatial data. The function e maps each element (r, p) to an element of V , where r denotes some spatial database with schema R and p is a spatial KDD object from QR.

Definition 2. An instance of an inductive spatial database schema? is the pair (r, s) where r is a spatial database with schema R and q is a subset of QR.

In INGENS, R corresponds to the object-relational data schema of the spatial database where vectorized topo- graphic maps are stored and QR represents the collection of spatial KDD objects which are not necessarily available a-priori in the database, but they can be retrieved by run- ning SDMOQL queries. Two kind of spatial KDD objects are defined, that is, the spatial classification objects and the spatial association objects.

Definition 3 Let p be a spatial classification object of the concept c, p is in the form ?head ? body, bk?, where: (1) head is the classification literal which represents c. (2) body is the conjunction of literals which provides an operational definition of c. (3) bk is the (possibly empty) set of first- order definite clauses which provides the operational def- initions of which literals in the body are not computed as primitive descriptors in INGENS.

The literal in the head is in the form class(V ) = c with V the key variable that identifies the spatial object to be classified and class the classification literal. To satisfy the linkedness, V occurs as argument in at least one literal of the body. Each literal in the body may be either a primitive literal (i.e. contain, type of, area, ...) whose computation is demanded to the spatial primitives integrated in INGENS or a new literal whose operational definition is provided in the bk. The operational definition of a new literal may include both primitive literals and new literals which are defined in the same bk. Example 1 describes a spatial classification object which provides an operational definition for the con- cept fluvial landscape.

Example 1. Let us consider the spatial classification object p defined as follows: p.head: class(C)=fluvial landscape.

p.body: cell(C) ? contain(C,Rd)=true ?  road to river(Rd,Rv)=roughly perpendicular.

p.bk: (1) cell(C)? type of(C)=cell.

(2) road to river(A,B)=C? type of(A)=road,     type of(B)=parcel, part of(A,D)=true, part of(B,E)=true, line to line(D,E)=C.

The head identifies fluvial landascape as the classification concept of this spatial KDD object. The body encodes the operational definition of fluvial landscape that is learned as a classification rule by ATRE. In this case, the operational definition in the body classifies a cell C (key variable of this rule) as a fluvial landscape if C is crossed by a road Rd that is almost perpendicular to a river Rv. The bk includes the definition of the literals cell and road to river which are not computed by means of primitive descriptors automati- cally computed by INGENS.

Definition 3 can be extended in order to allow the repre- sentation of a (possible) dependency between several clas- sification concepts which are learned as part of the same recursive logical theory.

Example 2. A recursive logical theory which models the dependency between the concepts of fluvial landscape and system of farms is the following: R1: class(C)=system of farms? type of(C)=cell,  contain(C,A), type of(A, cultivation), point to region(A,B), type of(B,parcel),  R2: class(C)=fluvial landscape? close(C,A)=true, class(A)=system of farms, contain(C,B)=true, type of(B)=river  Definition 4. A recursive spatial classification object p is a spatial classification rule whose body includes one or more classification literals. p is in the form ?head ? body, bk, F ? with F a conjunction of disjunctive spatial classification objects: one disjunction for each distinct con- cept which appears as a classification literal in p.body. A spatial classification object is a special case of recursive spatial classification object where F = ?.

According to Definition 4, the logical theory T = {R1, R2} presented in Example 2 is stored in the inductive spatial database as two spatial classification objects, that is, p1 and p2, respectively. p2 is a recursive spatial classifica- tion object where p2.F includes p1. From a practical point of view, only the object references to the base spatial KDD objects are stored in F thus avoiding to store the same spa- tial classification object several times in database.

To complete the definition of spatial classification object, we define the evaluation function e.

Definition 5. Let (i) r be a spatial database with schema R and (ii) p be a spatial classification object, the evalu- ation function e(r, p) returns a sequence of boolean val- ues [v1, . . . , vn], one boolean value vi for each distinct spatial object (reference object) ri of r that matches the key variable of p in r. e(r, p) is computed as e(r, p) = [E(r1, p), . . . E(rn, p)]. E(ri, p) = true iff p covers desc(ri|r) ? bk, that is, there is a substitution ? such that p? ? {desc(ri|r) ? bk}. desc(ri|r) denotes the first-order conceptual description of both the reference object ri and  the task-relevant spatial objects which are stored in r and are (transitively) spatially related to ri according to the primi- tive literals which appear in the body and bk of p.

Example 3 describes how to compute e for a spatial clas- sification object p.

Figure 1. Vector representation of the cells a (left) and b (right) used in Example 2.

Example 3. Let us consider the spatial classification object p defined in Example 1 and the spatial database r where the cells a and b of Figure 1 are stored. The conceptual description of r is obtained by extracting the literals type of, contain, part of and line to line for the spatial objects (e.g.

roads and rivers) located in the cells.

type of(a)=cell, contain(a,rv1 a), type of(rv1 a)=river, part of(rv1 a,x1 a),part of(rv1 a,x2 a),contain(a,rd1 a), type of(rd1 a)=road, part of(rd1 a,x3 a), contain(a a,rd2 a), type of(rd2 a)=road, part of(rd2 a,x4 a), line to line(x3 a,x4 a)=roughly parallel, line to line(x3 a,x1 a)=roughly perpendicular type of(b)=cell, contain(b,rd1 b), type of(rd1 b)=road, part of(rd1 b,x2 b), contain(b,rd1 b), type of(rd1 b)=road, part of(rd1 b,x2 b), line to line(x1 b,x2 b)=roughly perpendicular  e(r, p) = [E(a, p), E(b, p)] = [true, false], since there is the substitution ? = {A ? a, Rd ? rd1, Rv ? rv1} such that p? ? desc(a|r)?bk, while there is no substitution ?? such that p?? ? desc(b|r) ? bk.

Only the values e(r, p) that the user?s query requires are really computed. Hence, SDMOQL syntax must be ex- tended by providing a new primitive to invoke the compu- tation of e in both inductive and deductive requests.

Similarly to classification, we can provide the definition of a spatial association object and its evaluation function.

Definition 6 Let p be a spatial association object that is a spatial association rule in the form A ? C(supp, conf), p is in the form ?A, C, supp, conf, bk?, where: (1) A (an- tecedent of the rule) and B (consequent of the rule) are con- junctions of literals such that A?B = ?, A?C is a spatial pattern that satisfies linkedness. (2) supp (support of the rule) and conf (confidence of the rule) are estimates of the probabilities p(A?C) and p(C|A) on the spatial data mined     to discover the rule, (3) bk is a possibly empty set of first- order definite clauses which provide the definitions of non primitive literals which appear in A ? C.

Definition 7 By assuming V = {true, false}, for each spatial database r with schema R and spatial association object p, e(r, p) = true iff the support of p.A? p.B com- puted in r ? p.bk is greater than p.sup and the confidence of p.A? p.B computed in r ? p.bk is greater than p.conf .

4 SDMOQL  SDMOQL is a spatial data mining query language to for- mulate spatial KDD queries in INGENS. The SDMOQL top-level syntax [10] is the following: ?SDMOQL? ::= ?SDMOQLStatement?; {?SDMOQLStatement?; }  ?SDMOQLStatement? ::= ?InductiveStatement? ?InductiveStatement? ::= ?SpatialObjectQuery?  mine ?KindOfPattern? analyze ?DataDescriptors? with descriptors ?PatternDescriptors? [?BackgroundKnowledge?] {?Hierarchy?} [with ?InterestingnessMeasures?]  The syntax is extended with (1)language primitives to re- trieve spatial objects which cover one or more spatial KDD objects stored in the database, and (2)language primitives to retrieve possibly recursive spatial KDD objects which have a spatial dependency with spatial KDD objects already stored in database. The novel top level syntax of a SD- MOQL statement is reported below: ?SDMOQLStatement? ::= ?DeductiveStatement? |?InductiveStatement?  4.1 Deductive SDMOQL queries  The top-level syntax of ?DeductiveStatement? is reported in th following: ?DeductiveStatement? ::= ?SpatialObjectQuery?  evaluate ?SpatialKDDObjectQuery? analyze ?DataDescriptors? with descriptors ?PatternDescriptors? [?BackgroundKnowledge?] The analyze clause specifies which primitive descrip-  tors, among those automatically generated by INGENS, must be used to describe the spatial objects extracted by means of the ?SpatialObjectQuery?. The with de- scriptors clause specifies the list of descriptors which appear as literals in the spatial KDD objects selected by ?SpatialKDDObjectQuery?. They are either primi- tive descriptors which are specified in the analyze clause or new descriptors whose definition is provided in the ?BackgroundKnowledge?. The ?SpatialKDDObjectQuery? depends on the kind of knowledge.

?SpatialKDDObjectQuery? ::= ?SpatialClassObjQuery?}  |?SpatialAssObjQuery?} The SDMOQL syntax for ?SpatialClassObjQuery?} is  defined in the following.

?SpatialClassObjQuery? ::= ?SpatialClassObject?{, ?SpatialClassObject?}  ?SpatialClassObject? ::= class ?concept? as ?rule body? with key variable ?key variable? The class clause specifies the classification concept  whose operational definition is provided in the To compose the ?SpatialClassObjQuery?, INGENS users  select the set of spatial classification objects from those stored in the database. The descriptors in both the analyze clause and the with descriptors clause are automatically extracted from both the body part and the bk part of these classification objects. The define knowledge clause pro- vides the definition of all non primitive descriptors. This definition is automatically extracted from the bk of the se- lected classification objects.

In INGENS the execution of the query is in charge of the SDMOQL interpreter. First, the query is syntactically and semantically validated. Second, INGENS generates the conceptual representation of the spatial objects selected by computing the descriptors in the analyze clause and rep- resenting them in first-order formalism. Third, each spatial KDD object selected by the query is evaluated over the con- ceptual representation of selected spatial data by taking into account the background knowledge.

Similarly to the classification case, the syntax for ?SpatialAssocObjectQuery? is defined in the following.

?SpatialAssocObjQuery? ::= ?SpatialAssocObject?{?SpatialAssocObject?}  ?SpatialAssocObject? ::= association rule?association rule statement? with support ?supp value? confidence ?conf value? The association rule clause specifies the association  rule defined in ?association rule statement?, while the clause support and the clause confidence specify the min- imum support and confidence, respectively. Each associ- ation rule object is selected from those stored in database and mapped into the association rule clause, support clause and confidence clause. Although the syntax of ?SpatialAssocObjQuery? is defined, it is not currently sup- ported by the SDMOQL Interpreter in INGENS.

4.2 Inductive SDMOQL queries  The top-level syntax of ?InductiveStatement? is reported below. Extensions are in italics.

?InductiveStatement? ::= ?SpatialObjectQuery?  mine ?KindOfPattern? [using ?SpatialClassObjectQuery?] [recursion mode ?ON/OFF?] analyze ?DataDescriptors? ...

The using clause specifies which spatial classification objects among those stored in the database must be used as base classification objects for answering this inductive query. If recursion mode is on, spatial classification ob- jects to be retrieved by the query are induced as part of a logical (recursive) theory. This theory originally in- cludes the first-order rules which belong to the base spatial classification objects selected from database by means of ?SpatialClassObjectQuery?. The theory is then extended by adding the first-order rules which are induced by ATRE for the class concepts defined in the mine clause.

Recursion ON allows the induction of rules whose body may involve literals which are the class concepts already de- fined in the theory. A (recursive) classification rule is stored in database as a (recursive) classification object.

5 Query Examples  We present some examples of geographic knowledge discovery process performed by running SDMOQL queries over the inductive spatial database of INGENS. This database currently contains a map sheet (M81 NW) on a scale of 1:25000 produced by the Italian Military Geo- graphic Institute (IGMI). The map covers 90 km2 in the surroundings of the Ofanto River, spanning from the zone of Canosa to the Ofanto mouth (see Figure 2).

Figure 2. Surroundings of Ofanto River. The boundary of cells labeled as system of farms (fluvial landscape) is green (blue).

First, we present an inductive SDMOQL query that is formulated according to the original SDMOQL syntax. A portion of the query is reported in the following.

select x.* from Cell as x where x.id in (34, 43, 44, 51, 52, 53, 54, 61, 62, 63) mine classification as fluviallandscape for class( )=fluvial landscape analyze area/2, contain/2, line to line/2, ... type of/1 with descriptors contain/2 cost 5 type boolean,  area parcel/1 cost 0 type real, cultivation to parcel/2 cost 0 type nominal, ...

define knowledge area parcel(A,B)=C as  [type of(A)=parcel, part of(A,B)=true, area(B)=C], ...

The data miner user graphically composes the SDMOQL  query and associates the cells with a concept (fluvial land- scape or system of farms) thus completely defining the training data. To answer the query INGENS data mining engine runs ATRE on the conceptual description generated for the cells under analysis. ATRE learns the classification object: class(X1)=fluvial landscape? contain(X1,X2)=true,  road to river(X2,X3)=roughly perpendicular, road to river(X4,X3)=roughly perpendicular  which discriminates training cells labeled as fluvial land- scape from other cells. This classification object is now kept permanent in database and available for selection in subsequently SDMOQL queries.

Second, we present an SDMOQL query that is formu- lated to retrieve the (possibly recursive) spatial classifica- tion objects which provide an operational definition of ?sys- tem of farms? by exploiting a (possibly) spatial relationship between system of farms and fluvial landscape. The train- ing data are exactly the same selected in the previous query.

In addition, spatial classification objects which are stored in database for the fluvial landscape concept are now selected in the query. A portion of the query is reported in the fol- lowing: select x.* from Cell as x where x.id in (34, 43, 44, 51, 52, 53, 54, 61, 62, 63) mine classification as systemoffarms for class( )=system of farms using class( )=fluvial landscape as  [contain(X1,X2)=true, road to river(X2,X3)=roughly perpendicular, road to river(X4,X3)=roughly perpendicular] with class X1  recursion mode on analyze area/2, contain/2, direction/1, line to line/2, ...,  type of/1, north/2 with descriptors contain/2 cost 5 type boolean,  north/2 cost 5 type boolean, area parcel/1 cost 0 type real, ...

road to river/2 cost 0 type nominal  define knowledge area parcel(A,B)=C as [type of(A)=parcel, part of(A,B)=true, area(B)=C], ...

To answer the query, ATRE learns a disjunction of re-  cursive classification rules which provide the operational definition of ?system of farm? by taking into account spa- tial relations with the classification objects which model the ?fluvial landscape? in the database. The rules are: class(X1)=system of farms? north(X2,X1)=true,  class(X2)=fluvial landscape,contain(X1,X3)=true, area parcel(X3)in[105050,152450].

class(X1)=system of farms?north(X2,X1)=true, class(X2)=fluvial landscape,contain(X2,X3)=true,     geographic direction river(X3)=east.

Both rules are stored in the inductive spatial database in  the form of recursive spatial classification objects.

Finally, we present a consider an SDMOQL query to lo-  cate the occurrence of fluvial landscape (whose definition is stored as KDD object in database) on a portion of a map stored in the same database (in this example, the cells 6, 7, 8, 16, 17, 18, 26, 27 and 28).

select x.* from Cell as x where x.id in (6, 7, 8, 16, 17, 18, 26, 27, 28) evaluate class( )=fluvial landscape as  [contain(X1,X2)=true, road to river(X2,X3)=roughly perpendicular, road to river(X4,X3)=roughly perpendicuar] with class X1  analyze contain/2, type of/1, part of/2, line to line/2 with descriptors contain/2 cost 0 type boolean,  road to river/2 cost 0 type nominal define knowledge road river(A,B)=C as [type of(A)=road,  part of(A,D)=true, type of(B)=river, part of(B,E)=true, line to line(D,E)=C].

This query correctly retrieves the cells 8, 16, 17 and 26 as fluvial landscape. The query also returns the cell 7 as a fluvial landscape, while the domain expert recognizes it as a system of farm. This is a case of false positive.

6 Conclusions  In this paper, we introduce principles and architecture of an inductive spatial database in INGENS which allows to view the geographic knowledge discovery process as query- ing a database which contains both spatial data and gener- alization of spatial data induced by means of spatial data mining. Spatial KDD queries are formulated in SDMOQL which is extended in order to query both the spatial objects and the spatial KDD objects As future work, we plan to extend SDMOQL syntax to select, manipulate and query ?interesting? KDD objects which satisfy constraints w.r.t.

accuracy, size, and so on. In addition, we intend to take into account a possible temporal dimension of geographic data.

