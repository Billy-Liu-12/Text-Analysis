Application of Negative Association Rules in Multi- database

Abstract?The increasing use of multi-database technology has led to the development of many multi-database systems for real- world application. Large companies may have to confront the multiple data-source problem,so multi-database mining has been an improtant research area. Negative association rules (NARs) play important roles in decision-making, but nowadays the techniques of NARs mining focus on mono-database,mining negative association rules in multi-database have not been caused people?s attention. But NARs in multi-database are very important in real-world applications. Knowledge conflicts within databases may occur when mining both the positive and negative association rules simultaneously. This paper proposed synthesis correlation to resolve conflicts and a new algorithm PNAR_MDB for mining NARs in multi-database on base of previous work .

The experimental results demonstrate that the algorithm is correct and effective.

Keywords-multi-databasemining; synthesis rules; negative association rules

I. INTRODUCTION Database mining has emerged as a major application area  for an efficient discovery of the previously unknown and potentially useful patterns in large databases. Traditional association rule mining has been mainly focused on identifying the relationships strongly associated among itemsets that have frequent and high-correlation. It is the form X?Y call positive association rules (PARs). As an important supplement, the other three forms X??Y, ?X?Y, ?X??Y call NARs.

Negative association rules can catch the mutually exclusive correlations among items; they can provide much useful information and play an important role in decision-making.

But most of the techniques of NARs mining focus on mono- database. Rapid strides made in the communication network technology and distributed database systems have led to the development of several multi-database systems for industrial applications. For effective decision-making, global organizations are required to mine the multiple databases that are distributed through out their branches. To respond to these demands, researchers and practitioners have intensified efforts on developing appropriate techniques for utilizing and managing multi-database systems. Hence, developing multi-  database systems has become an important research area.

Multi-database mining can be defined as the process of mining data from multiple databases, which may be heterogeneous, and finding novel and useful patterns of significance.

Traditional multi-database mining puts all the data into a single dataset, this way reflects one aspect of the data in multi- database and destroys the distribution of local patterns, so some important rules cannot be extracted form databases.

Furthermore, mining NARs in multi-database can cause knowledge conflicts within databases. In order to resolve conflicts, we determine the relevance of synthesizing frequent itemsets which generate contradictory rules and then obtain valid rules.

The main contributions of this paper are as follows: 1. We proposed synthesis correlation to resolve knowledge  conflicts.

2. An algorithm PNAR_MDB is proposed to discover NARs in  multi-database.

3.Application of Negative Association Rules in Multi-database  The rest of this paper is organized as follows. Section 2 is an introduction of the techniques of NARs mining. A new method for discovering NARs in multi-database and algorithm design is presented in Section 3. Section 4 is experimental results and Section 5 is conclusions and future work.



II.  RELATED WORK Let I = {i1, i2? im} be the universe of items. A set X ? I of  items is called an itemset. A transaction t = (tid, X) is a tuple where tid is a unique transaction ID and X is an itemset. A transaction database D is a set of transactions. The count of an itemset X in D, denoted by count(X), is the number of transactions in D containing X. The support of an itemset X in D, denoted by supp(X), is the proportion of transactions in D that contain X. The negative rule X??Y holds in the transaction set D with confidence conf (X??Y) = supp (X??Y)/supp (X). A    rule X??Y is a valid rule if its support and confidence meet user specified minimum support (minsupp) and minimum confidence (minconf) thresholds.

Negative association was first noted by Brin et al. [1].

Since then there have been several attempts to solve the  2008 International Symposium on Information Science and Engieering  DOI 10.1109/ISISE.2008.262     problem of NARs mining. Savasere et al. [2] proposed a method to mine strong NARs. Yuan et al. [3] proposed a method of mining NARs based on locality of similarity. In [4] and [5] the authors proposed a PR (Probability Ratio) model and proposed a new method to discover both positive and negative association rules. In [6] the authors proposed a PNARC (Positive and Negative Association Rules on Correlation) and proposed a simple but efficient method to calculate the support and confidence of NARs through positive association rule?s, furthermore this model can detect and delete those self?contradictory rules by correlation.

corrX,Y= ( )  ( ) ( ) supp XY  supp X supp Y   (1) If corrX, Y >1, then X and Y is positively correlated, the more events A occur, the more events Y do.

(2)If corrX, Y <1, then X and Y is negatively correlated, the more events A occur, the less events Y do.

(3)If corrX, Y =1, then X and Y is independent, the occurrence of event X has nothing to do with the occurrence of event Y.

A method of mining positive and negative association rules based on multi-confidence and Chi-squared test is proposed in[7], this method solutes a dilemmatic situation of using a single confidence threshold. [8] Proposed a new measure VRRCC and proposed a algorithm PNAR-MLMS which can generate mining positive and negative association rules from frequent and infrequent itemsets.

To mine multi-databases, the first method is to put all the data together form multiple databases to create a huge mono- dataset. Liu, Lu and Yao have proposed mining technique in which relevant databases are identified [9], Their work has focused on the first step in multidatabase mining, which is the identification of databases that are most relevant to an application.the approcch is effective in reducing search costs for a given application. In real-world applications,dataase selection needs ,however,multiple times to identify relecant databases to meet different applications.  Yao and Liu have proposed a means of searching for interesting knowledge in multiple databases according to a user query. But mining only works on the selected data [10]. Zhong et al.[11]proposed a method of mining peculiarity rules from multiple statistical and teansaction databases based on previous work.Wu and Zhang advocated an approach for identifying patterns in multidatabase by weighting[12].The above efforts provide a good insight into multidatabase mining, However, there are still some limitations .collecting all data form multi-databases can amass a huge database for centralized processing.

Forwarding all rules mined in branches to a central company.

The number of forwarded rules may be so large that browsing the rule set and finding interesting rules from it can be a difficult task. In particular,it is more difficult to identify which of the forwarded rules are genuinely useful.Because of data privacy and related issues,it is poddible that some databases of an organization may share their patterns but nont their original database.

The process of multi-database mining can be divided into three steps: First, identifying quality data and searching for a  good classification of the databases. Second, identifying two kinds of new patterns, high-vote patterns and exceptional patterns from local patterns. Third, synthesizing patterns in local patterns by weighting.



III.  MINING NARS IN MULTI-DATABASE Business,government and academic sectors have all  implemented measures to computerize all,or part of ,their daily functions. An interstate company consistes of multiple branches.when mining negative association rules in these branches,tehre are may be cause knowledge conflict within databases.So we resolve this conflict and get the valid association rules.

Weighting is a common way to gather, analyze, and synthesize information from different databases in scientific research and application. [12] Proposed a method of synthesizing rules by weighting. But it only considers positive association rules; this will leave out much useful information probably, so that globe?s decision-making will be disadvantageous. Therefore, we extend the method to negative association rules of multi-database.

A.  Synthesizing rules by weighting In order to synthesize rules from different databases in the  branches of a company, the weight for each database must be determined. In practice, a head office would be interested in rules that are supported, or voted for, by most of its branches.

High-vote rules have a greater chance of becoming valid rule than low-vote rules.

?     Weight of rules Let S= {S1, S2 ?Sm}, and R1, R2?Rn  be all rules in S. The  weight of Ri as follows:   ( )  ( ) i  i R n  j j  N u m R  N u m R ?  =  = ?   Where i=1, 2?n, and Num(R) is the number of databases that contain rule R, or the vote of R in S.

?     Weight of databases Let D1,D2,?Dm be m different databases in the branches of  a company, Si the set of association rules from Di (i=1,2,?m,) S={S1,S2,?,Sm}, and R1,R2,?Rn  be all rules in S. The weight of Di as follows:   ( )  ( )  i k j  i  h h j  k R R S  D m  h R j R S  N u m R  N u m R  ? ?  ?  ?  = ?  ? =  ?  ?  ? ?   ?   Synthesizing rules by weighting Let D1, D2?Dm be m different databases from one class of  the branches of a large company, and Si be the set of association rules from Di (i=1, 2?m,). For given rules, suppose ?1, ?2??m are the weights of D1, D2?Dm respectively, synthesizing model as follows.

supp?(X?Y) =?1?supp1(X?Y) + ?2?supp2(X?Y) +?+?m?suppm(X?Y)                     (1)  conf?(X?Y) =?1?conf 1(X?Y) + ?2?conf 2(X?Y) +?+?m?conf m(X?Y)                     (2)     supp?(X??Y) =?1?supp1(X??Y) + ?2?supp2(X??Y) +?+?m?suppm(X??Y)                  (3)  conf ?(X??Y) =?1?conf 1(X??Y) + ?2?conf 2(X??Y) +?+?m?conf m(X??Y)                 (4)  Other forms are similar.

Where supp?(R) is the support of R after synthesizing, conf? (R) is the confidence of R after synthesizing, suppi(R) is the support of R in Di, and confi(R) is the confidence of R in Di (i=1, 2?m,).

B.  Select valid rules by synthesis correlation Knowledge conflicts   within   databases     may occur  when mining both the positive and negative association rules simultaneously, For example: if X?Y, X??Y, ?X?Y , ?X??Y in different databases respectively, here ,we do not consider the form Y? X, ?Y? X, Y??X, ?Y??X. The rules of the form X?Y, ?X??Y and?X?Y, ?X??Y are mutually contradictory. We can select valid rules by synthesis correlation of frequent itemsets X, Y in each database after synthesizing.  We define synthesis correlation is corr?(X,Y)   ( , )  ( ) ( ) ( )X Y  supp XY corr  supp X supp Y ?  ? ? ?  =                   (5)  Where supp ?(XY) is the support of frequent itemset XY in each database after synthesizing.supp ?(X) and supp ?(Y) is the support of frequent itemset X and Y in each database after synthesizing.

(1) If corr?(X, Y)>1, we mine rules of the forms X?Y and ?X??Y.

(2) If corr?(X, Y) <1, we mine rules of the forms X??Y and ?X?Y.

(3) If corr?(X, Y) =1, there is no rules generated  C. Algorithm design Algorithm: PNAR_MDB Input: S1, S2?Sm: rule sets; minsupp, minconf: threshold values; Output: S: synthesized association rules; (1) Let S ?{S 1?S 2?...?S m} (2) For each rule R in S do   ( )  ( ) i  i R n  j j  N u m R  N u m R ?  =  ? ?  ?  (3) For i = 1 to m do?   ( )  ( )  i k j  i  h h j  k R R S  D m  h R j R S  Num R  Num R  ? ?  ?  ?  = ?  ? ?  ?  ?  ? ? ?  (4)? Synthesize each rule in S by weighting (5) If (there are contradictory rules in S) then { calculate synthesis correlation of contradictory rules by equation (5)  If corr?(X, Y) >1 then { S?S?{?X?Y, X??Y};}  If corr?(X, Y) <1then {  S?S-{X?Y, ?X??Y} ;}} (6) Output the high-rank rules in S whose support and  confidence are at least minsupp and minconf respectively;  (7) End all

IV. THE EXPERIMENTAL RESULTS This section reports on experiments made to show the  performance of the proposed approach, the following experiments were conducted on Pentium 4 personal computer with 1G main memory running Microsoft Windows XP. SQL Server 2000 is used for database management, and the model is implemented on PB.To demonstrate the performance, one of them is presented as follows. We have simulated  6 supermarket databases which is classification data sets. The main properties of the five databases are as follows. There are R =100 attributes in each database. The average number T of attributes per row is 8,5, 5, 6, 4 and 7 respectively. The number |r| of transactions is approximately 200 in each database.  The number size I of maximal frequent sets is 3, 2, 5, 4, 6 and 3 respectively.TABLE1 summarizes these parameters.

TABLE I.  DATABASE CHARACTERISTICS Databas name |R| T I |r|  DB1 98 8 3 198 DB2 93 5 2 196 DB3 95 5 5 195 DB4 97 6 4 197 DB5 99 4 6 194 DB6 96 7 3 198   We used the method of [6] to mine association rules of these databases. We set minsupp=0.025, minconf=0.2  TABLE II.  GENERATE THE NUMBER OF ASSOCIATION RULES database A?B, A??B ?A?B ?A??B prune total  DB1 70 20 9 97 1 196 DB2 98 23 12 88 3 221 DB3 86 35 6 79 1 206 DB4 93 28 8 85 2 214 DB5 75 32 11 90 0 208 DB6 84 26 14 92 1 216  We ues the method (1) of this proposed synthesize these  rules by weighting, then we  put all the databases into a single database ,using the method (2) of [6]to mine association rules and compared the results .

TABLE III.  THE COMPARION OF THE RESULT method A?B A??B ?A?B ?A??B total  1 56 12 5 63 136 2 81 27 8 95 211   The results from the two different methods have shown that  the association rules generated in our algorithm all appear in the association rules generated by method of [6],moreover, the first 10 association rules in the proposed  synthesizing model are consistent with the results by the mothod of [6]. The experimental results demonstrate that the algorithm is correct

VI. CONCLUSION AND FUTURE WORK In this paper we introduced some methods of  mining  negative association rules in mono-database and multi-database mining.NARs play an important role in decision-making.

Research on mining NARs in multi-database is very important.

Knowledge conflicts within databases may occur when mining both the positive and negative association rules simultaneously.This paper proposed a new algorithm PNAR- MDB for mining negative association rules in multi-database.

The experimental results demonstrate that the algorithm can work effectively. For future work, we will search a new approach to decrease the number of rules before the rules synthesized.

