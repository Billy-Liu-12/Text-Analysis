Fuzzy Association Rules Mining Algorithm FMFFI Based On Bidirectional Search Technique

Abstract?Association rules is one of the important studies on data mining, while, the study of quantitative association rules mining is lacking. This paper proposes a fuzzy association rules mining algorithm FMFFI (Fast Mining Fuzzy Frequent Itemsets) based on bidirectional search. This algorithm uses FCM clustering technique to map quantitative data sets into fuzzy data sets , and uses the bidirectional search method search from the high-dimension to low-dimension and low-dimension to high-dimension, when search fuzzy frequent itemsets to reduce search time and improve the data mining efficiency.

Keywords-Data mining; association rules; fuzzy frequent itemsets

I. INTRODUCTION Association rules is one of the important research areas  of data mining. Quantitative attribute value need to be discretized when quantitative association rule algorithm in extracting frequent itemsets [1]. Fuzzy association rule mining is to map quantitative attribute into fuzzy attribute, and mining fuzzy frequent itemsets in fuzzy data sets. The main strategy of the fuzzy frequent itemsets extraction method of the previously proposed Apriori algorithm is it searches from the low dimension fuzzy frequent itemsets until all the highest dimension fuzzy frequent itemsets are extracted. To improve the mining efficiency, this paper proposes a fuzzy association rule mining algorithm FMFFI(Fast Mining Fuzzy Frequent Itemsets), based on bidirectional search technique.



II. BASIC DEFINITION Definition 1 For the frequent itemsets X, Y, if  ?? !?? Y is founded, then the fuzzy iterm set X is the maximum fuzzy frequent itemset, that is the item set of X is fuzzy frequent itemset, which known as MFFS (maximum fuzzy frequent sets).

Definition 2 In Fuzzy transaction data set, K different one- dimension fuzzy sets are combined into K-dimension fuzzy itemset, it is the superset of the maximum fuzzy itemset.

Theorem 1 If K-dimension fuzzy frequent itemset is Lk, then either k-dimension candidate item set Ck is a superset of a k-1 dimension candidate item set [2].

Prove: For sup)(|{ 11 MincSupCcL kk #?? %% }, So 11 %% ? kk CL ,then for any kCc? , exist 121, %? kLll , make 21 llc ? ,so cll ?21, .

And 11 %% ? kk CL ,therefor 121, %? kCll , and for any  kCc? ,exist 121, %? kCll to make cll ?21, .

Based on these, Theorem 1 is founded.

According to the above definitions and theorem, any fuzzy frequent itemset is a subset of a highest dimension fuzzy frequent itemset; any K-dimension maximum fuzzy frequent itemset must include K different 1-dimension fuzzy frequent itemset; any 1-dimension fuzzy frequent itemset must belong to one K-dimension maximum dimension fuzzy frequent item set at least.



III. A FUZZY ASSOCIATION RULES MINING ALGORITHM FMFFI BASED ON BIDIRECTIONAL SEARCH  TECHNOLOGY The template is used to format your paper and style the  text. All margins, column widths, line spaces, and text fonts are prescribed; please do not alter them. You may note peculiarities. For example, the head margin in this template measures proportionately more than is customary.

This measurement and others are deliberate, using specifications that anticipate your paper as one part of the entire proceedings, and not as an independent document.

Please do not revise any of the current designations.

A. FMFFI Algorithm Thought 1) The Search Strategy of FMFFI FMFFI algorithm adopts FCM clustering technology to  convert quantitative data sets into fuzzy data sets.It uses a bidirectional search way that searches from high- dimension to low-dimension and search from low- dimension to high-dimension when it searches fuzzy frequent itemset [3].That is, when scanning a fuzzy data sets, achieve a search pattern from high-dimension to low- dimension fuzzy frequent item sets and from low dimension to high dimension fuzzy frequent item sets. We uses the Apriori algorithm to implement the low to high dimension search. While, when search from high dimension to low dimension for fuzzy frequent itemset, starting from the maximum fuzzy superset, successively remove a fuzzy frequent item to carry on traversal search.

Figure 1 The process of search fuzzy frequent itemsets from high dimension to low dimension   DOI 10.1109/IHMSC.2015.228    DOI 10.1109/IHMSC.2015.228     Fig. 1 shows the search process from high dimension fuzzy frequent itemset to low dimension frequent itemset.

Assume that {B.L}, {C.H}, {A.M}, {D.L} are four 1- dimension fuzzy frequent item sets.The biggest superset {B.L,C.H,A.M,D.L} is represented by set MSS.When starts to search fuzzy frequent itemset from high dimension to low dimension,the algorithm judges whether {B.L,C.H,A.M, D.L} is fuzzy frequent itemset at first. If it is,then itself and all of it?s subsets are fuzzy frequent itemset. If not ,then delete a different item for each time from the biggest fuzzy superset to produce four 3- dimension candidate itemsets. The four 3-dimension candidate sets are{B.L,C.H, A.M}{B.L, C.H, D.L} {B.L, A.M, D.L} {C.H, A.M, D.L}and deposited in set MFFS.

When search from high dimension to low dimension for the second time, the algorithm identifies whether the four 3-dimension fuzzy candidate item sets are fuzzy frequent item set.If so, then itself and all of it?s subsets are fuzzy frequent item set.If some of them are fuzzy frequent itemsets, else are not,then all the subset of 3-dimension fuzzy frequent item sets are fuzzy frequent item set. Then the algorithm will remove a item from which is not fuzzy frequent item set, and produce a 2 dimension candidate item sets.If all of the four 3-dimension fuzzy candidate item sets are not fuzzy frequent item sets, then remove a different item for each time from the 3-dimension candidate item sets to produce 2-dimension fuzzy candidate item sets and put into set MFFS [4].Continue this recursive search until all fuzzy frequent item sets are searched out. We assume that there are m 1-dimension fuzzy frequent item, the maximum fuzzy superset is n- dimension.Because traverse a fuzzy data set D then achieve the search action from low dimension to high dimension and high dimension to low dimension. Therefor the algorithm most scans n/2 times can get all fuzzy frequent itemsets.

2) The Pruning and Sorting Strategy of FMFFI The key point to enhance the algorithm running speed  and search efficiency is to reduce the occurrence of candidate itemset. In the process of searching, execute proper pruning and sorting is a good way to reduce candidate itemsets. The pruning process of FMFFI is mainly deployed in the search process from low dimension to high dimension, and the pruning method is same as the Apriori . Sorting is arranged in the process from the high dimension to low for MFFS set sorting , to reduce the number of candidate itemsets. As shown in Fig. 1,after delete a different item each time from a 5-dimension fuzzy itemset,it produced three 4-dimension fuzzy frequent itemsets. If doesn?t sort, then set MFCS will has two identical 4-dimension fuzzy candidate itemsets {C.H,A.M}.

So the sorting of the set MFCS can reduce the number of fuzzy candidate itemsets significantly and improve algorithm performance.

B. The Description of FMFFI The FMFFI algorithm is described below: Input: quantitative transaction data set D with m-  records,Minsup, Minconf Output: fuzzy frequent pattern set.

1) for each item Akof D;//Ak is the k-th item in a record 2) )( kk Aclusteringu ?  3) kk uU ? ;//U is a fuzzy data set of D after transformed 4) Calculate the scalar ijR of all the fuzzy sets i jR ;  // ijR is the i-th fuzzy field of, (c is the number of clusters), (m is the item number of D) 5) while( ?&?ijR ){ Put Rij into the fuzzy frequent head table;} 6) FL1={All the 1-dimension fuzzy frequent items},  MSS={1,2,3,?n}, 7) 2/nc ? ;//round number to larger,n is the  number of 1 fuzzy frequent item set, 8) for x=1 to do; 9) { i=n-x; 10) MFFS( XFL %1 );//Delete X-dimension item  elements from the MSS, generate n x-dimension candidate sets then store in MFFS 11) Sort MFFS; //Delete duplicate candidate  itemsets 12) for j=1 to m do; 13) { MFCS[i,j]++; //i, j? MFCS; 14) If Sup(MFCS[i,j]) ?&? , 15) then store MFCS[i,j] in Ldi; 16) } // Ldi stores the fuzzy frequent itemsets 17) Use the apriori_gen() function combine the x  frequent item sets to get fuzzy x+1 candidate-item sets and store in the Lupi; 18) for every candidate item of Lupi do ;  CardinaelseCCardinaNodeCCardinaNodeC _._._. ?? }  20) Lupi={c ?Ci| CardinaNodeC _. }; 21) } 22) Answer=LdiYLupi

IV. ALGORITHM EXAMPLE AND ANALYSIS  A. The algorithm example Consider there is a quantitative transaction database as  shown in the table 1, represent the quantitative attribute values of each item as three fuzzy area:High, Middle,Low, and use FCM cluster technique to divide the quantitative attribute value into one of the three fuzzy area. Table 2 shows the fuzzy transaction data set after meaning shifting, the minimum support threshold is set as 0.75, and the minimum confidence threshold is set as 0.7.

TABLE 1 QUANTITATIVE TRANSACTION DATA SET  Table 1 Data Set  Tid Items  1 (A:5) (C:10) (D:3)  2 (A:9) (B:3) (C:4)  3 (B:4) (C:8)  4 (A:6) ( C:9) (D:3)  5 (A:5) (B:3) (C:5)     TABLE 2 THE FUZZY TRANSACTION DATA SET AFTER MEANING SHIFTING.

The FMFFI algorithm mining process is as follows : ? Scanning Table 2 to find out all 1-dimension frequent  itemsets in table 2, L1= Lup1= {{A.Middle}, {C.high}, {A.High}, {D.Low},{B.Low}}, and produce the largest superset MSS= {A.Middle, C.high, A.High, D.Low,B.Low}.

? Since n=5,it needs to scan the database three times.

? Search fuzzy frequent itemsets from the high  dimension to low dimensional. First, judge whether MSS is frequent itemset, Cause the maximum fuzzy superset contains the same two fuzzy sets with different attribute-A.Middle and A.High, so the maximum fuzzy superset does not belong to frequent itemsets.If the maximum fuzzy superset is the combination of r-different fuzzy sets with different properties, then the judgment method is a fuzzy set. If Count is greater than the minimum support threshold value, then the maximum fuzzy superset is fuzzy frequent itemset. All it?s subsets is fuzzy frequent itemset.

? Because the maximum superset is not fuzzy frequent itemset, so the algorithm delete a item of the maximum superset for each time. Therefor we get 5 4-dimension fuzzy candidate itemsets deposited in the set MFCS1. They are {A.Middle, C.high, A.High, D.Low} {A.Middle, C.high, A.High, B.Low}{A.Middle, C.High, D.Low, B.Low} {A.Middle, A.High, D.Low, B.Low} {C.High, A.High, D.Low, B.Low}. Sorting the MFCS1 to delete the redundant candidate item set.

? After sorting, the algorithm first judges whether {A.Middle, C.High, A.High, D.Low} is fuzzy frequent itemset. Evidently, it contains different fuzzy sets of the same item, so it's not fuzzy frequent itemset.The algorithmdelete one item from them everytime and produced four 3-dimension fuzzy candidate sets. They are {A.Middle, C.high, A.High} {A.Middle, C.high, D.Low} {A.Middle, A.High, D.Low} { C.high, A.High, D.Low} . In the same way the algorithm judge the other four candidate itemsets of MFCS in turn ,and get all the candidate sets {A.Middle, C.high, A.High} {A.Middle, C.high, B.Low} {A.Middle, A.High, B.Low} {C.high, A.High, B.Low};{A.Middle, C.High, D.Low} {A.Middle, C.High, B.Low} {A.Middle, D.Low, B.Low}{C.High,D.Low,B.Low};{A.Middle, A.High, D.Low}{A.Middle, A.High, B.Low} {A.Middle, D.Low, B.Low} {A.High, D.Low, B.Low}; {C.High, A.High, D.Low} {C.High, A.High, B.Low} {C.High, D.Low, B.Low}{A.High, D.Low, B.Low}, then store in MFFS2 .

? For the five 4-dimension fuzzy candidate item sets has no fuzzy frequent itemsets, so Ld4 is empty, so the algorithm sorts MFCS2 and deletes duplicated 3- dimension fuzzy candidate item sets to get new 3- dimension candidate item sets MFFS2{A.Middle, C.high, D.Low}{A.Middle, A.High,D.Low} {C.high, A.High, D.Low} {A.Middle, C.high, A.High} {A.Middle, C.High, B.Low} {A.Middle, A.High, B.Low}{C.high,A.High,B.Low}{A.Middle,D.Low,B.

Low} {C.High, D.Low, B.Low} {A.High, D.Low, B.

Low}.

? The algorithm judge whether the ten 3-dimension candidate item sets are frequent fuzzy sets in turn.

There is no fuzzy frequent item set in them, so Ld3 is null set.

? The algorithm begin to calculate fuzzy frequent itemsets from low dimension to high dimension. It applies the apriori_gen() function of Apriori to generate 2-dimension fuzzy candidate itemsets, then determines the frequent itemset of 2-dimension fuzzy item sets. There is fuzzy scalar of{A.High, B.L ow} is greater than the minimum support threshold, so store it in the Lup2 set.8) All the fuzzy frequent item sets algorithm finally found is Lup1+ Lup2+Ld3+Ld4, namely {A.High, B.Low}. We can conclude that {A.High,B.Low} is a fuzzy association rule, its confidence degree is 0.9985.

B. The Analysis And Test FMFFI Algorithm Compare the FMFFI algorithm proposed in this paper  with Hong Tzung-pei proposed algorithm, experimental results are as follows [6]: Firstly, Compare in the Poker-hand data set.Poker-hand  data set belongs to the typical sparse data set, it has a characteristic of less number of items in data set , but a more number of records.For Poker-hand set does not belong to quantitative data set, therefor need to distributes a random number between 1 and 30 to each item, configured to quantitative data set.Then apply FCM clustering technique to divide all the quantitative attribute values into High, Middle, Low three fuzzy area. The experimental results are shown in Fig. 2.

Table 2 Data set after meaning shifting  Tid Items  1 1769.0 .lowA ?  0464.0 .higA ,  0149.0 .lowC ?  9380.0 .higC ,  9985.0 .lowD ?  0003.0 .higD  2 0003.0 .lowA ?  9985.0 .higA ,  9985.0 .lowB ?  0003.0 .higB ,  7412.0 .lowC ?  0345.0 .higC  3 7412.0 .lowB  2243.0 .midB  0345.0 .higB ,  0346.0 .lowC  2261.0 .midC  7392.0 .higC  4 0001.0 .lowA ?  0007.0 .higA ,  0003.0 .lowC ?  9985.0 .higC ,  0149.0 .lowD ?  9380.0 .higD  5 1769.0 .lowA ?  0464.0 .higA ,  9985.0 .lowB ?  0003.0 .higB ,  1769.0 .lowC ?  0464.0 .higC     Figure 2 Running time of FMFFI algorithm and Hong algorithm in the Poker-hand data set  As shown in Fig. 2, the time curve of the FMFFI algorithm is under the Hong algorithm.In the condition of the same support threshold, mining performance of FMFFI algorithm is better than Hong algorithm, because FMFFI algorithm uses bidirectional search strategy.

Then, compare in the Synthetic data set with data generator to generate. Synthetic data set belongs to the real data set, it has a characteristic of less number of items in data set , but a more number of records. For Chess set does not belong to quantitative data set, therefor need to distributes a random number between 2 and 10 to each item, configured to quantitative data set.Then apply FCM clustering technique to divide all the quantitative attribute values into High, Middle, Low three fuzzy area. The experimental results are shown in Fig. 3.

Figure 3 Running time of FMFFI algorithm and Hong algorithm in the Synthetic data set  As shown in Fig. 3, the time curve of the FMFFI algorithm is under the Hong algorithm. FMFFI algorithm decreases the number of scanning database and save the calculation time. In the condition of the same support threshold, mining performance of FMFFI algorithm is better than Hong algorithm, because FMFFI algorithm uses bidirectional search strategy.

Compared with the Hong algorithm, FMFFI algorithm  has a less search time and the number of scanning database . Each time the algorithm FMFFI traverse transaction data set, complete the process of scanning from low dimension to high dimension and high dimension to low dimension. Under the condition of transaction  database has higher dimension maximum fuzzy frequent itemsets, the algorithm can reduce the search time significantly , thus greatly improves the performance.



V. SUMMARY According to the character of the frequent itemsets, this  paper proposes a new mining frequent itemsets algorithm - FMFFI..The algorithm get rid of the bottom-up search strategy of the traditional Apriori algorithm and its variants..It adopte a new search way of combining the top- down way and the bottom-up way, which can greatly reduce the generation number of candidate itemsets under the condition of a higher dimension maximum fuzzy frequent itemsets. The algorithm can reduce the search time significantly and improve the mining efficiency. But the algorithm showed some defects when it process data set with more items . how to overcome the limitation of the algorithm will be our next work that .

