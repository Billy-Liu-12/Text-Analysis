Utilizing Model Structure for Efficient Simultaneous Localization and Mapping for a UAV Application

Abstract This contribution aims at unifying two recent trends in applied particle filtering (PF). The first trend is the major impact in simultaneous localization and mapping (SLAM) applications, utilizing the FastSLAM algorithm. The second one is the implications of the marginalized particle filter (MPF) or the Rao-Blackwellized particle filter (RBPF) in positioning and tracking applications. Using the standard FastSLAM algorithm, only low-dimensional vehicle models are computationally feasible. In this work, an algorithm is introduced which merges FastSLAM and MPF, and the result is an algorithm for SLAM applications, where state vectors of higher dimensions can be used. Results using experimen- tal data from a UAV (helicopter) are presented. The algo- rithm fuses measurements from on-board inertial sensors (ac- celerometer and gyro) and vision in order to solve the SLAM problem, i.e., enable navigation over a long period of time.

Keywords: Rao-Blackwellizedlmarginalized particle fil- ter, sensor fusion, simultaneous localization and mapping, inertial sensors, UAV, vision.

1. INTRODUCTION The main task in localization/positioning and tracking is to estimate, for instance, the position and orientation of the ob- ject under consideration. The particle filter (PF), [ 1, 2], has proved to be an enabling technology for many applications of this kind, in particular when the observations are complicated nonlinear functions of the position and heading [3]. Further- more, the Rao-Blackwellized particle filter (RBPF) also de- noted the marginalized particle filter (MPF), [4-9] enables estimation of velocity, acceleration, and sensor error models by utilizing any linear Gaussian sub-structure in the model, which is fundamental for performance in applications as sur- veyed in [10]. As described in [9], the RBPF splits the state vector xt into two parts, one part xS which is estimated using the particle filter and another part xk where Kalman filters are applied. Basically, it uses the following factorization of the posterior distribution of the state vector, which follows from  IEEEAC Paper #1103  Figure 1. The Yamaha RMAX helicopter used in the exper- iments. The on-board system is equipped with an IMU sensor (accelerometer and gyro) and a vision sensor. The on-board GPS receiver is used for evaluation only.

Bayes' rule,  P(Xl:t, xt' yi:lt) (1)  where Y :t A .y, .., Yt} denotes the measurements up to time t. If the model is conditionally linear Gaussian, i.e., if the term p(xt xp:t, Yl:t) is linear Gaussian, it can be opti- mally estimated using the Kalman filter, whereas for the sec- ond factor we have to resort to the PF.

Simultaneous localization and mapping (SLAM) is an exten- sion of the localization or positioning problem to the case where the environment is un-modeled and has to be mapped on-line. An introduction to the SLAM problem is given in the survey papers [11, 12] and the recent book [13]. From a sensor point of view, there are two ways of tackling this prob- lem. The first way is to use only one sensor, such as vision, see e.g., [14-17] and the second way is to fuse measurements from several sensors. This work considers the latter. The FastSLAM algorithm introduced in [18] has proved to be an enabling technology for such applications. FastSLAM can be seen as a special case of RBPF/MPF, where the map state mt,   p (xt' xpl:t, yl:t)p(xpl:t yl:t),    containing the positions for all landmarks used in the map- ping, can be interpreted as a linear Gaussian state. The main difference is that the map vector is a constant parameter with a dimension increasing over time, rather than a time-varying state with a dynamic evolution over time. The derivation is completely analogous to (1), and makes use of the following factorization  p(xlt, Ttlyjt) =p(Tntlxjt,yl:t)p(xl:t yjt). (2)  The FastSLAM algorithm was originally devised to solve the SLAM problem for mobile robots, where the dimension of the state vector is small, typically consisting of three states (2D position and a heading angle) [13]. This implies that all plat- form states can be estimated by the PF.

Paralleling the evolution of PF applications to high dimen- sional state vectors, the aim of this contribution is to build on our earlier work [19] which unify the ideas presented in [9,20]. This is done in order to extend the FastSLAM [18] algorithm to be able to cope with high dimensional state vec- tors as well. Basically, the main result follows from  P(Xl:t,xt,mt Ylt) (Tntl xk, xp:t: Yi:t)P(XkzPt, Yl:t)P(XP: t yl:t).

(3)  The derived algorithm is applied to experimental data from an autonomous aerial vehicle using the RMAX helicopter plat- form (Figure 1). The main navigation sensor unit, consists of three accelerometers, three gyros, a pressure sensor, and a camera. GPS is used only for evaluation purposes.

The aim of this work can be formalized as trying to estimate the following filtering probability densityfunction (PDF),  (6)  In other words, we are trying to solve the nonlinear filtering problem, providing an estimate of (6). The key factorization, which allows us to solve this problem successfully is  P(lp:t xtk,Tt lyl:t) Mt  = p(Tnj,t |X:t' Xk, Yl t)P(Xk |l:t' Yl t) P(XP t |pl t) '-1~ ~ ~t tj=1 (extended) Kalman filter particle filter  (7)  In order to devise an estimator for (6) a system model and a measurement model are needed. The former describes the dynamic behavior of the platform, that is how the state xt evolves over time. The measurement model describes the sen- sors, i.e., it consists of equations relating the measurements yt to the state xt. We want a general algorithm, which is appli- cable to many different platforms (aircraft, helicopters, cars, etc.). Hence, the model structure should be as general as pos- sible,  X'P f p( + AP (P( AxS + GP (P)wApt+l -Jt V tJ4 Vt t Jt X+? fk(4P) + At(PA +Gzt+1- t t J t \t Jt t \t J t  Tnj,t+l = Tnj,t ,  Yi,t = hi,t(4t) + Ct(x?t)xt + el,t,  Y(,t)= h2,t(Xt) + Hj,t(xT)mj,t + e2(,L  (8a)  (8b) (8c)  (8d)  (8e)  In Section 2 the problem under consideration is formulated in more detail. The proposed algorithm is given and explained in Section 3. This algorithm is then applied to an application example in Section 4. Finally, the conclusions are given in Section 5.

2. PROBLEM FORMULATION The aim of this work is to solve the SLAM problem when the state dimension of the platform (uAv) is too large to be estimated by the PF. This section provides a more precise problem formulation and introduces the necessary notation.

The total state vector to be estimated at time t is  t=(t ) (Xt ) t ) 4)  where 4p denotes the states of the platform that are estimated by the particle filter, and xk denotes the states of the platform that are linear-Gaussian given information about 4p. These states together with the map (landmarks) mt are estimated using Kalman filters. The map states mt consists of the entire map at time t, i.e.,  Tnt = (Ml't ... mMt t) (5) where Mj,t denotes the position of the jth map entry and Mt denotes the number of entries in the map at time t.

where j 1, ... , Mt and the noise for the platform states is assumed white and Gaussian distributed with  Qt = (Qt t) (t t  (80)  To simplify the notation in the rest of the paper, denote ftp(4p) with ftp, AtP(xP) withA4p and so on. The measurement noise is assumed white and Gaussian distributed according to  -l,t -JA(O,Ri,t), e(j) , A/-(?, Rj2,t),  (8g) (8h)j =l,...,Vmt.

Finally, xk is Gaussian,  xo V\(xo,PO), (8i) and the density for x' can be arbitrary, but it is assumed known.

There are two different measurement models, (8d) and (8e), where the former only measures quantities related to the plat- form, whereas the latter will also involve the map states. Sec- tion 4 describes a detailed application example using exper- imental data, where (8d) is used to model inertial sensors and (8e) is used to model a camera.

P(xp, xk Tnt yl:t).t t .

Wt = Np. "Iv(O.Qt).

