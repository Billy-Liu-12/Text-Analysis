Mining Generalized Association Rules for Sequential and Path Data

Abstract  While association rules for sei daia use and describe relations between parts of sei valued objecis completely, association rules for sequential daia are restricted by specijic inierpreiations of the subsequence relation: coniiguous subsequences describe local feaiures of a sequence valued objeci, noncontiguoussubsequences its global feaiures. We model boih types of feaiures with general- ized subsequences that describe local deviations by wildcards, and present a new algorithm of Apriori type for mining all generul- ized subsequences wiih prescribed minimum suppori from a given database of sequences. Furthermore we show thui the given algo- riihm automatically rakes into accouni an eventually underlying graph structure, i.e., is applicable to path data also.

1. Introduction  Classical association rules describe dependencies be- tween subsets of a large sample of set valued objects, e.g., market baskets. A typical association rule states that if a certain subset occurs in a set, then another subset is likely to occur in the same set (with estimated probabilities for the applicability and the strictness of the rule). For set valued objects subsets are natural substructures to consider.

To sequential data association rules can be applied in dif- ferent ways. One can forget the sequence structure and map sequences on the sets of their elements, but looses ordering information. Or one looks for sequential association rules, i.e., pairs of subsequences that occur in order in a sequence.

Here two different notions of substructures can be found in the literature: contiguous subsequences of elements, that occur one after the other in a sequence, and non-contiguous subsequences, where between two elements arbitrary noise may be interspersed. While the former describes local fea- tures of sequences, the latter describes global features of se- quences. We combine both types of descriptions in general- ized subsequences where possible noise is explicitly marked by a wildcard element.

The hard part of the computation of association rules is  the computation of frequent sets or subsequences. Frequent subsets of set valued objects can be mined by the standard Apriori algorithm (see Agrawal and Srikant (1994)). Fre- quent contiguous or non-contiguous subsequences can be mined by a well-known variant of the Apriori algorithm (see Agrawal and Srikant (1995) with modifications by Srikant and Agrawal (1996)). Borges and Levene (1  999) have de- veloped algorithms for sequence mining on aggregated data.

Several algorithms exist to mine frequent generalized sub- sequences of a specij?ed Q p e  (called templates, i.e., subse- quences with prescribed positions of wildcards, see, e.g., Spiliopoulou (1999)). Other authors following a broader approach have constructed algorithms to find frequent sub- sequences of objects with attached attributes and relations (called generalized episodes, see Mannila and Toivonen (1996)). While those algorithms are perfectly suited for use in interactive analysis, a general algorithm mining all fre- quent generalized subsequences (of a given minimum sup- port) as needed for association rule analysis is still missing.

In this paper we describe a new algorithm that fills this gap.

If sequence data describes paths on a graph an algorithm mining frequent subpaths should take advantage of the un- derlying graph structure, i.e., only consider paths and no sequences of non-connected vertices. We show that our al- gorithm has this property automatically (by using a suitable join operator) and thus also solves the problem of mining frequent subpaths.

2. Formal background  Definition 1. Let R be an arbitrary finite set of (non- interpreted) items and R? := uiEN Ri the set of finite se- quences of elements of R (with 0 as the empty sequence).

For a sequence z E R* the length 1x1 is the number of sym- bols in the sequence (1x1 := n for z E R", 101 := 0).

For x, y E R? we say that x is  a contiguous subsequence ofy (z Sct y). if there is an index i E ( 0 , .  . . , IyI - 1x1) with z j  = yi+j  We say that x is  a non-contiguous subsequence of y (x Lnct y). if there is a strictly increasing map  V j  = 1, .  . . ,121.

0-7695-1 119-8101 $17.00 0,2001 IEEE 593  http://wiwi.uni-karlsruhe.de   i : { 1, .  . . , 1x1) + { 1 , .  . . Iyl} with xJ = tlj =  We use the neutral symbol 5 to denote one of the two subsequence relations Sct or Lnct. x is called a strict sub- sequence of y (x < y), if it is a subsequence of y but not equal to y (x 5 y A x # y).

Definition 2. A pair of sequences 2, y E ?i? overlaps on k E N elements, if the last k elements of x are equal to the first k elements of y ( ~ l ~ l - k + ~  = yz V i  = 1,. . .k).

For such a pair of sequences x, y E P overlapping on k elements we define the k-telescoped concatenation of x and y to be  1 , .  . . ,121.

+k Y := (21,. . . 7 2 ( 4 - k , Y 1 1 . .  ' ,  Ylyl) = (21, ' ' ' 1 q z l ,  Yk+l,. . ' I Ylyl).

Note that any two sequences 0-overlap and the 0- telescoped concatenation of two sequences is just their ar- rangement one behind the other.

Definition 3. For a pair of sets of sequences X, Y P we denominate the set of b-overlapping pairs x E X, y E Y by S @k Y and the set of k-telescoped sequences of all k- overlapping pairs as the set of k-telescoped sequences of X and Y :  '1- +k 1- := +k(-Y $k Y) = {.E +k y I x E X, y E Y are over-  lapping on k elements}.

With this terminology an elegant formulation of the Apriori algorithm for sequences can be given that is omit- ted here for space restrictions (see Gaul/Schmidt-Thieme (2001)).

3. Mining frequent generalized subsequences  Definition 4. By a generalized sequence in R we mean a (finite ordinary) sequence in the symbols R U {*} with an additional symbol * R called wildcard, so that no two wildcards are adjacent:  Rgen := {x E ( R U  {*})* I Bi E N : zi = x i + l  = *) The wildcard symbol * is used to model partially inde-  terminate sequences, matching arbitrary subsequences. For a generalized sequence x E Rgen we define its length 1x1 as the length of the sequence in the symbols R U {*}, i.e., 1x1 := n, if x E ( R  U {*})n.

Definition 5. Now let x, y E Rgen be two generalized sequences. We say that x matches y or y generalizes x (y 1 x), if there exists a mapping  m : (1,. . ., 1.1) -+ (1 , .  . . 1  IY l } (called matching) with the following properties:  1. m maps indices of elements of x to indices of elements of y that coincide or to a wildcard (y,(i) = Z; or  2. m covers all indices of y of non-wildcard elements  Ym(i) = *>.

(yi E R + m-l(i) # 0).

3. m is weakly increasing.

4. m is even strictly increasing at places where its image does not belong to a wildcard (m(i)  = m(i + 1) +  Note that as the set of ordinary sequences R* is a sub- set of the set of generalized sequences Rgen, this also de- fines the notion of an ordinary sequence matching a gen- eralized sequence. Obviously matchings are not uniquely determined by two generalized sequences x and y. A trivial example is *A* I- AA with the two matchings ml : 1 e) 1 , 2  e) 2 and m2 : 1 e) 2 , 2  e) 3. Finally we carry over the notions of subsequence and of k-telescoped concatenation from ordinary sequences to generalized sequences without any change. Note the difference between A * C not being a subsequence of ABCD but generalizing a subsequence of it (i.e. A C k ABC and ABC 5 ABCD). (For simplicity of notation we omit parentheses and commas in example sequences and just write ABC instead of (A,B,C).)  Definition 6. Let S be a finite (mu1ti)set of ordinary se- quences. For an arbitrary generalized sequence x E Rgen we denominate the relative frequency of sequences contain- ing a subsequence which matches x as support of x with respect to S:  Ym(i) = *>-  I{s E s I 3y 5 s : 5 I- y}I IS1  sup,(z) :=  Mining frequent generalized subsequences is the label for the task of finding all generalized sequences with at least a given minimum support. As subsequences actu- ally are, what we are looking for, we can narrow our view to closed generalized subsequences, i.e. generalized subse- quences without leading or trailing wildcard (x E Rgen with  At present no general algorithm for finding all frequent generalized subsequences in a (mu1ti)set of sequences is known. We present a modification of the Apriori algorithm for sequences to generalized sequences. The idea is rather straightforward. As we restrict ourselves to closed gener- alized sequences, the support of any subsequence of such a closed generalized sequence again is greater than or equal to the support of the sequence itself. Adjacent wildcards are not allowed, therefore we obtain every closed general- ized sequence of length n + 1 (for n > 3) as the junction of two overlapping closed generalized sequences of the kind described in table 1 .

1 1 ,  qz1 E RI.

More formally we state:     sequence length ab ... cd n+l  - - ab . . .  c n +,-I b...cd n  ab . . .  c*d n+l ab ... c n-l  - -  +n-2 b...c*d n  Table 1. Construction of closed generalized subsequences of length 2 4.

sequence length a*b ... cd n+l a*b ... c n  +n-2 b.. . cd n-1 a*b.. . c*d n+l  = a*b . . .  c n-l Sn-3 b.. . c*d n-l  - -  Lemma 1 (Generalized Sequence Construction). For any closed generalized sequence i E Rgen there are closed gen- eralized sequences x, y E Rger' with  0 t and y are shorter than 2 (1x1, lyl < lit) and  0 2 can be constructed from x and y (i .e. ,  x and y are k-overlapping (for a suitable k )  with i = 2 $-k y).

Pro05 Let : = (:I,. . . , zn). Depending on t2 and zn-l being in R or being a wildcard we distinguish four cases: ( l ) I fz2 . : , , -1  ~ R l e t z = ( q  , . . . ,  : , - 1 ) ,y= ( 2 2 , .  . . , : ,a) ,  and k = n - 1. x and y are closed by as- sumption and obviously overlap on k elements and yield 2. (2) If 2 2  E R,zn-1 - * let x = (21 , . . . ,  in-?), y = ( z g , .  . . , z , ~ ) ,  and k = n - 2. As :n-l = * and no adjacent wildcards are allowed, in-? # *, i.e. x is closed.

y is closed by assumption and again 2 and y obviously over- lap on k elements and yield 2 .  (3) If 2'' = *, zTa-l E R let .c = ( z l , .  , . , z T 1 - l ) ,  y = (is,. . . , q,), and k = n - 2. As z? = * and no adjacent wildcards are allowed, 23 # *, i.e.

y is closed. e is closed by assumption and again x and y obviously overlap on A. elements and yield i. (4) Finally if Z ? , Z ~ - ~  = let z = ( 2 1 , .  . . , zn-?),  y = ( ~ 3 , .  . . ,  in), and k = n - 3. As zra-l  = * and no adjacent wildcards are allowed, z n - ?  # *, i.e. x is closed. As 22 = * and no adjacent wildcards are allowed, 23 # *, i.e. y is closed. x and y obviously overlap on k elements and yield 2. U  We simply have to modify the join step of the Apriori al- gorithm for building new candidates of length ii + 1 in such a way that we not only use the frequent (closed generalized) subsequences of length n but also those of length n - 1 from the previous step, and try all possible combinations. Closed generalized subsequences of length 3 containing a wildcard have the form (2, *, y)  with x ,  y E R,  shorter closed gener- alized subsequences cannot contain wildcards.

The following algorithm gives the exact formulation of the necessary comparisons. Obviously, the computation of the support values of the candidate generalized sequences also has to be modified. The performance characteristics of the algorithm is the same as for the Apriori algorithm for  -  Apriori algorithm adapted for generalized sequences Require: set of items R, (mu1ti)set S of (finite) sequences  of elements of R, minimum support value minsup E R+.

Ensure: set of frequent (closed) generalized subsequences  F := UnEW F, of the sequences of S with support of at least minsup.

C := { ( T )  I T E R} set of initial candidates, n := 1, Fo := 0.

while C # 0 or Fn-1 # 0 do  compute sups(c) occurrences of each c in S (one loop through S).

Fn := { c  E C I sups(c) 2 minsup} C := F, Sn-l F, {compute new candidate sequences with length n+l ) if n = 2 then [introduce wildcards)  else if n > 2 then (additional joins considering wild- cards)  Vc E C by counting the number of  C:=CU{(x , * ,y )  I X , y E F n - 1 }  c := c U{x +n-2  Y I (2, y) E Fn e n - 2  F n - 1 ~ 2 2  = *} U { X  + t L - - 2  Y I (2, Y) E Fn-1 an-2 Fn, Ylyl-1 = *} U { X  +n-3 y I (x, y) E Fn-1 a n - 3  Fn-1,  2 2  = Ylyl-1 = *) end if n : = n + l  end while  ordinary sequences: to find sequences of length n, n loops through the database have to be accomplished.

We state some additional results for the special case of sequences describing paths on a graph. They apply to ordi- nary contiguous or noncontiguous sequences as well as to generalized sequences.

Definition 7. Let G = ( & E )  be a directed graph with vertices R and edges E E R x R. A generalized sequence t E Ben of vertices is called a path fragment, if there are replacements for the wildcards that yield a path on G, i.e., for all i = 1 ,  . . . , 1x1 - 1 with xi # *:  0 if xi+l # *then (xi, z i + l )  E E.

0 if t i + l  = *then there is a path pi E h? connecting x i and x;+2 (i.e., pi = ( p i ,  . . . , p ; )  with p i  = xi, p; = 2i+2 and (p;,p;+,) E E for all j = 1,.  . . , n - 1).

We denote as set of path fragments of G the set R g e n ( ~  := {.E E Rgen 1 2 is a path fragment}.

Lemma 2 (Path Fragment Construction). If z , y  E RgenI~ are path f r a g m e n t s  on a graph G of length 1x1, (yI L 2 that k-overlap with k 2 1 ,  then their k - telescoped concatenation x +k y again is a path fragment on G.

The proof is omitted due to space restrictions (see Gaul/Schmidt-Thieme (2001)). The lemma guarantees that only path fragments are constructed during the candidate generation process.

4. Generalized association rules  As the retrieval of frequent (generalized) subsequences is the hard part of the generation of association rules, we can easily apply our algorithm to find association rules for gen- eralized sequences with prescribed minimum support and confidence.

Definition 8. In analogy to ordinary association rules be- tween sets a contiguous generalized association rule is (de- scribed by) a pair of l-overlapping (generalized) sequences x, y E Rgen (written 2 t y). One defines the support of an association rule x -+ y as the support of the concate- nated sequence 2 +1 y := (21, . . . , x1,1 = y1, . . . , ylyl) and its conjdence as the fraction of the sequences containing 2 +I y of the sequences containing x:  Speaking of association rules one has their interpretation as fuzzy rules in mind, i.e. that if the body x of the rule has occurred in a sequence, then the occurrence of x is contin- ued by the head y of the rule, where occurrence is related to sequences from the underlying set S.  The support gives a measure for the applicability of the rule, i.e. the overall per- centage of sequences where it holds, while the confidence gives a measure for the strictness with which the ruie holds, i.e., in what percentage of sequences that it is applicable to it holds.

Finding all association rules with a given minimum sup- port and confidence means nothing else but finding all fre- quent sequences with at least the given minimum support and then trying the different splits of the found frequent se- quences and checking the confidence of the resulting rules.

- Please note that it is crucial for this application that the algorithm which finds the frequent subsequences also finds all subsequences of every subsequence returned and accord- ingly already has computed all support values needed.

The definition of an association rule can be extended to generalized sequences without any modification. But using generalized sequences opens an additional possibility:  Definition 9. A non-contiguous generalized association rule is (described by) a pair of generalized sequences 2, y (written 2 y-) y). Its support and confidence are defined as follows:  5. Outlook  Generalized sequences can be interpreted as non- contiguous subsequences of contiguous subsequences, i.e., as nested structures of second order. This interpretation opens the application of Apriori type algorithms to a huge range of new data and pattern structures. A unified frame- work for mining adequate substructures of such data will be presented in a forthcoming paper.

