Proceedings of 2010 Conference on Dependable Computing (CDC?2010)  November 20-22, 2010, Yichang, China

Abstract?Intrusion detection is a very important topic in dependable computing. Intrusion detection system has become a vital part in network security systems with wide spread use of computer networks. It has been the recent research focus and trend to apply various kinds of data mining techniques in IDS for discovering new types of attacks efficiently, but it is still in its infancy. The most difficult part is their poor performance and accuracy. This paper presents an innovative model, called MID, that counts maximal frequent patterns for detecting intrusions, needless to count all association rules, can significantly improve the accuracy and performance of an IDS. The experimental results show that MID is efficient and accurate for the attacks that occur intensively in a short period of time.

Keywords?Data mining, Intrusion detection system, Maximal frequent pattern, Accuracy, Performance

I. INTRODUCTION With the more and more dependence on Internet in today?s  information age, it?s so crucial to guarantee the security of computer systems. The intrusion detection system (IDS) has been a powerful weapon to protect networks and has gained more and more attention. It is maintained by monitoring audit trail data. Currently, most IDSs are developed by manual and ad hoc means. With the amount of information passed over networks and the very size of these networks has been increasing exponentially, the so-called expert knowledge is often limited and unreliable. On the other hand, data mining approaches can be used to find unknown patterns hidden in the vast amount of audit trail data so that it can be more objective than the ones hand-picked by experts.  Therefore, data mining approaches can be very promising for intrusion detection system development.

Generally, IDSs are based on the belief that an intruder?s behaviour will be noticeable different from that of a legitimate user and that many unauthorized actions are detectable. So it is possible to determine whether there is an attack occurring by collecting and analysing operating system and network activity data.  There are two major categories of analysis: misuse detection and anomaly detection. Misuse detection uses the signatures of known attacks to identify a matched activity as an attack instance, while anomaly detection uses established  normal profiles to identify any unacceptable deviation as the result of an attack. Usually, misuse detection is more effective against known attacks with higher true positive rate, while anomaly detection could catch new attacks but with higher false positive rate.

This paper presents an innovative technique, called MID(Maximal Patterns for Intrusion Detection), that applies maximal frequent patterns mining to intrusion detection and can significantly improve the accuracy and performance of an intrusion detection system. The experimental results show that MID is efficient and accurate for the attacks that occur intensively in a short period of time.

The rest of this paper is organized as follows: We start from looking at related work in section 2. In section 3 we present MID. We give experimental results in section 4 and conclusions in section 5.



II. RELATED WORK Although intrusion detection techniques have been studied  for more than two decades, they are still at the fairly primitive stage. It has been the recent research focus and trend to apply data mining techniques in an intrusion detection system for discovering new types of attacks, but it is still in its infancy.

The most difficult part is their poor performance and accuracy.

ADAM [1] is a wired Apriori based network intrusion detection system. First, ADAM collects normal, known frequent datasets through mining as training datasets. Secondly, during detection, it runs an on-line algorithm to find last frequent connections, which it compares with known mined training normal datasets and it discards those recent connections which seem to be normal. With suspicious records, it then uses a classifier, previously trained to classify and label suspicious connections as a known type of attack, unknown type of attack or a false alarm. The central theme of MADAMID [2] approach is to apply data mining programs to the extensively gathered audit data to compute models that accurately capture the actual behavior or patterns of intrusions and normal activities. In MADAMID they have used association and frequent episode rule for sequence analysis. LERAD [3] and MINDS [4] use a suite of data mining techniques to automatically detect attacks against computer networks and systems.

WiFi Miner [5] deals with intrusion detection in wireless networks by finding frequent and infrequent patterns from preprocessed wireless connection records. WiFi Miner is for dealing with intrusion detection in wireless networks. It is capable of finding frequent and infrequent patterns from pre-processed wireless connection records using infrequent pattern finding Apriori algorithm. This online Apriori-infrequent algorithm improves the join and prune step of the traditional Apriori algorithm with a rule that avoids joining itemsets not likely to produce frequent itemsets. WiFi Miner, however, has no mechanism for detecting Jamming Wireless attacks. Also, if the minimum support is set too low, there may be large number of frequent itemsets and fewer infrequent itemsets. As a result, the attacks may go undetected.

Ye Changguo etc.  proposed a method [6] based fuzzy association rule mining to discover intrusion action in wireless network to improve the efficiency of association rules mining algorithm for intrusion detection . Hui Wang etc. reviewed the new development of association rules mining technologies for intrusion detection in wired as well as wireless networks [7].

Association rules which come from frequent patterns mining are used in many intrusion detection systems but showed poor performance and limited accuracy. Factually, frequent patterns, more directly, maximal frequent patterns[8], can be used to detect intrusions, in such way, needless learning association rules from frequent patterns and the performance of intrusion detection system can be improved.



III. MID MID is a network anomaly detection system that works on  tcpdump data, which based on schema R:   bel)., Serv, la, Dst.Portrt, Dst.IPIP, Src.PoR(Ts, Src.

Where, Ts is the beginning time of a connection, Src.IP and  Src.Port refer to source IP and port number respectively, and Dst.IP and Dst.Port represent destination IP and port number, Serv means service type, label represents the connection record is normal or intrusive or suspicious or infrequent.

MID is based on the two assumptions: Assumption 1: The activity that occurs frequently in attack  free training data set is normal behaviour of the system. So we use the set of the maximal frequent patterns over the attack free training data set to be the profile of the system and users? normal behaviour.

Assumption 2: The activity that occurs frequently in a short period of time and can?t be covered by the system?s profile is abnormal. Therefore we use the set of the maximal frequent patterns over the training data set with attacks in it to be the model of attacks.

There are two main stages in our approach to mining intrusions. In the training phase the system and user profiles, as well as the attack models, are created, and in the testing phase the connection record in a sliding window is to be labelled as intrusive, suspicious, or normal against the corresponding profiles and attack models. The complete architecture of MID is shown in Fig. 1.  The normal profiles and the attack models are updated by those suspicious maximal frequent patterns under the help of human experts. Table 1 gives the interesting patterns for intrusion detection.

We have several definitions to describe MID as follows:  Definition 1: priority of the labels Priority(intrusive)> priority(suspicious)> priority(normal)> priority(infrequent) Definition 2: labelling function Let record r has the existing label oldlabel, newlabel be a  new label. Define label function assignlabel ( ) as follows:  ? ? ? ?  ?  otherwiseoldlabel ldlabel)priority(oewlabel)priority(nifnewlabel  newlabel)oldlabel,l(r,assignlabe     Fig. 1. The architecture of MID    TABLE  1.

THE INTERESTING PATTERNS USED BY MID  Pattern Attributes P1 Dsp.IP  P2 Src.IP, Dsp.IP  P3 Src.IP, Dst.Port, Serv  P4 Src.IP, Src.Port, Dsp.IP  P5 Src.IP, Src.Port, Dst.Port, Serv  P6 Src.IP, Dsp.IP, Dst.Port, Serv  P7 Src.IP, Src.Port, Dsp.IP, Dst.Port, Serv   MID detects intrusions by labelling each link record in  sliding window [8]. After counting m~ and labelling each connection record in the current sliding window by MinMax_for_IDS(window[t1,t2], ?2, m~ ) , MID labels for each connection record in testing data stream R . some tokens for describing MID are as follows: ?2 is a minimum relative support threshold for abnormal frequent behaviour, l is the length of sliding window,  is the set of the maximal frequent patterns over R0 which represents the profile of the  m     system and users? normal behaviour, m? is the set of the maximal frequent patterns in sliding windows over R? which represents the attack models, m~ is the set of the maximal frequent patterns in the current sliding windows, ri is the ith pattern for record r.(1<=i<=7)

IV.  EXPERIMENTAL  RESULTS In this section, we report our experimental results The  experiments are performed on a Intel Core i3 540(3.06GHz) PC machine with 2GB main memory, running on Microsoft Window XP. The programs are written in Microsoft Visual C++6.0.  We group the datasets into 5 different sets of A, B, C, D and E, where all the records in A are labelled with normal, records in B, C, D and E are labelled with normal or intrusive.

B and C come from the same network with A, while D and E come from a network different from A. Let D0 represent the subset of D where all the records in D0 are labelled with normal, D1 labelled with intrusive.

Let tp represent true positive rate, fn represent false negative rate, fp represent false positive rate, tn represent true negative rate, sp represent suspicious positive rate and sn represent suspicious negative rate. They are computed as follows.

%100*  dataset intrusive inrecordsintrusiveofnumbertotalthe  MMIDbywithrecordsintrusiveofnumberthetp ? labeled   %100*  dataset normal inrecordsintrusiveofnumbertotalthe  MMIDbywithrecordsintrusiveofnumberthefn ? labeled   %100*  dataset intrusive innormalofnumbertotalthe  MMIDbywithrecordsnormalofnumberthefp ? records  labeled   %100*  dataset normal innormalofnumbertotalthe  MMIDbywithrecordsnormalofnumberthetn ? records  labeled   %100*  dataset suspicious inrecordsintrusiveofnumbertotalthe  MMIDbylabeledrecordsintrusiveofnumberthesp ? with   %100*  dataset suspicious  innormalofnumbertotalthe MMIDbylabeledrecordsnormalofnumberthesn ?  records with    Giving different minimum relative support threshold ?1 for  normal frequent behaviour, ?2 for abnormal frequent behaviour and window length l, MID are tested over different datasets of training and testing data. Table 2~5 show the results under the condition of ?1=0.5%.

In experiment group 1, A and B are training data, C is the testing data. The measures on the detection accuracy vary with the window length, sliding step and support threshold. We noticed that the suspicious records are not many. This is because C is from the same network with A and B, the profile can basically cover C.

In experiment group 2, A and B are keeping as training data, D is the testing data. Lots of records are labelled with suspicious by MID. It is reasonable because D is from a different network from A and B, the profile established on A and B can?t cover D well.

In experiment group 3, D0 and A and B are training data, D is keeping as testing data. The experiment results show that the number of normal records labelled as suspicious by MID is much less than group 2, while the number of intrusive records labelled as suspicious by MID is keeping high. This is because that D1 is not training data, so the attack models can?t recognize the intrusive records well.

In experiment group 4, A, B and D are training data, E is testing data, the results are similar with group 1. It shows that MID could work well with the profiles and attack models are updated.



V. CONCLUSIONS We have proposed an innovative technique MID in this paper  that applies maximal frequent patterns mining to intrusion detection and can significantly improve the accuracy and performance of an intrusion detection system. The experimental results show that MID is efficient and accurate for the attacks that occur intensively in a short period of time.

TABLE  2.

THE PERFORMANCE OF MID (GROUP 1)  No. ?2 l sp tp fn sn fp tn  1 80 3 1.23 90.50 7.30 3.18 5.39 84.60  2 80 5 1.23 90.03 7.62 3.20 5.42 84.65  3 50 3 1.76 90.30 6.76 5.72 7.32 82.01  4 50 5 1.81 90.01 6.96 5.72 7.03 81.75  5 90 3 0.64 91.05 8.05 1.68 3.15 87.75  6 90 5 0.57 90.81 8.30 1.75 3.24 87.63     TABLE  3.

THE PERFORMANCE OF MID (GROUP 2)  No. ?2 l sp tp fn sn fp tn  1 80 3 95.60 0 0 82.30 0 0  2 80 5 95.73 0 0 82.25 0 0  3 50 3 95.40 0 0 83.11 0 0  4 50 5 95.51 0 0 83.85 0 0  5 90 3 95.82 0 0 88.05 0 0  6 90 5 95.81 0 0 88.13 0 0      TABLE  4.

THE PERFORMANCE OF MID (GROUP 3)  No. ?2 l sp tp fn sn fp tn  1 80 3 95.60 0 0 3.58 4.34 81.67  2 80 5 95.73 0 0 3.60 4.42 81.65  3 50 3 95.40 0 0 5.82 6.62 81.01  4 50 5 95.51 0 0 5.42 6.43 81.15  5 90 3 95.82 0 0 1.98 3.65 86.15  6 90 5 95.81 0 0 1.65 3.64 84.53       TABLE  5.

