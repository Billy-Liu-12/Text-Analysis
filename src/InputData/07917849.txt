Crowdsourcing Low-Power Wide-Area loT  Networks

Abstract-The Internet of' Things (loT) promises to allow everyday objects to connect to the Internet and seamlessly interact with users and other machines. For this vital Internet connection, most current loT devices use a personal gateway device such as a smartphone or a home WiFi access point.

The necessity of configuring and maintaining these gateways presents an additional burden for both users and developers of loT applications. Our vision for loT connectivity is to eliminate the need for the personal gateway by developing crowdsourced low-power wide area networks (csLPWAN). Recent technologies such as RPMA, LoRa, and R-FDMA enable links to reach lSkm using ISM-band transceivers, making csLPWANs an attractive option. In this paper, we investigate the practicality of csLPWANs and develop the first csLPWAN planning tool, PlanIt, which combines topography-aware RF signal analysis with demographic data to predict LPWAN coverage in specific geographic areas.

Using PlanIt, we find that most cities achieve 99% coverage by deploying a single LPWAN base station within the city. To provide better service on the csLPWAN, we propose and evaluate DQ? N, a near-optimal MAC protocol to enable efficient bandwidth sharing in highly utilized networks. In the future, csLPWANs could accommodate a heterogeneous set of loT applications, simplifying the loT application development cycle, reducing total system cost, improving application reliability, and enhancing the user experience.



I. INTRODUCTION  The Internet of Things (loT) continues to grow as a new  paradigm in which information and communication systems  are embedded in our surroundings, enabling new services  and applications. This paradigm has been applied in various  application domains including intelligent healthcare, environ?  ment monitoring, precision agriculture, and smart cities. The  loT ecosystem spans monitoring, storage, communication,  and analytical tools. However, creating a scalable and robust  communication system for loT is essential for success [1].

In typical applications, the loT device stores data locally and  then periodically communicates to the cloud via a gateway de?  vice. Gateway devices could be smartphones, stationary WiFi  access points (AP), or cellular networks. Low-power commu?  nication between the loT device and gateway device using  standards such as Bluetooth, ANT+, Zigbee, IEEE 802.15.4,  or IEEE 802.11 (WiFi) achieve a maximum communication  range typically less than 100 meters. To achieve longer range  communication, cellular networks have historically been the  only option. This solution is relatively expensive and power  hungry as cellular networks were not designed to support  loT devices. Emerging network standards aimed at optimized   cellular networks for loT devices are in various development  stages (e.g., LTE-M, NB-IoT, EC-GSM-IoT, etc.), however,  these are not yet widely deployed.

Recently, several long-range low-power wireless technolo?  gies have been developed including RPMA, LoRaWAN, and  R-FDMA (Section II) to address the loT connectivity problem.

These wireless standards claim between 5 km to 15 km communications range using shared spectrum in the ISM  bands at low data rates, typically 1 kbaud or less. While  still less than the 35 km to 100 km range made possible by higher power cellular radios operating in assigned frequency  bands [2], these technologies nevertheless enable the creation  of low-power wide-area networks (LPWANs).

In this paper, we propose crowd sourced LPWANs (csLP?  WANs) as a solution to the loT connectivity problem and an?  alyze how they would perform in various demographic regions  of the United States. We define a csLPWAN as any LPWAN  where the base stations are randomly deployed by users of  the system rather than deployed in a coordinated fashion by a  network operator. As several vendors roll-out private LPWAN  networks using fixed infrastructure (e.g., SIGFOX, Ingenu), we  demonstrate that csLPWANs are a viable alternative solution  for providing loT device connectivity.

In our preliminary analysis of existing LPWAN protocols  (Section II), we discovered that these technologies rely on  relatively simple contention-based MAC protocols which have  a well-known utility upper bound of 36.8% [3]. Enhancements can be made to increase the channel utility at the cost of  increasing energy consumption, latency, and computational  overhead. Still, with bursty traffic patterns, this class of  protocols suffers high contention penalty and latency [4]. The  common solution is to design for low channel utility by em?  ploying complex multichannel gateways increasing available  bandwidth (e.g., [5]). This is less attractive for constructing  a csLWPAN as incentivising users to operate complex and  expensive gateways could be challenging. This suggest that for  csLWPANs there is an additional constraint that base station  nodes should be low-cost devices similar to the loT device  nodes themselves.

To meet this challenge, we propose a new MAC protocol,  DQ-N, for csLPWANs that supports thousands of nodes from  a single low-cost gateway node. The protocol is inspired by  distributed queueing and LPDQ [6], [7]. DQ-N provides near?  optimal channel utility and latency characteristics. It supports     thousands of devices within the assigned network simultane?  ously and is inunune to bursty traffic. These optimizations  enable the creation of efficient csLPWANs using commercially  available low-cost LPWAN radios.

We envision users deploying public access csLWPANs  nationwide, allowing multiple heterogeneous loT applications  to share a common and secure data network. This will simplify  the loT application development cycle, reduce costs, improve  application reliability, and enhance the user experience.

The contributions of our paper are:  1) Planlt, a realistic loT network simulation and planning  tool using both geographic and demographic information,  2) csLPWAN coverage analysis for Pennsylvania showing  most cities can achieve 99% connectivity from a single  crowdsourced (randomly located) base station,  3) and DQ-N, a near-optimal channel utility and latency  MAC protocol for LPWAN networks that supports thou?  sands of nodes with a single base station.

The structure of paper is as follows: in Section II we sum?  marize prior work; in Section III we present Planlt, a realistic  LPWAN network planning tool with results covering all cities  in Pennsylvania; in Section IV we present our improved DQ-N  protocol for csLPWAN communication, including evaluation  against other relevant protocols; and in Section V we present  conclusions and future work.



II. RELATED WORKS  Ingenu (previously On-Ramp Wireless) designed a propri?  etary protocol called Random Phase Multiple Access (RPMA)  for wide area networks. RPMA is a variation of CDMA [8].

After selecting a transmission slot, the transmitter performs  a random delay. As long as two transmissions do not arrive  simultaneously, RPMA allows correct decoding [9]. As with  other contention-based MAC protocols, when the network load  increases collisions will be more frequent, causing a reduction  in the available network bandwidth. Ingenu is actively de?  ploying private RPMA networks and claims to be the world's  largest loT network provider [10].

The LoRa Alliance specifies LoRaWAN, a protocol de?  signed for low-cost loT networks [11]. The physical layer of  LoRaWAN uses Chirp Spread Spectrum modulation (CSS).

CSS is very useful to recover data from weak signals,  increasing the effective range of LoRaWAN transmissions.

However, the MAC layer is very lightweight and essentially  implements pure-ALOHA with Listen-Before-Talk, resulting  in low channel utility under high traffic load due to packet  collisions. Commercial LoRa WAN radios are widely available  and implement the LoRaWAN MAC in software. Replacing  the LoRaWAN MAC layer while keeping the CSS physical  layer is an attractive option for developing csLPWAN equip?  ment.

Random-FDMA (R-FDMA) has been developed with the  goal to minimize the manufacturing cost for loT devices [5].

By using ultra-narrow band transmitters and sophisticated  wideband base stations, R-FDMA allows each loT device  to transmit using a random frequency. Although the lack of   contention resolution introduces the possibility of interference  within the same channel when two users are transmitting  simultaneously, R-FDMA does not impose any constraints on  how the node chooses an operating frequency. It is typically  set in manufacturing allowing relaxed oscillator stability con?  straints. R-FDMA depends on each ultra-narrow-band channel  being lightly utilized and forgoes typical medium access  control mechanisms. This design simplifies device nodes but  requires a more sophisticated base station to receive the  random frequency signals. A typical R-FDMA base station  would be implemented using a software defined radio (SDR) to  sample the available spectrum and then perform all RF signal  processing in software. This requires significant bandwidth  between the SDR and host processor and enough processing  power to process the received signal in real-time. Until a  low-cost base station platform is developed, R-FDMA is less  attractive for csLPWANs.

In the distributed queuing (DQ) literature, there are several  recent attempts to adopt DQ into the loT domain, most notably  LPDQ [7], [12]. Both simulation and real world experiments  demonstrate the superiority of DQ over ALOHA-based MAC  protocols such as CSMA in terms of latency and throughput.

LPDQ also has its own time synchronization and frequency  hopping mechanisms. However, LPDQ is designed for high?  frequency, higher-bandwidth wireless links and is not intended  for low-rate loT networks. As we will demonstrate in this  paper, in a low data rate environment, the protocol overhead  adversely affects the channel utility. In addition, LPDQ suffers  larger latency under bursty traffic, as discussed in Section IV.

Finally, LPDQ only supports upstream packets, which may be  unacceptable in some loT applications.

Low-power loT coverage planning and network simulation  are emerging topics [13]-[16]. B. Reynders et.al simulated  both the physical and MAC layer for low-power networks in  a square arrangement to evaluate the packet delivery ratio. The  simulation explores the difference between wideband spread  spectrum (LoRa-like) and an ultra narrowband (Sigfox-like)  networks [13]. M. Centenaro et.al deployed a LoRa network in  the real world and proved the feasibility of complementing loT  networks with long-range radio links [14]. SCALECycle was  designed to solve intermittent and varying coverage problem  using a mobile agent actively collecting data [15]. Y. Al Mtawa et.al proposed an algorithm to identify the holes in an loT  deployment.

Among radio propagation based simulations, a number of  models are proposed to provide path loss estimation used  for higher network layer simulation, such as ITM, Hata, and  ITWOM [17], [18]. S. Kasampalis et.al demonstrated that  ITWOM, though not perfect, gives more accurate results than  previous models within a radius of 20 Km [17]. However,  to our knowledge, there is no known simulation using demo?  graphic information to generate the test points; test points have  been generated at random from uniform distributions.

Finally, one novel solution to solve loT connectivity prob?  lem is to utilize people's smartphone as a public gateway  device, as proposed by T. Zachariah et.al. The so-called     Universal Gateway can be implemented using Bluetooth Low  Energy (BLE) on personal smartphones to remove the re?  striction that one loT device has to connect to one specific  smartphone to communicate with the Internet. Financial or  other incentives can be used to increase user participation. We  borrow this idea and explore the participation rate needed to  achieve regional network coverage in csLPWANs.



III. PLANIT, REALISTIC LPWAN PLANNING  Estimating wireless coverage is a challenging problem. The  most basic approach is to assume that the wireless devices  are uniformly distributed in a square and the terrain is flat  with only free-space path loss [13]. These are obviously not  realistic assumptions. Since many loT devices are designed  to assist or improve human activities, it is reasonable to  assume that their deployment shares similar characteristics as  local demographic information. For instance, a city is more  likely to have a dense deployment of loT devices than a  rural region. Therefore, a uniform distribution of test points  does not represent the realistic deployment of human-centric  loT devices, thus reducing the credibility of these network  simulation results.

Our approach in Planlt is to select potential loT device  locations (Section III-A) within a region that reflects the local  demographic characteristics. From the generated locations, we  randomly select a subset to be crowd-sourced gateway devices.

Then we use the Irregular Terrain with Obstructions Model  (ITWOM) 3.0 to compute the path loss from each device to  every gateway (Section III-B). If there is a gateway device  within the link budget of the radio, a network connection  is possible. The link loss information can then be used in  a network simulator to produce realistic packet errors.

A. Selecting loT Device Locations  Given longitude x and latitude y, the probability of an loT device is PloT (x, y), where PloT is the joint probability function defining the probability of all loT devices. For a given  region Sl, Jo PloT (x, y)dxdy = 1. PlanIt can consider several factors that can affect PloT:  as  ? population density, p(x, y), ? geographic-related information, such as g(x, y) for topo?  logical effects,  ? and demographic-related information, J, such as the in? fluence of average age or income on loT device use.

For simplicity, we define the adverse effect of topography  ag ag Pgt(x,y) = -G? \7g = -G? (ax' ay)'  where G is a vector representing strength of the effect.

Therefore, unnormalized PloT, PfoT can be written as  I ag ag PloT(X, y) = p(x, y) - G . (ax' ay) + Jp(x, y) Hence the probability function PloT is  PfoT(x, y) PloT (x, y) = ? pi o loT   Although in the real world these functions are continuous  given a large region and population, for computational sim?  plicity, we compute discrete values over a small interval.

To generate random loT test points based on the probability  distribution PloT, we will use the tiles when computing PloT.

For tile (x, y), PloT is locally uniform, hence we can easily generate random points in the tile. For those boundary tiles,  additional caution should be taken as we might generate points  outside the region. If it is the case, we can simply discard these  points.

By correctly choosing G and d, we can realistically ap? proximate the probability function describing the loT device  locations. Below is a demonstration of how we generate loT  locations given population and geographic information. We  choose p(x, y) = 50((x - 0.5)2 + (y - 0.5)2)-\ Sl = (0,1) x (0,1), g(x, y) = ((x -0.3)1.5 + (y -0.3)1.5)-1.

For illustration purpose we choose G = < 20,20 >. The first maps in Figure 1 show the probability density map of p, G . (?, ? ) , and PloT. T?ese  .

functions are cho?en to model  a situation where populatIon IS centered at a cIty nearby a  mountain. As we can see, the raw population is centered at  the city yet influenced by the existence of the mountain, as  indicated the dark corner in PloT density map. As a result, the loT device location map reflects the population distribution in  the PloT density map.

To select points in the United States, Planlt uses demo?  graphic data from the U.S. Census 2010 Summary File 1  (SF 1) [19] to estimate the population density (p). Census data is provided in several hierarchical levels from course to fine?  grained: State, County, Subdivision, Place, Tract, Block group,  and Block. For csLPWAN planning, we want to estimate  network coverage over entire census-designated places. These  census-designated places include cities, towns, boroughs, dis?  tricts, municipalities, and townships. To further refine the test  points within a place, we use data from one level down the  hierarchy and break each place into the underlying census  tracts. Each census tract has a distinct population density that  is used to bias the sampling of points within the place.

As a real-world example, we consider the city of Philadel?  phia, Pennsylvania. Philadelphia is the most populated city  among Pennsylvania's 57 cities with 1.526 million inhabitants  as of the 2010 census. The city covers 365 square kilometers  and is divided into 381 census tracts. Each census tract is  fully contained within the city. We use the point selection al?  gorithm considering only population density without any other  geographic-related information (topological or demographic  effects) to generate 1,000 test points in Figure 2a. Visually  we can see the test points are not uniformly distributed.

Some census tracts have multiple test points while others  have no test points at all. The distribution of land area and  the population of the census tracts are shown in Figure 2b.

From this we can see there are 10 census tracts with fewer  than 1,000 inhabitants and the majority of census tracts are  smaller than 3 square kilometers. The census tracts without  any sample points require further investigation. The large  area near (-75.20?,40?) contains Fairmount Park, a large     0.010 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001 0.000  Fig. I. Probability density map of p( x, y), G . (?x' ?-), and PI oT. Notice the change of the map at bottom left corner due to geographic information.

The right plot shows the 2500 loT device locations gene?ated based on PI oT.

300 /  0 i5 200 u    (a) Census tracts (colored) and test points (dots).

'--  Area  10 15 20 25 Square Kilometers Population (Thousands)  (b) Census tract area and population distributions.

Fig. 2. The data from 1,000 test points generated for the city of Philadelphia, Pennsylvania containing 381 census tracts.

urban park surrounding the Schuylkill River contammg the  Philadelphia Zoo and several other museums. The areas to  the south are industrial zones with rail and shipyards to  access the Delaware river. The area in the northeast contains  the appropriately named Northeast Philadelphia Airport (the  International airport, PHL, is outside of the city limits). With  these facts in mind, the point distribution does closely follow   Parker  41.15  41.10  41.05  41.00  40.95  40.90  -79.80 -79. 75 -79. 70 -79.65 -79.60 -79.55 -79.50  Fig. 3. The locations of 1,000 sample points generated for the city of Parker, Pennsylvania (red) and Armstrong County Census Tract 9503 (blue).

the population distribution.

When considering other cities in Pennsylvania, we found  that census tracts are not always fully contained within a city  boundary as in Philadelphia. There are some cases when a  city is contained within a census tract and the census tract  is larger than the city. This is a common phenomenon when  examining smaller census-designated places. The smallest city  in Pennsylvania, Parker, falls into this category. In these  cases, we select points within the census tract using a normal  distribution with mean at the centroid of the city and standard  deviation i of the smallest distance from the city centroid to the bounding box created by the census tract, so there are at  least three standard deviations to the nearest border. The goal is  to generate points near the city center while still spanning the  entire census tract with some probability. Any point generated  outside of the census tract is rejected and a new random point  is drawn. The resulting test points for Parker, Pennsylvania  are shown in Figure 3. This shows the desired clustering of  points near the city (red) while still representing the entire     census tract (blue).

B. Path Loss Estimation  From a set of generated test points in a city or other  region, we randomly select n points to be crowdsourced  base stations. Because the test points were generated using  population density and possibly other information, the selected  base stations will also share this distribution. Then we compute  the path loss from each point to all of the base stations using  the Irregular Terrain with Obstructions Model (ITWOM) 3.0.

This model improves on the Longley-Rice (ITM) model and  estimates path loss taking into account topographic and ground  clutter information. Although these models were developed  for predicting DTV and FM broadcast coverage, they can also  applied to the ISM frequency bands.

Topographic information for the model was obtained from  the Shuttle Radar Topography Mission (SRTM) dataset with 1  arc-second resolution (approximately 30-meter resolution on  the ground). This data has been previously shown to have  good accuracy [20]. For each source/destination pair, the line  of sight geodesic path is constructed by taking not more than  30-meter steps, to match the SRTM data resolution, from  the source to the destination until reaching the destination.

The final point along the path is always the destination. The  elevation at each point is along the path is retrieved from the  SRTM dataset. Before passing to the ITWOM library, if there  are any negative elevation values, the entire path is shifted  up by the absolute value of the most negative point so the  minimum elevation is zero to prevent errors in the path loss  calculation.

The complete set of ITWOM parameters are listed in  Table I. The values for dielectric constant and conductivity are  typical for a city environment. The transmitter height was set  to 5 meters above ground level (AGL) which is easily reached  from the roof of a I-story building. The receiver height was  set to 1 meter AGL to represent a device near ground level.

Because of the reciprocity principle, it is irrelevant whether  the loT device or base station is the transmitter for path loss  estimation.

TABLE I ITWOM PARAMETER VALUES USED TO COMPUTE PATH LOSS.

Parameter Transmitted Height Receiver Height Earth Dielectric Constant Earth Conductivity Atmospheric Bending Constant Frequency Polarization Location Variability Time Variability  Value 5 meters I meter 5.0 (city) 0.001 (city) 301.0 900 MHz Horizontal 50% 50%  Using these parameters, we generate LOO sets of 1,000 test points and randomly select { I  . . .  b} points from each set to act as base stations, then compute the path loss from  all points to every base station keeping only the lowest loss   200 rr-_? __ ?  _ ---,p-,-,hi;;.::lac:.de""lp:.:.;ho.::ia?  ___ ?  __ -.-, 180  Number of basestations 10 12  (a) Path loss in Philadelphia, Pennsylvania.

st. Marys 180 )( ?::\rl)--?) - \ )--f-- j -- -- .9 120 \   )-- --? --m-? , ) f  80???  __ ?--?--?--?1?0--?12 Number of basestations (b) Path loss in St. Marys, Pennsylvania.

Fig. 4. The path loss distribution from 100 rounds of evaluating 1.000 test points with randomly assigned base station nodes in two Pennsylvania cities.

The dashed line at 158 dB indicates the threshold for reception.

path. Figure 4a shows the path loss distribution for Philadel?  phia, Pennsylvania along with a hypothetical 158 dB receive  threshold. This threshold was selected as a fair estimate from  available LPWAN radio specifications which vary from 149  to 175 dB. This shows that a single randomly located base  station has a very good chance of providing connectivity to  most of Philadelphia with median path loss of 130 dB. This  result is somewhat surprising and we should keep in mind  that ITWOM only considers the elevation data measured from  space provided by the SRTM dataset. It is possible that the  reported elevations reflect the top of buildings, especially in  a dense city, resulting in urban canyon effects on the surface.

However, this result gives us confidence that csLWPANs can  cover a large population using very few base stations.

Analyzing other cities in Pennsylvania yields similar results  to Philadelphia. Figure 5 shows the estimated connectivity  using one base station and a 158 dB receive threshold for  every city in Pennsylvania. The median connectivity is 99.2%  and in all but two cities the median connectivity is greater  than 90%. The worst performing city in Pennsylvania is St.

Marys, shown in Figure 4b. Investigating St. Marys reveals  although classified as a city, it is a geographically large area  of nearly LOO square miles in the Allegheny Mountain region spanning an elevation range of more than 250 meters. For  comparison, Philadelphia covers 141 square miles but only has  an elevation range of 100 meters with more gradual elevation  changes. These two factors combine to yield a challenging  region to cover.

Fig. 5. The coverage rate for all cities in Pennsylvania with one base station and a receive threshold of 158 dB. The median connectivity, 99.2%, is indicated by a dashed line.



IV. DQ-N FOR csLPWANs  From our work with Planlt (Section III), we believe csLW?  PANs are a promising approach to provide low-rate loT  network coverage utilizing very few base stations. In the  extreme case, 98% of Philadelphia's 1.526 million inhabitants  could connect to a single base station. For a low data rate  network with simple base stations, basic connection overhead  alone could cripple the network with this many users. Our  approach is to reconsider the use of contention-based media  access control protocols in favor of a distributed queuing?  based approach that we call DQ-N that to better support highly  utilized networks.

Distributed queuing (DQ) is a hybrid media access con?  trol protocol where the coordinator broadcasts contention-free  transmission queue values to individual devices in response  to contention-based transmission requests. In contrast to other  media access approaches, the coordinator maintains minimal  information about the network and is only responsible for  processing and broadcasting the results of the contention  resolution process. Each device in the network maintains two  queue lengths, namely the contention resolution queue (CRQ)  and data transmission queue (DTQ). Using only this informa?  tion, devices can compute contention-free transmit times in a  fully distributed fashion. Although DQ can be implemented in  the frequency domain, this paper focuses on the time domain  as we plan to exploit different frequency channels to increase  network capacity.

To request a data slot using DQ, the device independently  chooses a minislot from {O, 1, . . .  , m - I} at random and then sends a TR at that chosen minislot in the next frame.

Since there may be many devices attempting to transmit  simultaneously and there are a fixed number of minislots, a  contention may occur at that chosen minislot. The base station  provides contention information in the feedback. If contention  occurs in a TR minislot, each contending device enters the  CRQ. If a TR is successful (no contention) the device enters  the DTQ. To calculate the device's CRQ position, the minislot  states provided in the feedback are scanned from lowest index  to highest index. If a contention is indicated in a occurs in a  minislot, the device increases the current CRQ length by 1.

The scanning process continues until the device reaches its   requested minislot index. The value obtained by this process  is the position of the device in the CRQ. Devices in the CRQ  backoff for the computed CRQ number of frames and repeat  the TR process. Analogously, the position of DTQ is calculated  by scanning success states in the feedback and incrementing  the base DTQ value accordingly. Devices in the DTQ wait  for the indicated data slot and then conununicate without  contention.

An important feature of DQ is that once the CRQ and DTQ  values are computed, the device can switch to sleep mode  to save energy and wake up at the scheduled time to transmit  data. There is no need to continuously sense the network traffic  load. This is an advantage to the loT domain where channel  sensing typically consumes significant device energy [21J. If a  device detects that both CRQ and DTQ are empty, it may use  any unused data slot, accepting the possibility of contention.

This behavior is similar to slotted ALOHA and reduces the  latency significantly when the network load is low.

Figure 6a shows the DQ frame structure where the channel  is divided into multiple fixed-length frames containing: 1) m  minislots for transmission requests (TRs), 2) a contention-free  data transmission slot, 3) and a feedback slot.

Because current LPWAN radios use relatively small packet  B ... B LI ___ DA_T_A _S_LO _T __ --'II FEEDBACK m TR minislots  (a) DQ frame structure.

G I DATA SLOT I ... I DATA SLOT I Data frames count (109,N bits)  m slot feedbacks  Data frames count (109,N bits) (b) DQ-N frame structure.

Fig. 6. The frame structure for DQ and DQ-N.

simulated ? ? calculated ? ?  upper bound  ??=-??------?20?----?3?O------?40?----?50 Number of nodes in one burst  Fig. 7. DQ transmission request burst resolution time, Ln, with m = 3.

sizes, the data slot size is constrained by the maximum radio  packet size in practice. As the TR and feedback messages are  overhead, the overall protocol efficiency with small data slots  is low. The goal of DQ-N is to support N data transmission slots between each TR and feedback message. Figure 6b shows  the modified DQ-N frame structure. As a result of this change,  the overall protocol efficiency can be tuned by varying N.

The benefit of DQ-N is that contention is reduced by the  coordinator broadcasting feedback containing the current CRQ  and DTQ length as well as TR results. The TR results consist  of an array of states for each of the minislots, namely, idle,  success, and contention and the number of data slots requested.

This information is used to compute the queue position at  each node by scanning the results for each TR in the same  way as in DQ but now incrementing the DTQ queue length  by the number of requested data slots. If a device wants to  minimize latency in a network with multiple base stations,  before transmitting a TR, it can first sense the load of each  base station by receiving a feedback message containing the  CRQ and DTQ lengths. The device can then send it's TR to  the channel with shortest queue length.

To enable downstream messages in DQ-N, we add a flag to  the feedback message to indicate if there are downstream pack?  ets pending for a device after a successful TR. After seeing  this flag, the device will complete the upstream transmission  and then request a downstream data slot by transmitting a  receive request (RR) message in a random minislot. The RR  protocol is the same as the TR, however, at the assigned data  slot the base station transmits the data. Additionally, at any  time a device can send a receive request (RR) message to  contend for downstream data slots even if it has not seen a  downstream flag.

A. Analysis  The contention resolution algorithm of DQ is a tree splitting  algorithm. All devices that transmit a TR in the same minislot  will compute the same CRQ value and hence occupy a com?  mon branch in the contention tree. We can use this to calculate  the expected waiting time in the system for a transmission  burst. Figure 7 shows the expected number of frames required  to resolve a burst of transmission request versus the number of  nodes in the burst using DQ with m = 3. This is an important   property for loT applications as it improves the stability of the  system during bursty loads.

For further analysis, since DQ-N supports requesting multi?  ple data frames in each TR, it is reasonable to assume the total  number of requested data slots per TR forms a distribution  with mean value A and standard deviation (Ja. Accordingly, we compare DQ-N to an M/G/l queue with input ratio p = A/N.

The following list defines constants used in the analysis of  DQ-N:  p : server utilization (traffic load).

N : number of data slots per frame.

m : the number of minislots per frame.

A : average number of data slots per TR.

(J a : standard deviation of data slots for each TR.

(J s : standard deviation of service time.

"( : average number of TR per frame.

By Little's Law and the Pollazcek-Khintichine formula, the av?  erage delay time in DQ-N based M/G/1 queue is:WM/G/l = Lq .\ _ .\2a;+p2 .\ 2 _ 2/N2 If k h T + N - 2.\(1-p) + N' where (Js - (Ja . we now t e the expected value of A and (J a is relatively small compared to N, we can choose the number of mini-slots based on A, as given in Theorem 1.

Theorem 1. It takes no more than n frames to resolve An TRs if m 2: "( + 1.

Proof Since each unit time the server can process N data slots, one can show that it is sufficient to prove that  L(.\n+'\)/N ::; 1 + L(.\n)/N' Hence it is equivalent to show N mn-1 Ln+1 ::; A + Ln? According to DQ theory we need m"-l ::; ,,\ 1 ? mn-l . . II d . d N = ;Yo Smce m"-l IS monotomca y ecreasmg, an m'n-l 1 . d D m 2: "( + 1, m  "-l ::; ;y, as desire .

B. Simulation To simulate the performance of DQ-N, we first use PlanIt to  generate device locations in three counties in central Pennsyl?  vania, namely Union, Northumberland, and Snyder County.

The test area covers 2,976 km2 with a population of 180  thousand. 5,000 locations are randomly drawn based on the  procedure discussed earlier. We filter out any locations with  a negative signal to noise ratio (SNR), as those devices are  unlikely to transmit to or receive from any valid information  with the base station. We also assume each device communi?  cates to the base station with the lowest path loss. The path  loss values are converted to bit error rate (BER) for use in  simulation using the following equations.

SN R = T I + GT -N J -L + G -N F Eb fb - = SNR-10loglO(  B )  No 1 Eb  1 --? BER = -e 2 No   The meanings and values of the parameters are listed in Table  II.

For the base station transmitter, we use ? Watt as the transmitter power and 200 ms for the duration of the time  slot, to comply with FCC regulations for frequency hop?  ping systems in the 900 MHz band. We select 1200 bps  datarate and 12.5 KHz channel bandwidth to improve receiver  sensitivity and therefore increase the effective range. The  remaining transceiver parameter values are obtained from the  TI CCl120 and CCl190 narrowband transceiver and range  extender datasheets [22].

TABLE II PARAMETERS USED TO CALCULATE BER  Name Value RF power delivered to the transmitter (TI) -3 dBW  Transmitter antenna gain (GT) 3 db Johnson Noise (NJ) -114 dbW  Path loss (L) Computed by PlanIt Receive antenna gain (G) 3 db  Receiver noise figure (NF) 7 db Channel data rate (fb) 1200 bps  Channel bandwidth 12.5 KHz PHY model BPSK  For comparison, we also simulate P-persistent CSMA, ideal  TDMA, and LPDQ in addition to DQ-N. These protocols are  chosen because they form the basis for many popular MAC  layer protocols. P-persistent CSMA operates like traditional  CSMA but a node only transmits on idle channels with  probability P (we use P = 0.001) to reduce contention. Ideal TDMA assumes a static round-robin transmit schedule for  all nodes. LPDQ is a previous implementation of distributed  queuing for low-power wireless networks. DQ-N improves  upon LPDQ by scheduling multiple data slots per frame  resulting in reduced protocol overhead for the short frame sizes  common in LPWAN systems and supporting both upstream  and downstream traffic.

We performed two different simulations, the ideal case  without packet loss and a realistic case with packet loss caused  by the path loss predicted by PlanIt. For both cases, we  generate sufficient upstream traffic to saturate the network  evenly distributed among all of the nodes (e.g., if there are 100  nodes and 1,200 bps available upstream bandwidth, each node  would generate 12 bps of upstream traffic) and then sample the  network utility and latency after a warm up period. Network  utility is defined as the ratio of successfully received data with?  out contention or corruption versus the available bandwidth.

The latency is defined as the time from when a node begins  to send a packet to the time when a base station successfully  receives it, thus including the contention and waiting time. No  re-transmissions are used in the simulations as such effort will  confound the simulation results and typically belongs to upper  layer protocols. We also measure the duty cycle for each node  to demonstrate the energy intensity of each protocol.

Transmitted packet sizes are selected from a normal distri?  bution with a mean of 240 bytes and standard deviation of  120 bytes. Since the total available bandwidth is 1,200 bps  and the maximum time slot is 200 ms, each data slot contains  30 bytes of data. We choose N = 16 and m = 8 for the DQ-   N parameters. We also subtract the protocol overhead when  calculating maximum channel utility, therefore use 0.94 for DQ-N and 0.8 for LPDQ which saturates the network using these parameters.

1.d----------I .? ........................ - .... .

?O.8 """"'''''''''''''' .? ''''''''''Y?''.".'''''.''''''v.'''''''+'''''''''''''' ::?: ? O. ? 102 C ? io. : u "0  o.

0?Ok-?10?0=0?2=0'"00?3C>C00=0?40?0=0-----"  node count  .: ... L.?.'''.''.'' .. " .. " ... ? .. "? .. ",,.? ...

1000 2000 3000 4000 5000 node count 1- TDMA .... DQ-N ?......? LPDQ - O.OOl-CSMA 1  (a) Simulation results for the ideal environment.

103 ??------=-", 1.

o.

o. 1000 2000 3000 4000 500010' 0 1000 2000 3000 4000 5000  node count node count 1- TDMA .... DQ-N ?.....? LPDQ - O.OOl-CSMA 1 (b) Simulation results for the realistic environment.

Fig. 8. LPWAN network simulations for saturated networks.

Figure 8a shows the simulation results for an ideal environ?  ment where there is no packet loss. In this case, DQ-N achieves  similar performance to LPDQ but demonstrates lower latency.

However, since DQ-N reduces protocol overhead, it has higher  channel utility.

Figure 8b shows the simulated utility and delay considering  packet loss. The latency for all protocols except TDMA  increases when compared to the idea case. The channel utility  for all protocols is reduced due to packet loss. For DQ-N  and LPDQ, in addition to lost data messages, a lost TR or  feedback message may result in an unscheduled data slot,  further reducing utility. However, DQ-N still outperforms  LPDQ and P-CSMA in terms of channel utility and latency.

Figure 9 shows the radio duty cycle distribution in the  realistic environment with 2,500 nodes. Although TDMA  exhibits the optimal duty cycle (1/2500), it is not practical as the number of nodes has to be fixed and dynamically changing  the TDMA schedule requires a more complex protocol. Never?  theless, the simulation shows the improvement of DQ-N over  LPDQ as it eliminates the need for nodes to make multiple  TRs for messages longer than one data slot.



V. CONCLUSION AND FUTURE WORK  In this paper, we consider crowdsourced low-power wide?  area networks (csLPWANs). A csLPWAN is a LPWAN where     Fig. 9. Radio duty cycle in the realistic environment.

a subset of users provide base stations without coordinating the  location of the base stations. To better understand csLPWAN  behavior, we have created a csLPWAN network planning  tool, PlanIt. PlanIt combines topographic and demographic  information to give a more realistic representation of real?  world csLPWAN connectivity. Using Planlt, we found the  median connectivity over all cities in Pennsylvania was 99.2%  from a single randomly located base station within each city.

Using the path loss data from Planlt, we have also simulated  and compared the efficiency of different LPWAN protocols. To  simplify csLPWAN gateways and improve network utilization,  we have designed and analyzed DQ-N, an extension of the  DQ protocol optimized for highly utilized low-rate csLPWAN  networks. By presenting mathematical analysis and numeric  simulation results, we show the superior performance of  DQ-N and demonstrate the ability of a single DQ-N base  station to support thousands of nodes in a csLPWAN. We  believe these results will help catalyze the deployment of  future csLWPAN networks. We are currently developing a  low-cost base station to support networks of thousands of  LoRa devices using the DQ-N protocol. More information on  this work and a web-based version of Planlt are available at  http://cslpwan.me.

