An Interactive, 3D Visual Exploration Tool for Undirected Relationships

Abstract  Many relationships in data mining such as frequent item- sets and similarity are undirected. An effective visualization of such relationships at a large scale offers a valuable vi- sual feedback about the dataset or data mining results to the user by which the user?s understanding of the target in- formation is greatly enhanced. We present a highly interac- tive 3D visual data exploration tool with a high graphical quality in this paper. Visual data exploration using this tool on various real and synthetic datasets in main memory was effective and promising.

1 Introduction  Visual feedback is an important asset in exploration and mining of a large volume of data. It plays a significant role in (i) inspecting a glimpse of the given dataset to design a good data mining strategy, (ii) understanding how the algo- rithm works for the dataset [3], and (iii) conveying results of data mining to the user in an intuitive presentation. Tra- ditional statistical tools such as histograms and scatterplots provide a valuable insight into the input dataset. These sta- tistical tools and other numerous visualization techniques in multidigraph visualization [1], coauthorship [10], cluster hierarchies [12], association rules [14], Internet browsing, word co-occurrence, web graph and as such [3], also im- prove understandability of data mining results.

For an example, consider Figure 1. The scatterplots pro- vided by Weka for the UCI Iris dataset of three class la- bels, Iris-setosa, Iris-versicolor and Iris-virginica, shown in the figure, even without running a classification algo- rithm, reveals that the petalwidth and petallength attributes are capable of discriminating one class from an- other whereas sepallength and sepalwidth are not as good as the other two.

Among these techniques, visualization of undirected, quantifiable relationships is useful in many application do- mains. Examples include  ? Social networks: Many relationships in social net- works, e.g., friendship [2, 4], collaboration [10, 5], co-  Figure 1. Scatterplots for UCI Iris dataset in Weka. The visual feedback from the plots in- dicates that petalwidth and petallength are good to separate data into classes.

citation are undirected whereas relationships such as authority and hub [8] are directional.

? Geo-referenced information: There are plenty of ex-  amples of undirected relationships in this data domain.

The volume of long-distance calls between states [1], and the amount of trade between countries are exam- ples of undirected relationships in this domain.

? Frequent itemsets: Relationships among frequent  items are undirected. Co-occurrence in multimedia metadata, spatial features and words [9] are also undi- rected in their respective domain.

For the visualization of undirected relationships, undi- rected graphs [1, 3, 10, 11] and 2D/3D array grids [14, 9, 13] have been widely used in the data mining literature. Exam- ples of a 2D symmetric square grid, a 3D square grid and an undirected graph are shown in Figure 2. Lately, circu- lar grids which can be thought of undirected graphs with no particular topology are gaining momentum. The visual feedback of circular grids are often more effective than his- tograms and scatterplots in conveying such an information.

Existing circular grids are typically two dimensional and produce static images with limited user interaction.

Tenth IEEE International Symposium on Multimedia  DOI 10.1109/ISM.2008.126     Figure 2. Three different views of co-occurrence frequencies of 19 spatial features. Left: A 2D sym- metric square grid view. Color and brightness reflect the magnitude of frequencies. Middle: A 3D view. Only a half of the grid is displayed. Right: A circular 3D view offered by Round3D.

In this paper, we present a generic, interactive 3D vi- sualization tool, called Round3D, suitable for any undi- rected, quantifiable relationships among data objects. The key highlights of Round3D include  1. The objects in Round3D are arranged in a circle which is capable of representing data of virtually any dimen- sionality with ? times larger visual capacity than a comparable square.

2. Round3D is highly interactive for effective user-driven exploration of the information. The user can start with a global summary of the underlying dataset and drill down to the detailed local information by zooming, clicking objects and rotation.

3. Round3D uses multiple visual cues to effectively con- vey visual feedback on objects and their relationships.

4. Round3D offers a basic query function by which the user can obtain non-visual information such as object names, object support count, the significance of a rela- tionship, and an aggregation of relationships.

5. Round3D provides filter functions by which the user can enable or disable objects and relationships by the degree of statistical significance.

6. The graphical quality of Round3D is outstanding.

Regular objects are rendered in realistic, glossy spheres with direct and ambient lights reflected upon them to deepen the 3D effect. Object labels preserve high resolution at any zoom level.

The rest of this paper is organized as follows: related works to this paper are introduced in Sec. 2. In Sec. 3, we introduce the proposed Round3D with a design emphasis.

We discuss the prospects of Round3D in data mining appli- cations in Sec. 4 and draw a concluding remark in Sec. 5.

2 Related Work  The topic of our work is in general related to scientific visualization which often emphasis on a global summary  of data. We, however, limit our scope to visual data ex- ploration and mining which may also concern about local details. Furthermore, we focus on 2D and 3D visualization tools for undirected relationships in data mining which are largely visualized as 2D/3D matrix [14, 9, 13] or undirected graphs [1, 10, 11, 5].

A review on visual data exploration and mining can be found in [3]. In [14], the authors visualize association rules in a 3D display. The work is essentially an extension of ma- trix visualization in which columns denote rules, rows de- note the constituent items, and antecedents and consequents are shown in different colors. In [13], cluster analysis re- sults are shown in a 3D matrix which is in essence the same as the 3D square matrix shown in Figure 2 such that the square grid of horizontal axes represent data objects and the vertical axis represents the similarity between the two cor- responding objects. Visualization of geospatial point sets presented in [7] is inherently a similar 3D matrix visualiza- tion since longitude and latitude values constitute X- and Y -axes. [1] uses multiple visual cues in a 2D square matrix to enhance the visual feedback from a large data.

There also exist tools which employs a circle rather than a rectangle or square as the layout of the data objects. Circle segmentation techniques are discussed in [6] to represent high dimensional data onto a 2D geometry. In [10], coau- thorship is represented in a circular image such that authors are arranged on a non-interactive 2D whose visual feedback may lose effectiveness as the data size grows large. As an extension of a circular grid, a concentric 2D ring view of a coauthorship network is presented in [5] in which each ring represents authors? contribution in a particular year, which is useful to show temporal trends in the underlying informa- tion. JUNG [11] is a more comprehensive visualization tool for network/graph data. It offers a circle layout but in 2D.

3 Round3D  In this section, we discuss the motivation, design philos- ophy and features of the proposed Round3D. Our project     was grown from the repeating visualization need of data mining results in our various projects. For 2D or 3D nu- merical information, perhaps Gnuplot1 is the most popu- lar plotting tool in the field of science and engineering for its easiness to use, rich configurable features, and excellent plot quality. It is, however, impossible to inspect specific spots on the plot to delve into local details. Starting from this experience in our work, this project was born with the following design goals:  Design goals  1. Global summary vs. local details: The tool is to be capable of serving high-level global summaries as well as individual details of the dataset. For this objective, multilevel views are to be offered.

2. Visual capacity: The visual capacity of the tool is de- fined as the density of visual objects with respect to the number of pixels used. The tool is anticipated to max- imize this ratio to be able to handle a large dataset as much as possible.

3. User interaction: The tool is to offer an easy, intu- itive interaction capability such as navigation, zoom-in (drill-down), zoom-out (roll-up), rotation (pivot), slice (project onto an axis), and filter (extract a subset of the universe).

4. Query interface: The tool is to offer a query interface for exploring visually implicit information.

These objectives are intertwined with each other. We now present the major components of Round3D in which we accomplish the design goals.

3.1 Visual capacity  Visual capacity is primarily governed by the layout of the objects that we choose.

Object layout Square grids (or rectangular grids, in gen- eral) and circles are the two most popular types of object layout for undirected binary relationships in the literature [14, 1, 3, 9, 10, 11].

We chose circle as the primary layout for objects in Round3D, rather than square, for two reasons: first, squares are bound to the specific semantic roles attached to columns and rows and hence are not suitable to represent high dimen- sional data whereas circles have no such binding and can represent virtually any degree of dimensionality [6]. Sec- ond, a circle generally offers more visual capacity than a square of comparable size.

Squares consist of a set of columns and a set of rows each set of which has unique semantic roles, as usual in a 2D  1http://www.gnuplot.org  matrix. Due to this convention, a square layout is typically either column-wise or row-wise, but not both, when rep- resenting an aggregation of information. Changes in axes imply changes in information carried by the tool. To illus- trate this point, consider the two stacked histograms shown in Figure 3. Both histograms show the total number of votes thrown to George W. Bush, John Kerry and all other minor candidates in the 2004 US presidential election. The major axis of the first histogram is the candidates by which we can easily find which candidate received more votes in total. In contrast, the second histogram shows that which state threw more votes than other states. Each histogram further pro- vides detailed information on states or candidates. In this example, each histogram has a set perspective and a trans- lation between the two perspectives is not automatic. The circular layout in Round3D inherits no such a binding and is capable of representing any number of axes.

Let us discuss the matter of visual capacity. The first figure in Figure 2 shows a square grid view of the co- occurrence frequencies of 19 spatial features taken from our previous project. The second figure shows the same infor- mation in a 3D space. In this type of figure, X- and Y -axes have the same set of values, as in a square matrix, because the primary purpose is to investigate the co-occurrence pat- tern between every pair of values. The similar ideas are also used in information retrieval for the visualization of word co-occurrence [9] and in association rule mining for frequent itemsets.

With a larger number of objects, objects and their labels will be cluttered to a unreadable state and subsequently de- tailed local information will be no longer available. Our strategy in dealing with this issue is to use a circular layout because it suffers from the problem less than the square grid layout as discussed below.

The number of distinctively displayable objects in the square layout is proportional to the length of a side of the square (i.e., the number of pixels along the side), and hence as the number of objects increases k times, the total area (i.e., number of pixels) required increases k2 times. Due to the symmetric nature of the square grid, only a half of the grid along the diagonal is often set to meaningful values. In such a case, a half of the occupied pixels are wasted.

An alternative layout to square is circle as illustrated in Figure 2. In a circle layout, only one set of objects are ar- ranged along the circumference of the circle. It is clear that the number of distinctively displayable objects in the cir- cle layout is proportional to the entire circumference of the circle in contrast to the square layout. Hence, a circle of ra- dius r will have ? times more visual capacity than a square of side length 2r.

Node and label arrangement Suppose that each object is represented as a sphere. Since all the nodes are arranged     Figure 3. Number of popular votes for Bush, Kerry and all other candidates by state.

along the circumference of radius r in the circle layout, the interval between adjacent nodes i and j is 2?/n given n nodes. As we do not want to permit overlap between i and j, the maximum radius (b) of a node is equal to the half of the distance between the centers of adjacent nodes i and j which is the height of the half triangle of the isosceles triangle formed by the centers of the grid, node i and node j. Hence, the maximum radius of spherical objects on the circle layout is a function of the radius of the circle and the number of objects involved:  b = r sin((2?/n)/2) = r sin(?/n)  3.2 Visual cues  In visualization, the mapping relationship from the data domain to the visual domain is one-to-many. In other words, there exist multiple views (or perspectives) for the given dataset. In a 3D space, the user may have different visual feedback on the same information depending on the user?s current perspective. Conversely the values with the same visual feedback may be distinct values in the data do- main. Often, two different values in the data domain are projected onto the same value along the user?s view direc- tion in the visual domain. Hence, we need to put our best effort to avoid ambiguous visual feedback.

Visual cues As alluded above, a single visual cue for one type of information may not be sufficient in discriminating one data value from another. In addition to the mapping and projection issues mentioned above, it is because one user may be sensitive to a variation in color but not in length, and vice versa. For these reasons, in general, visualization of a relationship using multiple visual cues, such as color and length, is more effective than using a single visual cue, as long as they are used consistently with care. The needle grid view in [1] uses three visual cues: color, angle and length in which no single cue may not be powerful enough when the grid size is large. The 2D co-occurrence plot in  Figure 2 uses color as the only visual cue, which also may not be suitable for a large dataset.

In Round3D, multiple visual cues are used to maximize the discriminative power of visual components. Two visual cues, shapes and colors, are used to distinguish one object class from another.

Shapes and sizes Object size in Round3D is the same for all the objects since the primary objective is to visual- ize the undirected relationships among comparable objects.

If objects belong to different classes, e.g., continents in a grouping of authors by the continent they reside, different 3D geometric shapes, such as spheres and cubes, are used to distinguished them.

Geometry and height For relationships among objects (edges in Round3D), four visual cues, color, brightness, height and thickness, are used to enhance the visual feed- back on the significance of undirected relationship mod- eled as edges. All these cues are primarily the function of the weight of the corresponding relationship. The effect of these visual cues are illustrated in Figures 4 and 5.

In Round3D, the relationship between two objects is rep- resented by a quadratic Bezier curve. Given points p0, p1 and p2, the Bezier curve is defined as a function of t? [0,1]  B(t) = (1? t)2 ? p0 + 2t(1? t) ? p1 + t2 ? p2  where t denotes a curve segment. By passing the Y -axis values of the two corresponding nodes as p0 and p2, and the weight of the edge between the two nodes as p1, we can obtain an edge of a parabolic shape whose height is scaled by the weight factor of the edge automatically.

Color The hue of an edge e is determined by the weight factor of e as well.

hue(e) = (max?weight(e))/max  where max is the maximum edge weight in the dataset.

With this formula, edge colors change from red to yellow     and then to green and blue as the weight factor changes from the maximum value to a smaller value.

Brightness We chose to use varying brightness in an edge to visually emphasize the middle of the edge. Varying brightness provides a better 3D feedback than a uniform brightness for edges in a 3D space.

The edge brightness is defined as a function of t? [0,1] brightness(t) = ?(t? 0.5)2/0.52 + 1  where t denotes a curve segment. An edge becomes the brightest at the vertex point and gradually darker toward both end points of the edge.

Thickness Thickness of an edge is proportional to the weight of the corresponding relationship in Round3D.

3.3 User interaction  As discussed above, circular grids are preferred for ex- cellent visual capacity and intuitive visual feedback offered.

However, its effectiveness is challenged ultimately when the number of objects and relationships becomes large. The nodes, edges and node labels, if given in a static image, will be cluttered resulting in losing detail local information.

A natural remedy to this problem is an integration of user interaction which lets the user navigate through multilevel views offered by Java3D. We follow the Visual Information- Seeking Mantra in this regard: overview first, zoom and fil- ter, then details on demand, as suggested in [1], through the following user interaction functions:  Rotation The user can change his/her view direction to any direction in the 3D space. This offers an effect of the entire grid rotation. In addition, the entire grid can rotate around X-, Y -, or Z-axis incrementally or automatically at the user?s will. The consistent, automatic rotation around a particular axis is useful to inspect a global summary of the entire data from a particular perspective.

This rotation function also provides a trill of a roller- coaster riding especially when the user?s view is set to a deep perspective (see the middle figures in Figure 4). This additional trill is what is missing in traditional visualization.

We add this to Round3D as a prelude to the integration of computer game metaphor into visual data exploration.

Zoom The zoom function of Round3D allows the user to zoom any visual component in such as nodes, node labels, edges, and the entire grid as well. Examples of zoomed views are shown in Figures 4 and 5 at various level of mag- nification. Note that when the dataset size is relatively large, node labels may be too small to read at a low magnification level (see the coauthorship of 968 nodes and 3,470 edges in Figure 5). By zooming the view in, we can inspect all the node labels clearly without losing any information.

Filter The user is allowed to filter nodes and edges by their weight factor at the time of launching Round3D or while Round3D is running. This function helps the user focus on the significant patterns without being distracted by minor details by filtering statistically insignificant objects or relationships out.

Examples of filtered views are shown in Figures 4 and 5. In Figure 4, edges are pruned interactively using dif- ferent minimum edge weight by which prominent 2-, 3- or 4-frequent itemsets are easily discovered. A pruning action can be revoked instantly also. In Figure 5, three different minimum edge weights are applied to the publication coau- thorship dataset before the nodes and edges are constructed.

3.4 Query interface  Round3D is equipped with a query interface prototype.

As the user clicks a node n, n?s appearance changes to a wire framed shape and the detailed information of n is dis- played on top of the screen. The information includes the name of n, the support count of n in the given dataset, and the sum of the weights of all the edges connected to n. As the user also clicks an edge e, the weight of e and the names of the nodes on the both ends are displayed. Examples are shown in Figures 4 and 5 (in which node information is not readable on the printout but very clear in Round3D).

4 Experiment  The proposed Round3D has been developed by using Java3D 1.5 and Java 6 and tested on a PC with Pentium D 3.00 GHz CPU and 2.00 GB of RAM. In testing Round3D, four real world datasets (a market basket analysis dataset typically used in association mining, the 2004 US presi- dential election data, and two co-authorship datasets) and a number of random datasets are used. Their sizes are rang- ing up to ?20,000 objects and 315 to 104 edges.

Market basket analysis dataset This dataset comprises 100 objects, and 1,126 edges each of which represents a pair of grocery items being sold together. The support level (in percentage) of such a pair determines the weight of the corresponding edge. The support of 53 pairs (4.7%) out of 1,126 pairs was 10% or higher, and 274 pairs (24.3%) have only 1% support.

The visualization of this dataset in Round3D is shown in Figure 4. 100 items and their labels are well spaced out and labels are very clear to read at various zoom levels. Most edges appear to be blue background with a low profile due to their low level of support. A small number of statistically significant edges are rendered in red and orange colors as thick, tall Bezier curves. In the bottom figures, as the ?Pills- bury Cake Mix? node is queried by mouse click, the node     Figure 4. A market basket analysis dataset. Top left: 100 item nodes from Apple & Eve Apple Juice to Yo-Ho Potato Chips are interconnected by 1,126 edges. The edges signify that 1,126 pair of items are sold together. The bird eye view offers a clue to strongly frequent itemsets such as {Pillsbury Cake Mix, Pillsbury Biscuits, Jiffy Muffin Mix}. Top right: Node and edge query by mouse click on Pillsbury Cake Mix reveals all the edges connected to the item and the total edge weight. Middle left: Powerful zoom-in features reveal that Pillsbury Cake Mix has high support with other items such as the neighboring Pillsbury Biscuits. Middle right: Automatic rotation of the grid around Y -axis with a deep perspective view like this gives the fun of a roller-coaster ride while visually exploring the dataset. Bottom: Examples of interactive edge pruning at minimum edge weight 17 (left) and 23 (right) in which 3-frequent itemsets {Pillsbury Cake Mix, Pillsbury Biscuits, Jiffy Muffin Mix} and {Pillsbury Cake Mix, Pillsbury Biscuits, Bigelow Apple & Cinnamon Herb Tea} are visually obvious.

Figure 5. Top: The US Presidential election 2004 dataset. Left: 25 Presidential candidates are in red boxes and 50 states are in gray spheres. Edges are concentrated on Bush and Kerry signifying that they are the two leading candidates. Total number of votes thrown to Bush and Kerry are queried by clicking the respective nodes. Right: States such as California, Florida, Georgia, Illinois and Michigan show very close support for Bush and Kerry. The red edge between Kerry and California reveals that Kerry has the largest number of votes in the nation from California. Next 2 rows: A publication coauthorship dataset of 968 authors and 3,470 coauthorship relationships. The impact of edge weight threshold (?) on the coauthorship data. Middle left: 3470 edges at ?=0. Middle right: 384 edges at ?=2. Bottom left: 10 edges at ?=6. Pruning by edge threshold helps to focus on statistically significant relationships quickly. Bottom right: Exploration of outstanding edges leads to the discovery of S. K. Card?s coauthorship, i.e., 72 in total, by clicking the S. K. Card node.

is turned into a wire framed sphere, all the connected edges to the node are highlighted in white, and the detailed infor- mation on the node is displayed. With this dataset, the user interaction functionality performed smooth.

This dataset is also used to test interactive filtering of nodes and edges, and reverting of the previous filtering. The bottom 2 figures in Figure 4 shows edge pruning at two dif- ferent edge weight thresholds, 17 and 23. With this prun- ing function, we were able to discover 3-frequent itemsets, such as {Pillsbury Cake Mix, Pillsbury Biscuits, Jiffy Muf- fin Mix}, quickly.

2004 US presidential election dataset This dataset is ob- tained from ?FEDERAL ELECTIONS 2004? by Federal Election Commission. This dataset is bipartite of two dis- tinct object classes, 25 presidential candidates and 50 voting states. The objects of the presidential candidate class appear in red cubes and the states are rendered in gray spheres as shown in Figure 5. An edge weight represents the number of popular votes thrown to a candidate from a state.

The number of votes for Bush, Kerry and all others by state are shown in Figure 3. The perspective of each his- togram is different such that the left represents total popular votes by candidate whereas the right is by state. These two perspectives are unified into one in Round3D shown in Fig- ure 5. From the Round3D view, we can visually and textu- ally inspect the total number of votes thrown by each state to each candidate and the total number of votes received by each candidate from each state. For example, from the top left figure in Figure 5, we find that Bush and Kerry are the two top runners. From the top right figure, it is clear that California threw the largest number of votes in the nation and Florida is the second. It is also shown that California is in favor of Kerry more than Bush.

Co-authorship datasets (small and large) Two coau- thorship datasets in scientific publication are tested with Round3D. One is from the InfoVis 2004 contest (968 au- thors and 3,470 coauthorship) and the other dataset is from CiteSeer (19,898 authors and 8,294 coauthorship). Both datasets were tested well. The bottom 4 figures in Figure 5 shows global summaries of the coauthorship as well as the details of individual author in which the degree of coau- thorship of most authors is relatively low. One outstanding example is S. K. Card shown in the figure. This fact is well observed in Figure 5 as edges are pruned by increasing edge weight threshold. With the larger co-authorship dataset, we experienced noticeable lagging in user interaction.

5 Conclusion and Future Work  The preliminary results from the proposed Round3D were pleasant and promising as an in-memory tool. They  also expose shortcomings in our current approaches. Our biggest concern is scalability for a massive dataset. We plan to overcome this issue by two ways. First, we will make nodes and edges light by storing all the information other than their unique IDs in a high performing, stand- alone database and access the details on demand. With this approach, we also plan to offer a versatile SQL query inter- face. Second, we consider to present meta-relationships at a high-level view first, and low-level views later as needed.

