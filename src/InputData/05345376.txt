Effective Buffer and Storage Management  in DTN Nodes

Abstract?Current wired networks have been developed on the basis of the AIMD principle, which offers increased performance and fairness. Nevertheless, there is a vast spectrum of networks, from deep space to wireless sensor networks, where TCP fails to operate, as it results in frequent timeouts and intermittent or no connectivity at all. The DTN (Delay/Disruption Tolerant Networking) architecture and particularly the Bundle protocol, offers solutions in networks where low connectivity, big or variable delays and increased error rates are prevalent. Using persistent storage, a DTN node is able to overcome such limitations; the data can be transmitted several times until it is successfully received by the next hop. However, since the conditions in a DTN network might vary, from time to time we may experience high connectivity and low delays. In such cases, data does not need to be transferred to persistent storage, as it will be probably be transmitted shortly and this transfer from buffer to persistent storage and back to buffer, will delay the transmission. In this paper we propose a system which implements a mechanism that aims to minimize packet transfers between buffers and persistent storage and hence accelerate transmissions.

Keywords-component; DTN; Bundle Protocol; Buffer Management

I.  INTRODUCTION The Bundle protocol [3] aims to resolve issues in DTN  networks, such as intermittent connectivity, long or variable delays and high error rates. Examples of DTN networks are MANET, vehicular networks and deep-space networks. In most of these cases, there is not a continuous end-to-end path between the sender and the receiver; the receiver might be available after the sender has been disconnected or an intermediate routing node may be moving constantly between the always connected, albeit remote communicating ends.

Using persistent storage, the Bundle protocol manages to resolve most of these issues. Instead of storing packets in a temporary buffer, a DTN node stores packets permanently in a local storage unit. Data will be transmitted when the next hop is available and may be retransmitted several times, if the transmission fails. Persistent storage, however, has a significant drawback: it increases the communication overhead as it adds a processing delay which results by moving the data from buffer to persistent storage and back to buffer. Although most of the times this delay is negligible, there are cases where two nodes may be engaged in continuous low-delay transmissions. In  such cases, persistent storage increases unnecessarily the connection time.

In this work, we investigate the potential of maintaining data-to-transmit in buffers, instead of moving them to persistent storage. We model a system where packets arrive from different flows. Based on the frequency of connections to the next hop, we do not store all packets in persistent storage, but we maintain some of them in buffers. In this way, we aim to decrease service time and processing delay and hence increase performance. Since our proposal consists of work-in- progress, we do not include any evaluation to prove our claims.

The rest of the paper is organized as follows. In Section 2 we give a brief background on DTN architecture and protocols.

In section 3 we present the proposed model and the buffer management algorithm and in section 4 we set the framework for future work.



