An Intrusion Detection Method for Ad hoc network Based on Class Association Rules  Mining

Abstract?Ad Hoc network is a newly developed network without fixed infrastructure and a changing topology. Its vulnerability makes it prone to attacks, which brings greater challenges for intrusion detection for Ad Hoc. Through analyzing the existing intrusion detection techniques as well as the characteristics of Ad Hoc network, this paper has proposed an intrusion detection technique based on class association rules. The result has shown that this method is more accurate and efficient than other methods of its kind, especially for the hidden attack detection  Keywords- Ad Hoc networks; intrusion detection;class association rules

I.  INTRODUCTION Wireless Ad Hoc network is a multi-hop temporary autonomous system consisting of a group of wireless transceiver of the mobile terminal devices. The wireless terminals function as the router and the host. Due to its advantages of supporting the fast network and strong survivability, study on the wireless Ad Hoc network has become a focus in wireless network research. However, as Ad Hoc brings flexible and convenient wireless access, many of its inherent characteristics are becoming the potential vulnerabilities including the lack of infrastructure and the central server, dynamic topology and the limited resource and so on. In addition, the vulnerabilities of Ad Hoc have made the study of its security one of the key areas in Ad Hoc study. Intrusion detection technique is able to monitor the network in real time, collect and analyse the monitoring data and immediately recognize any intrusion.

Intrusion detection technique, the second protective line of the network security, is increasingly becoming an indispensable part for any network of higher security requirements.

Currently, four categories of the study on intrusion detection technique for Ad Hoc have been identified: (1) Detection based on machine learning. For example, SVM[1] and AIS[2]. (2) Finite state machine based detection algorithm including RIDAN[3],AODVSTAT[4].(3) Detection algorithm based on probability and statistics (refer paper [5]).

(4) Detection algorithm based on data mining technique. For example, RIPPER detection[6],  Cross-feature Analysis[7] and hybrid Analysis[8-9].

Among the above mentioned detection algorithms, the algorithm based on RIPPER Classifier and SVM are anomaly detection algorithm, which can detect the  complicated and newly-emerged attacks. In terms of designing, how to select the appropriate properties becomes the key issue because different attacks require different properties. Detection based on attack characteristics belongs to misuse detection technology, whether it applies the finite state machines or the statistical methods. This method of detection boasts a high rate of detection for the known attacks with few false reports. But to generate the attack scenes and sort attacks is a time-consuming work.

Moreover, as a number of its applications would be transplanted to Ad Hoc network, lots of attacks aiming at these applications will appear. Therefore, detection system based on misuse calls for continuously updating of the properties pool, which entails large expenses.

Judging from the previous discussion, an ideal detection method should achieve high rate of accuracy and efficiency. This paper has improved the CBA (Classification Based on Association rules) algorithm according to the properties of Ad Hoc network based on the in-depth analysis of CBA algorithm. It has introduced the improved algorithm to intrusion detection for Ad Hoc network.

Experiments have demonstrated that this method has satisfactory detection results.



II. RELATED DEFINITIONS AND CONSTRAINTS Definition 1  Data Object.

obj= a1 a2 an is consistent with the model of  A1 A2 An . Where  Ai  refers to attribute  and ai  values for the attribute Ai. These attributes could be continuous attributes (or numercial attributes) or discrete attributes. All the data objects constitute the data object set of  E={obji | i=1,2,3,4,??}.

Definition 2  Class labels set.

C={c1,c2,??,cm}, ci  refers to the class attribute value.

Definition 3  Training data set  T stands for the subset of Cartesian product of E and C: T E C. Each data case of T is composed of data object and the class labels set cobj C, which could be shown as d  a1,a2,??,an,c , where a1,a2,??,an E,c C.

Definition 4  Classifier F refers to mapping function from E to C, which means that to a given a data object obj, F obj C corresponds to the class labels. Classification algorithm is designed to build   DOI 10.1109/FCST.2009.120     a classifier through learning training data sets so as to classify the unknown data objects.

Definition 5  Pattern Pattern P = ai1,??,aik  represents the set of attributes-values, which satisfies the condition that for any 1 j k,aij Aij,,if j? j, then i j? ij. That is, one attribute-value could only appear in one pattern once at most.

One data object matches pattern P=ai1 aik.  If and only if 1 j k, obj values aij  in Aij.

Definition 6  Class association rule.

To a given training data set T, CAR takes the form of R: P  c. P refers to pattern, and c refers to class labels.

Definition 7  CAR?s support and confidence Let |T| be the number of data object in the training data set T. To the CAR R: P c. Let Psupcount be the total number of data examples that match P in T, while the total number of data examples that match <P and C> in C is Rsupcount.

In this paper, the Support of and Confidence of Rule R are defined as the follows:        Definition 8  Frequent rule set Given pre-specified minum Support minsup, if all R in the rule set meet the condition that Support R minsup, the rule set can be called a frequent rule set, otherwise a non- frequent rule set.

Table 1 is an example of training data set that is used to determine whether to purchase a car based on the information of age, income, and car ownership. Assume minsup=2/7, minconf = 1/2, then the CARs which meet the requirement of Support(R) and Confidence(R) are shown in table 2.

TABLE I  TRAINING DATE SET OF CAR PURCHASE  Age Income has a car Buy/class Senior Middle No Yes Youth Low Yes No Junior High Yes Yes Youth Middle Yes Yes Senior High No Yes Junior Low No No Senior Middle No No  TABLE  II  CARS THAT MEET THE REQUIREMENT OF SUPPORT(R) AND CONFIDENCE(R) IN TRAINING DATA SET  Pattern Class CARs Support Confidence {low} No {low} No 2/7 2/2 {high} Yes {high} Yes 2/7 2/2  {senior, no} Yes {senior, no} Yes 2/7 2/3  {middle} Yes {middle} Yes 2/7 2/3 {senior} Yes {senior} Yes 2/7 2/3  {yes} Yes {yes} Yes 2/7 2/3 {no} Yes {no} Yes 2/7 2/4 {no} No {no} No 2/7 2/4

III. CBA (CLASSIFICATION BASED ON ASSOCIATION)  A.  Framework of CBA algorithm  With the purpose of enabling association rule to sort out classification, CBA algorithm generates special subsets  from association rule sets which function as the classification rules. These rules are CARs whose algorithm  involves three steps: (1) To discrete the continuous attributes in the data set.

(2) To discover all CARs using CBA-RG algorithm.

(3) To build a classifier with CBA-CB algorithm.

B. CBA-RG Classification Based on Association-Rule Generator algorithm  CBA-RG algorithm uses Apriori association-rule to work out the CARs that meet the requirement of Support and Confidence. The pseudo-code is as follows.

1  F1 = {large 1-ruleitems}; 2  CAR1 = genRules(F1); 3  prCAR1 = pruneRules(CAR1); 4  for (k = 2; Fk-1  ? ; k++) do 5      Ck = candidateGen(Fk-1); 6         for each data case d  D do 7             Cd = ruleSubset(Ck, d); 8    for each candidate c  Cd do 9                     c.condsupCount++; 10        if d.class = c.class then c.rulesupCount++ 11   end 12      end 13  Fk = {c  Ck | c.rulesupCount  minsup}; 14  CARk = genRules(Fk); 15  prCARk = pruneRules(CARk); 16 end 17 CARs = kCARk; 18 prCARs = k prCARk.

C.  CBA-CB (Classification Based on Association-Classifier Building) algorithm  To build the best classifier based on CARs or prCARs generated by algorithm CBA-RG, to evaluate all the sbusets in the training sets and to select the rule set with least errors are necessary. If the number of subsets of CARs is m, the number of subset would be 2m. Even without calculating of the number of different sequence rules, the number would reach tens of thousands, which apparently is impossible to evaluate each of the subsets with such a scale. For convenience sake, to sort the rules that have generated should be the first step. Defining the partial order of the rules should be prior to describing the alogrithm. ri and rj are the two given rules. If:  (1) Confidence (ri) > Confidence (rj), or (2) Confidence (ri) = Confidence (rj), but Support (ri)  >Support (rj), or     (3) Confidence (ri) = Confidence (rj), and Support (ri)= Support (rj), but ri is generated before rj.

Then it can be concluded that ri has higher priority than rj , which could be recorded as ri rj.

The basic idea of the algorithm can be explained like this: R represents the rule set that includes all the rules generated, D refers to database. Then the classifier building algorithm is to select the subsets of higher priority in R to cover D. The pseudo-code of CBA-CB algorithm and the description of related process:  1  R = sort(R); 2  for each rule r  R in sequence do 3      temp = ? ; 4      for each case d  D do 5           if d satisfies the conditions of r then 6 store d.id in temp and mark r if it correctly  classifies d; 7          if r is marked then 8     insert r at the end of C; 9     delete all the cases with the ids in temp  from D; 10    selecting a default class for the current C; 11   compute the total number of errors of C; 12  end 13 end 14 Find the first rule p in C with the lowest total  number of errors and drop all the rules after p in C;  15 Add the default class associated with p to end of C, and return C (our classifier).

D.  Disadvantages of CBA as an algorithm based on anomaly detection  Compared with traditional classification algorithm, CBA has the advantages of high classification accuracy and adaptability. However, as a new classification method, CBA needs improvement in many aspects: (1) Low efficiency of CBA algorithm: CBA algorithm has adopted an association classification mining technique that is similar to Apriori, therefore it shares disadvantages with Apriori, such as the issue concerning frequently scanning data sets.

(2) The quality and efficiency of pruning: the evaluation of the quality of CARs and the selection of effective rules to build the classifier from large amount of CARs are the key issues for class association. CBA algorithm evaluates CARs according to the Confidence, Support and length of rules and priority is given to the ones that achieve higher Confidence and Support and are longer than others. The problem incurred here are the huge amount of rules of classifier and high Confidence and low Support, which could easily lead to over-fitting problem. Lots of improved CBA algorithm have proposed a variety of pruning techniques to overcome the over-fitting problem.

(3) The intelligibility of the classifier: CBA algorithm has over emphasized Confidence while ignoring the integrated influence of Confidence and Support, which leads to generate a huge amount of rules of the classifier, which has definitely lowered intelligibility.

These issues make the algorithm can not directly be applied to intrusion detection. This paper will propose strategies to improve CBA algorithm so as to increase the detection efficiency and accuracy.



IV. IMPROVEMENT STRATEGIES FOR CBA  A.  Improvement on algorithm As a matter of fact, due to its specificity, the mobile Ad  Hoc network is always small-sized. In a typical application, there are 20 to 50 nodes and the network could maintain for a limited period of time, which results in the small number of data in the network. In regard to the intrusion detection of this kind of network, CBA algorithm could achieve satisfactory accuracy as long as the choice of feature set is appropriate. Therefore, this essay will adopt the following two strategies to overcome the disadvantages of CBA algorithm to enhance its detection efficiency and accuracy.

(1) Streamlining the feature set. The choice of features is a key issue in anomaly detection. On one hand, an adequate feature set is beneficial for building an accurate conduct mode and improving the accuracy while reducing the detection efficiency. On the other hand, a streamlined feature set will improve detection efficiency while lowering the accuracy. For this reason, the choice of feature set needs to balance accuracy and efficiency.

Among the existing anomaly detection techniques for mobile Ad Hoc network, the streamlined feature set is commonly adopted considering the limited resource for counting the nodes. Experiments have demonstrated that the anomaly detection based on streamlined feature set has functioned satisfactorily when detecting typical attacks. In order to introduce CBA algorithm into intrusion detection, this essay has adopted a streamlined feature set to enhance the detection efficiency.

(2) Pruning strategy based on the largest frequency rule. The largest frequency rule indicates that this rule is not the subset of any other rule sets. For example, rule {senior, no} Yes in table 2 is a largest frequency rule while {senior} Yes and {no} Yes is not. Association rule mining is aimed at reducing the number of association rules.

It will usually choose the largest association rule from all the association rules that have been generated.

According to the definition of partial relation priority in CBA algorithm, if ri is the subset of rj , in Apriori algorithm, ri comes before rj . If ri and rj have the same confidence and support, ri is prior to rj . As the example that satisfies the condition of ri also meets the requirement of rj , ri will stay and rj will be deleted when building the classifier.

Apparently, this strategy is not consistent with the accuracy requirement of intrusion detection classifier. During the intrusion detection, classification rules call for the highest accuracy, which means that when achieving the same classification result of the training data set, the more features (or attributes) in the classification rule, the more accurate the classification rule is.

In this paper, sort(R) in algorithm CBA-CB is modified into pr-sort(R) to sort the rule set R while deleting the non largest frequency rule whose confidence and support are lower than or equal the largest frequency rule. The pseudo- code of the algorithm and related steps are as follows:  1 sort(R); 2 divide R into R1, R2, ?, Rm with same confidence  and support; 3 for each Ri  R in sequence do 4   sort Ri by the length of r  Ri; 5 end 6 for each rule r  R do 7  for each rule r?  R after r do 8   if r? is subset of r delete r?; 9  end 10 end Pr-sort(R) calls sort(R) at first to sort the rule set R in a  descending manner on confidence and support of (Line 1), and then it divides R into R1, R2, ?, Rm with same confidence and support. Next, sort Ri by the length of rule (Lines 2-5). By doing so, the non largest frequency rule whose confidence and support are lower than or equal the largest frequency rule are placed after the largest frequency rule. When pruning, only scan the R. If one rule is the subset of one of the previous rules, then it is not the largest frequency rule and should be deleted (Lines 6-10).

(3) Dynamic expansion strategy. CBA algorithm has shown that the building of the classifier is determined by training data set, the quality of which directly influences the function of the classifier. Under the situation of the mobile Ad Hoc network, as the topology is changing in a dynamic way, the attacks have become more complicated. Both the real and simulated network environment are hardly to attain adequate training data set to build an accurate classifier. So this paper uses CBA algorithm to build the initial classifier during training and conduct a dynamic expansion of the classifier with new classification rules generated during testing. The main principle of the article is to divide the test data set into a number of subsets and test each subset at the outset. When the test is finished, the subsets become the new training data set. Then, build the classifier with CBA algorithm and finally combine the results into a new classifier.

As attacks are time-related during the intrusion detection, the dynamic expansion strategy can enable timely learning and increase the detection accuracy. With the purpose of maintaining the time correlation during data test, this article has adopted the sequential division method, which regulates that the size of a subset should not exceed half of that of the training data set.

CBA-RE algorithm has put data test and rule expansion together. T stands for the test data set. The pseudo-code and the related steps are as follows:  1  divide(T); 2 for each subset T?  T do 3    for each data case d  T? do 4          for each rule r  C in sequence do 5  if r correctly match d  6     d.class = r.class; 7   else 8                  d.class = default class; 9         end 10  end 11 generate new CARs(called R?) of T? using CBA-  RG algorithm; 12 build a new classifier (called C?) of R? using  CBA-CB algorithm; 13  C = C C?; 14 end First, CBA-RE divides T (Line 1) and classify each  subset and build new classifier based on the subsets (Lines 2-13). Three steps are involved in this process.

(1) Classify subset T? (Lines 4-9). If classifier C has the rule r that correctly match the examples, each example in T? then could be classified with r. The label that belongs to r would be labeling examples as well,  otherwise the default labels would be used.

(2) The classified data set T? becomes the training data set. Build a new classifier called C? using CBA algorithm (Lines 11-12).

(3) Combine classifiers (Line 13). During the process, two points need to paid attention to. They are deleting the repeated classification rules and choosing the default classification labels. If the labels of C and C? are not the same, the default label of classifier after combination would be used.

B.  Typical example of the algorithm  This section demonstrates the CBA algorithm and dynamic expansion strategy algorithm as well as the classification results. Table 3 shows a example data set. The established classification model distinguishes purchase possibilities of clients based on age, income, being student or not and credibility. The first eight examples constitute training data set D and the last six are test data set T1 and T2 . Suppose minsup=25%, minconf=60%. The classification rules and sort results are shown in table 4. ? ? means the rule has been deleted.

TABLE  III   EXAMPLE DATA SET  RID Age Income Student Credit_rating Class:buys _computer  Training data set D  1 <=30 High No Fair No 2 <=30 High No Excellent No 3 31..40 High No Fair Yes 4 >40 Medium No Fair Yes 5 >40 Low Yes Fair Yes 6 >40 Low Yes Excellent No 7 31..40 Low Yes Excellent Yes 8 <=30 Medium No Fair No  Test data set T1  9 <=30 Low Yes Fair Yes 10 >40 Medium Yes Fair Yes 11 <=30 Medium Yes Excellent Yes  Test data set T2  12 31..40 Medium No Excellent Yes 13 31..40 High Yes Fair Yes     14 >40 Medium No Excellent No  TABLE  IV  RULE SET R GENERATED BY CBA-RG ALGORITHM ON TRAINING DATA SET D AND THE SORT RESULT  CARs Support Confidence sort(R)sort result pr-sort(R) sort result  {<=30} No 3/8 3/3 1 1 {31..40} Yes 2/8 2/2 3 2 {>40} Yes 2/8 2/3 9 3 {High} No 2/8 2/3 10 3 {Low} Yes 2/8 2/3 11 3 {No} No 3/8 3/5 16 4 {Yes} Yes 2/8 2/3 12 3 {Fair} Yes 3/8 3/5 17 4  {Excellent} No 2/8 2/3 13 3 {<=30, High} No 2/8 2/2 4 2 {<=30, No} No 3/8 3/3 2 1 {<=30, Fair} No 2/8 2/2 5 2 {>40, Fair} Yes 2/8 2/2 6 2 {High, No} No 2/8 2/3 14 3 {Low, Yes} Yes 2/8 2/3 15 3  {<=30, High, No} No 2/8 2/2 7 2  {<=30, No, Fair} No 2/8 2/2 8 2  Sequencing sort(R) generates rule set R. Then use CBA-CB to select and build the classifier C={r1 {<=30}  No r2 {31..40} Yes r3 {>40, Fair} Yes r4 {Excellent} No No}.Classifier C sorts test data set T1 and T2 into {No Yes No} and {Yes Yes No}with accuracy of 1/3 and 3/3 respectively and the overall accuracy of 4/6.

Sequencing pr-sort(R) generates rule set R. Then use CBA-CB to select and build the classifier for R. Classifier C={r1:{<=30, No} No,r2:{>40, Fair} Yes,r3:{31..40} Yes,r4:{Low, Yes} Yes,No}.

Use CBA-RE to sort test data set T1 into {Yes,Yes,No} with an accuracy of 2/3. The new classifier C? C?={r1:{Yes, Fair} Yes,No}. Classifier after combination C={r1:{<=30}  No,r2:{31..40} Yes,r3:{>40, Fair} Yes,r4:{Excellent} No,r5:{<=30,Yes} Yes No}. And r5:{Yes, Fair} Yes  is the expanded classification rule.

The sort result of test data set T2 is {Yes,Yes,No} with  an accuracy of 3/3. The new classifier C?={r1:{31..40} Yes No}. Classifier after combination C={r1:{<=30} No,r2:{31..40} Yes,r3:{>40, Fair} Yes,r4:{Excellent} No,r5:{<=30,Yes} Yes,No}.

In the above algorithm example, the improved CBA algorithm achieves an accuracy of 5/6 that is higher than CBA algorithm. Moreover, it has extended the classification rules, which helps to enhance the classifier?s sort accuracy of the new test data set.



V. IMPLEMENTATION OF INTRUSION DETECTION ALGORITHM BASED ON CBA AND THE RESULT ANALYSIS  In this section, a group of simulated data is generated using NS2[10-11]. They are Datanormal Dataseqno Datasdep Dataflood and Datardrop respectively. Where Datanormal is normal dataset, Dataseqno Datasdep Dataflood and Datardrop are abnormal dataset. According to the feature of Ad Hoc networks and the streamline strategy of A in section 4, the streamlined features are obtained as table 5.

TABLE V   STREAMLINED FEATURES AND THEIR RANGE  feature range  Flow direction Dir  SEND, RECV, DROP  Send address SA  sai, i node set S  Destination address DA  adj, j node set S  MACFrameType RTS, CTS, ACK, DATA  RtPktType* RtDataPkt, RtCtrlPkt  *shows that MACFrameType is effective only when it?s value is ?DATA?  To test the detection results and effectiveness of the improvement strategy for CBA, anomaly detection algorithm based on Apriori association rule mining algorithm proposed[8] is also implemented. Meanwhile, comparison study of the detection results of the three algorithms has been carried out. In these experiments, minconf and minsup are 50% and 1% respectively according to paper [8].

Table 6 shows that the number of rules generated by the three algorithms in training period respectively. Even though the three algorithms have generated rules using Apriori algorithm, the forms and follow-up treatment of the association rules are different. Intrusion detection algorithm based on Apriori algorithm detects intrusions using the largest frequency association rules directly, which has resulted in the large number of rules and low detection efficiency. Intrusion detection algorithm based on CBA builds classification rules using the largest frequency association rules that have class labels, which apparently generates relatively small amount of rules. The improved CBA algorithm generates nearly the same amount of association rules as CBA based algorithm during the training session. However, its dynamic expansion during the test slightly increases the number of association rules, which has little influence on the detection efficiency.

TABLE VI THE NUMBER OF THE RULES GENERATED BY THE THREE ALGORITHMS  Detection algorithm  Number of  rules  Explaination     Apriori algorithm  646 646 is the amount of the largest frequency association rules which are used as the intrusion detection rules. The other 2513 non-largest frequency  association rules and 23446 non-frequency association rules are not used as the detection rules.

CBA algorithm  232 232 is the number of classification rules of the classifier. They are built by the CARs based on Apriori algorithm.

Improved CBA algorithm  232+17 232 is the number of classification rules of the classifier. 17 is the average new added classification rules during test. These rules are generated by  CBA-RE algorithm and then are added into the classifier.

Table 7 displays the attack detection results of the three algorithms. Generally speaking, three of them all have high detection accuracy to sequence number attacks, flood attacks and sleep deprivation torture. So it is hard to decide which one is the best. But to the random packet dropping attack that is deeply hidden, the improved CBA algorithm proposed by this article functions better than others. The dynamic expansion during the test could enable timely learning about the new behaviors, build new classification rules and raise the detection accuracy.

TABLE VII   ATTACK DETECTION RESULTS OF THE THREE ALGORITHMS  Detection algorithm Sequence number attack  Sleep deprivation  attack  Blood attack Random packet dropping attack  Apriori algorithm 95.4% 90.0% 93.3% 80.2% CBAalgorithm 98.1% 86.4% 92.8% 82.0% Improved CBA  algorithm 98.4% 93.3% 94.5% 89.6%

VI. CONCLUSION In the area of intrusion detection for mobile Ad Hoc  network, lots of detection algorithms have been proposed. To improve the traditional anomaly detection algorithm for wire network and apply the improved algorithm into the intrusion detection for mobile Ad Hoc network is one of the research focuses. Among these anomaly detection algorithms, the combination of various kinds of detection techniques enhances the detection accuracy. CBA algorithm is a hybrid algorithm, which integrates association rules and classification mining technique. This paper has proposed to introduce CBA algorithm into intrusion detection, provided the analysis of its disadvantages as an intrusion detection algorithm and put forward solutions in the mobile Ad Hoc network environment. The solution is to raise detection efficiency through streamlining the feature set, improve  detection accuracy through dynamic expansion of the classification rules. By doing so, CBA algorithm could be applied in anomaly detection for mobile Ad Hoc network.

Experimental results have shown that intrusion detection algorithm based on CBA achieves higher detection efficiency and accuracy. Moreover, the dynamic expansion strategy greatly improves the detection accuracy to hidden attacks..

