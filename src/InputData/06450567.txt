SKP Engineering College, Tiruvannamalai, TN., India. 21 - 22 December, 2012. pp.156-160.

Abstract? 1In order to reflect the importance of  webpages in the web mining result, an algorithm  based on regular expression constraints, is presented  for mining weighted closed sequential patterns. At  first, scans the sequence database once, finds all the  weighted frequent items and make a sparse matrix to  identify significant item set and satisfying minimum  support and the minimum weighted support count.

Secondly, the index sets based on memory for frequent  weighted items are constructed, the stems of frequent  weighted items are found in the index sets, then the  frequent weighted items are extended by stems. It  filters the sequential patterns that cannot satisfy the  user-specified regular expression constraints, so the  search space is reduced. The support of discovered  sequential patterns is saved in the hash table as the  key to do the closure checking. The algorithm allows  users to change constraints to implement interactive  mining, and also facilitates the users to focus the  mining on their interesting patterns and reflect the  importance of item. The experimental results show  that this method is more efficient in mining weighted  closed sequential pattern and satisfying the  requirement of users.

Keywords? Weighted Closed Sequential Pattern,  Regular Expression, Minimum Weighted Support  Count, Sparse Matrix.



I. INTRODUCTION  Sequential patterns mining whose goal is to find more  interesting pattern in the sequence database has become  one of the important research topics in data mining. In  recent years, it has enormous broad applications, such as  analysis of customer behaviors, analysis of web access  patterns, and DNA. In many previous researches [2,3,4,5]  on sequential pattern mining, sequential patterns and  items in a sequential pattern have been considered  uniformly [1].

The above-mentioned weighted sequential patterns  mining algorithms can not only reduce the search space   1 Professor and Dean, Department of Computer Science and  Engineering, Bharath University, Chennai, India.

Email: drkumaravel@gmail.com 2 PG Student, Department of Computer Science and  Engineering, Bharath University, Selaiyur, Chennai, India.

Email: pradimca@gmail.com  but also mine the more interesting patterns [7,8,10]. But  they do not consider the interactive of users. Regular  expression is equivalent to deterministic finite automata  in this framework.

And the relaxed constraint with high performance is  used to filter the patterns or candidate sets that are  impossible to be frequent [6]. The constraints in  sequential pattern were sorted and the regular expression  constraints were introduced in detail.

To accomplish interactive mining and weighted  sequential pattern mining, sequence patterns are  converted into sparse matrix to identify the significant  web pages and to calculate the weight of an each web  page, a weighted closed sequential patterns mining  algorithm based on regular expression constraints to  filtering the web pages are presented in this paper.

This algorithm pushes deeply regular expression and  weight constraints into the closed sequential patterns  mining process. It adopts the method of memory index  and minimum weight support count to mine weighted  sequential patterns, and uses the hash structure to do the  closure checking of weighted sequential patterns. The  algorithm allows users to change constraints to implement  interactive mining, and also facilitates the users to focus  the mining on their interesting patterns.

This remaining paper is organized as follows. Section  2 formulates the problem. Section 3 consists of the  experimental results and analysis. We will conclude the  study with a short summary in section 4.



II. PROBLEM STATEMENT  A sequence s is set of visitors of a webpages, denoted  as <s1, s2,?, sl>, where sj (1?j?l) is an itemset. Each  itemset of sequence is also called an element of sequence,  denoted as (x1, x2,?, xm), where xk (1?k?m) is an item.

For brevity, the brackets are omitted if an element has  only one item. A sequence database SDB is a set of  sequence. Table 1 shows a sample sequence database. The  total number of items in a sequence is called the length of  the sequence and a sequence with length l is called an l-  sequence.

A sequence ?=<a1, a2,?, an> is called a subsequence  of another sequence ?=<b1, b2,?, bm>, denoted by     ?  ?, if there integers 1?j1?j2???jn?m such that a1  bj1, a2  bj2,?, an  bjn. The support of a sequence ? in a    On Constructing Regular Expressions of Web Page Traversals for Efficient Filtering   sequence database SDB, denoted as support(?), is the  number of sequences in the database containing ?.

If the support of a sequence s is no less than the  minimum support (min_sup), s is called a sequential pattern (SP). The set of closed sequential pattern (CSP) has no sup-sequence pattern with the same support.

Given the set of item I= {i1, i2,?, in}. To reflect the  importance of item, each item ij is given a weight wj (1?j?n). Table 2 shows the weight of item in the significant selected webpages of a sequence database. The weight w(s) of sequence s is the total weights of all the items in the sequence. The weighted support WSup(s) of  sequence s in the sequence database SDB is defined by multiplying the weight of sequence with the support of sequence, denoted as WSup(s)=w(s)*support(s).

Table 1. Sequence database  SID Sequence  V1 1 1  V2 2  V3 3 2 2 4 2 2 2 3 3  V4 5  V5 1  V6 6  V7 1 1  V8 6  V9 6 7 7 7 6 6 8 8 8 8  V10 6 9 4 4 4 10 3 10 5 10 4 4 4  V11 1 1 1 11 1 1 1  V12 12 12  V13 1 1  Given a minimum weighted support threshold  minwsup, if the weighted support of sequence s is no less than minwsup ( i.e WSup(s)?minwsup) and the support of sequence s is no less than min_sup, then the sequence s is  the weighted sequential pattern (WSP). The set of weighted closed sequential pattern (WCSP) is defined as: if and only if (1) the support of sequence s is no less than min_sup; (2) the weight support of sequence s is no less than minwsup; (3) it has no sup-sequence pattern with the  same support.

Table 2. The weight of Selected Page in the sequence database  Page Tech (3)  On-air (6)  Business (11)  Sports (12)  Bbs (14)  Weight 0.8 0.9 1 0.9 0.9  Given a pattern p and a frequent item x in the  sequence database SDB, p? is a type-1 pattern if it can be  formed by appending the item (x) as a new element to p;  p? is a type-2 pattern if it is formed by extending the last  element of p with x. The frequent item x is called the stem  of the sequential pattern p? and p is the prefix pattern of  p?.

A regular expression constraint RE is the constraint  that is used to the itemset, disjunction (?) and (+) are operators. A sequential pattern which is accepted by  deterministic finite automaton for its equivalent regular  expression E will satisfy RE. The regular expression  E= [1-17]+ for the database and the regular expression  for identified significant selected attributes are  E=[3|6|11|12|14]+ .



III. EXPERIMENTAL RESULTS AND ANALYSIS  In this section, we test the implementation efficiency  of algorithm and compare with whole sequence and the  selected sequnce. Weka tool is used to select the attributes  from the sparse matrix. All three algorithms are written in  Visual c++ 6.0. The datasets for these experiments are  from Internet Information Server (IIS) logs for  msnbc.com.

A. Dataset  1) Dataset Information  Here we select the news-related portions of msn.com  for the entire day. The categories are "frontpage", "news",  "tech", "local", "opinion", "on-air", "misc", "weather",  "health", "living", "business", "sports", "summary", "bbs"  (bulletin board service), "travel", "msn-news", and "msn-  sports".

Number of users : 989818  Average number of vitis per user : 5.7  Number of URLs per category : 10 to 5000  2) Attribute information  Table 3. Weights of the attributes from msnbc.com  Weight (%) Attribute  6( 60 %) 1 Visitor  0(  0 %) 2 front page  1( 10 %) 3 news  8( 80 %) 4 tech  0(  0 %) 5 local  0(  0 %) 6 opinion  9( 90 %) 7 on-air  0(  0 %) 8 misc  0(  0 %) 9 weather  0(  0 %) 10 health  0(  0 %) 11 living  10(100 %) 12 business  9( 90 %) 13 sports  0(  0 %) 14 summary  9( 90 %) 15 bbs  0(  0 %) 16 travel  0(  0 %) 17 msn-news      Each category is associated--in order--with an integer  starting with "1". For example, "frontpage" is associated  with 1, "news" with 2, and "tech" with 3 and so on. Each  row below "% Sequences:" describes the number of hits  in the order of browsing observed from a single user.

For example, the first user hits "frontpage" twice, and  the second user hits "news" once.

The procedure for attribute selection is obtained using  weka tool. For this purpose we consider the evaluator:  ?CfsSubsetEval? with the search method : ?BestFirst?. The  parameters for these evaluator and search methods are  selected carefully after seeing the relative performance.

Table 3 shows the weight calculation of the selected  attributes depends on its frequency.

Table 4. Selected Attributes  S.No Selected Attributes Attribute number  1 Tech 3  2 On-Air 6  3 Business 11  4 Sports 12  5 BBS 14  B. Algorithms  1) Constructing the Index Set of Weighted Sequential  Patterns  Sequence database is loaded into memory. The in-  memory DB is referred to as MDB hereafter. The  sequences that are matched with weighted sequential  pattern are found in SDB. The index set of weighted  sequential pattern is set of (ptr_ds, pos), where ptr_ds is a  pointer to ds and pos is the first occurring position of  stem.

The constructing process of the index set of weighted  sequential pattern p (p-idx) is to find a pointer and a  position in MDB. If a data sequence ds contains stem x,  the index set that points ds is constructed.

The algorithm of constructing index set of weighted  sequential pattern based on Table 4 is shown as follows:  Algorithm1? Index(x, p, T4)  Input? x (a stem), p (a weighted sequential pattern), T4  (the set of selected attribute from table 4 for indexing)  Output? index set New_p-idx (p? denotes the pattern  formed by stem x and p)  (1): for each data sequence ds ? T4  (2): if T4=MDB  (3): init-pos=0;  (4): else  (5): init-pos=pos;  (6): find the position (init-pos+1) in ds;  (7): if the stem x is the first found at position pos in ds  (8): insert a pair (p_ds, pos) to the index set New_p-idx;  //p_ds points to ds, New_p denotes a new pattern.

(9): return index set New_p-idx.

1 3 2 2 4 2 2 2 3 3  7 6 7 7 7 6 6 8 8 8 8  3 6 9 4 4 4 10 3 10 5 10 4 4 4  13 12 12  13 8 13 13 13 14 14 14 14 14  1 1 11 1 12 1 1 1 1 1  2 12 3 4 12 12  9 7 9 7 7 9 12 6 10 13 14 12 3  (1) <3>-idx  1 3 2 2 4 2 2 2 3 3  5 6 7 7 7 6 6 8 8 8 8  2 6 9 4 4 4 10 3 10 5 10 4 4 4  7 12 12  13 8 13 13 13 14 14 14 14 14  1 1 11 1 12 1 1 1 1 1  2 12 3 4 12 12  9 7 9 7 7 9 12 6 10 13 14 12 3  (3) <12>-idx  1 3 2 2 4 2 2 2 3 3  1 6 7 7 7 6 6 8 8 8 8  8 6 9 4 4 4 10 3 10 5 10 4 4 4  12 12  13 8 13 13 13 14 14 14 14 14  1 1 11 1 12 1 1 1 1 1  2 12 3 4 12 12  9 7 9 7 7 9 12 6 10 13 14 12 3  (2) <6>-idx  Fig 1. Construction for the index set : <3> <6> <12>  2) Mining weighted sequential patterns  Weighted sequential pattern mining adopts pattern-  growth method. We find the stem satisfying the minimum  weighted support count of weighted sequential pattern p  in the index set of p. Then p is extended to a new pattern  by stem. The p_ds of each (p_ds, pos) pair points to the  weighted sequential pattern p of data sequence ds. Any  item appearing after the pos position in ds could be a  potential stem (with respect to p). Thus, for every ds in p-  idx, we increase the count of such item (item appearing  after the pos in ds) by one, then find the stems satisfying  min_sup and minsc. To realize reactive mining, we  preprocess the discovered sequential patterns using  relaxed regular expression constraints. The weighted  sequential patterns that cannot satisfy regular expression  are filtered Table 5 & 6 shows the sample filtered and  accepted sequence, and then the search space is reduced.

The algorithm of mining weighted sequential patterns  is shown as follows:  Algorithm2? Mine (p, p-idx, E)  Input? p (a weighted sequential pattern), p-idx (the index  set of p), E (the user specified regular expression),  min_sup, minwsup    On Constructing Regular Expressions of Web Page Traversals for Efficient Filtering   Output? the set of all weighted sequential patterns with  regular expression constraints  (1): for each data sequence ds pointed by the p_ds of an  entry (p_ds, pos) in p-idx  (2): {start from position (init-pos+1) to ?ds?in ds;  (3): increase the support count of each potential stem x by  one;  (4): find the stem x satisfying the min_sup and minsc;  (5): extend a new pattern New_p using stem x;}  (6): for each pattern New_p  (7): q= q?{ New_p?w(New_p)*support(New_p)? minwsup and New_p satisfies E};  (8): return q.

Table 5. Sample Filtered Sequence  S.No Sequence  1 3 2 2 4 2 2 2 3 3  2 6 9 4 4 4 10 3 10 5 10 4 4 4  3 13 13 13  4 1 1 8  5 8 2 14  Table 6. Sample Accepted Sequence  S.No Sequence  1 6 14 14 6  2 12 12  3 14 14 14 14 14 14 14 14 11 11  4 3 14 6 12  5 3 6 12 11  3) Closure-Checking  To mine interesting and compact weighted closed  sequential patterns, we do the closure-checking in the  weighted sequential patterns that are obtained by above  process. Closure-checking adopts a hash structure whose  key is the support of weighted sequential pattern. The  weighted closed sequential patterns are gained by  comparing their key. When a new weighted sequential  pattern s comes, the support of s is calculated. Then we  check the hash table to see whether the same key value as  s already exists. If there is no such key, the weighted  sequential pattern is a weighted closed sequential pattern  and we save it. Otherwise, the containment is tested to see  whether a sequence could be absorbed. If the new pattern  is super sequence of discovered weighted closed  sequential pattern, the new pattern will absorb the existing  pattern and is inserted into the result sets. Otherwise, the  pattern is removed.

The algorithm of Closure-checking is shown as  follows:  Algorithm3? Closure-checking (k, p)  Input? k, p //k is the hash key.

Output? the set of all weighted closed sequential patterns  (1): index the hash table with the key k;  (2): find a list of pairs <k, New_p >;  (3): for each pair <k, New_p ?>  (4): {if support(p)=support(New_p)  (5): if p    New_p  (6): remove p;  (7): if New_p    p  (8): p is weighted closed sequential pattern and save p;}  (9):return the set of all weighted closed sequential pattern.



IV. CONCLUSIONS  Because of the user?s participation missing in closed  sequential patterns mining, the mining process is time  consuming and some uninterested patterns may be mined.

An algorithm based on regular expression constraints,  converting sparse matrix and selecting attributes depends  on its frequency and adopts the memory index method in  this paper. The sequence database is loaded into memory.

The weighted frequent items satisfying the minimum  weighted support count are found. We construct the index  set for each weighted frequent item, and then find the  stem satisfying the minimum weighted support count in  the index set. The weighted frequent item is extended by  stem. Regular expression constraints have advantage for  specifying the frequent usage patterns comparing any  other formulation. Finally the Closure-checking algorithm  is the novel approach way of getting results. The  algorithm allows users to change constraints to implement  interactive mining, and also facilitates the users to focus  the mining on their interesting patterns. Here, we consider  only msn.com and in future we may consider similar  collection of web pages to strengthen the  recommendations ultimately.

ACKNOWLEDGEMENTS  The authors would like to thank the management of  Bharath University for the support and encouragement for  this research work.

