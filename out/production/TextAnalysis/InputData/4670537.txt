

Abstract : : : : Providing efficient and easy-to-use graphical tools  to users is a promising challenge for data mining (DM). Visual  data mining (VDM) is a new and active research area which  goal is to provide powerful and suitable tools for data miners.

Some  graphical  tools  have  been  developed  to  extract  and  visualize  association  rules  (AR),  among  which  a  three  dimension representation where the x-axis is the AR premise,  the y-axis is the AR conclusion and the z-axis is a metric value  of AR. The 3D approach is one standard representation that is  often implemented in many DM tools. However this approach  suffers from an overlapping between several objects in the 3D  space making some objects unseen or partially truncated. This  problem is known as the occlusion problem. In this paper, we  propose  to   formalize  it  as  an  optimisation  problem  of  occlusions.  Then we define conditions to limit occlusions and  finally  we  propose  different  heuristics  based  on  ordering  of  axis-elements, to considerably reduce the number of generated  occlusions.

Index  Terms:  :  :  :  Association  rules,  Human  Computer  Interaction, Occlusion, Visualization.



I. INTRODUCTION  Data Mining (DM) is an active research domain where  different techniques have been proposed and studied to help  better understand and scrutinize huge amounts of collected  and  stored  data.  DM  techniques  gain  in  presenting  discovered knowledge in an interactive, graphical form that  often fosters new insights. Thus, the user is encouraged to  form  and  validate  new  hypotheses  to  the  end  of  better  problem  solving  and  gaining  deeper  domain  knowledge  (Bustos  et  al. 2003,  Couturier  et  al. 2007).  Visual  data  analysis is one way to deal with such goal, especially when  there is a great interaction with the user during the process  of searching for  relevant  solutions.    Visual  data  mining  (VDM) was set up to improve data mining process since it  was  difficult  to  easily  analyse  the  large  quantities  of  provided results, especially in the case of association rules  (AR) (Agrawal et al., 1996b). Different efficient techniques  are proposed in the literature to prune the huge number of  generated AR. Even if the reduction in terms of number of  AR can be significant with those techniques, the number of  AR remains  important  such that  the  need  of VDM tools  become  necessary.  Indeed,  extracting  nuggets  is  very  difficult when the relevant information is hidden in a large  amount  of  data.  Using  VDM tools  in  the  postprocessing  step of DM will help the expert-user  as the human spirit  ?O. Couturier, V Dubois and  E. M. Nguifo are with CRIL, CNRS UMR  8188,  T. Hsu is with LGI2A, EA 3926 Universit? Lille-Nord de France, Artois, IUT de Lens  Rue de l?universit? SP 16, 62307 Lens cedex, France  Phone: +33-3-21-791950, Fax: +33-3-21-7932 e-mail: {dubois, mephu}@cril.univ-artois.fr,  hsu@iut-lens.univ-artois.fr  can treat more data visually and extract information quickly  (Couturier et al. 2005).

In this  paper,  we  focus  on visualisation of association  rules.  During  the  last  few  years,  different  graphical  approaches were proposed to present association rules. AR  representations  are  mainly  based  on  two  and  three  dimensions.  3D  approach  revealed  new  problems  like  occlusions.  Occlusion  is  an  overlapping  between  several  objects  in  a  3D  space  making  some  objects  unseen  or  partially truncated  (Deng  et al.  2005).  Current  resolution  approaches  define  a  means  allowing  the user  to  discover  occlusion within the 3D space (Elmqvist and Tsigas 2007).

In the literature there is no method to automatically reduce  the number of occlusions within the 3D space. We formally  define  the occlusion problem for  AR visualisation,  as an  optimization  problem.  We  propose  different  heuristics  allowing  to  reduce  the  number  of  occlusions,  using  an  ordering on the x and y axis. An experimental evaluation of  one of those heuristics  have been successfully  conducted  using  different benchmarks.

This paper will be structured as follows; In Section II we  present a formal definition of association rules mining and  recall  the  main  association  rules  visualization  methods.

Section III  formally  defines  occlusions  within  3D matrix  AR representation. Our approaches to reduce occlusions are  described in section IV.



II. ASSOCIATION RULES MINING  AR mining (Agrawal et al., 1996b) can be divided into two  subproblems:  generation  of  the  frequent  itemsets  and  generation of association rules. The complexity of the first  subproblem  is  exponential.  Let  ?I?=m the  number  of items, the search space to enumerate all possible frequent  itemsets is equal to 2m , and so exponential in m .

A. Problem  Let  I={i1, i2, ... ,im}  be  a  set  of  items,  and  let T={t1,t2, ...,tn}  be a set of transactions establishing the  database,  where  each  transaction  t i  is  composed  of  a  subset  I1?I  of  items.  A  set  of  items  I1  is  called itemset.  A transaction  t i  contains an itemset  I1?I , if I1?ti .

An  AR  r  is  a  pair  of  itemsets  I1  (premise  or  antecedent)  and  I2  (conclusion or consequent) denoted r : I1? I2 , where I2  is not empty. The support of r , sup?r ? , is the proportion of transactions containing both I1  and  I2 . The  confidence of  r ,  conf ?r ? , is the  support of r  divided by the support of  I1 .

Optimizing Occlusion Appearances In 3D  Association Rules Visualization  Olivier Couturier, Vincent Dubois, Tient? Hsu, Engelbert Mephu Nguifo  2008 4th International IEEE Conference "Intelligent Systems"     Table 1. An example of twelve AR sets with their measures.

No. Asso.rules Sup Conf Sup+Conf  1 1?2 0.28 0.94 1.22  2 1?3 0.31 0.38 0.69  3 1?4?5 0.12 0.08 0.20  4 2?1 0.53 0.98 1.51  5 2?3 0.75 0.13 0.88  6 2?4?5 0.33 0.35 0.64  7 3?1 0.67 0.65 1.32  8 3?2 0.28 0.72 1.00  9 3?4?5 0.29 0.23 0.52  10 4?5?1 1.00 0.77 1.77  11 4?5?2 0.69 0.66 1.35  12 4?5?3 0.42 0.51 0.93  AR mining presents two main problems with dense data.

First of all, the generation of the frequent itemsets has an  exponential complexity depending on the number of items.

This task is a difficult and open-ended problem (Agrawal et  al.,  1996b).  Secondly,  the  number  of  generated  rules  is  huge. The large number of patterns which are generated is  one of the major problems of AR mining. It is difficult to  an expert to identify relevant AR. One solution consists in  using quality measures to rate the rules like confidence rate  (Agrawal  et  al.,  1996b).  Other  quality  measures  are  presented  in  comparative  studies  (Ohsaki  et  al.,  2004,  Lenca  et  al.,  2007).  Consequently,  several  visualization  methods  were  suggested  in  order  to  help  the  expert?s  analysis.

B. Association rules visualization  During the last few years, different graphical approaches  were  proposed  to  represent  association  rules  in  order  to  help  expert  analysis.  The  first  works  are  done  in  a  text  mode (Klemettinen et al., 1996;  Liu et al., 1999) and are  effective  on  small  data  quantities  (see  Tab  1).  Their  efficiency are restricted to the database size. For instance, if  an  expert  searches  for  a  particular  information,  his  eyes  could not see some essential information.

In order to improve expert?s perception, several  visual  methods were proposed as graphs (Wong et al., 2000) and  trees.  Then, 2D matrix was  proposed to provide a global  AR  view  (Agrawal  et  al.  1996a;  Ben  Yahia  &  Mephu  Nguifo,  2004;  Ben  Yahia  &  Mephu  Nguifo,  2008).  3D  matrix was proposed with two different representations: 3D  matrix ? itemsets-itemsets ? and 3D matrix ? rules-itemsets  ?.  The  first  one  (see  Fig.1)  can  be  compared  to  3D  histogram where each stick is an association rule located in  antecedent and conclusion intersection (Wong & Bergeron,  1997).  The  second  is  almost  similar  but  uses  ?  rules-  itemsets ? representation (Wong et al., 2000). Indeed, one  column is a rule and one line is an itemset. Virtual reality  approach was  proposed in order  to  improve visualization  and  expert?s  interaction.  This  approach  uses  3D  representation  based  on  a  metaphor  as  a  landscape  or  benches (Blanchard et  al.,  2003).  A metaphor  consists  in  substituting  a  domain  by  another  domain  in  order  to  simplify it (Simoff, 2001).

Fig. 1. 3D representation for AR visualization.

All  these  representations  present  advantages  and  limitations. Trees and graphs are easily interpretable thanks  to  their  hierarchical  structure.  However,  they  are  unreadable on dense data. 2D and 3D matrix use colors in  order to highlight metrics but they require cognitive efforts.

Virtual reality introduces expert within the process in order  to  focus  on a  data  subset  but  metaphor  choice  require  a  good data  comprehension.  Considering the  no free  lunch  theorem  (Wolpert  &  Macready,  1997),  there  is  no  best  representation  but  3D  matrix  is  good  compromise.  We  focused on 3D matrix ?itemsets-itemsets?. It is based on 2D  matrix  but  the  third  dimension  is  exploited.  However,  a  new problem comes out within 3D representation which is  the occlusions problem, defined in the following section.



III. OCCLUSIONS WITHIN 3D ISOMETRIC MATRIX  ASSOCIATION RULES  AR  representation  using  3D  matrix  is  not  a  real  3D  representation.  Indeed,  it  is  an  oblique  projection  representation  which  is  a  ?false?  3D  representation.

Particularly,  we  focus on generated occlusions within 3D  matrix  itemsets-itemsets.  There are two different  kinds of  occlusion:  full  occlusion  and  partial  occlusion.  Fig  1  represents a n -square matrix M  which corresponds to the example in table 1 drawn in Fig 1.  In a real case, it is  possible  that  a  particular  itemset  is  not  represented  in  antecedent  axis.  Consequently,  it  will  not  appear  in  the  representation and the matrix will not be a square matrix.

We consider a general case with all itemsets in antecedent  and conclusion axis.

Let M  a matrix. Let x={1, ... ,n}  be the line index and let  y={1,... ,m}  be the column index. Let  V  be the 3D matrix representation of  M . An association rule x?y  (also written  R?x , y ? ) is stored in  M ?x , y ?  (see  Fig  1)  and  is  represented  depending  on coordinates x , y  and M ?x , y ? .

Let  V ?x, y ,M ?x , y ??  be  the  3D  oblique  projection representation  (see  Fig  2  and  Fig  3).  R?x , y ?  is symbolized  by a  3D bar  at  intersection of  its  antecedent  Confidence  Support  15-43    x  and its conclusion y . The bar height M ?x , y ?   is proportional to the sum of different metrics (see Tab 1).

Fig. 2. Coordinates in 3D oblique projection.

Assuming the isometric 3D oblique projection x-axis is  horizontal, and scale S  is one, V  is defined solely by  y-axis angle ? :  V ?x , y , z?=?x? y cos?z?y sin? ? for instance : ?=45?  gives V ?x , y , z?=?x?0.7yz?0.7y? .

A. Overlapping  In  order  to  define  occlusion,  we  consider  at  first  condition for two projected 3D points to overlap.

Let M ?x , y , z? and M ' ? x ' , y ' , z ' ? be two 3D points, with  M in front of  M'; i.e. y? y'  .

M  and  M'  bars  overlap iff   horizontal  distance  between V ?M? and V ?M'?  is less than bar width, and V ?M? is  higher  on  y-axis  than  V ?M'? .  These  two  conditions  are  expressed  by  the  following  system,  using V  expression :  {?x?y cos? ?x '?y ' cos????1   (horizontal)z '? y' sin??z?y sin?              (vertical) B. Partial occlusion  Using the horizontal equation from the previous, we find  that ?? x x ' ??? y y' ?cos???1 . Using a relaxation parameter ? , we express x  using other coordinates :  x '=x??y y '?cos???  with ????1 .  Conversely,  given any to points M  and M' , ?  is defined by :  ?=? x x ' ??? y y' ?cos?  Fig. 3. Coordinates in 3D oblique projection.

Definition 1 (Partial occlusion)  A partial occlusion occurs whenever ?x ,x ' , y , y '?y  such that :  {x '=x??y y '?cos???  with ????1M ?x ' , y '??M ?x ,y ???y ' y ?sin? An  example  of  partial  occlusion  is  shown  in  Fig  2.

Indeed, objects 9 in Fig 2 are partially hidden by object 6  Definition 2 (Left and right occlusions)  Whenever a partial occlusion occurs, it is said to be a  left occlusion if ??0 , and a right occlusion if ??0 .

A  partial  occlusion  means  that  part  of  bar  is  hidden  behind another one. It is a left occlusion if the leftmost part  of the bar is occulted, a right occlusion if it is the right part.

C. Total occlusions  Definition 3 (Total occlusion)  A partial occlusion is said to be total iff there exists both  a left and a right occlusion.

In  other  words,  an  occlusion  is  said  total  iff  both  leftmost  and  rightmost  part  of  a  bar  are  hidden.  It  is  possible  in  some  rare  cases  to  have  a  total  occlusion  involving only two bars, whenever  ?=0  in definition 1 and 2.

Fig. 4.  N-square matrix M of example in Table 1.

An example of full occlusion is shown in Fig 4. Indeed,  object 7 in this figure is fully hidden by objects 4 and 5.

To avoid occlusion, it is necessary to find the best  order on x-axis of antecedents and the best order on y-axis  of  conclusions.  Finding  this  order  is  a  combinatorial  problem that can be described as an optimization problem,  since our goal is to minimize the number of occlusions.



IV.AVOIDING OCCLUSION : AN OPTIMISATION PROBLEM  Any problem has a set of valid results which forms the  solution space. In this set, the best possible solution to the  problem is called global optima (Aarts & Lentra, 1997).

15-44    A. Optimisation problem  Definition 4  An optimization problem is specified by a set of problem  instances  and  is  either  a  minimization  problem  or  a  maximization problem.

According  to  our  problem,  we  consider  only  minimization problems thereafter.

Definition 5  An  instance  of  an  optimization  problem  is  a  pair ?S , f ? , where the solution set  S  is the set of feasible  solutions  and  the  cost  function  f  is  a  mapping f :S?R .

The  problem  is  to  find  the  global  optima  solution  i ? ?S  such  that  ? i?S, f ?i  ? ?? f ?i? .  Furthermore,  f ? = f ?i  ? ? denotes  the  optimal  cost,  and  S ? ={i?S/ f ?i?= f ?}  denotes the set of optimal solutions.

B. Occlusions problem definition  Occlusions  problem  is  as  an  optimization  problem in  order to find  optima solution.  This can be formulated as  follows :  Definition 6  An  instance  of  the  occlusion  problem  in  3D  representation is  a pair  ?S , f ? ,  where  the solution set S  is the set of all possible representations depending on  a  dataset,  and  the  cost  function  f  is  a  mapping f :S?R  where f ?i?  is the number of occlusions.

Proposition 4 (Occlusions optimization)  Generated  occlusion  in  a  3D  representation  is  an  optimization  problem  and  the  size  of  the  search  space  SS  is less than ?max ?n ,m?!?    (see Proof 1).

Proof 1 (Search space)  In order to calculate the global search space, we need to  explore the search space of both antecedent and conclusion.

These  values  correspond  to  the  number  of  possible  arrangements in order to represent all itemsets on an axis.

SS=?SSantecedent?.?SSconclusion? SS=?n!?.?m!?  SS?max?n! ,m!?  SS??max?n,m ?!?  ?  Several methods exist to solve an optimization problem:  exact  methods  as  dynamic  programming,  local  search  heuristics  methods  as  taboo  search,  heuristics  methods  based on population as genetic algorithms. These methods  can be investigated to find a solution to occlusion in 3D  representation. We have explored several approaches based  on an ordering of aggregated values on axis to propose a  visualization  tool  that  can  in  some  case  avoid  many  occlusions.

C. Computing number of occlusions  Let us assume that ?  is such that cos?= p  q . Hence  x-coordinate  in  2D  space   are  given  by  x?y.

p  q = x.q?y.p  q .

The  exact  number  of  occlusions  can  efficiently  be  computed by maintaining an ?horizon ? array h giving the  highest  y-value  for  each  possible  x-value.  This  array  is  updated by considering each row in turn,  from closest to  farthest.  Whenever  M ?x , y??ysin?  is  no  higher  than h[x.q+y.p]  and  its  q  left  and  right  neighbours  in  h,  an  occlusion  is  found.  It  gives  the  following  algorithm  (algorithm 1).

Algorithm 1 (number of occlusions)  Input : matrix M; Float theta.

Output : integer partialOcclusions,  totalOcclusions  float s = sin theta  int p,q  p/q = cos theta  occlusion = 0  float[] h , h[i] = 0  for i : 1 to n do  float[] nextH  for j : 1 to m do  float y = M(i,j)+j.s  integer qx =  i.q+j.p  if h[qx] > y then  ++partialOcclusions  ++totalOcclusions  nextH[qx] = h[qx]  else  nextH[qx] = y  boolean leftOcclusion = false  boolean rightOcclusion = false  for k : 1 to q do  if h[qx-k]> y then  leftOcclusion = true  if h[qx+k]> y then  rightOcclusion = true  if leftOcclusion or rightOcclusion  then ++partialOcclusions  if leftOcclusion and rightOcclusion  then ++totalOcclusions  h = nextH  End.

This algorithm computes partial and total occlusions in  O(n.m.q), where q depends only on ? , i.e. O(n.m) if ?  fixed. This algorithm provide a convenient way to compute  both partial and total occlusion numbers.  However,  direct  use  of  occlusion  number  is  discouraged,  because  of  the  following flaws :  ? There is no straightforward incremental algorithm for  computing  occlusions  numbers.  Thus,  any  local  search  based  method  has  to  compute  occlusion  number  again  whenever  two  row  are  swapped. Considering the large search space, this  make O(n . m) search steps prohibitive.

15-45    ? row and column are closely tied in this metric, and altering row order strongly impact column order.

In  other  words,  best  row  ordering  depend  on  actual  column  order.  Thus,  any  row  reordering  may have tremendous effect  on what  is  the best  column ordering (and conversely).

? There is no direct link between coordinates (x,y), cell  height  (z=  M(x,y))  and  occlusion  number.

This  is  because  occlusion  number  is  a  global  metric.  Local  metrics  would  made  both  metric  computation and search methods much faster.

Thus, we propose to build an approximation of the number  of occlusions using a weight map w: ? x , y ??w? x , y?  such that s ?M ?=?x , y w? x , y ? . M ?x , y ? where s?M ?  is an approximation of the number of occlusions.

The  search  space  can  be  expressed  using  row  and  column permutation ?  and ? ' .

s ?? ,? ' ?=? x , y  w? x , y ? . f ??? x? ,? ' ? y?? .

The solution of this approximate  optimization problem is  ??? ,? '??=argmin s ,  i.e.  the couple of permutation with the smallest approximate number of  occlusions.

In the following section, we will present different weight  functions, and associated search algorithms. Those methods  principles are based on local property of weighted metrics.

Let us find how much s is affected by swapping two rows :  let  ?=?x , x?d ? be the permutation of row x and x+d.

The effect on metric s is given by :  s ???? ,? ' ??s ?? ,? ' ?  =? x ,y  w ?x , y? . ? f ?? ???x ? ,? ' ?y ??? f ??? x ? ,? ' ?y ??? =?  y w?x?d , y ? . f ???x ? ,? ' ?y ???w ?x?d , y? . f ?? ?x?d ? ,? ' ? y??  ?w ?x , y ? . f ???x?d ? ,? ' ?y ???w ?x , y? . f ?? ?x ? ,? ' ?y ??  =? y ?w? x?d , y ??w ?x , y?? . f ?? ?x ? ,? ' ? y??  ??w ?x , y??w? x?d , y ?? . f ??? x?d ? ,? ' ?y ??  =? y ?w ?x?d , y??w ? x , y ?? .? f ??? x ? ,? ' ? y??? f ???x?d ? ,? ' ?y ???

V.PROPOSED HEURISTICS  3D oblique projection representation doesn?t  avoid  all  partial occlusions. However, full occlusions can be limited.

The main idea is to put the greater value at the back of the  representation, and contrariwise the lower value on the top  of  the  representation.  There  are  several  possible  approaches.  One solution consists  in reducing the size of  objects  in  order  to  reduce  the  number  of  occlusions.

However,  the  user?s  visibility  and  understanding  are  proportionally  reduced.  Another  solution  is  to  rotate  the  representation  but  this  approach  doesn?t  palliate  the  problem.  Indeed,  some  occlusions  can  be  eliminated  but  new occlusions can also appear with the other view of the  representation. We focus on a new idea which is to permute  full  lines  or  full  column  in  order  to  avoid  occlusion  appearances.

A. Sort based on rows and columns sums.

Let  us  consider  the   w ?x , y?=x? y  weighting function. This weight function is shown on the following  figure :  Fig. 5.  Ordering representation  with sum function  Using  this  weight  function,  we  look  for  a  row swap  effect. It gives :  s?? ?? ,? ' ? s?? ,? ' ?=? y d ? f ???x ? ,? ' ?y ?? f ???x?d ? ,? ' ?y ?? ?  =d ??y f ???x ? ,? ' ?y ?? ?y f ?? ?x?d ? ,? ' ? y ??? =d ?M row x  sum M row x?d  sum ?  Property  When  using  the  weight  function  w ?x , y?=x?y , swapping  two  rows  x  and  x+d  add  exactly  d  times  the  difference between x and x+d row sum.

Remarks :  ? row permutation effect does not depend on ? '  ? row permutation  effect  depends  only  on swapped row sums.

Using this weight function,  the  minimum value of s is  reached when  rows  and columns  are  sorted according to  their sum.

B. Sort based on rows and columns median.

As rows  all  have  the  same  number  of  elements,  total  weight  sort  is  equivalent  to  mean  weight  sort.  One  well  know drawback of  statistical  use  of  average  value  is  it's  sensibility  to  outliers  (in  our  case,  unfrequent  extremely  high values).

Moreover,  we approach here the number  of occlusion.

We want to count how many occlusion one row is likely to  cause  on  another  behind  row,  not  how  "severe"  these  15-46    occlusion are. In this particular case, using median to sort  rows make sense : if more than half of the front row values  are below more than half  of the back row,  occlusion are  much less likely than in the reverse condition.

However,  practical  test  shows  that  median  use  is  not  robust,  because  sparse  data  (frequent  0  height)  makes  median unsuitable as sorting key (every row has 0 median).

The very same problem will occur whenever some value is  too frequent in dataset.

C. Sort based on partial rows and columns sums.

We propose another weight function, given by :  w ?x , y?=min ? x , y ? Figure 6 depicts w values :  Fig. 6. Min(x,y) weight function  Once again, we compute (x, x+d) permutation effect on  s, in order to devise an optimization algorithm.

s???? ,? ' ??s ?? ,? ' ?  =? y w?x?d , y? . f ???x ? ,? ' ?y ???w ?x?d , y? . f ?? ?x?d ? ,? ' ? y??  ?w?x , y ? . f ???x?d ? ,? ' ?y ???w ?x , y? . f ?? ?x ? ,? ' ? y??  =?y?x?d y.f ??? x ? ,? ' ?y ???y.f ???x?d ? ,? ' ?y ?? ??  y?x?d ? x?d ? . f ??? x ? ,? ' ?y ????x?d ? . f ?? ?x?d ? ,? ' ? y??  ?? y?x  y.f ???x?d ? ,? ' ?y ???y.f ?? ?x ? ,? ' ? y??  ?? y?x  x.f ???x?d ? ,? ' ?y ???x.f ?? ?x ? ,? ' ? y??  =? x?y?x?d  y.f ??? x ? ,? ' ?y ???y.f ???x?d ? ,? ' ?y ??  ?x.f ???x?d ? ,? ' ?y ???x.f ?? ?x ? ,? ' ? y??  ??y?x?d d.f ??? x ? ,? ' ?y ???d.f ??? x?d ? ,? ' ?y ?? =?  x?y?x?d ?x?y?? f ??? x?d ? ,? ' ?y ??? f ?? ?x ? ,? ' ? y???  ?? y?x?d  d.? f ?? ?x?d ? ,? ' ? y??? f ???x ? ,? ' ?y ???  =? x?y  min ?x?y ,d ? .? f ?? ?x?d ? ,? ' ? y??? f ???x ? ,? ' ?y ???    Remarks :  1. Row permutation gain depends on ? ' .

2. Columns in {? ' ?y ?/y?x } have no effect.

3. When d is small, gain is almost equal to d. row  weigh sum for {? ' ?y ?/x?y } .

4. These remarks holds with column/row duality.

Proposed algorithm is based on the following principles :  ? Use extraction sort method : find best first row, then  second  best  and  so  on.  Use  of  sort-like  algorithm is based on remark (3).

? Work  simultaneously  on  rows  and  columns.

Working on row and then column would not  be  wise according to (1) and (4).

? Update rows and columns weight  sum to take (2) into account.  Previous two principles make it  easy : already set rows and columns only need to  be ignored.

Dual  approach  can  be  used  based  on  w ?x , y?=max ?x , y? .

It is interesting to note that min(x,y)+max(x,y)=x+y. It  gives :  s ???? ,? ' ??s ?? ,? '?  =? y?x?d  min ?x?d y ,d ? .? f ?? ?x?d ? ,? '?y ?? f ?? ?x ? ,? ' ? y???  Fig. 7. Dual representation of Fig.6  D. Genetic algorithm based approach  One  extension  of  this  work  consists  in  using  a  metaheuristic  approach  based  on  the  genetic  algorithm  (Goldberg 1989). The complexity of the tackled problem as  well  as  the  search  for  an  optimal  solution,  leads  us  to  explore this kind of resolution in order to solve larger size  instances  than  those  which  can  approach  the  exact  resolution methods. We present our genetic approach here:  solutions coding and genetic operators used.

A  solution  can  be  naturally  represented  by  a  chromosome using a direct coding with two lists: the first  one  contains  a  permutation of the  indices  on x-axis  x  =  {1,  ...,n}  and  the  second  contains  a  permutation  of  the  indices on y-axis  y = {1, ?,m}. For example with n=5 and  m=6, a chromosome (CH)  is represented as: (< 3, 4, 5, 1, 2  >, < 6, 1, 3, 2, 4, 5 >).

15-47    The objective function (or fitness) of a chromosome to  be minimized is defined as: Fitness(CH) = ?*full_occlusions(CH) +  ?*partial_occlusions(CH),  where ? and ?  are coefficients ranging between 0 and 1.

The  crossover  used  here  could  be  the  PMX (Partially  Mapped  Crossover)  which  allows  the  repair  of  the  chromosome  after  crossover  (removal  of  the  duplicated  genes, addition of missing genes). The characteristic here is  that it is necessary to apply this operator to each of the two  lists.  The  mutation  operator  consists  in  exchanging  the  position of 2 numbers in each list.

E. Implementation  We developed  a  visual  data  mining  tool  ?  LARM  ?  which  implements  the  first  heuristic  searching  for  an  ordering  with  the:  sum (or  average)  function.  Our  initial  benchmark  contains  a  set  of  twelve  rules.  Lexicographic  order display ten rules as shown by figure 8 (see also table  2).  Our  ordering  approach  using  the  average  function  display all rules without occlusion, as shown by figure 9.

How to prove that the given solution is good ? Is the  occlusions number smaller when applying such solution ?

We are still trying to formally answer to these questions.

Our  approach  is  limited  with  dense  data  because  the  number of occlusions can be too high. Also we are not  yet  able  to  guarantee  that  our  solution  is  the  optimal  one.

Nonetheless,  the  experiments  already  conducted  with  different   benchmarks  have  shown  that  our  approach  is  sound.



II.CONCLUSION  We have described itemsets-itemsets 3D representation  of association rules. Within this representation, occlusions  are difficult to avoid. A formalisation of this problem as an  optimization problem is proposed in order to minimize the  number of occlusions.

Different approaches are explored in order to solve this  problem. We used a function g  to calculate values of lines and columns of the 3D matrix.  An implementation of the  average  function  has  shown  a  considerable  reduction  of  occlusion  compared  to  an  a-priori  ordering  of  itemsets,  during the experiments conducted on different datasets.

Implementation of other approaches are currently being  done and comparisons will  be conducted with the current  ordering approach.

