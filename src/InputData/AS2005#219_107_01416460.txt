TRACKING MULTIPLE CLOSELY SPACED TARGETS USING AN ADAPTIVE FOVEAL SENSOR

ABSTRACT  We address the problem of configuring a foveal sensor to track multiple, closely spaced moving targets. The foveal sensor has a high acuity region, whose center and extent can be configured, surrounded by a low acuity region. We study three heuristic approaches to extend a near-optimal greedy configuration rule for a single target to multiple tar- gets: simultaneously observe all targets (SO), center the foveal region on each target in turn (TO), and center the foveal region on the target with the worst position estimate (WO). The target tracker is implemented using a particle filter with joint probabilistic data association (JPDA). Addi- tionally, we implement two different independent-partition proposal distributions using JPDA and global nearest neigh- bor (GNN). Monte Carlo simulations show that the WO rule outperforms the other rules and that the IP-JPDA proposal gives better tracking performance.



I. INTRODUCTION  Tracking multiple, closely-spaced targets using an attentive sensor in heavy clutter is a challenging problem. Previous work [1, 2] developed attentive sensor control strategies to track single target. In this paper, we investigate strategies to track multiple targets moving in one dimension with a foveal sensor. The foveal sensor has a high acuity region, whose center and extent can be configured, surrounded by a low acuity region; target positions within the high acu- ity foveal region are observed more accurately. The control strategies are obtained by extending a near-optimal, greedy algorithm from single target to multiple targets using three approaches: simultaneously observe all targets (SO), cen- ter the foveal region on each target in turn (TO), and center the foveal region on the target with the worst position esti- mate (WO). The target tracker is implemented using a joint multi-target probability density (JMPD) particle filter with joint probabilistic data association (JPDA). Our simulation results show the best performance is obtained by the WO rule.

This work supported by AFOSR under grant F49620-03-1-0117.

A second contribution of this paper is a novel indepen- dent partition (IP) proposal scheme for the particle filter.

Previous work [3, 4] developed the independent partition method to reduce the number of particles (and hence the computational burden) necessary to implement the particle filter. That work used sensor arrays and unified target track- ing (i.e. tracking with sensor models that do not require data association). We have adapted the IP proposal method to include data association using two different methods: GNN and JPDA. IP-JPDA provides better performance in the presence of clutter.

The rest of this paper is organized as follows: Section II describes the target dynamics and observation models. Sec- tion III briefly outlines the tracker algorithm. We present three foveal sensor configuration algorithms in Section IV, and introduce the IP-JPDA and IP-GNN proposal schemes in Section V. Section VI compares the three configuration algorithms as well as IP-GNN and IP-JPDA through Monte Carlo simulations. Conclusions are given in Section VII.



II. TARGET DYNAMICS AND SENSOR MODELS  We consider Tmax targets moving in one dimension. Let xtk denote the state vector of target t at discrete time k:  x t k =  [ Xtk X?  t k  ]? .

where Xtk is position and X? t k is velocity. The state vector  for a given target is also called a partition. We use a constant velocity target motion model:  x t k =  [ 1 ?t 0 1  ] x  t k?1 + n  t k?1,  where ?t is the time difference between measurements, and n  t k?1 is a zero-mean Gaussian process with covariance Q.

The multitarget state vector for Tmax targets is composed of the individual partitions:  xk = [ x  k  ? ,x2k  ? , . . . ,xTmaxk  ?]? .

The foveal sensor provides observations of the target po- sition corrupted by noise. The sensor has two adjustable parameters: dk sets the location of the foveal region, while ck sets the gain at the center of the foveal region. The ob- servation for target t is obtained from its position as  zk = arctan ( ck[X  t k ? dk]  ) + vtk,  where vtk is white Gaussian noise with variance R.

Once configured, the foveal sensor provides measure-  ments of target positions; it detects each target with a known probability PD . The measurement vector at time k is zk =[ z1k, z  k, . . . , z  Mk k  ]? . Its elements consist of observed target  positions and clutter. We model clutter as uniformly dis- tributed over the surveillance region volume V; the number of false alarms is Poisson distributed with parameter ?V, where ? is the spatial false alarm density and is known to the tracker.



III. TRACKER ALGORITHM  The nonlinearity of the foveal sensor observation model ne- cessitates the use of a particle filter in this application. We use Monte Carlo joint probabilistic data association [5] and an independent partition proposal distribution (described in Section V) to estimate the target state and provide informa- tion necessary to configure the foveal sensor. The poste- rior distribution of xk given z1 through zk is approximated by Tmax sets of Npart particles {xik}Nparti=1 and associated weights {?ik}Nparti=1 . Table 1 outlines our tracking algorithm.



IV. SENSOR CONFIGURATION  We improved the performance of the single-target config- uration rule in [1] by examining the characteristics of the near-optimal solution obtained using SPSA [7] for R ? [0, 0.4]. The foveal center d is positioned at the predicted target position. The foveal gain c is set to  c =  { ??  P+(?1.8 log10 R) , 0.4 ? R ? 0.0146  ?  3.30 ?  P+ , 0 ? R < 0.0146 (1)  where P+ is the predicted position error variance.

From this single target rule, we have developed three  foveal sensor configuration rules for multi-target tracking.

SO is designed to observe all targets at the same time. In or- der to let all targets fall within the high acuity foveal region, d is set to the point midway between the two most widely separated targets (say, i and j). Denoting the distance be- tween targets i and j as Dij , we set the gain as:  c =  ?? ?  ?  (Dij+0.9( ?  P +  i +  q P  +  j ))(? log10 R)  , 0.4 ? R ? 0.0146 ?  (Dij+1.65( ?  P +  i +  q P  +  j ))  , 0 ? R < 0.0146  Table 1. Multiple Target Tracking Algorithm  1. Generate {xi0}Nparti=1 ; set {?i0}Nparti=1 = 1Npart .

2. Compute x?0 =  ?Npart i=1 ?  i 0x  i 0 and  P?0 = ?Npart  i=1 ? i 0(x  i 0 ? x?0)(xi0 ? x?0)T .

3. Set k = 1.

4. Compute the predicted state estimate x?+k = F x?k?1  and predicted error covariance P+k = FP?k?1F ?  + Q.

5. Configure dk and ck as in Section IV.

6. Obtain zk using the configured sensor.

7. For each target t, propose a set of partitions  {xt,ik }Nparti=1 and associated bias terms {bt,ik }Nparti=1 via the IP-GNN or IP-JPDA algorithm of Section V; con- catenate all partitions to form particles  x i k =  [ x  1,i k  ? ,x  2,i k  ? , . . . ,x  Tmax,i k  ?]? .

8. For i = 1, . . . , Npart,  ?ik = ? i k?1  ?NH l=1 p(zk, ?  l k|xik)?Tmax  t=1 b t,i k  ,  where { ?lk  }NH l=1  is the set of feasible associations of observations to targets, NH is the total number of fea- sible hypotheses, and p(zk, ?lk|xik) is given in [5].

9. For i = 1, . . . , Npart, normalize weights  ?ik = ?ik?Npart  i=1 ? i k  .

10. Permute particles by the K-means algorithm[4].

11. Compute the state estimate x?k = ?Npart  i=1 ? i kx  i k, error  covariance P?k = ?Npart  i=1 ? i k(x  i k ? x?k)(xik ? x?k)?.

12. Calculate N?eff = 1PNpart i=1 (?  i k )2  and perform re-  sampling if N?eff < NT .

13. Set k ? k + 1 and go to step 4.

where P+i and P + j are the predicted position error variances  of targets i and j. In TO, the foveal region is centered on each target in turn, while the gain is computed using (1) with P+ of the centered target. In WO, the foveal region is centered on the target that has the largest predicted position error variance, and the gain is also computed using (1) with P+ of the centered target.



V. INDEPENDENT PARTITION PROPOSALS  The independent partition approach proposes a collec- tion of particles for each partition {xt,ik  ?}Nparti=1 ; weights {wt,ik }Nparti=1 , which depend on the observation zk, are com-  V - 942    0 10 20 30        time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  IP JPDA  t1(SO) t2(SO) t3(SO) t1(TO) t2(TO) t3(TO) t1(WO) t2(WO) t3(WO)  0 10 20 30        time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  KP  t1(SO) t2(SO) t3(SO) t1(TO) t2(TO) t3(TO) t1(WO) t2(WO) t3(WO)  Fig. 1. Average squared position error (ASE) for three tar- gets (t1, t2, and t3) for the SO, TO and WO heuristics with no clutter.

puted for each partition. Computation of the weight re- quires that the elements of zk be associated with each par- tition. The proposed particles for each partition are re- sampled according to these weights to obtain a collection {xt,ik }Nparti=1 . These partitions are arranged into particles: x  i k =  [ x  1,i k  ? ,x  2,i k  ? , . . . ,x  Tmax,i k  ?]? . We investigate two  association approaches to implement IP proposal distribu- tions: global nearest neighbor (IP-GNN) and joint proba- bilistic data association (IP-JPDA).

The GNN method makes one-to-one assignments be- tween the elements of zk and the partitions x  t,i k of particle  x i k to minimize the total distance between measurements  and predicted measurements [6]. The set of assignments is then used to compute the weight assigned to each partition.

The JPDA method computes weights for a given partition x  t,i k by applying JPDA as if it were the only target present  (treating observations from other targets as false alarms)..

This requires enumerating all association hypotheses be- tween xt,ik and the elements of zk; we denote the set of  possible hypothesis as {?t,lk } NHpart l=1 . Here, NHpart is the to-  tal number of association hypotheses for the partition xt,ik .

Table 2 shows the details of the IP-JPDA proposal scheme.



VI. SIMULATION RESULTS  We evaluated performance by examining the percentage of Monte Carlo runs in which the tracker converges (i.e. po- sition errors for all targets remain below a given threshold during the last ten time steps of each run) and, for converged runs, the average squared error (ASE) in the estimated posi-  Table 2. IP-JPDA Subroutine for Target t 1. For each particle i = 1, . . . , Npart,  (a) Sample xt,ik ? ? p(xk|xt,ik?1)  (b) For each ?t,lk , compute p(zk, ? t,l k |xt,ik  ? )  (c) Compute wt,ik = ?NHpart  l=1 p(zk, ? t,l k |xt,ik  ? )  2. Normalize {wt,ik }Nparti=1 to sum to 1 3. For each particle i = 1, . . . , Npart, sample an index  j according to the distribution {wt,ik }Nparti=1 ; set xt,ik = x  t,j k  ? and bt,ik = w  t,j k .

0 10 20 30        time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  IP JPDA  t1(SO) t2(SO) t3(SO) t1(TO) t2(TO) t3(TO) t1(WO) t2(WO) t3(WO)  0 10 20 30       KP  time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  t1(SO) t2(SO) t3(SO) t1(TO) t2(TO) t3(TO) t1(WO) t2(WO) t3(WO)  Fig. 2. ASE for the SO, TO and WO heuristics in clutter.

tion of each target. All evaluations used 1000 Monte Carlo simulation runs with q = 0.01, R = 0.05, ?t = 1, and Npart = 400. The initial particles were sampled from a Gaussian distribution whose mean is the true targets? state x0 and whose covariance is P0 = diag(1, 0.1).

We compared the performance of the SO, TO, and WO approaches for both IP-JPDA and kinematic prior (KP) pro- posals for no clutter (PD = 1, ?V = 0) and clutter (PD = 0.9, ?V = 0.5). Table 3 and Fig. 1 show percent convergence and ASE as a function of time for the SO, TO and WO heuristics tracking three targets in no clutter. Ta- ble 4 and Fig. 2 show the corresponding performance with clutter. The performance of IP-JPDA is always better than that of KP, and WO and TO with IP-JPDA proposal perform better than SO. Also, WO appears to be generally slightly better than TO in the presence of clutter.

We also compared IP-JPDA and IP-GNN. Table 5 and Fig. 3 show that IP-JPDA has the same performance track- ing 2 targets as IP-GNN when PD = 1 and PFA = 0; while IP-JPDA has better performance than IP-GNN when  V - 943    Table 3. Percentage of runs that converged with no clutter Proposal method SO TO WO  IP-JPDA 90.5% 99.5% 99.7% KP 88.5% 97.1% 96.4%  Table 4. Percentage of runs that converged in clutter Proposal method SO TO WO  IP-JPDA 81.1% 90.7% 92.5% KP 80.6% 75.8% 83.1%  PD = 0.9 and ?V = 0.5. This is because IP-JPDA can counteract the negative influence of false measurement-to- target assignments. To further test the robustness of IP- JPDA, we applied it to two different scenarios in clutter in which three moving targets have different initial positions and velocities. Fig. 4 shows the true and estimated trajecto- ries; the IP-JPDA proposal scheme works for both cases.



VII. CONCLUSIONS  In this paper, we introduce an attentive tracker for mul- tiple closely spaced targets using an adaptive foveal sen- sor. Three foveal sensor configuration rules are studied and compared by Monte Carlo simulations. The WO rule gen- erally outperforms the TO and SO rules for either IP-JPDA or KP proposals. In addition, both IP-JPDA and IP-GNN proposal approaches are presented and investigated. Monte Carlo simulations show better performance is obtained by IP-JPDA than by IP-GNN in the presence of clutter.



VIII. REFERENCES  [1] Y. Xue and D. Morrell, ?Adaptive Foveal Sensor for Target Tracking,? 36th Asilomar Conf. on Sig., Sys., and Comp., pp. 848-852, Nov. 2002.

[2] H. Shah and D. Morrell, ?An Adaptive Zoom Algorithm For Tracking Targets Using Pan-Tilt-Zoom Cameras,? ICASSP?04, May 2004.

[3] M. Orton and W. Fitzgerald, ?A Bayesian Approach to Tracking Multiple Targets Using Sensor Arrays and Particle Filters,? IEEE Tran. Sig. Proc., vol. 50, no. 2, pp. 216-223, Feb. 2002.

[4] C. Kreucher, K. Kastella, A. O. Hero, ?Tracking Multi- ple Targets Using a Particle Filter Representation of the  Table 5. Percentage of runs that converged using IP-JPDA and IP-GNN  Proposal method no clutter clutter IP-JPDA 100% 98..9% IP-GNN 100% 84.1%  0 10 20 30  0.5   1.5   2.5   time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  P D  =1, ? V=0  t1(IP GNN) t2(IP GNN) t1(IP JPDA) t2(IP JPDA)  0 10 20 30  0.5   1.5   2.5   time index, k  A S  E o  f t ar  ge t p  os iti  on e  st im  at e  of c  on ve  rg ed  tr ac  ks  P D  =0.9, ? V=0.5  t1(IP GNN) t2(IP GNN) t1(IP JPDA) t2(IP JPDA)  Fig. 3. Comparison between IP-JPDA and IP-GNN pro- posal schemes for clutter and no clutter.

0 10 20 30        time index, k  T ru  e an  d es  tim at  ed ta  rg et  p os  iti on  t1(True) t2(True) t3(True) t1(Estimated) t2(Estimated) t3(Estimated)  0 10 20 30             time index, k  T ru  e an  d es  tim at  ed ta  rg et  p os  iti on  t1(True) t2(True) t3(True) t1(Estimated) t2(Estimated) t3(Estimated)  Fig. 4. True and estimated trajectories using IP-JPDA  Joint Multitarget Probability Density,? SPIE Intl. Sym- posium on Opt. Sci. and Tech., San Diego, CA, Aug.

[5] R. Karlsson and F. Gustafsson, ?Monte Carlo data asso- ciation for multiple target tracking,? Proc. of IEE Tar- get Tracking: Algorithms and Applications, vol. 1, pp.

13/1-13/5, Oct. 2001.

[6] S. Blackman and R. Popoli, Design and Analysis of Modern Tracking Systems, Artech House, 1999.

[7] J. C. Spall, ?An Overview of the Simultaneous Per- turbation Method for Efficient Optimalization,? Johns Hopkins APL Technical Digest, vol. 19, No. 4, 1998.

