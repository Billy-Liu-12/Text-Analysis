An Optimal Association Rule Mining Algorithm Based on Knowledge Grid

Abstract   Distributed data mining and in particular grid- enabled data mining has become an active area of research and development in recent years. As the amount of available digital electronic data is growing at an unprecedented rate, it is necessary to provide general data mining algorithms that help to leverage grid capacity in supporting high-performance distributed computing for solving their data mining problem in a distributed way. In this paper, an optimal multi-strategy based hybrid distribution (MBHD) algorithm based on knowledge grid is proposed for performance improvement over current grid-based association rule mining algorithms. With the optimization polices based on auction model and timestamp mechanism, MBHD algorithm effectively solves the load imbalance problem in grid environment and decreases the communication overhead. The response time performance of MBHD algorithm with different numbers of hosts and minimum supports is analyzed by experiments. The numerical results show that MBHD is efficient and performs better than count distribution (CD) algorithm, intelligent data distribution (IDD) algorithm and hybrid distribution (HD) algorithm.

1. Introduction   In many applications it is necessary to perform the analysis of very large data sets. Due to rapid growth of geographically distributed data collection in recent years, the computation of the frequencies of the occurrence of subsets of items in knowledge discovery process becomes more expensive and time consuming.

Grid computing has emerged as an important new branch of distributed computing focused on large-scale resource sharing and high-performance orientation. It provides effective computational support for applications such as knowledge discovery [1].

A few research frameworks currently have been presented for deploying distributed data mining  applications in grids [2, 3], all of which are general environments supporting execution of data mining tasks on machines that belong to a Grid. Several projects such as Grid Miner [4] and TeraGrid [5] have focused on the creation of middleware/systems for data mining and knowledge discovery on top of the Data Grid [6]. [7] discusses some approaches for exploiting grid computing to support distributed data mining by using Grids as decentralized high-performance platforms where to execute data mining tasks and knowledge discovery algorithms and applications. The DataMiningGrid system [8] has been designed to meet the requirements of modern and distributed data mining scenarios. It provides tools and services facilitating the grid-enabling of data mining applications without any intervention on the application side.

A knowledge grid architecture based on mobile agent has been presented by us in a previous paper [3].

In this paper, we propose a knowledge-grid-based association rule mining algorithm using timestamp strategy and resource allocation optimization mechanism based on auction model that can effectively decrease the communication overhead and achieve a better load-balanced distribution of the candidate itemsets. The remainder of the paper is organized as follows. In Section 2 we introduce auctioning-based resource allocation optimization mechanism in MBDH, and in Section 3 timestamp strategy is discussed. To substantiate the theoretical analysis, experiments are performed in Section 4 to evaluate the effectiveness of the proposed algorithm. Finally, a brief conclusion is included in Section 5.

2. Optimization mechanism based on auction model   The knowledge grid architecture is defined on top of basic grid toolkits and services. The data mining algorithms based on knowledge grid platform should be designed to adapt the characteristics of grid platform such as distributed, heterogeneous and   DOI 10.1109/FSKD.2008.95    DOI 10.1109/FSKD.2008.95     dynamic. These characteristics of grid environment make the load balancing issue in grid-based data mining algorithms a key factor to making the best use of available grid resources.

The market mechanism is very suitable for solving the problem of resource management in the grid context because market theory in economics reflects the supply and demand of resources and provides precise depiction for efficiency of resource allocation [9]. In this paper, auctioning is used to allocate the resources and regulate supply and demand of the available grid resources. The scheduling policy using auction mechanism can enable resource allocation optimization in knowledge grid through distributed resource allocation between grid resource and grid user and balance the workload well for MBHD algorithms.

We define a general discrete resource allocation problem in terms of the following elements:  1 2( , , , )nR r r r=  represents the resources available on the grid; ( )1 2, , , mA a a a=  represents the user agents competing for these resources; 1 2, , , nP p p p=  is used to denote the highest current bid price;  1 2, , , nQ q q q=  is used to denote the seller?s reservation price. The auctioneer begins at the resource?s reservation price, and solicits progressively higher oral bids from the user agent until only one bidder is left. The resource will be sold to the highest bidder at the last price offered.

MBHD algorithm first performs a scan over the entire database of transactions D  and computes the counts kN  of the candidate itemsets kC , then uses resource allocation optimization mechanism based on auction model to allocate the kN  candidate itemsets amongst the N grid nodes. The performance of MBHD algorithm is maximized when the equilibrium prices, obtained through the optimization of the tasks of computing the counts of itemsets and the grid node resources optimization.

In the auctioning-based optimization algorithm, each partition of candidate itemsets performs the following steps:  1) Respectively selects budget attitude i? ; 2) Selects a set of grid nodes/resources R?  available  for the requested computation task; 3) Computes the budget function ( )iv R  which is  defined as follows: ( ) ( )max 1 min 2/ 1 /i i iv R v l v l? ?= + ?  Where: maxv  is the highest budget. minv  is the lowest budget. 1l  refers to the number of elements of resource  set R?  under maxv . 2l  stands for the number of elements of resource set R?  under minv .

4) Selects a resource j from the set of resources R? , the ask price of which is the closest to ( )iv R .

5) Bids the ask prices for the resource j that maximizes its surplus, based on the current ask prices.

6) Prices are iteratively changed to accommodate the demands for resources until the total demand equals to the total amount of resources available.

3. Timestamp-based optimization strategy   The HD algorithm [10] addresses the efficiency problem of parallel association rule discovery algorithm by combining the CD and the IDD algorithms. When executing the IDD in HD algorithm, the size of the candidate sets, s, can be described as a function of an independent variable k in the following  way: ( ) ( )  f k k k s  f k k k  ? <?= ? ? >??  , Where ( )f k  is an  incremental function and ( )f k?  is a decreasing function. k refers to the number of scanning the database. The amount of the computation performed by each grid node will be smaller under the condition of  ( )k k k k? ?> > .Where ,k k  is the threshold value.

However, the number of the transactions transferred among grid nodes will not be reduced because each grid node needs to scan the entire database of transactions and compute the counts. This caused redundant network traffic.

This paper first uses timestamp mechanism and linear regression method to estimate the relationship of the amount of computation and network traffic, and then dynamically adjusts the number of resources/grid nodes available in order to avoid redundant network traffic.

The timestamp mechanism is as follows.

Each grid node stores 2N time units which are  denoted as the following: { }c, c, 1 c, 2 c, c,, , , , ,i i i ij iNt t t t t=             (1) { }d, d, 1 d, 2 d, d,, , , , ,i i i ij iNt t t t t=             (2)  1 i N? ? ?1 j N? ? ? Where N is the number of all resources/grid nodes.

c, ijt  refers to the computation time that grid node iP scans the portions of the transactions jD  and compute the count of candidate sets. d, ijt  represents the delay     time that is spent on transferring the portions of the transactions jD  between 1iP?  and iP .

The time vectors c, it  and d, it  can be computed based on the following parameters: s ijt ? , which is the time that grid node 1iP?  transfers the portion of the transactions jD  to grid node iP . r ijt ? , which is the time that grid node iP  receives the portion of the transactions jD  from grid node 1iP? . b ijt ? , which is the time that grid node iP  starts to scan the portion of the transactions jD . e ijt ? , which is the time that grid node iP  ends to scan the portion of the transactions  jD .

The total time that N parallel grid nodes scan the  portion of the transactions is:  ( )c c, 1 c, 2 c, max , , ,  N  j j Nj j  t t t t =  =?                 (3) The total time that is spent on transferring the  portion of the transactions is:  ( )t d, 1 d, 2 d, max , , ,  N  j j Nj j  t t t t =  =?                 (4) For simplicity, we will assume that there is  relatively stable network bandwidth and a better balancing of load throughout the network.

In IDD, with the increase in the number of grid nodes, tt remains unchanged: t /t D v? , where v  is average network transmission speed. D represents whole transactions. ct  is inversely proportional to N, the total data throughput tD  is proportional to N, where tD N D= ? .

We use linear regression to estimate the value of scanning time. The target of a linear regression problem is to reconstruct an unknown function  :f X Y?  having a linear behavior in each region  iX .

Y X? ?= +                                    (5)  When only a training set S  containing k  samples ( ),i ix y , 1, 2,i k= , is available. The output 1ky + gives an evaluation of ( )1kf x + , which refers to the value of scanning time for k+1 times.

As is well known, ?  and ?  are regression coefficients, which are estimated through the following equations:   ( )( )  ( )    k i ii  k ii  x x y y  x x ? =  =  ? ? =  ? ? ?  (6)  y x? ?= ?                                  (7) Where x  is the average of 1 2, , , kx x x . y  is the  average of 1 2, , , ky y y .

If 1ky +  and y  satisfy 1ky y+ ? , then the number of  grid nodes will be reduced to N ? , which is obtained by the following equation:  1ky NN y  + ?? =                                (8)  or the number of grid nodes will remain unchanged.

4. Experiments   We generated a synthetic dataset using a tool provided by IBM. The parameters for the data set chosen are average transaction length of 15 and average size of frequent item sets of 6. Data sets with 600 transactions (30KB) were generated for different grid nodes.

To compare the scalability of the four schemes (CD, IDD, HD and MBHD), we performed scaleup tests with above 30K transactions and minimum support of 0.1%. These scaleup results are shown in Fig 1.

0 2 3 4 5 6       Number of grid nodes 7 8  CD IDD HD  MBHD   Figure 1. Sizeup result with 0.1% minimum  support  Looking at the performance of the MBHD  algorithm, we see that response time remains almost constant as we increase the number of grid nodes while the minimum support fixed. Comparing against CD, IDD and HD, we see that MBHD actually performs better as the number of grid nodes increases.

We also performed experiments in which we successively decreased the minimum support level.

These experiments for 8 grid nodes are shown in Fig.

2. The result shows that MBHD also performs better than CD, IDD and HD.

0.5 0.4 0.3 0.2 0.1 0       Minimum support (%)   CD IDD HD  MBHD   Figure 2. Response time on 8 grid nodes as  the minimum support varies  This performance advantage of HD over CD, IDD and HD is due to the following two reasons. First, MBHD used resource allocation optimization mechanism based on auctioning to allocate the candidate itemsets kC  amongst the N grid nodes that minimizes load imbalance and second, the reduction operation to obtain the counts in IDD is performed among fewer grid nodes because of the adoption of the timestamp strategy, which decreases the communication overhead.

5. Conclusions   In this paper, we propose a grid-based association rule mining algorithm using timestamp strategy and resource allocation optimization mechanism based on auction model that can effectively decrease the communication overhead and solve the load imbalance problem in grid environment. Our experimental results show that the combination of association rule discovery algorithm and grid techniques is efficient and reasonable.

Acknowledgements   This paper is supported by a grant from the National Natural Science Foundation of China (No.60602061), and a grant from the National High-Tech Research and Development Plan of China (No.2004AA113020).

