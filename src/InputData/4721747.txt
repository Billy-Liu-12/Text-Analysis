Cooperative Recommendation Based on Ontology  Construction

Abstract?In the traditional information service system, the lack of service personalization and semantic information influences the intelligence of information service, and decreases the quality of service. Cooperative recommendation has emerged as an effective technology for personalized information access. In this paper, we present a framework of cooperative recommendation based on ontology construction. We first construct domain ontology, and find user interest through user behavior record database, then construct user interest ontology by the mapping relationship between user interest and domain ontology. Through identifying the vertical weight by user interest similarity, the horizontal weight by the level of ontology concept utilize counted by PageRank, we use the improved weighted association rule algorithm to mining the concepts in user interest ontology, and exploit the user interest model. At last, we realize the semantic- based, personalized cooperative recommendation oriented to content.

Keywords: ontology; cooperative recommendation;user interest

I.  INTRODUCTION For traditional information service system lack of  personalized service and semantic, and the query based on literal matching, a new method that provide service based on content is required. Cooperative recommendation has emerged as an effective personalization technique for a diverse array of information service scenarios. For example Drineas et al [1], and the technology has been successfully deployed in many commercial settings. However, despite some efforts [2][3], there is no general theoretical explanation of the conditions under which a particular cooperative recommendation application will succeed or fail.

Our goal is to use ontology construction and association rule mining technology to propose a cooperative recommendation system that oriented to content. The system can deal with semantic, and overcomes the weakness of traditional information service system.

The rest of this paper is organized as follows. Section 2 describes the cooperative recommendation system model.

Section 3 introduces the key techniques of the system. Section 4 is devoted to analysis the principle of the system by an experiment. Section 5 provides some conclusions and discusses future work.



II. COOPERATIVE RECOMMENDATION SYSTEM MODEL Combining the cooperative recommendation with ontology  engineering, we propose a cooperative recommendation system model based on ontology construction, it shows as Fig. 1.

Figure 1.  Cooperative recommendation system model  The system integrates the advantage of personalized service and semantic retrieval, constructs user interest ontology by domain ontology, then uses user interest ontology to exploit user interest model, and uses association rule mining algorithm to assist cooperative recommendation and recommends resource intelligently.



III.  KEY TECHNIQUES ANALYSES  A. Domain Knowledge Modeling Based on Domain Ontology Construction Ontology is an explicit specification of a conceptualization  [4]. Domain ontology is the description of concepts and relations between concepts in specific domain [5]. In this paper, we use seven-step method [6] and skeleton method [7] to construct the domain ontology with the assistant of WordNet. The processes of domain ontology construction are as follows: (a) Determining the domain of the ontology; (b) Constructing the ontology concepts system, including the class and its hierarchical architecture definition, attributes definition, and instances construction; (c) Conceptual specification; (d) Using ontology developing tools to assist ontology construction; (e) Evaluation and utilization.

* Corresponding Author   DOI 10.1109/CSSE.2008.1133     B. User Interest Modeling Based on User Interest Ontology Construction We use domain ontology to construct user interest  ontology. Through the mapping of user interest information and the concepts in domain ontology, we transform the user interest into ontology concepts, and then use these concepts to construct user interest ontology. At last, we use user interest ontology to perform user pattern recognition and intelligent recommendation. The process of user interest modeling shows in Fig. 2.

Figure 2.  User interest modeling  1) Using domain ontology to construct user interest ontology  User ontology is an explicit specification of user information, it points out the terminologies and relations of user concepts, and the semantic of terminologies. User interest ontology mainly describes the user interests, and shows the user interest attributes and their relations.

User interest information including: the keywords that user inputs; the bookmark or explorer favorite that user preserves; the pages and documents that user browses; user?s browsing and picking behavior; web logs or automatic records; the data that user downloads and preserves; the relative information that user input or customizes.

The system first mapping the user interest information to domain ontology, then getting ontology concepts set that user interested in. At last, representing user interest in ontology concepts, and generating user interest ontology.

2) Using user interest ontology to mining user interest model  Using the concepts set in user interest ontology, through the semantic relations (hypernymy, hyponymy and classes- instances) and neighborhood paths, we divide user interest into several sub interest, and then model user interest.

The user interest is conceptual and semantic descript through ontology concepts set. Then, aggregating the concepts that user interested in according to the adjacency of ontology concepts. At last, the aggregated vectors form the user interest model. For the user interest is changing and adjusting through the process of system and user interaction, the weight of exist interest ontology nodes decays, while new interest ontology  nodes increases, user interest should incremental update. Fig. 3 shows the user interest forming based on user interest ontology algorithm.

The user interest forming based on user interest ontology algorithm Input: pretreatment vector Vpre, user interest ontology triple set O={C?R?C?}, interest division upper limit N, the search control threshold of adjacency degree D.

Output: user interest vector set V.

?Forming candidate user interest vector Vi=<>,  i?[1,N-1], adjacency degree control variable d=1; ?while d<=D?scans the user interest ontology orderly, take adjacency degree in ontology O as d to select concepts, infilling into candidate user interest vector Vi orderly, the adjacency degree d adding 1 automatically; ?if pretreatment vector Vpre not null, copy Vpre to VN; ?output all candidate vector Vi that are not null, i?[1,N].

Figure 3.  The user interest forming based on user interest ontology algorithm  C. The Cooperative Recommendation Based on Weighted Association Rule Mining   The precondition of the cooperative recommendation  oriented to users is that there is certain degree similarity between persons? behavior. Which indicates the users in same interest model may interest in same resource. The cooperative recommendation can help users finding new resource and new interest topics. In this paper, we intend to measure the correlation between ontology concepts and user interest by improved weighted association rule mining algorithm.

Compared to traditional association rule mining, the maximum characteristic of weighted association rule mining is the different treatment to item attributes. The algorithm we proposed forming weighted association rule sets by user interest. Forming weighted association rule sets involves transaction division, item weight setting, weighted support and weighted association rule defining, minimum weighted support threshold setting, and the weighted association rule mining algorithm.

1) Transaction division We take the user?s every login as the basis of division  transaction. User?s login usually has a major problem, although he/she may submit several problems and the problems may belong to different topics, all the problems are the reflection of user interest or demand at that time. When mining association rule, every login can take as one record, and every concept involved can take as an item.

2)  Weight setting a) User interest ontology similarity  Although in same user model, the similarity among each user still has difference. The user?s interaction has difference for the different interest similarity. The user interest similarity can be measured by user interest ontology similarity. So we can take user interest ontology similarity as weight. The higher user interest ontology similarity is, the stronger interaction exists, and the higher weight should be given.

When measuring user interest ontology similarity, first could compute the similarity of the concepts involved, and then compute the user interest ontology similarity based on it. The computational process includes two steps:  Step 1: Computing the similarity of concepts. Using Wu- Palmer similarity [8], and based on WordNet to compute.

2 ( ', ) ( , ')  ( , ') ( ', ') 2 ( ', )  c c c c  c c c c c c c c  ? ? ?  ? ? ? ?  ? ? =  ? + ? + ? ? (1) R????? : is a similarity over a hierarchy ?>=< ,?H , ?  is the root of the hierarchy, )',( cc? is the number of intermediate edges between a class c and another class 'c  and  'cc ? ={ '''';'' cccc ???? }.

For instance, to user interest ontology A and B, if we want to compute the similarity of concept A1 in A and B1 in B, after lookup WordNet to find the nodes they are in, using (1) can compute their similarity.

Step 2: Computing the similarity of user interest ontology.

To any user interest ontology A and B, computing the similarity of m concepts in B and n concepts in A using Wu- Palmer similarity, the mean is the similarity of B to A. Shows as (2):    nm  AB  ABSim  m  i  n  j ji  ? = ??  = =1 1  ),(  ),(  ? (2)  b) The degree of ontology concept utilization Take [9] as referenced method, we use Google?s PageRank  algorithm to determine horizontal weight. We can describe PageRank simply as following:  PR(A)=(1-d)+d*(PR(Ti)/C(Ti)+?+PR(Tn)/C(Tn))       (3)  PR(A) is the PR of page A?T1, T2, ?, Tn are the amount of pages click into A; PR(Ti) is the PR of page Ti (i=1, 2,?, n); C(Ti) is the amount of pages click out of Ti (i=1, 2,?, n); d is a decay factor, 0<d<1, generally, d=0.85. When used to compute the degree of ontology concept utilization, we take the time of the utilization corresponding to the amount of pages click into, and set PR(Ti)=0.15, and the amount of concepts that user accesses every time corresponding to the amount of pages click out of.

3) Weighted support definitiing a) Vertical weighted support  Give each user access record a vertical weight vi (i={1,2,? ,n}), vi is set according to the similarity of user interest ontology. To each itemset X(X?I), if X have vertical weight vi, X have vertical weighted support )(sup Xv ,   v  n  i ii v N  XCountv X ? == 1 ))(()(sup                  (4)  Where, Count(Xi) is the amount of itemset X that have vertical weight vi, Nv is the total amount of weighted records.

? == n  i iiv NvN  )(                       (5)  Where, Ni is the total amount of records that have vertical weight vi.

To an itemset X, if X have vertical weighted support no smaller than minimum vertical weighted support, X is a vertical frequent itemset. Otherwise, X is a non vertical frequent itemset. If the rule X ? Y has vertical weighted support no smaller than minimum vertical weighted support, and has vertical weighted confidence no smaller than minimum vertical weighted confidence, it is strong rule.

b) Horizontal weighted support Give each domain ontology concept ij in I={i1, i2,?,im} a  horizontal weight hj, ip ? X, p={1,2,?,m}. The horizontal weighted support is )(sup Xh ,  )sup()( 1)(sup Xh k  X Xi  jh p  ? ?  =          (6)  sup(X) is the support of X, k is the amount of items in X,  hx= )( 1 ?  ?Xi j  p  h k  is the horizontal weight.

c) Mixed Weighted support As above analysis, we can finally get the mixed weighted  association rules in cooperative recommendation. In records set T and itemsets I={i1,i2,?,im}, we first give each record a vertical weight vj, j={1,2,?,n}, and give each item ip a horizontal weight hp, p={1,2,?,m}, h1?h2??hm, then we define the mixed weighted support of itemset X is:  sup ( ) sup ( )m x vX h X=  ( ( ))1 ( )  p  n i ii  p i X v  v Count X h  k N =  ?  = ??            (7) Count(Xi) is the amount of itemset X that have vertical  weight vi, Nv is the total amount of weighted records.  hX is the horizontal weight. To any itemset X, if X has mixed weighted support no smaller than wminsup (minimum weighted support), X is a mixed frequent itemset. If the rule X? Y has mixed weighted support no smaller than minimum weighted support, and has mixed weighted confidence no smaller than minimum weighted confidence, it is strong rule.

4) Minimum support threshold setting Too high or low threshold will reflect the rule mining very  much. Setting the minimum support threshold manually may attempt several times. J. Duan proposes a measure that allows user setting multiple minimum supports [10]. In this paper, we propose a measure that setting minimum supports by controlling the proportion of frequent 1-itemsets. Setting the proportion P of frequent 1-itemsets priori, then sorting all the 1-itemsets (the number is N) by support descending, let the first N*P itemsets are frequent 1-itemsets, the support ensure that result is minimum support.

5) The improved weighted association rules mining algorithm  The Apriori algorithm [11] is the most typical one in association rules mining. On the basis of Apriori algorithm, and consult [12][13], we propose the Mining Weighted Association Rules for Cooperative Recommendation algorithm (MWARCR). The pseudo code of algorithm shows in Fig. 4.

MWARCR Algorithm Input: (1)A databases D, in which each record ri has its weight vi and each item ij has its weight wj;  (2)Two threshold values: wminsup and minconf.

Output: Weighted Association Rules.

size = Scan(D); C1= Generate_C1(D); L1={c?C1|supm(c)?wminsup};  for (k=2; k?size; k++) Ck= Generate_Ck(Ck-1); Ck=Prune(Ck); Lk={c?Ck|supm(C)?wminsup}; L= k? Lk; R=Generate_Rule(L);  End Figure 4.  MWARCR algorithm  Function Scan finds the max length of itemsets that are possible in D, and returns the value. Function Generate_C1 generate the candidate 1-itemsets, and compute their mixed weighted support, then keep the mixed frequent itemset into L1.

Function Generate_Ck use candidate (k-1)-itemsets Ck-1 to generate the candidate k-itemsets Ck. Function Prune prune useless itemsets, then use Ck to generate Lk. Function Generate_Rule is used to generate association rules.



IV. EXPERIMENT ANALYSES The experiment is aim to illustrate the principle of  cooperative recommendation system. In the experiment, through mapping user interest information to domain ontology concepts, obtains a user interest model includes user A, B and C. The user interest ontology information shows in Table I.

TABLE I.  USER INTEREST ONTOLOGY INFORMATION  Users User interest ontology A creator B creator, writer, author, illustrator C writer, creator, author  In addition, the utilization time of creator is 3, writer is 4, author is 2, illustrator is 5.

Take B and C as the similar users to A, through computing, the similarity of B to A is 0.685, C to A is 0.78. The weight of concept creator is 0.352, writer is 0.413, author is 0.224, and illustrator is 0.564. Takes the proportion of frequent 1-itemsets as 60%, after association rule mining, we can obtain the recommendation set {writer, creator, illustrator}. In the experiment, we give more concern to the problems that users focused more, and give them higher weight. Through weighting the records and items, we realize the recommendation accurately.



V. CONCLUSIONS We present a cooperative recommendation model, which  takes domain ontology as intermediary, and models user interest through constructing user interest ontology, then uses weighted association rule mining to execute cooperative recommendation. The results empirically prove the strength of our approach.

The model is more intelligent and personalized as the system fully considers the semantic factors and uses the user interest ontology to assist mining. We are currently in the process of building a practical cooperative recommendation system using the proposed approach. Developing a more interactive and intelligent cooperative recommendation system is our future work.

