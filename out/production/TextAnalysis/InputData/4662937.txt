Cooperative Recommendation System Based on  Ontology Construction

Abstract? In the traditional information service system, the lack of service personalization and semantic information influences the intelligence of information service, and decreases the quality of service. In this paper, we propose the cooperative recommendation system based on ontology construction. We first construct domain ontology, and construct user interest ontology by the mapping relations between user interest and domain ontology, and then we study the user interest ontology similarity measures. Through identifying the vertical weight by user interest similarity, the horizontal weight by time novelty, we use the improved weighted association rule algorithm to mining the concepts in user interest ontology, and exploit the user interest model. At last, we realize the semantic-based cooperative recommendation oriented to content.

Keywords: cooperative recommendation; ontology; user interest; semantic

I.  INTRODUCTION For traditional information service system lack of  personalized service and semantic, and the query based on literal matching, a new method that provide service based on content is required. At present, the important work is using new technology to improve service ability and enhance quality of service.

This paper uses ontology construction and association rule mining technology to propose a cooperative recommendation system that oriented to content. The system can deal with semantic in information service, and overcomes the weakness of traditional information service system.

The rest of this paper is organized as follows. Section 2 describes the cooperative recommendation system model.

Section 3 introduces the key techniques of the system. Section 4 is devoted to analyse the principle of the system by an experiment. Section 5 provides some conclusions and discusses future work.



II. COOPERATIVE RECOMMENDATION SYSTEM MODEL The system integrates the advantage of personalized service  and semantic retrieval, constructs user interest ontology by domain ontology, then uses user interest ontology to exploit user interest model, and uses association rule mining algorithm to assist cooperative recommendation and recommends  resource intelligently. Cooperative recommendation system model shows in Fig. 1.

User Cooperative  recommendation module  User interest construct  Domain ontology construct module  User interest ontology  construct moduleadministrator Domain ontology  User interest ontology    Figure 1.  Cooperative recommendation system model

III. KEY TECHNIQUES ANALYSES  A. Domain Knowledge Modeling Based on Domain Ontology Construction Ontology is an explicit specification of a conceptualization  [1]. Domain ontology is the description of concepts and relations between concepts in specific domain [2]. In this paper, we use seven-step method [3] and skeleton method [4] to construct the domain ontology with the assistant of WordNet. The processes of domain ontology construction are as follows: ? Determining the domain of the ontology. ? Constructing the ontology concepts system, including the class and its hierarchical architecture definition, attributes definition, and instances construction. ?  Conceptual specification. ? Using ontology developing tools to assist ontology construction. ? Evaluation and utilization.

B. User Interest Modeling Based on User Interest Ontology Construction We use domain ontology to construct user interest  ontology. Through the mapping of user interest information and the concepts in domain ontology, we transform the user interest into ontology concepts, and then use these concepts to construct user interest ontology. At last, we use user interest ontology to perform user pattern recognition and intelligent recommendation. The process of user interest modeling shows in Fig. 2.

DOI 10.1109/GCC.2008.89    DOI 10.1109/GCC.2008.89    DOI 10.1109/GCC.2008.89    DOI 10.1109/GCC.2008.89       Figure 2.  User interest modeling  1) Using domain ontology to construct user interest ontology  User ontology is an explicit specification of user information, it points out the terminologies and relations of user concepts, and the semantic of terminologies. User interest ontology mainly describes the user interests, and shows the user interest attributes and their relations.

User interest information including: the keywords that user inputs; the bookmark or explorer favorite that user preserves; the pages and documents that user browses; user?s browsing and picking behavior; Web logs or automatic records; the data that user downloads and preserves; the relative information that user inputs or customizes.

The system first mapping the user interest information to domain ontology, then getting ontology concepts set that user interested in. At last, representing user interest in ontology concepts, and generating user interest ontology.

2) Using user interest ontology to mining user interest model  Using the concepts set in user interest ontology through the semantic relations (hypernymy, hyponymy and classes- instances) and neighborhood paths, we divide user interest into several sub interest, and then model user interest.

The user interest is conceptual and semantic descript through ontology concepts set. Then, aggregating the concepts that user interested in according to the adjacency of ontology concepts. At last, the aggregated vectors form the user interest model. For the user interest is changing and adjusting through the process of system and user interaction, the weight of exist interest ontology nodes decays, while new interest ontology nodes increases, user interest should incremental update. Fig. 3 shows the user interest forming based on user interest ontology algorithm.

The user interest forming based on user interest ontology algorithm Input: pretreatment vector Vpre, user interest ontology triple set O={C?R?C?}, interest division upper limit N, the search control threshold of adjacency degree D.

Output: user interest vector set V.

?Forming candidate user interest vector Vi=<>,  i?[1,N-1], adjacency degree control variable d=1; ?while d<=D?scans the user interest ontology orderly, take adjacency degree in ontology O as d to select concepts, infilling into candidate user interest vector Vi orderly, the adjacency degree d adding 1 automatically; ?if pretreatment vector Vpre not null, copy Vpre to VN; ?output all candidate vector Vi that are not null, i?[1,N].

Figure 3.  The user interest forming based on user interest ontology algorithm  C. The Cooperative Recommendation Based on Weighted Association Rule Mining The precondition of the cooperative recommendation  oriented to users is that there is certain degree similarity between persons? behavior, which indicates the users in same interest model may interest in same resource. The cooperative recommendation can help users finding new resource and new interest topics. In this paper, we intend to measure the correlation between ontology concepts and user interest by improved weighted association rule mining algorithm.

Compared with traditional association rule mining, the maximum characteristic of weighted association rule mining is the different treatment to item attributes. The algorithm we proposed forming weighted association rule sets by user interest. Forming weighted association rule sets involves transaction division, item weight setting, weighted support and weighted association rule defining, minimum weighted support threshold setting, and the weighted association rule mining algorithm.

1) Transaction division We take the user?s every login as the basis of division  transaction. User?s login usually has a major problem, although he/she may submit several problems and the problems may belong to different topics, all the problems are the reflection of user interest or demand at that time. When mining association rule, every login can take as one record, and every concept involved can take as an item.

2)  Weight setting a) User interest ontology similarity  Although in same user model, the similarity among each user still has difference. The user?s interaction has difference for the interest similarity is different. The user interest similarity can be measured by user interest ontology similarity.

So we can take user interest ontology similarity as weight. The higher user interest ontology similarity is, the stronger interaction exists, and the higher weight should be given.

When measuring user interest ontology similarity, first could compute the similarity of the concepts involved, and then compute the user interest ontology similarity based on it. The computational process includes two steps:     Step 1: Compute the similarity of concepts. Use Wu- Palmer similarity [5], and based on WordNet to compute.

2 ( ', ) ( , ')  ( , ') ( ', ') 2 ( ', )  c c c c  c c c c c c c c  ? ? ?  ? ? ? ?  ? ? =  ? + ? + ? ? (1)  R????? : is a similarity over a hierarchy ?>=< ,?H , ?  is the root of the hierarchy, )',( cc? is the  number of intermediate edges between a class c and another class 'c  and 'cc ? ={ ''''';'' ccccc ????? }.

For instance, to user interest ontology A and B, if we want to compute the similarity of concept A1 in A and B1 in B, after lookup WordNet to find the nodes they are in, using (1) can compute their similarity.

Step 2: Compute the similarity of user interest ontology. To any user interest ontology A and B, computing the similarity of m concepts in B and n concepts in A using Wu-Palmer similarity, the mean is the similarity of B to A. Shows as (2):    nm  AB  ABSim  m  i  n  j ji  ? = ??  = =1 1  ),(  ),(  ? (2)  b) Time novelty The user interest is timely changing. When updating the  user model, not only adds the latest interest characteristic words, but also adjusts the weight of exist characteristic words.

That is, introduces forgetting factor [6]. The new user interest should consider priori and give higher weight, while the old should give smaller weight to reduce its reflection. In accordance to [3], the weight setting based on time novelty is as follows.

Let the candidate concepts series in domain ontology are (C1, C2,?, Ci,?, Cn), the corresponding time-series in user access list is (t1, t2,?, ti,?, tn). Tmax is the latest time in time- series, Tmin is the oldest time in time-series, the weight of concept Ci can compute as (3):  min max min(1 )( ) /( )j jw t T T T? ?= + ? ? ?          (3)  Where, ? is a constant, which can be defined by experience or experiment. In this paper, we take ? as 0.5.

3) Weighted support definition a) Vertical weighted support  Give each user access record a vertical weight vi (i={1,2,?,n}), vi is set according to the similarity of user interest ontology. To each itemset X (X?I), if X have vertical weight vi, X have vertical weighted support )(sup Xv , and,   v  n  i ii v N  XCountv X ? == 1 ))(()(sup                       (4)  Where, Count(Xi) is the amount of itemset X that have vertical weight vi, Nv is the total amount of weighted records,  ? == n  i iiv NvN  )(                              (5)  Where, Ni is the total amount of records that have vertical weight vi.

To an itemset X, if X have vertical weighted support no smaller than minimum vertical weighted support, X is a vertical frequent itemset. Otherwise, X is a non vertical frequent itemset. If the rule X? Y has vertical weighted support no smaller than minimum vertical weighted support, and has vertical weighted confidence no smaller than minimum vertical weighted confidence, it is strong rule.

b) Horizontal weighted support Give each domain ontology concept ij in I={i1, i2,?,im} a  horizontal weight hj, ip ?X, p={1,2,?,m}. The horizontal weighted support is )(sup Xh , and  )sup()( 1)(sup Xh k  X Xi  jh p  ? ?  =                 (6)  sup(X) is the support of X, k is the amount of items in X,  hx= )( 1 ?  ?Xi j  p  h k  is the horizontal weight.

c) Mixed weighted support As above analyzed, we can finally get the mixed weighted  association rules in cooperative recommendation. In records set T and itemsets I={i1,i2,?,im}, we first give each record a vertical weight vj, j={1,2,?,n}, each item ip a horizontal weight hp, p={1,2,?,m}, h1?h2??hm, then we define the mixed weighted support of itemset X is:  sup ( ) sup ( )m x vX h X=  ( ( ))1 ( )  p  n i ii  p i X v  v Count X h  k N =  ?  = ??        (7)  Count(Xi) is the amount of itemset X that have vertical weight vi, Nv is the total amount of weighted records.  hX is the horizontal weight. To an itemset X, if X have mixed weighted support no smaller than wminsup (minimum weighted support), X is a mixed frequent itemset. If the rule X? Y has mixed weighted support no smaller than minimum weighted support, and has mixed weighted confidence no smaller than minimum weighted confidence, it is a strong rule.

4) Minimum support threshold setting Too high or low threshold will reflect the rule mining very  much. Setting the minimum support threshold manually may attempt several times. J. Duan proposes a measure that allows user setting multiple minimum supports [7]. In this paper, we propose a measure that setting minimum supports by controlling the proportion of frequent 1-itemsets. Setting the     proportion P of frequent 1-itemsets priori, then sorting all the 1-itemsets (the number is N) by support descending, let the first N*P itemsets are frequent 1-itemsets, the support ensures that result is minimum support.

5) The improved weighted association rules mining algorithm  The Apriori algorithm [8] is the most typical one in association rules mining. On the basis of Apriori algorithm, and consult the documents [9][10], we propose the Mining Weighted Association Rules for Cooperative Recommendation algorithm (MWARCR). The pseudo code of algorithm shows in Fig. 4.

MWARCR Algorithm Input: ? A databases D, in which each record ri has its weight vi and each item ij has its weight wj;  ? Two threshold values: wminsup and minconf.

Output: Weighted Association Rules.

size = Scan(D); C1= Generate_C1(D); L1={c?C1|supm(c)?wminsup};  for (k=2; k?size; k++) Ck= Generate_Ck(Ck-1); Ck=Prune(Ck); Lk={c?Ck|supm(C)?wminsup}; L= k? Lk; R=Generate_Rules(L);  End Figure 4.  MWARCR algorithm  Function Scan finds the max length of itemsets that are possible in D, and returns the value. Function Generate_C1 generate the candidate 1-itemsets, and compute their mixed weighted support, then keep the mixed frequent itemset into L1.

Function Generate_Ck use candidate (k-1)-itemsets Ck-1 to generate the candidate k-itemsets Ck. Function Prune prunes useless itemsets, then use Ck to generate Lk. Function Generate_Rules is used to generate association rules.



IV. EXPERIMENT ANALYSES The experiment is aim to illustrate the principle of  cooperative recommendation system. In the experiment, through mapping user interest information to domain ontology concepts, obtains a user interest model includes user A, B and C. The user interest ontology information shows in Table I.

TABLE I.  USER INTEREST ONTOLOGY INFORMATION  Users User interest ontology A creator (access time: 2008-5-8) B creator writer author illustrator (access time: 2008-5-5) C writer creator author (access time: 2008-5-1)  Take B and C as the similar users to A, through computing, the similarity of B to A is 0.685, C to A is 0.78. The weight of concept creator is 0.762, writer is 0.643, author is 0.643, illustrator is 0.786. Takes the proportion of frequent 1-itemsets as 60%, after association rule mining, obtains the recommendation set {creator, author, writer}.



V. CONCLUSIONS We present a cooperative recommendation system, which  takes domain ontology as intermediary, and models user interest through constructing user interest ontology, then uses weighted association rule mining to execute cooperative recommendation. At last, we show the efficiency of our cooperative recommendation system through a simple experiment.

As the system fully considers the semantic factors and uses the user interest ontology to assist mining, it is more intelligent and personalized. For the system is just in developing, the further implementation of it is our future work.

