FP-Growth Algorithm for Application in Research of Market Basket Analysis

Abstract During the process of mining frequent item sets, kind of method that cannot have the frequent candidate when minimum support is little, the production of candidate sets[21. To FP-Growth algorithm, frequent sets are sets is a kind of time-consuming and frequent operation in constructed mainly through FP-Tree. FP-Tree is a the mining algorithm. The FP growth algorithm does not compression expression of the related information with need to produce the candidate sets, the database which the frequent item set in a database. During its realization, provides the frequent item set is compressed to a frequent we realized the entire algorithm by a series of the data pattern tree (or FP tree), and frequent item set is mining by construction which is from low to high.

using of FP tree. For the sake of researching market basket analysis, the Frequent-Pattern is introduced, Visual C++ is II. BASIC CONCEPT applied to design the program to mine the frequent item . .

sets. In view of the frequent K-item set, the various results The associaton rules are an important research content are contrasted, the goods which is sell possibly at the same in the data mining. But the production of frequent sets is time in the supermarket is arranged in the same place. the first step before the production of association rules. In  majority old realizations, people generally used the

I. INTRODUCTION algorithm that is similar to Apriori 3'41. Apriori has a very  big shortcoming, we have to obtain the frequent sets by In the past dozens of years, the development of the production of the candidate sets unceasingly.

economic iS SWIft and violent. Andtnthevlevel .of information enhances unceasingly, so the organizations However, the cost of candidate sets is very prodigious.

and agencies have collected the massive business data FP-Growth algorithm's merit is that it can save time and generally. However we have these massive data does not storage space and use the means of partitioning to avoid mean that we had the rich commercial information. The the large-scale database. To FP-Growth algorithm, we business organization urgent needs to discover the usually construct the frequent sets through FP-Tree. Here valuable information and knowledge from the we only introduce the basic concepts related with FP magnanimous data. The typical example of mining a growth al orithm.

frequent item set is market basket analysis [1], through g discovering the connection between the different Let I {I ,i 2 i m } be a set of items. Let D be merchandise that the customer puts in "the basket", we the task relevant data. And let T be a set of database can analyze a customer's buying habit. This kind of transactions where each transactions T is a set of items discovery of connection may help the retail merchant to such that TcI. Each transaction is associated with an understand that which commodities are also purchased by identifier called TID. Let A be a set of items A the customer frequently, thus this can help them to tanstion T aid. .t A if and on iftemA develop the better marketing strategy. For example, if . -. . . . * ............. . . .'association rule iS an implication of the formA FIB wherecustomers have purchased the milk in supermarket, then a r I how many greatly possibility to purchase the bread (and Ad, Bcd and AnB=.L. The rule AEIB holds in what kind of bread) simultaneously by them. This kind of transaction set D with support s , where s is the information may help the retail merchant to decide what percentage of transaction in D that contain AuB. The rule kind of commodity will be selected to sell and the A FIB has confidence c in the transaction set D if c is the arrangement of commodity space, this determination can percentage of transactions in D containing A which also increase the volume of sales. The goal of market basket contain B. That is: analysis is that we need to analyze the possibility of support(A3B) = P(juB) (1) purchase a kind of product or a group of product confidence(j 3B) = P(Bo) (2) simultaneously in a customer's purchase transaction . * B ( (cross-correlation). The knowledge which is obtained Rules that satisfy both a minimum support threshold from the basket analysis is very valuable. What's more (min_sup) and a minimum confidence threshold when the smallest support is small, to the massive sales (min_conJ) are called strong. An item-set that contains k data, though the mining of frequent item sets, there are items is a k-item-set. The set {computer, two main processes that cost long time during the mining financial_management_ software} is a 2-itemset. The process in market basket analysis. That is the production occurrence frequency of an item-set is the number of of candidate set and repeated sweeping the database many trnaioshtcnanteieme.Tissalokw, times. In view of the above two questions, Han and another people proposed a kind of algorithm about mining simply, as the firequency or support count of the item-set.

association rules based on FP-TreeeFP-Growth, it is a An item-set satisfies min_sup if the occurrence frequency      of the item-set is greater than or equal to the product of min_sup and the total number of transactions in D. If an C FP-Tree item-set satisfies minimum support, then it is a frequent F P-Tree item-set. The set of frequent k-item-sets is commonly For convenience of later discussions, the frequentdenoted-sb Lheket of frequent k-item-sets is commonly items in each transaction are listed in this ordering in thedenoted by L k. rightmost column of Table 111. With the above "How are association rules mined from large observations, one may construct a frequent-pattern tree as  databases?" Association rule mining is a two-step follows. Firstly, the root of a tree is created and labeled process: with "null". The FP-tree is constructed as follows by  (1) Find all frequent item-sets. By definition, each of scanning the transaction database DB the second time.

these item-sets will occur at least as frequently as a pre- For example, the scan of the first transaction leads to the determined minimum support count. construction of the first branch of the tree : <(c: 1), (f: 1),  (2) Generate strong association rules from the frequent (a: 1), (m: 1), (p: 1)>. Notice that the frequent items in the item-sets. By definition, these rules must satisfy minimum transaction are listed according to the order in the list of support and minimum confidence. frequent items. The branch of the tree has five nodes, and  the node (c: 1) is linked as a child of root, then f link to c, and a link to f, and m link to a, last, p link to m. For the  FP-Growth (Frequent pattern Growth) algorithm is second transaction, since its (ordered) frequent item list proposed by Han and so on in 2000. It is a method of <( c:1), (f:1), (a:1), (b:1) , (m:1) > shares a common mining frequent item set that does not have the candidate. prefix< c, f, a> with the existing path < c, f, a, m, p>, the It constructs the data construction (FP-tree) which is count of each node along the prefix is incremented by 1, compressed highly, and it reduces the original business and one new node (b: 1) is created and linked as a child of database. FP-Growth algorithm scans database altogether (a:2) and another new node (m: 1) is created and linked as two times [5]. The first scanning database, we can obtain the child of (b: 1). In general, when we add a new branch the frequent 1-item-set, and the second scanning for a transaction, the count of each node along the prefix database, we can filtrate the database's non-frequent item is incremented by 1 and a new node which is followed the by using of frequent 1-itemset, what's more, FP-Tree is prefix is created and linked. And so on indefinitely, after generated simultaneously. At last, we can obtain the scanning all the transactions, the tree, together with the association rule by using of the FP-Tree. associated node-links, are shown in figure 1.

A. Primitive Transactional Database Table III: A transaction database Let the transactional database have 5 transactions. We TID Items bought (ordered)frequent items  use Table I to illustrate the FP-Growth algorithm for finding frequent item-sets. 100 {fa,c,d,g,i,m,p} [c,f,a,m,p}  200 {a, b, c,f, 1, m, o} [c,f, a, b, m} Table 1: Sample Database 300 {b,f, h, j, o} |f b}  TID IM bought 400 {b, c, k, s, p} [c, b, p} 100 {fja,c,d,ig,i,m,P} 500 {a,f,c,e,l,p,m,n}| [c,f,a,m,p} 200 la,b,c,lf,l,1m, o} 300 {b,f, h, j, o} 400 {b, c, k, s, p} 500 {a,f, c, e, I, p, m, n}  B. Frequent-item-header Table Let the minimum support threshold be 3(i.e., ,<  min sup=3/5=600o). First, a scan of DB derives a list of f: frequent items, (f :4), (c:4), (a:3), (b:3), (m:3), (p:3) (the number after ":" indicates the support), in which items : are ordered in frequency descending order. This ordering T m is important since each path of a tree will follow this order. m:X  Table II: Header Table Cp:2  P ~~Item frequency Figurel. FP-tree c ~~~~~~~~~D.Creating Conditional Pattern-bases by FP-Tree  a. From the beginning of the Header-Table, FP-Tree is b 3 ~~~~~~~~~scanned according to the link of every frequent item, and  m 3 ~~~~~~~~~~allthe prefix paths which reach the frequent item are list.

_________________________3 The conditional pattern-bases generated are summarized  - 270 -    Y.Liu, Y. Guan * FP-Growth Algorithm for Application in Research of Market Basket Analysis  in Table IV. E. Frequent Item-set In the condition pattern base, from the beginning of the  Table IV: Conditional Pattern-bases p-item, every item of the condition pattern base is Head item condition pattern base scanned, and the common content is list, including a  f c:4 individual item and the combination. At the same time, the a cf3 number of the corresponding item is counted and the b cfa:1, cfl, c:. condition FP-Tree is generated. And then FP-Tree is m cfa:2, cfab:1 connected with the corresponding header-able-item, and  cfam:2, cb:1 eventually frequent item-sets are generated. As shown intable V.

Table V: Frequent Item-set  Head Item conditionlpatterl base | codition FP-Tree Frequency ltem  p cfam:2, cb:1 < c:3 > cp:3 m ef: 2,efa : I c:3,.-3,:3,c.-3,a:3,a:3,a:3> cm:3fim:3,am:3,cfm:3,cam:3m cfa:2, cfab:1 <c:3f3,a:3,cf3,ca:3,fa:3, fa:3> f,fam:3,cfam:3  b cfa:1, cf 1, c: < c:3 > cb:3 a cf3 < cf3 > ca:3fia:3,cfa:3 f c:4 <c:4> cf4 c cP cP ciP

IV. APPLICATION AND PROGRAM  A. Application We can simulate the process of FP-Growth algorithm commodity in the shopping basket. We can mine the  by sampling a part of the data (as shown in Table VI) relationship of goods in the original shopping basket.

randomly from the experimental samples. The data in the The results of the FP-Growth algorithm are as shown in table indicate that different customers purchase different Figure 2. In the figure, the mining result of Frequent 1- types of goods, the first column data is the serial number set, Frequent 2-set, Frequent 3-Set, Frequent 4-set and of customers, and each line is the serial number of Frequent 5-set are shown.

I IS Y..1X . (j 144J: PA 14 b 11 ia  M $f 4N k I3 C! aAtl  USAILZ 3 ciI E  iWI iVIJIIN  L 1 IL LI I3 Ii2L IS2I3 1441 C Aw NiH X t E794 3 441. AIS4  LI M3CA00& ii 1134! 177  DS 1444 CA M W E?lSX Xn4S YI IMt4X(.E PitSDt  X I I L If.M 3[H .X 14s X , ..F v 7E 4il (L. I I ( AJJf tk ILI 3 I 1 3 I_ 3 1  9 A 1NN 3 C. J3. L4L1 4:rAP ii i J4IL :1  iai~~i~i~; iea~*&~i 2i r4ijL!3 14h1.Al M An :7 34 172331 A 5 H*1hiOM(IP 3~~" IItKIA']l IA ~ LV> ~ H JUw i tm3tW?? m %72~~ tM~~~~~~~~~~~~Fgr2 Miin Frqun Ite SetW W2 t  ,. i3.= ir A.. .ii #_.. ..4.I [MID CB.IAm'A  NuMb module i adopte(shownEi Figure3). TheAottom i ewr C C 3Cdt-rocsig moduE, usn tools such as UltraEditto  ;ISESI tx . "6V;13tS4S XCs2D08D5M 9 6 t66X  4 1 10 11 21<X- 127 prove te o l d; in te m e it i.lgi  2 0 20DS21 D... 12 prcesig moue, acodn to th FP al4gorthm, for  i.. 10 1 22 34e1 J.1 126 calculating the r i of g s i  X ~~~~ ~ ~ ~ ~ ~ ~~~~~sopn basketi by.. th tol of>Visua C+ Development8  8124 l2 10 1 224 . 126 environment and the upper is o34utput module theuIMWg:C2AS_mLJI MA! T4-4413 T11.7252 iii. -wiiaw (.75-  Figure2. Mining Frequent Item Set  B. Program Table VI: Original Data of Shopping Basket *Module Design  During the process of programming, a three-processing     r -- - - - database is so large that FP-Tree is still not constructed inOriginal Data memory after the database will be broken down into a data subset with frequent 1-set, then mining will be  Processing difficult to be carried out smoothly. The improving idea isData that data subset with frequent 1-set is broken down into  - - - - data subset with frequent 2-set. If FP-Tree is still notF ._ ||FP-Tree constructed in memory after the broken down, the data lFllrle subset will not be broken down until FP-Tree is Conditional constructed. However, such a recursive decomposition of Patt en-bases the database, will cost a lot time, so how to improve the Condit ,onal algorithm for mining smoothly during the above-  FP-tree mentioned special circumstances, further more, without spending lots of time, will be one of the priorities of the future.

ouUtDU Fre. Item-set  Figure3. Flow Chart ACKNOWLEDGMENT  Part of the Code The authors are grateful to Prof. Liang Tao for his FP-Tree code: valuable suggestions to this research, and to Ma Liang for void buildTree(O{ her testing.

int *freqltemP; int *indexList; REFERENCES int count; [1] Fan Ming, Meng Xiaofeng(Translation), "Data Mining: Concepts FILE *fp; and Techniques", China Machine Press, Jan.2008. 146-159 int transSize; [2] Lin Li, Feng Shaorong, Xue Yongsheng, "Mining frequent item int item; sets from several conditional FP_trees", Journal of Computer  mtpath; Engineering and Applications, 2007, 43(5). 175-177..int path; [3] Rakesh Agrawal, Ramakrishnan Srikant. Fast Algorithms for ifstream in(dataFile); Mining Association Rules. IBM Almaden Research Center 650 char str[255]; Harry Road, San Jose, CA 95120.

char cID[6]; [4] JIAWEI HAN, JIAN PEI, YIWEN YIN, RUNYING MAO.

int i,j ,m,readcnt,temp; Mining Frequent Patterns without Candidate Generation: A headerTab.eLink=(FPTreeNode*)malloc Frequent-Pattern Tree Approach. Data Mining and KnowledgeheaderTableLenko(FPTreeNou e*)malloc Discovery, 8, 53-87, 2004.

(sizeof(FPTreeNode) * numLarge[O]); [5] Zhou Qinliang, Li Yuchen, Gong Aiguo, "New algorithms for if (headerTableLink == NULL) { effectively creating conditional pattern bases of FP-Tree", Journal  printf("out of memory\n"); of Computer Applications, 2006, 26(6). 1418-1421.

exit(1);} [6] Liu Naili, Li Yuchen, Ma Lei, "New algorithms for effectively  creating conditional pattern bases of FP-Tree", Journal of Computer Applications, 2005, 25(5). 998-1000.

for (i=O; 1 <numLarge[O]; i??) [7] Qin Liangxi, Shi Zhongzhi, "SFP-Max--A Sorted FP-Tree Based headerTableLink[i] = NULL; Algorithm for Maximal Frequent Patterns Mining", Journal of root = (FPTreeNode) malloc (sizeof(FPNode)); Computer Research and Development. 2005,42(2). 217-223.

if (root == NULL) { [8] Yi Tong, Xu Baowen, Wu Fangjun, "A FP-Tree Based  printf("out of memory\n"); Incremental Updating Algorithm for Mining Association Rules",pritfQou Chinese Journal of Computers, 2004,27(5). 703-710.exit(1);} [9] Chen Anlong, Tang Changjie, Tao Hongcai, Yuan Changan, Xie root->numPath= 1; Fangjun, "An Improved Algorithm Based on Maximum Clique root->parent = NULL; and FP-Tree for Mining Association Rules", Journal of Software, root->children = NULL; 2004, 15(8). 1198-1207.

root->hlink = NULL; freqltemP = (int *) malloc (sizeof(int) * numltem); Manuscript received October 11, 2008. This work if (freqltemP == NULL) { was Supported by National Natural Science  printfQ'out of memory\n"); Foundation( 60873006) and Beijing Natural Science exit( I);} Foundation( 4082009).

indexList = (int *) malloc Liu Yongmei, born in 1979.Received B.A's. Degree  if (indexLstN--ULL) { wor Dexpe ofEetronihe algorithms on DSP. She printf("out of memory\n"); |Group Co. Ltd from 200u3 tt2oO2006 She ha bee a exit(1), } 10 _ |M.A's. Degree candidate in Communication and  CONC~~~~~~~~_lUSIONl llInformation System from Capital Normal  V.COCUINsince 2007.

In this paper, we combine data mining with computer Guan Yong, born in 1966.He has been professor of Capital Normal programming and select some experimental data for University since 2005.

