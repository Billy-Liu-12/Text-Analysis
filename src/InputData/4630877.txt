Evaluating Class Association Rules using Genetic Relation Programming

Abstract? The number of association rules generated during the data mining process is generally very large, that is, an association rule mining algorithm could generate thousands or millions of rules. However, only a small number of rules are likely to be of any interest to the domain expert analyzing the data, i.e., many of the rules are either irrelevant or obvious. Therefore, techniques for evaluating the relevance and usefulness of discovered patterns are required. The aim of this paper is to propose a new method for evaluating the relevance and usefulness of discovered association rules by reducing the number of rules extracted using an evolutionary method named Genetic Relation Programming (GRP). The algorithm evaluates the relationships between the rules at each generation using a specific measure of distance and gives the best set of rules at the final generation. The efficiency of the proposed method is compared with other conventional methods and it is clarified that the proposed method shows comparable accuracy with others.



I. INTRODUCTION  In general, a large number of association rules are gen- erated during the data mining process. That is, thousands or millions of rules could be generated by association rule mining algorithms. However, only a small number of rules might be of any interest to the domain expert analyzing the data. Therefore, some questions arise: which of the extracted association rules is really interesting?, which of them represents real knowledge?. In general, the quality in data mining corresponds to the selection of the most interesting patterns from the set of extracted patterns. Then, the quality of association rules depends on how much the data mining method can extract really interesting association rules to the users. This paper focuses on the evaluation of the relevance, interestingness and usefulness of the extracted association rules by using an evolutionary method named Genetic Relation Programming. The algorithm evaluates the relationships between the association rules at each generation using a specific measure of distance among rules, and gives the best set of association rules at the final generation of the evolution. This reduced set of rules represents the most interesting rules extracted. The main advantages of our proposed method are:  ? It can be applied to any conventional association rule algorithm. In this paper, the conventional Genetic Net- work Programming (GNP) based mining method [1]  Authors are with the Graduate School of Information, Production and Systems. Waseda University , Hibikino 2-7, Wakamatsu-ku, Ki- takyushu, Fukuoka 808-0135, Japan. (phone: +81 93 692-5261; fax: +81 93 692-5261; email: {egonzale, karla taboada}@asagi.waseda.jp, {k.shimada, mabu}@aoni.waseda.jp, hirasawa@waseda.jp ).

is used to generate the set of a very large number of association rules.

? The number of rules in the best set of rules at the final generation is defined flexibly by users because the rules correspond to nodes in the GRP individuals.

The proposed method is evaluated and compared with other conventional methods when it is applied to the classifi- cation problem. That is, the ability of the model to correctly classify new data samples is compared.

The outline of this paper is as follows. Section II reviews the related work. Section III describes Genetic Relation Programming (GRP) in general. In Section IV, how to apply Genetic Relation Programming to association rule mining is described. Simulation results are shown in Section V and Conclusions and future work are given in Section VI.



II. RELATED WORK  It is well recognized that in association rule mining too many rules may appear, and there have been several attempts to improve this situation. One well known research direction is to remove redundant rules using the concepts of closed item sets [2] [3] and representative rules [4], but any improvement is very limited from the viewpoint of data analysts. Clustering of association rules has also been used to obtain a reasonable set of rules [5], but this method has no theoretical foundation like other works. Another way to clarify a large number of association rules is to use a visualization technique implemented in many kinds of mining software. This provides a type of data scape, but still it is difficult to view the details of relationships among rules.



III. GENETIC RELATION PROGRAMMING  In this section, the outline of Genetic Relation Program- ming (GRP) is described. GRP is one of the evolutionary methods for determining the best relations between events.

The basic structure of GRP is shown in Fig. 1. GRP is composed of nodes and their directed or indirected branches.

Nodes represent events and branches represent the relations between nodes. The genotype expression of GRP node is shown in Fig. 2.

Fig. 2 describes the gene of node i, then the set of these genes represents the genotype of GRP individuals. IDi is an identification number, for example, IDi = 1 means node i has the directed branches to other nodes, while IDi = 2 means node i has the indirected branches to the nodes. Fi denote the function of the node i. Ci1, Ci2, . . . , denote the nodes which are connected from node i, firstly, secondly, . . . ,      Fig. 1. Structure of Genetic Relation Programming (GRP) (In case of directed branches).

Fig. 2. Genotype expression of Genetic Relation Programming (GRP).

and Si1, Si2, . . . , denote the strength from node i to node Ci1, Ci2, . . . , or the strength between node i and node Ci1, Ci2, . . . , so on depending on the arguments of node i. E is the set of suffixes of nodes. All individuals in a population have the same number of nodes. The following genetic operators are used in GRP. Crossover operator affects two parent individuals. All the connections or contents of the selected nodes in two parents are swapped each other by crossover rate of Pc. Mutation operator affects one individual. The connections or contents of each node are changed randomly by mutation rate of Pm. GRP can be evolved in order to maximize the fitness function defined by the strength Sij , in other words, the events and their relations can be evolved by using the strength Sij .

There are two kinds of GRP: GRP with directed branches and GRP with indirected branches.

A. GRP with directed branches  In GRP with directed branches, the event is represented by the node, while the relation between two events is represented by directed branches with their strengths.

Fig. 3 is an example of GRP with directed branches. Node i has strength Sij to node j and node j has strength Sji to node i. The strength between all nodes does not have to be defined.

B. GRP with indirected branches  In the GRP with indirected branches, the event is also rep- resented by the node, while the relation between two events is represented by indirected branches with their strength.

Fig. 4 is an example of GRP with indirected branches. The relation between node i and node j has a strength Sij , i.e., Sij = Sji in GRP with indirected branches.

Fig. 3. Genetic Relation Programming with directed branches.

Fig. 4. Genetic Relation Programming with indirected branches.



IV. APPLICATION OF GENETIC RELATION PROGRAMMING TO ASSOCIATION RULE MINING  Generally, many important association rules are extracted and stored in a pool in GNP based data mining method [1]. From these large number of association rules, our aim is to select the most interesting and representative rules.

Therefore, the structure of GRP is as follows:  ? An association rule is represented by a node in GRP.

? The strength between two rules are defined according to  the type of association rules, i.e., association rules with non-fixed consequent, or association rules with fixed consequent.

? Not only the connections, but also the contents of the nodes are evolved, therefore, for example, the GRP individuals having strong strength between a pair of nodes, are obtained.

? The fitness function is defined according to the type of association rules. The fitness function has the following general form:  Fitness = ?  i?E j?E(i)  f(Sij) (1)  where, f : function of Sij E: set of suffixes of rules in GRP.

732 2008 IEEE Congress on Evolutionary Computation (CEC 2008)    E(i): set of suffixes of rules whose strength is defined between rule i in GRP.

A. GRP for association rules with non-fixed consequent  For association rules with non-fixed consequent, GRP with directed branches are used. Fig. 5 shows an example of GRP for association rules with non-fixed consequent. In Fig. 5 the antecedent and the consequent of each rule are represented as nodes in GRP. The confidence of each rule is used as the strength, for example.

The genotype of the GRP in the example of Fig. 5 is described in Table I  Fig. 5. Genetic Relation Programming for association rules with non-fixed consequent. (GRP with directed branches)  TABLE I  GENOTYPE OF GRP FOR ASSOCIATION RULES WITH NON-FIXED  CONSEQUENT  NodeID NodeFunction C1 C2 S1 S2 1 A 2 3 0.9 0.3 2 BC 3 - 0.8 - 3 K 2 4 0.7 0.4 4 M 1 - 0.6 -  B. GRP for association rules with fixed consequent  Association rules with fixed consequent are mainly used for classification.

For association rules with fixed consequent, GRP with indirected branches are used. Fig. 6 shows an example of GRP for association rules with fixed consequent. In Fig. 6 the antecedent of each rule is represented as the node in GRP.

The distance between the nodes is used as the strength.

The genotype of the GRP in the example of Fig. 6 is described in Table II  C. Fitness function  In this paper our interest lies in GRP for association rules with fixed consequent. Therefore, the fitness function of each GRP individual is defined as follows:  Fig. 6. Genetic Relation Programming for association rules with fixed consequent. (GRP with indirected branches)  TABLE II  GENOTYPE OF GRP FOR ASSOCIATION RULES WITH FIXED CONSEQUENT  NodeID NodeFunction C1 C2 C3 S1 S2 S3 1 AB 2 3 4 1.5 1.8 2.5 2 ABC 1 3 4 1.5 2.6 3.2 3 B 1 2 4 1.3 2.6 2.7 4 SK 1 2 3 2.5 3.2 2.7  Fitness = ?  i?E  di (2)  di = ?  j?E(i)  d(i, j) , (3)  where, d(i, j) is the distance between node i and node j.

The fitness function evaluates the GRP individuals so that  the distances between nodes in GRP are maximized. It is our interest to find association rules far away each other as much as possible, because we would like to eliminate the rules near each other, as they are redundant or irrelevant.

D. Distance  The distance between node i and node j denoted by d(i, j) is described as follows:  d(i, j) is the number of records in the database where the satisfaction of rule i and the satisfaction of rule j do not coincide.

As an example, consider Table III and the following association rule i and the association rule j.

TABLE III  EXAMPLE OF DATABASE  A B C D E F Class  1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1  Rule i: ABE ? Class1 Rule j: CDF ? Class1.

2008 IEEE Congress on Evolutionary Computation (CEC 2008) 733    The distance d(i, j) between rule i and rule j is calculated as follows. The number of records that satisfy rule 1 and do not satisfy rule 2 is 1, that is, tuple 1. On the other hand, the number of records that satisfy rule 2 and do not satisfy rule 1 is 1, that is, tuple 2. In addition, the number of records that satisfy both rules is 0 and the number of records that do not satisfy either rule 1 or rule 2 is 1, that is tuple 3. Therefore, the distance between rule i and rule j is 2.

E. Genetic Operators  In order to find really important association rules candi- dates, the function of the nodes in GRP may be changed to another one. It is possible to realize the above effectively by GRP genetic operations, because mutation and crossover will change the connections or contents of the nodes. Three kinds of genetic operators are used: crossover, mutation-1 (change the connection of nodes) and mutation-2 (change the function of nodes).

Fig. 7 is an example of the crossover operator. Two parents exchange the contents of the selected nodes and generate two offspring. In the example, the contents of nodes 6 and 7 are swapped each other by crossover rate Pc. Fig. 8 is an example of the mutation operator. One individual generates one offspring by mutation-1 or mutation-2. In the example, for mutation-1 the connection of node 4 is changed randomly by mutation rate of Pm. For mutation-2 the contents of nodes 1 and 7 are changed randomly by mutation rate of Pm.

At each generation, individuals are replaced with new ones by a selection rule. The individuals are ranked by their fitnesses and the best individual is preserved for the next generation. Top one third individuals are reproduced for the next generation, using crossover and mutation. These operators are executed for the gene of the nodes of GRP.

Fig. 7. Crossover example  This procedure is demonstrated more concretely using 120 individuals at each generation.

? Selection. Elite selection is used in order to preserve the best individual in the current generation for the next generation.

Fig. 8. Mutation example  ? Crossover: crossover we used is the uniform crossover.

Nodes are selected as the crossover nodes with the probability of Pc. Two parents exchange the gene of the corresponding crossover nodes. 40 parent individuals for crossover operation are divided into 20 pairs of parents and new 40 offspring are produced.

? Mutation-1: Mutation-1 operator affects one individual.

The connection of the nodes is changed randomly by mutation rate of Pm1. The 40 parent individuals for mutation-1 reproduce new 40 offspring.

? Mutation-2: Mutation-2 operator also affects one indi- vidual. This operator changes the functions of the nodes by mutation rate Pm2. New 39 offspring are reproduced from 39 parent individuals by mutation-2.

F. Flowchart of GRP  Fig. 9 shows the flowchart of GRP. The initialization of the GRP is carried out using the association rules generated by GNP and stored in the pool. That is, for the first GRP population, each individual is generated assigning randomly the antecedent of one association rule to one node. It is ensured that all nodes within one individual are different.

The evaluation of the individuals is carried out according to their fitness values. Then, reproduction of the individuals are carried out using genetic operations in order to generate a population for the next generation. This process is repeated until the last generation is reached.

G. Classification with GRP  The classification methodology described in [1] is used to evaluate the accuracy of our proposed method, i.e, the effectiveness of selecting a small number of really important association rules.

1) Total(C): compute the total number of rules satisfying the class Z=C in the classifier. (C = 0, 1, 2 . . . K).

2) predict(C): compute the number of rules in the clas- sifier, whose antecedent coincides the items of the new data and satisfy the class Z=C (C = 0, 1, 2 . . . K).

3) score(C) = predict(C) Total(C) (C = 0, 1, 2 . . . K).

734 2008 IEEE Congress on Evolutionary Computation (CEC 2008)    Fig. 9. Flowchart of Genetic Relation Programming.

4) Predict in such a way that the new data belong to the class having the highest score.



V. EXPERIMENTAL RESULTS  Our proposed method was tested on the database cleveland from UCI ML Repository [6]. The cleveland dataset has two classes for prediction. It consists of 31 attributes and 267 records. The last attribute defines the class.

Fig. 10. Schema of the simulations procedure.

Fig. 10 shows the procedure used for simulations. The dataset is divided in ten parts in order to do 10-fold cross validation. The training set and the test set are generated randomly from the dataset. Using the training set, the con- ventional GNP based mining method is applied to obtain a pool of good number of association rules for each Class i. There are only Class A and Class B in our dataset.

GRP is used to find a number of the best association rules for each Class from this pool. This number is defined by  supervisors. In this paper, the number of best association rules is 20 experimentally. On the other hand, the association rules extracted by GNP are ordered according to their ?2 [1] values and the top 20 rules are selected from the pool. Finally, the classification accuracy of the best 20 rules obtained by GRP is calculated by using the test set and compared with the top 20 rules obtained by GNP and other methods.

The experiments were divided in two parts. In the first part, the performance of GRP is evaluated. In the second part, the classification accuracy is compared among GRP and several other various methods including conventional GNP.

All algorithms were coded in Java language. Experiments were performed on a 600MHz Pentium PC with 512M main memory, running Microsoft Windows XP.

A. Performance of Genetic Relation Programming  The association rules extracted by the conventional GNP based mining method were used to train the GRP for each class of the dataset. That is, class association rules are extracted for each class using the conventional GNP based data mining method. The performance of the GRP is evaluated changing the number of branches of the nodes of the GRP individuals. Average fitness values and processing time are compared. The population size of GRP individuals is 120 . The number of nodes in each individual is 20.

The conditions of crossover, mutation-1 and mutation-2 are Pc = 1/5, Pm1 = 1/3 and Pm2 = 1/5, respectively. The terminal condition is 100 generations.

Fig. 11. Average fitness values when changing the number of branches of nodes.

Fig. 11 shows the average fitness values when changing the number of branches of the GRP individual. It is shown that the fitness improves when the number of branches increases because di in Eq. 3 is the sum over j ? E(i) and because when the node has more branches, there are more possibilities to find the branch with larger strength.

Fig. 12 shows the fitness value of the best individual at each generation. Full branches are used in all GRP individuals. It is shown from Fig. 12 that the fitness value increases as the generation goes on, and that, at the 30th generation it is possible to obtain the best individual.

Fig. 13 shows the average processing time when we change the number of branches of GRP individuals. It is  2008 IEEE Congress on Evolutionary Computation (CEC 2008) 735    Fig. 12. Fitness values of the best individual.

Fig. 13. Processing time when changing the number of branches  found that when the number of branches increases, the processing time increases because of the increase in the complexity of the network structure.

It is one of the features of the proposed method that we do not have to consider all the branches between nodes in order to save the processing time of GRP.

B. Classification Accuracy of Genetic Relation Programming  The classification accuracy is compared with other known methods using the k-fold cross validation method. In the proposed method, the connections to all nodes (full branches) are used. The procedure of k-fold cross validation is as follows: 1) The initial dataset is partitioned into k subsets.

2) Training and testing are iteratively performed k times. 3) The accuracy is estimated by  Accuracy = Number of samples correctly classified  Total number of samples (4)  In this experiment, k was set to 10. Therefore, 10-fold cross validation was performed on the dataset and the results are given as their average.

When evaluating the classification accuracy of the con- ventional GNP based data mining method, the association rules extracted were ordered according to their ?2 values and the top 20 rules were selected to evaluate the classification accuracy. Class association rules are extracted using the conventional GNP based data mining method of each class.

Table IV shows the comparison of the classification ac- curacy using different methods. The results for C4.5.[7] Ripper[8], CBA[9], CMAR[10] and CPAR are taken from [11]. The results show that the proposed method has com- parable accuracy with conventional models. Especially, it is remarkable that GRP method (GRP with GNP) is comparable with conventional GNP method without GRP, even when top 20 rules with the highest ?2 values are not used.

TABLE IV  COMPARISON OF CLASSIFICATION ACCURACY WITH OTHER METHODS  Method Accuracy  C4.5 78.2% Ripper 82.2% CBA 82.8%  CMAR 82.2% CPAR 81.5%  Conventional GNP 84.03% GRP with GNP 84.33%

VI. CONCLUSION AND FUTURE WORK  A new method is proposed for selecting really important association rules. The experimental results show that  ? Application of GRP to assotiation rule minig is useful to find the best set of a small number of association rules after an evolutionary process.

? The proposed method outperforms compared to the conventional methods for classification.

For future work, we plan to extend the proposed method to select really important association rules with non-fixed consequent using the GRP with directed branches.

