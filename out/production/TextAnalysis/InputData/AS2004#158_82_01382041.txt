<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings

Abstract: A distributive calculating architecture is presented to realize data mining emciently. The architecture is a hierarchical computational method from the wnception, which stores the information in every sub-node with the ideas of database partition, a united center distribute unit can be responsible for the wllecbing and maintenance of the information in every sub-node, by the scan of database, information is distributed to ditferent nodes, this architecture can maintain a global set enumerate tree, the loeal large item-sets can be constructed by using any effective algorithm, it mainly solves the problem of highly effective data distribution and data skew, the detailed explaining and theoretical proving of the calcnlating architecture is given, and how to solve the data skew problem highly and effectively is discussed aLw in this paper. The partial implementation of this algorithm shows the correctness and feasibility, the calculating architecture can be used for distribute database and most applicable for distribute calculation, which can be used in highly and effectiYely data mining in distributive and parallel environment.

Keywords: architecture 1. Intruduction Data miniug; large item-sets, data skew; calculating Data mining is a new technology which is arisen in the mid 1990s, which is widely used in finance, credit insurance, process control, quality supervising, engineering and scientific data analyzing, target characteristic mining in militaq information system, as well as the mining of the state association rule, etc. data mining is combined product of many disCiplines and technologies I?. In 1993, R Agrawal put forward the definition of association rule mining fxstly 12?, and also provided AIS method of calculating which is based on several times scans of database. With the fast development of large database L31, huge amount of data have been stored in computers. But the existing database systems do not provide users with the 0-7803-8403-2/04/$20.00 a 0 0 4  IEEE necessary and effective tools to capture all stored information easily. Hence, automatic knowledge discovery techniques have been developed to capture and use the voluminous information hidden in large database [??. In 1995, the first international academic conference of knowledge finding and data mining was held in Canada.

Since then because of the advantages of feasibility and understanding easily of the association rule, it has owned the widely concern and deeply research, discovery of association rules is an important class of data mining whose ? aim is to capture the co-occurrences of item-sets, the most important thing to do is to find the large item-sets effectively, because this is time-consuming and will finally decide the efficiency of algorithm 16.71.

Now the main study is emphasized on how to find the large item-sets with more and more few times. However, how to obtain accuracy of the association rule and efficiency became the key problem [*?. In such a prerequisite research work of this paper is put forward the calculating architecture of the distributive data mining in    calculating architecture of the distributive data mining in details, the purpose of founding is in the hope of providing a united calculating stage and decrease the communication cost among the panel points at most and maintain the good quality of extending, so as to can be used in supercomputer or microcomputer environments, the explaining and theoretical proving of the. architecture are given in details, the corresponding algorithm based on this architecture can be found in Ref.[9]. According to the ideas of da!zhase partition, uses the dynamic generation of set enumerate tree.

dramatically deduced the YOs, at the same time uses controller to assign transactions randomly to resolve the data skew in the database, it is proved that the calculating architecture have very good flexibility and extensibility.

2. Distributive architecture 2.1. Calculating architecture analysis In definition, the distributive architecture is a hierarchical computational method, which stores the 4? 26-29 August 2004 information in every sub-node with the ideas of Partition database, a united center distribute unit shall be responsible for the collecting and maintenance of the information in every sub-node, but the concrete algorithm in each part is not fixed, different algorithm shall be used in different parts, this architecture can be used in parallel and distributive environment. It mainly solves the problem of highly effective data distribution and data skew, with the thoughts of mnverse cluster and convese Hash, the close item-sets shall be separated. By the scan of database, information shall be distributed to different node, this architecture shall maintain a global set enumerate tree, the local large item-sets can be constructed by using any effective algorithm, the architecture is shown in Fig.1. The following provides definitions of the required concepts.

PI LTI P2 LTZ Pn LTo nu I I 1 Figure 1. Calculating architecture Define 1. Data partition P ED refers to any a non-vacant subset of transaction database D, it can?t be crossed to any two different data partitions, namely P i n P j = O ,  i#j.

Define 2. Local support of the item-sets (support of item-sets in partition P) refers to the rate of containing transaction of the item-sets in data partitions P and total transaction in partitions, wbich is written supportdX), namely Define 3. Local large item-sets (large item-sets of partition P)  refers to the support in data partition P is over the non-vacant item-sets of minsupport minsup by users defined, L: is denoted the local large item-sets of the suppoftdX)= II / f  E P I X c r )  I1 I II /t EP/ II .

length k, namely L:=[X 1 X J A  II X I1 =KAsup;ortp ( X )  2minsupJ.

All the large item-sets in partition P can be written Where K is the length of the longest large item-set in partition R  Define 4. The support of item-sets X support (X) is the rate of appearance times in transaction database D of the transaction f of item-sets X and total of the transaction in D, namely suppor~ CY) = /I [ t E D ! X G f )  I1 / I1 [ t E D )  I1 Defme 5. Large item-sets refers to the non-vacant set of minsup which is over user?s definition, Lk stands for the large item-sets of the length k, so all large item-sets can be written L=ui=,,2 ,..., L i ,  namely L E [ X  1 X d A  II X II =kAsupport ( X )  3minsup) Where CI-Cn denote the data transfer channel, PI-Pn    Where CI-Cn denote the data transfer channel, PI-Pn denote processor(tightly coupled)or single board computer(loose1y coupled). LZi-LTn d6note local set enumerate tree.

2.2. Algorithm routine LP= Ui.,,2 ..... *LP The core of distributive calculation architecture is distribute unit DU, the detailed algorithm routine is: (1). Transaction read and distribute unit(TRDU) firstly create data transfer channel CI to Cn, according to the number of processor or available single board computer, which shall be responsible for all kinds of initial work including the relations between C1 and P I C 2  and P2,Cn and Pn; start the initial global set enumerate tree of information control and management unit or other database structure (GT); connect with transaction database(TDB) and make a preparation for read transaction database, because TDB can be concentrated or distributive also.

According to the number of processor can partition database, and according to the number of internal memory of every processor, the way of data process of sub-node can be decided, if the total internal memory is enough, the partition can be put in it, otherwise the generated dynamically method of local set enumerate tree (LT) can be used.

(2). Start function Decide-Receive-Node( ), according to the different initial variable which handle data skew stratagem, transaction in database can be read in order, and distribute every transaction to different processor, so as to realize load balance and solve data skew. During read the database, large item-sets K-is created and is inserted in GT.

(3).  Pi solves Its own transaction respectively, if all the transaction may be put in internal memory, effective algorithm shall be chosen to create local large item-sets; otherwise transactions shall be buffer stored' in local diskette, the final local large item-sets can be created after the reception of all transactions from TRDU.

(4).ICMU can be responsible for the data communication among every node, meanwhile it must maintain global set enumerate tree(GT), which can communicate with ICMU in the process of every node is managed or after it is completed, which shall be decided by different realizing strategy. Every node can be transfer to ICMU after obtaining a local large item-sets K-, ICMU merge all the local large item-sets K- and is inserted to GT, the method of forecast border for item-sets support of ordinal set enumerate tree shall be instruct every node that whether it is necessary to search for some sets. Every node can also transfer the whole enumerate tree to ICMU after generating the whole local large item-sets, E M U  shall be responsible for the merge all local large item-sets enumerate tree and generating global large item-sets enumerate tree.

3. Architecture analysis  3.1. Explaining architecture The concept of hierarchical calculating of the distributive calculating architecture can be explained in Fig.2. Corresponding with every node, data processing layer shall be responsible for the basic work of local large item-sets, which is the practical working layer of distribute architecture. Corresponding with DU of calculating architecture which is produced in the large item-sets of distributive association rule, data controlling layer shall be the controller and coordinator of the whole distributive process, data accessing layer shall be used to store practical data, meanwhile data shall be distributed to every end point node to being processed. Data physical accessing layer is corresponded with database management system, the only function of the architecture can be to provide original transactions stream to data distributive layer effectively.

transactions stream to data distributive layer effectively.

Proceedings of.the Third Intemational Conference on Machine Leaming and Cybemetics, Shanghai, 26-29 August 2004 Data control layer U I I Data access laver 1 ~~~ ~ ~ Figure 2. Concept of architecture The distributive layer architechlre is shown that different layer which is not the pure clientlserver concept, among which data controlling layer is the most important, it shall coordinate with every node and engage data mining, finally it needs to collect the result of partition data mining and get large item-sets, then the final association rules can be obtained. Data physical accessing layer can use existing macro-database management system, the effective methods of knowledge discovery in databases and management.

Both distributives and centralized can provide original transactions stream for data managing layer. The concept of distributive layer shield the concrete method of every layer problems, hence, according to different layers, different effective algorithm can be developed. After data partition, local large item-sets may be created respectively, the final global large item-sets shall be created from the join of all of the local large item-sets, namely, the join of local large item-sets is the super-join of the global large item-sets, 3.2 Theoretical prove The conclusion is correct, it can be proved based on the following theorem.

Theorem: Global large item-sets is complete through the distributive calculating architecture.

This formula can be formalization described, it shall transaction database is D, the min-support minsup is defined by client, P I ,  P2. -., . . .P.  is a partitioning of D, namely,D=PIuP2u ... uP.Pj#0(i=1,2;-,n, andp in Pj=O(i#i). To any a item-set A, assumed A is a large item-set of D, A is also a large item-set in partition at least.

Prove: The number of transaction of item-set A included in D is N, the large item-sets is L, the number of transaction included in item-sets A in partition Pi is Ni, the large item-sets in Pi is Lj, the total of the transaction in D is ND, the toral of transaction in partition Pi is Npi. The counterevidence is used to prove the above theorem, it is supposed that item-set A is a large item-set in D, while in any partition it is not large item-sets.

It shall be stated as AEL, but AaLi(i=1,2;-,n), which can be obtained from the definition of the large item-sets.

AaL, (i=l,  2, -., n) 3 % &lt; IllillSUp A 3 &lt; dlSUp A "' A &lt; NP, NE. % minsup 3 NI&lt;Npl.minsup A Nz&lt;Nn"insup A *.. A N.&lt;Nm' minsup -N,+Nz+ .*. +N.&lt; (Npl+Nn+ .** +Np, , )" in~~p N &lt; ND,"insup &lt;minsup ND AeL It is pmved that the result is contradiction with the above hypothesis of AE L, so the conclusion shall be right.

29 August 2004 item Pointer of father 4. Examples analysis and discussion 4.1. The main data structure which This paper provides a concrete example by algorithm realizing, the generating algorithm of dynamic trees is realized based on the operation system of Ite1486 and Free BSD4.2, the partial realizing of algorithm is shown the    BSD4.2, the partial realizing of algorithm is shown the accuracy and feasibility of the algorithm. Testing data of algorithm is come from the generating procedure of algorithm given in Ref.[6], data structure used in algorithm mainly includes the follows as..

(1). Record structure of transaction database 1 Client I Transactions I Transactions I Item list I _ _ item-sets right brother I list Pointer of Pointer of left brother Left brother .

1 code I code 1 item (2). Node structure of dynamic tree I Number of I Support of I Pointer of I Item I transaction n a g  of item-set s ...

S list Item-sets I total ...

3). File structure of large item-sets.

Number of I Flag of I Item-set I total I ... 1 item-sets I list ...

of all the transaction which are solved by this node; item-sets flag'shows that the closely followings is some large item-sets, if it is the 2 large item-sets, then the domain is 2; the total shows the number of large item-sets; item listing is the large item-sets listing, the width of every item-sets is specified by item-sets flag, the quantity is specified by the total domain.

4.2. Generating dynamic set enumerate tree Supposing the transaction allocation unit distribute the record to a node P, when P is receiving node, it transfers a record type to a tree node type, then insert this node in a created enumerate tree, all received records can be denoted as the node listing in Tablel.

Tablel. Nodes list Number of item support item list 5 0 SRIJMZ _ _ 4 0 Q W L 4 0 SUZL 3 0 Q= 5 0 RUZKL 3 0 ZKL 6 0 SNMSKL 4 0 NSZK 3 0 SNM 4 o // 4 0 RUKL The final tree structure created is shown in Figure3.

I 5 I 1 k R W M  3 1 2  I S U Z W  3 I 2  ISNh4t 61llSNM SKL I Figure3. Generating tree structure 4.3. Calculating the support of item-sets From the description of algorithm, the -K large item-sets can be created in the process of obtaining every transaction in node, a candidate large item-sets can be obtained by using the generating algorithm of candidate Spriori item-sets, then the general support of item-sets can be obtained by using created enumerate tree. For example, item-sets (SN),wben it reaches node { S N M J ,  it shall be found, (SN)c{SNM), so it is not necessary to search for the sub-trees of [SUM). According to the generating algorithm, the nodes have covered all the information of super-item-sets, so the support of { S N )  is 2, then go on searching for its right sub-tree, at last the general support of item-sets { S N ]  is 2. Item-sets {RU] ,  when it reaches {STUMZ), {RU)c{SRUMZ) can be known, so the support of { R U )  is 1, then go on searching for the right sub-tree of {SRUMZ), when it reaches { R U J ,  { R U J = ( R U ) is got, then the support of ( R U )  is 1+2=3, since same node has been got, stop searching, at last the general support of ( R U )  is 3.

4.4. Data skew problem The application of distributive architecture must solve some key problems, as communication among nodes, the asynchronous and synchronous choices, realizing methods, efficiency and accuracy, etc. the effective handle methods 26-29 August 2004 to these problems have been mentioned in the research of parallel and distributive system, but it can not be applicable in parallel and distributive data mining, in which data skew is a key problem of distributive environment, the high data skew is meant that the similar or close data is collected to solve, which can cause difference in handle data quantity for different node, the balance of lo@ can be destroyed fmally. The whole distributive environment is synchronous or asynchronous; they need to be accorded at last, so the balance of load can be fully used the capacity of every node to reach the advantaged configuration of system. The influences of data skew in data partition of distributive data mining means the similar or close item-sets is gathered in the specific district, when some node solves the data district, since some item-sets are extremely concentrated in the district, these local item-sets may be taken as the most probably large item-sets, but it is possible that these item-sets are only gathered in the district, and seldom appear in other districts, so as to these item-sets can not be the large item-sets. If there is much conditions like this, $ can lead to rate decreasing of local item-sets which is become general large item-sets, in definition, it means increasing candidate large item-sets and decreasing the efficiency of generating large item-sets. In order to solve these problems, the method of random distributlon can be accepted, it means every transaction can random choose the node of processor. The algorithm of Partition provides a comparison of random distribution and order distribution, which can be seen that random distribution can raise the accuracy of large item-sets of local node greatly, but the system of Partition decides that read transaction and handle transaction is happened orderly, so the random read can improve disc operation greatly. In distributive architecture structure, since the real read of the transaction are indexed in practical database as TRDU order, so the technologies such as block read and buffer memory can be fully used, and random distribution can be carried out in TRDU, separated from physical read of database, then this problem can be solved. But the effects of random read is decided by its randomness, TRDU can read data according to block, if the performance of data skew is the similar data which *pear by the specific rule, and this rule can not he cleared by random stratagem, then random read can not reach the original target. For instance, the similarity of the data shall be showed that similar transaction can be appear every 10 transactions, while random stratagem means the circling distribution among 10 nodes, then every node can get similar transaction.

5. Conclusions The research indicates that fully using of the advantages and characteristics of the distributive architecture can be distributed or paralleled after data partition effectively. The highly effective and brief communication among the panel points can decrease transmitted data quantity among the panel points at most, meanwhile increase finding efficiency, this calculating architecture has strong flexibility and the quality of extending. The final given algorithm realizing data architecture is proved that the calculating architecture have very good flexibility and extensibility, and it can be used in highly and effectively data mining in distributive and parallel environment.

