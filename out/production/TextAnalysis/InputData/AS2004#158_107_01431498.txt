<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">MORSA : An  Algorithm to Discover Association Rules in Image Data using

Abstract Based on preliminary image processing, and content- based image retrieval technology. this paper presents MORSA, an algorithm fur discovering association rules among image data using recurrent items and lure items in images stored in image datu repository. The rare items to be considered ore items that occur infi-eqrrently but that take place concurrently with some speci$c items that happen with frequency above a certain threshold.

1. Introduction With the advancement of the Internet technology and the rapid increase of Web users, many studies have been pursued on multimedia data mining to extract knowledge from multimedia databases. There are various media for organizing multimedia information such as image, video, and sound. Among the various media, the image information is the media that is recognized by human vision and constitutes a large portion of the multimedia information. As the image is more effective than the other form of media in transmitting information, a variety of applications have been developed using image.

Recently, various content based image retrieval techniques( I ,2,3] were proposed for retrieving image data efficiently.

Items that compose image data occur relatively frequent or rare according to image peculiarity, and even if it is a rare item that can have significant information, it can be useful.

In this paper, we propose MORSA, an algorithm for discovering association rules in image database containing image data. The algorithm discovers association rules from recurrent items and rare items in images stored in image data repository. The rare items to be considered are items that occur infrequently but that take place concurrently with some specific items that happen with frequency above a certain threshold.

An algorithm that we propose will be able to apply satellite photos of specific areas, CT photo, or the abnormality of a patient's body.

The organization of the paper is as follows. Section 2 discusses the related works and Section 3 explains MORSA, an algorithm for discovering association rules in image data. Section 4 shows the running example of MORSA and Section 5 discusses the performance results for the proposed algorithm. The conclusion is given in Section 6.

2. Related Works Recently, many research on discovering association rules have been proposed [4,5,6], and some of the proposed algorithms can be applied to image data.

However, it is difficult for these algorithms to discover the peculiarities of image information in image data. Since a specific image item can occur frequently in one image, there is a limit in mining association rules from both image and video data wing existing association rule mining techniques.

An association rule that is discovered by taking into account of the items that occur repeatedly in images is  referred to as an association rule of frequent item sets. In our model, images are represented by transactions, but since identical objects can repeat in an image, the support reflects the count of objects rather than the count of transactions (or images).

3. MORSA : Max Occurrence &amp; Relative    3. MORSA : Max Occurrence &amp; Relative Support Apriori * CONTACT : PHONE +82-2-970-6708, FAX +82-2-977-944 1 ' Dept. of Computer Engineering, Hong ik Universify 72-1 Sangsu-dong, Mapo-gu Seoul, Korea 0-7803-881 9-4/04/$20.00 02004 IEEE. 426 The traditional MaxOccur algorithm discovers association rules on recurrent items in image transaction but does not consider rare items in images. The Apriori and MaxOccur algorithms work as follows. First, in the frequent occurrence item composition step, using one support, the items to be used in the creation of association rules are pruned. Then, after creating rules from the frequent occurrence item sets that satisfy support, the validity of the rules are verified by applying the confidence.

However, in the proposed MORSA algorithm, two supports are estabilished; fiequent occurrence items, which satisfy the first support, and rare items that do not satisfy the first support.

In other words, MORSA(Max Occurrence &amp; Relative Support Apriori), an algorithm based on the RSA algorithm[7], uses relative support between items. It models an image object based on the support that considers significant rare items and also includes the MaxOccur algorithm, which considers frequent items.

3.1 Underlying Conventions The significant rare items and the maximum occurrence frequency are defined as follows.

[Definition 11 Significant rare items Significant rare items are those in the whole image data with frequent items, whose occurrence frequency is not sufficient first support, but rare items that is sufficient second support occur at the same t h e  with specific items.

[Definition 2) Maximum occurrence frequency The maximum number of times of a given object occurs in an image.

[Definition 31 First support Threshold of support that user defines to use in fiequent occurrence items search process.

[Definition 41 Second support Threshold of support that user defines to use in rare items search process.

The first and second support must be established such that the first support is larger than the second support to create duplicate rules and to find rare items.

Also, use relative support that can consider relative frequency between. items and discover association rules.

Relative support is the support between rare items and other arbitrary items that satisfy the second support. It can be used to find the significant rare items.

If image data is composed with an item set I={i,, i2, ... , im)  and if the support of image item i is expressed by supp(i). The definition of relative support, Rsup(i,, i2, ... , ik), between attributes in the semi-frequent item candidate set is as follows.

&amp;up(il, i2, ... , iR) = max(supp(i1. iz, . . . , i&amp;/supp(iJ, supp(il, i2, . . . , i$/supp(iz), . . . , supp(i!, iz, ... , i$/supp(i$) Where reIative support(Rsup) is a value 05 k u p 5  1 that compares the relative support between each items that comprises the image items and the candidate items, selecting the largest value. User specifies minimum relative support that is the threshold of relative support of item to discover rules.

[Definition 61 Minimum relative support Threshold of relative support that user defines, marked by minRsup.

[Definition 71 Semi frequent item set Semi frequent item set is the set of items that satisfy    Semi frequent item set is the set of items that satisfy minimum relative support fiom the item set that satisfy the second support.

Relative support is applied to rare items that satisfy the second support but that does not satisfy the first support. It calculates the relative support during the semi frequent occurrence item search step, and becomes semi fiequent occurrence item if the value of the calculated relative support satisfies the minimum relative support. The higher the value of the minimum relative support means that the user is selecting items with high ratio that occurs at the same time.

The process of using the relative support and maximum occurrence item frequency in MORSA is shown in Figure 1. Each process is repeated until it can no longer produce candidate items.

3.1.1 Method of creating candidate item set Candidate item set creation must be able to compose candidate item set including rare item.

Elements that satisfy the first support are the same as the MaxOccur algorithm. Composition of candidate item counts the support for all items in the database, and divides into 1-candidate item set, C, for frequent occurrence item which satisfies the first support and candidate item set, NCI of rare item set that satisfy the second support but not satisfying the first support.

Only, morsa_gen considers both the frequent occurrence item and rare item.

[Definition 51 Relative support fM CWddate data LI c hsuaor aascdam F&amp; that Ik1UIB m imn mi C d U m &amp; W l l (htWlUw0 iraquncy Figure 1. Frequent item and rare item search process 3.2 MORSA Algorithm The MORSA algorithm was designed to extract frequent items that occur repeatedly in image data and also.rare items in the whole image that occur with high ratio relative to specific items using the second support and minimum relative support.

Fk of the MORSA algorithm is the same as in the MaxOccur algorithm. In addition, NFFk's search process was omitted in MORSA since the process is the same as in MaxOccur except for the creation of 2-candidate items NFk and NFFk.

The MORSA algorithm is shown in Figure 2 and the variables and functions used are shown in Table1 .

Table 1. Variables and functions used by MORSA ~~ D : Database C, + { 1 -candidate item set and support) F, + { 1-frequent item set and support) M * {In 1-frequent item set's Image maximum occurrence frequency) NFi 6 {Rare item that do not satisfy first support but satisfy second support) for each item E F, Fk+ MaxOccur for all candidates nc E NC, nc.suppar1 + object-based-support(nc) ifncsupport 2 Supportz { for each item ik in nc { nc.Rsup(il, i2. ... , id = max(supp(i1, i2, ... , i$/supp(iI), supp(il, iz, . . . , i$/supp(id. . . . , supp(ii, i, ... , i$/supp(i$) ifnc.Rsup 2 minRsup NFk=Jnc E NC,lnc.&amp;up2 minRsup)    NFk=Jnc E NC,lnc.&amp;up2 minRsup) object-based-support (ne) return (nc count of&amp; / i 2 all transaction from t set subset number of k item) morsaxen(P, QJ in T Figure 2. MORSA Algorithm 4. Running Example of MORSA Image ID 1 2 This section explains the running example of the MORSA algorithm.

The first support is set at 40%, the second support at 20%, and the minimum relative support is set at 0.7, to discover association rules that consider significant rare item and maximum occurrence frequency.

Without loss of generality, we use the MaxOccur algorithm to find the fiequent item set that satisfy the first support. In this section, we only explain how to find the rare item set.

Objects (01, 0 3 ,  0 3 ) P 3 J  0 4 1 Objects {OZ. 06) {a, OI I support of items and maximum occurrence Max. Occurrence f 0 2  I support I t 10 4 Table 3. Rare item set that satisfy the second support 7 I-candidate item set NCI and M 1 0 bi ec ts I s UDDOrt I MZL Occurrence I Table 4. 2-item set 7 2-candidate item set NC2, NFC2 (a) It creates 2-semi frequent item set consisted of sets of item that uses N C ,  NFC2 and satisfy the second support.

7 2 semi frequent item set NF2, NFF2 (b) I Objects I support 1 NF2 is empty set in 2 semi frequent item set.

Objects support - 0 .  - I  I I I P 2 . 0 3 . 0 4 . 0 4  1 It caIculates the relative support item for NC3 and NFC3 that satisfies the second support to search 3-semi frequent item sets NF3 and NFF3 by using NC3 and NFC3 of Table 5 .

7 Calculate relative support (b) Objects io, 0 3 . 0 4  1 io, 0 3 , 0 6  1 m z ,  0 3 . 0 7  1 io, 0 4 . 0 6  1 Objects [ Rsup I Objects I Rsup {02, 03. 0,) I 313 = 1 I {Oz, 06.07} 1 113 =0.33 ' support    I . .  I 316=0.5 I I 113 =0.33 {Oz,Oj, 0 6 1 3/10 = 0.3 115 = 0.2 113 = 0.33 {Oj&gt; 0 4 , 0 6 1  216 = 0.33 {Uz, U3. 07] {02s 0 4 ,  0 6 1 116 = 0.17 211 0 = 0.2 1/3 = 0.33 213 = 0.67 3f3 = 1 {03&gt; 04, 07)  416 = 0.67 316 = 0.5 4110 = 0.4 3r5 = 0.6 415 = 0.8 1110 = 0.1 213 = 0.67 113 = 0.33 { 0 3 ,  0 6 ,  0,) 216 = 0.33 {Uz, Oa.O,] 7 3-semi frequent item set JIFF3 (c) I13 = 0.33 2f5 = 0.4 313 = 1 {04 06. 0,) 2/10 = 0.2 311 0 = 0.3 3/5 = 0.6 Values greater than the minimum relative support belongs to the semi frequent item set.

213 = 0.67 215 = 0.4 Table 6. 4-item set 7 4-candidate item set N C 4  (a) Objects support Result of calculating the relative support is as follows.

. h o t  frequent item set NFF4 (b) Objects I support This process is repeated until it no longer produces a candidate item.

Through this example, O2 knows that recurrent always occur simultaneously with { 03, 04, 04}, { 4, U,, U,], { 04, 04, O,} although there is rare item that does not satisfy the first support.

Hence, the proposed algorithm can recognize association rule that consider maximum occurrence frequency that satisfy the first support and can consider relative frequency and do inquiry about significant rare item even if they are not included in the frequent occurrence item.

5. Experimental Results and Analysis In this section, various experiments are performed to compare MORSA with the previous association rule discovery algorithms like Apriori, Maxoccur, and RSAA.

We create test images which explain the proposed algorithm and use image, that is segmentized first with random attribute to measure the effect.

To compare the performance and scalability of the algorithms, we set a virtual image that has 15 objects per image and created a different size image set.

For example, by encoding with symbol constant those objects that occur in images such that triangle of red color -+ 01, circle of red color -, 02, rectangle of blue color -+ 0, etc, the test data was created by establishing the production rule to produce the same item up to four times in an image with maximum 50 attributes.

To compare with the proposed algorithm, we use support based on the image transaction for the Apriori and RSAA algorithms since both use support based on the number of transactions. The MaxOccur and MORSA algorithms used support based on the image object.

5.1 Algorithm performance evaluation The test environment used 50,000 images, that is created randomly, and ran performance evaluation of each images 1K 260 281 33 1 511 5K 1,322 1,402 2,133 2,854 -    for the four algorithms.

In the Apriori and RSA algorithms, the minimum support of Apriori algorithm is set at 0.05, and the first support of RSA algorithm is set at 0.05. Applying the support of image transaction base in the MaxOccur and MORSA algorithms, the minimum support of MaxOccur algorithm is set at 0.015, and the first support of MORSA algorithm is set at 0,015.

10K 20K 50K algorithm using PentiumIII 850, 256 MB of memory, Windows 2000, and J2SDK I .4.0 environment.

Table 7. Average execution time by number of images I # of I Apriori I MaxOccur I RSAA I MORSA I 2,714 2,744 4,176 6,129 5,338 5,698 8,573 12,017 13,910 14,882 22,102 32,547 According to Table 8, the lower the support, the execution time increases in the MORSA algorithm.

Figure 4 illustrates the number of association rules discovered by each algorithm in 3,000 images.

The proposed MORSA algorithm use support based on an object just Iike in the MaxOccur algorithm. However, we can confirm the increase in the search performance and the discovery of more frequent item sets in MORSA using two r support and minimum relative support.

association rule number that search in 3,000 images 0 20 40 ao IO0 According to Figure 3, the performance of MORSA algorithm processes on average more than 2,000 images per second.

The difference between MaxOccur algorithm and MORSA aIgorithm is in the discovery of association rules that includes both the rare item and frequent occurrence item.

Figure 4. Search result of frequent item set 6. Conclusions and Future Work This paper proposed MORSA algorithm that discovers association mles in content based image considering both rare item that occur relative to specific items and frequent items considered by various existing I time(msec) I ' 60000 ' 50000 3UO00 I0000 i o I K  5K 10K 20K S O K Figure 3. Execution time comparison Therefore, it can remove unnecessary rule because it has drawn frequent occurrence item and item that satisfy minimum relative support about rare item after dividing the rare item by two support, and it shows that overmatch in performance aspect.

Table 8. Execution time by support (MORSA) (unit msec) 1 # of 10.025 I 0.02 I 0.015 1 0.01 multimedia data mining association rule algorithms.

The experimental results show that the MORSA algorithm is more effective than the MaxOccur algorithm in discovering association rules in image data. The reason is that MORSA is able to process a lot more image transaction given the same amount of time, If the image data to be mined use information providing channels such as images from watch cameras, satellite photos of specific areas, and CT photo or are similar sets semantically, then stronger association rules can be discovered. In this case, it is possible to apply the    can be discovered. In this case, it is possible to apply the algorithm to check the movement of a person, the change of area, or the abnormality of a patient's body.

Future research directions include research on the pruning techniques of candidate items, research on image cognition techniques to create test data tiom source data and the performance improvement of the algorithm to save large memory space resulting from the creation of candidate items.

