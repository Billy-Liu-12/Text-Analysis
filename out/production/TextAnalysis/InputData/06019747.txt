

Abstract?Association rule is an important research topic in data mining and knowledge discovery. Traditional algorithms for mining association rules are built on the binary attributes databases, which has three limitations. Firstly, it can not concern quantitative attributes; secondly, it finds out frequent itemsets based on the single one user-specified minimum support threshold, which implicitly assumes that all items in the data have similar frequency; thirdly, only the direct association rules are discovered. Mining fuzzy association rules has been proposed to address the first limitation. In this paper, we put forward a discovery algorithm for mining both direct and indirect fuzzy association rules with multiple minimum supports to resolve these three limitations.

Keywords-data mining; fuzzy association rules; multiple minimum supports;

I.  INTRODUCTION Association rule is an important research topic in data  mining and knowledge discovery, which is firstly proposed by R.Agrawal [1]. A association rule is formed as A?B, where A and B are disjoint item sets, the support of A?B and the confidence of A?B is no less than a user-specified minimum support and a user-specified minimum confidence respectively.

With the further research on the mining of association rules, it has been recognized that traditional algorithm for mining association rules has three limitations. Firstly, it can not concern quantitative attributes; secondly, it finds out frequent itemsets based on the single one user-specified minimum support threshold, which implicitly assumes that all items in the data have similar frequency; thirdly, only the direct association rules are discovered.

In order to deal with quantitative attributes, R.Srikant put forward crisp set method for mining Quantitative Association Rules [2], further more, A.Gyenesei put forward a fuzzy approach for mining quantitative association rules[3], which first transforms quantitative values in transactions into linguistic terms, then filters them to find association rules by modifying the AprioriAll mining algorithm.

During the discovery of association rules, only the frequent itemsets are considered while all the infrequent itemsets are ignored. Recently, researchers have recognized that some  infrequent itemsets can provide very useful insight view into the data set, and a new kind of knowledge discovery problems called as indirect associations has been proposed [4]. Consider a pair of item x and y, which are rarely present together in the same transaction. If both items are highly dependent on the presence of another itemsets M, then the pair of x and y is said to be indirectly associated by M called as mediator.

The key of mining both of direct and indirect association patterns is to find out frequent itemsets based on the user- specified minimum support threshold, which is used to prune the search space and to limit the number of rules generated.

Just like pointed out with Liu [5], using only a single minimum support threshold implicitly assumes that all items in the data have similar frequencies in the database. This is often not the case in real-life applications. In many applications, some items appear frequently in the data, while others appear rarely. If the frequencies of items vary a great deal, we will encounter the dilemma called as the rare item problem. If minsup is set too high, we will not find those rules that involve rare items in the data. If minsup is set too low in order to find rules that involve both frequent and rare items, it will cause combinatorial explosion because those frequent items will be associated with one another in all possible ways and many of them are meaningless. In order to deal with the rare item problem, Liu [4] extend the existing association rule model to allow user to specify a different minimum item support for each item, which is calculated for each item based on the percentage of its support. This percentage-based approach can improve the performance over single minsup based approaches [4].

However, it still suffers from both ?rule missing? and ?rule explosion? problems because the minimum item support for each item is calculated by its support multiplied with a uniform percentage. If minsup for the item is fixed by setting the percentage value high, the rare itemsets are missed as the minsup for the rare items becomes close to their support, and if minsup for the item is fixed by setting the percentage value low, the number of frequent itemsets explodes. In other words, the association rules model with the percentage-based multiple minimum supports has the same rare item problem with the existing association rule model with a single minimum support.

In order to resolve this dilemma, we use a monotonous  decreasing power function such as x  instead of the constant  percentage to multiply with the support of each item for calculating the minimum item support. By doing so, the difference between the minimum item support for each item and its support will vary in a satisfying way. For the frequent items, the difference is small; for the rare items, the difference is large. Thus, the minimum item support for frequent item is slightly less than its support, and the minimum item support for rare item is much lower than its support. The number of frequent itemsets will not explode; the rare itemsets will not be missed.

In this paper, we propose an approach for mining both direct and indirect fuzzy association rules by integrating fuzzy, multiple minimum supports and indirect extensions to association rules.

The rest of this paper is organized as follows. The definitions for fuzzy direct and indirect weighted fuzzy association rule are given in Section 2. In Section 3, we describe the discovery algorithm for mining direct and indirect fuzzy association rules with multiple minimum supports.

Section 4 presents our primary experimental results. The conclusions are made in the last section.



II. PROBLEM DEFINITION Let I = {i1, i2, ? ,im} be a set of literals called items?W={  w1, w 2, ? , w m } be a set of non-negative real numbers called weights, where wj is the weight of item ij for j=1,2,?, m. Let the database D = { t1, t2, ? ,tn } be a set of n transactions, where each transaction is a subset of I. A non-empty subset of I is called itemset. An itemset containing k items is called k- itemste. The support of an itemset X denoted as sup (X) is defines as the fraction of all transactions containing X in D.

An itemset is frequent if its support is greater than a user- specified threshold minimum support. The minimum weighted support is denoted as wsup.

A. Fuzzy Association Rules Most of discovery algorithms for mining association rules  focused on binary valued transaction data. Since transaction data in real-world applications usually contains quantitative values, traditional association rules for binary valued transactions should be extended to fuzzy association rules for quantitative valued transactions.

Generally, quantitative values consist of numerical values and categorical values. To transform into transaction data format, the domain of quantitative and categorical attributes should be partitioned into disjoint intervals, each of which is considered as a new attribute or term. However, a sharp boundary problem results from the disjoint intervals. In order to solve this sharp boundary problem [3], fuzzy set theory has been introduced in the process of mining quantitative association rules, which results in a new category of association rules called fuzzy association rules [3].

In the context of fuzzy association rules, the support of an itemset can be counted as follows: for every transaction in the transaction database, take the fuzzy logic AND of the membership values of the items under consideration, and summate these numbers. Let the transaction database be D and an itemset X = {x1, x2, x 3, ? , xk} ? I. The support of a transaction t?D to the itemset X can be defined as  ?ki x ttX i1 )(),sup( == ? If we take the fuzzy logic AND as the product, the support  of X from the transaction database D is then defined as  ? ?? ? ?  = ==  Dt Dt  k  i x ttXX  i1 )(),sup()sup( ?  The fuzzy association rules mining algorithm proposed in literature [3] first transforms each quantitative value into a fuzzy set with linguistic terms using membership functions. It then calculates the scalar cardinality of each linguistic term on all the transaction data, and calculate the support of itemset, carry an iterative search approach to find large itemset. Each item uses only the linguistic term with the maximum cardinality in later mining processes, thus making the number of fuzzy regions to be processed the same as the number of original items. The algorithm therefore focuses on the most important linguistic terms, which reduces its time complexity.

The mining process based on fuzzy counts is then performed to find fuzzy association rules from these large itemsets.

B. Indirect Fuzzy Association rules With the further research on the mining of frequent  itemsets, it has been recognized that some infrequent itemsets can provide very useful insight view into the data set, and a new kind of knowledge discovery problems called as indirect associations has been proposed [4]. Consider a pair of item x and y, which are rarely present together in the same transaction. If both items are highly dependent on the presence of another itemsets M, then the pair of x and y is said to be indirectly associated by M called as mediator.

Definition 1: A pair of items x and y is said to be indirectly fuzzy associated via a mediator sequence M, if the following conditions are satisfied:  (1) sup({x,y})<ts; (2) There exists a non-empty set M such that:  (a) sup({x}?M)>=tf, sup({y}?M)>=tf, (b) dep({x},M)>=td, dep({y},M)>=td, where  dep(A,B) is a measure of the dependence between itemsets P and Q.

The thresholds ts?tf and td are called itempair fuzzy support threshold, mediator fuzzy support threshold, and dependence threshold, respectively. We usually set tf >= ts in practice.

In this paper, we use the denotation yx M?  to represent the indirect association rule between item x and y via mediator M, and use the IS measure [6] as the dependence measure for condition 2(b). Given a pair of itemsets A and B, its IS measure can be computed as the following equation:      )()(  ),(),( BPAP  BAPBAIS ?  =  where P represents the probability that the given itemsets appears in the transaction database.

C. Multiple Minimum Supports In multiple minimum supports model, every item ij of the  itemset I={i1,i2,....,im} has been assigned a minimum item support based on its support value sup(ij), denoted as mis(ij),and LS is denoted as least minimum support.

Definition 2: the minimum item support of an item ij is defined as   otherwise  LS ) v(iif      )( )( j  ? ? ? >  = LS  iv imis jj  )sup( 1)sup()(  j jj i  iiv ?=  Definition 3: the minimum support for an itemset X is the minimum of minimum support of the items contained in the itemset, denoted as mis(X).

Definition 4: An itemset X is said to be frequent if ).()sup( XmisX ?

III. DISCOVERY ALGORITHM FOR MINING DIRECT AND INDIRECT FUZZY ASSOCIATION RULES WITH MULTIPLE  MINIMUM SUPPORTS Association rule is an important research topic in data  mining and knowledge discovery. Traditional algorithms for mining association rules are built on the binary attributes databases, which has three limitations. Firstly, it can not concern quantitative attributes; secondly, it finds out frequent itemsets based on the single one user-specified minimum support threshold, which implicitly assumes that all items in the data have similar frequency; thirdly, only the direct association rules are discovered. Mining fuzzy association rules has been proposed to address the first limitation. In this paper, we put forward a discovery algorithm for mining both direct and indirect fuzzy association rules with multiple minimum supports to resolve these three limitations. Notations used in our algorithm are described as Table I.

Our mining algorithm firstly transforms each quantitative value into a fuzzy set with linguistic terms using membership functions. It then calculates the scalar cardinality of each linguistic term on all the transaction data. Each item uses only the linguistic term with the maximum cardinality in later mining processes, thus making the number of fuzzy regions to be processed the same as the number of original items. The algorithm therefore focuses on the most important linguistic terms, which reduces its time complexity. The mining process based on fuzzy counts is then performed to find fuzzy association rules from these large itemsets. The detail of the proposed mining algorithm is described as follows.

Algorithm: MDIFARMMS(Mining both direct and indirect fuzzy association rules with multiple Minimum supports)   TABLE I.  NOTATIONS   Input: A body of n transaction data, each consists of customer ID, the purchased items with their quantities, a set of membership functions and the predefined least minimum support LS, itempair fuzzy support ts, mediator fuzzy support threshold tf, and dependence threshold td; Output: A set of direct fuzzy association rules;  A set of indirect fuzzy association rules; (1) C1 = {candidate 1-itemset}; (2) For each sequence c ? C1 do  )sup( 1)sup()(  c ccv ?= ;  (3) If v(c)<LS mis(c) = LS Else mis(c) = v(c); (4) For the transaction database D, n is the number of  transactions in D, Di is the ith transaction in D; (5) Transform the quantitative value giv of each itemset Ig  appearing in Di into a fuzzy set g  if represented as  )( 2    gl  gl i  g  g i  g  g i  R f  R f  R f +++ using given membership  functions, where Rgk is the kth fuzzy region of item Ig, gk  if is g iv ?s fuzzy membership value in region Rgk,  and l is the number of fuzzy regions for Ig(k=1,2,3,?, l).

(6) Calculate the scalar cardinality of each attribute region  Notation meaning n The total number of transactions in database m The total number of items Di Di is the ith transaction in D, 1? i ?n Ig The gth item, 1? g ?m Rgk The kth region of Ig, 1? k ? | Ig |, where | Ig | is  the number of fuzzy regions for item Ig g iv  The quantitative value of item Ig in Di  g if  The fuzzy set converted from  g iv  gk if  The membership value of  g iv  in region Rgk  countgk The scalar cardinality of region Rgk  maxcountg The maximum count value among countgk values  maxRg The fuzzy region of item Ig with maxcountg  Ck the set of candidate itemsets with k items Lk the set of large fuzzy itemsets with k items Sk the set of non-large weighted fuzzy itemsets  with k items LS The predefined Least minimum support ts The predefined itempair weighted fuzzy  support threshold tf The predefined mediator weighted fuzzy  support threshold td The predefined dependence threshold     Rgk as ? == n  i gk  i gk fcount  .

(7) Find maxcountg= )(1 gkl  k countMAX = , where 1? g ?m and l is the number of regions for item Ig. Let maxRg be the region with maxcountg for item Ig. The maxRg will be used to represent the fuzzy characteristic of item Ig in later mining processes.

(8) Calculate the fuzzy support of a region maxRg (for g=1 to m) sup(maxRg)= maxcountg . Check whether the fuzzy support of a region maxRg, for g=1 to m, is larger than or equal to minimum item support mis(maxRg). If the value of maxcountg is equal to or greater than mis(maxRg), put maxRg in the large 1-itemsets L1. That is L1={ maxRg | maxcountg ? mis(maxRg), 1? g ?m }.

(9) If L1is null, then exit the algorithm; otherwise, do the next step.

(10) Set k=1, where k is used to represent the number of items kept in the current large itemsets.

(11) Generate the candidate set Ck+1 from Lk in a way similar to that in the apriori algorithm[1].

(12) Do the following substeps for each newly formed (k+1)-itemsets s with items (s1, s2, ? , sk+1) in Ck+1: (a) Calculate the fuzzy value sif for of s in each transaction Di as: )(1  s i  n i  s i fMAXf == , and  121 +??= kSi s  i s  i s  i ffff .

(b) Calculate the scalar cardinality of s  as ? == c  i s  i s fcount  .

(c) If counts is not less than the minimum support for itemset s mis(s), Then  put s in Lk+1 Else put s in Sk+1; (13) If Lk+1is null, then do the next step; otherwise, set  k=k+1 and repeat Step 11 to Step 13.

(14) kk LL ?= ; kk SS ?= ; (15) For each itemset X?L Do (16)    For each subset A?X Do (17)       X=X-A; (18)       If sup(X)/sup(A)? miniconf Then (19)         Output A?B; (20)       If sup(X)/sup(B)? miniconf Then (21)         Output B?A; (22)       } (23)    } (24) For each itemset s ? Sk { (25)    x = last_item(S); y = secondlast_item(S ); M = S ?  {x,y}; (26)    if (wsup(x, y)<ts AND dep({x},M)>=td AND  dep({x},M)>=td); (27)    Output yx M? .

(28)    }

IV. EXPERIMENT To test the performance of our proposed algorithm, we have  done some experiments. The computing environment is Intel Core 2 Duo E7500 2.93G(1066M?3M?, memory of 2G, operating system is Windows XP. The algorithm is implemented with C++. The synthetic experiment data set is generated by Assocgen[1] program of IBM Almaden research center. The meanings of used parameters are showed in Table II.

TABLE II.  PARAMETERS  Symbol Meaning D Number of customers(=size of database) C Average number of transactions per Customer T Average number of items per Transaction S Average length of maximal potentially large  Sequences I Average size of Items in maximal potentially  large sequences NS Number of maximal potentially large Sequences NI Number of maximal potentially large Itemsets N Number of items  We set parameters C=10, T=5, S=4, I=2.5, NS =500, NI  =2500, N =10000, total number of customers D=100000, and the generated dataset is named as C10T5S4I25. The membership functions used in our experiment is shown as Fig.

1.

Figure 1.  Membership functions used in experiment  Fig. 2 shows the algorithm executing time variance with least minimum support decreasing from 1% to 0.2%, where the minimum fuzzy confidence threshold is set to 70%, itempair fuzzy support threshold ts, mediator fuzzy support threshold tf and dependence threshold and td are set to 5%, 70% and 80%, respectively. It shows that the algorithm increases with the declining of Least minimum support.

Low  0     1                       6                      11   Middle High  Quantity  Membership function value     C10T5S4I25        1 0.8 0.6 0.4 0.2  Least minimum support  R u n  t i m e ( s )  MDIFARMMS   Figure 2.  Execution times  To examine the scalability of algorithm we increased the numbers of customer D from 50,000 to 150000, with LS=1%.

The itempair fuzzy support threshold ts, mediator weighted fuzzy support threshold tf and dependence threshold and td are set to 5%, 70% and 80%, respectively. The results are shown in Fig. 3. The executing time is increased almost linearly with the increasing of dataset size. It shows that the algorithm has a good scalable performance.

C10T5S4I15         50 75 100 125 150  Number of Customers  R u n  t i m e ( s )  MDIFARMMS   Figure 3.  Scale-up: Number of customers

V. CONCLUSIONS In this paper, we addressed three limitations of traditional  algorithms for mining association rules by integrating fuzzy, weighted and indirect extensions to association rules. In order to deal with the problem that the downwards closure property of the mining association rules is no longer true in the context of mining weighted mining association rules, we introduce an adjusting factor r to generate minimum fuzzy support threshold by multiplying r with minimum weighted fuzzy support threshold. An algorithm for mining both direct and indirect weighted fuzzy association rules by integrating these three extensions. The primary experiments demonstrated that the algorithm is efficient and scalable.

