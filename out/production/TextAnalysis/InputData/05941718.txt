

Abstract- Frequent pattern mining has been a focused theme in data mining research for over a decade. A lot of literature has been dedicated to this research and huge amount of work has been made, ranging from efficient and scalable algorithms for frequent item set mining in transaction databases to numerous research frontiers. Frequent pattern mining (FPM) has been applied successfully in business and scientific data for discovering interesting association patterns, and is becoming a promising strategy in microarray gene expression analysis. As we know, Fuzzy logic provides a mathematical framework that is compatible with poorly quantitative yet qualitatively significant data. In this paper, we have fuzzified our original dataset and have applied various frequent pattern mining techniques to discover meaningful frequent patterns. Also, we have drawn a clear comparison of the frequent pattern mining techniques in the original and the fuzzified data in terms of parameters like runtime of the algorithm and the number of frequent patterns generated. As a result, it was found that the fuzzified set is capable of discovering a large number of frequent patterns and have a better running time capability.

Keywords ?Frequent pattern mining, Fuzzy logic, Apriori Algorithm, FP-growth algorithm, Vertical data format

I. INTRODUCTION Microarray experiments produce gene expression  patterns that offer enormous information about cell function.

This is useful while investigating complex interactions within the cell [1]. Microarrays are used in the medical domain to produce molecular profiles of diseased and normal tissues of patients. Such profiles are useful for understanding various diseases, and aid in more accurate diagnosis, prognosis, treatment planning, as well as drug discovery. Being typically high-dimensional, gene expression data requires appropriate mining strategies like feature selection and clustering [1] for further analysis and extracting meaningful patterns.

Gene expression profiles can be used as inputs to large- scale data analysis, e.g., to discover hidden taxonomies, or to increase our understanding of normal and disease states [2].

The gene expression data from a microarray experiment can be represented by a real value expression matrix, where rows represent genes, columns represent various samples, and each element of this matrix represents the expression level of the particular gene in the particular sample.

Frequent item set mining is one of the fundamental research topics in data mining and is rooted in market basket analysis [3][4]. A frequent itemset is actionable if its support  is greater than or equal to a user specified threshold, called a minimum-support. Or in other words, frequent patterns are item sets, subsequences, or substructures that appear in a data set with frequency no less than a user-speci ed threshold. There are three basic frequent itemset mining methodologies: Apriori, FP-growth and ECLAT, and their extensions. Since there are usually a large number of distinct single items in a typical transaction database, and their combinations may form a very huge number of item sets, it is challenging to develop scalable methods for mining frequent item sets in a large transaction database. Agrawal et al. [5], observed an interesting downward closure property, called Apriori, among frequent k-item sets: A k-item set is frequent only if all of its sub-item sets are frequent. This implies that frequent item sets can be mined by rst scanning the database to nd the frequent 1-itemsets, then using the frequent 1-itemsets to generate candidate frequent 2-itemsets, and check against the database to obtain the frequent 2- itemsets. This process iterates until no more frequent k-item sets can be generated for some k. This is the essence of the Apriori algorithm.

Apriori algorithm suffers from two-nontrivial costs: generating a huge number of candidate sets, and repeatedly scanning the database and checking the candidates by pattern matching. Han et al [4], devised an FP-growth method that mines the complete set of frequent item sets without candidate generation. FP-growth works in a divide-and- conquer way. The first scan of the database derives a list of frequent items in which items are ordered by frequency descending order. According to the frequency-descending list, the database is compressed into a frequent-pattern tree, or FP-tree, which retains the item, set association information. The FP-tree is mined by starting from each frequent length-1 pattern (as an initial suffix pattern), constructing its conditional pattern base (a ?sub-database?, which consists of the set of prefix paths in the FP-tree co- occurring with the suffix pattern), then constructing its conditional FP-tree, and performing mining recursively on such a tree. Both the Apriori and FP-growth methods mine frequent patterns from a set of transactions in horizontal data format (i.e., {TID: itemset}), where TID is a transaction- id and itemset is the set of items bought in transaction TID.

Alternatively, mining can also be performed with data presented in vertical data format (i.e., {item: TID_set}).

In this paper, we have used Apriori algorithm, FP growth mining algorithm and the vertical data format method with fuzzy logic to find interesting association among them.

Fuzzy Pattern Tree Approach for Mining Frequent Patterns from Gene Expression Data   Shruti Mishra, Debahuti Mishra and Sandeep Kumar Satapathy  Institute of Technical Education & Research Siksha O Anusandhan University, Bhubaneswar, Odisha, India  shruti_m2129@yahoo.co.in, debahuti@iter.ac.in, sandeepkumar04@gmail.com    ___________________________________    Fuzzy logic is used to find out the support and confidence using the membership function  = [0, 1]. Fuzzy sets can generally be viewed as an extension of the classical crisp sets. They have been first introduced by Lofti A. Zadeh in 1965 [6]. Fuzzy sets are generalized sets which allow for a graded membership of their elements. Usually the real unit interval [0, 1] is chosen as the membership degree structure.

Crisp sets are discriminating between members and nonmembers of a set by assigning 0 or 1 to each object of the universal set. Fuzzy sets generalize this function by assigning values that fall in a specified range, typically 0 to 1, to the elements.

This paper is arranged in the following manner, section I gives the introduction and a brief idea about the techniques, section II deals with related work on frequent pattern mining.

In section III we have proposed a model, section IV talks about preliminaries like gene expression data and the frequent pattern mining techniques. Section V gives the analysis of our work and finally section VI gives the conclusion and future directions of our work.



II. RELATED WORK The goal of mining frequent item sets (patterns) is to  capture and model the useful correlations within data. An identified frequent itemset is usually represented as the itemset attached to its support that is the frequency of the itemset in a database. Frequent item sets can be used to diverse applications such as association analysis [5], information enhancement, text indexing, image indexing, segmentation, classification, and clustering [3].

In frequent itemset discovery the development of an Apriori-based algorithm, which has encouraged the development of various kinds of association mining algorithms [3][7] and frequent itemset mining techniques [8][9]. There is also much work on algorithm scale-up, for example, instance selection. As we had discussed earlier, Apriori-based mining algorithms are based on the assumption that users can specify the minimum-support for their databases. Current techniques for addressing the minimum-support issue are underdeveloped. Han et al.,[4] designed a strategies to mine top-k frequent patterns for effectiveness and efficiency. Cohen et al, developed a family of effective algorithms for finding interesting associations [10]. Roddick et al. [11], discussed the independent thresholds and context dependent thresholds for measuring time-varying interestingness of events. Hipp et al. [12], presented a new mining approach that postpones constraints from mining to evaluation. Wang et al.,[13] designed a confidence-driven mining  strategy without minimum- support. However, these approaches only attempt to avoid specifying the minimum-support.

In real-world frequent-itemset-mining applications, when users request for identifying frequent item sets, the term ?frequent? is already a threshold from a fuzzy viewpoint, referred to the fuzzy threshold. Certainly, users may request for identifying ?more or less frequent?, ?highly frequent? or ?completely frequent? item sets. All the terms ?more or less frequent?, ?high frequent? and ?completely frequent? can be thresholds from fuzzy viewpoints. Therefore, it is reasonable  to generate potentially useful item sets in fuzzy sets. This has indicated that the key problem should be how to efficiently find all frequent item sets from databases without the necessity of specifying the actual minimum-support threshold.



III. PROPOSED MODEL   Figure 1 Proposed Model  Figure 1, depicts our proposed model states that when we fuzzify a dataset and categorize them accordingly and then implement the algorithms like Apriori, FP-growth and vertical data format then the results obtained is much better than the general implementation of these algorithms (using the original dataset). Our proposed model outperforms the models (Apriori, FP-growth and vertical data format) on the basis of parameters like runtime for finding frequent patterns, number of patterns generated and scalability issues.



IV. PRELIMINARIES   In this section we briefly discuss the basic concepts of microarray gene expression data, Apriori algorithm, FP- growth algorithm and vertical data format.

A. Gene Expression Data  Gene expression levels can be determined for samples taken at multiple time instants of a biological process (different phases of cell division) or under various conditions.

Each gene corresponds to a high-dimensional vector of its expression profile. The data contain a high level of noise due to experimental procedures. Moreover, the expression values of single genes demonstrate large biological variance within tissue samples from the same class. Each row in the matrix corresponds to a particular gene and each column could either correspond to an experimental condition or a specific time point at which expression of the genes have been measured.

B. Apriori Algorithm  Apriori is an influential algorithm for mining frequent item sets for Boolean association rules. The name of the algorithm is based on the fact that the algorithm uses prior knowledge of frequent itemset properties, as we shall see below. Apriori employs an iterative approach known as a     level-wise search, where k item sets are used to explore (k+1)-item sets. First, the set of frequent 1-itemsets is found.

This set is denoted L1. L1 is used to find L2, the frequent 2- item sets, which is used to find L3, and so on, until no more frequent k-item sets can be found. The finding of each Lk requires one full scan of the database. To improve the efficiency of the level-wise generation of frequent item sets, an important property called the Apriori property, given, is used to reduce the search space. The Apriori property says that ?all non-empty subsets of a frequent itemset must also be frequent?.

C. FP- growth Algorithm  Frequent-pattern growth or simply FP-growth mines frequent item sets without candidate generation. It adopts a divide and conquer strategy. First, it compresses the database representing frequent items into a frequent ?pattern tree or FP tree, which retains the itemset association information. It then divides the compressed database into a set of conditional databases each associated with one frequent item or ?pattern fragment? and mines each such database separately.

D. Vertical Data Format  Both the Apriori and FP-growth methods mine frequent patterns from a set of transactions in horizontal data format (i.e., {TID: itemset}), where TID is a transaction-id and itemset is the set of items bought in transaction TID.

Alternatively, mining can also be performed with data presented in vertical data format (i.e.,{item: TID_set}).



V. EXPERIMENTAL RESULT Step-1: Fuzzification of the original dataset  Considered a gene expression dataset and applied the Gaussian membership method to fuzzify the set given as follows: Y=exp^(-(x- mean) ^2 / 2* variance (shown in Figure.2).

Table 1. The Original data matrix & Fuzzified data matrix with 4 Genes and 4 conditions    0 10 20 30 40 50 60 70 80  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9    Figure 2.The Fuzzy dataset   Step 2: Categorization of data into high and low  In this step, we categorize our entire dataset into two parameters say high and low with respect to the corresponding genes and conditions.

Step 3: Implementation of Apriori algorithm  In this step we implement the Apriori algorithm to generate the frequent itemset using the fuzzified dataset taking minimum support as 1.5.

Step 4: Implementation of FP-growth  Table 2 shows a fuzzy frequent pattern mining. The global frequent list is obtained by processing all the transactions of the database. The processing step is the thresholding of the fuzzy membership function with a threshold . Here, =0.7 and we obtain the frequencies like,   Freq.={(G1L:2.65),(G1H:0.9),(G2L:1.6),(G2H:1.7),(G3L:0), (G3H:2.75),(G4L:0),(G4H:1.5)}   Minimum support required is at least 1.5 and hence the global frequency list is:   Freq. List=[(G3H:2.75), (G1L:2.65), (G2H:1.7), (G2L:1.6), (G4H:1.5)].

Table 2.Fuzzy Frequent Pattern Mining  Now, we construct the frequent pattern tree for the data that we chalked out (shown in Figure 3),            2950 3200 3430 3500 3600 4300           Time (in millisecs)  N o.

of p  at te  rn s     Fuzzy Data Raw Data  Figure 3. The Fuzzy Frequent Pattern Tree   Step-5: Implementation of vertical data format We first transform the horizontally formatted data into  vertical format by scanning the dataset once. Here, the minimum support count is 2.Because every element is frequent in the Table 3, so the intersection performed in total leads to 8 non-empty item sets (as shown in Table 4).

Table 3. Simple Transactional Data     Table 4.The 2-item set in vertical data format   Finally, we get only 2 frequent item sets as shown in  Table 5.

Table 5. The 3-itemsets in vertical data format   Then interpreting the three algorithms in fuzzy dataset it  was found that these gives much better results than in the original dataset. The corresponding results are shown below.

We have considered the fuzzy dataset and the original dataset and the corresponding information was found based on the parameters (as shown in Table 6).We have also shown the graphical representation that was obtained out of the given information (shown in Figure 4).

Table 6. Comparison based on parameters              Figure 4. Resultant graph obtained based on the parameters

VI. CONCLUSION AND FUTURE WORK The comparison that we have chalked out in between the  original dataset and the fuzzified dataset upon the frequent pattern mining techniques it was inferred that by using the fuzzified set we are getting more number of patterns than the original set. Also, the run time of the algorithms in the fuzzified set tends to be much faster than the original set.

This work can be extended to use any soft computing technique such as Genetic algorithm to discover the perfect patterns from the data set.

