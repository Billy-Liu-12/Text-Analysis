A SOA-Based Business Grid Solution

Abstract  Nowadays, Grid computing is moving from sharing computing power and storage resources to sharing business resources, including any abstract business entities and resources. The new trend brings a big challenge, since these universal business resources typically do not belong to the same level. Describing them is already difficult; describing them in a unified way is even more difficult. Business process requires runtime coordination, asynchronous integration, notifications, and state and transaction management. The present Grid solutions generally lack a way to quickly and easily interact and integrate with external business processes and services provided by different localized Grids using a secure, affordable, and manageable approach. Therefore, this paper presents flexible solution framework to enable business resource sharing within and across organizational boundaries in a secure and manageable fashion.

Key words: Grid computing, Business Grid, virtualization, Middleware, SOA, Workflow  1. Introduction  To date, Grid computing [1] technology has been used in a variety of areas, such as finance, defenses, and collaborative design. A Grid computing platform allows resource discovery, resource sharing, and collaboration in a distributed environment. Grid computing is moving from sharing computing power and storage resources to sharing business resources, including any abstract business entities and resources. The new trend remains a big challenge, since these universal business resources typically do not belong to the same level. Describing them is already difficult; describing them in a unified way is even more difficult. Therefore, Grid Computing has started to leverage the Web services technology, its infrastructure and standard approaches, to define standard interfaces for inter-Grid resource communications and interactions.

------------------------- This work is financially supported by the Program for New Century Excellent Talents in University No.NCET-08-0738; and the Innovation Technology Star Program of Beijing under Grant No.2007A045; and the National Key project of Scientific and Technical Supporting Programs of China under Grant No.2008BAH24B04.

SOA (Service Oriented Architectures) [2] [3] [4] is a logical way of designing a software system to provide services to either end-user applications or to other services distributed in a network, via published and discoverable interfaces. A well constructed, standards- based Service Oriented Architecture can empower a business environment with a flexible infrastructure and processing environment. SOA achieves this by provisioning independent, reusable automated business process and systems functions as services and providing a robust and secure foundation for leveraging these services.

Efficiencies in the design, implementation, and operation of SOA-based systems can allow organizations to adapt far more readily to a changing environment.

The convergence between Grids and Web Services, Grids and Semantic technologies, and emerging Service Oriented Architectures (SOA) promises is enabling the provision of computing, data, information and knowledge capabilities as utility-like services in the future, including services which intersect with the physical world through a wide range of computing devices.

However, it is hard to add new applications from different vendors to the existing localized Grids due to their proprietary interfaces, which restrict business expansion and increase operating costs. In short, the present Grid solutions generally lack a way to quickly and easily interact and integrate with external business processes and services provided by different localized Grids using a secure, affordable, and manageable approach. The emerging Web services model offers a solution to standardize the Grid computing technology to realize actual interoperability and resource sharing. This paper presents an adaptive service-oriented utility infrastructure for arbitrary business applications and related transactions.

The rest of this paper is structured as follows: section 2 summarizes related work in this area; section 3 analyzed advantages of using SOA in Business Grid; while section 4 will introduce an SOA-based Business Grid solution, which is implemented in Web services, as an example to illustrate how an SOA-enabled enhances a Business Grid.

Finally, section 4 summarizes this paper.

2. Related work  A lot of work has already been done in the area of _____________________________    Business Grids [5]. Global IT Services and Consulting organizations like Tata Consultancy Services (TCS) have been investing considerable resource into the emerging discipline of Services Computing. The motivation for achieving Business Grids is that they promise to provide the potential to significantly extend the flexibility of service-oriented architectures from the architectural level through to the infrastructural level [5].[6] regarded workflow management  as the proposal solution to fill the usage gap and create the Business Grid. Others think Grid technologies, Virtualization, and Autonomic & Autonomous Systems research initiatives as corner stone for achieving the vision of the Business Grid focused on the current state of play in Virtualization and highlighted the research landscape to achieve the necessary vision of adaptability for tomorrows? enterprise. [9][10]  3. Advantages of Using SOA in Business Grid  While the emergence of SOA as an architectural paradigm provides many benefits for Grid computing, we identify the following advantages of using SOA specifically for the development of a Business Grid: 1. Service loose coupling: Service loose coupling minimizes the dependencies among systems of Business Grid by the definitions of a set of language and platform- independent interfaces. In our proposed solution, each subsystem?s functionality is exposed as a Web service. As a result, Business Grid can be composed on demand from various systems provided by different parties as Web services.

2. Service abstraction and autonomy: A Web service provides an abstract interface that is independent from its implementation. In addition, each Web service is autonomous in the sense that a service provider has the control over the application logic that the Web service encapsulates. As a result, a service provider can dynamically change the implementation and deployment environment of a Web service for a subsystem of a Business Grid. Such autonomy also greatly facilitates the management of the development and evolution of the whole system.

3. Service reusability: As each subsystem of a Business Grid becomes a uniform computing unit with standard interface descriptions and universal accessibility through standard communication protocols, such as Simple Object Access Protocol (SOAP), Universal Description, Discovery, and Integration (UDDI), Web Services Description Language (WSDL), and Service Component Architecture (SCA),  MetaWSDL [14] can be used as a universal XML representation to carry the semantic information of WDSL. Requirements- driven Web services composition technology can be used to compose a new business process using existing Grid services. In addition, SOA Relationship  Modeling Language (SOA-RML) can be used to define complicated relationship among Grid services.

4. Service discoverability: As each subsystem of Business Grids is implemented as a Web service that is enriched with a semantic description, one can register the service in some public service registries. It provides an efficient method and uniform interface to discover Grid services using the UDDI [13] Search Markup Language (USML) [14] script rather than accessing the low-level programming APIs. As a result, a subsystem becomes discoverable and can be selected and used by other Business process on demand.

5. Service interoperability: Service interoperability is enabled by the open standards of messages and communication protocols for Web services, which are supported by a large body of IT industry and the Web Services Interoperability Organization (WS-I). Using Web services, the interoperability across various Business Grids can be greatly improved.

4. A SOA-based Business Grid solution  Business Grid intends to move Grid computing from traditional computing power sharing and resource sharing to business resource sharing and application.

A SOA-based Business Grid solution utilizes a layered Grid structure to realize business resource and application sharing. As shown in Fig.1, an SOA-based Business Grid solution consists of five layers:  The first layer is the Operational Layer, which consists of a wide range of heterogeneous and distributed data sources, software tools, services, and their operational environments.

The second layer is called the Virtualization Layer, the main advantage of virtualization being to hide the physical resources from operating systems, applications    and/or end users. As such operating systems and applications do not need to be modified in order to run on virtualization resources. Virtualization Layer provides a seamless view of services that does not require user knowledge of the location, addresses and type of resources. Virtualizations make heterogeneous and distributed services and software tools integration to be possible.

The third layer is called the Packaged Application Grid Layer, the major goal of a Packaged Application Grid Layer is to hide the complexity of various existing applications and provide a unified layer of Grid services.

A PAG (Packaged Application Grid) uses the existing Grid computing technologies to knit together various existing application services, which are either legacy applications or application packages provided by Independent Software Vendors. In order for these applications to be shared by other business processes, they need to be first wrapped as Web services. One packaged applications may be wrapped into different Grid services with different interfaces. In order to organize available applications as Grid resources, the control of a PAG can be centralized, although its computations and storages are usually geographically distributed. One machine typically takes charge of all synchronization and coordination tasks. Applications participating in a PAG are usually interdependent on each other.

The fourth layer is called the Business Grids Middleware layer, which is responsible for the execution and monitoring of Web services. This layer supports the composition, submission, deployment, and management of business applications. Generic job support provides a mechanism to enable a diversity of applications to run on the same Business Grid, such as interactive Web applications, traditional computational batch jobs, and legacy applications. Job portability support provides a standard archive format for job descriptions and utilizations. Automatic deployment support enables program and user data to be automatically deployed and configured. Policy-based management support provides self-healing and self-optimization management based on configurable policies. Interoperability support offers a mechanism to integrate a software component with existing middleware for commercial system management.

The fifth layer is called Business Process Grid Layer, which consists of the business process provisioning and outsourcing, integration, collaboration, monitoring, and management infrastructure. The basic idea is to treat each design task as a Web service in a Grid environment and use a service flow description language, e.g., Business Execution Language (BPEL) [15], to model the flow among different design task. WDSL and BPEL can be combined to create customized data entities, collaboration protocols and dynamic scenario configurations. Grid Service Flow Language (GSFL) [16] is another option model the business process flow in a Grid environment.

5. Summary  In this paper, we introduced a SOA-based business grid. Business Grid provides an IT-level infrastructure to support business applications, business process, and resources sharing. Business Grid relies on a solution architecture to enable resource sharing among collaborators in a secure and manageable fashion.

6. References  [1] Next Generation GRIDs Expert Group Report 3, Future for European Grids: GRIDs and Service Oriented Knowledge Utilities, January 2006.

[2] ?Service-oriented architecture?, available at http://en.wikipedia.org/wiki/Service_Oriented_Architectu re.

[3]Marks EA, Bell M (2006) Service-Oriented Architecture: a planning and implementation guide for business and technology. John Wiley & Sons [4]Newcomer E, Lomow G(2005) Understanding SOA with Web services.

[5] Franke C, Theilmann W, Zhang Y, Sterritt R "Towards the Autonomic Business Grid", Proceedings of Fourth IEEE International Workshop on Engineering of Autonomic and Autonomous Systems (EASe'07), Tucson, AZ, USA, 26-29 March, Pages107-112 [6]J. Yu and R. Buyya, A Taxonomy of Workflow Management Systems for Grid Computing, Journal of Grid Computing, Vol. 3, Numbers 3-4, Pages: 171-200, Springer Science Business Media B.V., New York, USA, Sept. 2005.

[7] L.-J. Zhang and C.K. Chang, ?Towards Services Computing Curriculum,? Congress on Services Part I (SERVICES?08), pp. 23-32, 2008.

[8] R. Sterritt, "Autonomic Computing", Innovations Syst Softw Eng, 2005 1(1): 79-88 [9]NESSI-Grid, Grid Vision and Strategic Research Agenda, Deliverables D.1.1 & D.1.3 of NESSI-Grid project, http://www.nessi-europe.com, November 2006 [10]Open Grid Forum. http://www.ogf.org [11]Globus: OGSA The Open Grid Services Architecture. http://www.globus.org/ogsa/ [12]Resource Description Framework(RDF).

http://www.w3.org/RDF [13]UDDI. http://www.uddi.org [14]Zhang LJ, Chao T, Chang H, Chung JY(2002) Automatic method signature adaptation framework for dynamitic Web service invocation.  6th World Multi Conference on systemic, Cybernetics and Informatics (SCI 2002), pp 541-546 [15] BPEL specification.http://www- 106.ibm.com/developerworks/webservices/library/ws-bpel/ [16]GSFL: a workflow framework for Grid service.

