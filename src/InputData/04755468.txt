SOA and EA?Sustainable Contributions for Increasing Corporate Agility

Abstract? Service oriented architectures (SOA) have been introduced for various reasons over the previous couple of years. Analogous to the introduction of enterprise application integration (EAI) technologies before re-use and cost cutting potentials have been among the most prominent reasons. But considering the increasing complexity of an application landscape following the introduction of a SOA, the re-use and cost cutting arguments will lead to disappointment. However, service oriented architectures offer a great potential to increase corporate agility.

To sustainable preserve corporate agility it is necessary to ex- plicitly manage the enterprise architecture. This paper discusses the problems of re-use and cost cutting expectations in service oriented architectures and contrasts them with the potentials related to make sustainable contributions to corporate agility.

Structures, processes, and instruments to realize these potentials are discussed with reference to selected case studies.



I. INTRODUCTION  Enterprise application integration (EAI) technologies and later on service oriented architectures (SOA) have been used by practitioners to meet the complexity problems arising from evolutionarily grown, heterogeneous application landscapes in large companies [1]?[3]. With EAI?s first introduction goals like cost cutting could be met, e.g. by standardizing interfaces and reducing the number of interfaces. Other goals like increasing flexibility?e.g. mentioned in [4]?[6] or by practitioner contributions in [7]?could not be met. The con- frontation with exaggerated expectations has put EAI into the background. However, similar expectations are now connected to service oriented architectures as the steady group of partic- ipants in the underlying long-term study stated. Experiences with EAI are bringing re-use and cost cutting potentials into the foreground. Driven by vendors, analysts, and consultants the expectation is arising (again) that the introduction of this technology leads to a better adaptation of corporate IS to changing business processes and to a better business process support in general.

Instead of discussing flexibility and a better business-IT alignment in general this contribution offers an agility oriented goal system, in which the other goals are positioned. Because agility is to be realized not only once, but continuously in the long run, this contribution asks for the structures, processes, and instruments necessary for a sustainable achievement of these goals. Goal system, sustainability and resulting require-  ments are discussed in section II. Because only few companies have established the required structures and processes, current practices are sketched via selected cases in section III, and analyzed regarding sustainability in section IV. A summary and an outlook on further research work conclude this con- tribution in section V. The discussion of the goal system and its application to service oriented architectures are based on a literature analysis. An explorative case analysis according to Yin [8] is made to discuss the required organizational structures and processes.



II. CORPORATE AND IS GOALS  Assuming that companies are facing an intensive?if not increasing?competition, we further presume that increasing corporate agility is an important goal in the companies? goal system. Additionally we assume that business demands corporate IS to contribute to corporate agility as well, which has consequences for the design of the application landscape.

These assumptions are based on the studies on key issues for IT executives by Luftman et al. [9]?[11] and the works of Weill et al. on strategic alignment and agility [12], [13].

A. Agility  Although agility and flexibility are often used as synonyms, we follow the discussion in production management and understand flexibility as one part of agility only. E.g. Yusuf et al. understand agility as the capability to adapt to unexpected changes, whereas flexibility is focused on expected changes only [14]?[19]. In production management flexibility is ?built- in? by considering configurability in early design stages, both for production structures (e.g. by using highly configurable CIM or CAD/CAM systems) and products (e.g. by component based design). Configurability fosters flexibility, but it cannot (or only very limited) contribute to unexpected changes, because only expected changes could be considered at the design stage. Consequently agility is required as a corporate goal in production management [14], [20]. Yusuf et al. define agility as ?the successful exploration of competitive bases (speed, flexibility, innovation proactivity, quality and prof- itability) through the integration of reconfigurable resources and best practices in a knowledge-rich environment to provide      customer-driven products and services in a fast changing mar- ket environment? [18]. Furthermore in production management the importance of being pro-active is stressed instead of being only reactive to the changing business environment [15]. The five sub-goals of agility as defined by Yusuf et al. serve as the evaluation framework for the subsequent discussion of SOA in section II-C. However, agility is a goal to be reached not only once, but permanently. Therefore the following subsections investigate the concept of sustainability.

B. Sustainability  An analysis of definitions of and approaches to sustainabil- ity identifies environmental economics as the origin of this concept. The most cited definition can be found in the so called Brundtland report: ?Sustainable development seeks to meet the needs and aspirations of the present without compromising the ability to meet those of the future? [21]. Other prominent (but analogous) definitions exist as well [22], [23]. Based on a broad literature review Huber decomposes sustainability into the strategies of efficiency, sufficiency and consistency [24], and Gronau added the strategy of participation [25].

The strategy of sufficiency asks: How much is enough?

An answer can hardly be found. However, it seems to be advisable to be modest. Sufficiency raises the demand to realize a certain degree of modesty by renunciation. The criticism of this strategy reads: It is unrealistic and full of false effects?the former, because it contradicts the general standard of individual utility maximization. It shows false effects, because restrictions can lead to economic and social stagnation or at least to undesirable development within these areas [24]. The strategy of efficiency focuses on increasing productivity, to make (economic) services profitable, i.e. to provide services with minimal use of resources, addressing a sub-goal of agility at the same time. Central concepts are reuse and longevity. From an economic point of view the strategy of efficiency is the most compatible strategy; which therefore is often equated with sustainability. The strategy of consistency defines either the complete isolation of a system from its environment or the enforcement of its consistency between a system and its environment as the design goal [24]. The strategy of participation demands the involvement of concerned stakeholders e.g. of a system development project.

This is required both for an optimal design of a system and to increase acceptance of a system within its user base [25].

If sustainability is a relevant topic for a company, in the majority of cases reducing negative external effects to its physical and/or social environment are addressed [26]. This will be referenced as externally oriented sustainability in the following. Furthermore the underlying understanding of sus- tainability will be detached from ecological aspects. Hahn and Hungenberg define the main goal of each company as preser- vation (i.e. sustainability) and successful development, in order to meat the individual expectations of all groups interested in the company [27]. This internally oriented sustainability defines a corporate view on sustainability?addressing a long- term, efficient corporate leadership and management as the  primary corporate goal, which contributes to agility as well.

Aspects of the strategy of consistency can be found within  the dimension of organizational architecture. It is clear that organizational structures and business processes can not be de- signed independent from each other, because they are different views of the same object. A lacking consistency between these views would lead to inefficiency [28]. Analogous consistency between IS systems is required as well as consistency between organizational and IS architectures supporting them. Within the IS department the strategy of efficiency demands for a minimal time and effort to implement changes in IS structures.

Changes (or extensions) have to be implemented fast and cost efficient. At the same time complexity is not to be increased more than necessary [29]. Is the overall corporate system to be changed?i.e. by introducing new technologies like web services or new design paradigms like service orientation?the resulting changes have to be reflected in the overall system, i.e. by new organizational structures, rules, or management instruments. To be compliant with the strategy of sufficiency at the same time requires all necessary changes to be minimal, not to be larger than required. To master all changes within the organization, acceptance by all persons being affected is required, leading to their involvement in the transformation process (strategy of participation).

Service oriented architectures can contribute to a sustainable increase in corporate agility only if they provide positive con- tributions to time to market, flexibility, pro-active innovation, quality, and profitability as shown in section 2.1 and at the same time being compliant with the strategies of efficiency (profitability), consistency (consistency of architectures), par- ticipation (involvement of business and IS departments), and sufficiency. The later demands for all measures within the change and transformation process to meet the goals, but not to reverse them by introducing red-tapism.

C. A first evaluation of SOA  How can a SOA contribute to corporate agility? According to Yusuf et al. the sub-goals of agility as mentioned in section II-A have to be met [18]: (1) speed and a better time to market respectively, (2) flexibility, (3) pro-active innovation, (4) quality, and (5) profitability. The aspect of pro-active innovation is disregarded in this discussion, because it is primarily influenced by organizational issues, less by archi- tecture paradigms. As SOA can be implemented with various technologies?see e.g. the technologies referenced in [29], [30]?a detailed view on technologies would be out of scope of this article as well. Furthermore this article will not enter the discussion of ?IS as an enabler?.

Regarding quality modern technologies are enforcing docu- mentation or generation of code and documentation more than they did in the past. In addition to this newer infrastructure technologies (i.e. middleware) foster the use of repositories, so that manual search for components, documents etc. is reduced, if not avoided. Therefore these repositories and (enhanced) search functions for components and documentation enhance the development process and its quality. They positively      contribute to product quality. But due to the use of tools of different vendors (?best of breed?), a general conclusion regarding quality is difficult to make: A potential for a positive contribution is given, but it depends on the effective combination of the tools employed and their integration to determine the extent, at which this potential can be realized.

Another contribution to agility is offered by SOA by fos- tering the use of standardized interfaces and harmonizing infrastructure interfaces, therefore facilitating the combination of (existing) services and increasing the flexibility of the overall system. To use this advantage to its full extent, a stan- dardization and harmonization of interfaces is strictly required.

But even if standardized systems are not available and/or legacy systems are dominating the application landscape, a SOA offers advantages in terms of flexibility: Standardization is facilitated by improving the infrastructure (repositories etc.), offering a better basis for further development with an increased share of standardized interfaces.

Similarly advantages in terms of speed are unlocked by reducing development time of (enterprise) services and compo- nents not only for new components, but for change of existing systems as well: We assume that a business department request for IS support has led to the development of an (enterprise) service consisting of partly existing, partly newly developed components (basic services). Reuse of existing components has increased the development time of this service first. Then we assume that another business department request leads to a change of this service. This change request can be implemented in different scenarios: In the simplest scenario it is a ?black box? change. The service can be changed internally without enforcing changes in dependent services or components. We assume that the test efforts will be limited, because the tests required relate only those services and components directly connected. In this scenario the change can be implemented very fast compared to the full change cycles in previous legacy systems.

In a second scenario the change request requires a change of at least one interface of one of the dependent services.

This leads to a higher change effort than in the first scenario.

However, a SOA offers all advantages of object and compo- nent orientation: The change can be implemented by simply offering an additional interface via a service variant, which has a different signature. In this case all services dependent on the older variant do not have to be changed, as ?their? interface is still working. Other services developed later on and requiring the changed service, simply make use of the new service variant. The advantages regarding development time compared to development in legacy systems is obvious and there is only a small difference compared to the first scenario.

Under good circumstances the development simply requires an additional rule within the integration infrastructure (integration bus). If additional logic beyond transformation rules is not allowed on the integration bus by policy, an explicit variant has to be built. This is a realistic scenario: in some cases up to six variants of a service are reported to be used in parallel.

Although the gains in development time and therefore in  time to market are obvious, there are some problems related to the increasing number of services, which is fostered by the introduction of variants. In reality reuse of existing services or components is high only for a small number of services; however, the average reuse rate is very low. An impressive example e.g. Schwinn and Hagen [31] are giving: They have shown that at the time of the study 34% of 650 services have been reused, but with an average reuse rate of 1.7 only.

Especially the low number of services with a high reuse rate (14 services have been reused 10 times or more; for the yet positive evaluation of the SOA see [29]) is interesting.

Every additional variant reduces reuse. Furthermore every additional variant increases maintenance efforts. Therefore the evaluation of a SOA regarding profitability has to be very cautious, especially if the ROI of a SOA project can be determined. Another disadvantage is the increasing complexity of the overall system, which may have?especially in the long run?a negative impact on quality, time to market, flexibility, pro-active innovation, and profitability. And finally different variants of a service facing different reuse by newly developed services, may lead to a tightly intermeshed net of dependencies, whose complexity is bigger than the legacy system replaced by the service oriented architecture.

We can conclude, that a service oriented architecture can contribute to a higher corporate agility. But it is questionable, if this is sustainable. Especially complexity issues and align- ment to business changes seem to require solutions beyond the (technical) design paradigm. Because this is affected by company specific factors and may supersede the direct con- tribution to agility, further analysis is done via an explorative case study to determine further relevant success factors.



III. CASE STUDIES  In the following subsections five companies are sketched, which have built up service oriented architectures several years ago and made experiences with the evolution of these architectures. In each case the motivation to introduce a SOA will be presented, as well as the architectural levels which are distinguished and the structures which have been chosen to design and run these architectures. The architectural levels are outlined because of the diversity of the term service. Compa- rability is provided by translating the individual companies? terms into the architectural levels defined in [32]: business architecture, organizational architecture (covering both busi- ness processes and organizational structures), integration archi- tecture, software architecture, and infrastructure architecture.

The discussion of architecture management processes focusses especially on any alignment between these levels and the involvement of the business side.

Data for the case studies have been collected with three of these companies since 2002/2003 and with the remaining two since 2005. Key stakeholders in IT management, architecture management (i.e. IS and business architects), and Business/IT relationship management have been interviewed. In addition to the interviews regular review meetings have been set up to observe state, development, and architectural issues in the      companies involved. Two of the companies described partici- pated in long term collaborative research projects in IS inte- gration and enterprise architecture involving ten companies in the period of 2002?2008. The companies chosen for this study have a long term experience with service oriented architectures and have mature architecture management structures in place.

With two companies individual research projects on integration and architecture have been done. These projects offered the opportunity to contact a broad range of employees and roles to gain additional insight into internal changes in structure, state, and strategy of both IS and business perspectives. Data presented in the case studies below aggregate the research results gained with these companies until spring 2008. Due to company request the case studies have been made anonymous.

A. Company A  Company A is one of the major banks in Switzerland. In its history mergers had a major impact on the complexity of the application landscape. Increasing demand for application integration led to the introduction of a SOA. In 2002 the core banking system consisted of more than 450 host based and client server systems. To meet the resulting integration com- plexity a first SOA vision was developed in 2001. First steps to its implementation have been made by encapsulating exist- ing functionality as business services resp. by implementing new functionality as business services. The encapsulation of existing functionality increased flexibility and implementation time in general could be reduced, i.e. time to market could be improved. Regarding architecture the levels business (i.e.

partly business and organizational architecture), application and integration (i.e. both integration architecture), software, component (i.e. both software architecture), and technical architecture (i.e. infrastructure architecture) are distinguished.

All technical architectures are more detailed than the busi- ness architecture: only a few business models are modeled explicitly; modeling of business processes is diverse regarding details, scope, completeness, and timeliness depending on the business departments. Architecture management processes are strong regarding the IS department: a team of more than 90 architects guarantees architecture communication and enforce- ment to IS development. Architecture processes are clearly defined in this context and strong architecture governance is established. Architecture impact regarding the business depart- ments is less strong; although impact and enforcement of ar- chitecture is strong regarding individual IS projects. However, architecture models and processes (and resulting transparency) within the business departments are not equivalent; scope, models, model granularity and quality of processes are more process driven and coincidental.

B. Company B  Company B is one of the biggest power supply companies in Germany. Whereas EAI has been understood and operated as a technical project, SOA has been taken differently. SOA governance issues have been a major concern which has early been addressed. Driven by the group IS department  governance models have been developed alongside detailed technical models. Business owners have been involved early, resulting in short (SOA based) implementation times for new business processes today, thus contributing positively to agility.

However, this IS driven SOA initiative has been limited to selected business departments. A reason for this may be the lack of any holistic enterprise architecture: the architecture team in the IS department is focusing on IS architecture management only and business process management is done for selected business departments only. Architectural levels covered are (selected) business processes (i.e. organizational architecture), business service architecture (i.e. integration architecture), basic service architecture (i.e. software architec- ture). Analogous to company A the focus has been more on technical architectures; whereas business oriented architectures have been rudimentarily covered at best.

C. Company C  Company C is a major financial service provider in Switzer- land primarily focusing on standardized retail banking and transaction processing. Increasingly complex dependencies be- tween applications within the evolutionary grown application landscape combined with an increasing demand for application integration led to a major EAI project. This resulted in a SOA vision to repeat on business side the advantages gained by faster project execution, realized reuse and resulting cost efficiency within the IS department. Regarding architectural levels all levels mentioned in [32] can be found with broad, defined architecture management processes on IS side to develop and carry on the service oriented architecture. An initiative was started to manage business and organizational architecture artifacts by the IS department architecture team as well. However, this has been dropped in favor of managing all business related artifacts by an explicit business architecture management team itself: All business related architecture arti- facts are managed by an organizational unit attached directly to the CEO. The alignment of business and IS architectures is explicit and facilitated by a personal interweavement by having former IS architects included in the business architecture unit. The service oriented application landscape has led to increased reuse and reduction of costs, thus contributing to agility. The effect of better alignment processes could not be evaluated sufficiently by now, because they have not been ?in production? long enough. However, first observations indicate a positive contribution.

D. Company D  Company D is a major telecommunication service provider in Germany. In the context relevant for this paper the telecom- munication industry features two special characteristics: On the one hand the industry is technology affine and technology driven. On the other hand implementation speed is high regarding both design and implementation of new products (e.g. new pricing models, technological product innovation) to be distinguishable from competitors. Both characteristics have led to an early start of an enterprise architecture project      to define a framework for technical change projects. This framework has been considered helpful for both identifying the impacts of scheduled change projects and to govern confor- mance of planned changes regarding defined architecture rules.

Additionally special processes have been established, to break architecture rules temporarily, if both a project plan and a bud- get are defined to re-establish architecture conformance. These rules have been helpful to gain additional speed advantages, thus contributing positively to agility. In a technology driven industry like telecommunication the cultural distance between business and IS departments is not as large as it is in other? less technology affine or technology driven?industries. To retain this closeness in the long run, all change projects have to show a clear business case. Due to the stiff competition in the market and the resulting change frequencies, even a business case for infrastructure projects like SOA can be shown. The enterprise architecture management in this case has clearly defined structures and processes, as well as the governance has. The company has architectural layers compatible with [32], with special importance given to a domain model (orga- nizational and integration architecture layers), being relevant for all change projects.

E. Company E  Company E is another telecommunication service provider operating in Germany, as a subsidiary of a foreign telecommu- nication group outside the German-speaking countries. Anal- ogous to company D the company and the business depart- ments are technology affine and the business is technology driven. Furthermore the stiff competition defines speed to a (business) goal, dominating design, adoption and execution of new business models and their supporting applications. Just as in company D the application landscape has grown fast over the last couple of years and has reached a high level of complexity. In previous years applications have been designed and introduces individually in each country the group is present. Later on a centralization initiative was started to align the formerly distributed and non-uniform architecture activities in the different countries. Due to a change of corporate strategy the cross-country architecture alignment was revoked. Service orientation is a design goal for application development now to tame the ever increasing complexity of the (distributed) heterogeneous application landscape. The understanding of services is compatible to company D with enterprise services defined on the integration architecture layer and basic services defined as (software) components on the software architecture layer. However, business processes are captured inconsistently, hampering the alignment of business and IS architectures with this regard. Due to the weak cross-country alignment of architectures within the group, the resulting architecture can be described as a federally structured application landscape.

Within the individual companies the country-specific architec- ture management structures and processes are mixed: In the German subsidiary structures and processes are mature, archi- tecture competencies are high and the underlying principles of service orientation are well understood. Processes, structures,  and rules defining the governance are clearly defined, too.

But due to quickly changing corporate strategies and their organizational impact it is difficult to estimate, how these structures and processes can be effective with sustainable results.



IV. ANALYZING THE CASES?CONTRIBUTIONS TO SUSTAINABLE AGILITY  The preliminary analyses in section II-C showed that ser- vice oriented architectures have the potential to contribute positively to corporate agility. In fact in all cases positive effects could be observed after the introduction of service oriented architectures or their underlying design paradigm: Improvements in speed could be observed in every company.

The improvements in the technical infrastructure have led to a better (at least technical) quality. Reuse, flexibility, and profitability potentials could be realized only in some, but not in all cases (see table I). Furthermore in all cases the complexity of the overall system has grown. When considering the long term effects of increasing complexity the positive effects of introducing a SOA may show to be temporary.

For being sustainable this complexity has to be tamed [33], [34]. Experiences from the case studies outlined give hints on critical success factors.

Within all companies measures are established to probe the effects mentioned: e.g. time to market has been measured in terms of (reduced) project time, which is an indicator for flexibility (in change projects) as well. Quality improvements could be measured in terms of better documentation related data from repositories. Due to varying development process standards and a diverse set of software tools employed the measures are heterogeneous among the companies?especially regarding documentation (e.g. documentation rate or change rates). Because of the unsatisfying situation with diverse measures making the effects only partially comparable, we organized the joint workshops within the research projects to have the self-assessments peer reviewed by experts from other companies (including those taking part in the individual research projects or in the interview series only). These discussions between experts in a controlled setting revealed inconsistencies, contradictions and additional insights, thus providing a more solid foundation for the analysis.

In the following the cases are summarized regarding the strategies of consistency, participation, sufficiency, and effi- ciency as introduced in section II-B.

Regarding strategy of consistency company A has to be assessed very cautiously. The organizational architecture in terms of business processes is not managed at the same extent as it is done for integration, software, and infrastruc- ture architectures. Business departments? views are collected via IS projects only. Although the imbalance is identified from both business and IS departments and first measures are discussed, this issue is not solved in the short run. A similar conclusion can be drawn for company B. Although governance and interfaces to business process management have been established for SOA projects, these measures are      TABLE I  CASE ANALYSES: CONTRIBUTIONS TO AGILITY  Company Contributions to A B C D E Agility in the short run Speed / time-to-market + + + + + Reuse + + Quality + + + + + Flexibility + + (+) (+) Profitability + + Increase of complexity yes yes yes yes yes Strategies for Sustainability Consistency ? ? + + + Efficiency ? + + + + Sufficiency +/? ? (+) + + Participation ? ? + ? ? SOA contribution: + positive, ? undecided, ? negative; empty field:  not available/applicable/observed; ( ) preliminary observation  limited to single issues?the stabilizing (and balancing) frame of an (enterprise) architecture management does not exist.

By contrast, in company C the importance of a consistent modeling (and management of models) across the different architectural layers is not only identified, but addressed by explicit architectural units. The situation for company D is similar: The cultural differences between business and IS departments are limited due to the technology affine industry, and the (enterprise) architecture management is complete and pragmatic, so that a sound base for the deployment of SOA is given; analogous company E (with focus on Germany), although the architectural scopes are limited in comparison with D.

A similar picture can be drawn regarding the strategy of participation. In company A business department represen- tatives are involved in a limited number and scope only.

They initiate IS projects, but are not involved in the (further) development of architectures or in the alignment process of business and IS architectural views. In company B participa- tion is well developed regarding the IS department driven SOA governance model, but is limited regarding selected business departments. In contrast to all other cases in company C the participation of business representatives is maximal, due to the positioning of the enterprise architecture team on the business side close to the CEO. Here the potential for contribution to a sustainable alignment is obvious. With limitations this is visible in companies D and E as well, as the cultural gap between business and IS departments is smaller and the cooperation of business, IS, and architectural units is given.

This is fostered by technological issues being relevant to corporate product development and marketing on the one hand and the requirement to show business cases for every aspect in the IS departments on the other hand.

Regarding strategy of sufficiency company A has imple- mented a wide range of measures for architecture management, especially architecture communication and enforcement. To ensure consistency among all IS related architectural views this is very helpful. But these measures may lead to a size  of the architectural unit and a level of detail in architecture management processes and structures that might lead to over- bureaucracy and limited consistency and alignment in the long run. With company B the state of architecture management is not sufficient enough, to anchor service orientation in piloting projects in the overall group. In company C sufficiency cannot be evaluated yet, because the implemented architecture management structures are not productive long enough. With companies D and E (with focus on Germany) the sufficiency is best, because even SOA project have to show a clear and verifiable benefit for the business. Pure SOA projects for architectural purposes do not occur there.

According to section II-B a positive contribution of SOA to the strategy of efficiency can be assumed. This can be confirmed by the experiences in companies B, C, D, and E. Especially in company C efficiency potentials have been realized by reuse. Decoupling the systems has led to increased complexity, but the systems are more flexible and integration is easier now. With companies D and E SOA projects have to lead to more efficient solutions, otherwise the constraint to provide business cases would prevent their implementation.

While SOA is a design paradigm, it does not contribute to sustainable agility. Those companies where indicators for contributions to sustainable agility could be found, showed structures, processes, and instruments (i.e. policies, measures, and metrics), that are characteristic features of an explicit enterprise architecture management. A complementary study [34] indicates, that especially in enterprise architecture man- agement involving business departments in both structures and processes is a crucial success factor to sustainability. The situation at company B illustrates that focusing on the IS perspective is not sufficient.



V. OUTLOOK  As shown before service oriented architectures offer the potential to contribute to an increased corporate agility. How- ever, not in every case this design paradigm does offer the reuse and cost cutting potentials as claimed by vendors and consultants. But it enables companies to react faster with their IS projects to (changing) change requests by business departments and thus contribute to the overall corporate agility.

This is complemented by the potential of a higher flexibility and reuse of existing components, although these potentials only are to be realized in the long run to pay off?mostly.

As positive the contribution to corporate agility is, as difficult is the communication task of the IS department: cost cutting by reuse is easy to communicate and required infrastructure investments are (comparatively) easy to achieve, but their ben- efits can only be reaped in the long run. Positive contributions to agility and required infrastructure investments are difficult to communicate; they have to meet an explicit demand of business departments for a better time to market, quality, innovation capability, or flexibility, which is explicit and strong enough to be endorsed with the necessary will to invest.

From a research perspective the adoption of SOA in com- panies shows further research potential beyond the discussions      of technical artifacts. The cases shown document an increasing inclination of companies to invest in (enterprise) architecture management to meet the increasing complexity coupled with the introduction of service oriented architectures. Most of these activities are focused on IS architectures by now, but the requirement to address artifacts within the broad range of enterprise architecture is clearly visible. A complementary study in [34] shows the emergence of suitable structures and processes to govern architecture development and enforce- ment. The inclusion of business departments in enterprise architecture activities is a phenomenon showing a broad range of challenges and is very interesting from a research point of view. Beyond technical questions especially service orienta- tion requires the construction of appropriate methodologies to foster a sustainable alignment between business and IS departments.

As mentioned in the introduction of section III the company data, especially the measures employed, the repository reports used, and project documentation standards illustrated that the measurement and evaluation of service oriented architectures is still in its infancy. Therefore we started a research project dedicated to the establishment of a proper SOA and EA government framework, which requires reformulating the mea- surement of structures and processes. The measures will be derived from the corporate goal system with special emphasis on agility as laid out in section II. The resulting metrics will allow statistical testing within the company. Within the joint research project the other companies involved will (partially) apply the resulting measures and metrics, allowing both intra- organizational analysis and the derivation of causal models based on a detailed statistical foundation.

