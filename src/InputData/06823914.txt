Proceedings of IEEE IC-BNMT2013

Abstract: Association rules mining is one of the most important and well-researched techniques of data mining, which aims to induce associations among sets of items in transaction databases or other data repositories. There have been a number of successful algorithms developed for frequent itemsets identifying and association rules updating in very large databases. Currently Apriori algorithms play a major role in identifying frequent item sets and deriving rule sets out of it. However using conjunctive nature of association rules and the single minimum support factor are not adequate to derive useful rules effectively. Hence in this paper, an optimal method to update association rules based on Immune Algorithm (IA) is proposed. Combined with IA in biology, key factors and the process of the algorithm can be taken a considerable optimization. The reported experiments results present that the proposed method shows better results than Apriori algorithm and mitigate the performance degradation.

Keywords: Association rules; Frequent items; Immune algorithm; Data mining  1  Introduction Data Mining has attracted a great deal of attention in the information industry and in society as a whole in recent years. One of the important problems in data mining is discovering association rules from databases of transactions where each transaction consists of a set of items. Many algorithms have been proposed to find frequent item sets from a large database. However, there has not yet been published implementation performing the best under whatever conditions. Apriori is one of the most typical algorithms, which is proposed by R.Agrawal and R.Srikant in 1994 for mining frequent itemsets for Boolean association rules[1]. It aggressively prunes the set of potential candidates of size k by using the following observation: a candidate of size k can be frequent only if all of its subsets also meet the minimum threshold of support (min_sup). Even with the pruning, the task of finding all association rules requires a lot of computation power and memory when meeting massive datasets and intensive frequent itemsets.

Over the years, biology has become creative inspiration of scientists and engineers. They put biological information system as a distributed autonomous system, which provide effective techniques and methods for the  fields of science and engineering. Organism is a huge and complex system, the information processing system of which can be divided into: brain system, genetic system, endocrine system and immune system. The immune system is self-defense system of creatures, which aims to distinguish external harmful antigens and self-organizations so as to clear the pathogen and maintain the stability of the organism. Immune system is an information processing system, which is highly parallel, distributed, adaptive and self-organization and it also has strong ability of learning, identification and feature extraction. Recently, immune algorithm (IA) which enjoys rapid development has become another research hotspot after neural networks and genetic algorithms [2].

In this paper, an optimal method to update association rules based on immune algorithm is proposed. How to apply immune algorithm to mining associations rules and how to better optimize the process to discover associations rules is the problem needed to solve.

Furthermore, comparison of performance is taken between IA_based algorithm and the classic Apriori algorithm. The experiments results prove that this IA_Based algorithm is more effective in mining association rules as well as ensuring the link quality.

2  Related work Generally, the research on frequent itemsets and association rules involves 3 aspects. Firstly, the research on high performance algorithms of classical frequent itemsets mining, including its improvement and exploration of new mining methods; secondly, the expansion of the concept of the frequent itemsets; thirdly, the expansion of the concept and the scope of association rules, including the valuation of the rules and the new type of association rule.

Apriori, as is mentioned in Section 1, an influential algorithm, employs an iterative approach known as a level-wise and breadth-first search, which k-itemsets are used to generate (k+1)-itemsets[3]. Direct Hashing and Pruning (DHP) [4] use a hash table for pre-computing the approximate support for the (k+1)-itemsets while the k-itemsets are processed. Frequent itemsets can also be mined using vertical data format, which is the essence of the ECLAT (Equivalence CLASS Transformation) algorithm developed by Zaki [5]. FP-Growth was  ____________________________________      Proceedings of IEEE IC-BNMT2013    proposed by Han et al. in Ref. [6]. This algorithm creates a compact tree-structure, FP-Tree. F.Wang et al.

proposed an improved Apriori algorithm based on the matrix [7]. The expansion of the research scope of association rules reflected in these following aspects. 1) The expansion of the data mining types. Ref. [8] has put forward the K-degree complete act. 2) The expansion of the data mining space. In space, association rules also extended from simple one-dimensional to multi-dimensional association rules mining. 3) The research on rules generation. Ref. [9] has introduced a method using interest degree as the effective measurement.

In summary, these algorithms are designed to minimize the space and time complexity in the process of scanning the database. This article will apply the immune algorithms to association rules mining and design a new frequent itemsets generation algorithms, which will avoid the generation of huge amount of candidates and the frequent scan of the database in the process of frequent itemsets mining, and improve the performance of frequent itemsets mining.

3  Association rules  3.1 Definition of association rules An association rule is defined as follows: let I= {i1,?, in}be a set of items, and T = {t1,?,tm} a set of transactions, where each of transaction ti consists of a subset of items in I. An association rule is an implication of the form:  A B,A ,B ,A B? ? ? ? ??I I  An itemset A has support s in T if s% of the transactions in T contains A. An itemset A is frequent if its support is higher than the user specified minimum support threshold (min_sup).The confidence of rule A B is the probability that when itemset A occurs in a transaction in T, itemset B also occurs in the same transaction. The problem of mining association rules is to generate all association rules that consist of frequent itemsets and the confidence greater than the user-specified minimum confidence threshold (min_conf). The discovery of association rules is thus important in understanding the underlying relationships between a large numbers of possible combinations of items [10].

3.2 Apriori algorithm The main steps of Apriori algorithm consist of join and prune actions and the process is followed. 1) the join step: To find Lk, a set of candidate k-itemsets is generated by joining (k-1) -itemsets. This set of candidates is denoted as Ck. Let l1 and l2 be itemsets in Lk-1. The join 1 1k kL L? ?? is performed, where member l1 and member l2 of Lk-1 are joinable if their first (k-2) items are in common. 2) The prune step: Ck is a superset of Lk, its member may or may not be frequent.

According to the Apriori property, any (k-1) -itemsets that is not frequent cannot be a subset of a frequent  k-itemsets. Hence, if any subset with length (k-1) of a candidate k-itemsets is not in Lk-1 , then the candidate cannot be frequent either and so can be removed from Ck.

3.3 Mathematical model As the final association rules need to be generated by items with the size of i_sum corresponding transactions with the size of t_sum, therefore we can take binary encoding pattern in this problem. Suppose that the number of final items among the association rules is ?, which means the iteration stops until ?th frequent itemsets. The final solution is the form of an i_sum-bits binary array I, in which the solutions with ?-bits are randomly generated on any digit and set them as ?1?s, the others as ?0?s. The form of solutions can be expressed as follows:    {itemset } itemset [1 _sum]   itemset  j j  i _ sum  j j  , , j ,i   ?    ? ? ? ??    ??  I  ???   After generating candidates frequent itemsets when taking each iteration, there needs to be a judgement about whether support_count of each itemset is greater than min_sup so as to enter in prune steps and get Lk. IM represents a specific case, for instance IM={B, E, F},thus IM is describes as {0, 1, 0, 0, 1, 1, 0, ?,0}.

sup M  M sup_count(I )f (I )= ;  D (2)  The calculating method of the support of IM is listed in Eq. (2). Once discovering the frequent items from the transactions database, strong association rules can be generated directly, which means satisfy min_sup and min_conf.

(X) (Y)  (X) (Y)  (X)  _ ( ) ( )  _ ( )  _  M M  conf M M  M  sup conf  sup count I I f I I max  sup count I  f min_sup f min conf  ? ? ?  ? ?   ? ? ? ?     (3)  As in Eq. (3), suppose that IM(X) and IN(Y) represent the items in the frequent itemsets. In this way, fsup and fconf can be the efficient indicators of the system performance.

4  IA_based Apriori algorithm Immune Algorithm (IA) is a new optimization algorithm imitating the immune system to solve the multimodal function optimization problem. Immune algorithm perceives the problem as the antigens while the solution as the antibody [11]. In this problem, the antibody is the final association rules which is represented by I. There must be an initial population in IA. The most general method is to generate the whole population randomly. As mentioned in last section, the antibody is the form of an i_sum-digits array, which is composed by binary encoding with ?0?s and ?1?s. In this array, ?-digits ?1?s are randomly generated and left bits are set as ?0?. The number of solutions is ?.

Proceedings of IEEE IC-BNMT2013    4.1 Global fitness function To find the optimal association rules by applying immune algorithm, a global optimization scheme is considered. In order to satisfy objectives of prune steps and ensure the quality of the association rules, here as in Eq. (4) we create a global fitness function:  1 2fit sup confF f f? ? ?? ?sup1 fss1 f11              (4) ?1 and ?2  denote the weight parameters. ? indicates the  a prune step which is judging whether all the subsets of k-itemset are belong to Lk-1.

4.2 Antibody density Given two arbitrary itemsets IM and IN, for M,N are ranging from 0 to t_sum, the difference between them is due to different items corresponding different bits, which can be measured by Euclidean distance. The Euclidean distance between two itemsets can be calculated by Edistance (IM, IN) as in Eq. (5):  ? ? _ 2(M) (N)  ( )  i sum  M N j j j  Edistance I I = itemset itemset ?  ??   (5)   Two antibodies are defined as ?neighbors? when the Euclidean distance of two itemsets is less than the given threshold . Eq. (6) is used to judge whether the two antibodies are similar enough.

1,Edistance( ) is ( )=  0,others M N  M N  I I antiNB I I  ??  ?   (6)   The density of antibody is defined as the ratio of the number of neighbors with the population size (p_size), which is described as Eq. (7):  ( , ) ( )  _ M N  M isantiNB I Idensity I  p size ?       (7)   In this case, the density of antibodies can be estimated, which is used in the operator immune selection to choose the individuals with low density in population.

4.3 Operator description In this paper, an optimal method to update association rules based on immune algorithm is proposed. How to apply immune algorithm to mining associations rules and how to better optimize the process to discover associations rules is the problem needed to solve.

Furthermore, comparison of performance is taken between IA-based algorithm and the classic Apriori algorithm. The experiments results prove that this IA-Based algorithm is more effective in mining association rules as well as ensuring the link quality.

Based on the optimization problem we discussed above, here we choose three operators to find the optimal solution: Immune Cloning, Clone Mutation and Immune Selection which are described as follows.

Immune Cloning: In immunology, Cloning means asexual propagation so that a group of identical cells can be descended from a single common ancestor, such as a  bacterial colony whose members arise from a single original cell as the result of mitosis. At the beginning of IA, the antibodies will clone themselves to enlarge the solution space which will increase the opportunity to get the results. Suppose the initial antibody population is represented as AI. A cloning parent population BI will be reproduced following a specified proportion. CI is the resulting population from applying Immune Cloning.

Clone mutation: The first step is to randomly select an item itemsetj from each antibody and mutate it according to Eq. (8). After mutation, the item becomes itemsetj?, which is described as in Eq. (8) and the mutated antibody denoted as IM?. The entire set of mutated antibodies composites the mutation population CI?.

1 , (0, )j jitemset itemset j i_sum? ? ? ??           (8) Immune selection: To ensure the diversity of the  population, this operator is chosen in the promble. The density must be limited when a new generation of antibody is generated in case of existing two antibodies with too much similairity. In this case, when making an immune selection, we select the antibody with higher fitness and lower density [12]:  _   ( )1( ) ( ) ( )  fit M select M p size  M fit N  N  F I F I  density I F I ?  ? ?  ? (9)    In Eq. (9) density (IM) is the density of antibody IM and Ffit (IM) is the fitness function of antibody IM.

4.4 IA_based algorithm process Suppose the antibody population is AI={I1, I2,?, InA} with the size of nA, the cloning parent  population is BI={I1, I2,?, InB} with the size of nB, the cloning population is CI={I1, I2,?, InC} with the size of nC, the memory population is MI={I1, I2,?, InM} with the size of nM. The frame work of IA-based apriori algorithm can be seen in Figure 1, and the process is described as follows:  1) Generate initial antibody population AI with the size nA randomly. Create the initial MI=?, BI=? and CI=? with the size nM, nB and nC. Set the maximum iterative times as tmax, initialize t=0.

2)  According to the values of fitness function for each antibody, sort the highest nB ones to constitute the cloning parent population set BI(t).

3)  Apply the Immune Cloning on BI(t) to get the clone population CIa(t).

4) Generate initial antibody population AI with the size nA randomly. Create the initial MI=?, BI=? and CI=? with the size nM, nB and nC. Set the maximum iterative times as tmax, initialize t=0.

5) Calculate the fitness function Ffit for each antibody in AI(t) CI(t)? and sort them in descending order. Update the memory set MI by choosing individuals with the highest Fselect in Ap(t) Cp(t)?.

Proceedings of IEEE IC-BNMT2013    6) Perform Immune Selection in AI(t) CI(t)? and select the best w individuals to enroll in AI(t+1) to take next round of iteration, left antibodies in  AI(t+1) are randomly generated in solution space.

7) If t > tmax is satisfied, the antibody in MI with the highest fitness value will be exported as the output of the algorithm, Stop; Otherwise, MI(t+1)= MI(t), t = t + 1 and return to 2).

Initialization, Initialize AI, BI and MI and their size, tmax, set t =0  Sort the antibodies, generate a cloning parent population BI(t)  Perform Immune Cloning on BI(t)  Perfoff rm ClCC oll ne MuMM tatt titt on on CI(II t)t , then generate CI(II t)t  Perform Clone Mutation on CI(t), then generate CI(t)  t =t+1  t tmax  Output the solution set  No  Calculate fiff tness foff r each antibody in AI(t(( )tt CI(t(( )tt ? and sort them in descending  order. Update MIMM .

Calculate fitness for each antibody in AI(t) CI(t)? and sort them in descending  order. Update MI.

Perfoff rm ImII mune SeSS lell ctitt on in AI(II t)t CI(II t)t ? generate AI(II t+1).

Perform Immune Selection in  AI(t) CI(t)? generate AI(t+1).

Yes  Start   Figure 1 Process of IA_based Apriori algorithm  5  Experiments and results In order to evaluate the efficiency of the proposed method, several experiments have been conducted and results comparison with Apriori algorithm was also presented. All the experiments are conducted in Matlab R2012a on an i3 processor with 4 GB main memory running under windows 8 operating system. The datasets is collected from BBS of Beijing University of Posts and Telecommunications. We have got all the board names that all the users used to post a message on in the past three months, which is to say, a user as a transaction corresponds to w boards he has messaged as items. Due to the sparse data, we finally chose five boards each user usually posted messages on after taking a pre-treatment to the data. Therefore, the datasets containing 4091 transactions and 219 items is the input of the system.

In this problem, only when the support_count of the frequent itemsets satisfies min_sup, further judgment about the confidence_count of the itemsets can be taken in, which means an undertake relationship exists.

Therefore, ?1 needs to be set much greater than ?2 so that the values of fitness function can reflect the rules efficiently. Since IA algorithm is to select a certain amount of optimal solutions to enter into next round of iterations, in this case, if any subset of k-itemset does not belong to Lk-1, set ? as small as possible to make sure those itemsets can be eliminated. The parameters values are as Table I.

Table I Parameters in algorithm  Parameters Values ?1 ,?2 ?  0.9,0.1 0.01,1  ? 1 min_sup 0.07 min_conf 0.8  nA 40 nB 20 nM 20 tmax 200  Since the two optimization objectives have two completely different weights and the goal of the proposed algorithm is to achieve maximum fitness value, the two functions: fsup and fconf will have different restrictions and the trace of fsup is identical to the fitness function. The final result show that optimized support count can be 0.7 that make the fitness function reach a satisfying value. Changes of each function can be shown in Figure 2. When the number of iterations reaches 120,150 and 195, the function can converge to a new optimal outcome, which fully proves that this algorithm has the characteristics of rapid convergence and can get compensation scheme in time.

0 50 100 150 200          fitness(?) fsup(?) fconf(%)   Figure 2 Changes in iteration  A Figure 3 presents a detailed time comparison between Apriori algorithm and IA_based algorithm when min_sup is set in different values. As shown in the figure, the time gap is quite large generally. When min_sup is set as 0.733, which means 300 boards are set as the threshold, the running time of Apriori suddenly drops to 27.9975 ms while the time of IA is 22.7802 ms, 22.9894 ms, 23.1766 ms, etc. and changes a little, the reason of which may be the particularity of our data sets. To sum up, with the design of immune antibodies and immune operators, the IA_based Apriori algorithm is proved to have better results in time comparison and presents good global convergence in the process.

Proceedings of IEEE IC-BNMT2013    0.0703 0.0709 0.0715 0.0721 0.0727 0.0733         x 104  Min_sup  ru n  tim e(  m s)      Apriori IA   Figure 3 Running time of two algorithms in different min_sup  6  Conclusions In this paper, an optimal method of mining association rules is presented. A major goal of this paper is to get frequent itemsets using modified Apriori algorithm as soon as possible. Immune Algorithm in artificial intelligence field is introduced to our research and used fully in the rules updating. Based on the problem we have proposed fitness function and three immune operators are designed to make sure the IA_based Apriori algorithm is properly used in this problem. In the section of experiments, the feasibility and effectiveness of IA is proved and the comparison with Apriori shows the new method has better performance. In the presented experiments, the running time of two different algorithms are only compared in different support counts, however, in the further research, the analysis of the algorithm can be in different amounts of transactions and various numbers of items, thus the richness of the results comparison can be presented.

Acknowledgements This paper was supported by the National Natural Science Foundation of China under Grand No.61003282; the China 973 Program under Grand No. 2009CB320505; the China Next Generation Internet (CNGI) project Research and Trial on  Evolving Next Generation Network Intelligence Capability Enhancement (NICE) and supported by ?the Fundamental Research Funds for the Central Universities? under Grand No.

2012RC0613.

