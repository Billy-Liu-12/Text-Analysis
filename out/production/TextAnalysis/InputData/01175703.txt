A New Fast Algorithms for Mining Association Rutes in Large Databases

Abstract ?7tispaperpmposes o novel ond eflcienf olgorifhm  for mining nrSOCi4fiOn ruler in l 5 e  dofabases. We infroduce the problem of mining o large collection of baskef &o tvpe bansodions for assmiofion rules befween sen of item wifh some minimum specijid confidence, and plesenlr M &ciem algorithm for this purpose. The conhibution of this pmjeu is thre~$alk (I) eflcienf gener4tim fw lmge ifemseb by hprh method (2) effeuive reducfian on itemets scan required by the Division appmch and (3) fhe option of reducing the number of database scans required Our pmposed hash and division-based technquer. HD olgorithm, is very eflcienf fw the generation of condidne lmge ifemsea, where the number of condidate large ifemsets generafed by HD is, smaller fh chm by many mefhodr such as the Apriori algarifhm, DHP algorithm and DIC algorifhm According to ow simulation rerulrs. fhe prwosed approach ir &cienl thon mry misting algorifhms.

Keywords: data mining, association nlw. large daiabeua  1. Introduction  Raeotly, mining of databass has amacted a growing amount of attention in database wmunit ies  due to its wide applicability in d industry to improving marketing swtegy [I], 131, [12]. Association rule mining finds interesting association or wrrelation relationship among a large set of data items. with massive amounts of dam wntinuously k i n g  wllected and s t o d  many industries an becoming inter&tcd in mining association r u b  from their databases. The discovny of infnating association relationships among huge amounts of business hansBetiDn records can help in selective marketing, business management and many business decision making processes, such as cmss-marketing catalog d s i g h  and loss-leader analysis. A typical example of association rule mining is market b&et analysis. ?his process analyzes customer-buying habits by finding sssociations  khvccn the d i f f m t  items that customers place in their ?shopping baskets?. Since its inception, association rule mining has become one of the wre data mining tasks and haF amacfed Iremendous interest among practitioners and researchers. Association rule mining is undirected or unsupervised dam mining OVR variable-length data, and it produces clear, understandable results.

Many algorithms havc bem proposed to discover the large itcmsets [2], [SI, [SI, 191. Generally speaking these approaches iirsl wnsbuct a candidate set of large itcmwts based on various heuristics, and then diswver the subset that indeed wntains large item&. ? h i s  process can k done iteratively in the s a s e  that the large itemsets discovered in one iteration will be utilized as the basis to generate the candidare set for the next itnation For instanax, in [SI, at the M iteration, all large ifcmsets wnlaining k itrms, referred to as large k-itemscU, arc generated In the next iteration, to wnshuct a candidate set of large (k+l)-items&, a heuristic is utilized to expand some large titemsets into a (k+l)-itemwt if certain wnsnaints an satisfied. The Apriori algorithm by Agmwal ha merged as one of the best association rule mining (ARM) algorithms [Z], [5]. Apriori utilizes a wmplele, botbm-up scareh with a horimnal layout and enumerates all fkquent itemsets. The DHP algorithm proposed by Park extends the Apriori method by utilizing a hash table to precompute approximate support of I-itnosets during the fm iterations [SI. The second itaation need wunt only those candidafes falling in hasb cells with minimum support This kh-table technique can succssfully nmovc many candidate pairs that would eventually have become infrequent Ihc DIC algorithm proposed by Brin is a generalization of Apriori. The datlbase is divided into p qual-sized panitions so that each partition fits in memory. In this paper, we develop a new algorithm HD (standing for hashing and division) for e5cimt large itnnset generation. According to MII simulation mults, our proposed algorithm W is usually 15-38 percent better than DHP. In addition, HD performs anywi~ae much bener than Apriori and DIC.

Q 2002 IEEE SMC WPUZ    2. Novel Aspect of Work  In essence, algorithm HD depicted in Fig. 1 utilizes the technique of hashing to filter out unnecessary i tnnsN for next candidate items* generation. In addition, the meaning of various parameters is illustrated in Table 1.

Hi  Function HI-supporyCd F o r a l l ~ E C ~ d o b e g i n  For( i=1; i s m ;  i+) Read d, block c,collM++, if ccovnf ex& the  support threshold, then stop calculating next block  iRc.count2 mh-sUp)(  Harh table containing vd buckets for CC,  break )  end-of-Hl-supp0i-t  Function apriori-sup(CJ fonll tmnsacb 'ons I E D  do L q i n  f o n l  candidates cs C, do C, = subset@,, f);  fCOuW++;  ad-of-apriori-sup  Fig. 2. Subproccdures for algorithm HD.

The algorithm has four main steps: Stcpl : SU minimum support and divide databasc into m  Sfcp2 : Find 41, crate Hi, end gennafs C& read the fm b lock  block of database and styt discovering all C,; if  calculating next block c,execed the "pport threshold, then stop  Step3 : Find Ll Step4 : Repeat Step2 until it unable to generate Lbl.

CCI Set of candidate k-i- (unfiltered out by . C, Set of candidate k-itemxll ( t i l t e d  ouf by hash hash table) I I IAvcrage size ofthe maximal potentially l a c  I I L l N u b e r  of potentially &e itemsets I I N lNumbcrofitems I  3. Erpcrimcnbl Rmnlta  Our experiments utilized a P4 I.7GHz PC with 512 main memory. We utilized different synuldc databases that have been utilized as benchmark databases for many association rules algorithms 121, 141. 161. [7l, 1101, [Ill.

Let D "presenu the number of bdnrsctons. Tthe avemge uamaction Size, I the size of a maximal potentially tiquent itemset, L the number of maximal potmtially tiquent itemsets, and N the number of items. The data is generated utilizing the following pmcedure. We 6rst generate L maximal itemms of average size I by chwsing    from the N items. We next generate D transactions of average size T by choosing from the L maximal itemsets.

We refer the reader w IS] for more defail on the database generation. In. ow experiments, we sct N = 1,000 and L = 2,000. Experiments are conducted on databaKs with di5eermt values of D, T, and I. The database parameters are presented in Table 2. In Table 3 through Table 7, wc compare OUT novel approach against Apriori, DHP and DIC for di5erent values of minimum support on L e di5erent databass. As the support des- the size and number of frequent itemsets increases. Apriori, t h w has to makc multiple passes over the database and performs poorly. Fig. 3 and 4 depict the comparison of the database size VS. execution time for HD, DHP, Apriori and DIC algorithms with different values of minimum support and average sirc of the wnsactions. Fig. 5, 6, and 7 show the comparison of the average sue of the hawactions w. execution time for ?ID, DHP. Apriori and DIC algorithms with different values of minimum support on the di5mt databases Accurding to our simulation  T=I& rnin-sud.Z%  mults, OUT propxed algorithm HD is usually 15-38 percent bater than DHP. In addition, HD performs anywhere much better than Apriori and DIC.

E I O ;  min-sup=O.5%  D10 DSO DlOO DIH) I--X-- DIC I Database s u e  DIO DSO DIOO DISO I+DIC 1 Database sue  I D10 DH) DIM DIM I-X-DIC I Database size I I I  (c)T=lO; min-sup-0.75%  Fig. 3. Comparison of the database size vs. execution time for HD, DHP, Apriori, and DIC algorithms (F10, and minimum support (s) = 0.25X 0.5./4 and 0.75% respectively).

Table 4 Execution times in saonds for HD, DHP, ApriorL and DIC ( P I S ,  minimum support (s)=0.25%i, 0.5% and 0.75%,  D10 Ixo DIM DIM l---*DIC I ntabasc si2e  (b)T=15; min_sup=O.5%  I T=l% mir -d .75% I  D10 Ixo Dlm Dl50 I-+-& I htabav size  (c)T45; min-sup=o.75%  Fig 4. Comparison ofhe database r i u  vs. execution time for HD, DHP. Apriori. and DIC algorithms ( P I S ,  and minimum support (I) = 0.25% 0.5% and 0.75Y6 ~spccfively).

Table 5: Execution tims in seconds for HD, DHP, Apriori, and DIC (DIOOK, minimum support (s)=0.25% 0.5% and  ~~~  Apriai 1 2671 I 208 1201 1 3 1 5 6  I 26591 589 1128755 I 17169 1 3949 ~1564119~116477[ 23789 DIC I 1954 I I85 I 173 I 21517 I 2109 I 487 I 93851 I 13517 I 3398 111345191 94856 I 19374    I I  - APnQn  T6 TI0 TI5 Ro 3  (a)D=IOOK min su@.25% (b)D=100K rnin-sup==O.S% D d W K  mAl_W.75%  (c)D=lOOK; min_su@.75% Fig. 5. Comparison of the average size of the uunJacfiom VS. execution time for HD, DHP, Apriori. and DIC algorithms (+I OOK, minimum support - 0.75%).

Table 6 Execution times in scconds for HD. DW, Apriori, and DIC (B150K minimum support (s)=O.ZS%h 0.5%, and  The avcnoe size of& rmnsactiDlU  (c)D=ISOK; min-sufl.75% Fig. 6. Comparison of the avenge si= of the uunsactions vs. execution time for HD, DHP, Apriori, and DIC algorithm (DISOK, minimum support = 0.75%)).

Table 7 Execution times in seconds for HD, DHP, Apriori, and DIC (D=2M)K, minimum support (sF0.25K 0.5% and  Fig. 7. Comparison of the average size of the uansactions vs. execution time for ED, DHP, Apriori, and DIC algorithms (D=200K, minimum support = 0.25%).

4. Concluaioa  In this paper, we presmt a novel algorithm for efficient enumeration of frequent itemsets. HD algorithm uses hash method to reduce the number of c a n d i d items&, moreover. a division-based approach is uxd to reduce the number of database sem required. ExIemivc simulation study has ban wnductcd to evaluate performance of the proposed algorithm. According to our simulation resulu, our proped algorithm HD is usually 15-38 p B M t  better than DHP. In additiow HD performs anywhere much better than Apriori and DIC.

5. Rcfcrrncw [IIPieter Adriaans. Dolf Zantinge, Data Mining,  Addison Wesley Longman. 1996.

[2] R Agrawal, T. hielinski, and A Swami, 'Mining  Association Rules between sets of Items in Large Database$" Fwc of the ACM SIGMOD CO& M Managemem of Dafa. Washington, D.C.. pp. 207-216, May 1993.

[3]Iiawei Han, Michelinc Kamber, Data Mining: Concepts and Techniques, Morgan KaufmaM Publishem 2001.

[4]M. Houtoma, A Swami, "Set-oriented mining for association NI-" IBM Research Report RJ 9567, IBM AlmadenRcwsrchcCntn,SanIose,~OEtober1993.

[SIR Agrawd and R Srikant, "Fan Algorithms for Mining Association RUIW in Large ~atabaseg" ~n Proc 2o"L  Im4 Con/: Vby lmge Dam Barer, pp. 478-499, Sept 1994.

[q A Savasm, E. Omiecinski and S. Navathe, "An eilicient algorithm for mining association rules in large d d q "  In P m c  2I'VLDB. pp. 432444, Sept 1995.

[VH. Toivonm "Sampling large databases for asmiation rules," In Pme. 2 p  VLDB Confrence, Mumbi (Bombay), Scpr 19%.

[8] J.S. Park, M.S. Chen, and P.S. Yu, "Using a Hash-Bared Method with Transaction Trimming for Mining Association Rules," IEEE Dam. On Knowledge ond Dah Eng.., vol. 9, no. 5,  pp. 813-825, SeptJOct .1997.

[9] S. Brin, R. Mohwni. I.D. Ullman, and S. Tsur, "Dynamic Itemset Counting and Implication Rules for Market Basket Data," Pmc. ACM SIGMOD Con/: on Monagement of Dolo. ACM Press. New York pp.

255-264. 1997.

[IO]RobcRo I. Bayardo Ir., "Efficiently Mining Long Patterns from Databases." plot. of the ACM SIGMOD IN? CO$ On Management of Dam pp. 85-93, Seattle, Washiigton, June 1998.

[IIIJ. Him 1. Pei, and Y. Yin, "Mining frquent patterns without c a n d i d  genemion," Pmc. of lhe ACM SIGMOD Int? Con/: On Managemem of Data, May 2000.

[12]Mohammed 1. ZaLi " P d l c l  and Distributed Association Mining: A Survey." EEE Connmency, vol.

7, no.4.p.  14-25,OcL-Dec. 1999.

