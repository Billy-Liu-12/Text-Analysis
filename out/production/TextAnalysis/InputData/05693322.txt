Bridging folksonomies and domain ontologies : Getting out non-taxonomic relations

AbstractSocial bookmarking tools are rapidly emerging on  the Web as it can be witnessed by the overwhelming number of  participants. In such spaces, users annotate resources by means  of any keyword or tag that they ?nd relevant, giving raise  to lightweight conceptual structures aka folksonomies. In this  respect, needless to mention that ontologies can be of bene?t  for enhancing information retrieval metrics. In this paper,  we introduce a novel approach for ontology learning from a  folksonomy, which provide shared vocabularies and semantic  relations between tags. The main thrust of the introduced  approach stands in putting the focus on the discovery of non-  taxonomic relationships. The latter are often neglected, even  though they are of paramount importance from a semantic  point of view. The discovery process heavily relies on triadic  concepts to discover and select related tags and to extract  and label non-taxonomically relationships between related tags  and external sources for tags ?ltering and non-taxonomic  relationships extraction. In addition, we also discuss a new  approach to evaluate obtained relations in an automatic way  against WordNet repository and presents promising results for  a real world folksonomy.

Keywords-Folksonomy, Data Mining, Conceptual Knowledge  Discovery, Triadic Concept, Ontology, Data Mining, Associa-  tion rule.



I. INTRODUCTION AND MOTIVATIONS  Social bookmarking tools are rapidly emerging on the  Web as it can be witnessed by the overwhelming number  of participants. Indeed, within the last years, social software  on the Web, such as FLICKR1, DEL.ICIO.US2, BIBSONOMY  3, YOUTUBE 4, to cite but a few, has received a tremendous  impact with regard to hundred of millions of users. A  key factor to the success of social software tools in the  Web is their grass-roots approach to sharing of information  between a broad community or people (folks) allowing them  the browsing and searching of tags attached to information  resources. The result of this collaborative tagging activity  in the systems has been given raise to a user-generated  classi?cation called folksonomy which describe assigning    tag ti to resource rj by user up. However, the ?at organ-  isation of tags and the lack of explicit representations of  the knowledge contained in folksonomies pose challenges  for folksonomy searching and resource retrieval [1]. Indeed,  during folksonomy exploration, it is dif?cult for a user with a  1 http://www.?ickr.com  2 http://www.delicious.com  3 http://www.bibsonomy.org  4 http://www.youtube.com  limited subjective knowledge to ?nd related resources which  may better represent his current interests.

Dedicated literature witnesses a wealthy work about im-  proving the quality of queries based on folksonomy. Hence,  one stream of research has attempted to re?ne query result  using clustering and tag clouds techniques. However, the  relations derived by these techniques are only taxonomical  relationships, such as hypernym relations, and are not based  on meanings . Indeed, relying on statistical association or  co-occurrence of tags, clustering techniques group the search  result into several subsets and recommend related resources  based on selected tags. On the other hand, tag cloud, which  contains very general terms such as computer or picture,  is a somewhat rough approach to organise tags. It shows  a subset of frequently used tags in sizes relative to their  frequencies. Another stream of research takes an existing  upper ontology as the base structure and uses it to facilitate  organizing query results. However, the upper ontology may  not be well matched with the tags in the folksonomy since  many of the tags from collaborative tagging system do not  exist in, for example, WordNet. Similarly to the clustering  and the clouds techniques, the non-taxonomic interlinks  between tags is neglected, e.g, the relation java provides  library between java and library tags.

Even though many approaches for extracting ontologi-  cal structures from folksonomies have appeared during the  last decade, most of them mostly focus on the automatic  acquisition of taxonomic relationships between tags and  often neglect the importance of non-taxonomic relationships.

In fact, the discovery of non-taxonomic relationships is  considered as the least tackled problem within ontology  learning [2]. It appears to be the most intricate task as,  in general, it is not known how many and what type of    conceptual relationships should be modeled in a particular  ontology. In general, two tasks have to be performed for  learning non-taxonomic relationships. On the one hand, one  has to detect which concepts are related. On the other hand,  one has to ?gure out how these concepts are related; thus,  a name for the relation has to be found.

In this paper, we present an automatic and unsuper-  vised approach called NONTAXFOLKS for discovering  non-taxonomic relationships from folksonomy using triadic  concepts with existing external sources, i.e., WordNet,  Wikipedia and Google. Speci?cally, triadic concepts are  used to discover and select related tags and external sources   978-0-7695-4257-7/10 $26.00  2010 IEEE  DOI 10.1109/ICDMW.2010.72   are used for tags ?ltering and non-taxonomic relationships  extraction. The only restriction is that resources should be  written in English, as the method relies in English language  regularities.

The remainder of the paper is organized as follows.

Section II presents an bref review of previous research  performed in the non-taxonomic learning area. Section III  recalls the key notions used throughout this paper. The  non-taxonomic approach steps is thoroughly described in  Section IV. Section V describes the evaluation procedure  (using WordNet-based relatedness measures) as well as the  results obtained from the DEL.ICIO.US folksonomy. The ?nal  section presents the conclusions and proposes some lines of  future work.



II. RELATED WORK  Given the novelty of the problem, there are still very  few related works. In [3], the authors rely on external  authority sources as well as on Semantic Web ontologies  to make sense of tags semantics. Even though this can be  of help to ?nd more interesting relations than co-occurrence  models, it can somewhat restrict the related tags discovery,  since if a relation between a pair of tags is not de?ned  in these external sources, it is assumed that these tags  are not related, even if they frequently co-occur in the  dataset. In our approach, instead of doing that, we infer  the related tags directly from the triadic concepts and thus    are not dependant on external sources. Other related areas  are ontology learning and evaluation. As pointed out before,  most of the literature concerning ontology learning from  folksonomies oriented their approaches upon co-occurrence  models. Mika [4], use co-occurrence of tags with resources  and users to build graphs relating tags and users and also  tags and resources. In [5], conditional probabilities are used  to ?nd subsumption relationships. The work of [6] is worth  of mention since it uses probabilistic unsupervised methods  to derive a hierarchy of tags. However, it does not consider  the different type of relations, e.g., Hypernym, Synonym  and others relations between tags. Given that co-occurrence  models are the core subject of frequent itemset mining,  in Schmitz et al., the authors proposed the application of  association rules between projections of pairs of elements  from the triadic context model of folksonomies [7]. While  these kinds of association rules make it possible to identify  the existence of relationships among different tags, users or  resources, they do not provide any information about the  nature of these relations. Even though all these works qual-  itatively contribute for making folksonomies more useful,  performance issues are rarely mentioned. Furthermore, all  these works were only interested in the taxonomic structure  of the derived ontology and neglect the non taxonomic  relationships between concepts.



III. KEY NOTIONS  Before presenting our approach, we provide a simpli?ed  de?nition for some of the concepts used throughout in this  paper, namely, ontology, folksonomy and triadic concept.

Since non-taxonomic relationships are central components  of our contribution, we are going to introduce them through  the ontology de?nition. Hence, we present an adaptation of  ontology de?nition [8] as follows:  De?nition 1: (ONTOLOGY) An ontology is a tuple O =  (C, P , T R, NT R), where the disjoint sets C and P contain  concept and relation identi?ers. T R de?nes taxonomic rela-  tionships between concepts, i.e., T R ? C  C, and NT R  de?nes non-taxonomic relationships between concepts, i.e.,  NT R ? C  P  C.

Example 1: An example of an ontology O is depicted  by Fig. 1. The set of concepts is de?ned by C = {System,  Linux, Network, Open source, Server, Java, Scheme}, the set    of taxonomic relationships represented by is-a relations is  de?ned by T R = {(Linux, System), (Linux, Open source)}  and NT R = {(System, Operates on, Network), (System,  Provides, Scheme), (Network, Consist of, Server), (Open  source, Focused on, Java), (Linux, allows, Network)} spec-  i?es the set of non-taxonomic relationships.

A folksonomy basically describes users, resources, tags,  and allows users to assign (arbitrary) tags to resources.

Similarly to [9], we de?ne a folksonomy as follows:  De?nition 2: (FOLKSONOMY) A folksonomy is a tuples  set of F = (U , T , R, P ), where P ? U R  T denoting  a ternary relation and each p ? P can be represented as a  triple:  p = {(u, r, t) | u ? U , r ? R, t ? T}.

which describes the assignment of the tag t by the user u  to the resource r.

In the following, we will recall the main de?nitions [10]  related to triadic concepts, that exactly mimics the structure  of a folksonomy.

De?nition 3: (TRIADIC CONTEXT) A triadic extraction  context (or a triadic context for short) is a quadruple K =  (E , I, C, Y ), where E , I and C are sets, and Y is a ternary  relation between E , I and C, i.e., Y ? E I  C. Elements  system    scheme  systems  organisation   organisations  system  strategy   scheme  schema  scheme  linux  open-source   open_source  open source  open source  network  networking  web  networks  network  java  server        host  hosts  server  is_a  is_a    allows  operates_on  provides  consist_of  focused_on  Figure 1. Ontology example   of E , I and C are respectively, called objects, attributes, and  links and (e, i, c) ? Y , underlies that the object e has the  attribute i according to the link c.

Example 2: An example of a triadic context for a folk-  sonomy F is depicted by Table I with U = {u1, u2, u3, u4,  u5, u6, u7}, T = {t1, t2, t3, t4, t5} and R = {r1, r2, r3}.

Each cross represents a ternary relation between a user  from U , a tag from T and a resource from R, i.e., a user  has tagged a particular resource with a particular tag.

De?nition 4: (A (FREQUENT) TRI-SET) Let F := (U , T ,  R, Y) be a triadic context. A tri-set of F is a triple (A, B,  C) with A ? U , B ? T , C ? R such that A  B  C ?

Y . A tri-set (A, B, C) of F is said frequent whenever |A | ?

u?minsupp, |B | ? t?minsupp and |C| ? r?minsupp,  where u ? minsupp, t ? minsupp and r ? minsupp are  user-de?ned thresholds.

We will now recall the notion of frequent closed itemsets  [11].

De?nition 5: ((FREQUENT) TRIADIC CONCEPT) A tri-  adic concept (or a tri-concept for short) of a triadic context  K = (E , I, C, Y ) is a triple (U , T , R) with U ? E , T ? C,  and R ? I with U  T  R ? Y such that the triple (U ,  T , R) is maximal,i.e., for U1 ? U , T1 ? T and R1 ? R  with U1  T1  R1 ? Y , the containments U ? U1, T ?

T1, and R ? R1 always imply (U , T , R) = (U1, T1, R1).

A tri-concept is said to be frequent whenever it is frequent  tri-set. The set of all tri-concepts of K is equal to T CK =  {T Ci | T Ci = (U , T , R) ? Y is a tri-concept, i = 1. . .n}.

In the following, we introduce the NONTAXFOLKS ap-  proach for the extraction of non taxonomic relationship.



IV. NONTAXFOLKS:AN APPROACH FOR NON  TAXONOMIC RELATION EXTRACTION FROM  FOLKSONOMIES  As we previously mentioned, identifying non-taxonomic  relationships between tags is a compelling issue for the    ef?cient use of the social bookmarking systems. Indeed,  with a clear semantic structure, the cloud of tags of the  folksonomy can be useful not only for humans, but also  to software agents and applications on the semantic web.

Our hypothesis is that this underlying knowledge can be  derived by means of formal analysis of the tags combined  with pragmatic informations provided by external resources.

Therefore, the most salient features of our approach are  as follows: (i) It is a completely unsupervised one during  the folksonomy analysis and relation identi?cation. This  is important due to the use of online lexical resource as  well as resources like Google and Wikipedia; (ii) It is a  domain independent solution, since no domain assumptions  are formulated and no prede?ned knowledge is needed and;  (iii) It performs a triadic concept analysis to identify groups,  or related tagsets, i.e., a non-empty subsets of tags. The  triadic concepts can be used as an access structure for pro-  viding important hidden correlations between tags, resources  and users. Our approach called NONTAXFOLKS for non  taxonomic relationship extraction from folksonomy consists  of three steps: 1) pre-processing, 2) group related tagsets and  3) relation extraction. At a glance, Fig. 2 provides a visual  representation of the NONTAXFOLKS approach.

A. Pre-processing  In folksonomies, tagging information can be noisy and  inconsistent [12]. Since, whenever manual tags are intro-  duced with a non-controlled tagging mechanism, people  often make grammatical mistakes (e.g. webdesgn instead  of webdesign), tag concepts indistinctly in singular, plural  or derived forms (start, starts, starting). Sometimes,  adjectives, adverbs, prepositions or pronouns are added to  the main concept of the tag (beautiful car, to read), or  use synonyms and acronyms that could be converted into  a single tag (Web and WWW, hk and hong kong).

Hence, in order to facilitate the folksonomy data analysis  and integration, the vocabularies used in the folksonomy are  shaped into following four categories [13]:  1- Standard tags: which can be found in traditional  dictionaries.

2- Compound tags: a non-standard expression, e.g., web  design.

3- Jargon tags: another non-standard expression frequently    used to quickly express users ideas, e.g., hk and  folksonomy.

4 Other nonsense tags: such as misspelling tags, e.g.,  desgn.

The pre-processing step is a sequential execution where  the input stands in the set of tags T retrieved from a folk-  sonomy. The output from one pre-processing step is used as  input to the next one. The output of the whole pre-processing  stage is a set of frequent tagsets that corresponds to an  Figure 2. The NONTAXFOLKS approach at a glance   Table I  A TRIADIC CONTEXT/folksonomy.

Objects/Attributes-Links r1 r2 r3  t1 t2 t3 t4 t5 t1 t2 t3 t4 t5 t1 t2 t3 t4 t5  u1  u2  u3  u4  u5  u6  u7  agreed representation. Hence, in order to perform correctly  this step, we have considered three external resources:  1) WordNet5: A lexical database and thesaurus that  group English words into sets of cognitive synonyms  called synsets, providing de?nitions of terms, and  modeling various semantic relations between concepts:  synonym, hypernym, hyponym, among others.

2) Wikipedia6: Which is a multilingual, open-access,  free-content encyclopedia on the Internet. Wikipedia  contains collaboratively generated categories that clas-  sify and relate entries, and also supports term disam-  biguation and dereferencing of acronyms.

3) Google did you mean mechanism7: When a  searched term is entered, the Google engine checks  whether more relevant search results are found with  an alternative spelling. Since Googles spell check is  based on occurrences of all words on the Internet, it  is able to suggest common spellings for proper nouns  that would not appear in a standard dictionary.

As it will be explained below, we have additionally used    a number of software components such as syntactic ?lters  and semantic ?lters. Deck 1 in Fig. 2 provides a visual  representation of the pre-processing process where a set of  tags is generated from a folksonomy tags and transformed  into a set of frequent tagsets. Each step in the pre-processing  deck corresponds to a step outlined below.

Step 1: Consolidate tags:  The goal of this step is to clean and enrich the users  generated tag. Hence, for each tag, different ?ltering stages  are performed to retrieve a related set of cleaned and  enriched tags. However, contrarily to both [3] and [14], a  selected tag t is not discarded after each stage but added to a  set of tagsets called Setagset, where each tagset contains  the users tag t and SNewtags, i.e., the set of new tags  generated in each stage. Hence, we have: Setagset = {(t,  SNewtags)}.

In the following, we describe the tag consolidate stages,  which are visually described by Fig. 3.

1) Tag transformation: The selected tag ti is set to the  5 http://wordnet.princeton.edu/.

6 http://en.wikipedia.org/  7 http://www.google.com/.

lower case and special characters, such as accents,  dieresis and caret symbol, are converted to their base  form. For example, the tag Zurich is converted to  Zurich. Additionally, common stop-words, such as  pronouns, articles, prepositions and conjunctions are  discarded. The transformed tag tj is added to the set  of SNewtags. Hence, the set Setagset is updated  as follows:  Setagset = Setagset ? {(ti, SNewtags)}.

2) Syntactic ?ltering: It aims to check whether the  transformed tag tj is a standard one, i.e., the tag has  an exact matching with an entry in WordNet. In this  case, we return back to the stage (1) and select the  next tag from T.

3) Wikipedia correlation: In order to provide an agreed  representation of tj , we check whether this tag is a  jargon one. In such case, we correlate it to its appropri-  ate Wikipedia entry. For example, when searching the  tag hk in Wikipedia, the entry with the title Hong  Kong is retrieved. Hence, this title is added to the set    SNewtags and the next tag from T is selected. The  advantage of using Wikipedia to agree on tags from  folksonomies is that Wikipedia is a community-driven  knowledge base, much like folksonomies are, so that  it rapidly adapts to accommodate new terminology.

4) Tag correction: If tj is not a standard tag or a jargon  one, i.e., nonsense tag, e.g., webdesgn, we consider  possible misspellings, e.g., webdesign and/or com-  pound nouns, e.g., web design. Inspired from the  Tag  transformation  Syntactic  filtring  Standard tag  Wikipedia  correlation  Tag  correction  Jargon tag Misspeling/Compound  tag  Setagset  Tags  Figure 3. Consolidate tags stages representation   work of [3], to solve these problems, we make use  of Google which suggests a common spelling for tj ,  e.g., web design. Therefore, the suggested term is  added to the set SNewtags and the next tag from T  is selected.

Example 3: Let us consider the users generated tag ti =  webdesgn;. Then, by performing the ?rst stage, we obtain:  SNewtags= {webdesgn}  and Setagset = Setagset ? {(webdesgn;,  {webdesgn})}.

Since webdesgn is nonsense tag as expected by the two  previously stages, i.e., Syntactic ?ltering and Wikipedia  correlation stages, the 4th stage, i.e., tag correction, is  performed. Hence we will have:  SNewtags = {webdesgn, web design}  and Setagset = Setagset ? {(webdesgn;, {webdesgn,  web design})}.

Note that the consolidate tags step comes to and end after    handling all the tags of T.

Step 2: Group similar tags:  Another issue to be considered during the tags pre-  processing step is that users often use morphologically  similar terms to refer to the same idea. Hence, in this step  we are interested in discovering the set SSimtagset of  similar tagsets among the previously retrieved set of tagsets,  i.e., Setagset. Indeed, one very common example of this  is the no discrepancy between singular and plural terms, such  as start and starts, and other morphological deviations,  e.g., starting. In this step, we use a stemming algorithm  provided by Lucene8 which reduces morphologically similar  tags, e.g., starting, starts and start, to the root tag, i.e.,  start. Hence, for each set of similar tagsets, the shortest  term found in Wordnet is used as the representative tag, i.e.,  start.

Example 4: Let us consider a Setagset containing four  tagsets as follows:  Setagset= {(desgn;, {desgn, design}), (hk, {hk, hong  kong}), (hongkong, {hongkong, hong kong}), (designer,  {designer})}.

Thus, by performing the group similar terms step,  SSimtagset will be equal to: {SSimtagset1,  SSimtagset2}:  SSimtagset1 = (design,  {(desgn;, {desgn, design}),  (designer, {designer})})  SSimtagset2 = (hong kong,  {(hk, {hk, hong kong}),  (hongkong, {hongkong, hong kong})})  Note that the ?rst element of both SSimtagset1 and  SSimtagset2, i.e., respectively design, hong kong, are  ?agged as the representative tags.

8 An open-source search engine that provides full text indexing and  searching capabilities, http://lucene.apache.org/.

Step 3: Group synonym tags:  As a ?at collection of terms, typically a folksonomy  present the problem of synonymy control. People can use  different tags with the same meaning, e.g., Mac and  Macintosh are used to describe Macintosh computers.

Tackling the issue of similarity of meanings is of high  importance for extracting meaningful relationships between    tags. However, only a few algorithms have been proposed  to handle tags synonymy problem, by mainly focussing  on clustering similar tags together using mostly similarity  metrics.

In Szomszor et al. [14], the authors present an algo-  rithm for the tag merging by synonymy. The proposed  algorithm performs the task in three stages: (i) creating a  matrix of synonyms by using WordNet; (ii) ?nding each  non-ambiguous synonym and; (iii) replacing each of the  synonym pairs with the term that is most popular. Even  though this can be of help ?nding a pair of synonym tags,  it can somewhat restrict synonym tags discovery. Indeed,  if a synonymy between a pair of tags is found, the pair  is directly replaced by the synonym term without further  checking, whereas one of the tags pair may have other  synonyms. In the following, we introduce a new algorithm  called EXTRACTSYNTAGSET, that investigates all possible  synonymys relationships between tags. Thus, EXTRACT-  SYNTAGSET searches in WordNet synonyms candidate in  folksonomy by invoking the SEARCHSYN procedure. More-  over, contrarily to the Szomszor et al. approach, [14], the  extracted set of tags synonyms is added to the set of  synonyms tagsets, i.e., SSyntagset, for tags meanings  enrichment. The pseudo-code of EXTRACTSYNTAGSET is  sketched by Algorithm 1, whereas the used notations are  summarized in Table II.

EXTRACTSYNTAGSET takes as input the set  SSimtagset resulting from the previous step and  outputs the set SSyntagset, which contains the  representative tags with their associated synonyms. The  EXTRACTSYNTAGSET procedure operates as follows: in  Lines 2-3, it initializes the set SL by the ?rst representative  tag in the set of representatives tags extracted from  SSimtagset, i.e., RT , and an empty set, i.e., all  synonyms of the tag occurring in folksonomy must not be  retrieved later in the search procedure, and initializes the  set SSyntagset to the empty set.

From Line 4 to 21, the algorithm iteratively searches for  synonym tags corresponding to the representative tag in the  folksonomy. This is done until the set SL becomes empty.

Thus, in each iteration, STagset is initialized by tagsets  associated to st1.tag in SSimtagset where st1 is the ?rst    element in SL.

In Line 7, EXTRACTSYNTAGSET invokes the SEARCH-  SYN procedure to search for synonym tags, i.e., SS . There-  after, in Lines 8-9, st1 and the related tag st1.tag are  respectively removed from SL and RL .

Table II  NOTATIONS USED IN THE EXTRACTSYNTAGSET ALGORITHM.

SSimtagset : The set of tagsets which contains all equivalent  tags and their representative tag.

SSyntagset : The set of tagsets which contains all synonym tags  and their representative tag.

RT : The set of representatives tags extracted from  SSimtagset.

STagset : The set of tagsets which contains the representa-  tive tag and the associated synonyms.

SL : The set of pairs (tag, notSynTags).

SS : The set of synonym tags of the representative tag.

Next, cf., Lines 10-18, EXTRACTSYNTAGSET selects each  tag t from SS and checks whether it has not been treated yet.

In such case, EXTRACTSYNTAGSET checks whether it is  already inserted in SL, i.e., it has been retrieved with another  tag, then st1.tag have to be added to the set t.notSynTags.

Otherwise, a new entry associated to t must be created  with a set containing st1.tag and added to the set SL.

At end of the iteration (outer loop), the tag st1.tag and  its set of synonyms tagsets, i.e., STagset, is added to  SSyntagset. Thereafter, cf., Lines 20-21, if RT ?= ? and  SL = ?, then EXTRACTSYNTAGSET adds a new entry to  the set of pairs. Otherwise, the algorithm comes to an end  with the set SSyntagset.

Step 4: Filter infrequent tagsets:  Filter out tags occurring less than a certain threshold.

B. Group related tags  The second step of NONTAXFOLKS is to identify groups  of related tag, i.e., representative tag in folksonomy. Ap-  proches using clustering or statical similarity metrics tech-  niques for the organisation of related tags into clusters are  widely used. Hence, in [5], the author uses a subsumption  based model, derived from the co-occurrence of tags, to ?nd  groups or related tags. On the other hand, Begelman et al.,  [15] organise the tag space as an undirected graph, repre-    senting co-occurring tags as vertices, weighting the edges  between them according to their co-occurrence frequency,  and applying a spectral clustering algorithm to re?ne the  resulting groups. However, in such approches, correlation  between tags, users and resources are often lost. Indeed, a  semantically relation between tags is usually discovered if  they had been assigned by users with similar interests. On  the other hand, related resources are usually tagged many  times by semantically related tags and ?nally users may  have similar interests if they share many resources in their  assignments.

In [4], the author use co-occurrence information to build  graphs relating tags with users and tags with resources,  and applies techniques of network analysis to discover sets  of clusters of semantically related tags. Similarly, in our  proposed approach, we make use of the semantic related-  ness embodied in the different frequencies of co-occurences  among users, resources and tags in the social bookmarking  Algorithm 1: EXTRACTSYNTAGSET  Data: SSimtagset : {(rt, {tagset})}  Result: SSyntagset : {(rt, {tagset})}.

Begin1  SL = {(RT [1], ?)};2  T S = ?;3  While SL ?= ? do4  st1 = SL[1];5  STagset = {tagsets1 | ? (st1.tag, tagsets1)6  ? SSimtagset};  SS = SEARCHSYN(st1);7  RT = RT \ {st1.tag};8  SL = SL \ {st1};9  Foreach tag t ? SS do10  If t ? RT then11  If ? st2 ? SL | st2.tag = t then12  st2.notSynTags = st2.notSynTags13  ? {st1.tag};  Else14  st2.tag = t;15  st2.notSynTags = {st2.tag};16  SL = SL ? {st2};17  STagset = STagset ? {tagsetst | ? (t,18  tagsetst) ? SSimtagset };    SSyntagset = SSyntagset ? {(st1.tag,19  STagset)};  If RT ?= ? ? SL = ? then20  SL = {(RT [1], ?)};21  return SSyntagset ;22  End23  system, i.e., folksonomy. However, instead of using proba-  bilistic models or network analysis techniques for grouping  related tags, we mine frequent triadic concepts. Indeed, the  triadic concept structure describes three types of sets: (i) the  set T of related tags; (ii) the set U of the associated users,  i.e., users whose have tagged by T and; (iii) the set of related  resources, i.e., which were assigned with T by users U .

Hence, triadic concepts allow grouping semantically related  tags taking into account the Users tagging behavior in a  folksonomy.

In fact, in [16] and [11], the authors have considered a  folksonomy as a triadic context and proposed an algorithm  called TRIAS to get out implicit shared conceptualizations  formally sketched by triadic concepts. TRIAS takes as input  a folksonomy F := (U , T, R, Y) where each tag is replaced  by its representative tag beforehand identi?ed, i.e., trep, as  well as three user-de?ned thresholds : u ? minsupp, t ?

minsupp and r ?minsupp. The TRIAS algorithm outputs  the set of all frequent T C that ful?ll these aforementioned   thresholds.

Hence, running TRIAS algorithm on the triadic context  depicted by Table I, with u ?minsupp = 2, t ?minsupp  = 2 and r?minsupp = 2 yields the following tri-concepts:  T C1 = {(u1, u2, u3, u5, u7); (t2, t3, t4);  (r1, r2, r3)}  T C2 = {(u5, u6, u7); (t4, t5);(r1, r2)}  T C3 = {(u2, u3, u4, u7);(t1, t4);(r2, r3)}  After the group related tags step, we present in the  following the extraction of non-taxonomic relationships.

C. Non-taxonomic relationship extraction  In the following, we introduce an algorithm called  NTREXTRACTION for extracting non-taxonomic relation-  ships between pairs of tags picked from the triadic concepts  structure. As we previously mentioned, two tasks have to be  carried out for learning non-taxonomic relationships: (i) The    discovery and selection of all pairs of related tags; (ii) The  discovery and selection of predicates, i.e., non taxonomic  labels, used for expressing non taxonomic relationships be-  tween the pairs of tags according to their semantic meaning.

Notations used in this algorithm are summarized in Table III.

The pseudo-code of the NTREXTRACTION algorithm is  sketched by Algorithm 2. NTREXTRACTION takes as input  two sets: the set of triadic concepts T C and the set of  representative tags. NTREXTRACTION outputs the set of  all non-taxonomic relationships candidates NT R between  tags discovered from T C. NTREXTRACTION operates as  follows: ?rstly, NTREXTRACTION discovers all pairs of  concepts from the sets of tags contained in the tri-concepts  structure. For performing this task and to avoid the useless  computation of pairs, NTREXTRACTION invokes the pro-  cedure DESCSORTTC which sorts the set of tri-concepts in  a descending order with respect to the size of the tag set  (Line 4). Hence, the set PS of tag pairs is constructed.

Thereafter, NTREXTRACTION, cf., Lines 10-20, extracts  the set of non-taxonomic relationships from each pair of  tags. Speci?cally, in Line 11, NTREXTRACTION invokes the  SEARCHWIKIPEDIA procedure to identify from Wikipedia  sentences containing both tags (ti, tj). Interestingly enough,  we use sentences as text units for analysis since they are  Table III  NOTATIONS USED IN THE NTREXTRACTION ALGORITHM.

T C : The set of all frequent tri-concepts.

T : The set of representative tags.

NT R : The set of non-taxonomic relationships extracted from  Wikipedia.

T T S : The list of sets of tags which have been used to extract pairs.

PS : The set of pairs (ti, tj) extracted from the set of tags of  tri-concepts.

ST C : Sorted list of tri-concepts.

SSent : Set of sentences extracted from Wikipedia.

Stree : Syntactic tree of sentence.

Algorithm 2: NTREXTRACTION  Data:  1) T C : {Frequent triadic concepts}  2) T : {Representative tag}  Result: NT R : {Non-taxonomic relationships}.

Begin1    T T S = ? ;2  PS = ? ;3  ST C = DESCSORTTC(T C) ;4  Foreach tri? concept tc ? ST C do5  If ? t ? T T S | tc.tags ? t then6  PS = PS ? {(ti, tj) ? T  T | ti ?7  tc.tags ? tj ? tc.tags ? i < j};  T T S = T T S ? {tc.tags};8  NT R = ? ;9  Foreach pair (ti, tj) ? PS do10  SSent = SEARCHWIKIPEDIA(ti, tj);11  Foreach sentences ? SSent do12  STree = PARSESENTENCE(s);13  subject = EXTRACTSUBJECT (STree, ti, tj);14  If subject ?= null then15  predicate =16  EXTRACTPREDICATE(STree);  If predicate ?= null then17  object = EXTRACTOBJECT(STree,18  ti, tj);  If object ?= null ? object ?= subject19  then  NT R = NT R ? {subject,20  predicate, object};  return NT R ;21  End22  more informative than single words to detect relationships  between tags pairs. Thus, in the inner loop (Lines 12-20),  NTREXTRACTION invokes the PARSESENTENCE procedure  which uses the Stanford Parser to generate a Treebank  parse tree for each input sentence.

Example 5: The parse tree for the sentence S = The  concept of open source and free sharing of technological  information has existed long before computers existed.. The  triplet, i.e., < subject, predicate, object >, is extracted out  from this sentence. Since (S) is represented by the parser as  a tree having three children: a noun phrase (NP ), i.e., The  concept of open source and free sharing of technological  information, a verbal phrase (V P ), i.e., has existed long  before computers existed and the full stop (.). The EX-  TRACTSUBJECT procedure extracts the NP and searches  for a mapping with at least one tag of the selected pair    (ti, tj), i.e., (open source, long). The EXTRACTPREDICATE   procedure extracts the compound verb from V P , i.e., has  existed. Similarly, the EXTRACTOBJECT procedure extracts  one of the three phrases: noun phrase NP , adjective phrase  ADV P and prepositional phrase PP .

Once identi?ed, the set NT R of non-taxonomic relation-  ships candidates have to be pruned to withdraw all infrequent  relations. Hence, we make use of Borgelts ef?cient imple-  mentation of the APRIORI algorithm for frequent termsets  extraction [17]. In the following, we remind some de?nition  that will be of need in the sequel.

De?nition 6: An extraction context is a triplet K =  (NT R, E , M), where NT R represents a ?nite set of non-  taxonomic relationships, E is a ?nite set of terms and M is  a binary (incidence) relation (i.e., M ? NT R  E ). Each  couple (ntr, e), belonging to M, expresses that the relation  ntr ? NT R contains the item e ? E .

Example 6: An example of an extraction context K is  depicted by Table IV with O = {ts1, ts2, ts3, ts4, ts5, p1,  p2, p3, p4, p5, to1, to2, to3, to4, to5} and I = {ntr1, ntr2,  ntr3, ntr4, ntr5, ntr6, ntr7}.

De?nition 7: A termset9 E is said to be frequent if  Supp(E) is greater than or equal to a minimum support  threshold, denoted minsup. The set of frequent termsets will  be denoted FEK.

Note that we have added a restriction in the APRI-  ORI implementation algorithm for considering only possible  combinations between frequent terms. Since only two com-  binations are allowed, i.e., tag subject and predicates and  tag subject and tag object. Therefore, once the set FEK is  discovered, the association rules must have to derived only  from the frequent 3-itemsets. Indeed, we paid attention to  association rules of the form R: ts, to?p, where ts denotes  a subject tag, to denotes an object tag and p denotes a  predicate.

Example 7: Given the extraction context depicted by Ta-  ble IV with minsup = 2 and minconf = 0.5, the derived valid  association rules are given by the following table.

ts1, to4 ? p1 (2, 0.5)  ts1, to4 ? p2 (2, 0.5)  ts3, to4 ? p3 (2, 1.0)

V. EXPERIMENTAL RESULTS  The problem of evaluating non-taxonomically related con-  cepts is quite complex since the non-taxonomic relation-  ships are rarely contained in a gold standard. Hence, few  experimental evaluations have been reported for comparing  ontologies on the lexical as well as on the taxonomic  level, e.g., [18] compares the generated ontology by their  methodology against category structure from Open Directory  9 Note that each term may refer to a tag subject, a tag object or a  predicate.

Project10 (ODP). The authors in [13] provide a subjective  evaluation of the resulting ontology structure by comparing  it to an ontology extracted from sei.cmu.edu and cluster from  FLICKR. In fact, an investigation of the structure of existing  ontologies via the Swoogle ontology search engine [19] has  shown that domain ontologies very occasionally model this  kind of relationships. Due to the problem of ?nding gold  standards with good non-taxonomic relationships coverage,  and the amount of the obtained results, a manual evaluation  is not reliable. So, we will focus the evaluation step on  objective and automatic assessments. In this case, due to  the lack of general purpose automatic evaluation procedures,  new mechanisms should be designed. In the following, we  present an approach to evaluate non taxonomic relationships  results in an automatic way against an electronic general  domain repository: WordNet.

A. The dataset description  We investigate the tag sets in DEL.ICIO.US thanks to both  its popularity and availability. In fact, DEL.ICIO.US is a fast  growing social bookmarking service. It offer hosts its users  to centrally collect and share their bookmarks, which can  refer to any resource on the web as long as this resource can  be identi?ed by an URL. When adding a bookmark, users  can provide a description, by default the title of the web  site, an extended description and tags they consider related.

A bookmark can be added by going to the DEL.ICIO.US  web site or, more conveniently, by using one of the many  browser plug-ins which make bookmarking to a social  bookmarking system as easy as browser wise bookmarking.

DEL.ICIO.US went online in September 2003 and is still  constantly growing. Hence, we apply our NONTAXFOLKS  approach on a snapshot11 described in the following table.

Dataset Nb users Nb resources Nb tags  Del.icio.us 1518 12813 5621  B. Evaluation measures  Assessing semantic similarity between words is a cen-  tral issue in many research ?elds such as Psychology,  Linguistics, Cognitive Science, Biomedicine, and Arti?cial  Intelligence. Semantic similarity can be exploited to improve  accuracy of current Information Retrieval techniques, e.g.,  [20], to discover mapping between ontology entities [21], to  validate or repair mappings [22] or to perform word-sense  disambiguation [23]. As a matter of fact, semantic similarity  is relevant in many research areas and therefore, designing  accurate methods is mandatory for improving the perfor-  mance of the bulk of applications relying on it. Basically,  similarity or distance methods, e.g., [24] aims at assessing  a score between a pair of words by exploiting a semantic  10 http://www.dmoz.org/  11 http://data.dai-labor.de/corpus/delicious/   Table IV  AN EXTRACTION CONTEXT.

Relations/Terms ts1 ts2 ts3 ts4 p1 p2 p3 p4 to1 to2 to3 to4  ntr1  ntr2  ntr3  ntr4  ntr5  ntr6  ntr7  ntr8  network such as WordNet. Different relatedness measures  implemented by WordNet::Similarity12 are proposed.

Given that the basis for the assessment of a relationship  between a pair of terms13 comes back to statistical scores  computed between terms. In this respect, we use the Jiang  relatedness metric [25] that de?nes the link strength between  two terms, i.e., e1 and e2. Thus, we have:  distJIANG(e1, e1) = IC(e1)+IC(e2)?2IC(LCA(e1, e2))  Where LCA(e1,e2) de?nes the lowest common ancestors  de?ned in WordNet taxonomy and IC(ei), with (i ? {1,2}),  describes the information content of a term e which is  de?ned as the negative log likelihood of the probability of    encountering a related term, i.e. IC(c) = ?logP (e). The  intuition behind the use of the negative likelihood is that  the more probable a term to appear, the less information it  conveys. All these features show that Jiangs measure tends  to be more general and more appropriate for evaluating non-  taxonomically related terms. Indeed, a high score of the  relatedness measures suggests a strong relationship between  terms.

Nevertheless, all relatedness measures have limitations  because they assume that all the semantic content of a  particular term is modeled by semantic links in WordNet.

Consequently, in many situations, truly related terms obtain a  low scores even though their belongings to a certain category  of tags, e.g., jargon tags.

Additionally, when measuring the quality of an  automatically knowledge acquisition results, the typical  measures used in Information Retrieval are Recall, Precision  and F-Measure. However, computing Recall and F-Measure  requires the availability of a Gold Standard. Hence, we will  only compute the Precision which speci?es to which extent  the non-taxonomic relationships is extracted correctly. In  this case, the ratio between the correctly extracted relations,  i.e., their relatedness measures is greater than or equal to  a minimum threshold, and the whole number of extracted  ones is computed. Thus, we have:  Precision =  Total correctly selected entities  Total selected entities  12 http://search.cpan.org/dist/WordNet-Similarity.

13 A term refers to a tag subject or a tag object.

C. Evaluation of non-taxonomic relationships  Only a percentage of the full set of non-taxonomic re-  lationships (89%) has been evaluated using WordNet. This  is caused by the presence of non standard terms which are  not contained in WordNet and, in consequence, cannot be  evaluated using WordNet-based relatedness measures. Fig. 5  depicts the evaluation results of the extracted non-taxonomic  relationships against their relatedness measures.

High relatedness score (88%) have been obtained for  17% of the extracted relationships, as most of terms  are strongly related with respect WordNet.

Null Scores were obtained for 5% of the extracted    relationships. Analyzing this case in more detail, we  have observed that the poor score is caused in many  situations by the way in which Jiangs distance metric  works. This latter completely depends on the distance  between two terms based on the number of edges found  on the path between them in WordNet. In consequence,  this measure returns a value that does not fully rep-  resent reality. For example, on the one hand, Jiangs  distance metric returns a null value for the relationship  between insurance and car, even though the ?rst  is a commonly related to the second, i.e., car involved  insurance.

Finally with a minimal Jiangs distance metric thresh-  old, set to 46%, the computed precision of correctly  extracted relationships candidates is equal to 68.8%.

An example of extracted non-taxonomic relation-  ships is depicted in Table V where each relation de-  scribes the subject tag, e.g., tool, the predicate, e.g.,  is being developed within, and the object tag, e.g.,  mesh. Fig. 4 represent a fragment output of the ex-  tracted ontological structure where each concept de?nes a  set of similar and synonym tags and labels, i.e., mentions,  has been, revealed, caused and is created with describe  the predicates of the non-taxonomic relationships between  terms.

Due to the limitations observed by the automatic evalu-  ation procedure and the lack of gold standards containing  non-taxonomic relationships, we have examined the ex-  tracted non-taxonomic relationships from a linguistic point   Top  space      distance     quad  great     groovy  nifty  caused  address      addresses  extension      quotation   reference  references  extensions        referenz     source      refrence  sources    rfrences    quotations  research    search     searching  searchs  open-source     open_source    opensource  linux aim     design     designer      designers  patern    project     patterns     projekte  projects  web+design    web_design  webdesign  internet       internetbs  net          web  network      networking  networks      web  discussion     news       password  word      words  community      communities  is_created_with  mentions  revealed  has_been  Figure 4. A fragment output of the extracted ontological structure  of view. This qualitative evaluation can bring some interest-  ing insights about the kind of results one can expect:  Invalid relations are extracted: Even though a relation  such as music cities skill is considered as correct one  since tag subject, tag object and predicate are correctly  extracted. From a semantic point of view, this relation  has no meaning. Hence, a higher precision is expected  Figure 5. Summary of non-taxonomic evaluation measure  Table V  EXAMPLES OF EXTRACTED NON TAXONOMIC RELATIONSHIPS  Subject Predicate Object  search has been reference  reference mentions search  tool is being developed within mesh  security added encoding  search revealed reference  java provides library  by performing the sense analysis on complete relations.

An ambiguity in the extracted predicates between terms  is observed: Hence, same relations are redundant since  they use a synonym predicates between terms, e.g.,  java provides library and java yields library. Thus,  we expect that the redundancy removal within extracted  relations will be of bene?t for the improvement of the    obtained results.



VI. CONCLUSION AND FUTURE WORK  The extraction of non-taxonomic relationships from folk-  sonomies is to the best of our knowledge is the least tackled  task within ontology building from folksonomy. This is why  there is a need of novel and general purpose approaches  covering the full process of learning relationships. In this  paper, we introduced a new approach called NONTAXFOLKS  that starts by pre-processing tags aiming at getting a set of  frequent tagsets corresponding to an agreed representation.

Then, they are used to retrieve related tags using exter-  nal resources such as WordNet. Thanks to the particular  structure of triadic concepts, it allows grouping semantically  related tags by considering the semantic relatedness em-  bodied in the different frequencies of co-occurences among  users, resources and tags in the folksonomy. Thereafter,  we introduced an algorithm called NTREXTRACTION for  extracting non-taxonomic relationships between pair of tags  picked from the triadic concepts. In summary, our approach  uses several well known techniques (such as formal concept  analysis or association rule discovering), adapting them to  the social bookmaring environnement in order to propose a  new way of extracting labeled non-taxonomic relationships  between tags. Currently, we are investigating the following  topic concerning the discovered predicates between two  terms. Indeed, in order to avoid relationships redundancy  and thus a redundancy in the builded ontology. One can  try to classify them into prede?ned semantic classes, detect  synonyms, inverses, etc. A standard classi?cation of verbs  could be used for this purpose, adding additional information  about the semantic content, e.g., senses, verb types, thematic  roles, etc., of predicates relationships.

