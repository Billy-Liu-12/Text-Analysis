A novel approach to video transition detection based on a two-phase classification strategy

Abstract-Video transition detection plays an important role in many tasks of video analysis. Aiming at the target application of commercial detection in news video, this paper tackles the problem in a unified framework and proposes an alternative classification strategy. Our method is made up of two phases. In the first stage, SVM is employed to classify the transitions into three classes: non-transition, cut, and big-transition. In the second stage, we concentrate on the discrimination of the rapid motion situation and gradual transition, which is based on another set of features. Apart from the new classification strategy proposed in this paper, imbalanced data classification issue is also taken into consideration, which has not received sufficient attention by previous work. Experimental results show that our method is effective.



I. INTRODUCTION  Video transition detection plays an important role in many tasks ofvideo analysis, such as commercial detection in news video [1], and highlight extraction from soccer videos [2].

Shot transitions are generally classified into two types: abrupt (cut) and gradual (fade in/out, dissolve, wipe etc.). Many methods have been put forward to conduct video transition detection, but it is still not completely resolved [3]. The existing literature consists of two categories: threshold based methods and machine learning based ones. Since threshold tuning is very crucial to the success of an algorithm, common practitioners and engineers can hardly replicate a practical system based on a published paper. Recently, several authors have proposed to detect video transitions by using machine learning methods, such as Hidden Markov models [4] and support vector machines [5-8]. Zhang et al [4] proposed an HMM based shot detection method, which constructed an HMM for each kind of video transition. Ling et al [5] proposed a new method to gradual transition detection based on support vector machines, and the extracted features were based on variance projection function of video frames. Ren and Singh [6] employed k-nearest neighbor classifier and neural netwoks to predict video transitions. In their algorithm, a set of 18 features was computed, such as block coefficient and cell coefficient. Cao and Cai [7] put forward a robust shot transition detection algorithm based on support vector machine in compressed domain, which just formed the feature vector from all frames within a temporal window, each frame represented by six features in compressed domain.

High accuracy of this algorithm has been reported, however, it is constrained by the compression method and the encoding  quality of the video. Ngo [8] proposed to detect dissolves using texture features from temporal slices.

The above machine leaning-based methods mainly put emphasis on gradual detection, while cut detection is still based on some thresholds. Aiming at the target application of commercial detection in news video, this paper tackles the problem in a unified framework and proposes an alternative classification strategy. Our approach is made up of two phases. In the first stage, SVM is employed to classify the transitions into three classes: non-transition, cut, gradual transition (and rapid motion). The underlying reason is that cut implies an abrupt change of frame similarity, non-transition corresponds to nearly no change of the frame content, while the third class includes gradual transition and rapid motion, which reflect larger dissimilarity between successive frames and thus attract many research efforts. In the second stage, we concentrate on the discrimination of the rapid motion situation and gradual transition, which uses another set of features. Apart from the new classification strategy proposed in this paper, imbalanced data classification issue is also taken into consideration, which has not received sufficient attention by previous work.

The rest of the paper is organized as follows. Section II describes the different set of features employed in the two stage classifiers. Section III gives out the details of classifiers designing procedures, especially the imbalanced data distribution issue in the classification. Section IV presents the experimental results and conclusions are drawn in section V, respectively.



II. FEATURE EXTRACTION  There have been many features put forward by different authors to detect video transitions, such as histograms, color moments, motion vectors and temporal slices or visual rhythms. In our system, we choose different set of features in the different classification procedure.

A. Localfeatures and globalfeatures In the first stage of classification, we want to partition the frames in the video into three classes: non-transition, cut and large-transition, which includes rapid motion and gradual transitions. The reason for this partition is that it is difficult to separate gradual transition from significant motion when detecting various transitions in videos. For this goal, there are many features to choose. We want to choose those features that are easy to extract and fast to compute.

In recent years, visual rhythms have attracted many attentions from different groups [8, 9]. Since it models the transitions just using the centre lines in horizontal direction and vertical direction, the computational cost is very low.

Furthermore, it can catch the local transition details between successive frames. Previous work has proved it is efficient to detect cut and wipe [9].

A visual rhythm of a video segment is the concatenation of  the middle-line of the frames, in horizontal or vertical direction. Fig. 1 shows a horizontal visual rhythm of a piece of news program. Ref. [9] proposed a string matching based method to detect video transitions, which use the longest common subsequence (LCSS) oftwo consecutive lines as the similarity measures of two frames. They reported good detection results on some test videos.

Fig. 1. A horizontal visual rhythm of a piece of news program  However, like other features, visual rhythms are also sensitive to motion and lighting, especially significant motion of cameras and objects in the scene.

Due to the high false positive rates caused by visual  rhythms, we decide to add histogram similarity to the feature set. Histogram similarity of consecutive frames within one shot shows little difference, and it is more insensitive to object motion with a constant background [3]. It reflects the global visual similarity of the frames, which is complementary to the local similarity of visual rhythms.

So, in the first stage of the classifier, we use the combination of histogram similarity and LCSS of visual rhythms as the frame features.

B. Block color moments After the first stage classification, the remaining problem is to separate gradual transitions from rapid or significant motion.

There are many research work dedicated to tackle this problem. Since our target application is commercial detection in news video, we restrict the gradual transition to fade in/out and dissolve. [10, 11] found that during the gradual transition, the mean and variance of consecutive frames looked like parabolic curves. But when there were motions in the scene, this phenomenon was not so obvious. As in [11], we adopt three primary color moments as the frame feature to classify gradual transitions and rapid motion. Though the extracted features are the same, we resort to the machine learning approach, instead ofthe heuristic rules in [11], which need to tune many thresholds and design many rules.

We use the first three moments, i.e., mean, standard  deviation, and skew. The following is the computing equations:  M(c) = I X f(x,y,c)  S(C)2= [f(X, y, C) -M(C)]2  K(c)3 = I L I[f(x, y, c) - M(c)] NX y  (1)  (2)  (3)  C. Normalization ofthefeature series After having chosen the feature sets, we extract the feature series in a sliding window, whose length is denoted by 2w+1.

The parameter w reflects the shortest video transition that can be detected. In this paper, we set it to 3.

For each transition type, we want to identify its characteristic patterns in the time-series of video frame features corresponding to the model of the transition type. In each sliding window, for the first stage of classification, we extract the LCSS of the horizontal video slice and LCSS of the vertical video slice, and the histogram similarity between successive frames.

To reduce the influence of absolute values of different  features, we normalize the feature series using their mean in the sliding window respectively. And to differentiate still frames, such as anchor man in the studio, from rapid motion or gradual transitions, we keep the mean as another element of feature in the end feature vector.

Fig. 2. Illustration of positions of three sub-regions in the frame  During the second stage of classification, we extract the color moment feature in three sub-regions in the frame, and concatenate the features of each frame in the sliding window into a feature series. Fig 2 illustrates the positions ofthe three sub-regions. The rational for the selected sub-region is that, in the news program, there is always a scrolling caption bar in the bottom of the frame and the station logo at the top. To     reduce the influence of the scrolling text and the logos, we just compute the color moments in the three sub-regions in the middle part of the frame.



III. THE CLASSIFIER  A. The overall classification procedure The target application is commercial detection in news video and news story parsing. And three main types of transitions are considered in this paper: cut, fade and dissolve. News videos contain a variety of shots ranging from often fast changing and intense-motion commercials to relatively static studio and anchor man shots.

Fig 3. The procedure ofthe two-phase classification scheme for video transition detection  In this paper, we propose a two-stage classification scheme to detect various kinds of video transitions. In contrast to classify the frames into cut, gradual transition and non-transition, we conduct the classification in two phases. In the first stage, we just classify the frames into cut, non-transition and big-transition, which include gradual transition and rapid motion. The rational behind this scheme is that, during the rapid motion and gradual transition, the LCSS feature series and histogram similarity series behaves the same, which can not give satisfactory discrimination capability. Many of the previous work pay much attention to this problem, which strives to keep a balance between reducing the number of false positives and improving the detection accuracy of real gradual transitions. And in the second stage, we employ color moments feature series to separate gradual transitions from rapid motion situations. The overall procedure is illustrated in Fig 3.

The adopted classifier is SVM, as it is one of the most  competitive classifiers for small samples problem. Since it is very common nowadays, we omit the principles in the text and use the LibSVM[12] implementation. For the details, the  interested readers can see the Ref. [13].

B. The imbalanced data classification issue In the real video produced by the broadcast company, there are usually not so many cuts or gradual transitions, while the non-transition frames are in the dominant. Therefore, in the machine learning process, this will result in the imbalanced data classification issue [14]. Previous work on video transition detection based on machine learning methods[5-7] did not take it into consideration, in which training samples are selected in a manual way. This is not so easy for novice practitioners in this field.

In Ref. [10], Lienhart tackled this problem by using a gradual transition synthesizer, which produced thousands of samples of different kinds of video transition. However, the synthesized samples are not in real programs and there are not so many transition styles in news program. As this issue is concerned, we adopt another scheme, which reduces the non-transition samples by clustering.

In order to balance the positive and negative samples, re-sampling is a common approach [14], which includes under-sampling the majority instances and over-sampling the minority samples. If we over-sampling the cut or gradual transitions, the likelihood of over-fitting is increased, since it makes exact copies of the examples [14]. On the other hand, the major drawback of random under-sampling is that some useful information for classification is discarded when we throw away many valid instances. According to Chawla et al [14], it was found that under-sampling of majority classes was better than over-sampling with replication of minority classes. Hence, we adopt the under-sampling method to tackle the imbalanced data distribution issue in video transition detection. However, sequential clustering is utilized instead of random under-sampling, which can preserve more useful information for classification.

Since there are few video transitions in the video, we can reduce the sample size of the non-transition class and big-transition class in the first stage of classification and that of rapid-motion class in the second stage of classification. In this paper, we employ the sequential clustering approach [15, 16]. The main idea of the clustering algorithm is as follows.

The training samples are fed sequentially. For any new sample, if the nearest distance to the centers of the existing cluster centers exceeds a predefined threshold, a new cluster is created; otherwise, it belongs to the cluster whose center is closest to it. In this algorithm, a threshold needs to be set beforehand. In this paper, we get it based on the number of the resulting clusters, which should be approximately balanced with the peer classes in the classification of different phases. More details about the tuning of this threshold are given in Section IV.



IV. EXPERIMENTAL RESULTS  To validate our method, we conduct several groups of experiments. Since our target application is news video parsing and commercial detection in news video, we collect tens of clips of news video and commercial segments. The     main sources of these clips are from the real programs in our local TV stations. We collect 3 full-length news programs broadcasted in 3 different days, each of which lasts about 50 minutes. In total, there are 29 clips ofnews story and 12 clips of commercials in our experiments, among which 19 clips of news and 8 clips of commercials are in the training set, while the rest is in the test set. Table I shows the detailed statistics of the video materials in our experiments.

Before reporting the experimental results, the evaluation measures should be set. In the traditional video retrieval, recall and precision are two commonly used measures [5-7]: precision gives the measure of correctness of the classifier in detecting the actual video transitions, whereas recall gives the measure of the percentage of transitions detected correctly.

However, as mentioned above, the video transition detection problem is skewed. Another measure is also usually adopted to evaluate the algorithm, which is the f-value metric [14, 7]:  f - value = (1+ ,2 ) X precision x recallx2X recall + precision  Where 3 corresponds to the relative importance of precision vs. recall, and in this paper, it is set to 1.

Three groups of experiments are conducted. Firstly, we conduct the experiments without under-sampling. The SVM is directly trained on the whole set of samples. Then, we conduct the experiments with two under-sampling schemes, one is random sampling, and the other is the proposed clustering-based under-sampling. As the thresholds in the clustering algorithm, we determine them by the resulting clusters and choose the one with the number of resulting clusters is approximately equal to the number of samples from peer classes. In the experiments, the threshold in the first stage is set to 0.45, and 0.2 in the second stage. There are originally 1100 cuts and 343 gradual transitions in the training set, while the number of non-transitions reaches 150000. After clustering, the number of non-transitions reduces to about 1200 and 1000 for big-transition. In the second stage, the number of rapid motion is just about 600.

Table II shows the detection results of our algorithm. The detection result of cuts is from the first stage classification, and the result of gradual transition detection is from the second stage. The classification result of big-transition in the first stage is input to the clustering algorithm in second stage.

TABLE I DETAILED STATISTICS OF THE VIDEO MATERIALS IN OUR EXPERIMENTS  # ofNews clips # of Commercial clips cuts Gradual transitions Training set 19 (135000 frms) 8 (23000 frms) 1100 343 Test set 10 (56000 frms) 4 (1000 frms) 702 161  TABLE II THE DETECTION RESULTS OF THREE GROUPS EXPERIMENTS  Different methods Cut Gradual recall precision f-value recall Precision f-value  No sampling 73.1 33.9 46.3 55.9 22.1 31.7 Random sampling 80.3 55.0 65.3 67.7 31.8 43.3 Our method 98.5 92.9 95.6 89.4 87.3 88.3  From Table II, it can be observed that the proposed method is effective in detecting cuts and gradual transitions in news video. Compared with existing work [5-7], our results are competitive and the proposed algorithm is very easy to implement for novice practitioners, who can avoid the difficulties of manually selection of training samples and tedious procedures of parameter tuning.



V.CONCLUSION  This paper has proposed a novel approach to detect video transitions in news video, which adopts a sequential classification scheme. The main contributions lie in two aspects. Firstly, a new classification strategy is put forward to tackle the problem of discriminating gradual transitions from rapid motion cases. And secondly, the imbalanced data classification issue is taken into consideration, which is explicitly dealt with in machine learning-based methods for the first time. Compared with the previous methods, ours can keep the practitioners away from the difficulties of manually  selection of training samples and tedious procedures of parameter tuning, while its accuracy can meet the needs of commercial detection in news programs.

In future work, we hope to investigate more elaborate method to set the clustering thresholds and evaluate other sampling methods for imbalanced data distribution in video analysis.

