

Abstract?The modern critical infrastructures (Power grids, Power plants, gas and oil pipelines etc.) are nowadays strongly interconnected at national and international level. The failure of one of them can originate cascading effects which might have serious and disastrous impact on others, even geographically far, infrastructures. The exchange of information about vulnerabilities, threats, countermeasures among the different actors of such interleaved systems assumes a not negligible role in the prevention of continental disasters. Due to their intrinsic nature, such information has to be considered strongly confidential and sensitive. Cope with the two needs of ?share information? preserving the ?confidentiality? according to some criteria, is the big obstacle in the creation of effective critical infrastructure information sharing networks. In this paper we present an extension of the well known Trust- negotiation framework, which allows to address the confidentiality problem in the context of information sharing for critical infrastructures.



I. INTRODUCTION N the recent years, the problem of energy production and transmission has become more and more relevant. The  actual scenario in this field can be described as a complex graph of interleaved entities producing and exchanging energy at international, national and regional level. In order to well support such critical infrastructure, the different entities playing a role it its functioning, should be able to exchange information about production, control, policies, prices (energy market), vulnerabilities, attacks and so on.

National initiatives for establishing trust and collaboration among entities managing such critical infrastructures exist already. Several can be the examples: in the United Kingdom, the National Infrastructure Security Coordination Center (NISCC) promotes different information exchange networks, in critical sectors like aviation, service providers, telecoms, Industrial SCADA control systems. At the same way, the Swedish Emergency Management Agency [13] and the Bundesamt f?r Sicherheit in der Informationstechnik [3] in Germany are encouraging the creation of some sharing network in all those fields which can be considered of critical interest. As anachronistic could seems, usually such information exchanges at the moment take place in physical meetings, while in few of these initiatives the ICT technologies are massively used. The exchange of such  Manuscript received  August 28, 2008. This research was partly funded by EU IP IST-015964 Aeolus.

A. Trombetta and S. Braghin are with Dipartimento di Informatica Comunicazione, University of Insubria, Varese, Italy  (e-mail: alberto.trombetta@uninsubria.it, stefano.braghin@uninsubria.it)

I. Nai Fovino is with JRC ? European Commission ? Institute for the Protection and Security of the Citizen (IPSC) ? Sensors, Radar Technologies and Cyber security Unit (SERAC) (e-mail: igor.nai@jrc.it)  information, considering their criticality, is usually regulated by strong confidentiality and disclosure constraints. The few electronic communication systems in the use requires a strong involvement of human actors, mainly in defining the level of trust of the other actors, and the level of disclosure to be assigned to a target information.

So, if from one hand the relevance of an information sharing infrastructure is well understood in Europe, the technological base for such partnership and for an efficient and modern information exchange is still to be built. The main problem in building this technological base is the lack of a computerized system supporting the (semi-)automated establishment of trust among the parties involved in the information exchange.

In the recent years, Trust Management (TM) has become a very active and relevant research area [5],[6],[11],[19], developing ? among other things ? efficient techniques aiming at the automated negotiation of a proper level of trust among (initially) not mutually trusted parties. Usually, this is needed since a party may request access to a resource owned by another party and there is no shared policy regulating resource access. Nevertheless, parties are assumed to possibly have local policies. Aim of TM ? an of the Trust Negotiation sub-field in particular ? is to build such shared policy starting from parties? local policies. Thus, the result of a trust negotiation is a yes/no answer to an initial request of resource?s access, given that the parties? local policies allow for a definition of a shared policy. At the present moment, trust negotiation techniques consider a resource as a indivisible whole, no further decomposable in many sub-resources.

However, in a complex environment ? such as the critical infrastructure information exchange scenario depicted above ?resources are composed by many sub-resources with complex interrelations among them. As an example, consider as resource to be accessed a complex attack tree, carrying information about hundreds of possible attack scenarios and the hierarchical relationships among them. Even more important, the fact that a party does not fully satisfy an access policy for a given complex resource does not necessarily implies a complete refusal for the access to it. Rather, it well the case that the party may access a given sub-part of the initially requested resource. In our example, upon a request for accessing a given attack tree, the credentials provided by the party may not be enough to fulfill such request, but enough for viewing a sub-tree of the full attack tree.

It is not a trivial task to provide such functionalities, given the current state of the existing trust negotiation approaches.

Advanced Trust Negotiation in Critical Infrastructures Stefano Braghin, Igor Nai Fovino, and Alberto Trombetta  I    In this paper we present an extended version of a well-known trust negotiation language in order to deal with such flexible negotiations, in which (components of) the accessed resource depends on the parties? local policies and such components can be established during the trust negotiation execution.



II. MOTIVATING SCENARIO The context we are describing is related to a community of  ?Energy infrastructure actors?. In the following a brief description of the different actors is given:  Government Authorities: a government authority is the national entity directly dependent from the national government entitled to control the national operators, to regulate the Energy normative and legislation, to interact with Foreign Government authorities in order to coordinate actions at international level. In our scenario different Government authorities can exist in the national context. Each one can directly interact with the other entities of the same country and only indirectly. There exists an exception: government authorities of different countries can interact. Moreover, every Government authority maintains a ?table of trust? related to the authorities of other countries. Such a table obviously reflects the foreign politic of every country. On the basis of such table, the different authorities may have or not the access to selected portion of the information shared/requested.

Producers: in this class fall all the industries producing Sw and Hw for Energy (or more in general for industrial) infrastructures (Scada systems, field actuators etc.). Such Producers, can share information (if they have some sort of common agreement (it can be represented by a proper ?agreement certificate?)), or with the final users (if the product the user have bought are under guarantee (in this case we can speak of ?guarantee certificate?)).

R and D: under this class fall all the research centers, universities etc. involved in the research in the field of critical infrastructure. Also in this case R&D can be groped into ?consortiums? which can share all the information or only portions of information about their results. The R&D can be associated into mixed consortiums having partners like Producers, final Users etc.

End Users: the End users are the owner of the critical infrastructures. They can share information with R&D, with other E.U., with producers.

Generic Entity: are entities which cannot be classified in one of the previous classes. Their level of information disclosure can be considered minimum.

The possible interactions between the actors described, can be extremely complex. The core of such interaction is obviously an exchange of information (information flows) which can have different level of sensibility and criticality. In the following, some example of such flows are shortly described:  Security information: exchange of security knowledge related to new vulnerabilities (hw, sw, architectural etc.), new attacks, new threats. Such information can be exchanged between End-users, between End-users and producers, etc. In any case, is evident how the same information can be posed under different disclosure constraints depending from the identity of the actor requiring the information) International threats: Government Authorities can for example exchange information about international threats, and then disclose partially such information to the companies based inside their national borders.

Common Policies: Government Authorities could, for example, exchange information about common policies, reach new agreements and then inform the national companies (producers and end-users)  These few examples are sufficient to argue some desirable features a framework for the ?Information sharing and exchange? should provide: 1) A language allowing to express the policies and, more  generally, the constraints which must be satisfied in order to request and obtain information  2) A set of mechanism allowing to define different level of trust, on the basis of which select which portion of the information can be released  3) An architecture allowing to implement a ?Negotiation Mechanism? for the exchange of the information allowing to define such levels of trust  4) The possibility, for a group of actors, to elect a member able, in certain cases, to conduct the negotiation for the entire group (The case of negotiation between government authorities could be an example)  The framework we present in this paper address such features.



III. KNOWLEDGE CHARACTERIZATION The proposed framework has been conceived in order to  share information about Power Grids, under a security and safety perspective. A relevant issue in an ?Information Sharing Framework?, is related to the kind and to the format of the information to be shared. [7]-[9], presented a comprehensive framework allowing to model both systems (from an architectural, service oriented point of view) and security knowledge. We decided to adopt such compact modeling approach to model the information to be shared. A system or an architecture, is then modeled in term of components, services provided, relationship among components, and subsystems. At the same way, according to [10], the ?Security Knowledge? is modeled in term of vulnerabilities, attacks and threats. For major details about system and security knowledge modeling please refer to [9], [10].

Fig. 1.  An example of XML document describing a simple attack tree.

A. Related works Protocols supporting trust negotiations [17] have been  thoroughly investigated in the context open systems.

Generally, the goal of trust negotiation protocols is to enable two stranger entities to establish mutual trust on-line. Such protocols however do not deal with P2P and have several limitations compared to our approach, in the sense that they do not provide a mean to reach an agreement on the initial target of the negotiation. For example, in [5], is presented a flexible authorization service for open systems that uses the technique of trust negotiation to broker access to resources, without allowing the access to limited part of the resource or the service neither its re-negotiation. To the best of our knowledge, there is no relevant work about the deployment of trust negotiation techniques within critical infrastructures environment.

Fig. 2.  An example of attack tree

IV. A BRIEF INTRODUCTION TO TRUST NEGOTIATION Trust Negotiation (TN for short) [2],[12],[16],[18], is an  approach to automated trust building. More specifically is an interactive process where trust is established gradually by requesting and disclosing credentials. This differs from traditional authentication-based access control systems  mainly because trust between strangers is established starting from parties? properties. Moreover, each party can define access control and release policies to control outsiders? access to their sensitive credentials. Since both parties have policies, TN is appropriate for deployment in a P2P architecture. In the approaches to TN developed so far, two parties can establish trust directly without involving trusted third parties, other than credential issuers. Trust-X [1], [14], [15] is a comprehensive XML-based system for TNs, specifically designed for a P2P environment. In Trust-X both parties are equipped with the same functional modules, as a consequence can both drive the negotiation process being equally responsible for negotiation management. Additionally, each party can alternatively act as a requester or a resource controller in different negotiations.



V. THE NEGOTAITION LANGUAGE In this section will be presented one of the languages  supported by Trust-X, then it will be presented the extension proposed to adapt the exposed language to the scenario presented in Section II.

The XML-based Resource Negotiation Language, or X-RNL for short, is a language to specify negotiation policies over resources of any kind.

The most interesting feature of X-RNL, as compared to existing language for negotiations [12], is the possibility to express group-based policies, in which resources belonging to more than one peer are involved.

A second interesting feature is the possibility to express policies involving resources. As such, X-RNL introduces a simple notation for specifying when the availability of a resource mentioned in a policy is going to be tested to guarantee the formula?s satisfaction. This approach allows peers to actually obtain stronger assurance about peers? trust, rather than only checking the validity of a statement.

Finally, X-RNL provides an interpretation of the language formulae in terms of states of peers. Intuitively, a peer state records which resources have been involved in a negotiation and to what degree (e. g. requested or released). We define and elaborate on peers? state transitions and highlight under which circumstances a peer state evolves. It is in development a prototype supporting the X-RNL language realized in Java, using the JXTA framework [4].

We now give a formal presentation of the X-RNL language components.

a) Terms, Conditions and Formulae: The basic elements of X-RNL are represented by: terms, typically denoting resources provided by a peer; conditions, specifying constraints on resources; and formulae, specifying under which conditions resources can be disclosed. Resources  are defined by means of a unique name res and a set AttrSet of qualifying attributes values. More precisely:  o  Terms: a term is an expression of the form res(AttrSetCond)[list] where res denotes a resource name, AttSetCond is a possible empty set    of attribute conditions and list is a possible empty list of sub-resource identifier, as defined as follows. We omit the square brackets if list is empty, indicating that the term is a so called atomic term, or if contains all the possible component the resource res, that means we omit them when we consider the resource completely.

o Conditions: if res is a resource name, then a condition cond on res is an expression of the form att op expr, where att is an attribute name of res, opt is a standard binary operator chosen from{ , , , }and expr is either a constant or a resource expression.

o Subresource lists: a subresource list is a list of subresources? identifier of the form 1l ,ist , vs s such as each is ?  and  0 is v where v is the cardinality of  the  subresources of the resource res.

Each subresource is is a term.

o Formulae: a (boolean) formula is recursively defined as follows: a term t is a formula given a formula , then ) is a formula given formulae and , then  and  are formulae  A formula 1, ,( )ut t applies to the resources 1 2, , , nRR R if  1R , 2R and nR are the resources names in terms 1, , nt t .

Example 5.1: Referring to the XML document shown in  Fig. 1 we can use the following expressions: 1. Library(Type=?4?) identifying the whole XML  document; 2. Library(Type=?4?)[1,3] identifying the tags Name and  Date, the first and the third respectively; 3. Library(Type=?4?)[4]()[1](Id=?13?) identifying the  content of the tag AttackTree with attribute Id=?13?.

A peer is denoted by a (possible indexed) lowercase letter,  e.g. p or p1. A group of peers is denoted by a (possibly indexed) uppercase letter, such as G or G1. We refer to such expressions as peers? identifiers and peer groups? identifiers.

The expression G.p denotes the peer p belonging to group G.

b) Weak/Strong formulae: Given a formula 1, ,( )ut t over terms 1, , ut t , the expression 1, ,( )  w ut t  ( 1, ,( )u st t ) denotes a weak formula (strong formula).

Weak and strong formulae mandate two alternative ways of checking whether the resources to which such formulae are applied, are effectively available. From now on, weak and strong formulae are referred simply as formulae.

c) Quantification over peer  (with cardinality restriction): The expressions 1. , )( ,( )utx G t ,  1. ( ), )( , n  utx G t  (for any n ? and where 1, ,( )ut t  is a formula) are quantified formulae. Their intended meaning is that the former is true in the case all peers in group G satisfy  formula 1, ,( )ut t  whereas the latter is true in the case there are n or more peers in group G satisfying formula 1, ,( )ut t .

Quantified formulae cannot be nested.

d) Named formulae: It is an expression of the form 1,@ ( ),( )p ut t , where p is a peer identifier and 1, ,( )ut t  is a formula. Intuitively, a named formula is true when it holds at the present state of the specified peer. Named formulae cannot be nested.

e) Disclosure policy: It is an expression of the form 1( )@ ), ,(p utt t , where p is a peer, t is a term, complex  or atomic, without conditions and 1, ,( )ut t  is a (quantified or named) formula. The meaning of such expression is that the owner of the policy releases the resource res associated with the term t to the peer p provided that formula 1, ,( )ut t holds in the state of peer p.

f) Rebate formula: It is an expression of the form  1, ,( )k where each i is a term referring to the corresponding one in a previously exchanged disclosure policy, that means, given a previously exchanged disclosure policy 1( , , )utR t where 1 1( ), , u ut t tt ,  k u and ,1i i k , j such that ti j . The meaning of such expression is that the peer is offering a subset of the terms included in the formula of the disclosure policy, to access the term protected by the policy itself.

Up to now, X-RNL provides only two levels disclosure: That is, a resource R can only be disclosured or not. As shown in Section II, there are very natural scenarios motivating the introduction of a more flexible way of disclosing complex resources. To achieve that, we introduce the concept of level of (resource) disclosure.

Definition 5.1 (levels of (resource) disclosure): Given a resource, or service, R, we define a series of levels of disclosure over R denoted by R0, R1, R2,?, Rv. Considering the composite resource R = {r1, r2,?, rt}, where each ri is an atomic resource, the levels of disclosure can be seen as coverings over R where R0 = R and Rv = . The remaining levels are choose in a way to define a partial order among them.

In Examples 5.2 and 5.3 are shown two of the possible levels definitions.

Example 5.2: Considering the resource R, defined in Fig. 1, identified with the term Library(Type=?4?) it is possible to define on it, for example, 5 levels of disclosure:  R0 = Library(Type = ?4?)[1,2,3,4] R1 = Library(Type = ?4?)[1,2,3] R2 = Library(Type = ?4?)[1,2] R3 = Library(Type = ?4?)[1] R4 =  Example 5.3: Again, consider the resource R, defined in Fig. 1, it is possible to define a different set of levels of disclosure, composed that time of 8 levels, as follows:    R0 = Library(Type = ?4?)[1,2,3,4] R1 = Library(Type = ?4?)[1,2] o R2 = Library(Type = ?4?)[1] o R3 = Library(Type = ?4?)[2] R4 = Library(Type = ?4?)[3,4] o R5 = Library(Type = ?4?)[3] o R6 = Library(Type = ?4?)[4] R7 =  A negotiation is a finite sequence of formulae, exchanged by the negotiation parties in order to achieve the disclosure of a resource R. The negotiation is started by a party, called Requester, asking to access the resource owned by the other party, called Controller. The Controller replies sending to the counterpart the disclosure policies associated to the requested resource. For each terms used in the formulae of the disclosure policies, the Requester sends the corresponding disclosure policies. The same procedure is performed by the Controller on the terms in the formulae sent it by the Requester. Such operations are iteratively repeated until a set of terms is found with no disclosure policies associated and granting the disclosure of further terms up to the disclosure of the initial resource R. If such set is no found, the negotiation terminates with a failure. The state of a peer keeps track of which resources the peer makes available to other peers, and whether the peer has released such resources. Also the state includes the identifies of the resources that the peer has requested from other peers, and whether the peer has obtained them  Definition 5.2 (Peer State): A state of a peer p is a tuple  1 1 2 2, , , , , ,p u uS R a R a R a , where a pair ,i iR a denotes  the fact that resource Ri has been associated to action ai, where ai takes values over the set {requested, available, released, received, request}.

The satisfaction of a formula is evaluated respect with a peer state. A formula is satisfied in a peer state if the resources to which a formula applies are available in that state and if the resources? attributes meet the conditions in the formula.

Definition 5.3 (Formula satisfiability): Given a formula 1, ,( )ut t we say that  holds at Sp iff:  1) There is a tuple of the form ,iR available  for each  resource Ri to which 1, ,( )ut t  applies  2) For each resource Ri the attribute conditions specified by the corresponding term ti in  are satisfied by ?s attribute values in AttrSet.

g) Weak assured formulae enforcement: If a formula is denoted as weak is verified by checking the validity of the credential associated to the terms of the formula. That may mean checking the validity of X.509 certificates or of signed advertisement, depending on the environment of the negotiation.

h) Strong assured formulae enforcement: If a formula is denoted as strong, the simple verification of the credential representing it, is not enough. That type of verification  1 That is, all the resource to which the formula applies are available in Sp.

requires that the actual presence of the resource is periodically verified. The frequency of the verification can be set by p at its discretion.

i) Level of disclosure: If the reply to the initial request of the resource R is of the form 1 2 ),( , , utR tt , where  the formula 1 2 1 2( ), , , u utt t t t t , it is possible for the initial requester to provide a subset of terms contained in  in order to obtain at least a subset of the atomic resources composing R that the provider define as appropriate for the disclosured terms. The requester rebate with the rebate formula 1 2( , , , )k , constructed as described before. If the controller of the resource R accepts the offered terms as enough to disclosure the resource, it replies with a disclosure policy of the form 1( , , )  l kR  where  lR is the level of disclosure associated by the controller with the offered terms 1, , k .

That process is called level negotiation. To be able to identify the level associate to a given subset of terms, we need to define some tools function.

Definition 5.4 (Term evaluation function): A term evaluation function is a function defined as follows:  :w T ? Where T is the set of terms known by a party. Such  function associates to each term t a value n, expressing the ?importance? each party associate with the term t.

Definition 5.5 (Level of disclosure threshold function): A level of disclosure threshold function is a function defined as follows: :s L ?  Where L is a set of all disclosure levels. Such function associates a value to each disclosure level. The meaning of such association is to define a threshold above which the level can be disclosured. An example of the usage of what have just been described is shown in Ex. 5.4.

Example 5.4: Let the attach tree shown in Fig. 1 be the resource controlled by a party called Controller (C). A party, called Requester (R), wants to access such resource. R sends to C a request of the form: Library(Type=?4?). C replies with the disclosure policy related to Library(Type=?4?). Let it be Library(Type=?4?) 1 2 3 4( , , , )t t t t  where the formula  1 2 3 4 1 2 3 4( , , , )t t t t t t t t . R doesn?t own t2 and t3, or doesn?t want to disclose them to C, it replies with the rebate formula 1 4 1 4( , )t t t t . Following Fig.3, C identify as R2, according to Example 5.2, the appropriate level of disclosure for the terms offered by R. It replies with the new resource ?requested? and the new associated disclosure policy Library(Type=?4?)[1,2] 1 4( , )t t where 1 4 1 4( , )t t t t . If C accept to access the offered level of disclosure over the resource R, it replies with the disclosure policies associated to the involved terms. If it refuses it can try to offer more less terms or give up with the negotiation.

This is a conservative extension of the original language in the sense that, if there is no match between the disclosured    policies in X-RNL, then the negotiation fails, while in the newly proposed language it is possible to re-negotiate the originally requested resource.

Fig. 3.  Identifies the disclosure level for the terms offered by the counter-party

VI. CONCLUSIONS The language described previously, satisfies the  requirements presented in Section II for Critical Infrastructure Information Sharing Systems. In fact, such negotiation language enables to express exchange policies and constraints, introducing formal mechanisms allowing to assign different level of ?trust? to the actors of the sharing network, on the basis of the required information. Moreover, it allows to model the concept of partial information sharing, i.e. the possibility to release only portions of a target information, on the basis of the identity and of he properties of the requesting actor.  By adopting such language it is possible to create a distribute network of peer ?layered and clusterized? according to different kinds of characteristics.

They can freely and securely exchange information about C.I.

preserving at the same time the strong constraints related to the confidentiality of such information. Fig. 4 shows for example the case described in Section II: the peers are organized into ?Country clusters?; they can negotiate and exchange directly some information with members of the same or different cluster, and indirectly by leaving the negotiation task to the Government Peers. The present work leaves obviously opened some questions which are typical and not definitively solved in the information sharing world: (I) the owner of a released information loses any control over the released copy, i.e. he cannot force the actor which receives the information to apply the same distribution criteria on such information while requested to distribute it by a third actor. (II) The system is, at the moment, prone to Data-Mining analysis attacks. In fact by using such techniques, could be possible for a malicious actor, to use information obtained ?legally? in order to guess information for which he has not any access right.

Fig. 4.  High level Information Exchange Network schema  The first problem could be solved for example by implementing some ?reputation mechanism?, while for the second, some Statistical disclosure control and Privacy Preserving Data Mining mechanisms can be identified and applied. We plan for the future, to address such issues.

Moreover, we plan to implement a fully working peer-to-peer prototype of the present architecture, in order to conduct an extensive on field working test.

