A Data Warehousing Approach to Discover Knowledge in Peer-to-Peer  Application

Abstract   Recently, BitTorrent has emerged as a very popular and scalable peer-to-peer file distribution mechanism.

It has been successful at distributing large file quickly and efficiently. With an increasing number of users of BitTorrent, there should be much information about the user data flowing through the network. The rich information may imply the users? habitual behaviors, data access patterns, interested files, and so on. The information is useful for general users, network managers, and designers, etc. Hence, we propose a framework on BitTorrent which combines data warehouse and data mining techniques to offer an efficient and systematic analysis for users.

1. Introduction   BitTorrent is a protocol that enables fast downloading of large files using minimum Internet bandwidth. For its high scalability, fault tolerance, and the load balance, BitTorrent has become the most popular application based on the P2P paradigm. It has proved extremely popular according to the CacheLogic estimates that BitTorrent generated about 30% of all US Internet traffic and 53% of all P2P traffic in June 2004 [1] which grows on persistently.

Because of the popularity of BitTorrent, there are many analyses on it [13]. Previous analyses of BitTorrent are usually focused on the performance of the algorithms used in BitTorrent [5, 6]. Our study is focused on the BitTorrent users? characteristics; such as client?s interested files, network utilization in different time, etc. We collect and analyze users? data log which includes IP address, time, and other features to predict users? habitual behavior.

We propose a user-based data analysis of BitTorrent. We build the data warehouse, and exploit the data cube structure to access data efficiently and view the data from various aspects and to employ  multidimensional analysis. Then, we use the data mining techniques to mine association rules for decision making.

2. Background and related work  2.1. BitTorrent overview   BitTorrent is a P2P application for sharing files that capitalizes the resources (access bandwidth and disk storage) of peer nodes to efficiently distribute large contents [5]. Figure 1 shows steps for joining the BT network. The basic idea is to divide the file into equal- sized blocks (typically 32-256KB) and have nodes to download the blocks from multiple peers concurrently.

To avoid a delay between blocks being sent, BitTorrent breaks blocks further into sub-blocks in the wire to enable pipelining of requests so as to mask the request- response latency [4]. A user that has not downloaded the entire file may have completely several blocks, which it can upload to other clients. This allows clients to share the workload even as they are still downloading.

Fig. 1. BitTorrent network   DOI 10.1109/WAINA.2008.143    DOI 10.1109/WAINA.2008.143      2.2. Data warehouse and OLAP   As coined by W. H. Inmon, the term ?Data  warehouse? refers to a ?subject-oriented, integrated, time-variant and nonvolatile collection of data in support of management?s decision-making process? [7]. A data warehouse is a repository of integrated information, available for queries and analysis. Data and information are extracted from different sources. If users want to execute queries, the system only needs to search the data warehouse instead of the source databases.

On-Line Analytical Processing (OLAP) technique has been proven to be one of the most popular tools for on-line, fast, and effective multidimensional data analysis [8]. It can save much time because of massive amount of data stored in data warehouse. To provide fast and multidimensional analysis of data in a data warehouse, the OLAP tool pre-computes aggregation over data and organizes the result as a data cube [14] composed of several dimensions, each representing one of the user analysis perspectives. The typical operations provided by OLAP include roll-up, drill- down, slice, and dice and pivot [9].

2.3. Data model   Star schema is the most common and popular dimension model used in data warehouse proposed by Kimball [10]. A star schema consists of a fact table and several dimension tables. The fact table stores the bulk of the data which is a list of foreign keys corresponding to dimension table with no redundancy, and numeric measures of user interests. The dimension table contains a set of attributes. Furthermore, the attributes in a dimension table may form either a hierarchy or a lattice.

2.4. Association rule mining   The concept of association rule mining is to search interesting relationships among items in a given data set. For example, the supermarket information that customers who purchase diapers also tend to buy beers at the same time is represented in association rule below:  Diaper  Beer [sup = 2%, conf = 60%].

Rule support and confidence are two measures of  rule interestingness. The support of 2% means that 2% of all customers purchase transactions contain both  diaper and beer. The confidence of 60% means that 60% of the purchase transactions that contain diaper also contain beer. Typically, an association rule is considered interesting if it satisfies a minimum support threshold and a minimum confidence threshold that are set by users or domain experts. The most popular and influential mining algorithm is Apriori [9], and the concept of multi-dimensional association rules is first proposed by H. Zhu [12].

3. System framework   Our system framework is shown in Figure 2, including the data collection from the Internet. It generalizes the data to a certain level of abstraction, integrates the collection data into data warehouse, and mines association rules for the user, systematically.

3.1. IP addresses and locations   In our experiments, we choose torrentportal.com (a large websites which contains various torrent files) as our BiTorrent community. From torrentportal, we select 12 different and popular files then classified according to the file size and file type.

After deciding which files to measure, we conduct a PeerGet program to contact the tracker for each specific file and gathering the IP addresses of peers downloading the same file. The PeerGet program returns the IP list from the tracker can guarantee the hosts in the list are all BitTorrent users.

Fig. 2. System framework     As well known, the IP address classes are analogous to the concept of hierarchy structure, they have the same prefix will classify into the same subnetwork. IP addresses in the same subnetwork usually have similar characteristic, e.g. round-trip time, location, and bandwidth. Same as the concept hierarchy of IP address, data warehouse also supports the hierarchical level.

Therefore, we distribute the IP address with a hi- erarchical structure.

We provide approximate information about geographical location of each peer. The geographical location can help to analysis data in a specific area or country. It?s helpful for a system provider or designer to make some business decision or adjust for better performance. By querying the web-based WHOIS clients, we can obtain the location information of each peer. We just collect the country of each peer. Here, we conduct a program called LocationGet to contact the web-based WHOIS [3] clients and grab the information of country of each peer.

3.2. Round-trip time measurement   Round-trip time (RTT) is the time takes to send a packet to a remote host and receive a response; used to measure delay on a network at a given time. Besides that, RTT can provide distance information in terms of latency. Latency is the easiest distance metric to provide, and the most generally useful.

Francis et al [15] propose a virtual topology using the Round-trip propagation and transmission delay as the distance between two hosts for server or peer selection.

Thus, for the multi-function of RTT, we use it as the measure in our framework of data warehouse. For the users view point, we use RTT to offer a multidimensional analysis for peer selection. On the other hand, according to the change of RTT, a network manager can analyze a region or a node traffic trend.

Fping [2] is a ping like program which uses the Internet Control Message Protocol (ICMP) echo request to determine if a host is up and it?s round-trip time. Fping can ping many hosts in parallel. For getting the trend of each peer?s network load, we conducted Fping of each peer we got from PeerGet program, and lasted around one month and executed one time an hour.

Note that, Fping is used to determine if a host is up and it?s RTT. So there are several situations we can?t pingable the hosts:  1. Hosts are down.

2. The host?s network traffic is hugely, the packet  we sand may loss.

3. Hosts behind the firewall or the measure  packets are blocked by some anti-virus software.

We filter out the above situations, and just record the  ping measurements as our data sources.

3.3. Bandwidth measurement   The bandwidth between two hosts is the smallest capacity in the path. Knowledge of the capacity of a path can be put to good use in various scenarios. Using such information, a designer can devise a more load balance system. Further, same as RTT, bandwidth can offer to users for peer selection [17]. But different from RTT, bandwidth does not interfere with the network traffic or change on the go. It has a small variation, so we just need an accurate tool for bandwidth measurement. Thus, we use CapProbe as our capacity estimation tool which was presented by Kapoor et al.

[16]. The sample of raw dataset is depicted in Table 1.

3.4. Data generation and data transformation   After collecting data, for providing users more meaningful and understand information, we generalizing the numerical attributes (i.e. RTT, Bandwidth) to a certain level of abstraction. There are two reasons for that:  (1) Users do not understand the meaning behind the numerical data.

(2) For the mining step, it could not accumulate sufficient support to pass the minimum support threshold.

For example, we generalize the numerical attribute ?RTT? as following:  good (1 ~ 220), average (221 ~ 350), mediocre (351 ~~750), poor (higher than 750)  And the association rule between IP address and RTT as following:  Table 1. The sample of raw data set File Type File Size Time Country IP Bandwidth RTT  apps 1GB 3/19/22 DE 87.78.99.166 0.42 523  video 2GB 3/30/04 US 69.128.23.1 0.30 302  apps 3GB 4/11/17 CA 69.157.24.26 15.7 343  audio 5MB 3/23/10 JP 218.217.22.9 1.95 188     IP (x, ?140.115.50.1?) => RTT (x, ?good?) We transform the collected data into the data  warehouse, the star schema showed in Figure 3. There are five dimension tables and a fact table with RTT as the measures. The IP, Time, and File dimensions have the hierarchy structure. For the Time dimension, we generalize higher levels of abstraction. We divide 24 hours into 4 Sessions: morning, noon, evening, and midnight, and 4 sessions a day for a general view of data.

3.5. The process of association rule mining   This is the final step in our framework to offer to users some general association rules for decision making.

Generally, mining association rules can be decomposed into two steps:  1. Find all frequent itemsets with support above the minimum support.

2. Use the frequent itemsets to generate the desired rules.

We use the Apriori algorithm to mine association rules. The Apriori algorithm, first proposed by Agrawal  and Srikant [11], is an interesting and influential algorithm. The main idea of this algorithm is based on the prior knowledge of frequent k-itemsets to generate candidate (k+1)-itemsets.

4. Experimental results   We describe our experimental results and analyze the outcomes of the association rule mining. Through the clean and integrated data, we still have more than 46 millions rows of data. Our experiments are performed on an Intel Pentium-IV 3.2G MHz with 1GB RAM, running on Windows 2003. In the follows we compare the execution time with different situations, firstly. Then analyze the results of association rule mining.

4.1. Execution time comparison   We compare the execution time that mining association rules with selection from raw dataset and selection from cube. We show that with different dimensions, minimum support, and level.

Figure 4 and Figure 5 show the execution time of association rules mining with different dimensions and minimum support. In Figure 4, the (A) dataset is extracted from raw dataset that contains 4 dimensions and without any hierarchy structure. On the contrary, dataset (B) and (C) are same as dataset (A) which are extracted from data cube, and roll-up with 1 and 2 level respectively. We can obtain that the mining execution time of the datasets from data cube (containing the build time of cube) is lower than the dataset from raw data significantly. From Figure 5, it is obvious that mining from data cube can decrease execution time. Table 2 shows the number of rules from each dataset in above figures.

Fig. 3. Star schema of our system  Fig. 4. Association rules mining time with 4 dimensions    Fig. 5. Association rules mining time with 3 dimensions     Not surprisingly, the association rules from the raw dataset are many times than rules from data cube. But these rules are too detailed and complex to use.

Generalizing a certain level of abstraction can help users to analyze and use them easily. In the follows, we show the difference between low level and high level rules and the components of high level rules from low level rules.

4.2. Analyze the association rules   In this section, we analyze the results of association rules mining from the data cube. First, for the peer selection strategy, as mentioned in [15], we use round- trip delay as the criterions to help peer or server selection. Following, we also take some rules that are related to the round-trip time as examples.

Table 3 shows some rules that can help to select peers. We generalize the RTT to a certain level of abstraction with four distinct values. Therefore, when peer selection, we also classify peers into four levels  that apply to the four distinct values. First, we choose the RTT with ?good? level, and then choose the ?average? and so on. This allows not only actively to choose but also passively to filter out the peers with RTT ?poor?. Furthermore, we can consider multi- dimensional to help peer selection more accurately.

Table 4 displays some multi-dimensional rules.

For above rules, we present rules with more dimensions for peer selection or analysis. We consider more than one factor that increases the accuracy of peer selection strategy. Further, the IP dimension can roll-up higher level for more generalize information.

5. Conclusions and future works   We devise a data warehouse framework for collecting BitTorrent users? information. Because of multidimensional structure, we provide a versatile point of views for various analysis tasks. Through a data warehouse, the result of rules presents a more generalized abstraction. Compared to raw dataset  Table 4. Three dimensions association rules for peer selection Rules Confidence (%) Support (count)  Country (?US?), IP (?206.169.170?) => RTT (?good?) IP (?166.111.249?) => Bandwidth (?8.0-10.0?), RTT(?good?)  IP (?202.33.24?), Day (?Saturday?) => RTT (?good?)  99.9% 99.6% 100%   Table 3. Two dimensions association rules for peer selection Rules Confidence (%) Support (count)  IP (?210.24.99?) => RTT (?good?) IP (?80.36.121?) => RTT (?mediocre?)  Country (?TW?) => RTT (?good?) Country (?KE?) => RTT (?poor?)  99.91% 1.0  91% 1.0      Table 2. Number of rules of each dataset Distinct values of each dimension Support Number of rules  550 50130 600 39632   A  (raw dataset)   (5, 149, 169479, 4)  650 18230 1200 9481 1400 5987   B  (data cube)   (3, 149, 107026, 4)  1600 4430 3000 7701 4000 6076   C  (data cube)   (3, 149, 7102, 4)  7000 3570 550 20458 600 13939   D  (raw dataset)   (169479, 11, 4)  650 7788 1200 4448 1400 2771   E  (data cube)   (107026, 11, 4)  1600 1977      mining, it is also more efficient to do association rules or other data mining tasks.

Using peer selection as an example, we compared previous work on peer selection to provide a more generalized, efficient, and considerably more than one set of rules for users.

In our framework, we use the Apriori algorithm to implement the association rule mining task. If the dimensions or the distinct values of each dimension become complicated, the execution time of association rule mining still waste much time on scan the dataset.

One of our future works is to conduct innovate algorithm to speed up the mining steps. Further, we can expand more dimensions to the star schema for analysis diversity. Like available bandwidth, it is variable at any time of each peer. We can add it to the measure attribute of data warehouse for peer select more accurately.

For the scalability, we hope to build our framework on tracker servers in the future. Because tracker servers are the centralized components, each host needs to con- nect them to join the BitTorrent network. Thus, from the view of trackers, we can get more meaningful rules that adapt to the whole BitTorrent users.

6. Acknowledgment   This research was sponsored by Ministry of  Economic Affairs, Taiwan under the grant 96-EC-17- A-02-S1-029.

7. References  [1] CacheLogic Research. The true picture of peer-to-peer filesharing, http://www.cachelogic.com/research.  2004.

[2] Fping ? a program to ping hosts in parallel.

http://www.fping.com/  [3] WHOIS - a TCP-based query/response protocol in order to determine the owner of a domain name, an IP address.

http://en.wikiwedia.org/wiki/Whois  [4] B. Cohen, ?Incentives build robustness in bittorrent,? in Proceedings of the first Workshop on the Economics of Peer-to-Peer Systems, Berkeley, USA, 2003.

[5] M. Izal, G. Urvoy-Keller, E. W. Biersack, P. Felber, A.

Al Hamra, and L. Garc?es-Erice, ?Dissecting bittorrent: Five months in a torrent?s lifetime,? in Passive and Active Measurements, Antibes Juan-les-Pins, France, Apr. 2004.

[6] D. Qiu and R. Srikant, ?Modeling and performance analysis of bittorrent-like peer-to-peer networks,? in ACM SIGCOMM, Portland, OR, USA, Aug. 2004.

[7] W. H. Inmon and C. Kelly, Rdb/VMS: Developing the Data Warehouse, QED Publishing Group, Boston, Massachussetts, 1993.

[8] S. Chaudhuri and U. Dayal, ?An overview of data warehouse and OLAP technology,? in ACM SIGMOD Record, Vol. 26, pp. 3 59-370, 1997.

[9] J. Han and M. Kamber, Data mining: Concepts and Techniques, MORGAN KAUFMANN PUBLISHERS, 2000.

[10] R. Kimball, The Data Warehouse Toolkit Practical For Building Dimensional Data Warehouses, JOHN WILEY & SONS, INC. 1996.

[11] R. Agrawal and R. Srikant, ?Fast algorithms for mining association rules,? in Proceedings of the 20th VLDB Conference, pp. 487-499, 1994.

[12] H. Zhu, On-Line Analytical Mining of Association Rules, SIMON FRASER UNIVERSITY, December, 1998.

[13] J. Pouwelse, P. Garbacki, D. Epema, and H. Sips, ?The Bittorrent P2P File-sharing System: Measurements and Analysis,? in 4th International Workshop on Peer-to-Peer Systems (IPTPS?05), Feb. 2005.

[14] J. Gray, A. Bosworth, A. Layman, and H. Pirahesh, ?Data cube: a relation aggregation operator generalizing group-by, cross-tabs and subtotals,? in Proceedings of 1996.

[15] P. Francis, S. Jamin, V. Paxson, L. Zhang, D. F.

Gryniewicz, and Y. Jin, ?An architecture for a global Internet host distance estimation service,? in Proceedings of IEEE INFOCOM, New York, NY, Mar. 1999.

[16] R. Kapoor, L. Chen, L. Lao, M. Gerla, and M. Sanadidi, ?CapProbe: a simple and accurate capacity estimation technique,? in Proceedings of the 2004 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, pp. 67-78, 2004.

[17] T. S. E. Ng, Y. hua Chu, S. G. Rao, K.

Sripanidkulchai, and H. Zhang, ?Measurement-based optimization techniques for bandwidth-demanding peer-to-peer systems,? in Proceedings of IEEE INFOCOM, Apr. 2003.

