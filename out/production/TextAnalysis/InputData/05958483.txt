A Reduction of 3-Sat Problem from Optimal  Sanitization in Association Rule Hiding

Abstract?-Large repositories of data contain sensitive information that must be protected against unauthorized access.

The protection of the confidentiality of this information has been a long-term goal for the database security research community and for the government statistical agencies. Recent advances in data mining and machine learning algorithms have increased the disclosure risks that one may encounter when releasing data to outside parties. Association rule hiding is one of important privacy preserving data mining problems. This paper review current approaches addressing data mining and Security and that reduces 3-SAT problem from optimal sanitization in association rule hiding.

Keywords-3-SAT, Association Rule, NP-Complete, Data mining, Data Sanitization

I. INTRODUCTION Data mining is a technique that helps to extract important  data from a large database. It is the process of sorting through large amounts of data and picking out relevant information through the use of certain sophisticated algorithms as shown in Figure 1. As more data is gathered, with the amount of data doubling every twenty months, data mining is becoming an increasingly important tool to transform this data into information.

Data mining can be used to classify data into predefined classes (classification), or to partition a set of patterns into disjoint and homogeneous groups (clustering), or to identify frequent patterns in the data, in the form of dependencies among concepts-attributes (associations). In general, data mining promises to discover unknown information. If the data is personal or corporate data, data mining offers the potential to reveal what others regard as private. This is more apparent as Internet technology gives the opportunity for data users to share or obtain data about individuals or corporations. In some cases, it may be of mutual benefit for two corporations (usually competitors) to share their data for an analysis task.

However, they would like to ensure their own data remains private. In other words, there is a need to protect private knowledge during a data mining process. This problem is called Privacy Preserving Data Mining (PPDM). The remainder of this paper is organized as follows. First we review current approaches addressing data mining and security.

We then present a formulation of our problem and show that the optimal solution to it is NP-Complete.

Figure 1.  Data Mining

II. LITERATURE SURVEY The problem of association rule hiding was first probed in  [1]. After that, many approaches were proposed. Roughly, they can fall into two groups: data sanitization data modification approaches (data modification for short) and knowledge sanitization data reconstruction (data reconstruction) approaches.

A. Data Modification Approaches Data modification methods hide sensitive association rules  by directly modifying original data. Most of the early methods belong to this track.

Data sanitization is a process that is used to promote sharing of transactional databases among organizations while alleviating concerns of individual organizations by preserving confidentiality of their sensitive knowledge in the form of sensitive association rules. It hides the frequent item sets corresponding to the sensitive association rules that contain sensitive knowledge by modifying the sensitive transactions that contain those item sets. This process is guided by the need to minimize the impact on the data utility of the sanitized database by allowing mining as much as possible of the non- sensitive knowledge in the form non-sensitive association rules from the sanitized database.

The basic idea of data modification approaches is the so-  called data sanitization. They hide sensitive association rules by directly modifying, or we say, sanitizing the original data D, and get the released database D? directly from D, Most of the     existing methods belong to this data modification prosperous track. According to different modification means, it can be further classified into: Data-Distortion techniques and Data- Blocking techniques. However, data modification approaches cannot control the hiding effects intuitively as the sanitization is performed on data level.

Data-Distortion is based on data perturbation or data transformation, and in particular, the procedure is to change a selected set of 1-values to 0-values (delete items) or 0-values to 1- values (add items) if we consider the transaction database as a two-dimensional matrix. Its aim is to reduce the support or confidence of the sensitive rules below the user predefined security threshold. Early data distortion techniques adopt simple heuristic-based sanitization strategies like Algo1a/Algo1b/Algo2a, Algo2b/Algo2c [2], Naive/MinFIA/MaxFIA/IGA [3], RRA/RA and SWA [4,5].

Different heuristics determine different selection strategies on which transactions are to be sanitized and which items are to be victims, which are two core issues affecting the hiding effects in the algorithms. Subsequent techniques like WSDA/PDA [6] and Border-Based [7] advanced the simple heuristics to heuristic greedy (local optimal) strategies trying to greedily select the modifications with minimal side effects on data utility.

Consider a market database consisting of 5 transaction and four items. Here 1 and 0 represents the presence or absence of a item in a particular transaction. Let Minimum support threshold be 60% and Minimum confidence threshold be 75%.

TABLE 1  SAMPLE DATABASE FOR DATA DISTORTION TECHNIQUE    In the above sample database shown in table 1, Rule A C  has: ? Support(A C)=80% Since A and C both are  present in 4 transactions out of 5 transactions.

? Confidence(A C)=100% Since C is present in all  transactions wherever A is present.

As in the above problem, Rule A C has support and confidence more than MST and MCT.

Let rule A C be sensitive association rule that needs to be  hided before database being released. In data distortion approach, items are inserted or deleted for reducing the support and confidence.

After applying the data distortion approach, database will  be modified as shown in table 2.

TABLE 2 DISTORTED DATABASE   Rule A C has Support(A C)=40% and  Confidence(A C)=50% which is below the MST and MCT.

Data-Blocking [8] is another data modification approach for  association rule hiding. Instead of making data distorted (part of data is altered to false), blocking approach is implemented by replacing certain data items with a question mark ???. The introduction of this special unknown value brings uncertainty to the data, making the support and confidence of an association rule become two uncertain intervals respectively.

At the beginning, the lower bounds of the intervals equal to the upper bounds. As the number of ??? in the data increases, the lower and upper bounds begin to separate gradually and the uncertainty of the rules grows accordingly. When either of the lower bounds of a rule?s support interval and confidence interval gets below the security threshold, the rule is deemed to be concealed.

Example: Consider a market database consisting of 5 transaction and four items.

Here 1 and 0 represents the presence or absence of a item in a particular transaction.

Let Minimum support threshold be 70% and Minimum confidence threshold be 80%.

TABLE 3  SAMPLE DATABASE FOR DATA BLOCKING TECHNIQUE   In the above sample database shown in table 3, Rule A C  has: ? Support(A C)=80% Since A and C both are  present in 4 transactions out of 5 transactions.

? Confidence(A C)=100% Since C is present in all  transactions wherever A is present.

As in the above problem, Rule A C has support and  confidence more than MST and MCT.

Let rule A C be sensitive association rule that needs to be  hided before database being released. In data blocking approach data items are replaced with a question mark ???.

After applying the data blocking approach, database will be modified as shown in table 4. Now  Rule A C has Support(A C)=60% and Confidence(A C)=75% which is below the MST and MCT.

TABLE 4 MODIFIED DATABASE

III. ASSOCIATION RULES AND SANITIZATION  In this section, the notion of association rules is precisely defined and a formulation of the problem is given. It is then proven that the problem of finding an optimal sanitization of the source database is NP-Complete. This is done for a number of (progressively more realistic) notions of what it means to ?sanitize?. The proofs are based on reductions of the problem addressed in this paper to the 3-SAT problem.

A. The Problem Let  be a set of n binary attributes called  items.

Let  be a set of transactions called the  database.

Each transaction in D has a unique transaction ID and  contains a subset of the items in I. A rule is defined as an implication of the form   where  and  .

The sets of items (for short itemsets) X and Y are called antecedent (left-hand-side or LHS) and consequent (right- hand-side or RHS) of the rule.

The support supp(X) of an itemset X is defined as the proportion of transactions in the data set which contain the itemset   Confidence can be interpreted as an estimate of the  probability P(Y | X), the probability of finding the RHS of the rule in transactions under the condition that these transactions also contain the LHS   The lift of a rule is defined as     or the ratio of the observed confidence to that expected by  chance.

An association rule is an implication of the form X  Y,  where X  I, Y  I and X  Y=  . We say the rule X  Y holds in the database D with confidence c if X Y / X c. It can also be said that the rule X  Y has support s if X  Y / D  s. Note while the support is a measure of the frequency of a rule, the confidence is a measure of the strength of the relation between sets of items. The well-known association rule mining problem aims to find all significant association rules. A rule is significant if its support and confidence is no less than the user specified minimum support threshold (MST) and minimum confidence threshold (MCT).

To find the significant rules, an association rule mining algorithm first finds all the frequent itemsets and then derives the association rules from them. On the contrary, the association rule hiding problem aims to prevent some of these rules, which is referred as ?sensitive rules?, from being mined.

Given a database D to be released with minimum threshold  ?MST?(Minimum Support Threshold), ?MCT? (Minimum Confidence Threshold) and a set of association rules R mined from D,a set of sensitive rules Rh subset of  R to be hidden, a new database D? has to be found such that the rules in Rh can still be mined from D? ,however with predefined modification and the rules in R-Rh can  be mined as earlier.

A. 3-SAT Satisfiability is the problem of determining if the variables  of a given Boolean formula can be assigned in such a way as to make the formula evaluate to TRUE. Equally important is to determine whether no such assignments exist, which would imply that the function expressed by the formula is identically FALSE for all possible variable assignments. In this latter case, we would say that the function is unsatisfiable; otherwise it is satisfiable. To emphasize the binary nature of this problem, it is frequently referred to as Boolean or propositional satisfiability. The shorthand "SAT" is also commonly used to denote it, with the implicit understanding that the function and its variables are all binary-valued. n complexity theory, the satisfiability problem (SAT) is a decision problem, whose instance is a Boolean expression written using only AND, OR, NOT, variables, and parentheses. The question is: given the expression, is there some assignment of TRUE and FALSE values to the variables that will make the entire expression true? A formula of propositional logic is said to be satisfiable if logical values can be assigned to its variables in a way that makes the formula true. The Boolean satisfiability problem is NP-complete. The propositional satisfiability problem (PSAT), which decides whether a given propositional formula is satisfiable, is of central importance in various areas of computer science, including theoretical computer science, algorithmics, artificial intelligence, hardware design, electronic design automation, and verification A literal is either a variable or the negation of a variable (the negation of an expression can be reduced to negated variables by De Morgan's laws). For example, x1 is a positive literal and NOT(x1) is a negative literal.

A clause is a disjunction of literals. For example, x1 NOT(x2) is a clause (read as "x-sub-one or not x-sub-2"). 3- satisfiability is a special case of k-satisfiability (k-SAT) or simply satisfiability (SAT), when each clause contains exactly k = 3 literals. It was one of Karp's 21 NP-complete problems.

3-SAT :-Let S be the set of literals for 3-SAT problem. Let C be the subsets of finite set S of size 3 and containing literal of clauses, find a smallest set S? such that every subset in C contains atleast one element in S? that has to be setted true to make the expression satisfiable.

B. Reduction from Optimal Sanitization Let A be the set of large itemsets that are ?good? in the  sense that we do not wish to make them small. Let B  be the set of large itemsets that are ?bad?, i.e., we want to make them small. These two goals can be incompatible, so the problems we formulate below are based on the notion that we want to make all of B?s itemsets small, while making as few as possible of A?s itemsets small. We prove the NP-hardness of these optimization problem based on this notion So Reduction problem can be formulated as  ? Given two sets A and B of subsets of a finite set J, such that no element of B is a subset of any element of A and no element of A is a subset of any element of B, find a set of elements R in J such that every subset in B contains at least one of those elements while minimizing the number of subsets of A that contain elements from R?.

Let J be the set of all itemsets and A and B be the set of itemsets that are non-sensitive and sensitive respectively. So, we need to hide the itemsets belong to set B and minimize it in A.

Example 1:- J = {1,2,3,4,5,6,7,8,9,10} A = { {1,2} , {2,5 } , {6,7 } } B = { {1,9} , {2,8} , {6,8 } }  So, R = { 8,9 }  Reduction  Given an instance of Optimal Sanitization, here is how to  create an instance of 3-SAT problem such that polynomial time solution to latter implies a polynomial time solution to the former.

Let J = {1,2,3,4,?.n} A = { {1,n-1,n } , { 2,n-1,n } ??{n-2,n-1,n }} B cannot have { n-1 ,n } for Optimal Sanitization problem  Then for 3-SAT problem  S = J ? { n-1,n } C = B , The S? that solves the instance of 3-SAT problem is equal  to the R that solves the instance of Optimal Sanitization.

Algorithm 3.1 Algorithm for reducing optimal sanitization to 3-SAT  problem Input: - Set  J , A , B Output: Set S?   1. Let S be set of 3-SAT problem then S = J ? { elements of S which are subset of all sets of A }  2. C = B 3. Take S? = NULL 4. While(Every subset of C has atleast one of its  element in S? )  5. { 6. Pick an element x from S ; 7. Take Count1  = Count of presence of x in sets of  C ; 8. Take count2 = count of presence of x in set A ; 9. If count1 > count2 then 10. S? = S? union x 11. } 12. Return S?   Proof by example:- Let J = { 1,2,3, ??10 } A = { {1,9,10} , {2,9,10} , {3,9,10} ??{8,9,10}} B can be { {1,2,5} , {3,6,8} , {4,5,7} } S = J ? {9,10} S = { 1,2,3,4,5,6,7,8} Then B = C So, S? = R = { 5,6} Hence 3-SAT problem can be reduced from optimal  sanitization.



IV. CONCLUDING REMARKS The work reported in this paper can be extended in several  directions and much work remains to be done. We plan to investigate different selection criteria and evaluate their impact on the non-sensitive set of rules, as well as to apply various optimizations with respect to both the time and space complexity.

