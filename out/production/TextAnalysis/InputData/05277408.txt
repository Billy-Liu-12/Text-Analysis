A Fuzzy Approach for Mining High Utility Quantitative Itemsets

Abstract?Studies on frequent pattern mining have often con- sidered the existence of an item in a transaction but ignored its profit and purchase quantity. As a result, utility mining has been introduced to resolve this issue. However, the resulting patterns simply show the correlation among high utility items without quantity information of such items. In this study, a novel method is proposed to discover high utility fuzzy itemsets from quantitative databases which considers both profits and quanti- ties of items. The quantities are fuzzified into linguistic regions, thus the quantitative concept is consistent with human cognition and easy to interpret. In addition, we provide theoretical and empirical analysis of the proposed method. The simulation results demonstrated that our method can efficiently and effectively mine high utility fuzzy itemsets from quantitative databases.



I. INTRODUCTION  In the past two decades, a significant level of effort has been devoted to the research of knowledge discovery in databases. The major aim of knowledge discovery is to help human finding and interpreting the ?hidden information? in massive raw data [10]. One of the most important tasks of data mining is association rule mining (ARM), more precisely, frequent pattern mining (FPM). Traditional ARM, based on the support and confident framework, attempts to extract high co-occurrence frequency patterns from data, such as customers who bought bread might also bought milk in market basket analysis [2]. The work on mining frequent patterns has received much attention recently [7]. The purchase frequency is the only consideration, nevertheless, FPM is more likely to exclude high profitable products. Since these high profitable products are usually bought with less frequency than low profitable ones, it is difficult to establish association rules among high profitable items. Although several studies were carried on the weighted ARM problem [3, 11], they merely tackled binary data, i.e., the existence of an item in one transaction. For this reason, utility mining problem has been introduced to resolve this limitation recently [4, 13]. It considers not only the importance of an item but also the purchase quantities. However, there is no quantity information in the resulting patterns, that is, only correlations among sets of items are presented. A frequent pattern growth-like method had been proposed to deal with this restriction [14], but the method also raised other computational issues. Similar  Chia-Ming Wang is with the Graduate School of Engineering Science and Technology, National Yunlin University of Science and Technology, Yunlin 640, Taiwan (telephone: 886-5342601-4390, email: cmwang@ieee.org).

Shyh-Huei Chen is with the Department of Industrial Management, National University of Science and Technology, Yunlin 640, Taiwan (telephone: 886- 5342601-5230, email: chensh@yuntech.edu.tw).

Yin-Fu Huang is with the Graduate School of Computer Science and Infor- mation Engineering, and the Department of Computer and Communication Engineering, National University of Science and Technology, Yunlin 640, Taiwan (telephone: 886-5342601-4314, email: huangyf@yuntech.edu.tw).

to most discretization techniques, users have to set a non- trivial (global) quantitative related coefficient for combing adjacent quantitative (integer number) items. A smaller value of coefficient may lead to full domain items, while a larger one significantly induces a huge amount of redundant unity items.

Besides, the method produces enormous conditional databases, it is not efficient and consumes large amounts of memory. As a result, this method may fail to extract the complete set of patterns.

In this study, a fuzzy approach is adopted to discover high utility fuzzy itemset from quantitative databases. We refer this mining problem as the high utility fuzzy itemsets (HUFI) mining problem.

In detail, the primary contributions of this study are as follows:  1) By now, to the best of our knowledge, this work is the first attempt to discover high utility fuzzy itemsets from quantitative databases. Contrary to traditional util- ity mining algorithms, not only high utility items but also information of purchase quantity are extracted from databases. Moreover, the proposed method is able to handle both integer and real quantities, it is infeasible for the existing utility mining methods [5, 6, 8, 9, 12, 13, 14].

2) This paper proposes certain constraints and accompany algorithms for efficiently pruning the search space in high utility fuzzy itemset mining problem. In addition, we prove theoretically and experimentally that these in- telligent heuristics can effectively be applied to discover HUFI.

3) Because the quantitative attribute domains are fuzzified into linguistic regions, the quantitative concept is nature to human and easy to interpret. Furthermore, due to the benefits of applying fuzzy set theory, less redundant quantitative itemsets will be discovered from databases [14]. It not only simplifies the mining problem but also provides an accessible amount of itemsets.

The remainder of this paper is organized as follows. In the next section, we describe the fuzzification of transaction data and formulate the HUFI mining problem formally. Section III establishes theoretical foundations of HUFI mining problem.

After which the details of the proposed algorithms are pre- sented. Empirical results and the performance of the proposed method are shown in Section V. Finally, concluding remarks are given in Section VI.



II. HIGH UTILITY FUZZY ITEMSET MINING  The mining problem considered in this paper is to extract high profitable fuzzy itemsets over numeric and nominal    attributes in a large transaction database. To provide a for- mal statement of the HUFI mining problem, fuzzification of transaction data has to be introduced first.

A. Fuzzification of transaction data  Classical set theory only considers an element is either a member of a set or not; hence it is not adequate to map quantitative values to partitioned intervals forthrightly. How- ever, in fuzzy set theory, an element can partially belong to a set with certain degree. This soft transition property of fuzzy membership functions alleviates the sharp boundary issue.

Moreover, each fuzzy membership function can be associated with a linguistic region such as slow, not slow, medium, fast and very fast [15]. It not only conforms to human cognition but also benefits to interpret.

In this study, quantitative attributes are simply classified into numeric and nominal. An attribute is said to be numeric if it is indicated by either a real or an integer value. For example, the attribute distance has values 15.7, 203.2 and 58.0; the attribute age can be 23, 48, and 62 etc. If the number of distinct values that belongs to an attribute is quite small, discrete/crisp fuzzy sets are involved; otherwise, continuous ones are defined. For a nominal attribute like sex, there is no order relation between male and female, hence it is natural to deal it with discrete fuzzy set. Although the distinction is not obvious, we can roughly differentiate them according to their inherent order property. Moreover, in order to prevent overestimate the contributions of a quantity, for each attribute, we normalize the fuzzy membership degrees associated with different linguistic regions.

B. Formal description of high utility fuzzy itemset mining  The goal of this research is to discover all the high utility fuzzy itemsets from a quantitative database. In brief, an itemset is a HUFI if its utility value in a transaction database is larger than a user specified threshold. In the remainder of this section, the notations and definitions of HUFI mining problem are formally described as well as the terms used to present the algorithm.

Throughout this section, let I = {c1, c2, . . . , cm} be a set of m items and D = {T1, T2, . . . , Tn} be a set of database transactions, where Ti = (v  (i) 1 , . . . , v  (i) p , . . . v  (i) m ) and  v (i) p , p = 1, . . . ,m, is the purchase quantity of item cp ? I  in transaction Ti. Notice that the purchase quantity can be represented by either integer or real number. Figure 1 presents an example database and its associated utility table. It should be also noticed that the quantity information are carried by fuzzy linguistic regions. The qth fuzzy region of an item cp ? I, denoted as fuzzy item cp(q), is characterized by the fuzzy membership function ?cp(q) , where 1 ? q ? qp and qp is the maximum number (user-defined) of fuzzy region of the item cp.

Definition 1: (External Utility) The external utility of an item cp, denoted as EU(cp), is a numeric value that reflects the unit profit or unit cost associated with an item [13].

TID A B C D  T1 1 1 2.10 T2 5 1 T3 2 3.70 2 T4 3 2 3 T5 2 0.60 3 T6 2 3.80 2 T7 3 1.95 2 T8 3 2 2 T9 4 2 T10 6 1 0.40  Item A B C D  EU ($/unit) 3 6 7 5  Figure 1. An example database and its corresponding external utility table  For example, it can be seen that each item B can make $6 profits for a retail store, and the transaction T2 earns $21 (i.e.

5? 3 + 1? 6) profits in total (see Fig. 1).

Definition 2: (Fuzzy k-itemset) A fuzzy k-itemset, X ={ cp1(q1), cp2(q2), . . . , cpk(qk)  } , is a set that contains k distinct  items along with their corresponding fuzzy regions.

For example, {B.1, C.M, D.2} is a valid fuzzy 3-itemset, but {A.L, A.M, B.1} is not.

Definition 3: (Joinable) Two fuzzy k-itemsets, X1 and X2, are joinable if |X1 ? X2| = k ? 1 and |X1 ? X2| is a valid fuzzy (k + 1)-itemset.

Definition 4: (Fuzzy Quantity) The (normalized) fuzzy quantity of a fuzzy item cp(q), associated with v  (i) p in transac-  tion Ti is defined as follow:  f (i) p(q) =  ?cp(q)(v (i) p )?  j ?cp(j)(v (i) p )  For example, consider the transaction database in Fig. 1 with the associated membership functions found in Fig. 2. The purchase quantity of item A in transaction T2 is v  (2) A = 5,  which is transformed by ?A(M) and ?A(H) to 0.4 and 0.6, respectively. Since the domains are partitioned uniformly (Fig.

2), thereby the denominator of the equation always equals 1.

Definition 5: (Weighted External Utility) The weighted external utility of a fuzzy item cp(q), is defined as WEU(cp(q)) = [arg maxv(i)p ,?i ?cp(q)(v  (i) p )] ? EU(cp). For a  valid fuzzy k-itemset X , the weighted external utility is given as WEU(X) =  ? cp(q)?X WEU(cp(q)).

For example, using the external utility table in Fig. 1 and the associated membership functions in Fig. 2, WEU(C.H) = 3.8 ? EU(C.H) = 3.8 ? 7 = 26.6 and WEU(A.M,B.2) = 3.5? EU(A.M) + 2? EU(B.2) = 3.5? 3 + 2? 6 = 22.5.

Definition 6: (TIDSET) A set of transaction identifiers of a fuzzy item cp(q), denoted as TID(cp(q)), contains all transaction indices with f (i)p(q) > 0,?i. Similarly, each fuzzy itemset X has an associated set of transaction identifiers TID(X) =  ? cp(q)?X TID(cp(q)).

For the example in Fig. 1 and Fig. 2, TID(A.M,B.2) = {4, 8, 9} and TID(C.M) = {1, 3, 5, 7}.

Definition 7: (Utility of Fuzzy Itemset) The utility value of a fuzzy itemset X in database D, denoted as UFI(X),     1 3.5 6  L M H  0M em b er sh ip  Domain of item A  1 2  0M em b er sh ip  Domain of item B   0.4 2.1 3.8  L M H  0M em b er sh ip  Domain of item C   2 3 0M  em b er sh ip  Domain of item D  1 2  2 3  Figure 2. Associated membership functions of the running example  is the sum of product of f (i)p(q) and WEU(cp(q)), where cp(q) ? X and i ? TID(X); formally, UFI(X) =?  i?TID(X) ?  cp(q)?X f (i) p(q) ?WEU(cp(q)).

Example 1: The utility values of fuzzy itemsets, {A.M} and {A.M,B.2}, of the example database in Fig. 1 can be obtained as follows:  ? UFI(A.M) = (f (2)A(M) + f (4) A(M) + f  (5) A(M) +  f (7) A(M) + f  (8) A(M) + f  (9) A(M)) ? WEU(A.M) =  (0.4 + 0.8 + 0.4 + 0.8 + 0.8 + 0.8)? (3.5? 3) = 42 ? UFI(A.M,B.2) = (f (4)A(M) + f  (8) A(M) + f  (9) A(M)) ?  WEU(A.M)+(f (4)B(2) +f (8) B(2) +f  (9) B(2))?WEU(B.2) =  (0.8+0.8+0.8)?(3.5?3)+(1+1+1)?(2?6) = 61.20 Definition 8: (Total Utility) The total utility value of a  database D, denoted as TU(D), is the sum of utility values of all the distinct fuzzy regions in D. That is, TU(D) =?  cp?I ?qp  q=1 UFI(cp(q)).

Example 2: The total utility value of the example database  in Fig. 1 is calculated as: TU(D) = UFI(A.L) + UFI(A.M) + UFI(A.H) + UFI(B.1) + UFI(B.2) + UFI(C.L) + UFI(C.M) + UFI(C.H) + UFI(D.2) + UFI(D.3) = 6.6 + 42 + 32.4 + 18 + 60 + 5.52 + 30.7 + 51.63 + 40 + 30 = 316.85.

Definition 9: (Transaction-Max Utility) The transaction- max utility of a transaction Ti ? D, denoted as TMU(Ti), is the sum of the maximum utility value among fuzzy regions of all the items in transaction Ti, i.e.,  TMU (Ti) = ?  v (i) p ?Ti  max 1?q?qp  ( ?p(q)  ( v(i)p  ) ?WEU  ( cp(q)  )) For example, consider the example database in Fig. 1 and  the associated membership functions in Fig. 2, the transaction- max utility of transaction T2 is calculated as follows:  ? TMU(T2) = max{f (2)A(M) ? WEU(A.M), f (2) A(H) ?  WEU(A.H)} + f (2)B(1) ? WEU(B.1) = max{0.4 ? 10.5, 0.6? 18}+ 1? 6 = 10.8 + 6 = 16.8  Definition 10: (Transaction-max utility of Fuzzy Itemset) The transaction-max utility of a fuzzy k-itemset X , denoted as TFI(X), is the sum of the transaction-max utilities of all  the transactions containing the fuzzy k-itemset X . That is, TFI(X) =  ? i?TID(X) TMU(Ti).

Example 3: The transaction-max utility of a fuzzy k- itemset {A.M,C.M} of the example database in Fig. 1 is TFI(A.M,C.M) = (TMU(T5) + TMU(T7)) = 21.67 + 31.81 = 53.48.

Definition 11: (HMFI) A collection, Hk?, of high transaction-max utility fuzzy itemsets of length k with respect to a user specified minimum utility value ?, is defined to be the set contains all fuzzy k-itemsets X with TFI(X) > ?.

For example, consider TU(D) in example 2 and the minimum utility ratio ? = 15%, it is shown that the fuzzy k-itemset {A.M,C.M} in example 3 is a HMFI. That is, 53.48 = TFI(A.M,C.M) > ? = 0.15? 316.85 = 47.53.

Definition 12: (HUFI) A collection, Fk? , of high utility fuzzy itemsets with respect to a user specified minimum utility value ?, is defined to be the set contains all fuzzy k-itemsets X with UFI(X) > ?.

For example, consider the fuzzy itemsets, {A.M} and {A.M,B.2}, in example 1 and TU(D) in example 2. Suppose the minimum utility ratio ? = 15%, it is clear that {A.M,B.2} is a HUFI but {A.M} is not; i.e., 61.20 = UFI(A.M,B.2) > ? = 47.53 and 42 = UFI(A.M) < ? = 47.53.



III. THEORETICAL FOUNDATIONS  This section presents theoretical foundation of the high utility fuzzy itemset mining problem to pave the way for effective algorithm implementation, especially for pruning the search space. Throughout this section, for convenience, let X1 = {cp1(q1), . . . , cpk?1(qk?1), cpk(qk)} and X2 = {cp1(q1), . . . , cpk?1(qk?1), cpk+1(qk+1)} be two joinable fuzzy k-itemsets with cpk 6= cpk+1 , and the corresponding identifiers are TID(X1) and TID(X2), respectively. We also denote the join operator as ./ and set the user specified minimum utility value as ?. An immediate result from the definition of fuzzy itemsets can be stated as follows.

Lemma 1: Let X ? be a fuzzy (k?1)-itemset such that X ? ? X1. If X1 ? Hk? , then X ? ? Hk?1? .

Proof: Without loss of generality, we assume X1 \X ? = cpk(qk). That is to say, X  ? = {cp1(q1), . . . , cpk?1(qk?1)}.

From the hypothesis, we have TFI(X1) > ?. It follows that TFI(X1) =  ? i?TID(X1) TMU(Ti) =?  i?(TID(X?)?TID(cpk(qk))) TMU(Ti). Since (TID(X ?) ?  TID(cpk(qk))) ? TID(X ?), it is clear that ? < TFI(X1) ? TFI(X ?). Consequently, X ? ? Hk?1? .

Lemma 1 indicates the so called anti-monotone property of HMFI. Put another way, each subset of a HMFI must be high transaction-max utility; otherwise the itemset is not a HMFI.

Note that there is no such property for the problem of mining high utility fuzzy itemsets as shown in example 1. This lemma is inspired by [9], as well as the following lemma.

Lemma 2: If X1 ? Fk? , then X1 ? Hk? .

Proof: Assume that X1 ? Fk? , we have UFI(X1) =?  i?TID(X1) ?  cp(q)?X1 f (i) p(q) ?WEU(cp(q)) > ? and  TFI(X1) = ?  i?TID(X1) ?  v (i) p ?Ti  max 1?q?qp  (?p(q)(v (i) p ) ?    WEU(cp(q))). From the definition of fuzzy quantity, we know that  ? cp(q)?X1 f  (i) p(q) ?WEU(cp(q)) ??  v (i) p ?Ti  max 1?q?qp  (?p(q)(v (i) p )?WEU(cp(q))). This implies  that ? < UFI(X1) ? TFI(X1), and hence X1 ? Hk?.

Theorem 1: (?-constraint) If UFI(X1) +UFI(X2) ? ?,  then (X1 ./ X2) 6? Fk+1? .

Proof: From the hypothesis and Definition 7,  it follows that ? ? UFI (X1) + UFI (X2) ?? i?{TID(X1)?TID(X2)}  ? cp(q)?X1 f  (i) p(q) ? WEU(cp(q)) +?  i?{TID(X1)?TID(X2)} ?  cp(q)?X2 f (i) p(q) ? WEU(cp(q))  ? ?  i?{TID(X1)?TID(X2)} ?  cp(q)?X1 f (i) p(q) ?WEU(cp(q)) +?  i?{TID(X1)?TID(X2)} f (i) pk+1(qk+1)  ? WEU(cpk+1(qk+1)) =  ? i?{TID(X1)?TID(X2)}  ? cp(q)?(X1./X2) f  (i) p(q) ?  WEU(cp(q)) = UFI (X1 ./ X2), that is (X1 ./ X2) 6? Fk+1? .

Theorem 2: (?-constraint) If |(TID(X1) ? TID(X2)| ? WEU(X1 ./ X2) ? ?, then (X1 ./ X2) 6? Fk+1? .

Proof: From the definition of utility of fuzzy itemset, we have UFI(X1 ./ X2) =?  i?{TID(X1)?TID(X2)} ?  cp(q)?(X1./X2) f (i) p(q) ?  WEU(cp(q)). Note that f (i) p(q) = ?p(q)(v  (i) p ) ?  1, it follows that UFI(X1 ./ X2) ?? i?{TID(X1)?TID(X2)}  ? cp(q)?(X1./X2)WEU(cp(q)) =?  i?{TID(X1)?TID(X2)}WEU(X ./ X2) = |(TID(X1) ? TID(X2)| ? WEU(X1 ./ X2). Hence, |(TID(X1) ? TID(X2)| ? WEU(X1 ./ X2) ? ? implies that UFI(X1 ./ X2) ? ?, i.e., (X1 ./ X2) 6? Fk+1? .



IV. HUFI-MINER  In this section, we describe how to discover all HUFIs efficiently. The essential idea behind the proposed algorithm, called HUFI-Miner, is to incorporate the constraints presented in Section III into high utility fuzzy itemset mining, thus alle- viating the cost of scanning a transaction database. Moreover, HUFI-Miner utilizes the downward closure property of HMFI and small lookup tables when the database is too large to fit into the physical memory. No matter how large the database size is, HUFI-Miner only needs to scan the original database at most twice.

The pseudo-code of HUFI-Miner and the corresponding procedure are shown as below. Foremost, HUFI-Miner gen- erates all lookup tables to be stored in the memory for the following processes, after which all the HUFIs and HMFIs with length 1 are discovered (Lines 1 to 4). Subsequently, all the lookup tables and 1-HMFIs are fed into the procedure find_HMFI to produce the collection of HUFI candidates Fc.

Finally, procedure find_HUFI is employed to validate the HUFI candidates and then return the collection of HUFIs F?.

Due to the page limitation, procedure preprocess, procedure f_partition and procedure find_HUFI are not shown in the paper.

Algorithm 1 HUFI-Miner Input: A transaction database D; minimum utility ratio ?; an external utility table Teu Output: A collection of high utility fuzzy itemsets F?  1: (Ta, ?)? preprocess(D, ?, Teu) // 1st scan D 2: for each fuzzy item c ? Tufi do 3: if Ttmu (c) > ? then add c to H1? // by Def. 11 4: if Tufi(c) > ? then add c to F1? // by Def. 12 5: k ? 2 6: while Hk?1? 6= ? do 7: (Hk?,Fc, k)? find_HMFI(Hk?1? , k, Ta, ?) 8: F? ? find_HUFI(Fc, Ta, ?,D) // 2nd scan D 9: return F? ? F1  Procedure 2 find_HMFI(Hk?1? , k, Ta, ?) // assume the (k? 1)-itemsets in Hk?1? in the order of literals Require: k ? 2  1: for each fuzzy itemset X1 ? Hk?1? do // ci(j) ? X1 2: for each fuzzy itemset X2 ? Hk?1? do // cp(q) ? X2 3: if (ci1(j1) = cp1(q1)?. . .?cik?2(jk?2) = cpk?2(qk?2)? cik?1 6= cpk?1) then // check joinable; by Def. 3  4: if Ttmu(X1 ./ X2) > ? then // by Defs. 10, 11 5: add fuzzy k-itemset (X1 ./ X2) to Hk? 6: if k = 2 then 7: if Tufi(ci(j)) + Tufi(cp(q)) > ? then  // two fuzzy 1-itemsets; ?? prune; by Theorem 1 8: if |Tbit(X1 ./ X2)|?Tweu(X1 ./ X2) > ?  then // ? ? prune; by Theorem 2 9: add fuzzy k-itemset (X1 ./ X2) to Fc  10: else // k ? 3 11: if |Tbit(X1 ./ X2)| ? Tweu(X1 ./ X2) > ?  then // ? ? prune; by Theorem 2 12: add fuzzy k-itemset (X1 ./ X2) to Fc 13: k ? k + 1 14: return (Hk?,Fc, k) // Fc is the collection of F? candidates

V. EMPIRICAL RESULTS  In this section, we first reveal the results obtained from the example database as shown in Fig. 1 to illustrate our method, followed by empirical studies on a synthetic dataset to assess the effectiveness of HUFI-Miner.

A. Analysis of the running up example  Figure 3 presents the complete list of HUFI candidates obtained from the example database as the minimum utility ratio ? = 15%. In addition, TFI, ?, ? and UFI of these candidates are also presented in the same order as they are evaluated by HUFI-Miner (from left to right). Since the total utility value of the example database is 316.85 (see Example 2), the minimum utility threshold ? is calculated as 47.53 (? = ? ? TU(D)). As shown in Fig. 3(a), all the 1-itemsets are HMFIs (marked with club), fuzzy itemsets {B.2} and {C.H} are HUFIs (marked with spade). Then as shown in    2-itemset UFI  A.L,B.1  A.L,B.2  A.L,C.L  A.L,C.M  A.L,C.H  A.L,D.2  A.L,D.3  A.M,B.1  A.M,B.2  A.M,C.L  A.M,C.M  A.M,C.H  A.M,D.2  A.M,D.3  A.H,B.1  A.H,B.2  A.H,C.L  A.H,C.M  A.H,C.H  A.H,D.2  A.H,D.3  B.1,C.L  B.1,C.M  B.1,C.H  B.1,D.2  B.1,D.3  B.2,C.L  B.2,C.M  B.2,C.H  B.2,D.2  B.2,D.3  C.L,D.2  C.L,D.3  C.M,D.2  C.M,D.3  C.H,D.2  C.H,D.3  Candidate  23.70 9.00  ?  65.80 ?  66.60 30.00 25.20 ?  53.48 12.12 5.12 ?  77.18 37.30 35.24  0.00 0.00  ?  62.21 46.60 21.20 ?  57.07 36.60 32.40  16.80 10.20  ?  86.20 ?102.00 ? 67.50 ? 61.20 ?  53.48 47.52 15.32 ?  53.48 ?  72.70 ? 50.40 27.74  0.00 0.00  ?  62.21 ?  82.00 41.00 36.80 ?  57.07 ?  72.00 ? 51.00 42.60  43.60 40.80  20.40 15.60  26.80 20.80  0.00 0.00  0.00 0.00  0.00 0.00  0.00 0.00  26.80 8.80  23.70 20.70  0.00 0.00  0.00 0.00  0.00 0.00  0.00 0.00  47.03 12.86  ?  95.63 ?111.63 ? 77.20 ? 75.63 ?126.03 ?100.00 ? 66.00 ? 66.00  35.40 27.00  31.81 10.25  21.67 17.47  ?  78.84 ?  70.70 ? 49.40 34.27 21.67 16.73  ?  95.63 ?  91.63 ? 73.20 ? 71.63 0.00 0.00  14 9 7  3-itemset UFI  A.L,B.2,C.L  A.L,B.2,C.M  A.L,B.2,D.2  A.L,B.2,D.3  A.L,C.L,D.2  A.L,C.L,D.3  A.L,C.M,D.2  A.L,C.M,D.3  A.M,B.2,C.L  A.M,B.2,C.M  A.M,B.2,D.2  A.M,B.2,D.3  A.M,C.L,D.2  A.M,C.L,D.3  A.M,C.M,D.2  A.M,C.M,D.3  B.2,C.H,D.2  Candidate  0.00 0.00  0.00 0.00  30.40 22.60  35.40 27.60  31.81 10.85  21.67 19.27  31.81 24.01  21.67 18.53  0.00 0.00  0.00 0.00  30.40 30.40  35.40 35.40  31.81 18.65  21.67 21.67  31.81 31.81  21.67 20.93  ? 95.63 ? 97.2 ? 95.63 1 1  TFI  TFI  (c)  3-itemsets  (a)  1-itemsets  (b)  2-itemsets  1-itemset TFI UFI  A.L  A.M  A.H  B.1  B.2  C.L  C.M  C.H  D.2  D.3  ? 142.98 6.60 ? 156.48 42.00 ?   64.00 32.40 ?   67.30 18.00 ? 181.83 ? 60.00 ?   80.28 5.52 ? 124.21 30.70 ?   95.63 ? 51.63 ? 157.84 40.00 ?   57.07 30.00  Figure 3. HUFI candidates generated from the example database as the minimum utility ratio ? = 15% (all the numbers are rounded-off).

Fig. 3(b), only half of the candidates need to be validated after pushing ?- and ?-constraints (marked with diamond and heart respectively). In summary, almost half of the cost in the second scan (more precisely, procedure find_HUFI) could be reduced.

B. Simulation results of the synthetic dataset  We adopt the IBM synthetic data generator [1] to produce the artificial dataset T6I4D10K. In addition, we randomly generate the purchase quantity of each item in each transaction and the external utility values using Poisson distributions with normal noises.

As shown in Fig. 4, it is clear that HUFI-Miner can signif- icantly prune HUFI candidates, thereby reducing considerable running-time cost.



VI. CONCLUSIONS  In this study, we introduce the problem of mining high util- ity fuzzy itemsets which contain information about utility and purchase quantity of items from quantitative databases. Two kinds of constraints and a novel algorithm HUFI-Miner only scanning the original database at most twice for the problem are also proposed. In addition, theoretical proofs and empirical results on the synthetic datasets indicate the effectiveness and efficiency of the proposed method. In summary, this study not only simplifies the mining problem, but also produces more profitable patterns.

