Computational Intelligence for Measurement Systems and Applications

Abstract ? With this rapid increase in generating and collecting  images, image mining and knowledge discovery attract so much  attention. In this paper, we present a framework for extracting  knowledge from sequence of images in the form of natural  languages. In another view point, this process summarizes the  enormous visual information of sequence of images into some  simple and small sentences with the aim of automatic traffic  regulations checking. Sequences of images have been manually  extracted from a video of moving vehicles in cities. The structure  of the system composed of Image Analysis and Knowledge  Processing modules. Image Analysis module works on raw images  and tries to extract a set of records consisting of spatial-temporal  characteristics of moving objects in the scene. These records are  passed to knowledge processing phase for further processing,  information transformation and summarization. Knowledge  processing phase consists of two modules: Trajectory Detection  and Fuzzy Rule base. A new similarity measure based on Longest  Common Subsequence (LCS) is proposed and used in trajectory  detection module. This module tries to form traffic behavioral  classes.  In fuzzy Rule Base module, traffic regulations have been  modeled using fuzzy rules and fuzzy inference used for checking  normality/abnormality of the actions in the scene. The output of  the system in the form of Natural Languages clearly shows what  happened in the scene.

Keywords ? Image mining, Knowledge Discovery, Similarity  Measure for Trajectories, Fuzzy Rule Base, Knowledge Base.



I. INTRODUCTION  With this enormous speed in generating and collecting  data, there is an extreme need in extracting interesting and  useful information. The basic problem addressed by the  knowledge discovery process is mapping low-level data into  other forms that might be more compact, more abstract, or  more useful,  [1] . Knowledge discovery process as it is  described in  [1] [2] composed of Selection, Preprocessing,  Transformation, Data Mining, Interpretation/Evaluation  paces. Although Data mining and Knowledge discovery are  used interchangeably in many aspects, Data mining refers to  a particular step in this process. Data mining is the  application of specific algorithms for extracting patterns from  data. Image as a form of data can be discovered for new and  unknown patterns, and Image mining refers to process of  extracting new patterns from set of images.

From previous works have been done on image mining,  we will mention some recent ones. In  [3] information is  extracted from raw video using background estimation and  subtraction followed by spatial clustering and multi object  tracking. The resulting information which is called track set,  records the history of an object?s state estimates (positions  and velocities) and appearance over the frames in which the  track was active. This track set is mined to answer user  generated queries. In another experience,  [4], a software  model for context-aware perception of human activity has  been proposed. The basic building blocks of the system are  perceptual modules, composed of a data transformation  component and control component. Perceptual Association  Rules for image mining datasets have been used in  [5], these  rules are novel extension of traditional association rules and  used to distill the frequent perceptual events in large image  datasets in order to discover interesting patterns. The process  contains three steps; first, the image dataset is labeled in a  perceptually meaningful way using a visual thesaurus.

Second, the first and second order associations are tabulated  in a scaleable data structure termed a spatial event cubes.

Finally, the higher order associations and rules are  determined using an adaptation of the Apriori algorithms.  [6],  addresses the special applications of data mining techniques  in homeland defense. Massive surveillance video database is  mined automatically and the shots containing independently  moving targets are retrieved. The automatic independent  motion detection technique for compressed surveillance  video based on Linear System Consistency has been  presented. In  [7], the system is planned to answer queries like  : identifying all cars that park in a given (non-parking area)  more than 10 minutes, identifying all cars that stop and let  out a passenger, who then enters the building, and identifying  all persons that get out of a car and then get into another car  within 5 minutes. In this paper, the authors provide a  compiler to map high level queries in to a set of novel Petri  net filters that utilize computer vision algorithms to answer  components of the queries.

In the above mentioned systems, most of the systems are  based on image mining techniques with surveillance aims.

We have defined a system for automatic traffic surveillance,  which tries to examine traffic regulations for sequence of  images. This process transforms and summarizes the visual  information to natural languages. Based on this aim, a  structure has been proposed and will be discussed in this  paper. In section II, the aim of the system is explained. More     information about different parts of the system is explained in  Sections III to VI. Section VII is dedicated to conclusion.



II. OUR SYSTEM  The aim of our system is the automatic checking  normality/abnormality of traffic behaviors of drivers and  classification of their action to form a descriptive report. For  example, if the driver is overtaking from the left side, the  system will classify the action to over taking from the left  and then because it is taken from the left side, this action will  be classified into ?traffic regulations ignored?.

The system is organized in two phases, image analysis and  knowledge processing, as shown in Figure 1. In the following  subsection, each phase will be discussed.

Fig. 1- The overall view of system?s architecture

III. IMAGE ANALYSIS PHASE  In Image Analysis phase, the movie of a specific area is  taken by a fixed camera and after shot selection phase which  provides a sequence of images, the moving objects of the  scenario are tracked and classified into humans and vehicles.

The output of the image processing phase is a set of records  of moving objects which consists of their spatial-temporal  characteristics and their identification. Each record has the  form below:  R=(Id,((x1,y1,t1),?,(xn,yn,tn))                                               (1)    Where Id is the unique identification for each moving object in the scene, (xi, yi, ti) shows consecutive positions of the  moving objects during the time.



IV. KNOWLEDGE PROCESSING PHASE  As mentioned before, the final aim of knowledge  processing phase is checking the traffic regulations for  vehicles and preparing a descriptive report for the input  scenario. For this purpose, this phase is subdivided in two  major modules, Trajectory detection and Fuzzy Scene  Descriptor. The diagram of the knowledge processing phase  has been shown in Figure 2. In trajectory detection module  the input trajectory of a moving object, classifies into specific  classes. Two kinds of output have been considered for this  module: the determined class name of the input and  descriptive sentences. The former is passed directly to the  fuzzy scene descriptor and the latter is assumed as one of the  outputs of the system. In the fuzzy scene descriptor phase the  traffic regulations is modeled by fuzzy rules and stored in a  knowledge based. The purpose of this phase is checking the  traffic regulation.

Fig. 2. Overall Structure of Knowledge Processing Phase

V. TRAJECTORY DETECTION MODULE  We have defined a new similarity measure for clustering  trajectories of moving objects. In many methods, a trajectory  of a moving object is modeled by sequence of its locations in  the Euclidean space. Different applications such as, traffic  surveillance systems, remote sensing, animal mobility  experiments, mobile phone usage, multiple attribute response  curves in drug therapy, use this kind of data.

Among previous works done on similarity measures for  trajectories, some of them will be mentioned here. In  [8], an  algorithm designed to find portions of the ?text?, T which are similar to the ?pattern?, P, x-y positions have transformed to  angle-arc length space. Then partial matching problem is  solved by a line sweep algorithm in a scale-shift plane and  guarantees scale, translation and rotation invariance with  O(m2n2) for sequences of length m and n. Another approach  presented a method based on Hidden Markov Model for  approximation and classification of vehicle trajectories.

Estimates of the speed and steering angle are obtained for  each segment and the motion during the segment is assigned  to one of the four classes: ahead, left, right, stop. A Hidden  Markov Model for the motion of the car is constructed and  the Viterbi algorithm is used to find the sequence of internal  states for which the observed behavior of the vehicle has the  highest probability  [9] . In  [10] [11] non-metric similarity  Descriptive  Report  Descriptive  Report  Spatial-Temporal  CHARACTERIST  ICS  Trajectories  Trajectory  detection  Fuzzy Scene  Descriptor  Knowledge Base  Descriptive  Report  Image  Sequence  Set of Records  Image  Database  Image  Analysis  Knowledge  Processing  Knowledge  Base     functions based on the Longest Common Subsequence (LCS)  has been used. Another approach proposed in  [12], which  defines a data model of trajectories as directed lines in a  space and the similarity between trajectories is defined as a  Euclidean distance between directed discrete lines. A rotation  invariant distance measure for trajectories is proposed in  [13]. Each trajectory is mapped to rotation invariant space,  and then the distance between to trajectories is computed  using Dynamic Time Rapping (DTW).

We have proposed the new rotation invariant method based  on LCS similarity. We tried to define a measure which is  robust to Euclidean transforms.

A. Longest common subsequence  Some measures, like Euclidean distance, consider  element to element correspondence which is not applicable to  all data types like the one defined for trajectories. We need a  measure which allows partial matching. Among different  measures, Longest Common Subsequence has such  capability. This technique allows some elements remain  unmatched, but the order of matched elements should be  preserved. More formally, LCS of two sequences A and B  defined as:  Given two sequences A=[a1,a2,?,an] and B=[b1,b2,?,bm], Find subsequences [ai1,?,aik] and [bj1,?,bjk]  where il < il+1 and jl < jl+1, such that ai1 = bj1 and ai2 = bj2 and  aik = bjk  with k as large as possible. LCS of A=[a1,a2,?,an] and B=[b1,b2,?,bm] obtained by:  otherwise  BHeadALCSBAHeadLCS  mnandbaif  BHeadAHeadLCS  emptyisBorAif  BALCS mn  ,  ))))(,(),),((max(  ,))(),((1  ,0  ),(  ,,  ,  ,  (2)  Where is an integer, 0< <1 and Head(A) =[a1,a2 ,?,an-1].

The constant controls how far in time we can go in order to  match a given point from one trajectory to a point in another  trajectory. The constant is the matching threshold  [10].

B. The proposed similarity measure for trajectories  It is difficult to design distance measures that are  rotation invariant based on positional information. To  overcome this problem, we consider a trajectory as an array  of consecutive lines, so we redefine trajectory T as follows:  Tl = [l1 , l2 ,?,ln-1]                                                                    (3)  Where the starting and ending points of li are [xi , yi] and [xi+1 , yi+1], respectively.

For each successive pair of lines, (li , li+1), we define the  angle between them as the angle through which li must be rotated counter clockwise to make it coincide with li+1.

Figure 3 shows the process.

Fig.  3. Angles between constructive lines of the trajectory  We paraphrase the modeling of trajectory as bellow:  Ta = [ 1 , 2 ,?, n-2]                                                            (4)  The similarity between trajectories will be computed  based on sequence of angles. Let Ta1 and Ta2 are two  trajectories, modeled based on sequence of angles, the  similarity between them for given  and  defined as:  ),max(  ),( ),,,(  21,  mn  TTLCS TTS  aa  aa (5)  Where n and m are lengths of Ta1 and Ta2, respectively.

C. Clustering  For clustering trajectories, we use agglomerative  hierarchical clustering  [14]. This method is a bottom-up  clustering method where clusters have sub-clusters, which in  turn they have sub-clusters. Agglomerative hierarchical  clustering starts with every single object (trajectory) in a  single cluster. Then, in each successive iteration, it  agglomerates the closest pair of clusters by satisfying some  similarity criteria, until all of the data is assigned in one  cluster. Clusters i and j which maximize Obj will be merged:  ClusteriT ClusterjT  aa  ji th  a th  a  TTS nn  Obj  1 2  ),,,(  (6)  Where ni , nj  are the numbers  of elements in cluster i and j,  respectively. S is similarity measure based on equation (5).

D. Classification  Classification is learning a function that maps  (classifies) a data item into one of several predefined classes  [15]. For new sample classification, we need to define a  cluster center and calculate the similarity of a new sample  with the cluster centers. We define the cluster center as a  median of the cluster. Median is defined as the cluster     element which has the most similarity with all of the other  elements in that cluster.  [10]  E. RESULTS  Before classifying new samples, we have to determine  classes; each class is obtained by clustering different types of  vehicles? trajectories. As it is shown in Figure 4, 11  behavioral classes have been considered, namely: overtaking  from the left, over taking from the right, zigzag, lane  changing from left to right, lane changing from right to left,  returning from right, returning from left, straight forward,  turning to right, turning to left and circling. Based on these  classes, we prepared a database containing 220 samples and  some of them have been generated based on the others by  applying different Euclidean transformations.

Some samples of the database have been shown in  Figure 5. Clustering procedure which is agglomerative  clustering algorithm based on equation (6) is applied on the  dataset. As described before, we consider only sequence of  angles, with =3 and =1. The stopping criterion of the  algorithm is when the number of clusters is equal to the  specific number of clusters or the average similarity between  two clusters is less than a threshold.

The centers of clusters which are medians of them are  shown in Figure 6. For each of these cluster centers, we have  considered a template sentence. After classification of a new  trajectory; this template is adapted in a way that some natural  language sentences describe moving object behavior.

Fig. 4. Different kinds of common trajectories of moving  vehicle in the cities. (a,b)Overtaking, (c )Zigzag, (d,e) Lane  Changing, (f,g) Returning, (h)Straight forward, (i,j) Turning,  (k) Circling .

Fig. 5. Some samples of our database  Fig. 6. Row 1: possible places in the cities in which different  kinds of trajectories occur. Row 2,3: The centers (medians)  of the clusters  Figure 7 shows the process of describing the trajectory of the  moving object. Because the measure is based on partial  matching, in our descriptor phase in addition to the cluster  with maximum similarity, other ranks more than a threshold  have been considered too.

Fig. 7.  The process of describing the trajectory of the  moving object  Some examples of input and the output of the system  have been shown in Figure 8. As it is shown, the trajectory in  the top-left side, matched strongly with the cluster with the  name ?overtaking from the left? and next ranks belong to  straight line, line changing and turning.  The second  trajectory (bottom-left), only belongs to the cluster of straight  forward driving. To test the system, a test set containing 55  samples has been considered. 81% of the samples have been  classified correctly.



VI. FUZZY RULE BASE PHASE  As mentioned before, in this phase, traffic regulations  have been modeled by fuzzy rules. It is previously discussed  that determined class name of the input record is passed to  this phase, directly. This name plays a role of an index and  Describing  Sentences  New trajectory Classification  based on LCS  Descriptor     narrows the search space for locating the proper rules for  fuzzy inference engine. For instance, when the class name is  overtaking, only the rules relating to overtaking have been  considered. The output of this phase is legality or illegality of  the occurred action in the scene.



VII. CONCLUSION  Our framework has presented a new way for extracting  information from images. After image analysis phase which  works on sequence of images, the spatial- temporal  characteristics of moving objects passed to knowledge  processing phase to be processed more. This system  transforms sequence of images into some natural languages  which describe the events of the scene. The view point for  describing the scene is traffic regulations and shape of  trajectories of moving objects.

Fig. 8. Output of the Trajectory Detection Phase in the form  of  Natural Languages.

