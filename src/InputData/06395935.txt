IEEE-201S0

Abstract-In this paper, we propose algorithm to mine  association rule using elliptic curve cryptography technique over  horizontally partitioned data. Here we consider unsecured  distributed e nvironment. Our proposed algorithm provides  security against involving parties and intruder and also provides authentication between involving parties. Finally we analyze the  privacy and security provided by our proposed algorithm.

Keywords- Association rule; Datamining; Privacy preseving;  Cryptography.



I. INTRODUCTION  An assocmtlon rule is a rule shows certain relationship among set of attribute in a database. Finding association rule may useful for finding interesting patterns in marketing, statistical analysis, decision making, medical diagnosis etc.

Mining association rules requires iterative scanning of database, which is quite costly in processing . These techniques can be demonstrated in centralize [1,2] as well as distributed environment [3,4] where data can be distributed among the different sites. Distributed database scenario can be classified in horizontally partitioned data and vertically partitioned data.

In horizontally partitioned data, each site contains same set of attributes with different number of transactions. In vertically partitioned data each site contains different number of attributes with same number of transaction. Figure 1 shows difference between centralize database, horizontally partitioned database and vertically partitioned database mining.

A. Motivation  In commercial applications organizations are very much concerned with privacy issue. Most commercial organization collects their information from individual party as their specific need. They fmd it essential to share information to each other. In such cases each unit want to be sure that privacy of individual party must not violated.

If government want to survey about some medical disease,  individual hospital don't want to reveal personal information of its patient, it is against law. Th is information is regarded as  private and we want to avoid exposing confidential information of patient.

Data  I I ?Gt----? Results  t-4 I I __ .J  ,-? 1 1 ,-4  G (8) Horizontul Partitioned Oall  (A) Centralized Oafll  IT" 1 I  III II 1 1  _1_1  iIT' ' ... : --? I 1 1- _I " 1 1 1 1 1 1 '" 1 1 1_1-  (C) Vertically Parliliontd Dala  Figure I: Data mi ning in various environments  ------ Results  In this paper we propose cryptography approach to mine association rules. We have used elliptic curve based digital signature algorithm (ECDSA) which provides authentication between two parties in unsecured environment and elliptic curve Integrated Encryption Scheme (ECIES) which provides privacy against involving parties.

The remaining paper is organized as follows. In Section 2, theoretical background and related work are discussed. In Section 3, technique for fmding association rule is proposed.

The analysis of proposed algorithm and conclusion are presented respectively in Sections 4 and 5.

ICCCNT'12 26th_2Sth July 2012, Coimbatore, India    IEEE-20180

II. THEORETICAL BACKGROUND AND RELATED WORK  A. Data Mining of Association Rule in Distributed Environment  In a distributed database, the transaction are distributed among n different parties P1,PZ" .,Pn such that each party P, contains disjoint subset of transactions, DB=DB1 u DBz ".DBn. The itemset A has a local support count of A.sup, at party Pi, if A.suPi of the transaction at P, contains A. The global support count of A is given as A.sup = I7=1 A.sup i. An item-set A is globally supported if A.sup 2: S * IDBI = S * I7=1 DEi. where S is global minimum support. The global confidence of rule A ? B can be given as {A u B}.sup / A.sup. The aim of mining association rules in distributed databases is to find all rules whose global support and global confidence are higher than the user specified minimum support and confidence. [5]  In term of association rule mining, rule XY ? Z will be discovered, as long as satisfy these conditions:  Is!es Support Count XYZ (i) 1. Support(XY ? Z) = 1-1 . - -  I:?fs database _ site(i)  Is!es Support Count XY(i) 2. Support(XY) = 1-1 .

- -  I:?fs database _ site(i) Sunnor(XY ? Z)  3. Confidence(XY ? Z) = ---=y'-"y ----- Support(XY)  B. Elliptic Curve Cryptography(ECC) Elliptic curve cryptography (ECC) is an approach to public?  key cryptography based on the algebraic structure of the elliptic curve over fmite fields [6]. Elliptic curves used in cryptography are defmed over two types of finite fields: prime field Fp , where p is a large prime number and binary extension fields Fz  m .Elliptic curve cryptography require much  smaller key compare to the RSA cryptosystem to provide the same level of security. ECDSA public key are smaller than similar strength of DSA keys. These advantages of signature size, bandwidth and computational efficiency make ECC to use in our algorithm. Detail study of ECC given in [7,8].

1) Elliptic Curve Digital Signature Algorithm (ECDSA)  ECDSA algorithm runs in three phases:  ? Key Generation:  Party 1 select an elliptic curve E over a fmite field, say GF(p).The number of points on E should be divisible by large prime n. Then partyl select point p(x, y) E GF(p) order n. Then selects the integer d in range [1, n-I], where d is a private key of party 1. Now to obtain publk key of party 1 counts Q= dP. Now (E, P, n ,Q) known as public key of party 1.

? Signature Generation: To sign the message m, first partyl have to select random integer k E [I,n-I] . Then compute  (X],YI)=kP then set r = XI mod n, s = k- I (h(m)+dr) mod n.

Signature is included in the message is pair of integers (r,s).

? Signature Verification: To verify (r,s) on message m,  party2 do the following. First party2 obtain authentic copy of public key of party 1 (E, P, n ,Q). Verify the r and s E [I,n-I]. Compute w = S-  I mod n and hem). Then UIP+  UzQ=(xo,Yo) is calculated where UI = h(m)*w mod n and Uz = rw mod n. fmally calcu late v= Xo mod n and accept the signature if v=r.

2) Elliptic Curve Integrated Encryption Scheme (ECIES)  ECIES algorithm runs in three phases:  ? Key Generation: Key generation in ECIES is same as ECDSA  ? Encryption: To encrypt the message m, first party 1 have to select random integer k E [I,n-I] . Then derives shared secret S=Px, where P=(Px,Py)=rd, d is a private key of party 1. Party 1 use Key Derivation Function (KDF) to derive a symmetric encryption and a MAC keys kEllkM = KDF(SIISI)' Now party 1 encrypt message c = E(kE;m).

For sending a message partyl prepare a tag of encrypted message and d= MAC(km;cIISz). SI and Sz are optional.

Partyl send message Rllclld to party2.

? Decryption: To decrypt cipher text Rllclld party2 do the following. Party2 derives shared secret S = P x' where (P x ,P y) = kBR. It also derive key the same way as in encryption kEllkM = KDF(SIISI) and output is failed if d * MAC(km;cIISz). To decrypt message party2 use symmetric encryption and the message m = E-  I (kE;C).

C. Related Work  There are many approaches proposed for mmmg association rules in centralized database as well as in distributed database. Many of them uses cryptography techniques to preserve privacy in such databases.

Authors in [9] develop FDM(Fast Distributed Mining of association rules) efficient algorithm to fmd association rule in horizontal partitioned data. This algorithm is adoption of apriori algorithm in distributed database. Algorithm generates candidate set at each site. After generation of candidate set local pruning and global pruning take place. To determine whether candidate set is globally supported or not, they exchange support count using polling technique. Although algorithm does not provides privacy.

In [10] authors directly adopt FDM technique. To exchange support, they use cumulative encryption technique. All parties encrypt all item sets and sends to common party to elim inate duplication. After that it is passed to all parties and each party decrypt given item set. After decryption item set is tested if it is globally supported.

In [11] authors introduce secure set union and shows good results then FDM. Here each site encrypt local data and send to other site. Each site re-encrypts that data. They shows  ICCCNT'12 26th_28th July 2012, Coimbatore, India    IEEE-201S0  duplicate in original itemset is duplicate in encrypted itemset.

After encryption is done decryption can be done in any order.

An experimental result shows, time spends on communication is reduces then FDM.

Authors in [12] proposed algorithm based on elliptic curve cryptography ECDH and ECDSA and use thirds party to count the global support of the item set. It counts the global support under the security assumption. What if third party generates the artificial association rules? Therefore we propose an algorithm without use of third party and still it provides privacy and authentication between involving parties.



III. PROPOSED TECHNIQUE  A. Problem Definatation  We consider scenario where more than two parties want to corporate for computing association rule on union on their databases. Although databases are private to party and they don't want to reveal their private information to other parties or to the intruder.

We show how involved parties find global association rule efficiently without revealing personal information to other involving parties or intruder. No party learning anything then global association rule.

We use apriori algorithm to generator frequent itemset and for authentication and security we used ECDSA and ECIES under elliptic curve cryptography.

B. Generating Gobal Frequent ltemset Proposed protocol for rmding global frequent item set is shown in Figure 2. Suppose there are three parties are involved namely partyl, party2 and party3 having their homogeneous dataset DBl, DB2, DB3. Involving parties want to count the support of the item set X without revealing any information to the other involving parties. Here in given protocol we generate global frequent item set.

1) Algorithm generates elliptic curve based public keys and private keys, and distribute them to the other involving parties.

2) Any involving party can be initiator. Initiator generates random number R, Here we assume party 1 as in itiator. Party 1 in itiate the program and sends total count of transactions by adding random number and send to party2 as shown in figure 2. In the end of execution of program party 1 gets the sum of total transactions. Party 1 remove random number and gets total number of transaction Total Count.

3) Party 1 gen erates 1-freq uen t item set us in g apriori algorithm.

4) Here we consider party 1 as in itiator. It calculate the following msgl = [Xi.count + R ] as shown in figure.

Xi.count is the count of item i at party I.In figure 2 AI and BI are count of item A at party i and count of item B at party i respective Iy .

5) Party 1 encrypt msgl using ECIES algorithm, Encrypted message Em= Encrypt(msgl, pubKeY2).

Now party 1 sign Em using ECDSA algorithm, Signed message Sm = Sign (Em, priKeYI) and sends to the party2. Here msgl contains count of all the itemsets.

6) Party2 verify signed message using ECDSA algorithm, Vm=Verify(Sm, pubKeYI). After that if message is verified then party2 decrypt the message using ECIES algorithm, msgl= Decrypt(Vm, priKeY2).

7) Pary2 add its item set count to msg2 = [XI. count + msgli] . XI.count is count of item i at party2 and msgII is count of item i send by Party 1.

S) Party2 do as directed in step 5 and send massage to party3.

9) Pary3 verify and decrypt as shown in step 6 and add itemset as shown in step 7. Party3 send the msg3 to the initiator party 1.

10) Partyl decrypt and verify message and remove random number. Party 1 checks if the Count_oCitem_i ? S*Total_Count, then add item in I-frequent item set, which is globally generated itemset. Here S is the minimum support.

Party 1 do the step from 1 to 10 until it finds out the globally generated k-itemset.

A=A+A)  8=8+8) Msg3 =A84   Decrypt(Verify(M2.pubKey2).priKey3)  Figure 2 : Determining Global itemsets.

C. Generating Global Association Rule  A=A+Az  8=8+82 Msg2 =A 59   After generating k-frequent item set, global association rule can be generated using genRules(F) function of apriori algorithm [13] for centralize database, satisfying minimum support threshold and minimum confidence threshold .

Initiator finds all global association rules and broadcast it globally. No other party can learn more than global association rules.

ICCCNT'12 26th_2Sth July 2012, Coimbatore, India    IEEE-201S0  D. Algorithm for Generating Global Association Rule  In Table 1 proposed algorithm is given. Our proposed algorithm works on two phases. First, it generates global frequent item set and second is to generate global association from global frequent item set.

Table 1: Proposed Algorithm  Input: Databases of involving parties DBJ, DBz, ... , DBn .

DB= I7=IDBi Minimum global support (MGS) Minimum global confidence (MGC)  Output: Global association rules  (a) Initiator party generates global k-frequent item set using the step 1-10 as shown in above protocol.

(b) Initiator calcu late global association rule like a --? b where global confidence gc ;;:: MGC and a, b should be globally frequent itemsets.



IV. ANALYSIS OF PROPOSED AL GORl T HM  A. Privacy Aginst Involving Parties  In proposed algorithm initiator party adds random number and encrypts the total count and send to another party. Another party cannot guess the value easily and cannot predict original value and this way it provides privacy against involving parties. Parties cannot read communication channel because massage is passing in encrypted form. Thus using this protocol we provide privacy against involving parties.

B. Privacy and Security Against Intruder If intruder wants to read communication channel or want  to alter message, he cannot do that because communication channel is secure. Each party sends massage after digitally signed so intruder cannot alter this massage.

C. Communication Cost  If n sites are participating and k numbers of 1- frequent item sets are found then 2k_1 item set are generated. The communication cost for sending message to n site is n*(2k _ 1) which is reduces to 2k.

D. Computation Cost  Computational cost of encryption and decryption cost is constant and independent of parameters item set k and party count n. Suppose a value of encryption and decryption algorithm is C 1 and value of signature algorithm for n site is C2. Cost of generating non empty subset to each site is m2.

Total cost of signature generating and encryption decryption is L *(C l+C2), where L is the level of frequent itemset. So total cost of generating frequent itemset is 0 (n*(L *(C l+C2) + m2)), which is equal to O(n* m2). Cost of generating  association rule from frequent item is O(22m+m2 ). So, total cost of algorithm is 2m. This is reasonable for small databases.

E. Exprimental Evalution The proposed algorithm is evaluated on dataset [14]. In our  experiment we simulate 3 different parties.

The lOOk records of dataset named TlOI4DIOOK [14] are  used in our experiment. Database distributed equaUy in each party. The execution time for different support is shown in figure 3. Result is good for smaU n urn ber of database.

700.00  600.00  ? 500.00 i=u- c Q) 400.00 O(J) :;:::; c: 13 = 300.00 Q) x  lJ.J 200.00  100.00  T1014D100K  \ \ \ \  '" ...,..

2% 3.00% 3.25% 3.50% 3.75% Minimum Support  Figure 3 : Execution time vIs Minimum Support graph of TI0I4DI00K database  v. CONCLUSION In this paper we proposed a technique for mmmg  association rules on horizontaUy partitioned data in unsecured environment using ECDSA and ECIES algorithms. We also show that the global association rule can be generated without loss of privacy to the involving parties or intruder. The communication cost and computational cost also be reasonable for smaU amount of databases. In future proposed algorithm can be extended to vertically partitioned database and also computational cost can be reduced.

