Ranking and selecting association rules based on dominance relationship

Abstract?The huge number of association rules represent the main hamper that a decision maker faces. In order to bypass this hamper, an efficient selection of rules has to be performed. Since selection is necessarily based on evaluation, many interestingness measures have been proposed. However, the abundance of these measures gave rise to a new problem, namely the heterogeneity of the evaluation results and this created confusion to the decision. In this respect, we propose a novel approach to discover interesting association rules without favoring or excluding any measure by adopting the notion of dominance between association rules. Our approach bypasses the problem of measure heterogeneity and unveils a compromise between their evaluations. Interestingly enough, the proposed approach also avoids another non-trivial problem which is the threshold value specification.

Index Terms?Association rules selection, Interestingness mea-  sures, Dominance relationship.



I. INTRODUCTION  Mining association rules is one of the core tasks in data min- ing research. Since its first formalization in [1], the research on association rules has become very popular among the data mining researchers. Indeed mining association rules provides an opportunity to extract relevant and valuable relationship between attributes in transaction databases. Currently, associ- ation rules are widely used in the decision making related to various areas such as telecommunication networks, market and risk management, inventory control etc [2]. However, it is well known that data mining algorithms produce an overwhelming number of rules [3]. Hence, the decision maker is unable to determine the most interesting ones and consequently unable to make decisions. In order to face this obstacle, an efficient evaluation of rules has become a compelling need rather than being a rational choice. Several works have been devoted to the study of the interestingness of association rules [4], [5], [6], [7]. As a consequence, a panoply of statistical measures, obeying different semantics, have been proposed. Although these measures allow evaluating rules from various sights, yet their abundance (? 60) has yielded another problem for the decision maker. Indeed, the outputs of evaluations vary from a measure to another one and may even be contradictory since the measures evaluate differently the rules. That is why, it is common that a given rule be considered relevant according to  a measure and irrelevant with respect to another one.

The problem caused by the abundance of measures has  led to a trend of works that focuss on proposing approaches to assist the user in selecting the measures qualified to be the most adequate to the decision scope. These approaches can be classified into two main categories namely the expert- based approaches and the property-based ones. In the first category, different studies have compared the ranking of rules by human experts to that yield by various measures. Then, they suggested choosing the measure that yields the closest one to the expert ranking [8], [9]. These studies were based on specific datasets and experts. Thus, their results cannot be taken as general conclusions. Moreover, in a real problem, it is not always possible to easily get expert?s ranking. As for the second category, to reduce the number of measures, many properties have been reported in [10]. Geng and Hamilton surveyed the interestingness of measures and summarized nine properties to address that issue. Using properties facilitates a general and practical way to automatically identify interesting measures. This trend has been enriched by different other works [11], [12], [13], [14] with an additional number of properties. Nevertheless, these properties are not standards [13]. Hence, they do not guarantee selecting only one best measure. Indeed, a wide range of UCI1 datasets were also used to study the impact of different properties. The results show no single measure can be elected as an obvious winner [12]. Then, in the case of selecting many measures, the problem related to the variety of outputs, mentioned above, persists. In other words, the user cannot proceed towards a unique selection of rules. Whatever one measure is selected or more, nothing guarantees that they are the ?best? ones and some better suited measures may be excluded for the simple reason that the used properties do not take into account the specificity of decision context.

Our contribution lies within this scope. In this paper, we  introduce a novel approach that aims at discovering interesting association rules without favoring or excluding any mesure among the used measures. For this purpose, we integrate into the rule selection process, the skyline operator [15] whose  1http://archive.ics.uci.edu/ml/   DOI 10.1109/ICTAI.2012.94    DOI 10.1109/ICTAI.2012.94    DOI 10.1109/ICTAI.2012.94     fundamental principle relies on the notion of dominance.

The skyline operator is used to resolve mathematical and economics problems such as maximum vectors [16], Pareto set [17] and multi-objective optimization [18]. On the other hand, the skyline operator has received considerable attention in database community and several algorithms, based on block nested loops [15], divide-and-conquer search [19] and index scanning [20], have been developed to meet skyline requests that have different contraints in various computational domains. In our work, the skyline operator comprises the rules that are supposed to be the most interesting ones while taking into account several measures. The dominance relationship, which is the corner stone of the skyline operator, is applied on rules and can be presented as follows: a rule r is said dominated by another one r?, if for all used measures, r is less relevant than r?. The former rule (i.e., r) is discarded from the result, not because it is not relevant for one of the mesure but because it is not interesting according to the combination of all measures. Our approach bypasses the problem of measure selection by finding a compromise between the different outputs and also bypasses another nontrivial problem which is the threshold value specification.

The remainder of this paper is organized as follows. Section  2 gives a brief definitions related to association rules and introduces the dominance relationship. We propose and detail our approach of rule selection in section 3. An extension of our approach to enable rule ranking is presented in section 4.

Results of the experiments carried out on several datasets are reported in section 5. Concluding points and avenues of future work are sketched in section 6.



II. ASSOCIATION RULES AND DOMINANCE RELATIONSHIP  In this section, we first recall basic definitions related to association rules. Then, we present these rules as numeric vectors within the same dimension after having been evaluated by a set of measures. This vector format, allows us to benefit from the concept of dominance and adapt it to our scope as described in section II-B.

A. Association rules  Let I be a set of literals called items, an itemset corresponds to a non null subset of I. These itemsets are gathered together in the set L : L = 2I\?. In a transactional dataset, each transaction contains an itemset of L. Table I(a) sketches a transactional dataset D where 10 transactions, denoted by t1, . . . , t10 described by 4 items denoted by a, b, c, d. The support of an itemset X, denoted supp(X), is the number of transactions containing X .

An association rule r is a relation between itemsets of the  form r: X?Y where X and Y are itemsets, and X?Y =?.

Itemsets X and Y are called, respectively, premise and con- clusion of r. The support of r is equal to the number of transactions containing both X and Y , supp(r)= supp(X?Y).

We notice that interesting measures for association rules are  a b c d  t1 ? ? t2 ? t3 ? ? t4 ? t5 ? ? t6 ? ? t7 ? t8 ? t9 ? ? t10 ? ?  (a) A transaction datasetD  Rule Freq Conf Pearl  r1: a?d 0.20 0.67 0.02 r2: b?c 0.10 0.50 0.00 r3: b?d 0.10 0.50 0.02 r4: c?d 0.20 0.40 0.10 r5: d?a 0.20 0.33 0.02 r6: d?c 0.20 0.33 0.10 r7: c?b 0.10 0.20 0.01 r8: d?b 0.10 0.17 0.02  (b) A table relation ?(R,M)  Name Definition Domain Frequency  supp(X?Y ) |D|  [0, 1]  Confidence supp(X?Y )  supp(X) [0, 1]  Pearl supp(X)  |D| ? |  supp(X?Y ) supp(X)  ? supp(Y )  |D| | [0, 1]  (c) Some measures of M  TABLE I EXAMPLE OF A DATASET TRANSACTION AND MEASURES.

usually defined using support counts as presented in Table I(b).

B. Dominance relationship After mining association rules from a transactional dataset  D (e.g., Table I(a)), a set R of rules is obtained (e.g., Table I(b) first column). Rules of R are evaluated with respect to a set M of measures (e.g., Table I(c)) to form a relational table ? (e.g., Table I(b)). Formally, ? = (R,M) with the set M = {m1, . . ., mk} of measures as attributes and the set R = {r1, . . ., rn} of rules as objects. We denote by r[m] the value of the measure m for the rule r, r ? R and m ? M.

Since the evaluation of rules varies from a measure to another one, using several measures could lead to different outputs (relevant rules with respect to a measure). For example, r1, and r2 are the best two rules with respect to the Confidence measure whereas it is not the case according to the evaluation of Pearl measure which favors r4 and r6. This difference of evaluations is confusing for any process of rule selection or ranking.

Based on the above formulation of ?, we can utilize the  notion of dominance between rules to address their ranking as well as the selection of relevant ones. Before, formulating the dominance relationship between rules we need to define it at the level of measure values. To do that, we define value dominance as follows: Definition 1: (Value Dominance) Given two values of a  measure m corresponding to two rules r and r?, we say that r[m] dominates r?[m], denoted by r[m] ? r?[m], iff r[m] is preferred to r?[m]. If r[m] ? r?[m] and r[m] 	= r?[m] then we say that r[m] strictly dominates r?[m], denoted r[m]  r?[m].

To make the dominance relationship scale to the level of  rules, we give the following definition:     Definition 2: (Rule Dominance) Given two rules r, r? ? R, the dominance relationship according to the set of measures M is defined as follows: - r dominates r?, denoted r ? r?, iff r[m] ? r?[m], ? m ? M.

- If r ? r? and r? ? r, i.e., r[m] = r?[m], ? m ? M then r and r? are said equivalent, denoted r ? r?.

- If r ? r? and ? m ? M such that r?[m] r[m] , then r? is strictly dominated by r and we note r r?.

It is easy to check that the strict dominance relationship fulfils the following properties: - irreflexive: r r, i.e, r r is false for each m ? M, - transitive: ? r, r? and r?? ? R, if r ? r? and r? ? r?? then r ? r??.

Example 1: Given the relation table ? in Table I(b), the rule r3 strictly dominates r2 since r3[Freq]? r2[Freq], r3[Conf ] ? r2[Conf ] and r3[Pearl] r2[Pearl].

Whenever a rule r dominates another one r? with respect  to M, this means that r is equivalent to or better than r? for all measures. Hence, the dominance relationship allows comparing concurrently two rules with respect to all measures.

Hence, it can be used to bypass the problem of difference of evaluations. Rules dominated by other ones (at least one), according to M, are not relevant and have to be eliminated.

The skyline operator for association rules formalizes this intuition.

Definition 3: (Skyline operator) The skyline of ? overM,  denoted by SkyM (?), is the set of rules from ? defined as follows:  SkyM(?) = { r? R | 	 ? r? ? R, r? r}  In other words, the skyline of ? is the set of undominated rules of R with respect toM. For instance, from the relation table ? in Table I(b), SkyM (?) = {r1, r4} since there is no rule in R dominating r1 or r4.



III. DISCOVERING UNDOMINATED RULES To discover undominated rules, we adopt the principle of  approaches oriented divide-and-conquer search [19] used for answering queries in database applications. In the following, we introduce the necessary formalization that would be of need for the generation of the undominated rules. Based on this formalization we propose an algorithm, called SKYRULE, that puts the skyline operator.

A. Formalization To discover the undominated rules, a na??ve approach consist  in comparing each rule with all other ones. However, associ- ation rules are often present in huge number which make it very costly to perform pairwise comparisons. In the following, we show how to remedy this problem. First, we introduce the notion of reference rule.

Definition 4: (Reference Rule) A reference rule r? is a  fictitious rule that dominates all the rules of R. Formally: ? r ? R, r??r.

Example 2: From the relational table ? given in Table I, we can consider r? as the fictitious rule such that for each measure m ? M, r?[m] is the maximal value appearing in the active domain of m, i.e., r? = ?0.2, 0.67, 0.10?. Hence, it does not exist any rule in R that dominates r?.

In practice, measures are heterogenous and defined within  different domains. For our purpose,M have to be normalized into M? within one interval [p,q]. In other words, each measure m ? M must be normalized into m? ? M? within [p,q]. The normalization of a given measure m is performed depending on its domain and the statistical distribution of its active domain. We recall that the active domain of a measure m is the set of its values in ?. The normalization is a statistical problem which is beyond the scope of this paper. Worth of mention, the normalization of a measure does not modify the domination relationship between two given values.

Definition 5: (Degree of similarity) Given two rules r, r? ?  R, the degree of similarity between r and r? with respect to M? is defined as follows:  DegSim(r, r?) =  ?k i=1 | r[m?i]? r  ?[m?i] |  k  with | x ? y | is the absolute value of (x ? y), x and y ? [p,q] and k = | M? |.

Example 3: Let?s consider our running example using  the relation table ? in Table I(b). Since all measures are defined within the same domain [0,1], we can compute, without normalization, the degree of similarity between each rule and the reference rule given in the previous example. DegSim(r?,r1) = 0.02, DegSim(r?,r2) = 0.12, DegSim(r?,r3) = 0.11, DegSim(r?,r4) = 0.09, DegSim(r?,r5) = 0.14, DegSim(r?,r6) = 0.11, DegSim(r?,r7) = 0.22, DegSim(r?,r8) = 0.23.

After giving the necessary definitions (reference rule and  degree of similarity), the following lemma gives a remedy to the issue evoked in the beginning of section III-A. Indeed, it offers a swifter solution rather than pairwise comparisons; to find undominated rules.

Lemma 1: Let r ? R be a rule having the minimal degree  of similarity with respect to r?, then r ? SkyM(?).

Proof: Let r ? R be a rule having the minimal degree  of similarity with respect to r? and we suppose that r ? SkyM (?), then there exists a rule r? ? R that strictly dominates r, which means that ? m ? M, r?[m] ? r[m] and ? m? ? M, r?[m?] r[m?]. Hence, we have DegSim(r?,r?) < DegSim(r?,r). The latter inequivalent contradicts our hypothesis, since r has the minimal degree of similarity with respect to r? .

After identifying an undominated rule r, the rules dominated  by r must be identified by comparing them to r. Na??vely, r must be compared to all rules in R, yet we show in the following that we can even reduce the set of rules to be compared with r into a subset of R.

Definition 6: (undominated space) Let r be an undominated rule. If there exists a rule r? which is not dominated by r such that r 	? r?, then there exists at least a measure m ? M such that r?[m] r[m]. Since there exist k measures in M, then there are k sets such that each one of them may contain rules not dominated by r. For each measure mi ? M, i=1,...,k, the corresponding set sri of rules which are not dominated by r is defined as follows:  sri = { r? ? R | r ? r? and r?[mi] r [mi]}  These k sets compose the undominated space of r, denoted Sr={sri }, i=1,...,k.

Example 4: From our toy example presented in Table I(b),  for the undominated rule r1, sr11 = ?, we have s r1 = ? and sr1   = {r4, r6}. sr11 and s r1 are empty since there is no rule r ?  R such that r[m1] r1[m1] or r[m2] r1[m2]. However, sr1 contains r4 and r6 since r4[m3] r1[m3] and r6[m3]   r1[m3]. Following a similar reasoning, for the undominated rule r4, we have sr41 = ?, s  r4 = {r1, r2, r3} and sr43 = ?.

Lemma 2: Let r,r? ? R be two undominated rules and sr ? Sr . If r? 	? sr, then ? r?? ? sr, r? r??.

Proof: Given r, r? ? R two undominated rules and sr ? Sr corresponding to a measurem ?M. If r? 	? sr, then r?[m] ? r[m] which means that r[m] ? r?[m] (1). Moreover, since r?? ? sr then r??[m] r[m] (2). According to the dominance transitivity, (1) and (2) lead to r??[m] r?[m]. Hence, r? r??.

Lemma 3: Let be r, r? ? R and sr ? Sr such that r is an undominated rule and r? ? sr. If r? has the minimal degree of similarity with respect to r? among the rules in sr, then r? ? SkyM (?).

Proof: Given r, r? ? R and sr ? Sr such that r? ? sr and r? has the minimal degree of similarity with r? among the rules in sr. Suppose that r? 	? SkyM (?), then it means that there exists a rule r?? ? R such that r?? r?. According to lemma 2, r?? must be in sr since any rule not belonging to sr cannot dominate r?. Moreover, ? m ? M, r??[m] ? r?[m] and ? m? ? M, r??[m?] r?[m?]. Hence, DegSim(r?,r??) < DegSim(r?,r?) which contradicts our hypothesis since r? has the minimal degree of similarity with r? in sr.

B. SKYRULE Algorithm Based on the formalization, we proposed the SKYRULE al-  gorithm allowing to discover undominated rules. In SKYRULE algorithm, we use the following variables for accumulating data during the execution of the algorithm: - The variable Sky: is a variable initialized to empty set, it is used to keep track of the undominated rules.

- The variable C: is a variable that contains the set of all current candidate rules to be qualified as undominated; it is initialized to R.

- The variable E : is a variable that contains all current set covering the undominated space of all undominated rules; it is initialized toR since initially, all rules are considered undominated.

Algorithm 1: SKYRULE Input: ? = (R,M) Output: Sky: set of undominated rules of ?.

Begin1  Sky ? ?2 C ? R3 E ? {R}4 While C 	= ? do5  r? ? r ? C having min(DegSim(r,r?))6 C ? C\{r?}7 for i=1 to k do8  sr ?  i ? ?9  Sky ? Sky ? {r?}10 Foreach e ? E such that r? ? s do11 Foreach r ? e do12 If r? r then13  C ? C\{r}14  Else15 for i=1 to k do16 If r[mi] r?[mi] then17  sr ?  i ? s r?  i ?{r}18  E ? E\{e}19  E ? E ? {sr ?  , . . . , sr  ?  k }20  return Sky21 End22  Informally, the algorithm works as follows: - If the set of candidate rules C is empty, then the algo- rithm terminates and all undominated rules are outputted through the variable Sky.

- Otherwise, each rule r in C might be an undominated one. If r has the minimal degree of similarity with the reference rule r?, then r is an undominated rule and is added to Sky (i.e., r is no longer candidate and is deleted from C). After that, only the undominated space containing r is explored as follows: for each rule r?, in this undominated space, is compared with r. Two cases have to be distinguished: 1) if r? is dominated by r, then r is no longer candidate and it is withdrawn from C.

2) otherwise, r? is not dominated by r, i.e., r? is still a candidate rule and it is added to the undominated subspace of r according to definition 6.

Then, the undominated space containing r is deleted from E and the undominated space of r is added to E . This process comes to an end when all candidates are handled.



IV. RANKING ASSOCIATION RULES  The SKYRULE algorithm allowed identifying the undom- inated rules which are supposed to be the most relevant ones. However, this output might not be enough answer to a personalized user query. Indeed, the user often needs a specified number of relevant rules which may be more or less than what the SKYRULE algorithm generates. In the first case i.e., the user asks for a subset of the undominated rules, a selection is required among the SKYRULE output. Since, SKYRULE generates only relevant rules, the most relevant among them must be returned to the user. This selection cannot be performed unless a ranking has been done within the undominated rules. In the second case i.e., the user asks for a set of relevant rules larger than the set of undominated rules, the rules that must be added to the SKYRULE output are necessarily a part from the set of dominated rules. The composition of this part requires a selection among all the dominated rules. This selection cannot be performed unless a ranking has be carried within the dominated rules. Hence, a ranking process must be performed on the whole set of rules.

In the remainder, we introduce our second contribution:  we show that we can perform a comprehensive ranking using SKYRULE. For this purpose, we give the two following objective conditions:  1) Any dominated rule cannot be better ranked than an undominated one.

2) Two undominated rules must be ranked based on degree of similarity with respect to reference rule.

A. Succession relationship  In the following, we introduce the notion of succession re- lationship. This notion is based on the dominance relationship.

First, we define it at the level of rules. Then, we define it at the level of rule sets. Both definitions are essential to state Lemma 4. That lemma puts the corner stone of our approach that uses the skyline operator to establish a ranking process.

This process is described by RANKRULE (c.f., Algorithm 2).

Definition 7: (Successor rule) Let?s consider two rules r, r?  ? R, we say that r succeeds r?, denoted by r ? r? iff r? r and ? r?? such that r? r?? r.

Example 5: Consider the relation table ? in Table I(b), then  we have r6 ? r4 but r5 ? r4 since r4 r6 r5.

Definition 8: (Succession Operator) Let E be a set of rules  such that E ? R . The successeur set of E in R with respect to M is defined as follows: SuccM(E,R) = { r ? R \ E | ? r? ? E, r ? r? ? ? r?? ? E, (r?? r ? r ? r??)} Example 6: Let?s consider our running example using the  relation table ? in Table I(b) and suppose E = {r1, r4}. Then, we have r1 r3 r2, r1 r5 r7, r5 r8 and r4 r6  r5 then SuccM(E,R) = {r3, r6}. Notice that, although r5 ? r1, r5 	? SuccM(E,R) since r5 ? r4.

Lemma 4: Given a set of rules E ? R, the following relation is fulfilled:  SuccM(SkyM(E),E) = SkyM(E\SkyM(E )) Proof: Let E be a set of rules, such that E ? R:  1. First we have to show that SuccM(SkyM (E),E) ? SkyM (E\SkyM(E)): Given, r ? SuccM(SkyM(E),E) then r ? E\SkyM(E). For all r? ? SkyM(E), two cases have to be distinguished:  - If r? r, then r ? r? which means that ? r?? ? E\SkyM(E) such that r? r?? r.

- If r? ? r, then ? r?? in E\SkyM(E) such that r? r?? and r?? r  Thus, r cannot be dominated by any rule in E\SkyM(E) i.e., r ? SkyM(E\SkyM(E)).

2. Second, we have to show that SuccM(SkyM(E),E) ? SkyM(E\SkyM(E )): Given r ? SkyM(E\SkyM(E )) then ? r? ? E\SkyM(E) such that r? r (a). Moreover, since r ? E\SkyM(E) then ? r?? ? SkyM(E) such that r?? r (b). Thus, (a) and (b) leads to that r ? r?? (c).

Furthermore, we suppose that ? r? ? SkyM(E) such that r1  r and r ? r1, then ? r2 ? E\SkyM(E) such that r1 r2  r which contradicts our hypothesis (see (a)). Thus, ? r2 ? E\SkyM(E) such that r1 r2 r (d). Hence, according to (c) and (d), r belongs to SuccM(SkyM(E),E).

Algorithm 2: RANKRULE Input: ? = (R,M) Output: Ordered sets of ordered rules Begin1  p ? 02 While R 	= ? do3  p ? p + 14 Ep ? SKYRULE(?)5 R ? R\Ep6 ? ? (R,M)7  return (E1, . . ., Ep)8 End9  Example 7: In this example, we apply the RANKRULE algorithm on ? of Table I(b). Since, both r1 and r4 are undominated rules then E1 = {r1, r4}. Now, we ignore r1 and r4, the rules which are not dominated are r3 and r6. In fact, r3 is only dominated by r1 and r6 is only dominated by r1, then E2 = {r3, r6}. Now we also ignore r3 and r6, the rules which are not dominated are r2 and r5. In fact, r2 is dominated by r3 and r5 is only dominated by r6, then E3 = {r2, r5}. Finally, we have E4 = {r7, r8}. This example is illustrated by Figure 1. The arrow indicates the process direction starting from the undominated rules. E1 contains the top ranked rules which are themselves ranked within E1 from left to right based on DegSim: r1 is better ranked than r4.

Fig. 1. The output of RANKRULE applied on ? given by table I(b).

B. Duality  The RANKRULE algorithm performs ranking by starting from the set of the most relevant rules (i.e., the undominated rules). The latter are then used to identify the next ranked set (i.e., the successor). Nevertheless, another dual possibly remains explorable. It relies on starting from the set of the less relevant rules (i.e., rules that do not dominate other ones) and use them to identify the previous ranked rule set that we called it predecessor set. A complete formalization of this dual perspective is beyond the scope of this paper. Nevertheless, we explain how it works by the following illustrative example.

Example 8: We consider ? of Table I (b). First, we identify  the set of rules which do not dominate any other rules. These rules are r2, r7 and r8 then we have E4 = {r2, r7, r8}. Now we have to ignore these rules. The rules which do not dominate any other rules are r3 and r5. In fact, r3 dominates only r2 and r5 dominates only r7 and r8, then E1 = {r3, r5}. Now we also ignore r3 and r5, The rules that do not dominate any other rules are r1 and r6 since they dominate r3 and r5 respectively, then E2 = {r1, r6}. Finally, E1 = {r4}.

Fig. 2. The dual RANKRULE applied on ? given table I(b).



V. EXPERIMENTAL STUDY In this section, our objectives are at number of two. First,  we show through extensive experiments that SkyRule provides interesting instance reduction compared to the initial set of rules. Second, we assess whether the number of measures has any uniform impact on the number of undominated rules.

These experiments were carried out on benchmark datasets taken from the UCI Machine Learning Repository. Table II summarizes the characteristics of these datasets. All the tests were performed on a 1.73 GHz Intel processor with Linux operating system and 2 GB of RAM memory.

Dataset ? items ? transactions Avg. size of transactions  Diabete 75 3196 37 F lare 39 1389 10 Iris 119 8124 23  Monks1 19 124 7 Monks2 19 169 7 Monks3 19 122 7 Nursery 32 12960 9  Zoo 42 101 9  TABLE II BENCHMARK DATASET CHARACTERISTICS.

A. Reduction of number of rules In this subsection, we show the ability of our approach  to considerably reduce the huge numbers of rules generated from our experimental datasets. Our experiments batch aims to compare our approach to another one based on thresholds. For this purpose, we assign for each measure m ? M, a threshold ?m such that ?m is the minimum value of the skyrules with respect to m, i.e., ?m = min{r[m] | r ? SkyM (?)}. This ensures that all undominated rules will be generated from the algorithm based on thresholds. For instance, in our running example (c.f., Table I(b)), ?freq = 0.10, ?conf = 0.17 and ?pearl = 0.00. The set of resulting rules is called the threshold-based rules denoted by TB rules. These experiments have the benefit of quantifying the reduction of rules brought by SkyRules in the case where a user is able to perfectly specify thresholds for mining association rules algorithm based on thresholds.

Hence, we compare the number of undominated rules with respect to that of TB rules and the total number of association rules (denoted A-R). We considered a number of combinations of measures: Confidence [1], Recall [21], Pearl [22], Loevinger [23], Zhang [24].

For each set of measures, Table III compares the size of  undominated rules versus that of TB rules and that of all association rules. The goal is to illustrate the problem of the huge number of association rules even with threshold- based algorithm which makes difficult to discover interesting ones. In contrast, the number of undominated rules is always low and does not exceed 9784. Interestingly, the gain of a undominated rules is always important (very high in almost all datasets). Table IV summarizes this result by sketching, for each set of measures, the minimal/average/maximal number     TABLE III UNDOMINATED RULES vs TB RULES AND ALL RULES  Datasets {Conf;Loev} {Conf;Pearl} {Conf;Recall} {Conf;Zhang} {Conf;Pearl;Recall} {Conf;Loev;Zhang} {Conf;Loev;Pearl; (minfreq %) Recall;Zhang}  Diabetes Sky-R 3411 9 6651 2996 9 171 171 TB-R 59314 58124 59206 59309 44813 44602 42126  (10,00) A-R 62132 62132 62132 62132 62132 62132 62132  Flare Sky-R 4975 48 4978 4857 48 48 48 TB-R 56163 57101 56451 54524 53197 53116 52819  (10,00) A-R 57476 57476 57476 57476 57476 57476 57476  Iris Sky-R 246 246 246 246 246 246 246 TB-R 440 440 440 440 440 440 440  (0,00) A-R 440 440 440 440 440 440 440  Monks1 Sky-R 768 1 788 656 1 1 1 TB-R 60417 60692 59418 59452 58904 58811 58327  (1,00) A-R 62184 62184 62184 62184 62184 62184 62184  Monks2 Sky-R 279 3 215 202 3 3 3 TB-R 59611 59702 59568 59544 59103 58917 58662  (1,00) A-R 59976 59976 59976 59976 59976 59976 59976  Monks3 Sky-R 1028 2 713 781 4 2 2 TB-R 58662 58369 57922 58436 57816 57734 56038  (1,00) A-R 59304 59304 59304 59304 59304 59304 59304  Nursery Sky-R 497 2 304 342 8 2 2 TB-R 23872 23901 23875 23417 23176 22806 22139  (2,00) A-R 25062 25062 25062 25062 25062 25062 25062  Zoo Sky-R 9784 36 9415 9112 36 36 36 TB-R 67991 67305 67872 66146 65328 65116 63926  (10,00) A-R 71302 71302 71302 71302 71302 71302 71302  TABLE IV EFFECTIVENESS OF UNDOMINATED RULES ON UCI BENCHMARKS  Measures Minimal number Average number Maximal number Average number Average gainof Sky-R of Sky-R of Sky-R of TB-R of Sky-R {Conf;Loev} 246 2623,50 9784 48308,75 18,41 {Conf;Pearl} 1 43,37 246 40908,12 943,23 {Conf;Recall} 215 2913,75 9415 48094,00 16,50 {Conf;Zhang} 202 2399,00 9112 47658,50 19,86  {Conf;Loev;Recall} 1 43,37 246 45347,12 1045,58 {Conf;Pearl;Zhang} 1 63,62 246 45192,75 710,35  {Conf;Loev;Pearl;Recall;Zhang} 1 63,62 246 44309,62 696,47  of undominated rules, the average number of TB rules and the average gain of undominated rules versus the TB rules. The average gain rate is measured as follows: size of TB rules  size of Sky-R .

B. Impact of measure variation on the number of rules  In what follows, we put the focus on the evolution of the undominated rules cardinalities with respect to measure variation. Table III shows the effect of variation of M on undominated rules, TB rules and all rules. We can notice that the number of all rules is obviously constant. In contrast, the number of TB rules is sensitive to the variation of cardinality of M. Indeed, by adding each time a measure toM, the number of TB rules decreases. However, the number of undominated rules may decrease or increase. The decrease can be explained by the fact that an association rule can be undominated with respect to a set of measure M1 and dominated with respect to M2, such that M1 ? M2. For example, if two rules r and r? are equivalent and undominated with respect to M1, there is a possibility that one of them dominates the other by considering one more measure. On the other hand, the increase can be  explained by the fact that an association rule can be dominated with respect to M1 and undominated with respect to M2. For example, consider a rule r which dominates another r? with respect to M1, by adding a mesure m to M1, such that r?[m]  r[m], then r? is no longer dominated by r.



VI. CONCLUSION In this paper, we introduced an approach that addresses  the problem of rule selection and ranking. This approach is not hindered by the abundance of measures which is the issue of several works. These works have been devoted to measure selection in order to find one best measure, whereas the real issue lies in selecting and ranking rules to help with decision making. We proposed two algorithms SKYRULE and RANKRULE to perform these two tasks based on the dominance relationship. When using our algorithms, the user does not have to worry neither about the heterogeneity of measures nor about specifying thresholds. On the other hand, experimental results carried out on benchmark datasets showed important profits in terms of compactness of the undominated rules.

An important direction for future work is to take into account similarity between rules in order to eliminate redundant undominated rules. Indeed, similar rules often have the same quality i.e., they have almost identical values for the various measures. Another important task consists on setting up an approach aiming at discovering undominated rules during the phase of the extraction rules which will improve the performance of the SKYRULE algorithm. Finally, an importante prospective is to plan to formalize the dual of RANKRULE and to find the relationship between them that allows to obtain the output of one of them from the output of the other.

