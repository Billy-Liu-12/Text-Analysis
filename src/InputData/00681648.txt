TARGET TRACKING USING  FUZZY LOGIC ASSOCIATION

ABSTRACT  Multistatic active sonar systems are being developed for the mission of tracking enemy submarines in harsh underwater environments. This paper will focus on a revolutionary new method with which to track a target. A fuzzy logic based tracker has been developed which performs remarkably better than a Kalman filter tracker. This is accomplished through the use of additional, non-kinematic information about each of the detections. The fuzzy logic engine combines these additional clues with the kinematic clues. This framework allows for the implementation of user-designed rules which take advantage of the additional information that is provided as input to the tracker. This additional information, effectively handled, yields a significant improvement in tracker performance.

base its decision, but this is just a small subset of the information that is available to the tracker. Additionally. there is information about the S'NR of each detection, the location of the source and the receiver, the quality of the detection, and the history of detections from particular locations. An effective way of combining all this information to make a decision is t o use an association technique which employs fuzzy logic. By using fuzzy logic, the target of interest will be tracked correctly, and at the same time, clutter tracks will be substantially reduced.

2. SYSTEIM OVERVIEW  1. INTRODUCTION  Tracking a target in the presence of a large amount of clutter i s a difficult task. A common technique that is used to accomplish this is the Kalman Filter, which predicts the state of the targct at the next time period, and chooses the detection that best matches this predicted state. This IS called the nearest neighbor approach  I I  However, nearest neighbor association is not always successful, especially when there are other detections from which to choose. One such case where this is true is in a shallow water environment. In this type of application, multistatic active sonar systems are used to try to ensonify quiet targets, and detect the retumed signal. Unfortunately, many other retums are received as well, especially from bathymetric features. Therefore, it is critical that the system can distinguish the real target from the clutter, and associate the correct detection with the correct track. Equally important is the ability to suppress the tracks formed by the clutter, while at the same time allowing the true target track to be promoted through the system.

To accomplish this, additional information will be used which is not used in the nearest neighbor association technique. The Kalman filter only uses kinematic information on which t o   Figure 1. Block diagram of the active sonar system. The trac,ker is in the boxed area, and includes the fuzzy logic association technique.

The following descriptions are based upon the system block diagram shown in Figure I .

2.1 Detector  Detections are made at thiis point by examining the received waveform. Information which is gathered about each detection includes the event number, the array which detected it,  and i t s SNR.

0-7803-4421B-6/98 $10.00 0 1998 IEEE    2.2 Classifier  Once a detection has been made, i t  then gets classified.

Numerous features, are extracted from the detection, and these values are sent to a neural network based classifier. A score i s then assigned to the detection, and if it is greater than a threshold, i t  is passed through the system.

2.3 Position Estimate  The position of each detection is then calculated in  latitude and longitude. This is done using the received time of the detection, and the angular information which is available. This can be beam number for a towed array, or ellipse crossings for a sonobuoy system.

The second stage is what distinguishes this tracker from a Kalman filter approach. The likelihood is not used to do the association, but is just one input in a fuzzy logic association framework. This can be seen by examining the black box diagram shown in Figure 2. Other inputs include the neural network score from the classifier, the equivalent aspect angle, the signal-to-noise ratio, and the distance to the nearest hotspot. These inputs are then used to come up with a rank for each detection. I t  is this rank that is used in  the association.

The detection with the highest rank is associated with the given track. If the detection with the highest likelihood also has the highest rank, then the same detection would be associated to the track as before. If  a different detection ha5 a higher rank, then that detection would be associated due t o more favorable characteristics. This is determined by the rule set which is used to combine the inputs, and will be explained in the next section.

2.4 Clutter Map  The position of every detection is stored for each event. This database builds up as the run continues, and new detections are associated with detections from previous events. If detections are received from a particular location on more than a certain percent of the events, then that location becomes a hotspot.

2.5 Tracker  New detections are associated with detections from previous events to form tracks. A track is formed if multiple detections are associated within a few events. Until then, i t  is just a potential track. If  a detection does not associate with any previous tracks or potential tracks, then i t  becomes the starting point for a new track. This process continues for all events in the run, and all tracks that are formed are shown t o the operator on a geo display while they are still active.

3. TRACKER OVERVIEW  The tracker really works in two stages. The first stage is the Kalman filter, and the second stage is the fuzzy logic association. The output of the first stage is used as one of the inputs to the second stage. Using the Kalman filter, a likelihood is determined for associating each new detection t o a track. Using the nearest neighbor approach, the detection with the highest likelihood would he associated to the track.

This detection is closest in position and velocity to the predicted values of the track at the next time update, and i s calculated based purely on kinematic information. This i s where the Kalman filter tracker would stop.

Figure 2. Black box diagram of the fuzzy logic association technique.

4. SYSTEM RULES  The rules are designed to model how an operator would evaluate each detection. This, in  effect, is an expert system, where the knowledge of the operator is the basis for the brains of the system. There are two sets of rules. One set is based on the Kalman filter likelihood, and the other set is based on the additional tracker inputs.

The first rule set is straightforward, and is composed of the first three rules that follow. The input variable L is the likelihood ratio which comes out of the Kalman filter, and is found in the antecedent of each rule. All possible values are grouped into three overlapping fuzzy sets: l i k e l y ,  u n l i k e l y , and somewhat likely. Depending on the value of L, the degree of membership for each fuzzy set is determined by examining each respective membership function.

The output variable rank is found in the consequent of each rule, and is also grouped into three fuzzy sets: l ow .  medium, and h i g h .  Each rule contributes to the assignment of a final value for rank. The amount of contribution depends upon two factors. The first is the weight of the rule. Therefore, for a given consequent, rules with greater weights are more    important. The other factor is the rule strength, which is a measure of the degree of truth of the antecedent. The more true it is, the greater the strength.

1 -  0 8 -  a r L  Z O 6 -  E - $04- m  0 2 -   Examining the rules, the first thing that is apparent is that the higher the likelihood, the higher the rank. This seems obvious, and makes perfect sense. If these were the only rules in the system, then the tracker output would be exactly the same as the Kalman filter output.

s p d a r  0 20 40 60 80 100 120 140 160 180  * IF L is likely THEN rank is high * IF L is unlikely THEN rank is low  IF L is somewhat likely THEN rank is medium  * IF angle is not specular AND SNR is high THEN  * IF hotspot is near THEN rank is low * IF angle is specular THEN rank is high * IF NN is good AND SNR is high THEN rank is high  rank is low  The second thing that can be gleaned is that the descriptors i t i the previous rule set are actually membership functions. Fuzzy logic is a superset of conventional Boolean logic, and things are not necessarily completely true or completely false, 0 or 1 .

All values between 0 and I are used, and so the statementii above can be partially true, with varying degrees of truth.

These degrees of truth are determined based upon the membership functions of the input variables. This will be described in more detail in the next section, but for now it iij sufficient to know that for every value of likelihood, there is a measure of how l ikely ,  how unlikely, and how somewhat likely that value is.

The second part of the rule set is composed of the last four rules. These rules incorporate operator knowledge into the system. If a submarine is at a location where it is not specular, i t  would be expected to have a low signal-to-noise ratio.

Therefore, if the SNR is high, it probably means that the detection is coming from a bottom retum from some large bathymetric feature. This means that the rank of the detection should be lowered. Conversely, if the aspect angle i!i specular, there is a much better chance that the detection i:j indeed the target, and the rank should be raised. This is the logic behind the third rule above.

If a detection comes from a location where many detections have been received on previous events, there is a good chance that there is some kind of bathymetric feature there producing this over and over again. Therefore, a detection coming from this location should be downgraded, since the odds are that it i s just another false return. This is what the second rule brings to the decision process.

The neural net classifier score is a valuable piece of information which should also be used. It signifies how much the return resembles that of a real target. The higher the value, the more the detections looks like a target, provided that the SNR is high enough. If the SNR is too low, then the features extracted are not as reliable, and shouldn?t be used as a discriminator. However, i t  the S N R  is high,  and the score is high, then the rank of the detection should be increased. This is accomplished using the fourth rule.

5. MEMBERSHIP FUNCTIONS  Membership functions dlefine to what degree a variable belongs to the different groups. One example of this would be the membership function defining what aspect angles  are specular. This particular membership function is illustrated in Figure 3. The membership function I used has a degree of membership equal to one for all angles between eighty and one hundred degrees. It also defines the degree of membership equal to zero if the angle is smaller than sixty degrees or greater than one hundred and twenty degrees. Between these regions, the declaration that the angle is specular is not as clear, and i t takes values between zero and one. I used a trapezoidal membership function, so that the change from zero to one i s linear. For example, when the aspect angle is seventy degrees, its degree of membership would be one half.

This is just one example of the membership functions that I developed, but it is representative of how it was done. The rest of the membership functions were formed the same way, using the knowledge and experience of various people who have been involved using these multistatic active sonar systems.

Figure 3. Specular membership function for the input variable ?aspect angle?.

predicted motion, but i t  also had the other qualities for which an operator would look.

6. COMBINING RULES  The degree to which each rule antecedent is true is used to scale the weighting of that rule in calculating the overall rank. The output membership functions for rank are then scaled by these weights. Therefore, the more rules that fire indicating a high rank, and the greater the weight for those rules, the higher the high output membership function will be scaled. This will increase the final rank of the detection. The same process i s performed for the low and medium fuzzy sets.

I use the centroid method for defuzzification, which converts the output membership functions to a single, crisp value. I t  i s this value that is compared among the detections, and the one with the highest rank is associated with the track.

All rules that tire are combined to calculate the rank of the detection. Since each rule contributes additional information, an additive implication method is used. Rules with the same consequent are added together, and this value is used as the cutoff point for that output membership function. This ensures that all rules contribute to the decision, which does not necessarily happen if a min-max inference scheme is used.

With all these tools now in hand, an analysis can be done t o compare the two different track association methods.

7. RESULTS  I applied my work to the data set which came from the LSE-94 exercise. There were twenty-two events, more than enough for a target track to form. This test was held in a harsh, shallow water environment, so many detections were obtained for each event. Even after classification, there were still several detections remaining for each event, with the potential of forming numerous false tracks.

Using the Kalman filter only, the tracker was able t o successfully track the target. The location of the submarine i s known, so the performance could be verified. However, there were an additional twenty-two tracks which appeared during the run. That is an average of one track per ping, and would be enough to challenge an operator to be able to choose the correct track, and focus on the target track for the entire run.

This is because each track is at least three detections long, so the operator would have to be able to pick out the target from a minimum of four tracks at each point in time, and probably more.

The big difference, however, was that there was not a single track formed by the clutter. The ranks were all too low, so the association was never made. An operator in this scenario would have no trouble at all i n  keeping track of the submarine.

An operator?s job is very busy, and any help that can be given in automating the tracking problem would be extremely beneficial.

8. SUMMARY  Using additional information not used in a Kalman filter, I was able to obtain better tracking performance by combining this information in a fuzzy logic framework. Taking advantage of this additional information, I was able to develop a method whereby a better decision could be reached about whether a detection should be associated with a track. The target was successfully tracked, while at the same time tracks formed by clutter were correctly rejected.

Future work would include testing the robustness of the tracker on other data sets, and making sure that the rules and membership functions derived provided the same benefit to the tracking algorithm. Both towed array and sonobuoy data would provide good opportunities for this testing.

9. ACKNOWLEDGMENTS  I would like to acknowledge Dr. Allan Steinhardt for h i s support of this work. Dr. Steinhardt is a Program Manager at the Defense Advanced Research Project Agency (DARPA), in the Tactical Technology Office m0). His financial and technical support have been greatly appreciated.

10. REFERENCES  [ I ]  Chan K., Lee V., and Leung H. ?Radar Tracking for Air  Number 1, February 1997, pages 80 - 89.

Surveillance in a Stressful Environment Using a Fuzzy-Gain  [ 2 ]  COX E. The Fuzzy Systems Handbook. A Practitioner?s Guide To Building, Using, And Maintaining F u z p  Systems.

Academic Press, Inc., 1994.

