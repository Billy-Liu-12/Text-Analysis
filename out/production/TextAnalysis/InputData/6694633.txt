Towards Adaptive False Alarm Reduction Using Cloud as a Service

Abstract?False alarms are a challenging issue for an intru- sion detection system (IDS), which can significantly decrease the effectiveness of detection and heavily increase the burden on analyzing true alarms. With the advent of cloud computing, it is a big chance to mitigate this problem in such a promising environment. In our previous work, we proposed to construct an intelligent false alarm filter by selecting an appropriate algorithm in an adaptive way, whereas the additional workload may be an issue for implementation. In this paper, we begin by presenting a Generic Cloud-based Intrusion Detection Architecture (GCIDA) and we then propose a cloud-based solution to improve the false alarm reduction and reduce the workload using Cloud as a Service (CaaS). In addition, we also describe the procedures and the interactions between the Cloud nodes and the Cloud providers. Experimental results indicate that CaaS can provide sufficient computing power and greatly reduce the workload of adaptive false alarm reduction.

Keywords-Intrusion Detection, Cloud Environment, Network Performance, False Alarm Reduction, Cloud as a Service.



I. INTRODUCTION  Network intrusions have already become a critical issue for network security [16], thus intrusion detection systems (IDSs) [18] are widely deployed in a network environment to defend against different kinds of attacks (e.g., host-based attacks, network-based attacks). Generally, based on their data sources and deployed sites, IDSs can be categorized into three types: host-based intrusion detection systems (HIDSs), network-based intrusion detection systems (NIDSs) and dis- tributed intrusion detection systems (DIDSs).

Specifically, there are three major detection methods for the current IDSs: signature-based detection, anomaly-based detection and hybrid detection. Therefore, the corresponding IDSs are called signature-based IDS, anomaly-based IDS and hybrid IDS. A signature-based IDS (or called misuse- based IDS) [15] detects an attack by comparing incoming events with its stored signatures1 and can generate an alert if an accurate match is confirmed, while an anomaly-based IDS [6] aims to identify significant deviations by comparing current system or network events with a pre-defined normal profile. An abnormal event can be detected if the deviation exceeds a pre-determined threshold. A hybrid IDS [22, 28]  1A signature is a kind of descriptions to represent a known attack with some features .

is capable of performing both signature-based detection and anomaly-based detection.

False alarm problem. Both a signature-based IDS and an anomaly-based IDS suffer from the false alarm problem in real settings. A large amount of alarms especially false alarms cloud be generated by an IDS during the detection process [10]. For the anomaly-based IDS, its false alarm rate is much higher than that of a signature-based IDS [20], as it is very hard for an anomaly-based IDS to establish an accurate and appropriate normal profile in most cases [4].

Therefore, the false alarm issue is regarded as a key limiting factor to hinder the performance of an IDS [4].

Motivation. To mitigate the above problem, in our pre- vious work [11], we proposed an approach of constructing an intelligent false alarm filter by selecting an appropriate algorithm in an adaptive way. Experimental results indicated that our approach could achieve good performance whereas the workload may be a concern for a computer.

With the advent of cloud computing, it becomes feasible to improve the performance of an IDS in such a promising platform. Broadly, cloud computing can be interpreted as the delivery of computing and storage capacity as a service to a community of users. There are three types for cloud comput- ing: Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). Cloud providers offer and manage a specific infrastructure, while cloud users utilize the provided services to accomplish their own tasks.

Based on the concept, cloud computing can provide several desirable features such as access independence, scalability and elasticity, sufficient computing power, etc. It is a big chance to improve the performance of an IDS, especially a distributed IDS, when deployed in a cloud environment. In this work, we thus attempt to implement the adaptive false alarm reduction in a cloud environment.

Contributions. In this paper, based on our previous work in false alarm reduction [11], we mainly aim to mitigate the false alarm issue in a cloud environment. The contributions of our work can be summarized as below:  ? Cloud environment can offer sufficient computing re- sources as a service for an IDS (e.g., distributed IDS).

In order to better illustrate our cloud-based solution, in this work, we begin by introducing a Generic Cloud- based Intrusion Detection Architecture (GCIDA) that      was implemented in our experiment.

? Cloud environment is capable of providing various  services to users as demand, which we called Cloud as a Service (CaaS). Based on the CaaS and the GCIDA, we propose a cloud-based method of adaptively reduc- ing false alarms according to specific IP sources. In addition, we describe the specific interactions between the cloud nodes and the cloud providers.

? The experimental results, by comparing them with our previous work, indicate that our cloud-based approach can greatly reduce the workload of adaptive false alarm reduction by at least 24%.

The remaining parts of this paper are organized as follows: in Section II, we review some related work about cloud computing and intrusion detection; we present a Generic Cloud-based Intrusion Detection Architecture (GCIDA) and describe our proposed cloud-based solution of adaptive false alarm reduction in Section III; in Section IV, we simulate a cloud environment, describe our experimental methodology and present experimental results; finally, we conclude our work with future directions in Section V.



II. RELATED WORK  Cloud computing, which refers to both the applications delivered as services over the Internet and the hardware and systems software in the data centers that provide those services [3], has been applied to many fields (e.g., Mobile phones [7], intrusion detection [2]). In turn, cloud environ- ment is easily becoming a target for intruders looking for possible vulnerabilities [23]. For instance, an attacker can use cloud resources maliciously by impersonating legitimate cloud users. To protect the cloud environment from various attacks, intrusion detection systems have been investigated in such an environment.

In actual, cloud computing and intrusion detection sys- tems have a great relationship. To better deploy an IDS in a cloud environment, Roschke et al. [17] proposed and implemented an extensible IDS management architecture for different kinds of users and different kinds of requirements.

Their management architecture was mainly composed of several sensors and a central management unit. By combin- ing the virtualization technology and known VM monitor approaches, they indicated that this management system could handle most of VM-based IDSs. Then, Vieira et al. [23] proposed a Grid and Cloud Computing Intrusion Detection System (CCCIDS) to detect both network-based and host-based attacks by employing an audit system with both knowledge and behavior analysis. In particular, each node identified local events that represented security viola- tions and interacted with other nodes. Similarly, Yassin et al. [26] developed a Cloud-based Intrusion Detection Service Framework (CBIDS) to identify malicious activities from different points of network. That is, different layers? traffic would be monitored and only interested packets would be  further analyzed in the CBIDS. In addition, a similar model of CIDS was also proposed by Kholidy and Baiardi [9] to solve the deficiencies of current IDSs.

To address the security issues in a cloud environment, Doelitzscher et al. [5] proposed an autonomous agent- based incident detection system with the purpose of solving new cloud specific security issues (i.e., the abuse of cloud resources). Specifically, their proposed Security Audit as a Service (SAaaS) incident detection system was built on intelligent, autonomous agents for collecting data, analyzing information and distributing underlying business process.

Later, Alharkan and Martin [2] presented an Intrusion Detection System as a Service (IDSaaS) to enhance the cloud provider?s security infrastructure. The IDSaaS was developed to monitor and log suspicious network behaviors between virtual machines and within a Virtual Private Cloud (VPC). Several other survey papers regarding cloud security issues can refer to [1, 8, 12, 13, 21, 25, 27].

It is easily visible that the cloud environment can offer great and sufficient computing resources to an IDS, while an IDS can provide indispensable protection to safeguard the cloud environment. In this work, we focus on improving the performance of an IDS by means of cloud computing in the particular fields of adaptive false alarm reduction. Specifi- cally, we propose a cloud-based approach of implementing the adaptive false alarm reduction based on the CaaS and we further simulated a cloud environment and presented some preliminary results of our proposed solution.



III. OUR PROPOSED METHOD  As described in Section II, a number of cloud-based mod- els have been proposed in intrusion detection. In this section, we begin by presenting a generic cloud-based model that is adopted in our work. We then describe our developed cloud- based solution of conducting adaptive false alarm reduction and describe detailed interactions in the architecture.

A. Generic Cloud-based Intrusion Detection Architecture  Generally, when deploying a traditional IDS in a cloud environment, there are existing some issues shown as below:  ? Network-based IDS: a network attack can be silent in the Cloud environment, since node communication is usually encrypted. In this case, it is hard for an IDS to work effectively in the cloud.

? Host-based IDS: this kind of attacks can be invisible to host-based IDS because these attacks can crack a target without leaving traces in a node?s operating system.

Due to these problems, a traditional IDS cannot effectively identify attacks or suspicious activities in the cloud envi- ronment. To mitigate these issues, several cloud-based IDS models have been proposed (see Section II), whereas these models have some common characteristics (i.e., with several similar components) as compared to each other. As shown in Fig. 1, we summarize these features and present a Generic     Alarm Process System  IDS Analyzer  Cloud Node  A ud  it Sy  st em    Knowledge Database  Behavior Database  Cloud Service  Alarm Process System  IDS Analyzer  Cloud Node  A ud  it Sy  st em    Knowledge Database  Behavior Database  Cloud Service  Cloud Provider  Control System Control System  ?? ??  ?  Figure 1. The Generic Cloud-based Intrusion Detection Architecture (GCIDA).

Cloud-based Intrusion Detection Architecture (GCIDA). The main components are described as follows:  ? Cloud Node. A cloud node is offered by cloud providers and includes various services and resources (e.g., vir- tual machines, access control policies). In such an environment, these cloud nodes are usually organized in a homogeneous structure.

? Cloud Service. The service provides its basic function- ality in the cloud environment to facilitate communica- tion among different nodes.

? IDS Analyzer. The IDS analyzer is responsible for an- alyzing network or system events and detecting attacks using either signature-based detection or anomaly- based detection. These two approaches can be broadly denoted as knowledge-based detection and behavior- based detection. The knowledge-based detection (e.g., expert system) detects an attack based on known rules while the behavior-based detection (e.g., data mining) recognizes anomalies by identifying behavior devia- tions. Based on these two approaches, the IDS analyzer can increase its attack coverage.

? Knowledge and Behavior Database. The knowledge database is used to store knowledge related informa- tion such as signatures or rules, whereas the behavior database is used to store behavior related information such as user profiles, system profiles, etc.

? Alarm Process System. This system is mainly responsi- ble for operating on the IDS alarms (i.e., reducing false alarms and communicating with other nodes).

? Audit System. The audit system is mainly responsible for recording environment states and messages being exchanged in the cloud. Based on specific demands, this system can log users? behavior such as login and logout trails, monitor the IDS analyzer for anomalies and record all middleware events. The audit data can facilitate the behavior-based detection.

? Control System. As an extensible and configurable com- ponent, this system can be designed to provide various  services to other system in the cloud. For example, the control system can act as an analysis server to correlate different alarms from other nodes, and it can also be responsible for updating the knowledge database and the behavior database.

B. Adaptive False Alarm Reduction in the Cloud  As mentioned earlier, false alarms are a big challenge for an IDS. In our previous work [11], we have proposed a machine learning-based approach of constructing a false alarm filter and adaptively reducing these false alarms. By adaptively selecting the most appropriate algorithm which performs the best performance, the false alarm filter achieved good results in our experiments whereas the workload is a concern for implementation. In this work, we propose a cloud-based solution aiming to implement the adaptive false alarm reduction in a cloud, which can reduce false alarms according to specific IP sources.

Alarm Process SystemIDS Alarms  In tr  us io  n D  et ec  tio n  Sy st  em   Machine Learning Algorithm Selection  Cloud as a Service  Control System  True Alarm  Data Standardization  Figure 2. The high-level architecture of adaptively reducing false alarms using Cloud as a Service.

As shown in Fig. 2, we describe the high-level architecture of adaptive false alarm reduction by means of Cloud as a Service (CaaS). The CaaS contains four major components: Data Standardization, Machine Learning Algorithm Selec- tion, Control System and Alarm Process System. The com- ponent of Data Standardization is responsible for extracting and converting the incoming IDS alarms into the standard alarms that are represented by using some related alarm features. For example, in [11], we used a 8-feature set to represent a Snort alarm including description, classification, priority, packet type, source IP address, source port number, destination IP address and destination port number.

In particular, the component of Machine Learning Al- gorithm Selection is used to select the most appropriate machine learning algorithm from a pool of algorithms by training with a number of labeled alarms. The most appro- priate algorithm is denoted as the algorithm with the best classification rate and precision rate. The Control System is mainly responsible for comparing the performance of different machine learning algorithms and deciding the most appropriate algorithm used for alarm reduction. The Alarm Process System is mainly responsible for reducing false     Table I INTERACTIONS BETWEEN CLOUD NODES AND CLOUD PROVIDER.

Procedure Requiring False Alarm Reduction Note: Cloud Nodes (CN) and Cloud Provider (CP)  Begin CN sends a request R and an Identity I CP ? {R,I} CP send back a feedback F and a decision D if |D|==1 Connection established else Connection failed  When |D|==1 CN sends data D to CP CP receives D and processes it  alarms based on the selected algorithm and maintaining a scheme-database for different IP sources. With the increase of labeled training data, the selected algorithm for a specific IP source may be varied. The outputs of the Alarm Process System are considered as true alarms.

C. Procedures and Interactions This section presents detailed procedures and interactions  between the components in the above architecture.

1) Cloud Node: When a cloud node requires to reduce  false alarms within a cloud, it can send a request to the cloud provider. Then the cloud provider can send back a feedback and establish a valid connection. The specific procedures are described in Table I.

2) Cloud Provider: When the connection is established, the cloud nodes can send data to the cloud provider. On the cloud provider?s side, we implement a Cloud Manager (CM) as a core component to mange all the other components in- cluding Data Standardization, Machine Learning Algorithm Selection, Control System and Alarm Process System. The specific interactions are shown in Table II.

Table II shows that there are totally four phases regarding the cloud provider, corresponding to the four components.

The task of Phase 1 is to extract alarm features and convert the received data to standard alarms. Then in Phase 2, the Cloud Manager can decide whether to conduct the algorithm selection in multi VM machines to speed up the process of selection and decrease the computational burden. Then, the cloud manager sends the results to the control system. In Phase 3, the control system (CS) decides the best algorithm based on the given metrics. Later, the Alarm Process System (APS) reduces false alarms by using the selected algorithm and outputs true alarms. Finally, the cloud manager sends back the output true alarms to the cloud node.



IV. CASE STUDY AND EVALUATION In this section, as a case study, we simulated a cloud  environment to evaluate the performance of adaptive false alarm reduction using the CaaS. The simulated cloud en- vironment was established based on our presented GCIDA by utilizing several physical and virtual machines (e.g., 10 virtual machines) in our CSLab.

Table II INTERACTIONS FOR THE CLOUD PROVIDER.

Procedure False Alarm Reduction Note: Cloud Manager (CM) and received data (D)  Begin Phase 1: Data Standardization (DS).

DS ? D DS extracts the features and convert D to standard alarms (SA)  Phase 2: Machine Learning Algorithm Selection (MLAS).

CM sends SA to MLAS CM decides whether to conduct algorithm selection in multi VM machines MLAS conducts algorithm selection on SA CM manages MLAS to send results to Control System  Phase 3: Control System (CS).

CS receives the results from MLAS CS compares the results and make a decision CS outputs the best algorithm R  Phase 4: Alarm Process System (APS).

APS ? SA APS ? R APS conducts false alarm reduction and outputs true alarms (TA) APS sends TA to CM  CM sends TA to CN End  A. Experimental Methodology  In the evaluation, we mainly conducted two experiments (named Experiment1 and Experiment2) to investigate the initial performance of adaptively reducing false alarms using Cloud as a Service (CaaS).

? Experiment1: We used two types of IDSs: Snort [19] and Bro [14] in this experiment. Through forwarding their generated alarms to our proposed architecture (see Fig. 2), we mainly attempt to evaluate the performance of conducting the adaptive false alarm reduction in a cloud environment.

? Experiment2: In this experiment, we used a real Snort alarm dataset which was labelled by means of expert knowledge. By comparing the current method with our previous work [11], we aim to explore the effect of the cloud-based method on workload reduction.

B. Experiment1  In this experiment, we mainly explored the performance of adaptively reducing false alarms in the cloud environment.

We used two types of IDSs: Snort and Bro, and their alarms could be extracted and represented by means of the above mentioned 8-feature set. During the algorithm training, all the features will be marked with their appearance possibility in terms of the alarm dataset aiming to ensure the correct operations of algorithms. In the pool, it contains seven specific machine learning algorithms: ZeroR, KNN (IBK), SVM (LibSVM), NaiveBayes, NN (RBFNetwork), DT (J48) and DT (RandomTree). All the algorithms were extracted     from the WEKA platform [24], which provides a set of algorithms, in order to avoid implementation bias.

As shown in Fig. 2, the Control System is responsible for comparing the performance of different machine learning algorithms and determining the most appropriate algorithm with the best performance. We used two measures in decid- ing the performance of algorithms as below:  Classification accuracy = N1 N2  . (1)  Precision of false alarm = N3 N4  . (2)  where N1 represents the number of correctly classified alarms, N2 represents the total number of alarms, N3 represents the number of alarms classified as false alarm, N4 represents the number of false alarms. Ideally, a desirable algorithm is expected to have a classification accuracy of 1 and a precision of false alarm of 1.

The same in [11], we define a decision value to determine the best algorithm. The calculation is described as below:  decision value = 0.4? CA + 0.6? PFA (3) where CA represents the classification accuracy and PFA  represents the precision of false alarm.

0 2 4 6 8 10          A la  rm R  ed uc  tio n  R at  e (%  )  Time (h)  IP1 IP2 IP3 IP4 IP5  Figure 3. The results of false alarm reduction in the Experiment1.

We constructed an alarm dataset for 5 different IP sources denoted as IP1, IP2, IP3, IP4 and IP5. The dataset was collected in our previous work [11]. The results of alarm re- duction rate are presented in Fig. 3. The algorithm selection was updated in each hour with 50 new training examples. It is visible that the alarm reduction rates for these IP sources are maintained at a good and stable level (i.e., the rate is above 78% for the IP1 while is above 84% for the IP3). The 5-hour results of algorithm selection are shown in Table III.

It is visible that the selected algorithm is adaptive according to different IP sources (i.e., for the first hour, the selected algorithm for the IP1 is SVM (LibSVM) while the selected algorithm is DT (J48) for the second hour). The algorithm  Table III THE RESULTS OF ALGORITHM SELECTION FOR THESE IP SOURCES IN  THE Experiment1.

Time (h) IP1 IP2 IP3 1 SVM (LibSVM) DT (J48) DT (J48) 2 DT (J48) DT (RandomTree) DT (J48) 3 KNN (IBK) KNN (IBK) DT (RandomTree) 4 DT (J48) DT (J48) KNN (IBK) 5 KNN (IBK) SVM (LibSVM) DT (J48)  Time (h) IP4 IP5 1 DT (J48) KNN (IBK) 2 SVM (LibSVM) DT (J48) 3 SVM (LibSVM) KNN (IBK) 4 KNN (IBK) KNN (IBK) 5 KNN (IBK) KNN (IBK)  selection is determined by IP-specific labelled alarms. These results indicate that the adaptive false alarm reduction can perform well in a cloud environment.

C. Experiment2  In this experiment, we mainly attempt to evaluate the workload of our proposed cloud-based method, by using a real Snort alarm dataset, as compared to our previous work.

The Snort alarm dataset was collected by a Snort-included Honeypot project2 deployed in our department with a public domain. Anyone can access the Honeypot anywhere with an Internet connection.

In particular, we divided this alarm dataset into 5 parts (e.g., Part1, Part2,..., Part5) and each part contains nearly 10000 alarms labelled by means of expert knowledge (i.e., guiding by experts). By testing with this real dataset, we present the CPU workload between the cloud-based method and our previous work in Fig. 4.

Part1 Part2 Part3 Part4 Part5           A ve  ra ge  C P  U (%  )  Part Number  Cloud-based Method Previous Work  Figure 4. The CPU workload of the cloud-based method and the previous work.

In this figure, we can find that the workload (average CPU occupancy) of the cloud-based method is greatly lower than the previous work (i.e., for the Part2 and the Part5, the CPU  2http://www.honeybird.hk/     occupancy is nearly 35%). Compared to our previous work, we can find that the cloud-based method can reduce the workload by at least 24% (i.e., the reduction is 38.4% for the Part1, is 35.7% for the Part2, is 24.2% for the Part3, is 29.1% for the Part4 and is 37.8% for the Part5). The experi- mental results show that the workload of adaptive false alarm reduction can be greatly reduced in the cloud environment.

An even larger evaluation regarding the workload reduction will be conducted in our future experiments.



V. CONCLUSION AND FUTURE WORK  False alarms are a major challenge for an IDS. With the advent of cloud computing, in this paper, we therefore at- tempt to mitigate this issue in a cloud environment based on our previous work. In particular, we first present a Generic Cloud-based Intrusion Detection Architecture (GCIDA) that was adopted in our work. We further proposed a cloud-based approach of conducting the adaptive false alarm reduction by means of Cloud as a Service (CaaS). In the evaluation, we conducted a case study and investigated the performance of our proposed approach in a cloud environment. The experimental results were promising that the alarm reduction rate could be maintained at a high and stable level, and that the workload of adaptively reducing the false alarms can be decreased at least 24% in the cloud environment as compared to our previous work.

Our work is an early work in discussing the adaptive false alarm reduction in a cloud environment. There are many possible topics for our future work. One is to apply the proposed architecture of adaptive false alarm reduction to a real cloud environment. Future work could also include exploring how to detect attacks by link-analyzing the alarms generated under this environment.

