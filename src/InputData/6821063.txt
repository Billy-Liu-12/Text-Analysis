Design and Analysis of the Virtual strategy in Satelite  Networks

Abstract? Satellite network users want to unify different satellites to enhance the stability of the satellite networks and use different communication networks to feed different applications.

Unfortunately, the state of affairs is that different applications need to use several different application programming interfaces and to design protocols on how and when to use a specific communication network. This is troublesome, error-prone and application programming interfaces vary a lot. In this paper, we design and implement a virtual strategy in satellite network. We analysis why applications should use and benefit from virtual strategy. This virtual strategy is a middleware solution that enables seamless usage of different satellite networks. Thus we provide a comparison between the previous satellite networks and our work. The simulation results show that our virtual strategy performs well when the satellite network architecture is complex.

Keywords? satellite network; virtual strategy; middlewar

I. Introduction? We have witnessed a rapid development in satellite  network communication technologies during the past decades.

New applications try to leverage this new wireless and wired technologies. Unfortunately, most of them use specify networks but are expected to be able to connect to the Internet.

Also, different applications mostly use socket interface and associated application programming interfaces that differ between programming languages and operating systems.

An application that wants to use several communication technologies for sending and receiving data has to decide what technologies, programming languages and protocols it wants to use. The used communication technologies might be locally connected or remote. This brings yet another problem: how to use, configure and share a remote device.

In the past few years, several methods have been studied intensively [1-5]. Some papers propose the use of multi- protocols [6] for supporting different applications in the same networks, but it will enhance the complexity of the operation system, while other papers support multi-applications programming interfaces [7] which needed to switch by handed.

Regardless of the multi-protocol-based or multi-interfaces- based strategy, a common opinion is that a unified strategy control plane provides individual network resource usage across the entire network than when an independent control plane per application is used. That is why we introduce the virtual strategy [8-11] into the satellite networks.

In this paper we design a virtual strategy, which is a middleware solution that provides a unified interface that applications can use to gain access to any communication technology, configure their properties, and to transmit and receive data messages. The actual communication device can be remote or locally attached as the current communication method. The use cases of virtual strategy can be found from video and energy applications while data messages simply need to reach their destinations and the used communication medium does not matter. The contributions and benefits of virtual strategy are a unified protocol instead of multi- protocols, different applications in different operation systems similarly to one operation system and some physical communication satellites similarly to one enhanced satellite.

Rest of the paper is organized as follows. In Section , the logical architecture of the satellite network including the virtual strategy middleware is given, as well as the main details of the middleware control mechanism. Section proposes the virtual strategy details and design the mapping algorithm which make the satellite devices into the virtual network resources. Section  presents simulation results and discuss about real satellite implementations. The paper is concluded in Section .



II. Overview?of?Logical? Architecture?  Virtual strategy can be considered to be message oriented middleware. It provides message sending in a store and forward or streaming fashion and network configuration services to applications. It makes the physical satellite networks into the virtual satellite networks.

DOI 10.1109/CLOUDCOM-ASIA.2013.109    DOI 10.1109/CLOUDCOM-ASIA.2013.109    DOI 10.1109/CLOUDCOM-ASIA.2013.109     As shown in Figure 1, Satellite network virtualization, by means of resource consolidation that set several virtual instances in one physical resource device, will be an enabler for resource savings in future infrastructure networks. Several satellites would be seemed to be one enhanced logical satellite underlying the physical satellite devices. As shown in Figure 2, after a k-cluster algorithm, the satellites in different orbit and different altitude would be divided into different part with its neighbors as the application demand.

Fig. 1 relation of virtual network and real network  Fig. 2 relation of virtual network and real network  Applying virtualization of network resource leads to the problem of allocating virtual network demands to physical network resources. The dynamic satellite network will mainly exploit periods of low traffic demands, when some routers and interfaces can be switched off by rerouting the traffic to a smaller set of consolidated network equipment with increased utilization.

Figure 3 shows the overview of the virtual strategy middleware and the interactions between virtual networks and the physical satellite devices.

Fig. 3 virtualization-based satellite network architecture  This architecture is similarly to the virtualization system in terrestrial ground networks. In state-of-the-art virtualization systems, this is often achieved through the use of a software module known as a middleware, which works as an arbiter between a virtual network and the underlying physical devices.

The use of the virtual strategy middleware brings many advantages, such as satellite power enhanced, device sharing, performance isolation, and even security between running virtual networks.

Having to consult the middleware each time a virtual network makes a privileged call, however, introduces considerable overhead as the middleware must be brought online to process each request.



III. Virtual?Strategy?and?Mapping? Algorithm?  In this paper, virtual strategy as a middleware, provide service for applications. By network interface, or simply interface, a combination of hardware and software that can interactive physical satellite network and virtual satellite network to provide some useful properties which can be listed as follows:  ? Address mapping: Each satellite network has its own native address but applications don?t want or need to know about them. Virtual strategy middleware offers an address mapping between applications and networks native address formats. Thus applications only need to understand its own addresses.

? Neighborhood discovery and management: Usually applications need to know where the recipient of a message is found, thus they need to discover and manage their application neighbors. Virtual strategy middleware can also be used to abstract this tedious task: applications only need to say that they want to send to this neighbor.

? Queue management: Due to several network characteristics, messages may need to sit in a queue or be retransmitted. Virtual strategy middleware abstracts     this from applications that only need to define if a message needs to be transmitted reliably or unreliably.

? Network switching at failure: Communication network can go down at any time. If an application relies only on this network, its operation stops. If there are several networks available virtual strategy middleware can help to do the switching to an alternative satellite network.

? Traffic control: Virtual strategy middleware can has its own traffic control mechanism that obtains network?s forwarding capabilities and does not saturate any network.

? Network interface configuration: Virtual strategy middleware can be used to configure any network interface using logical-based configuration. Interface tells what parameters are configurable and applications or users can do the necessary adjustments.

The solutions to full realize virtualization can be broadly split into some categories, as described below.

A. Virtual Satellite Network Model As already mentioned, virtual satellite network is defined  as a combination of virtual satellite nodes and virtual links, but not established. Virtual satellite nodes are logic satellite nodes, which represents some neighbor satellite devices in the same region. Virtual links represents the potentiality to set up a virtual network with link state of the physical networks.

A virtual link can be either fully or partially determined before its establishment. When it is fully determined, the path of underlying link state is entirely pre-computed and stored.

When it is partially determined, only some of the information is known, allowing flexibility for the establishment of the associated link state.

The main advantage of using virtual satellite nodes and virtual links instead of pre-established physical network in virtual network configuration is that, in the latter, the associated optical nodes and links occupy resources that may not be optimally computed. This may preclude the use of such optical resources to set up other, eventually more appropriate, virtual networks.

1) Original Network Model Original Network is denoted as a weighted undirected  graph ( , , , )S S S S SN LG N L C C? , when SN  is the set of  original nodes, SL  is the set of original links. Nodes have the attribute of capacity which denoted as SNC  and the  S LC  represents the bandwidth of the original links. We use the symbol SP denote the set of original paths.

2) Virutal Network Model Similar to the original network, virtual network request is  also characterized by a four-tuple. ( , , , )V V V V VN LG N L C C? , VN  is denoted as the set of nodes and VL  represents the set  of links in the virtual network. VNC  and V LC  represent the  node and link constraints respectively.

B. Mapping Algorithm Mapping algorithm established a bond based on the  physical network and the virtual network. Its procedure includes two steps: node assignment and link assignment, the details are listed in the following:  1) Node Assignment Virtual node in the virtual network request is mapped to  some physical nodes which has more available resource than virtual node request.

: ( , )V S V V S SNM n n n N n N? ? ?  Subject to: ( ) ( )S VC n C n? In this paper, each physical node can host only one virtual  node in virtual network request.

2) Link Assignment Each virtual link in the virtual network is mapped to a  physical path.

: ( , )V S V V S SLM l p l L p P? ? ?  Subject to: ( ) ( )( )S V S SC l C l l p? ? .

3) Algorithmt procedure The pseudo code of the mapping algorithm is as follows.

The mapping algorithm Input: The physical satellite network Output: The virtual satellite network Set physical node array Vp[N]; Set physical link array Lp[X]; Set virtual node array Vv[M]; Set virtual link array Lv[Y]; While(K-cluster algorithm)  { for i=1 to M Vv[i]=Vp[k]; }  End while For k=1 to Y  For i=1 to M For j=1 to M  Link Vv[i] and Vv[j]; End for  End for Lv[k]=link Lp[i] and Lp[j] End for

IV. Smulation?and?Analysis? The best way to show the difference in overhead between  original satellite networks and the satellite networks with virtual strategy middleware is a small experiment. To this end,     we designed an experiment to measure the overhead of sending and receiving on different systems.

We use some computer with OPNET software to simulate the satellite nodes and compiled a virtual strategy middleware from source and installed it in our test system. Our test system was a modern mid-range PC with an Intel Core 2 Q9500 quad core processor running at 2.83GHz. The PC was equipped with 4 Gbytes of 1333MHz DDR-3 SDRAM and a 320Gbyte 7200 RPM hard drive with 16 Mbytes cache. The physical network interface is a 1000Mb/s Broadcom Ethernet adapter attached to the PCI-E bus.

We use the hardware performance analysis tool Perf to collect system-level statistics such as processor cycles consumed, the processor?s last level cache (LLC), interrupt requests, and processor context switches. The results for the receiving experiment are given in Table 1.

Obviously, in the receiving experiment, satellite network with virtual strategy takes nearly two times more cycles to deliver the packets to the original satellite network.

Figure 4 and figure 5 are obtained results with regard to two different metrics: link congestion percent and request accepted with the load increasing. From these results we can extract the following observations:  ? Satellite network with virtual strategy can provide more link resource to transmit the packet than original satellite network.

? Satellite network with virtual strategy can support more application request and give better service performance than original satellite network.

TABLE I. SYSTEM PERFOMANCE WITH 10MB/S TRAFFIC  Elements Original Satellite Network Satellite Network  with Virtual Strategy  Processor cycles 50.6M/s 94.7M/s  LLC 2.1M/s 3.7M/s  Interrupt requests 2400/s 4900/s  Context switches 449/s 449/s  Fig. 4 link congestion percent with the load increasing  Fig. 5 request accepted percent with the load increasing

V. Conclusion? Handing multiple kinds of application for different  network can be a tedious task. Current solutions for this have been concentrated around terrestrial ground network, as IP Internet, and neglected the fact that there is a multitude of space networks, as satellite network, that are not fit for these methods.

In this paper we present virtual strategy as a middleware that gives applications a possibility to use any satellite in their messaging. We modify the satellite network logic architecture and analysis messaging traffic performance in this new system.

The results show that the virtual strategy concept is feasible and can be easily extended.

As a future work we need to design another virtual strategy and do some baseline testing with the works of others to see how this virtual strategy and other virtual strategy compare.

