Cost Efficient Data Collection of Sensory Originated  Data using Context-Aware Mobile Devices

Abstract- Sensory originated data collection and processing  has always been a big challenge in wireless sensor networks (WSN). WSN represent a distributed producer of large amount of valuable data required by varied number of applications. In this paper we propose the use of context aware data mules (CADAMULE) as a solution for smart data collection within sensor networks. We present an extension to Context Spaces modelling theory by incorporating context discovery at runtime.

This facilitates our system to discover new context attributes by looking into previous situations and events when pre-defined context is not sufficient for the reasoning process. We use this model as a base to provide contextual information to the mobile data mule whose spare capacity for communication and processing can be used to collect and process sensor data. The focus of the paper is to propose and evaluate a cost-efficient data collection technique which uses a cost formula computed from the context information obtained by the system. We validate our system by a simulation in which we try to reason out and identify the best and also the most cost efficient data mule. The context aware data mule negotiates with the sensor node collecting and delivering the data to the sink.



I. INTRODUCTION  Sensor networks have gained a lot of prominence during recent years due to increasing number of applications in various fields including healthcare, environmental monitoring, smart homes, military applications etc [1]. With increased interests and applications, sensor nodes have found themselves embedded in almost everything including computing devices, vehicles, humans, animals etc, the result of which is large amount of sensory originated data which needs to be collected efficiently and effectively. Sensor nodes are distributed and work together to achieve single or multiple goals producing massive amounts of valuable data. They also are energy constrained devices [2]. Hence data collection within such energy constrained, valuable data producing network is a major challenge. The monitoring abilities, autonomous operation of sensor nodes make them an excellent choice for application like structural monitoring, health monitoring, environmental monitoring etc. Some of these applications need real time data while the rest are tolerant to delay.

A number of approaches have been presented in the past that enable data collection within sensor networks. The initial methods used direct communication with the sink when sink is in range or a multi hop strategy to deliver the data to the sink.

These techniques are not smart, hence resulting in either non uniform energy depletion of nodes near the sink or faster energy depletion of all the nodes due to direct communication  [18]. Later methods proposed the use of mobile elements as data collectors within sensor network [3, 4, 5]. These approaches are a platform for our proposed approach where we use data mules as data collectors for sensor data. We define context as information that is available in the environment which can be used by the data mule to efficiently collect sensor data. To enable cost efficient data collection, we harvest the use of existing mobility within the environment hence forming a 3 layer intelligent heterogeneous network [14] with layer 1 comprising sensor networks, layer 2 comprising mobile data collectors like personal digital assistants, mobile phones, laptops etc. and layer 3 comprising the backbone network as illustrated in figure 1. The layer 2 mobile data collectors of our intelligent heterogeneous network are context aware and hence we term them context aware mobile data mules (CADAMULE).

In this paper, we extend Context Spaces theory [19, 20, 21] which models context based on spatial metaphors. The context spaces approach models context and situation and reasons about context under uncertainty. Our approach proposes  discovering context attributes at runtime to achieve efficient data collection. We also propose a cost formula based on existing and newly discovered context information. The idea of using existing mobility to achieve sensor data collection brings along a number of challenges including negotiation, mobile node selection, paying for resources, power-aware communication protocols and cost efficient data collection.

Fig. 1.  Intelligent Heterogeneous Network     The cost here is not an elementary value but comprises a number of components. The cost involves cost in data collection, cost in data delivery, energy and power cost involved during collection and delivery etc. Our cost here can also be defined as context attributes for a specific data collection situation with each attribute having a range of values and a specific value at time T. To arrive at a cost based solution, we argue that working on a predefined set of cost attributes is just not sufficient. Discovering new attributes will have a major influence on the computed cost in a specific situation. We present our approach of discovering context at runtime as a solution to the above challenges on which, various power aware communication protocols, cost negotiation protocols can be developed.

The structure of the paper is as follows: Section 2 looks at previous work in this area and presents our approach identifying the novelty in our approach. Section 3 presents a broad overview of our proposal in using context aware mobile devices as data collectors. In Section 4 we present our theory behind extending context spaces approach. In section 5 we map our context spaces approach to sensor data collection and present a simulation to validate our approach. Section 6 concludes the paper.



II. SENSOR DATA COLLECTION ? AN OVERVIEW  Sensor data collection is one of the major issues in sensor network. The sensor network is a data centric network comprising distributed sites of data produced by sensor nodes [2]. The key challenge is to minimize the energy spent while transmitting sensor data back to the sink. Data collection techniques can be broadly classified into two major types  ? Static nodes based data collection ? Mobile elements based data collection The use of mobile element to collect sensor data has been  proposed in recent years. Our approach is to use context aware mobile data collectors to enable data collection. Hence we don?t investigate too much into static node based data collection. The idea of using mobility within sensor network to collect data from sensor nodes has been discussed by a number of researchers [3, 4, 5, 6, 7, 8, 9]. The use of mobility to improve performance in Ad-Hoc networks has been proposed in ZebraNet project [23] and Manatee project [3]. The introduction of mobile elements explicitly into environment might sometime increase the system overheads. But this increase in cost is marginal when compared to the benefits obtained by the increase in the lifetime of the network.

Mobility based data collection can be classified primarily as  ? Random mobility ? Predictable mobility ? Controlled mobility.

In random mobility [10, 3], ?data mules? that move  randomly collect data e.g. humans, animals. In predictable mobility, mobile elements with predictable movements are used to collect data e.g. nodes mounted on buses [11]. In  controlled mobility, the movement of the mobile element is controlled by the user [5, 4, 12].

Shah et al. [3] and Sushant et al [13] present data mules that make use of random mobility. They present data mule based three layer architecture that works in a 2D plane where the first layer comprises the sensor nodes, second layer comprises mobile elements in the environment as data mules that collect data from the sensor nodes and the third layer comprises the data sinks. The issue with this approach is that the data mule needs to be equipped with special receivers that enable them to talk to the nodes. This idea uses random mobility and hence data delivery is not guaranteed. Also there is not much work on context awareness when using random mobility to achieve data collection. The Mule?s presented are independent of each other and do not exchange data among themselves.

Chakrabarthi et al. [11] proposes a novel way of using predictable mobility to collect data from sensor networks that are distributed over an area. In his proposal, an observer that collects the data from the sensor nodes is mounted on top of a shuttle bus that collects the data from the sensor nodes that are distributed along the path of the shuttle bus. With this approach too, the route of the bus is known before hand and hence not much context for changing environments. Again this approach does not consider context and does not decide on if the data collector is the best to collect the data or not. It also depends on pre known sensor node locations and fixed time intervals and does not work in discover, negotiate and transmit approach as our proposal does.

Kansal et al. [4, 12] presents controlled mobility for data collection in sensor networks. Kansal et al uses mobile robots that move in along specified path around the wireless sensor network vicinity collecting data. The implementation makes use of Packbot a specially designed unmanned ground vehicle that can be controlled from a central location. The robot is equipped with transceiver that can talk to mica motes. Packbot communicates using 802.11 interfaces. The Simple Interface for Robots (SIR) is used to send simple commands to the Packbot to move it from one location to another. SIR is currently implemented on Linux and TinyOS. With this implementation, the path of the robot is fixed and is controlled by the user. Also the approach requires prior knowledge of the location in which the robot moves.

Our approach differs from existing approaches as CADAMULE works in a dynamic fashion discovering nodes on the run and hence does not require pre-fetched information about sensor node location. The discovery, negotiation and management of node are all performed at run time and a cost formula based on context information is used to decide on data collection. Some of the key contributions of this paper include the extension of Context Spaces theory by incorporating context discovery at run time hence increasing the confidence while reasoning under uncertainty and a cost formula based on our context spaces extension used to compute the confidence and cost involved in collecting and delivering data from the sensor node to the sink. For our implementations in [14], we      Fig. 3.  Context ? Situation Pyramid [24]  have been working with a Bluetooth based sensor node the MULLE sensor node [15,16] developed at EISLabs, Sweden.

The Mulle is an IP based sensor node that uses Bluetooth as its communication channel.



III. MOTIVATION  The motivation to our approach is the existence of billions of mobile devices with huge amount of spare capacity that can be used to form an access network. A survey conducted over three days at info security 2006 at London [17], resulted in discovery of more than 2000 Bluetooth enabled devices in visible mode.

Almost 90% of these devices that use Bluetooth were mobile phones and smart phones [17]. Our proposal explores the usage of context aware mobile device namely context aware data mules as a shared access network that can act as data carriers for the sensor data. To reduce the energy required for the sensor to communicate with the sink directly, we use context aware data mules to deliver data to the sink. Since almost every mobile device is equipped with Bluetooth, we look into the possibility of using mobile devices to communicate with sensor nodes over Bluetooth when they are in the surrounding environment. This solution is more practical due to the wide acceptance of Bluetooth standards in mobile technology but is not limited to just Bluetooth. Our proposal can be adapted to any evolving communication standards e.g. ZigBee [26].

Figure 2 gives a broad overview of our idea.



IV. DYNAMIC CONTEXT DISCOVERY ? A HEURISTIC APPROACH  In our previous work [14], we have proposed a system framework for the context aware data mule. We used MULLE sensor node [15, 16] to present a proof of concept implementation. In this paper we present the context model based on which we enhance our cost formula making it more complex and dynamic. The context model proposed in this paper is an extension of context spaces theory [19, 20].

The term context does not have a single definition, but in general refers to a particular centre of interest, providing added information about whom, where and when. We define context as a representation scheme for information that can be used for reasoning about situations. By context, we try to define relation between data available from various sources (e.g. sensors, devices, people etc.) and reason specific situations based on obtained data. We use the context pyramid presented in figure 3 to pictorially represent our interpretation of context [24].

Here sensor data is raw data that gets related based on specific situations occurring within the system context.

Context spaces look at representing context using a spatial  metaphor considering context as a multi-dimensional space.

Each attribute defined within a situation?s context will take a specific dimension to the context model. Padovitz et. al [18, 19, 20] has proposed context algebra, used to perform complex context operations over situation spaces. Context Spaces theory defines the following on which it reasons and models a specific situation.

Application Space It is defined as a tuple which represents the all the possible  values of context attribute associated with a specific application denoted by R.

Context Attribute An attribute that is used in the process of reasoning denoted  by ai.

Context State A set of context attributes related to a specific context at  time T denoted by Cs t = {a1t, a2t ? ant} Situation Space Represents a real time situation which consists of a list of  attributes corresponding to the specific situation S t = {A1j, A2j,? anj}  Context spaces theory uses probabilistic reasoning approach to reasons a specific situation hence arriving at a probabilistic confidence value. This confidence values increases or decreases the occurrence of a specific situation. Context spaces works on known attributes that correspond to a specific situation. We argue that this is not always enough to reason a specific situation. For e.g. to decide if a current event in a smart room is a presentation or a group discussion predefined context attributes like projector status, noise level and light levels may not be enough to arrive at a high confidence level.

Fig. 2.  Overview of using context aware mobile phones as data carriers for  sensor nodes      Hence we propose discovering related context at runtime as a solution to increase the confidence level while reasoning under uncertainty. These context attribute will alter the context model by adding a new dimension to the existing model. These attributes are defined in the application space and exists in the context state but need not be necessarily defined in the current situation space. We try to reason that, by discovering such attributes and their relation to the existing situation at time T, computing their weights and utility to the current situation space, we can increase/ decrease our confidence in a specific situation. By utility value, we represent the importance of a newly discovered context attribute to the existing situation. To achieve this, we define a few new operations on top of the ones proposed in Context Spaces theory.

Definition: Discover Function to dynamically discover context attributes. For this  we use a heuristic approach to discover additional context attributes by looking at related situation spaces, history and situation related events.

Definition: Relevance Relevance function looks at finding a relation between the  context attribute and the specific situation. It associates weights and utility factor to a attribute based on current situation.

Once we discover these new attributes, we re-compute the  weights, utility value and the overall confidence value for the situation. Based on increasing/ decreasing confidence levels, we diverge looking at more related context attributes till the confidence value reaches a threshold that is good enough to conclude the occurrence of the situation.

A. Discovering Context Attributes  Discovering context attributes at run time is a challenging  task. We are proposing a heuristic approach by constructing a graph based on recent events (history) relating to the current situation and trying to reason the relationship of each of this attribute to the existing situation. Hence to achieve dynamic context discovery, we redefine the situation space as a set of attributes that are distinguished as primary (ap) and secondary (as) attributes. We also define a new context attribute type namely dynamic context attribute which is a subset of the context attributes defined in the application space.

Definition: Situation Space A situation space consists of a set of core attributes a  secondary set of attributes which help in discovering new attributes. Hence S = {ap1t,ap2 t,ap3 t ?apn t } U {as1 t,as2 t,as3 t ?asn t }  Definition: Dynamic Attribute A dynamic context attribute di belongs to ai and is defined in  the application space.

We define di to explicitly state a dynamic attribute. di is  defined in the application space but need not necessarily be a part of the context state and the situation space.  Hence our  situation space will now be a union of pre-defined primary and secondary attributed with a set of newly discovered dynamic attributes.

S t = {ap1t,ap2 t,ap3 t ?apn t } U {as1 t,as2 t,as3 t ?asn t } U {d1 t,d2 t,d3 t ?dn t }  To discover these new attributes, we construct a graph that does a heuristic search into various related situations in the application space. It also looks into event history that relates to the specific situation or situations similar to the one being reasoned. For e.g. if we are trying to reason a type of sickness a person has based on the symptoms and we arrive on two possible reasoning namely common cold or flu, we can look into user?s recent activities in the past and try to find a relation between any medical related attributes to current situation we are trying to reason (a recent visit to a area which had a predominant flu influence). We construct a graph to represent this heuristic search with the following components depicted in figure 4.

To illustrate the graph construction, let?s consider a simple example. We reason the occurrence of a meeting / presentation in a smart room. We assume the smart room is equipped with sensors that can provide the system with various context values. Context Spaces takes into consideration incorrect sensor readings [21]. The situation spaces are represented as S1 meeting and presentation S2. The primary attributes and secondary attributes are defined as below  Context Attribute  Meeting Presentation  Lights primary primary Projector primary primary Noise primary primary Personal Devices ? In the room  secondary secondary  Users secondary secondary Table1: Primary and Secondary attributes for situations meeting and  presentation.

In a typical meeting situation, lights are on while in a  presentation situation we assume dimmer light. But this might not be true always. Also situations could be contained in each other i.e. the occurrence of a meeting within a presentation.

Hence to increase our confidence in the situation, we can look at discovering new context that will increase our confidence in  Primary Node - Attribute  Computed Value  Strongly Related  Weekly Related  Compare  Related Attribute  Fig. 4.  Components of the dynamic generated context attribute relation  Graph     a situation. This new context discovery will be within the specific application domain and will not do an entire brute force search on the all application spaces. Hence branching from the secondary nodes, we try to discover related context based on our heuristic search approach. We assume that all context attributes, situations and recent events are present in the application space based on which we build our graph as shown in figure 5.

We propose an algorithm presented in figure 6 that is used to compute the above graph. The algorithm iterates through related situation spaces and recent events into history that fall in the same application space identifying attributes and computing weight, utility value (relevance) and the overall confidence value. At each stage, based on the confidence value, it goes further discovering more attributes if computed confidence is not enough.

We now present the same example with some real values and analyze how the discovery of new context attributes can increase our confidence in a specific situation. Table 2 shows the primary attributes and their values for the specific situation.

We first present the example computing the confidence value without taking into consideration secondary and dynamically discovered attributes. We define, for each attribute, the possible range of values and the reliability of the value. When  we say reliability, we do take into consideration data obtained from in accurate sensors.

Context Attributes  Domain of Values  Reliability Error of Reading  Light Status ON, DIM, OFF  80%  Noise Level [1,4] - +- 1 Projector Status  ON, OFF 90%  Table. 2.  Context attributes and values for a specific situation  Table 3 presents the range of values associated with attribute  situation along with their weights. In context spaces theory, the weights and range of values for each context attribute is assumed to have been defined in the application space.

Situation Context  Attribute Range of Values  Weight  Presentation 1 = Light DIM, OFF 0.4 2 = Noise 1 ? 4 0.2 3 = Project ON 0.4 Study 1 = Light ON 0.4 2 = Noise 1 ? 2 0.2 3 = Project OFF 0.4  Table 3: Value ranges of context attributes to a specific situation   Hence computing the confidence value Cv, for each situation, using the approach defined in Context Space [19, 20]  Confidence Value Cv (Presentation) = 0.4 * 0.80 + 0.2 * 1 + 0.4 * 0 .90 = 0.88  Confidence Value Cv (Study) = 0.4 * 0.80 + 0.2 * 1 + 0.4 * 0 = 0.52  If we have our confidence level to reason a situation to be 90%, the above result is not completely enough to prove the occurrence of the situation. Hence we look at discovering new attributes using our proposed approach which will help us increase our confidence in a situation. We consider the same example and include the dynamically discovered attributes that was presented in figure 4. Based on this, table 4 presents the new set of primary, secondary and dynamic attributes.

Context Attribute  Range of Values  1 = Light DIM, OFF 2 = Noise 1 - 4 3 = Project ON Devices Context Object A Users Users in presentation -  Context Object B Calendar (Dynamic)  User Calendar information  Location (Dynamic)  Location information  Table 4: Newly discovered context attributes The context object A, B represents another context object  which is a part of this situation. The context object has a set of  Step 1: Determine existing situation?s context attributes apnT , asnT Step 2: Look into R. Identify dnt ? R Step 3:Identify a relation ? such that dnt ? Cs t and dnt belongs to St Step 4: Compute the weights wi for dnt and the utility value (using relevance function) ui Step 5: Compute confidence value Cv Step 6: if Cs < specified confidence value for situation Repeat steps 2 to 6 Step 7: End  Fig. 6.  Algorithm identifying dynamic context and re-computing the confidence value  User - A  Device - PDA  Calendar Location  Location  Fig. 5.  Graph constructed by discovering new context attributes and their relation to the situation dynamically  0.83  0.83  0.93  0.93     attributes defined for the specific situation rather than a single defined attribute. We re-compute our confidence value based on re-distributed weights and utility vales, for the newly discovered context attribute as presented in table 5.

Situation Context  Attribute Weight  Presentation 1 = Light 0.3 2 = Noise 0.1 3 = Project 0.3 User Object Device Object Calendar 0.1 Location 0.2 Study 1 = Light 0.3 2 = Noise 0.1 3 = Project 0.3 User Object Device Object Calendar 0.1 Location 0.2  Table. 5: Newly computed context attributes with their weights  Confidence Value Cv(Presentation) -  0.3 * 0.80 + 0.1 * 1 +  0.3 * 1 + 0.1 * 0.90 + 0.2 * 1 = 0.93 Confidence Value Cv(Study) = 0.3 * 0.80 + 0.1 * 1 + 0.3 * 0  + 0.1 * 0.90 + 0.2 * 0 = 0.43 From the above results, we prove that the discovery of  additional attributes and re-computation of weights, and their utility factor to the situation would indeed increase our confidence in a situation. We use this extended context spaces theory as a basis for our context aware mobile devices which use existing context and dynamically discovered context to compute a cost formula to make data collection decisions.

Having presented an extension to context spaces theory, we now focus on how this can be applied for sensor data collection using mobile devices. The challenges involved in discovery and data delivery to the sink are out of scope of this paper. In the next section, we will map the context model theory to our approach and compute a cost formula based on situational context.



V. SENSOR DATA COLLECTION USING CADAMULE  In the previous section, we presented the extension to Context Spaces that we map on to our proposed CADAMULE approach in this section. The idea of using context aware data mules explores an intelligent and smart way of data collection in sensor networks. These intelligent devices can act by themselves in a pervasive environment and can discover, negotiate, collect and deliver sensor data to the sink. This smart approach bypasses the use of static sinks or relaying data across existing sensor nodes. For negotiation, we need a power aware protocol that needs to take into consideration the energy constraints of both sensor node and the mobile device. Our aim is to conserve energy on the sensor node hence extending the  life time of the sensor node. As discussed in our previous paper [14], the negotiation between the mobile device and the sensor node take place over Bluetooth since we are using a Bluetooth based sensor node. Bonnet et al. [22] has reported a few advantages and disadvantages of Bluetooth. We are interested in one disadvantage namely the increase in power consumption while trying to keep connections alive for a long time. We try to focus on this issue and present our context aware approach that can reduce Bluetooth power consumption on the node during communication by choosing mobile devices that are close to the sensor node which will be the most energy efficient (less distance, hence higher throughput hence lower power consumption and lesser time for communication). For our implementation, we use the Mulle sensor node [15, 16] as the sensor network platform. In this paper, we present our result as simulation that simulates the Mulle making use of real world power values obtained from the Mulle v2 sensor as tabulated in table 6. The Mulle is powered by a 3.7 volt 2250 mAh Lithium battery.

Mode Power  MCU 10.0 MHz, BT off 25.1 mW MCU sleep, BT active 132.9 mW MCU sleep, BT sniff  (210 slots) 27.8 mW  Table 6: Mulle Power Consumption  We propose our cost formula that is used to compute the cost  involved in transmitting data from the sensor node to the context aware data mule and finally to the sink. Our cost formula presented in the paper focuses on the cost involved for negotiation and transferring data from sensor node to CADAMULE. The contributing parameters to the cost formula and their weights and relevance value are dynamically generated at runtime based on the situation?s context. We define our cost formula as   Total Energy =Ef(Sending/Receiving(Xbits),d) + Encon* NR  + Ecpu + ContextFunction Cf( S{(a1,a2.. an,) U ( d1, d2, ? dn)} Where Cf (S {(a1,a2?an,) U (d1,d2.. dn}} = M  Fn {?wi.ri * ( SS{a1,a2?an,d1,d2?dn} ? R{A1, A2 ? An}) i=0 Ecpu - Energy spent on processing Ef(Sending/Receiving(Xbits),d) - Energy function computing  the energy spent by transmitting or receiving Xbits over distance d  Encon - Total energy to make a connection NR - number of Reconnections wiri - A weight/ factor that determines the importance of a  attribute to a specified context situation given by value ? (0,1)  The dynamic attribute that can be discovered at runtime  would include a whole lot of attributes which are derived from     the primary and secondary attributes. E.g. in the simulation, we derive the attribute distance from the secondary attribute location to estimate the distance between the sensor and CADAMULE. This primary, secondary and discovered context attributes change based on situations hence requiring re- computation of the cost formula.

Based on our developed cost formula and additional context discovery model, we present a simulation result in which we compute the confidence value needed by CADAMULE to decide on data collection. We also compute the energy spent by the sensor node by comparing our approach with tradition fixed sink based approach. We run our simulation based on the real Mulle sensor node by simulating its sleep, idle, listening, Bluetooth search and transmit state. We also assume that the Bluetooth sensor node can control the power it spends by limiting its visibility range hence making it less visible but more energy efficient. We simulate this feature and would like to implement this on the Mulle as a part of our future work.

This simulated Mulle sensor node adapts its power output based on context information. Our power values are simulated based on real world values obtained from the Mulle V2 sensor node presented in this section. We run our simulation based on the following context attributes   Attribute Type Signal Strength Primary Battery power  (on sensor node and mobile device)  Primary  Attenuation Primary Location, Calendar Secondary  Table 7: Primary and Secondary attributes for context aware mobile device based data collection.

The simulation has been developed using Microsoft.net. We assume that data to the sink is delivered by using existing mobile access network like GPRS or GSM based services.

Each simulation run lasts for 3 minutes during which each sensor node changes its state from sleep, idle and listening, transmitting data every 30 seconds. We simulate the fixed sink based approach using traditional Bluetooth discover, establish connection and transmit states with the nodes waking up in the same interval as the simulation using CADAMULE. The simulation is to primarily validate our theory of discovery of context attributes at runtime and how this can improve the overall efficiency of the system and to validate our cost formula which is based on our runtime context discovery theory. In our context aware approach, we compute the energy spent by the sensor node as a function of size of data, time taken to transfer the data, distance and retransmissions due to weak signals. We use a fixed value of 7.4 Watts as the overall power supplied by the battery equipped with the Bluetooth sensor node. We are not looking at the battery power consumed by any sensor mounted as this will have a huge influence in the results. E.g. GPS based sensors require more battery power and also would communicate more frequently updating location information.

The simulation results are shown in figure 7 and 8 showing some screen dumps of the simulations and a graph plotting the amount of energy spent by each node. We can see that the use of CADAMULE for data collection conserves energy to a fair extent when compared to a fixed sink based approach.

Fig. 7.  Simulation Results obtained by including dynamic context attribute for  cost calculation during data collection  Simulated Power Consumption with Fixed Sink           1 2 3 4 5 6 7 8 9 10  Simulation Run  Po w  er (W  at t)  Sensor 1 Sensor 2 Sensor 3       Simulated Power Consumption Results Context Aware Data Mule Approach           1 2 3 4 5 6 7 8 9 10  Simulation Run  Po w  er in  (W at  t)  Sensor 1 Sensor 2 Sensor 3   Fig. 8.  Simulation Results of power consumed with fixed sink and context  aware Data Mules approach

VI. CONCLUSION  The paper has presented the use of context aware mobile data mules (CADAMULES) as data collectors to achieve efficient data collection within a sensor network infrastructure.

The use of mobility for data collection is not a new approach but our proposal presents a context aware approach aiming at improving the data collection efficiency. The paper has extended the Context Spaces theory by dynamically discovering context at runtime. By using dynamic discovery of context while reasoning under uncertainty, the system can increase the confidence in the occurrence of a specific situation. We have proposed an algorithm that uses graph theory and a heuristic search to identify new context attributes that are related to the existing situation which aids in our reasoning process.

The paper has also presented our incorporation of the context model with dynamic discovery of context attribute into our proposed CADAMULE approach helping the mule to arrive at intelligent and smart data collection decisions. The cost formula computed from dynamic context discovery aids in arriving at cost efficient data collection. We have validated our extended context spaces theory by showing how our approach of context discovery at run time increases the confidence during reasoning process. We have also evaluated our CADAMULE approach by a simulation which uses the extended context spaces approach as a foundation to developing our dynamic cost formula. The simulation results have shown the performance gain in power consumed by the Mulle sensor node using our smart CADAMULE approach.

