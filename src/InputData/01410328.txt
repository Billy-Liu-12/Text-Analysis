Integrating Multi-Objective Genetic Algorithms into Clustering for Fuzzy Association  Rules Mining

Abstract In this paper, we propose an automated method to decide on the number of fuzzy sets and for the autonomous mining of both fuzzy sets and fuzzy association rules. We compare the proposed multi-objective GA based approach with: 1) CURE based approach; 2) Chien et al clustering approach.

Experimental results on 100K transactions extracted from the adult data of United States census in year 2000 show that the proposed method exhibits good performance over the other two approaches in terms of runtime, number of large itemsets and number of association rules.

1. Introduction  In general, quantitative mining algorithms either ignore or over-emphasize elements near the boundary of an interval.

The use of sharp boundary intervals is also not intuitive with respect to human perception. Some work has recently been done on the use of fuzzy sets in discovering association rules for quantitative attributes, e.g., [1, 4, 8, 9, 11].  However, in existing approaches fuzzy sets are either supplied by expert or determined by applying clustering algorithm. The former is not realistic because it is extremely hard for an expert to specify fuzzy sets. The latter approaches have not produced satisfactory results. They do not considered the optimization of membership functions; a user specifies the number of fuzzy sets and membership functions are tuned accordingly.

In this paper, we propose a clustering method that employs multi-objective GA for the automatic discovery of membership functions used in determining fuzzy quantitative association rules. Our approach optimizes the number of fuzzy sets and their ranges according to multi-objective criteria in a way to maximize the number of large itemsets with respect to a given minimum support value. So, we defined two objective parameters in terms of large itemsets and the time required to determine fuzzy sets. These two are in conflict with each other. So, we use a GA with multiple objective optimization capabilities known as Pareto GA [10].

Experimental results demonstrate the effectiveness of the proposed approach. Also, we compared the proposed approach, in terms of the number of produced large itemsets and interesting association rules, with CURE based approach [2] and Chien et al approach [3], which is an efficient hierarchical clustering algorithm based on variation of density to solve the problem of internal partitioning.

The rest of this paper is organized as follows. Fuzzy association rule is defined in Section 2. Utilizing GA to determine membership functions is described in Section 3. A brief overview of CURE based approach and Chien et al work is given in Section 4. Experimental results are given in Section 5. Section 6 is summary and conclusions.

2. Fuzzy Association Rules  Consider a database of transactions T={t1, t2,?,tn}, where each tj represents the j-th tuple in T. We use I={i1, i2,?,im} to represent all attributes that appear in T; each quantitative attribute ik is associated with at least two fuzzy sets. The degree of membership of each value of ik in any of its fuzzy sets is directly based on the evaluation of the membership function of the particular fuzzy set with the value of ik as input. The value falls in the interval [0, 1], with the lower bound 0 strictly indicates ?not a member?, the upper bound 1 indicates ?total membership?; and all other values between 0 and 1, exclusive, specify ?partial membership?. Finally, we use the following form for fuzzy association rule:  If Q={u1, u2, ?, up} is F1={ p  fff 111 ,,, 21 K } then  R={v1, v2, ?, vq} is F2={ qfff 222 ,,, 21 K }, where IQ ?  and IR ?  are itemsets with ?=RQI , F1 and F2, respectively, contain the fuzzy sets associated with corresponding attributes in Q and R, i.e.,  if1  is a fuzzy set  related to attribute ui and jf2  is related to attribute vj.

3. Multi-Objective GA for Automated Clustering  We consider as objective functions the number of large itemsets and the gain in time, inverse of the time required to find all large itemsets in a given database. It is assumed that each of the n components of the objective vector is to be maximized. An optimal solution can be defined as: a solution not dominated by any other solution in the search space.

Such a solution is called Pareto optimal, and the entire set of optimal trade-offs is called Pareto-optimal set [10].

Each individual represents the base values of membership functions for a quantitative attribute from the given database.

We used membership functions in triangular shape.

To illustrate the utilized encoding scheme, consider a quantitative attribute, say ik, having 3 fuzzy sets, the corresponding membership functions and their base variables  0-7695-2142-8/04 $ 20.00 IEEE    are shown in Figure 1. Each base variable takes finite values.

For instance, the search space of the base value 1kib  lies between the minimum and maximum values of attribute ik, denoted )min(  ki D  and )max(  ki D , respectively. Enumerated next  to Figure 1 are the search intervals of all the base values and the intersection point  ki R of attribute ik.

small medium large  ki  b 2 ki  b 3 ki  b ki  b  ?(ik)  )min( ki  D )max( ki  DkiR )]max(),[min(:  )]max(,[:  ]),[min(:  )]max(),[min(:  )]max(),[min(:      kkk  kkk  kkk  kkk  kkk  iii  iii  iii  iii  iii  DDb  DRb  RDb  DDR  DDb  Figure 1 Membership functions and base variables of attribute ik  We used 8 quantitative attributes in the experiments of this study and assumed that each attribute can have at most 7 fuzzy sets. So, a chromosome consisting of the base lengths and the intersecting points is represented in the form:   888888111111111111121111 iiiiiiiiiiiiiiiiiiiiiiii bbRbbwbbRbbRbbRbbRbbRbbw KK  where gene ji  w  denotes the number of fuzzy sets for  attributes ji . If the number of fuzzy sets is 2, then while decoding the individual, the first two base variables are considered and the others are omitted. However, if  ji w  is 3,  then the next three variables are also taken into account. So, as long as the number of fuzzy sets increases, the number of variables to be taken into account is enhanced too.

We used real-valued coding, where chromosomes are represented as floating point numbers and their genes are the real parameters. While the value of a gene is reflected under its own search interval, the following formula is employed:  ))min()(max()min( max  k i  k i  k i  k i jjjj  bb g  g bb ?+= , where g is the value of  the gene in search, maxg  is the maximum value that gene g  may take, )min( ki jb  and )max( k i j  b  are the minimum and the  maximum values of the reflected area, respectively. Also, we used Pareto-based ranking procedure, where the rank of an individual is the number of solutions encoded in the population by which its corresponding decision vector is dominated. Individuals who are strong according to parent selection policy are candidates to form a new population. We adapted the elitism selection policy in our experiments.

Finally, after selecting chromosomes with respect to the evaluation function, genetic operators such as, crossover and mutation, are applied to these individuals.

To generate fuzzy association rules, the following formula is used to calculate the fuzzy support of itemset Z and its corresponding set of fuzzy sets F, denoted S<Z,F>:  ||  )][,(  , T  ztFf S  Tt jijZz z  FZ i j j  ? ?? ? ><  ? =  ? , where T  denotes the  number of transactions in database T.

Each large itemset, say L, is used in deriving all  association rules (L?S)?S, for each .LS ?  The strong association rules discovered are chosen by considering only  rules with confidence over a pre-specified minimum confidence.  However, not all of these rules are interesting enough to be presented to the user. Whether a rule is interesting or not can be judged either subjectively or objectively. Ultimately, only the user can judge if a given rule is interesting or not, and this judgment, being subjective, may differ from one user to another. However, objective interestingness criterion based on the statistics behind the data can be used as one step towards the goal of weeding out presenting uninteresting rules to the user.

4. Overview of CURE and Chein et al Work  The process of CURE can be summarized as follows.

Starting with individual values as individual clusters, at each step the closest pair of clusters are merged to form a new cluster. This is repeated until only k clusters are left. As a result, the values of each attribute in the database are distributed into k clusters. The centroids of the k clusters are the set of midpoints of the fuzzy sets for the corresponding attribute. Here, note that in the process to obtain the membership functions by CURE clustering algorithm, the number of clusters, i.e., number of fuzzy sets should be given by the user beforehand. To overcome this restriction, we integrated a GA with CURE clustering approach.

A GA finds the most appropriate number of clusters according to a predefined fitness function. In the GA process used in this study, each variable holds the number of fuzzy sets only. This is because CURE clustering algorithm itself adjusts the base values of the membership functions.

As Chien et al clustering approach is concerned, it is an efficient hierarchical clustering algorithm based on variation of density to solve the problem of interval partitioning. For this purpose, two main characteristics for clustering numerical data are defined first. Then, a reasonable interval can be generated automatically by giving a proper parameter ?  to determine the importance of relative closeness and relative inter-connectivity. The reader is referred to [3] for more details about this clustering technique.

5. Experimental Results  Effectiveness of the proposed approach has been demonstrated by comparison with two existing clustering approaches: CURE based approach and Chien et al work.

We concentrate on testing the time requirements as well as changes in the main factors that affect the proposed clustering process: finding nondominated sets, number of large itemsets, and number of association rules. The experiments have been conducted on Pentium III 1.4 GHz CPU with 512 MB memory and running Windows 2000. As experiment data, we used 100K transactions from the adult data of US census in 2000; we concentrated our analysis on 8 quantitative attributes. Further, in all the experiments conducted in this study, the GA process started with a population of 80 individuals for the GA-based approach and 30 individuals for the other approach. As the termination criteria for the developed GA programs, the maximum  0-7695-2142-8/04 $ 20.00 IEEE    number of generations has been fixed at 500. Finally, in all the experiments in which GA have been used, the minimum support was set to 10%, unless otherwise specified, and the maximum number of fuzzy sets has been specified as 7 for each of the three methods.

0 50 100 150 200 250 300  gain in time (ms)  nu m  be r  of la  rg e  it em  se ts  MOGA  CURE  Chien's work  Figure 2 Nondominated set using 20K transactions  The first experiment is dedicated to find the nondominated set for each of the three different methods using 20K transactions. We decided to use 20K transactions because according to the next two experiments, the three approaches perform almost the same up to 20K transactions.

The results are reported in Figure 2, where the three approaches are labeled as MOGA, CURE and Chein?s work, to represent the proposed approach, CURE based approach and Chien et al work based approach, respectively. MOGA mostly outperforms the others for both objectives.

10 20 30 40 50 60 70 80 90 100  Number of Transactions (K)  R un  tim e  (S ec  on ds  )  MOGA  CURE  Chien's work  Figure 3 Runtime to find large itemsets for optimum case  The second experiment compares the runtime of the three approaches to find large itemsets for different numbers of transactions, varying from 10K to 100K. The results are reported in Figure 3. The runtime here represents the time required to find all large itemsets after the number of fuzzy sets and their ranges have been determined by employing the corresponding method. MOGA outperforms the other two approaches for all numbers of transactions. Finally, the curves plotted in Figure 3 demonstrate that the three methods are scalable with respect to the number of transactions.

The third experiment compares the runtime of the three approaches to find large itemsets when the number of fuzzy sets is fixed at 5. The results are reported by the curves plotted in Figure 4. We have decided on considering 5 fuzzy sets in this experiment because it is approximately the average number of fuzzy sets found by each of the three approaches. From Figure 4, the other two approaches  outperform MOGA; the extra time in MOGA is spent on optimizing membership functions.

10 20 30 40 50 60 70 80 90 100  Number of Transactions (K)  R un  tim e  (s ec  on ds  )  MOGA CURE Chien's work  Figure 4 Runtime to find large itemsets for 5 fuzzy sets  6.5   7.5   0 10 20 30 40 50 60 70 80 90 100  Number of Transactions (K)  lo g[  T ot  al R  un ti  m e(  m il  is ec  on ds  )]  MOGA CURE Chien's work  Figure 5 Total runtime required to find optimum fuzzy sets           6 8 10 12 14 16 18 20  Minimum Support (%)  N um  be r  of L  ar ge  r It  em se  ts  MOGA  CURE  Chien's work  Figure 6 Number of large itemsets for optimum fuzzy sets  The fourth experiment compares the total runtime required for each of the three methods to find optimum fuzzy sets for different numbers of transactions. The results are reported in Figure 5; the total runtime of MOGA is smaller than the other two approaches up to around 40K transactions; after that, MOGA requires higher execution time than the other two approaches. The extra runtime is spent on optimizing membership functions. Figure 5 shows that all the three approaches scale well on the number of transactions.

The fifth experiment compares the change in the number of large itemsets for different values of minimum support.

All the 100K transactions have been utilized and the optimum solution case has been considered. The results are reported by the curves plotted in Figure 6; MOGA finds larger number of large itemsets than the other two approaches. This is quite consistent with our intuition, simply because MOGA puts more effort on the optimization  0-7695-2142-8/04 $ 20.00 IEEE    process and this has been reflected into finding better results than classical clustering approaches.

6 8 10 12 14 16 18 20  Minimum Support (%)  N um  be r  of L  ar ge  I te  m se  ts  MOGA  CURE  Chien's work  Figure 7 Number of large itemsets for 5 fuzzy sets         0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6  Minimum Confidence  N um  be r  of I  nt er  es ti  ng A  ss oc  ia ti  on R  ul es MOGA  CURE  Chien's work  Figure 8 Number of association rules for optimum case           0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6  Minimum Confidence  N um  be r  of I  nt er  es tin  g A  ss oc  ia tio  n R  ul es  MOGA  CURE  Chien's work  Figure 9 Number of association rules for 5 fuzzy sets  The sixth experiment is similar to the fifth but here 5 fuzzy sets are considered instead of the optimum case. The three curves plotted in Figure 7 show the number of large itemsets for different values of minimum support. For small values of minimum support, the difference between the three curves is larger than the difference for the optimum solution case shown in Figure 6. Finally, for the two cases plotted in Figures 6 and 7, the curves become smoother and the difference between them decreases as the minimum support increases. This is true because as the minimum support increase, the number of large itemsets decreases and approaches zero.

The last two experiments report the correlation between minimum confidence and number of interesting association  rules discovered for each of the three approaches. Figure 8 reports the values for the optimum solution case. Figure 9 gives the results in case the number of clusters is set to 5 for each of the three methods. MOGA optimizes the ranges of the membership functions and the number of fuzzy sets in a way that outperforms the other two approaches.

6. Summary and Conclusions  In this paper, we proposed a multi-objective GA based clustering method, which automatically adjusts the fuzzy sets to provide large number of large itemsets in low duration.

This is achieved by tuning together, for each quantitative attribute, the number of fuzzy sets and the base values of the membership functions. In addition, we demonstrated through experiments that using multi-objective GA has 3 important advantages over CURE and Chien et al work. First, the number of clusters for each quantitative attribute is determined automatically. Second, the GA-based approach optimizes membership functions of quantitative attributes for a given minimum support. So, it is possible to obtain more appropriate solutions by changing the minimum support in the desired direction. Finally, the number of large itemsets and interesting association rules obtained using the GA- based approach are larger. As a result, all these advantages show that the proposed approach is more appropriate and can be used more effectively to achieve optimal solutions than the classical clustering algorithms described in the literature.

