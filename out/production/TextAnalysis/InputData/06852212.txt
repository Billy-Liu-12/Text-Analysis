1 INTRODUCTION  Sequential pattern mining (SPM), which usually reveals

Abstract: In this study, we investigate the problem of status sequential pattern mining (SSPM) based on frequent status set for failure prediction. We present a general sequential pattern mining framework with new definitions (e.g., frequent status itemset) and redefinitions (e.g., Sequence, Sequential Pattern) on sequential patterns for the field of failure prediction with multiple status items monitored. Some new indexes such as coverage rate (CR), hold rate (HR), and factor set (FS) are introduced to discover interesting Strong SSP and related factor set of some important status itemsets.

The Apriori-like algorithms are also developed particularly for SSPM with high computational efficiency, and numeric examples are provided to demonstrate the process of SSPM for failure prediction. It shows that the proposed algorithm for SSPM is effective, capable of discovering meaningful sequential patterns with user-interested coverage rate and hold rate.

Key Words: Frequent Status Itemset, Status-set Sequential Pattern Mining, Status Monitoring, Failure Prediction      depicts the event from multiple status indexes instead of a single event-ID. Therefore, new conceptions related to SSPM have been redefined and new indexes are introduced to describe the patterns. Apriori-like algorithms are also developed to discover the SSPM with high computational efficiency and numeric examples are provided to demonstrate the process of SSPM for failure prediction.

The rest of the paper is organized as follows. In Section 2 we describe the characteristics and applications of the temporal sequence database. In Section 3, we propose some new definitions related to SSPM, such as strong status-set sequential pattern, coverage rate and factor set. The Apriori-like algorithms for discovering frequent status-set, SSP, Strong SSP, and factor set of some important status itemsets are detailed in Section 4. In Section 5, we demonstrate the detailed SSPM process through a numeric example of using the Apriori-like algorithms. Finally, in Section 6, we conclude the paper.

2 PROBLEM DESCRIPTION There are a large number of temporal data in the field of status monitoring and fault predicting, such as the inspection of aircraft schedule and the inspection of automobile schedule. A typical status-set based temporal dataset can be explained by the example in Table 1. There are m status items which need to be monitored in a sequence database, and each status item may have several integer values indicating different status of the equipment monitored, for example, three status values like, 0-normal, 1-intermediate status, and 2-failure. Table1 shows that a total of p times (events) of inspections have been conducted and accordingly the items? status has been recorded.

Table1. p times of inspections based on m status items  event Status Item1 Status Item 2 ? Status Item m e1 1 0 ? 1 e2 0 1 ? 0 e3 0 2 ? 1  ? ? ? ? ?  ep 1 0 ? 1  There may be interesting sequential patterns hidden in the temporal database that has recorded all the status changes of equipment with respect to multiple inspecting items. The sequential patterns have great significance for the early discovery of impending abnormal status or functional failure. Traditional statistical methods are difficult to be applied to solve such problems, including the traditional SPM algorithms that mine sequential patterns based on event-ID, which can be viewed as special case of single status-event in our problem. We refer the problem of status-set based sequential pattern mining as status-set sequential pattern mining (SSPM). Sequential pattern mining for failure prediction in a temporal database proposed in this paper can be well applied for discovering temporal sequential patterns, and has important application significance for finding meaningful status-set sequential patterns from large amount of temporal status monitoring data.

3 PROBLEM DESCRIPTION The following notations shown in Table 2 are used to formulate SSPM model.

Table2. Notations for formulating SSPM model  I set of all status items, and I={i1, i2, ?, im} X status itemset such that X I D set of all events in the temporal database |D| number of events in D  |D(X)| number of status itemset X in D X1 X2 X2 follows X1 |X1 X2| number of the occurrence of X1 X2  c(X1 X2) confidence of X1 X2 means |X1 X2|/|D(X1)| s% user-specified minimum support (min_sup) c% user-specified minimum confidence (min_conf) d% user-specified minimum coverage rate (min_cov) u% user-specified minimum factor set rate (min_fs)  h% user-specified minimum hold rate for multiple serial status dataset (min_hold)  Definition 1 Status Item-set (SI): A status itemset X is defined as a sub-itemset of I, representing (1)X I, (2)for all i X , the status of i is 1 or 2, and (3)for all j I-X , the status of j is 0.

Definition 2 Frequent Status Itemset: (FSI): A FSI can be expressed as X subjected to the following constraints: (1)X I, (2)|D(X)|/|D|?100% s%, where s% is a user-specified minimum support threshold.

A FSI can be explained as a status itemset that appears frequently in the status-set based temporal database with a support greater than or equal to a user-specified minimal support threshold, i.e., s%. Similarly, there are also two important properties for FSIs that are straightforward.

Property 1 If X (X I) is frequent, any of its sub-set, e.g., X'(X' X), is also frequent.

Property 2 If X (X I) is not frequent, any of its parent-set, e.g.,X?(X? X), is not frequent.

Definition 3 Status-set Sequence (SS): A sequence is a set of ordered status itemset in the form of {X1 X2 ? Xk}, where Xk represents a FSI and k is the length of the sequence.

The new definition of sequence, which departures from the previous definitions, is mainly on the element of the sequence. Here we use status-sets whereas traditional ones use event IDs.

Definition 4 Support of SS: The support of a SS, e.g., S={X1 X2 ? Xk}, can be calculated by s(S)= |X1 X2 X3 ? Xk|/|D|?100%, representing how frequency S occurred in the temporal status database.

Definition 5 Confidence of SS: The confidence of a SS, e.g., S={X1 X2 ? Xk}, can be calculated by c(S)=min{|X1 X2 X3 ? Xk|/|X1 X2 X3 ? Xk-1| ?100%| k=2,3,?,p}, representing the probability of occurrence of S under certain conditions.

2014 26th Chinese Control and Decision Conference (CCDC) 5315    Before we present detailed algorithms, two new properties of SS which may contribute greatly to the computational efficiency are introduced in advance as follows.

Property3: If SS (SS I) is frequent, any of its sub-SS, e.g., SS'(SS' SS), is also frequent.

Property4: If SS (SS I) is not frequent, any of its parent SS, e.g., SS?(SS?  SS) is not frequent.

Definition 6 Status-set Sequential Pattern (SSP): We call a sequence, saying S={X1 X2 ? Xk}, as a SSP if and only if it satisfies the following constraints: (1)X1, X2, X3,?,Xk I, (2)X1, X2, X3,?,Xk are FSIs with respect to the  user-specified minimum support (s%), (3)s(S)=|X1 X2 X3 ? Xk|/|D|?100% s%, (4)c(S)=min{|X1 X2 X3 ? Xk|/|X1 X2 X3 ? X k-1|?100%| k=2,3,?,p} c%.

The definition for SSP can be explained as a sequence that obviously complies with two important rules?(1) all its elements are frequent with respect to min_sup, i.e., s%, and (2) all its sub-sequences satisfy min_conf, i.e., (c%).

Definition 7 Coverage Rate (CR) of SSP: The CR of a SSP, e.g., SSP={X1 X2 ? Xk}, can be calculated by CR(SSP)=min{|X1 X2 ? Xk|/|Xk|?100%| k=2,3,?,p- 1}, characterizing how much this SSP counts for the appearance of the status-set (Xk). For example, if Xk occurs 100 times and this SSP occurs 20 times, then the CR of this SSP is 20%.

Definition 8 Strong Status-set Sequential Pattern (Strong SSP): We call a SSP, e.g., SSP={X1 X2 ? Xk} as a strong SSP if and only if it satisfies CR (SSP) min_cov, where min_cov is the user-specified minimum coverage threshold, i.e., d% which is equal to the minimum confidence threshold (c%).

Definition 9 Factor Set of status-set(FS): For status itemset X, its factor set can be defined as FS(X). For each sp in {sp1, sp2,?, spi}, if sp X is also a SP, then sp is a member of FS(X). The factor set of X can be calculated by Rate(X)= , if it satisfies the following constraints, Rate(X)= , where min_fs is the user-specified minimum factor set rate threshold, i.e., u%, then FS(X) is called the major factor set.

Definition 10 SSPM: SSPM is a process of mining SSP, Strong SSP, and related factor set in the temporal ordered database.

Definition 11 SSPM in Multiple Serial status database: For special case of multiple serial status databases, the hold index indicates to what extent the SSP is fit for all series of dataset. For example, there are K serial status database, for a SSP which holds on K1 (K1<K) serials, if K1/K min_hold, where min_hold is the user-specified minimum hold rate, i.e., h%, then SSP is a status-set sequential pattern in multiple serial status database.

The basic framework for mining status-set sequential pattern (SSP), strong status-set sequential pattern (Strong SSP) and related Factor Set is shown in Figure 1, where (A)  represents the process of mining SSP, and (B) represents the process of mining Strong SSP, and (C) represents the process of mining Factor Set.

Fig 1. A framework for SSPM  4 APRIORI-LIKE ALGORITHM FOR SSPM Similar to association rule mining, status-set sequential pattern mining (SSPM) also involves two sub-problems?(1) the first step is to discover all frequent status itemsets, and (2) the second is to generate all subsequence patterns which are based on the first step.

Since the second step is oversimplified and the first step is more straightforward, therefor we mainly focus on the first step.

Based on the above knowledge, we develop an Apriori algorithm and two Apriori-like algorithms to discover all FSIs with high efficiencies, eventually mining SSP, Strong SSP and related factor set in the sequence database. The pseudo-code for the algorithms is presented in figure2-5.

Main: Apriori Algorithm on Finding  Frequent Status Itemsets () Input: D, min_sup Output: FSI Begin 1)  L1=Large1_gen(D, min_sup) 2)  for (l=2; Ll-1 ; l++) do 3)  Cl=Candidate_gen(Ll-1) 4)   For each candidate c Cl do 5)   Count support of c in the database 6)    If c?support min_sup then 7)     Ll=Ll {c} 8)    End if 9)   End for 10) End for 11) Output=L1 L2 ? Ll 12) End  Fig 2. An Apriori algorithm to find FSI  Main: Apriori Algorithm on discovering SSP () Input: D, min_conf, FSI Output: set of FSI Begin 1)  L0?=FSI  5316 2014 26th Chinese Control and Decision Conference (CCDC)    2)  for (l=1; Ll-1? f ; l++) do 3)  Cl-1?=Candidate_gen(Ll-1?, L0?) 4)   For each candidate g Cl? do 5)   Calculate its confidence cg 6)    If cg min_conf then 7)     Ll? = Ll? {g} 8)    End if 9)   End for 10) End for 11) Output=L1? L2? ? Ll? 12) End  Fig 3. An Apriori-like algorithm to find SSP  Main: Apriori Algorithm on discovering Srong SSP () Input: D, min_cov, SSP Output: Strong SP Begin 1)  L0?=SSP 2)  For each q L0? do 3)  Calculate its coverage rate CR(q) 4)   If CR(q) min_cov then 5)    Strong SSP=Strong SSP {q} 6)   End if 7)  End for 8)  Output=Strong SSP 9)  End  Fig 4. An Apriori-like algorithm to find strong SSP  Main: Apriori Algorithm on discovering FS () Input: D, min_conf, FSI, SSP Output: Factor set of FSI Begin 1)  L0=FSI, L0?=SSP 1)  For each y FSI do 2)  for (l=1; Ll-1? ; l++) do 3)   For each spi Ll? 4)    If c(spi y) min_conf  && 5)  Rate(y)= (CR(spi y)) u% then 6)     FS(y)=FS(y) {spi} 7)    End if 8)   End for 9)  End for 10) Output=FS(y) 10) End  Fig 5. An Apriori-like algorithm to find factor set of FSI  Compared with other articles for sequential pattern mining, the contributions of this paper are as follows. First, the new definition of sequence, which departures from the previous definitions, is mainly on the element of the sequence. Here we use status sets instead of traditional event IDs, in order to discover interesting status-set sequential patterns (SSP).

Second, new indexes are introduced based on additional novel constraints, such as min_cov, min_hold and min_fs, in order to find strong sequential patterns and discover the factor set of some important status itemsets. Finally, we apply the SSPM approach to the equipment status monitoring and failure prediction, which is presented specifically in Section5.

5 NUMERIC EXAMPLE In order to facilitate a better understanding of SSPM process, we investigate the problem with an example of  equipment status monitoring. Since the data in large complex equipment is huge and not easy to exhibit, we use a small part of the status monitoring data to demonstrate how to mine status-set sequential pattern for failure prediction, and present the process of monitoring and failure predicting.

An example of status-set based temporal dataset can be explained in Table 3. It shows that a total of 5 times (events) of inspections have been conducted and accordingly record the items? status. For simplicity, we let all status items have only two values?0 and 1, representing normal and abnormal status, respectively. Status-check-item={i1,i2,i3}, im {0,1}, m=1,2,3, namely, im represents the event?s status.

We conduct a total of 5 serials of inspections by five identical equipment, namely, Serials={S1,S2,S3,S4,S5}. In each serial we carry out five times (events) of status monitoring, namely, events={e1,e2,e3,e4,e5}, and the adjacent events are conducted with a fixed time span which is defined by regulations. The specific temporal database is shown in Table3, and for all the items shown in Table3, the status of these items is 1, namely, these items is in the abnormal status.

Table3. The abnormal sequence database of equipment status monitoring  events S1 S1 S3 S4 S5 e1 {i1,i2} {i1,i2} {i3} {i1,i2} {i1,i2,i3} e2 {i1} {i1} {i1,i2} {i1} {i1,i2} e3 {i1,i2,i3} {i2} {i1,i2} {i1,i2} {i2} e4 {i1} {i1,i3} {i2} {i1,i2,i3} {i1} e5 {i1,i2} {i2} {i1,i2,i3} {i2} {i1,i2}  Based on the Apriori algorithm, the frequent status itemset in each serial is discovered, and the detailed form is shown in Table4. (min_sup=s%=40%).

Table4. Frequent status itemset of each Serial  Serials S1 S2 S3 S4 S5  FSI {i1,i2, i1i2} {i1,i2}  {i1,i2,i3, i1i2}  {i1,i2, i1i2}  {i1,i2, i1i2}  Since different thresholds generate different rules, and finally result in different status-set sequential patterns (SSP), hence Table5 summarize all the types of SSP with different rules based on different algorithms. (s%=40%, c%=50%, d%=50%, and h%=40%)  Table5. Different types of SSP with different rules  Types of SSP SSP Strong SSP  Rules  SP in L1? {i1 i2, i1 i1i2,  i2 i1,i1i2 i1, i1i2 i2} {i1 i2, i1 i1i2, i2 i1, i1i2 i2}  SP in L2? {i2 i1 i2, i1i2 i1 i2} {i2 i1 i2}  The explanation of different rules is shown as follows: (1) I represents status-set sequential patterns (SSP) mined from the temporal database based on s%, c%, and  2014 26th Chinese Control and Decision Conference (CCDC) 5317    h%. (2) I represents strong status-set sequential patterns (Strong SSP) based on s%, c%, d%, and h%. The minimum coverage threshold is additional constraint considered for mining Strong status-set Sequential Pattern.

There are some interesting rules observed in the process of SSPM. First, we can discover different types of SSP by  different rules for different requirements and occasions.

Second, we find that the number of SSPs changes sharply with the increase of different thresholds by intuitive comparisons in Table6. Finally, the method for SSPM could greatly improve the computational efficiency, and consequently contribute to provide a strong theoretical and methodological support for failure prediction.

Table6. Number of SSP in different Serials with different rules  Rules I  I  I  I  Serials S1     S2     S3     S4     S5 S1     S2     S3     S4     S5 S1     S2     S3     S4     S5 S1     S2     S3     S4     S5  Number of SSP in L1? 2       2      4       5      4 2       2      3       5      4 0       2      4       5      4 0       2      3       4      4  Number of SSP in L2? 6       1      2       3      1 2       1      0       2      1 0       1      2       3      1 0       1      0       1      1  During the process of SSPM and Strong SSPM, we could also find the factor set of some important status itemset based on Difinition12 in Section 3. For each sp in {sp1, sp2,?, spi}, if sp X2 is also a SP, and the coverage rate of  X2 satisfies Rate(X2)= , then sp is a member of FS(X2), and FS(X2) is called the major factor set.Table7 shows the major factor set of status itemset i2 in different types with different thresholds. (u%=50%)  Table7. Different types of FS(i2) with different threshods  Type FS(i2) in S3 FS(i2) in the temporal database Thresholds s%, c%, u% s%, c%, h%, u% s%, c%, d%, h%, u% s%, c%, h%, u% s%, c%, d%, h%, u% FS(i2) in L1? {i1, i1i2} {i1, 1i2} {i1, i1i2} {i1, 1i2} {i1, i1i2} FS(i2) in L2? {i1 i2, i1i2 i2} { } { } {i2 i1, i1i2 i1} {i2 i1}  Since we can take measures based on FS(X) in advance to predict and inspect the status of itemsets associated with the occurred abnormal status-itemset for reducing the times of unnecessary equipment fault shutdown, and consequently ensuring the production schedule, as a result to save large amount of maintenance support costs. Overall, the factor set of status itemset is valuable for equipment fault prediction.

In this section we present a clear statement on how to apply the approach for SSPM, Strong SSPM and discovery of FS.

If further study is conducted, we can apply the method for failure prediction in large complex equipment by considering different levels of abnormal status and developing corresponding algorithms to predict potential abnormal status efficiently and take appropriate measures in advance to make it return to normal.

6 CONCLUSION In this study, we investigate the problem of SSPM, Strong SP mining and discovery of FS in the temporal status-set sequence database for the early discovery of impending abnormal status and equipment failure. Compared to the traditional SPM based on event-ID, which can be viewed as special case of single status-event in our problem, the serials of SSPM in this paper are proposed systematically based on serials of Apriori algorithms. Additional thresholds such as min_cov, min_hold, and min_fs are defined for mining different types of sequential patterns like strong status-set sequential patterns, and finding the factor set of some important status itemset by which we can early monitor the potential abnormal status and take measures to make it return to normal. Numeric example is performed to test the Apriori algorithms against a  benchmark problem set. The results show that the algorithms are effective approach for solving SSPM problem, capable of discovering many types of status-set sequential patterns with user-interested coverage rate and hold rate, thus laying a foundation for future studies on this problem.

