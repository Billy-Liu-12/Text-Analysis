2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

Abstract?Internet of Things (IoT) has recently received a  great attention due to its potential and capacity to be integrated  into any complex system. As a result of rapid development of  sensing technologies such as Radio-frequency Identification  (RFID), sensors and the convergence of information technologies  such as wireless communication and Internet, IoT is emerging as  an important technology for monitoring systems. This paper  reviews and introduces a framework for structural health  monitoring using IoT technologies on intelligent and reliable  monitoring. Specifically, technologies involved in IoT and  Structural Health Monitoring (SHM) system implementation as  well as data routing strategy in IoT environment are presented.

As the amount of data generated by sensing devices are  voluminous and faster than ever, big data solutions are  introduced to deal with the complex and large amount of data  collected from sensors installed on structures.

Index Terms?Internet of things, NoSQL databases, routing  protocol, structural health monitoring, wireless sensor network.



I.  INTRODUCTION  At the end of 1960?s, Arpanet, the first network project sponsored by U.S. department of defense designed the first protocol called NCP (Network Control Protocol) in order to connect different machines and share information by packet switching [1]. Later, Arpanet became Internet project and new standard protocol, which was developed based on an open architecture philosophy. Thus, new protocols that are known as Transmission Control Protocol (TCP) and the Internet Protocol       Manuscript received November 8, 2015; revised February 6, 2016; accepted April 18, 2016. This survey was supported by the research center in Structural Health Monitoring and Non-Destructive Evaluation of the school of Automation engineering ? UESTC China  C. Jr. A. Tokognon is with the School of Automation Engineering, University of Electronic Science and Technology of China, Chengdu 611731, China (e-mail: tokjunior07@yahoo.fr).

B. Gao is with the School of Automation Engineering, University of Electronic Science and Technology of China, Chengdu 611731, China (e-mail: bin_gao@uestc.edu.cn).

G. Y. Tian and Yan Yan are with the School of Automation Engineering, University of Electronic Science and Technology of China, Chengdu 611731, China, and also with the School of Electrical and Electronic Engineering, Newcastle University, Newcastle Upon Tyne NE1 7RU, U.K. (e-mail: g.y.tian@ncl.ac.uk).

Corresponding Authors: Bin Gao and C. Jr. Arcadius Tokognon   (IP) were defined with success in early 1980?s and specified how digital messages are packaged, addressed, and sent over the network. The success of IP and the use of satellite and radio networks made Internet a global system with the capability to access and remote computer from another place, collect information, communicate with people around the world via Internet using the TCP/IP architecture. Internet is now opened to everyone who wants to connect to. Thus, the number of hosts visible on the Internet grows exponentially and will be over 50 billion by 2020 according to expert estimations [2].

Nowadays, any objects able to sense, send or receive digital information are connected to the Internet using IP. In some case, an IP proxy or software able to convert IP into dedicated wireless protocol is used to ensure continuity between a sensing object that cannot support IP and Internet. Objects connected to the Internet can be mobile phones, cameras, home appliances, city infrastructures, medical instruments, plants or vehicles equipped with sensors. This concept is associated with the Internet of things (IoT), in which objects sense, and use Internet protocols to communicate among themselves and share information about their environment anytime from anyplace.

Wireless sensors network (WSN) is considered as one of key technologies of IoT [3] [4] and it is widely used in various areas such as healthcare systems, environmental monitoring systems, structural health monitoring (SHM) systems, etc. [5].

As novel idea, IoT has rapidly become an attractive topic for researchers and industries. Its integration into monitoring systems like SHM will be advantageous to Industries, businesses, consumers, environment, individuals, and society.

The idea behind SHM is to collect data from multiple sensors installed on structures in order to process and extract useful information about current state of the structure for maintenance and safety purpose [6]. Apart from the potential behind the integration of IoT into such systems, the amount of data sampling that will be collected from smart structures will be so large and complex that it will become difficult to use the traditional data management systems to handle and process such data, hence the emergence of big data technologies, which can be used to store and process large amounts of monitoring data [7].

The objective of this paper is to provide an overview of SHM system implementation based on the integration of WSN, IoT and big data tools. The rest of the paper is organized as follows: In Section II, a brief introduction of IoT is discussed, Section III provides an overview of SHM, A framework for SHM based IoT is presented in section IV. Section V provides detailed data routing strategy in IoT environment. Big data storage and processing engine commonly used to manage the  mailto:g.y.tian@ncl.ac.uk   2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    huge amounts of data from sensors are presented in section VI.

Finally, the conclusion and the future directions are given in section VII.



II. IOT BACKGROUND  A. Definition and archiecture  The term Internet of Things (IoT) is semantically related to two words ?Internet? and ?Things?, where Internet is known as the global system that use TCP/IP protocol suite to interconnect different computer networks, while Things refer to any objects that surround us and have the capability to sense and collect data about its environment. Therefore, IoT can be defined as a global system based on Internet protocol suite, in which objects equipped with sensors, RFID tags or barcodes have a unique identity, operate in a smart environment and are seamlessly integrated into the information network by using intelligent interfaces [3] [4]. IoT relies on a wide range of materials, network infrastructure, communication protocols, Internet services and computing technologies [2]. Among the range of different technologies involve in the IoT concept, WSN is one of the most important technologies that enable the integration of sensing devices into IoT ecosystems.

Sensing devices are deployed in network to seamlessly collect and send in real-time raw data through the Internet to reach a data center. End users can remotely control the devices using Internet services. They can also access the data center via Internet anytime from anyplace in order to retrieve, process and analyze data. IoT architecture is an open architecture based on multi-layers. Services-oriented architecture (SOA) is one of the approaches that have been adopted by researchers in recent years to implement IoT system [4] [8]. The layers interact with each other by offering different services such as sensing, transmission, collection, storage and information processing.

IoT devices and sensors suffer from computational and energy constraints. Therefore, to achieve interoperability across the heterogeneous networks and seamlessly allow data exchange throughout IoT system, different protocols and standards are established.

The following figure illustrates the architecture of IoT system.

(BAN, PAN, LAN, MAN)  Internet Back-End services  RFID nodes, Sensor nodes, mobile phones, Cameras ...

Wireless Sensing Networks  Data center  User access & control  Data processing & analysis  Gateways (Optional)    Fig. 1 IoT system architecture  B. IoT standards and protocol stacks  The development of IoT systems depends on standards and protocols stacks available for interconnecting small and low power devices as well as a data broker or an application.

Various technologies are involved in IoT paradigm [9].

Examples include NFC, RFID and WSN protocols, which are widely used to various objects in IoT. Different standards for IoT are being established to cope with interoperability issues as well as to facilitate business. However, existing standards are widely used to achieve data exchange between IoT devices. For instance, IEEE 802.15.4 and IEEE 802.11 are the most relevant communication standards to be exploited while deploying IoT devices [4] [8-11].  One of the most popular WSN protocols used is known as ZigBee. ZigBee is a low-power protocol in wireless personal area network based on the IEEE 802.15.4 standard and is suitable for ubiquitous sensor networks [5] [12] [13]. Compared with Wi-Fi, which is a protocol for low power wireless local area network based on 802.11 standards, ZigBee deals with low data rate but the biggest advantage is low energy consumption since devices are limited in battery power [14]. Due to the limitation in resources of sensor networks based on IEEE 802.15.4 standard, the key challenge that needs to be taken into consideration is how to effectively adapt Internet protocol stacks on WSN. Different solutions have been developed in recent years as depicted in [15-17].

As described previously, IP is the universal standard that allows data communication over heterogeneous networks. IoT consists of a large number of internet-connected devices; each device is identified with a unique IP address. IPv4 based on 32- bit have been used over years to assign IP address to all devices that need to be connected to the Internet. Unfortunately, the number of IPv4 addresses available will be soon used up to the fact that the number of devices and application connecting to the Internet increases rapidly. In order to adapt the increasing number of ?things? to Internet, IoT community has adopted the next generation of IP called IPv6 based on 128-bit to assign IP address to the billions of connected devices. Different projects conducted by the organization called IETF in charge of Internet standards have proposed standards that specify the use of IPv6 on sensor nodes with low computational power, memory, bandwidth, and energy in IoT ecosystem [18]. The first well known among these protocols is 6LoWPAN, which is defined as IPv6 over low-power wireless personal area network. This protocol is developed to enable small sensing devices with low power and small memories to carry IPv6 packets and participate in the IoT [19] [20]. 6LoWPAN is generally used to simplify IPv6 protocol implementation above the link layer of the IEEE 802.15.4 protocol. Another protocol proposed is known as RPL, which is the acronym of Routing Protocol for Low-power and Lossy networks [18] [21]. It operates on the network layer with the objective to carry and propagate IPv6 packets over a network with lossy, low bandwidth and low- power radio link. Standards and protocols that are widely used for IoT in application layer include CoAP (Constrained Application Protocol), AMQP (Advanced Message Queuing Protocol) and MQTT (Message Queue Telemetry Transport), which are effectively used to interconnect and control remotely IoT devices, broker or gateways as depicted in [22] [23].

2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal      TABLE I.  EXAMPLE OF LPWAN TECHNOLOGIES    Besides the standard protocols defined by IETF, other organizations are interested in the development of low-power communications protocols and standards for IoT. Low Throughput Networks (LTN) [24] standardized by European Telecommunications Standards Institute (ETSI) as well as standards offer by 3GPP and LoRa Alliance are great examples of IoT standard that specifies the architecture and interfaces of low-power wide area network (LPWAN) deployment. These standard protocols similar to Long Term Evolution (LTE) technology are perfectly adapted for devices that need to transmit low data rate over a long range while maximizing the battery lifetime. Examples of LPWAN technologies include SigFox, Narrowband-IoT (NB-IoT), LoRaWAN, LTE-M, On- Ramp Wireless (also known as Ingenu or RPMA), etc. [25].

These novel technologies, among others, are become the de facto IoT standards that allow the transfer of small amounts of data, processing, and communications between low power devices across wide area network as enumerated in table 1 above. The potential applications, deployment and future challenges of LPWA standard, as well as the most important technologies involved, are summarized in [24-27].

C. IoT applications  Since the first definition given by Kevin Ashton in 1999 at MIT Auto-ID Center [28], IoT has evolved significantly and become a reality thanks to its key technologies such as WSN, RFID and Cloud computing which facilitate its integration into existing systems. In this context, IoT applications involve a wide range of areas such as security and surveillance,  environmental monitoring, medical and healthcare, structural health monitoring, agriculture, logistics and transportation, manufacturing, etc. [29-35]. IoT-based applications rely on the creation of smart environment and things such as smart homes, smart cities, smart infrastructures, smart transport, smart health, smart grid, and smart products [3]. One of the well-known applications of IoT is in the healthcare sector, with the development of applications running on electronic devices, which combine sensors and mobile phone as a platform to monitor in real-time personal health status. A good example of IoT application based mobile gateways for intelligent health monitoring is the platform AMBRO, which is presented in [36].

These kinds of applications can also be used for patients or clinical experiments to record and process data in order to make a diagnosis, treatments, and prevention of some regular diseases [37]. The application of IoT in industries is expected to improve business process and supply chain management with intelligent monitoring and services. Examples include intelligent electricity and water consumption services, intelligent parking services, online traffic monitoring, intelligent transportation and so on.

This paper introduces the conceptual design of structural health monitoring system based on Internet of things. Several challenges regarding smart sensors integration into IoT ecosystem and big data management need to be taken into consideration before implementing such system. Based on IoT and big data tools, a reliable, flexible and large-scale health monitoring system will be implemented in order to monitor any  LPWAN  Technologies Description  Cellular  IoT Spectrum Frequency  Max  Data  rate  Range  (Km)  Battery  lifetime  SigFox  SigFox is LPWAN technology dedicated for IoT connectivity; Similar to cellular systems used for mobile phones; it uses ultra-narrow band (UNB) binary phase-shift keying (BPSK) to connect remote devices.

No Unlicensed Regional sub-  GHz bands 868 / 902 MHz  100 bps 3 ~ 17  >10 years  LoRaWAN  Lora is developed for long-range and low-data-rate applications. LoRa networks based on star topology are deployed with a model close to cellular architectures to interconnect devices, which can be end-points, gateways or the network server in the back-ends.

No Unlicensed  Regional sub-  GHz bands 433 / 780 / 868 /  915 MHz  50 kbps 2 ~ 14  >10 years  LTE-M.

LTE-M is a cellular IoT technologies standardized for IoT and low power, wide-area networks (LPWAN).  It can also coexist with other LTE services and only requires a very narrow bandwidth, compared to the bandwidth of a normal LTE carrier.

Yes Licensed LTE In-bands  only  1.08 / 1.4 MHz 1 Mbps ~ 11 >10 years  NB-IoT  NB-IoT like LTE-M has been standardized to be an integral part of the recently finished 3GPP Release 13, in order to address the requirements of IoT. It can be deployed using resource blocks within ?a normal LTE carrier in terms of frequency: in-band, guard band or standalone.

Yes Licensed  LTE In-band,  Guard band or Standalone  900 MHz  200 kbps ~ 22 >10 years  On-Ramp  (Ingenu)  On-Ramp is a proprietary technology that adopts a star networking topology with access points acting as coordinators of end points. It is powered by RPMA (Random Phase Multiple Access) technology, which is their main point of differentiation from their competitors.

No Unlicensed Global band:  2.4 GHz 20 kbps 1 ~ 10  >10 years    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    events or changes in structural conditions in real-time as well as to improve the quality of service in any urban and rural infrastructures such as buildings, bridges, railway tracks, etc.



III. OVERVIEW OF STRUCTURAL HEALTH MONITORING  Structural Health Monitoring (SHM) has been selected as a relevant subject of study in manufacturing, civil engineering, and aerospace industries since it successfully allows monitoring, performance evaluation, prediction and report of structure integrity [6]. SHM is applied to new structures as well as to existing structures. The purpose of SHM application to new structures is to collect in real-time or in regular interval of time, data related to structural components involved in the fabrication, manufacturing, and construction process in order to test safety risks during the erection of new structures. As for, existing structures, the objective of SHM application is to access a structure condition in order to calculate its remaining time. Using various technologies, the monitoring system tracks any changes on the structural elements or environment in order to detect possible events, deterioration or damage for maintenance, repair, retrofit and safety purpose.

According to Rytter [38], SHM application can be defined as a process based on four steps: Detection, which provides information regarding the presence of any damage in the structure. This step is followed by localization step where the probable location of the damage is identified. Then assessment method is used to estimate the extent of the damage. The last step is about the prediction and prognosis of the remaining time of the structure. In [39] and [40] the authors have introduced an additional step between damage localization and assessment.

According to the authors, classification should be done before estimating the severity of the damage in order to give information about the type of damage and efficiently calculate the remaining life of the structure. This means the integrity of structures should be carried out according to the procedure following five steps: detection, localization, classification, assessment and prediction.

All SHM systems rely on the integration of three major sub-systems implemented to meet SHM requirement and organize monitoring activities. These three sub-systems are sensing and data acquisition sub-system, management sub- system and data access and retrieval sub-system.

? Sensing and data acquisition sub-system: The data acquisition component includes sensors to observe and measure appropriate data under varying environmental conditions, but also data communication system for the transmission of the data measured to a server in real- time. This sub-system involves the choice, the number and the placement of sensing modules on the structure.

? Data management sub-system: The data management sub-system consists of data collection techniques, data storage as well as data processing in order to provide an evaluation of the condition of the structure. The development of data management infrastructure involves as well preprocessing methods used to organize raw data acquired from sensors and remove noise before processing. The data processing tasks are fundamental to extract feature that allows damage and  undamaged identification in the system. Several data processing techniques and analytical models have been developed to attempt to detect and localize damage in SHM system. Techniques used to process data from the sensor network are based on machine learning or pattern recognition algorithms. These algorithms include novelty detection [41] [42], classification [43] and regression [44] approaches. Among them, novelty detection based on artificial neural networks [45-47] is one that has received growing attention in recent years for detecting damage in structures.

? Data access and retrieval sub-system: This sub-system is based on online or offline data control and access; in this system data analysis and interpretation are performed to provide useful information for decision- making. An engineer can view the data analysis results remotely over the Internet.

A. Communication channels  The traditional data acquisitions systems use wires to connect sensors to a central databases server. Such system consists of the installation of long cables throughout the structure to monitor. Wire-based data acquisition systems are difficult and expensive to install, take a long time to set up, and are often vulnerable to damage. The rapid progress of wireless technologies has significantly improved the development of such systems with the integration of WSN technology. WSN consist of a large number of nodes, equipped with sensors.

These sensor nodes communicate with each other through a wireless link, which has replaced the traditional cable communication. Compared with the wired solution, a wireless communication system is easier to be installed using low-cost hardware and have proved to gain on installation time [6].

Although wireless technologies offer many advantages, there are still some limitations that remain to be solved, such as power consumption, bandwidth constraints, transmission range and possible security issues. Over the last two decades, numerous WSN-based SHM systems have been proposed in the literature. Current development of WSN for SHM systems proposed in the literature is summarized in [48-53].

B. Sensing technologies  The implementation of a SHM system requires the installation of sensing modules along the structure to monitor.

During the last decades, various sensors have been created and used in the implementation of SHM systems [6] [54].

Examples of these sensors include temperature sensors, strain gauges, accelerometers, anemometers, seismometers, load cells, GPS sensors etc. [55]. With the recent developments in micro and nanotechnologies, most of these sensors are miniaturized and can be easily packed in any small devices. These embedded devices that are known as Micro-Electro- Mechanical-Systems (MEMS) sensors [56] are used in SHM systems and operate in a similar fashion like conventional sensing technologies used for SHM applications. However, compared with traditional sensing technologies, MEMS sensors and actuators are more flexible, reliable and present remarkable characteristics due to their small size, light weight, low power consumption, digital processing capability, design and implementation optimization based on low cost.

https://en.wikipedia.org/wiki/Sustainable_urban_infrastructure https://en.wikipedia.org/wiki/Infrastructure   2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    Thanks to wireless communication capability added to the sensors, another advanced sensing technology that is emerged and become popular in numerous manufactures and institutions for SHM applications is RFID sensors [57]. Radio Frequency Identification (RFID) technologies consist of two basic components: RFID tag and RFID reader. The tags consist of a small microchip, which stores data, and an antenna, which transfers data via radio waves to the reader. RFID reader tracks all tags within its range and interrogates them to obtain the information they stored. The reader usually supplies in the form of radio waves all energies needed by most of the tags to operate and transmit the data back to the reader. This technology is called passive RFID where the tags do not have internal battery. Passive RFID sensors are often used as LF RFID sensors due to the short range of communication between reader and tags that is required. However, this kind of sensors has limited performance in high temperature environment.

Nevertheless, significant research efforts have been done in recent years to improve its performance in high temperature environment [58]. Among the different types of RFID sensors available, passive sensors are the one that received a lot of attention in health monitoring area due to the fact that they have the potential to offer various advantages from low-cost solution and battery-less to long lifetime system perspective [57-61]. The most common RFID based sensors developed for SHM applications are given in [50].

The type of sensors used to monitor structural health depends on the types of structures that are to be monitored. The  number and placement of sensors to be used depends on the size of the structure but also the type of topology that is adopted for the sensor network deployment. The sensing technologies commonly used in aerospace, civil or mechanical engineering are summarized in table 2 below.

C. Monitoring strategy  The basic task of the monitoring system is to acquire from sensors data related to global or local structural properties using various techniques such as, vibration base methods, strain based methods, comparative vacuum monitoring (CVM) methods, Lamb wave methods, ultrasonic and acoustic emission methods, E/M impedance methods and so on [71] [72]. Depending on techniques applied, different parameters are measured in order to perform processing and analysis methods to access monitored structural component status.

Regarding the needs and requirement of SHM systems, potential parameters that can be measured to detect corrosion, fatigue or crack in structures, are summarized in table 3. Some of these parameters may be static or dynamic in nature.

According to the authors in [73], statistical pattern recognition methodology [74], is the appropriate approach to solve SHM problem by using the following steps: (a) operational evaluation, (b) data acquisition, normalization and cleansing, (c) feature selection and/or feature extraction and information condensation, and (d) statistical model development for feature discrimination.

TABLE II.  LIST OF SOME COMMONLY SMART SENSORS USED IN SHM FIELDS  Sensors types Descriptions  Smart materials  Smart materials have properties that can be changed by external stimuli such as temperature, moisture or electrical load. Examples of  smart materials include piezoelectric, electrostrictives, magnetoelectric, shape memory alloys, etc. Among them, piezoelectric materials  are commonly used to measure change in pressure, acceleration, displacement, strain, vibrations etc. They are also used for acoustic emission measurements, surface acoustic wave. Piezoelectric materials are used as a sensor when the mechanical energy is converted into  electrical forms. They are used as an actuator when the phenomenon inverse is observed. [62-65]  Fiber-optic  sensors (FOS)    Fiber-optic sensors consist of a thin optical fiber, light transmitter, a receiver, a modulator element, and a signal-processing unit. They are used to measure at multiple points of an optical fiber changes in light beams that are propagating through the fiber optic cable in regular  intervals of time. They can be used to measure a wide variety of parameters including strain, temperature, corrosion, fatigue, crack  formation, and displacement. Types of FOS commonly used for SHM applications include Fiber Bragg grating (FBG) sensors, Interferometric Sensors, distributed sensors, hybrid sensors, etc. [66-69]  MEMS sensors   MEMS are miniature electromechanical sensor and actuator systems optimized in their design for a specific application. An example of MEMS sensors is MEMS accelerometers that are used to measure acceleration forces. Type of accelerometer sensor includes piezoelectric  accelerometers, piezoresistive accelerometers or piezocapacitive accelerometers. [56] [70]  RFID sensors RFID sensors are often a passive radio technology, which use RFID tags to collect data and capture energy in radio waves form emanated from nearby RFID reader in order to transfer its measurement back to the reader. [57-61]    TABLE III.  POTENTIAL PARMATER MEASURED TO ACCESS STRUCTURE STATUS  Parameters Measurements Sensors  Mechanical Strain, displacement, rotations, curvature, distortions, forces, etc.

Fiber Bragg Grating Sensors (FBG), Strain  Gauges, GPS Piezoelectric sensors, ?  Optical Light, photon, etc. Fiber optical sensors, Phototube sensors?  Chemical pH value, Sulfate, chlorine, etc. RFID sensors, ...

Environmental / Physical  Temperature, humidity, precipitation, wind speed and direction, solar irradiation, velocity, etc.

Accelerometers, Temperature sensors, Anemometers, RFID sensors, seismometer, ?  Loads Cable Load, etc. Load cells      2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    D. IoT-based Structural health monitoring  The rapid technological progress of smart sensors, wireless communication techniques have revolutionized health monitoring of structures in aerospace, automotive and civil engineering field. As key technology of this revolution, WSN technology has significantly improved SHM systems implementation from sensing modules installation to sensor data transmission and processing techniques. As sensors become more and more intelligent with the integration of WSN into SHM system, it has become rapidly important to introduce novel communication protocols in sensors network development in order to control remotely sensors as well as the flow of data generated by them. Thus, the interest in using Internet architectural standards to implement WSN technologies has grown significantly during the last decades.

For example, the authors in [75] designed a smart wireless structural monitoring system using Bluetooth technology and TCP/IP network protocol to communicate data measured by sensors. Their system has been successfully implemented and tested for real time structural health monitoring using randomly excited prototype self-anchored suspension bridge. The main benefits using Internet protocols with WSN to implement a flexible SHM system comes from connecting the data acquisition subsystem with an external platform that allows real-time sensor access, control and management from anyplace.

Interaction with smart sensors and remote services requires IoT technologies to effectively integrate the Internet with SHM system. As a result of the convergence of smart sensing technologies, wireless technologies, Information technologies, Internet, the integration of IoT into SHM system will create opportunities for new development of real-time data acquisition systems. An example of a SHM system, while using IP to communicate information, and control sensors in real-time is to program a data acquisition sub-system that can send automated alerts to the monitoring center or engineers, if an event occurs or when the data measured have exceeded a particular  threshold value. Thus, engineers or technicians responsible for maintenance and other monitoring tasks can access data and information from wherever they are using a variety of devices.

Authors in [76] studied an environmental effect removal based structural health monitoring scheme in an IoT environment. Using principal component analysis (PCA) to remove environmental interferences from sensor data and Hilbert-Huang Transformation (HHT) combined with empirical mode decomposition (EMD) for data processing, their results have shown a superiority of the proposed scheme in the accuracy of structural health monitoring and robustness against environmental interferences. In [77], the authors proposed a mathematical model that can be integrated with an IoT platform to detect the size and location of damages in physical structures using a piezoelectric sensor. Authors in [78] designed and implemented a structural health monitoring based on IoT using LabVIEW platform. A low-cost and flexible platform for remote bridge health monitoring using IoT to connect accelerometer sensors to the Internet has been designed and implemented in [79]. To achieve that, the authors developed a Web API that collects data from an accelerometer and stores them on a web server. Then, the vibration data are retrieved from the web server and log onto Google spreadsheet, which enables end users to access in real-time vibration data of bridges and thereby determining the health of the bridges.

Currently, WSN technology has been seen as one of the most important technologies involved in the development of SHM system. While using WSN, all the sensor nodes communicate with the base station via a wireless transmission protocol such as Wi-Fi, Bluetooth, Z-Wave or ZigBee, etc.

Over the last decades, the trend for connecting WSN with the Internet is based on the possible adoption of IP protocol suite in WSN in order to interconnect sensor networks with other domains [15] as shown in figure 2. But some WSN technologies like IEEE 802.15.4/ZigBee do not currently support IP, and therefore, most of the solutions proposed consist of using IP proxy or gateways.

Building monitoring  Bridge monitoring  IoT data management platform (Back end system)    ServersFirewall  management center  Web interface  Railway monitoring  Aircraft monitoring  Cloud computing platform (optional)  Firewall Data center Virtual machines  Internet  Pipeline monitoring...

Network Architecture: ? LPWAN technologies (SigFox,  LoRa, NB-IoT ?) ? IEEE 802.15.4/ ZigBee ? IEEE 802.11 Low power WI-FI    Fig. 2 SHM framework overview based on IoT    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    As known, WSN technology is also playing an important role in IoT development. The concept of IoT is that all sensing devices at the edge of the network will be able to support IP protocol. Thus, the new version of ZigBee [13] is specially designed for WSN with IPv6 connectivity in order to meet the foundation of IoT concept.



IV. CONCEPTUAL DESIGN OF ZIGBEE-BASE WSN NETWORK IN IOT ENVIRONMENT FOR SHM FRAMEWORK.

SHM systems implementation in IoT environment consists of a large-scale sensor network. Each sensor has a unique IPv6 address that allows identification and communication between sensor nodes inside the domain. All sensor nodes (motes) are placed at strategic points of the structure that have to be monitored. Each sensor interacts with its environment, measure appropriate data relative to the structure. Then, the data are encapsulated into an IPv6 packet and forward to a data collection point known as the sink. As known, communication between sensor nodes consumes more energy. To maximize the network lifetime, the communication channel is based on ZigBee protocol over IEEE 802.15.4 standard. This standard is used to specify the physical layer and media access control for power-constrained sensing nodes. Based on the IEEE 802.15.4 link layer standard, ZigBee is a low-cost and low power radio protocol. As summarized in table 4, it mainly operates in the 2.4 GHz frequency band, but can also support the others frequency bands for ISM such as 868 MHz, 915 MHz and 920 MHz band. It data throughput can be up to 250Kbps, but is typically used at much lower data throughput, which reduces the power consumption of sensing devices  IEEE 802.15.4 based network specifications rely on a large number of nodes, resource constraints (low bandwidth, power, processor, etc.) and small size of packet length (127 bytes max) while the maximum transmission unit (MTU) of the IPv6 packet is 1280 bytes [22]. To cope with ZigBee wireless network features, protocols designed by IETF groups are required to use IPv6 protocol over ZigBee-based WSN. In  addition, the current version of ZigBee protocol known as ZigBee IP [13] offers a scalable architecture, which allows the integration of IPv6 protocols into IEEE 802.15.4 based network in order to provide a seamless connection to the Internet. It also supports 6LoWPAN standardization as well as all protocol standards established by IETF groups. To reduce transmission overhead, 6LoWPAN protocol will be used for IPv6 packets encapsulation and header compression. This will allow IPv6 packets to be sent and received over the ZigBee wireless network.

The network is composed of a large-scale of sensor nodes with multiple sink nodes. Each node is addressable and reachable via IPv6 protocol. All the nodes are static and the sink nodes are connected to local computers through serial ports. The sink nodes connected to computers play the role of gateways. In this case, the gateways act as ZigBee IP border router for Internet control access [13] but also to control 6LoWPAN operation for IPv6 packets fragmentation. In [80], the authors carried out the design of sensor nodes and gateways that can be used in the implementation of interconnecting IPv6 wireless sensor networks with Internet. In practical, sensor nodes are relatively far from sink nodes. This can affect the efficiency of data transmission from energy consumption and loss of data packet if each sensor has to transmit its data directly to the sink. That is why the data collection will be organized through multi-hops to reach the sink. Therefore, to reach the data collection point, the IPv6 data packet will be handled by a set of relay nodes. Thus, each sensor node is configured to play the role of transmitter and receiver with the capacity to relay data generated by its neighbors. Data collection through multi-hops is ensured by the routing protocol designed by an IETF group in order to efficiently transmit IPv6 data packet from the transmitter to the receiver via reliable radio link using the standard IEEE 802.15.4, which works with very low bandwidth and power consumption. The overall SHM framework is illustrated in figure 3.

IoT data management platform (Back end system)   Router  ServersFirewall  Applications  Sensor node  ZigBee-based IoT Network  Cloud computing platform (optional)  Firewall Data center Virtual machines  Bridge Monitoring  Building Monitoring  Railways track  ...

Internet  Sink node  management center  Web interface  Data collection point    Fig. 3 SHM framework overview based on IoT using ZigBee protocol    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    TABLE IV.  WSN BASED IEEE 802.15.4  Proprieties ZigBee (802.15.4)  Battery Lifetime 2 ? 3 years  Frequency 2.4 GHz  Max Data Rate 250 Kbit/s  Range 50 ~ 300 m  Network Type  WPAN    TABLE V.  PROTOCOL STACK FOR IOT BASED WSN  Layers Protocols  Application CoAP  Transport UDP ICMP  Internetwork RPL  IPv6 (6LoWPAN)  Data link IEEE 802.15.4 MAC  Physical IEEE 802.15.4 PHY    Due to the resource restrictions, the IPv6 data packet transportation is ensured by UDP protocol, since TCP is considered as a great resources consumer. UDP is useful for data packet transmission without having to establish a connection and is suitable for the real-time system.

Furthermore, ZigBee IP enables end-to-end IPv6 support without the need for intermediate gateways. In order to remotely control sensors and gateways and allow sensing data access from remote places, the end-to-end communication and data exchange across the internetworks will be controlled by the constrained application protocol (CoAP), which is an asynchronous request/response protocol built over UDP [81].

CoAP implemented in the application layer, is similar to HTTP [82], an Internet-based client/server model. The key difference is that CoAP is optimized for constrained networks due to the high overhead introduced by HTTP. CoAP is a specialized web transfer protocol that enables the sensor nodes to behave as web devices while using REST (REpresental State Transfer) methods (GET, POST, PUT, and DELETE) to retrieve sensor data and control nodes within the network. In this context, all sensors node will act as CoAP servers in order to make data available for any incoming request from the consumer. CoAP is today the de facto standard for application layers that enable web services in constrained networks. Its architecture and application are shown in [22][81][83-87].

Regarding the huge amount of data generated by sensors, a back-end system is built on the top of the acquisition system with big data technologies in order to store and process all data acquired from sensors. The back-end platform can be hosted either by a cloud infrastructure or a traditional data management center for permanent data storage and processing.

End users may access, add or retrieve information through the Internet and another channel available for data processing and analysis.



V. DATA TRANSMISSION USING ROUTING PROTOCOL FOR LOW POWER AND LOSSY NETWORK (RPL)  SHM requires efficient and reliable data collection from the large-scale wireless network composing of thousands of nodes with smart sensors. A factor that needs to be taken into account is that all the sensors are limited in resources such as energy, bandwidth, memory space and processing power. Moreover, based on IoT concept, the nodes generate and transmit an IPv6 data packet that needs to be routed through a low power and lossy network based IEEE 802.15.4 standard to reach the data collection point [18] [88] [89]. Due to the low-power and lossy nature of wireless sensor networks, the IETF group charted an open source IPv6-based routing protocol called RPL (Routing protocol for low power and lossy network) [21]. RPL aims to minimize the resources usage during a data collection as well as to avoid routing loop and packet loss. To ensure an efficient data collection, the protocol is based on multi-hops routing where each node select a set of parents for building an optimum route that gets to a sink.

RPL is considered as the routing standard for IoT and can be defined as a distance vector routing protocol optimized for WSN that use IPv6 [21] [90]. It operates in the network layer as shown in table 5 in order to support different link technologies. The routing protocol concept is to build a Destination Oriented Directed Acyclic Graph (DODAG), which target a single destination with the objective to avoid routing loops, then, an objective function (OF) based on metrics and constraints criteria is used to find the best path that reaches to the sink (also called DODAG root). RPL specifies three types of ICMPv6 to control messages and information related to a DODAG. These three types of control messages are:  ? DIO (DODAG Information Object): It is used during the DAGs construction; it contains all information needed for routing control (upward routes). This information may include node Rank, RPL Instance, the IPv6 address of the sink, etc.

? DIS (DODAG Information Solicitation): This is use by a node to solicit a DIO message from a reachable neighbor.

? DAO (Destination Advertisement Object): It is used to drag IPv6 data packet from the source node to the sink (root) through different relay nodes along the DODAG.

Over the last few years, RPL has become a hot topic in literature related to WSN integration with Internet protocols, For instance, the performance of RPL from different perspectives is evaluated in [91-96] in order to analyze and provide an insight about this novel routing protocol. Moreover, to enhance RPL performance, different approaches of the routing protocol have been proposed in the literature. For example, the authors in [97] proposed Co-RPL which use the Corona mechanism to improve node localization mobile wireless sensors networks since most of IoT device are mobile such as smart phones, home appliances etc. The authors in [98] proposed a routing protocol called CA-RPL, which use a routing metric that minimized the average delay towards the DAG root. Their purpose was to control transmission delay in order to avoid congestion while transmitting data packets.

2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    Other proposed solutions based on RPL are summarized in [99] [100].

A. DODAG construction process  The SHM framework presented above consists of a set of stationary sensor nodes, which periodically generate and transmit data. The data are encapsulated into IPv6 packets and have to find an optimum route through the low power network to get to a sink. The sensor network deployed is composed of multiple sinks. Thus, the RPL topology is based on multiple DODAGs with one DODAG per sink within the RPL instance as shown in figure 4. A DAG is the conversion of an existing physical network into a logical routing topology.

A sink is considered as the DODAG root and starts the DAG building process by sending a DIO to its neighbors. All nodes around the root receive and process the DIO message in order to make a decision to join the DODAG or not. A DODAG ID identifies each DODAG. All node that joins a DODAG, compute their position relative to the sink, which is called node rank. A node computes its rank based on the objective function and information received. Then, it starts transmitting its own DIO messages to its neighbors in order to act as a relay node (router). A neighbor that receives the DIO can decide to choose the node as its preferred parent or simply ignore the DIO regarding the node rank or distance. The choice is made such that the ranks of the parents are lower than the node that is choosing its preferred parents. Here, the RPL implementation is optimized as upward routing that enables nodes to send IPv6 packets in an upward direction with multipoint-to-point traffic. The DODAGs constructions continue until all nodes in the network choose their DAG and their preferred parents. A node can join only one DODAG within RPL instance. A node that joins a DAG can also act as a leaf node without having to send any DIO. In this case, it just has to forward the data packet to a reachable neighbor that will find the way toward the sink. All the nodes within the same DODAG listen to DIO messages and according to the objective function, they build an optimized route that leads to the sink.

RPL Instance 1  DODAG2 DODAG 1  Fig. 4 An example of RPL topology      B. The objective function (OF)  The objective function (OF) defines how nodes within an RPL instance select the best path to reach the sink. It uses  routing metrics and/or other constraints [101] to form the DODAG and build the path from a data source to the DODAG root. An objective function optimizes the routing metric or constraints for finding minimum cost paths in a DODAG.

Various objective functions have been proposed in the literature. However the most popular used are Objective Function zero (OF0) [102] and Minimum Rank with Hysteresis Objective Function (MRHOF) [103]. The first one is based on hop count metric with the objective to use less intermediate nodes to reach the sink. The second one uses expected transmission count metric (ETX) to find reliable link quality between nodes in order to minimize the path cost. Introduced by De Couto et al. in [104], ETX is used to estimate the number of times a packet from a node has to be transmitted over a link to successfully be delivered to the sink. It considers the delivery ratio in forward and reverse directions based on data and ACK frame transmission and it is given by the equation 1 bellow [101] [104]:  ???? ???  =  ??(????)  ? ??(???) (1)  where:  Ps(Data) is the probability of success that the neighbor receives a packet. It indicates delivery ratio in the forward direction.

Ps(ACK) is the probability that the acknowledgment packet is successfully received. It indicates the reverse delivery ratio.

The path cost of the best route that can be used to reach a destination from the data source is given by [104]:  ???? ???? =  ? ???? ????                               (2)  Assume a set of neighbor nodes N, which are in the transmission range of a node n, the node n will choose a node p as a preferred parent if the following conditions hold:  ????(?) <  ????(?)     ???? ? ? ?               (3)  The exact way the rank is computed depends on the OF operating in the DAG. For example, the node n in a DAG can compute its rank by adding a value derived from the ETX of the link to the rank of p. where p is a parent of node n.

????(?) = ????(?) + ???(?, ?)                 (4)  Another example of an objective function based on energy routing metric associated with ETX can be used in order to find the shortest path while minimizing the energy consumption during a data packet transmission. In this scenario, the objective function is defined such that it first estimate the minimum energy required to successfully send a packet on each link [105]. Using this objective function, a node can compute its rank by considering the energy metrics as follow:  Let PTx be the transmitted power required to transmit and propagate a single data packet on a link, in order to successfully reach a destination. The power consumption required to transmit a data packet through a link is determined as:  ??? =  ?? + ??? ?                                 (5)    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    where PT is the power dissipated in the circuitry to transmit one bit and Pd is the energy dissipated for propagating the packet over a link distance d between the transmitter and the receiver,  ? denote the path loss exponent. If the distance is less than a distance threshold, the path loss exponent n=2 otherwise n=4.

Thus, the energy consumed by sensor node n to transmit a single data bit packet to a parent p is given by:  ???  = ???  ? ?  ? (6)  Where the ratio x/l denotes the transmission delay require for pushing all the packet bits on to the link. x is the data packet size transmitted and l is the data rate on the link.

Let pe equal to the probability that an error can occur on the link while transmitting a single packet with the transmitted power PTx. Therefore, the probability to receive a packet sent is denoted as (1- pe). The ETX between two nodes to deliver one packet is computed as the reciprocal of their packet delivery ratio (PDR) [105].

As known,  ??? = ????? ?????? ????????  ????? ??????? ???? (7)  Therefore,  ????? =  ????? =   (1 ? ??) (8)  Thus, the expected energy needed to deliver the packet successfully across a link is determined as:  ???(?, ?) = ?????  ? ???                               (9)  Finally, the routing metric can be defined as follow:  ?(?, ?) = ?????  ? ???                              (10)  Since the data packet size and the data rate on the link are both a constant. And a node rank can be computed as follow:  ????(?) =  ????(?) + ?(?, ?)               (11)  The choice of relay nodes is done such that a data packet from a transmitter will be propagated trough a reliable link to reach a receiver with minimum energy consumption. The author in [105] carried out the validation of energy metric for RPL routing protocol in smart building. The author has evaluated the effectiveness of this metric and compared its energy usage with that of paths computed using ETX on some sample network topologies. The evaluation results have shown a good performance and energy consumption improvement on the different network topologies. The expected transmission energy have been implemented and tested and implemented using a pair of Zolertia Z1 motes.

C. Simulation tools  For further development, the simulation task can be achieved on Cooja, which is a Contiki network simulator that  allows developers to simulate a large or small network of sensor nodes with Contiki OS [106-108]. Contiki OS provides different network mechanisms for IPv4 networking; IPv6 networking, etc. The IPv6 networking consists of an IPv6 stack (uIPv6), which was contributed by Cisco, and contains RPL routing protocol and 6LoWPAN header compression and adaptation layer. This platform is useful to test the different codes and systems before real IoT system implementation.



VI. DATA STORAGE AND PROCESSING PLATFORMS  As mentioned previously, SHM systems rely on a set of technologies. Such technologies include sensing modules, advanced communication hardware, storage and computing platforms used to acquire, transport, store and process data generated by sensors. Recent advances in sensor technology have led to the development of smart sensors, which are widely used in SHM system deployment. Moreover, multimedia devices such as video camera are also deployed to acquire images and video, which will be synchronized with other sensing devices measurement. These heterogeneous devices installed on a structure that is monitored generate continuous or intermittent data. The volume of SHM data collected grows and will even continue to increase rapidly with IoT integration.

This massive amounts of data coming from IoT devices are usually unstructured and semi-structured, which can be explained from a big data [7] [109] [110] perspective on SHM.

To complete the SHM framework described in previous sections, data storage, and processing platforms constitute a crucial issue that needs to be solved regarding the complexity and volume of data generated by a large number of smart sensors, and multimedia devices installed on structures. Over years, relational database management systems (RDBMS) have provided a great support for SHM data management system.

However, the limitations of relational databases to support big data have seen in the past few years, the emergence of novel database management systems. Companies like Google, Apache, Facebook and other startups have proposed some solutions to deal with big data [111-113]. Most of their solutions are based on distributed, parallel or in memory processing and can be deployed easily in cloud systems as summarized in [114] [115] where the most popular examples are NoSQL databases and Hadoop.

Hadoop [116] is an open source framework designed to deal with large amounts of data. It stores heterogeneous data over multiple nodes of servers via its distributed file storage system (HDFS) and then performs distributed computing task using MapReduce functions. Hadoop is designed for batch processing rather than real-time processing. Nevertheless, Hadoop is a leverage system for some projects like Kafka, Storm or Spark, etc. which are able to perform real-time data processing on large distributed data sets [117].

As for NoSQL (Not only SQL) databases [112], it is a non- relational database management system that provides new ways of storing the huge amounts of data with flexible schemas.

These databases are classified into four major types: Key-Value databases, Document databases, Column-Family databases and Graph databases [118-121]. Numerous big data analytics tools have been developed in the recent few years. All have different characteristics, deal with both structured and unstructured data    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    and provide novel storing and querying strategies that make them better fit different types of applications.

Fig. 5 An Overview of some popular Big Data analytics technology    The figure 5 above summarizes the most popular open source technologies used to deal with big data management. As described above, there are numerous big data technologies with different features, all providing scalability, reliability and distributed solution to store, process and access large amount of data faster via a novel and sophisticated query language or API as presented in [122-126]. The need to collect massive amounts of data and access them in near or real-time boosts the utilization of NoSQL databases for IoT data management systems. NoSQL databases run on several clusters that guarantee a good performance.  The authors in [124] and [127] have compared the performance of some popular NoSQL- oriented document databases with some traditional relational databases. Their results showed that NoSQL databases provide good performance especially in terms of reading and writing speed.

As mentioned earlier in this article, CoAP is proposed by IETF group to optimize the use of web service architecture in constrained nodes of wireless sensor networks, using CoAP.

Data collected by sink nodes are transmitted in the form of JavaScript Object Notation (JSON) to a Web server where they are stored. Then RESTful services through the well-known method (GET, PUT, POST, DELETE) are used to access and manipulate data stored in the web server. Among the most popular NoSQL databases, CouchDB and Couchbase Server are distinguished from others by their ability to store data in JSON format and enable RESTful interaction through uniform interfaces addressed by URIs. CouchDB and Couchbase are two popular NoSQL document database specifically designed for interactive web, mobile, and IoT applications. In addition, Couchbase server can be associated with Spark to accelerate data-driven for real-time or near-real-time data processing in a fault tolerant and distributed manner. Using CouchDB, Couchbase server, and Spark engine, the data-driven process  can be organized as shown in Figure 6. First, the raw data acquired from sensors are stored temporarily in CouchDB, which is a good choice since the end-to-end communication is ensured by CoAP protocol. CouchDB [123][128] is one of the most popular NoSQL document-oriented databases designed for web applications and are used to handle large and various data type. It provides a schema-free model to store data in JSON format and offers a RESTful HTTP API for query processing. Since raw data from sensors are unreliable and noisy, data stored in CouchDB are extracted and pre-processed in order to remove noise and be reorganized before processing task [40] [73]. The pre-processed data are saved in Couchbase server for permanent storage and processing purpose.

Couchbase server [129] is a document-oriented and key-value NoSQL database designed for the web, mobile and IoT applications. It enables flexible data model to store both JSON documents and key-value pairs. It provides asynchronous replication, which guarantees scalability and high availability.

Couchbase is just the successor of CouchDB but it has been architected to provide high performance and sophisticated query language [130] [131].

Couchbase server is used to store sensing data, information relative to the structure as well as data processing and analysis results as enumerated in table 6. Couchbase is selected for the permanent storage since it offers a great combination with spark to build a powerful and real-time data storage, processing and analytics platform for IoT system [132]. Spark is chosen as processing engine in order to use its machine-learning library to develop algorithms relative to features extraction and selection for damage detection as well as pattern recognition and fusion techniques. Apache Spark [133][134] is a real-time data processing engine, suitable for small and large-scale data sets processing and analytics. It provides different components necessary to perform streaming, SQL, machine learning and  Data Processing Hive, Pig, REST APIs, N1QL, Scope, Spark SQL, etc.

Data storages Graph  BigTable, Cassandra, HBase, etc.

Neo4J, OrientDB, ArangoDB, etc.

Engine Hadoop, Spark, Storm, etc.

Search & Query  Methods  Big data analytics tools  MapReduce, Machine Learning, Statistics, etc.

CouchDB, MongoDB, Couchbase Server, etc.

Redis, DynamoDB, Riak, etc.

Key-Value  Document  Column-Value  NoSQL Databases  Hadoop Distributed File System (HDFS)    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    graph processing. Spark core uses a programming abstraction known as Resilient Distributed Datasets (RDD) for management tasks such as loading data sets from the data storage platform into the processing engine and then sending the result back. Apache Spark enables different programming languages such as Scala, Java, Python and R for data processing and machine learning applications development [135-137].

The storage and processing platforms provide web interfaces that allow monitoring, administrating and processing.

End users interact with the data storage and processing engine through the web applications with a set of security and access permissions. The end user purpose is to read, write, analyze and interpret information relative to damage detection process for decision-making. The analysis results and information about structure are saved back in Couchbase server.

Fig. 6 An example of data-driven workflow in SHM framework based IoT using big data technologies    TABLE VI.  SHM BASED IOT DATA MANAGEMENT PROCESS  Data to be recorded Data management  ? Sensing data  ? Structural information  ? System information  ? Sensors information  ? Data analytics & processing results  ? Maintenance history, etc.

? Data modeling & storage: This involves the exploration of the structuring of data collected in order to store them in the database. Data modeling for document databases is not that different from what is done for relational databases  (RDBMS) during the conceptual and logical phases, where the different entities are identified as well as the dependence between them. Each entity represents a homogeneous set of attributes identified by a primary key. However, the major  difference occurs on the physical modeling phase. During this phase, relational databases organize and normalize entity  into separate tables with foreign key to represent relationships, As for document database; it stores an entity instance in JSON format, which allows great flexibility. Within document databases related entities can be denormalized and  nested hierarchically into a single document by using the foreign key as reference [123] [138] [139].

? Data querying: While the volume of data stored in databases is constantly being increased, SQL join operations are become a complex task and take too long to read and write large data sets into relational databases, due to the database structure, which tends to a rigid schema and does not support scalability. To cope with this issue, document databases  like Couchbase server provides a powerful query language called N1QL based on SQL but adapted for JSON data.

CouchDB and Couchbase server allow querying operations based on REST and CLI APIs to create, read, update and delete data. They also used MapReduce and key-value APIs to access data and retrieve data [123] [138].

? Data organization: This is related to data preprocessing and transformations techniques. Various techniques have been developed for data preprocessing. Examples include data cleansing such as filtering, outlier analysis or data reduction  using smoothing and de-noising procedures [40] [74] [140].

? Data processing: The data processing phase needs to be achieved before data can be analyzed for decision-making. This phase refers to the selection of specific algorithms based on machine learning, statistical model, and/or signal  processing methods. The data processing involves several steps such as feature extraction or selection, information  condensation and pattern evaluation that lead to knowledge discovery. There are numerous methods proposed in the literature to achieve data processing tasks. The common approaches are based on time-variant procedures, linear or  nonlinear transformations. These methods rely on vibration measurement and changes in modal parameters such as the  change in the natural frequencies and change in dynamic flexibility [40] [73] [74].

? Data analysis & interpretation: This can be seen as the extension of data processing tasks. In this phase, data are synthesized and presented in a form that can be easily understood by end users. Data analysis is crucial for damage  identification, localization, assessment, and prediction. Various methods are available for data analysis and  Certification  ? Probability of damage detection  ? Reliability of information  ? Accurate prediction results    Data Management (off-site)                                    Data Acquisition (on-site)                                    Data Retrieval (End User)                                      CouchDB  Temporary storage  Spark (Data Processing) ? Feature extraction  ? Feature selection  ? Pattern recognition  Information Processing  ? Feature Fusion  ? Information    Organized data Analysis results  Couchbase server  Permanent storage  Raw  data  Smart sensors  Data Pre-processing  ? Cleansing  ? Normalization  Decision-making  ? Presentation  ? Interpretation  ? Decision      2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2017.2664072, IEEE Internet of Things Journal    interpretation such as data fusion, correlation, classification, regression analysis, clustering analysis, time series  analysis, neural network, visualization techniques, etc. [74] [141].



VII. SUMMARY AND FUTURE DIRECTIONS  In order to provide a framework for SHM implementation, this paper intended to give a survey of current technologies on IoT paradigm. It can be seen that the choice of wireless technologies, which address SHM system deployment based on IoT, is extremely large. As IoT is a technology that is in trend, a myriad of technologies is being developed to meet all the requirements from IoT community. A number of solutions for IoT communications of SHM have been proposed in recent years to connect net device, which is able to sense and collect useful information. The main characteristics of these solutions are:  ? Most of the solutions use licensed or unlicensed spectrum bands (Cellular or non-cellular technologies).

? Low power consumption, which provides a long life of sensing devices battery and increase network lifetime from 5 to 10+ years.

? The selection of reliability and safety sensors  ? Data rate from 100 bps to 250 kbps.

? Short or Long geographical coverage (ZigBee/IEEE 802.15.4 standards, Low-power WI-FI or LPWAN technologies).

While the IoT explodes with innovative standards and network technologies, the requirements may be different when selecting an IoT solution for intelligent and reliable monitoring system implementation. Therefore, a thorough analysis and evaluation of the needs and expectations have to be considered along with the performances and specific requirements of the application. Depending on the requirements in terms of geographical coverage (short range or long range connectivity), data rate transmission, packet size, power consumption, latency, bandwidth, etc. there is a wide variety of new standards and protocols that are designed to meet the target of performance and expectations of IoT-based systems. Nowadays, most of these technologies are already being used in several IoT applications and will evolve significantly in future with the fifth generation wireless systems (5G cellular connectivity), which is expected to be rolled out by 2025. This survey provides an insight to SHM deployment using IP protocols to interconnect WSN with the Internet. The framework presented in this paper consists on the deployment of WSN using ZigBee protocol to extend IP networks to IEEE 802.15.4-based MAC/PHY technologies. Until recently, the ZigBee protocol does not support IP whereas this has been solved with the new version of ZigBee known as ZigBee IP. This new version has been architected for any link layer within the 802.15.4 standard and it incorporates IPv6 technologies for low power wireless sensor networks such as 6LoWPAN and RPL that optimize meshing and routing for wireless sensor networks. The  investigations have shown that existing Internet protocols such as TCP and HTTP are not optimized for low power wireless sensor networks. However, this blend of technologies incorporates into the new ZigBee protocol enables the implementation of IP protocols suite in IEEE 802.15.4 based network and seamlessly allow the exchange of information between devices utilizing any IP-enabled MAC/PHY. With the IoT-based system, relational database adopted over years to store SHM data might be overwhelmed by the huge amounts of data generated by sensors. Thus, big data technologies have been introduced in order to provide a powerful and modern architecture that can accelerate data-driven and data mining process. The big data tools identified in this paper provide low- cost hardware and can be a complement for existing SHM data management and mining infrastructures. They can be used to provide reliable, scalable, flexible and low latency solutions for SHM systems and can be deployed either in a modern data center or in cloud architecture.

Despite the tremendous technologies developed in recent years, there is still room for further development including virtualization of sensors and IoT devices, scalability, heterogeneity, interoperability and security to take full advantage of systems based IoT. Furthermore, techniques for IoT integration into SHM in order to effectively achieve real- time data collection, data processing, event-driven and real- time decision-making should be taken into account for future research. The next step of this work will focus on remaining challenges and the development of a SHM application based on IoT by implementing and testing the framework described in this survey and as summarized in table 7. In addition, various algorithms for damage identification purpose in structures will be proposed using Spark libraries respectively for machine learning and graph analysis for a specific SHM use case.

TABLE VII.  DESIGN REQUIREMENT FOR SHM FRAMEWORK BASED IOT  Parameter Requirement  Sensing modules Thousands of sensors and actuators are needed for large-scale network  Motes Tmote Sky, Zolertia Z1 motes or MicaZ  Operating system Contiki OS  Network topology Multi-hop mesh network  Mobility All static  Transmission range 50 ~ 300m  Max. Bit Rate 250 Kbit/s  Nodes Power source Often from internal Batteries  Network lifetime ~ 5 years  Wireless channel 2.4 GHz, Low-power radio based ZigBee 3.0 protocol  Identification IPv6 addressing on each node    2327-4662 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

