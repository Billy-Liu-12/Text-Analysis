

Abstract?Sensor association rules have been found to be very useful for improving the quality of service, energy conservation, resource management, etc. in wireless sensor networks(WSN). To mine sensor association rules, behavioral data, which describes the sensor activities, are required to be sent to the central node(sink node) by the sensors. However, it is not feasible for the sensors to send the whole behavioral data to the sink because of the limited resources such as power, processing capacity, storage, etc. available to the sensors. So, efficient data gathering mechanisms are required for sensor association rule mining. One recent and efficient data gathering mechanism for sensor networks has been proposed by Azzedine et. al, which exploits redundancy between sensor activities and uses a data gathering tree called MNDGT (Minimum Node Data Gathering Tree). In this paper, we have tried to enhance the algorithm proposed by Azzedine et. al by removing more redundancy between sensor activities. Simulated experimental results have shown that the enhanced version has reduced the amount of data to be sent to the sink to a great extent.



I. INTRODUCTION Wireless Sensor Networks(WSN) is a network of sensors,  which are capable of sensing, processing and transmitting.

Each sensor monitors different parameters such as light, temperature, humidity, etc. and reports to a predefined central node(s) called sink(s) in multi-hop mode of transmission.

WSN has been found to be very useful in various fields such as military applications, agriculture, weather monitoring  and forecasting, forest fire monitoring, physical environment monitoring, etc. [1]?[3]  In addition to the unreliable wireless communication, nodes of a WSN have to work with limited resources such as limited energy, limited processing capacity, limited storage, limited memory, limited communication capacity, etc. So, WSN suffers from lot of problems such as lost messages, delay in data delivery, loss of data, data redundancy, etc. [3]? [5] , resulting in poor quality of service(QoS). Various techniques and protocols have been suggested to improve the QoS of WSN [6], [7].

Recently, data mining techniques have been found to be very useful to extract the patterns describing the behavior of  the sensors and the network, which can be used to improve the performance and QoS of the network. Among various data mining techniques, association rules, called sensor association rules, have been used extensively in WSN [5], [8].

Sensor association rules find the temporal relationships among the sensors. As an example, one sensor association rule may look like (s1, s2) ? (s3, s4), 75%, ?. This rule states that if events are received from sensor s1 and s2 , there is a 75% chance of receiving events from sensors s3 and s4 within  ? units of time. This rule can be used to predict the sources of future events, identify the faulty nodes and predict the overall behavior of the network. Mining sensor association rules involves two steps: the first step is about collecting the behavioral data, which shows the sensor activities, and the second step is about finding association rules from the behavioral data. This paper is about the first step.

Collecting sensor behavioral data is a costly affair in a sensor network because of the limited resources of the sensors.

So some aggregation techniques such as sum, average, count, etc. are used to reduce the data size and number of messages.

These techniques are not suitable for application to sensors data activities. Again, it has been found that there exists lot of redundancy in the sensor behavioral data, which is responsible for consuming more resources in the network. So, a data reduction mechanism is required to reduce the amount of data to be sent to the sink node(s). Two mechanisms for collecting data - direct reporting and distributed storage - can be found in [9].

One recent and efficient data reduction mechanism for mining wireless sensor networks has been reported in [8], which exploits the redundancy among the sensor activities.

The data reduction is implemented on top of a data gathering tree called MNDGT(Minimum Nodes Data Gathering Tree), which is constructed from nodes that will participate in the mining process. In this paper, we have tried to enhance the technique given in [8] by removing more redundancy from the behavioral data. It has been found from the experimental results(simulated) that the enhanced version reduces more data than that of the technique reported in [8].

Rest of the paper has been organized as follows. Section II explains the sensor association rules, followed by section III, which discusses in-network data reduction mechanism briefly.

Section IV gives the enhanced data reduction mechanism.

Section V and VI presents the experimental results and conclusion respectively.



II. SENSOR ASSOCIATION RULES Association rule mining is an important data mining  technique and has been used extensively in various domains [10]? [12]. However, sensor association rule mining is a little bit variation from the association rules discussed in [10], and can be defined as follows.  Let S = {s1, s2,. . ., sn} be the set of sensors in a sensor network. Let time is divided into equal sized slots {t1, t2, . . . tm}  such that ti+1 ? ti  = ?, where ?  is size of each time slot. This = tm ? t1 is the historical period of the data defined during the data extraction process  is the historical period of the data defined during the data extraction process.  A set of sensors  P = {s1, s2,. . . sk} is called a pattern of sensors.  An epoch is a couple  E =(Ets, P)  such that all sensors in the pattern P detect events within the same time slots (Ets),  and a  sensor database DS(also called behavioral data) is defined to be a set of such epochs(Table I). An epoch E(Ets, P) is said to support  a  pattern P1, if P1 ? P.

The frequency of a pattern P1 in DS is the number of epochs in DS that supports P1. Sensor association rules between two patterns P1 and P2 are the implication of the form P1 ? P2, where P1 , P2 ? S   and P1 ? P2 = ? .  Support of the rule is the frequency of P1 ? P2,  and confidence of the rule is calculated as frequency(P1 ? P2)/ frequency(P1).

TABLE I: DATABASE OF EPOCHS. TS: TIME, S: SENSORS  Ts Epoch 1 s1, s2, s5 2 s1, s3, s5 3 s2, s4   WSN can be assumed to be consist of a set of sensors  nodes S = {s1, s2, s3,. . .,sn}. Time is divided into slots of equal size  ?.

Each sensor has a buffer B ,one entry for each time slot. At the end of every time slot, each sensor sets the corresponding buffer entry to denote whether an event has been detected at that time slot. For example, a sensor  buffer with seven  time slots may look like {0, 0, 1, 1, 0, 0, 1 }, which shows that events have been detected by the sensor during 3rd, 4th and 7th time slots.



III. A NEW IN-NETWORK DATA REDUCTION MECHANISM TO   GATHER DATA FOR MINING  WIRELESS SENSOR NETWORKS [8] Sensor nodes in a sensor network are required to send the  activity set(behavioral data) to the sink(s) for mining sensor association rules. However, it is not feasible or desirable to send the whole activity set to the sink(s) because of the limited  resources available to the sensor nodes. Moreover, there exists lot of redundancy in the behavioral data.  So, an efficient data gathering mechanism is required for gathering the behavioral data.

The reduction technique proposed in [8] is an efficient one for gathering behavioral data because it is the first algorithm which has tried to reduce the redundancy in the behavioral data. The technique is  implemented on top of a tree called Minimum Node Data Gathering Tree(MNDGT), which consists of the nodes that will be required for mining sensor association rules and maintaining the minimum distance from the sink node. Once the tree is constructed, it is used to remove the redundancy in the messages to be sent to the sink, and the same tree is used to relay the data to the sink. For this purpose, reference set and difference set are constructed for every node in the tree. These reference sets and difference sets are sent to the sink, and the original activity set of the nodes are reconstructed in the sink from these reference sets and difference sets. The whole process is little bit complex. So, due to space limitation, it will not be possible to discuss the complete algorithm in detail. However, readers may go through the paper [8] for the complete algorithm.



IV. THE ENHANCED DATA REDUCTION MECHANISM  The proposed data reduction mechanism to gather data for mining sensor association rules is an enhancement of the data gathering mechanism reported in [8]. In the algorithm, the sensor nodes have to send the difference sets to the sink.

However, it has been found that for a large network, the difference sets also become very large, and there exists a lot of redundancy in a large difference sets. Our aim is to reduce the redundancy in difference set. For this purpose, we have used the same technique as used in [8] on the difference set. As for example, let us consider an activity set as given in Table II for a sensor network with 16 nodes(s1, s2,..., s16), 1 sink node and 8 time slots(1, 2,..., 8). The corresponding reference set, difference set and the set of messages to be sent to the sink by the sensors are given in Tables III, IV and V respectively.

Table II: ACTIVITY SET  Sensor ID Activity Set s2 {1, 2, 3, 4, 5} s4 {1,3, 4, 5, 6 ,8} s5 {1, 3, 4, 5} s7 {1, 2, 3, 5, 6, 7, 8} s12 {1, 2, 3, 4, 6, 8} s13 {1, 2, 3, 5, 8} s14 {1, 3, 4, 5} s16 {1, 2, 3, 4, 6, 7}  TABLE III: REFERENCE SET  Parent ID Reference Set s2 {1, 3} s3 {1, 3, 4, 5, 6, 8} s7 {1, 3} s10 {1, 3, 5} s12 {1, 2, 3, 4, 6}       In this context, readers are requested to refer to [8] for the methods of construction of reference set, difference set and message set. It can be observed from the message set that there is a lot of redundancy in the messages(column diff-set of Table V) to  be sent to the sink by the sensors. As for example, while s7 is sending { 5 }, { 2, 4, 6} and {2, 5, 6, 7, 8} to the sink, it has to send 5 twice, 2 twice and 6 twice, which is not desirable. Our aim is to remove this type of redundancy by reducing number of messages, resulting in more saving of energy of the sensors. For this purpose, we have grouped the messages (Sender ID, Diff set) in such a way that every message is included in exactly one group, one Sender ID occurs in a group only once, and at the same time number of groups should be minimum. Using this rule, the messages in Table V have been divided randomly into three groups as shown in Table VI.

Now, the in-network data reduction technique[8] will be used for each group separately to send them to the sink. On receiving the groups, the sink will reconstruct the original message table. This way, number of messages to be sent to the sink will be reduced to a great extent.

TABLE IV: DIFFERENCE SET  Sensor ID Diff-AN Diff-RN s2 {2, 4, 5} s3 S4 { } s5 {4, 5} s7 {2, 5, 6, 7,8} { } s10  {5} s12 {8} {2, 4 ,6} s13 {2, 8} s14 {4} s16 {7}  TABLE V: MESSAGES TO BE SENT BY THE SENSORS  TO THE SINK  Type Sender ID  Ref code Diff-set Sensor- ID  AN s10 s10 {3, 8} 13 AN s10 s10 {4} 14 AN s12 s12 {8} 12 AN s12 s12 {7} 16 RN s7 s7 {5} 10 RN s7 s7 {2, 4, 6} 12 AN s7 s7 {2,  5, 6, 7 ,8} 7 AN s2 s2 {2, 4, 5} 2 AN s2 s2 {4, 5} 5 RN s2 s2 {} 7 AN s3 s3 {} 4    TABLE VI: MESSAGE GROUPS  I II III s10 {3, 8} s10 {4} s7 {5} s12 {8} s12 {7} s2 {} s7 {2, 5, 6, 7, 8} s7 {2, 4, 6} s2 {2, 4 , 5} s2 {4, 5} s3 {}

V. EXPERIMENTAL RESULTS Several simulated experiments have been conducted to  study the performance of the proposed data reduction mechanism and the in-network data reduction mechanism [8].

The simulation is based on C++, with 961 sensors deployed in a grid of 300m ? 300m. The sensors are 10m apart among themselves, and each of them can communicate with its eight neighbors. TDMA based MAC protocol has been assumed for the experiments, and the experiments are based on the number of messages to be sent to the sink node. It has also been assumed that each element in activity sets and different sets will be sent in a separate message to the sink node.

A slot size of 30 seconds, and historical period of 3 days and 5 days have been used for the experiments. The simulator has been run several times to find the number of messages for support values of 10% to 90%. Figures 1 and 2 show the number of messages for different support values. It can be observed from the experimental results that proposed data reduction mechanism has reduced number of messages to a great extent in comparison to the in-network data reduction mechanism.

Figure 1 : Number of messages versus support values for 3 days        Figure 2: Number of messages versus support values for  5 days

VI. CONCLUSION This paper has presented an enhanced version of the in- network data reduction mechanism proposed by Azzedine Boukerche. The experiments have shown that the enhanced version has been able to reduce the number of messages to be sent to the sink to a great extent. However, more experiments may be required to evaluate the performance of the algorithm.

