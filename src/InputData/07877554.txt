An Efficient Private FIM On Hadoop MapReduce  Trupti V. Kenekar

Abstract? The frequent item sets can provide valuable business and economic insights. It can be also be useful for research purposes. Privacy is also important for rapidly growing of unstructured non-numeric data which is referred as Big Data.

In mining this data objective is to handle such data sets efficiently and preserve privacy in case such large dataset contains sensitive information. Differential privacy is used to protect sensitive information of individual when data released. Proposed system uses non-numeric dataset. Proposed system performs initial processing on non-numeric dataset and finds frequent itemset.

Work is done for applicability of FIM techniques on MapReduce platform. Map Reduce is used to implement the parallelization of FP-growth algorithm, thereby improving the overall performance of FIM. The experimental results show that our proposed system is feasible and valid with good speedup and higher mining efficiency, and can meet the rapidly growing needs of frequent itemset mining for massive small files dataset.

Keywords? frequent itemset mining; differential privacy; non-numeric dataset, Map Reduce;

I.  INTRODUCTION Recently, developments in various areas such as technology, science, user habits, businesses, etc. gave rise to creation and storage of massive amounts of data, so mining of such a big data has become more important for both businesses and academics. Already from the start, Frequent Itemset Mining (FIM) has been a vital part of data analysis and data mining.

FIM attempts to extract information from databases based on frequently occurring events, or a set of events. The events which occur frequently and satisfying   user defined minimum frequency threshold are referred as frequent itemset. Various techniques have been invented to mine databases for frequent events. These techniques work well in practice on general datasets.

In data mining, frequent itemset mining is most important problem. The most widely used method to find frequent itemset are Apriori and FP-Growth. Apriori algorithm which generates candidate set for mining frequent patterns and FP- Growth which mine frequent patterns without candidate generation. In frequent itemset mining algorithm, we take input as a dataset which contains of the transactions by a group of individuals, and algorithm output gives frequent itemsets. This can create privacy concern in case data set contains sensitive data ?how can we be confident that publishing the frequent itemsets in the dataset does not reveal private information about the individuals whose data is being studied? This problem is compounded by the fact that we may  not even know what data the individuals would like to protect nor what background information might be possessed by an adversary [3]. These compounding factors are exactly the ones addressed by differential privacy [2], which guarantees that the existence of an individual?s data in a dataset does not reveal much about that individual. In view of that, this paper explores the possibility of developing differentially private frequent itemset mining algorithms.

The existing system is considering the problem of tradeoff between utility and privacy in designing a differentially private FIM algorithm. The existing system does not deal with non-numeric dataset. Privacy is also important for non-numeric dataset like health care data.

To solve this problem, proposed system uses PFP growth algorithm on non-numeric dataset. As non-numeric data also increasing rapidly to deal with such large dataset we develop a time efficient differentially private FIM algorithm using Hadoop Map reduce. The processing of large data is made possible by using Map Reduce. Proposed system has two phase preprocessing phase and mining phase. In preprocessing smart splitting method [1] is used to transform the database which improves utility and privacy trade off and this preprocessing is performed only ones. In mining phase offset of information loss by splitting, a run time estimation method used to estimate actual support of itemset in original dataset and dynamic reduction method reduce amount of noise added to guarantee privacy during mining [1].



II.  RELATED WORK Many algorithms have been proposed for mining frequent itemset among these FP-growth and Apriori are most useful.

FP-Growth algorithm is faster than Apriori [3].

The author C.Dwork [2] introduced new concept for achieving privacy called differential privacy. This new measure captures the risk to individual record. The privacy problem occurred by involving in a database. This technique used in various papers and it has been proved that it can achieve desired level of privacy. This measure can be useful in many cases where we need to achieve accurate information while satisfying the privacy of individual can be provided while simultaneously ensuring very high levels of privacy.

L. Bonomi and Xiong proposed [4], authors proposed algorithm for frequent sequential patterns which privately mining together prefixes and substring patterns.

International Institute of Information Technology (I?IT), Pune     Zeng et al [3] suggests that if we specify the limit for length of transaction which ultimately improves utility-privacy tradeoff. Author proposed differentially private frequent itemset mining using Apriori algorithm by truncating transaction approach  N. Li, W. Qardaji, D. Su, and J. Cao [5], authors performed frequent itemset mining on transactional databases while satisfying differential privacy. Author proposed PrivBasis approach. In this paper, basis sets notation is used. Basis set is constructed privately and used it to find most frequent itemsets.

The property of -basis set state that if itemset having frequency greater than -basis is a subset of some basis. The result shows this approach works well for transactional database.

Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke [9], authors introduced a framework for association rule mining, from transactions containing of categorical items .for preserving privacy uniform randomization is used. To limit privacy breach author proposed classes of randomization operators. Formulae are also derived for support and its variance which recover itemset support from randomized dataset. They apply this algorithm on real dataset and present experimental result.

In [10], author introduced Map Reduce Apriori algorithm based on hadoop map reduce referred as MRApriori. They have also implemented one phase and k-phase algorithm and compare it with MRApriori algorithm. Their experimental result shows that MRApriori is work well than existing one- phase and k-phase algorithm on Hadoop-Map Reduce programming model on hadoop platform.

W.K.Wong, D.W. Cheung, E. Hung, B. Kao, and N.

Mamoulis [13, 14], author?s state that frequent itemsets mining using association rule mining is expensive task. If we outsource this task then it became less costly and less computational resources are required .In some cases mining may give inaccurate results due to human error or if a service providers can?t be completely trusted or are malicious. So to overcome the problem of database integrity author introduced audit environment. This audit environment has two methods database transformation method and result verification method.

This gives accuracy of mining result. The main technique used in this environment is an artificial itemset planting (AIP) technique. Authors show guarantee about the correctness of verification method. This technique is operational and efficient.



III. KEY CONCEPTS In this section, key concepts such as differential privacy, sensitivity, smart splitting and run time estimation are discussed with help of mathematical expression.

1. Differential Privacy: Differential Privacy is important concept which provides strong theoretical guarantees about preserving privacy of individual data and has been used by many researchers. We have used PFP algorithm for finding private frequent item set which has satisfied -differential privacy defined in [1, 2].

2.  Sensitivity : Sensitivity is defined as if given q count queries Q, for any neighboring databases D, D , the sensitivity of Q is [1]:   Q = max ||Q (D) ? Q (D ) ||1.                         (1)   For all D, D , differ in at most one element.

3. Smart splitting [1] In this, transactions should be split rather than truncated. That is, we transform the database by dividing long transactions into multiple subsets (i.e., sub-transactions), each of which meets the maximal length constraint. Here, we have performed weighted splitting operation. In weighted splitting operation, transaction T is divided in subset of transaction such as ...  and weight is assigned to each transaction and it is checked if the length of each transaction satisfies the given length constraint.

4. Run Time Estimation Run time Estimation [1] method is performed in two steps: based on the noisy support of an itemset in transformed database, first actual support in transformed database is estimated and then second further its actual support in original database is computed.



IV. PROPOSED SYSTEM To find frequent itemset from big data and maintain privacy for such unstructured non-numeric data is challenging task. Here, we propose an efficient process, namely used Hadoop, for parallel processing on high utility item sets.

Hadoop Map Reduce can be applied to significantly larger  datasets than traditional servers can handle ? a large server farm can use MapReduce to sort a petabyte of data in only a few hours. The parallelism also offers some possibility of recovering from partial failure of servers or storage during the operation: if one mapper or reducer fails, the work can be rescheduled ? assuming the input data is still available.

In many applications there is need to process unstructured  non-numeric data for that we need to find frequent itemset. Our propose system deals with such situation by performing frequent itemset mining on non-numeric dataset which is in the form of text or string. Basically, we are applying the algorithm on non-numeric dataset.

Our main contribution is we are performing preprocessing on non-numeric dataset and converting that dataset into numeric so we can construct compact data structure named FP-tree for that dataset and we are extracting frequent itemset directly form FP-tree.  To improve performance Map Reduce is used.

In first stage we perform preprocessing on non-numeric dataset. In this step non numeric data is preprocessed using Hadoop Map Reduce and different Text Mining techniques.

Proposed system algorithm and architecture for preprocessing is discussed in next section.

A. Algorithm For Proposed System In this section, we have implemented our work using following algorithms that are defined below.

1) Algorithm for preprocessing non-numeric  dataset  Input:  Nonnumeric dataset   D Step 1: take dataset D= {pt1, pt2, pt3?..ptn;} Step2: apply extract word process EWi for D and extract words Step 3: For each EWi; Stop Word (SWi) =EWi; //Stop word elimination process Stemming (Si) = SWi; // find exact word Step 4:   For each Si; Freq_Count (WCi) = Si; //for the total no. of occurrences of each Stem Return (Si); Step 5: Tokens (Si) will be passed to system.

Step 6: word categorization and selection End Output: Tokens, count (i.e. .word, count)  We apply this algorithm to non-numeric dataset. For example take iPhone dataset which is large review data and we perform stop word, tokenization[6], stemming these operations on dataset and we get tokens (words) such as screen, display, camera, size and other related features on the basis of that user select the iPhone and their occurrences i.e. count. In the next steps we finds items and store it into transformed dataset means now we have numeric dataset  that dataset it is send as input to actual PFP algorithm and finally we get private frequent itemset as output  2) FP growth Algorithm After implementation of preprocessing algorithm on non- numeric dataset we performed frequent itemset mining using FP growth algorithm.

Input: database D; the minimum support count threshold min sup.

Method:  1. First we scan the database D once then the set of frequent items F and their support counts are found.

Then, support count of F is sorted in descending order as L, the list of frequent items.

2. Second, create the root of an FP-tree, and tag it as null.

3. The FP-tree is mined by calling FP growth (FP tree, null), which is implemented using method FP growth(Tree, )  Output: The complete set of frequent patterns.

3) PFP Growth algorithm We are using PFP growth algorithm defined in [1] for providing privacy for non-numeric dataset. PFP algorithm consists of two phases preprocessing phase and mining phase.

In preprocessing phase smart transaction splitting technique is used for dividing long transaction into multiple sub- transactions to improve utility.

In mining phase information loss due to splitting transaction is computed using run time estimation method.

B. Architecture of proposed system The proposed system is specially designed for the large data.

System manages to deal with large data with the help of Hadoop. System Architecture of proposed system is shown below.

Fig1.System Architecture   In first stage of project we are taking non-numeric dataset in form of text file and then we apply preprocessing algorithm on it as defined above. In Second stage, after converting non- numeric to numeric and finding support or count for each word PFP algorithm has been applied on it to find private frequent item set.

Our proposed system consists of two phase preprocessing phase and mining phase so we are taking non-numeric dataset as input and passing it to preprocessing phase. In preprocessing phase, we compute maximum length constraint  enforced in the database. In this, smart splitting method is applied to transformed database. We are also assigning privacy budget  then we add noise to support of item. The prepossessing phase is implemented only once. In mining phase, for specified threshold, we privately find frequent itemsets. Run time estimation and dynamic reduction methods are also used in this phase to improve result quality. Privacy     budget  is divided into five portion: .In preprocessing  are used and in mining phase    All processing is done in parallel using hadoop map reduce which process large unstructured non-numeric dataset in less time. After completion of these two phases we get the private frequent itemset.

C. Dataset In the experiments publicly available real dataset are used.

We worked on both dataset numeric and non-numeric dataset.

Our input dataset must be in text file. Initially we had worked on numeric dataset. We used Retail Dataset [26] and Accident Dataset [26] for numeric dataset, iPhone Dataset and Book review [27] for non-numeric dataset and some publicly available text mining dataset as non-numeric dataset.

Following table shows Non-numeric Dataset used for analysis.

TABLE I Dataset  Dataset         Type Description  Retail   Numeric dataset Contains  transactions and Items  Accident  Numeric dataset Contains transactions and Items  iPhone Review Non-numeric Dataset  Contains review for iPhones product  Book Review Non-numeric Dataset  Include book reviews    D. Experiment  Setup First, we implement PFP algorithm for numeric dataset in JAVA. We conduct all experiments on PC with Intel(R) Core (Tm) 2 Duo.  Then we take non-numeric dataset as input and apply text mining techniques to covert it in numeric, extract frequent word   and its count so we can implement same PFP algorithm on it to find private frequent itemset.

All algorithm implement parallel using MapReduce.



V. RESULT A result of the proposed system is shown by comparing existing system performance. The first graph shows result for frequent itemset mining by considering different threshold values and the second graph shows when frequent itemset mining for non-numeric dataset implemented on hadoop map reduce.

A. Graph for frequent itemset mining  In this, we use F-score measure for generating graphs the formula for calculating f-score and generated graph is shown below.

Fig.6 The graph is created for frequent itemset mining in which X- axis shows different threshold values and Y-axis shows F-score calculated. Result has been taken on various threshold values and calculated f-score for output frequent item sets.

Where F-score [1, 3] calculated to measure the utility of generated frequent itemset defined as follow  F-score=  Where precision |Up  Uc|  | Up|, recall |Up Uc|  |Uc|, Up is the frequent itemsets generated by a private algorithm and Uc is the actual frequent itemsets [1, 3].

B. Graph for frequent itemset generation time  Here, comparison graph for frequent item set mining on hadoop and without hadoop is shown below.

Fig. 5 Graph for FIM on Hadoop and without Hadoop In graph X-  Axis shows different threshold values and Y-axis shows time in milliseconds   CONCULSION In this paper we have proposed differentially private  frequent item set mining using map reduce to minimize the time required for privately mining large dataset. Map Reduce is used here which can handle huge size dataset without any problem. Existing systems perform private FP-growth for numeric dataset. As privacy is essential for non-numeric data so the proposed system considered the differentially private FIM algorithm for non-numeric dataset which can achieve good utility and good privacy.

0.2  0.4  0.6  0.8   1.2  0.015 0.02 0.025 0.03  Exisitng Algorithm  Proposed Algorithm        0.015 0.02 0.025  Without Hadoop  With Hadoop     AC KNOWLEDGMENT We would like to thanks all researchers for making their  resources available. We would like to thanks to all the faculty members and Department of Computer Engineering GHRIET, Pune, India for the guidance and cooperation.

