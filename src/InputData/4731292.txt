Honey Bee Behavior: A Multi-agent Approach for Multiple Campaigns Assignment Problem

Abstract  This paper address a multi-agent approach using the behavior of honey bee to find out an optimal customer- campaign relationship under certain restrictions for the problem of multiple campaigns assignment. This NP-hard problem is one of the key issues in marketing when pro- ducing the optimal campaign. In personalized marketing it is very important to optimize the customer satisfaction and targeting efficiency. Using the behavior of honey bee a multi-agent approach is proposed to overcome the multiple recommendations problem that occur when several person- alized campaigns conducting simultaneously. We measure the effectiveness of the propose method with two other meth- ods known as RANDOM and INDEPENDENT using an artificially created customer-campaign preference matrix.

Further a generalized Gaussian response suppression func- tion is introduced and it differs among customer classes. An extensive simulation studies are carried out varying on the small to large scale of the customer-campaign assignment matrix and the percentage of recommendations. Compu- tational result of the proposed method shows a clear edge vis-a-vis RANDOM and INDEPENDENT.

1. Introduction  In recent years, the on-going advances of Internet and Web Technologies and hand-held devices like cell phones has attracted a large number of companies ranging from  small to large scale, to provide personalized services for customers. In order to maintain and acquire the loyal customers Customer Relationship Management (CRM) [3] plays a vital role. The companies need to provide person- alized services to customers and take major steps toward one-to-one marketing [2]. A personalized campaign often targets the most attractive customers with respect to the sub- ject of the campaign, and subject of preferences for cam- paign. Therefore, it is very important to expect customer preferences for campaigns. There have been a number of customer-preference estimation method based on collabo- rative filtering (CF) [7, 8]. Collaborative filtering, k-nearest neighbor classification algorithm [4], and various data min- ing methods like clustering [9, 14], association rule mining [5] and fuzzy association rule mining [13] are used to pre- dict the customer preferences for a campaign.

As personalized campaigns are frequently performed, several campaigns often happen to run simultaneously or within a very short period of time. It is often the case that an attractive customer for a specific campaign tends to be inclined for other campaigns. If we conduct inde- pendent campaigns without considering other campaigns, some customers may be attacked by a considerable num- ber of campaigns. This problem is known as multiple rec- ommendations problem. The larger the number of recom- mendations for a customer, the lower the customer inter- est for campaigns [1]. In the long run, hasty campaigns can lower marketing efficiency as well as customer stratifi- cation and loyalty. Unfortunately, traditional methods like collaborative filtering only focused on the effectiveness of   DOI 10.1109/ICIT.2008.14     individual campaigns and did not consider the problem with respect to multiple recommendations. In the situation that several campaigns are conducted within a short time span, it is necessary to find the optimal campaign assignment to customers considering the recommendations in other cam- paigns.

The multiple campaigns assignment problem is a NP- hard problem in which each of N customers is assigned to one of the subset of K campaigns and N ? K. To the best of our knowledge a very limited number of approaches has been developed to solve this problem. The approaches such as dynamic programming (DP), heuristics and Langra- gian approach developed by Kim et al. [11, 12] have been used to workout this problem with some limitations. For example, the dynamic programming approach becomes in- tractable if the size of the problem is very large, and the heuristic methods with greedy assignment do not guarantee optimal solutions. As we know the greedy methods always make decision based on what is best at the moment, with no concern about how this might effect the overall picture.

To cope with these problems we proposed a multi-agent ap- proach inheriting the behavior of honey bee.

Further, the important motivating factor to solve this kind of problem using honey bee [10], a biologically inspired al- gorithm, is to replace the legacy system by an intelligent system. In the sequel, this problem has incredible potential to solve many problems in the diverse fields such as insur- ance sector, laws-and-politics, academics, economics and so forth.

The rest of the paper is organized as follows. In Sec- tion 2 the multiple campaign assignment problem is intro- duced and discusses the response supression functions with generalization of Gaussian supression function. In Section 3 the procedure of solving multiple campaigns assignment problem using the proposed multi-agent approach inherited the behavior of honey bee is illustrated. The details of ex- perimental studies and conclusions with a further research scope is discussed in Sections 4 and 5.

2. Problem Description  In multiple campaigns assignment problem the goal is to find a set of assignments such that the outcome of cam- paigns is maximized under certain constraints. The main difference from independent campaigns lies in that the cus- tomer response for campaigns is influenced by multiple rec- ommendations. In this problem, the number of customers denoted as N is much greater than that of campaigns de- noted as K, i.e., N ? K.

2.1. Definition  In the following, we describe the possible input, out- put, constraints and the metric to measure the customer- campaign assignment. Mathematically, we can define the problem as follows.

Let the total number of customers and campaigns be N and K, respectively. Each campaign is associated with a given weight wi, i = 1, 2, ...,K. Similarly, a response su- pression function (RSF) denoted as R related to multiple recommendation is given. The customer-campaigns pref- erence matrix P = (pij)N?K , where pij ? [0,?] is the preference value of customer i for campaign j. If ri is the number of multiple recommendations for the customer i, then the actual preference of customer i for campaign j be- comes R(ri) ? pij .

Considering constraints of the problem, the upper and lower bounds of recommendations for each campaign are enforced. Let Uj be the upper bound of recommenda- tions (i.e., maximum number of recommendations allowed) for campaign j and Lj be the lower bound of recom- mendations (i.e., minimum number of recommendations allowed) for campaign j. Hence the number of recom- mendations in campaign j is restricted between Lj and Uj (i.e.,Lj ?  ?N i=1 mij ? Uj , j = 1, 2, ..., K). Let  Tj = ?N  i=1 mij , j = 1, 2, ,K, be the total number of rec- ommendations for campaign j, then these constraints are represented as Tj ? [Lj , Uj ], j = 1, 2, ...,K.

The output of this problem is an N?K binary customer- campaign assignment matrix. M = (mij)N?K , in which mij indicates whether or not campaign j is assigned to cus- tomer i. In other words, mij = 1 if i ? j otherwise mij = 0.

The metric to measure the performance of each assign- ment is defined as  f(M) = K?  j=1  (wj ? N?  i=1  R(rj) ? pij ? mij), (1)  where (.) is the weighted campaign preference sum for cam- paign j and is defined as the actual preference sum of rec- ommended customers for campaign j.

Further, in this work, we consider that the response supression function is varied from customer to customer.

Hence equation (1) can be written as  f(M) = K?  j=1  (wj ? N?  i=1  ?k(rj) ? pij ? mij), (2)  where k = 1, 2, ..., nfrs and n f rs is the total number of RSF  and k is the kth RSF assigned to any of the customer i.

The multi-campaign assignment problem is presented in  a matrix with N customers and K campaigns. The number     in the matrix represents whether the recommends of cam- paign j is assigned to customer i or not. If the value of mij = 1 means campaign j is recommended to customer i and if mij = 0 means campaign j is not recommended to customer i.

2.2. Response Supression Function  In the case of multi-campaign recommendations, the customer response rate drops as the number of recom- mendations grows. We introduce the monotonically non- increasing response supression function for the response rate degradation with multiple recommendations. The RSF is defined as follows: R1(x) = 2?(x?1) and R2(x) = ((?(x ? 1)/10) + 1) . Function R1 and R2 are decreas- ing exponentially and linearly, respectively.

The special cases of a general version RSF Ri, i = 3, 4, 5..., which was derived from standard Guassian dis- tributions is defined as Ri(x) = exp(?(x?1)  2/2i), i = 3, 4, 5, .....

For the values of i = 3 and 4- the two special cases of Gaussian distributions defines the RSF R3 and R4.

In this paper, we use the function R1, R2, R3, and R4 for the experimental studies even though there are many RSFs exist. However, the optimal RSF depends on situations and it is a long term research topic. Instead we can devise a number of supression functions. The functions should be monotonically non-increasing.

We apply different RSFs among customer classes be- cause in practical situations some customer may have more tolerance than others. In this case it is also crucial to find response suppression functions of customer classes.

3. Multi-agent Approach for MCAP  3.1. Basic Algorithm of Honey Bee  The basic algorithm of this multiple agent approach is given below. The algorithm require a number of parameters to be set, namely: number of scout bees (Nb), number of sites selected (Ss), number of best sites selected (Sb), number of bees recruited for best Sb sites Rsb , number of bees recruited for the other (Ss ? Sb) selected sites (Rrb), initial size of patches (Ps) which includes site and its neighborhood and stopping criterion. The algorithm start with the Nb scout bees being placed randomly in the search space. The fitness of the sites visited by the scout bees are evaluated in step 2.

ALGORITHM BEE():  Initialize population with random scouts;  Evaluate the fitness of the swarm; Repeat  Select sites for neighborhood search; Recruit Bees for selected sites, more Bees for best selected sites; Evaluate fitness; Select the fittest bee from each patch; Assign remaining bees to search randomly and evaluate their fitness;  Until (termination criteria met)  In step 4 bees that have the highest fitness are choosen as selected bees and sites visited by them are choosen for neighborhood search. Then, in steps 6 and 7, the algorithm conducts searches in the neighborhood of the selected sites, assigning more bees to search near to the best Sb sites. The bees can be choosen directly according to the fitness associ- ated with the sites they are visiting. Alternatively, the fitness values are used to determine the probability of the bees be- ing selected. Searches in the neighborhood of the best Sb sites which represent more promising solutions are made more detailed by recruiting more bees to follow them than the other selected bees. Together with scouting, this differ- ential recruitment is a key operation of the bees algorithm.

However, in step 6, for each patch only the bee with the acceptable fitness will be selected to form the next bee population. In nature, there is no such restriction. This restriction is introduced to reduce the number of less im- portant points to be explored. In step 7, the remaining bees in the population are assigned randomly around the search space scouting for new potentials solutions. These steps are repeated until a stopping criterion is met. At the end of each iteration, the colony will have two parts to its new population-representatives from each selected patch and other scout bees assigned to conduct random searches.

3.2. Proposed Approach  One could use the method like dynamic programming [11], heuristics [11], or Langrange method [12] to solve multi-campaign assignment problem. Although dynamic programming algorithm guarantees to achieve optimal so- lutions but it becomes intractable for large scale assignment problem, which we could find in our real life. The heuris- tic algorithms not only have practical time complexity but also show reasonable performance. However, since they are just heuristics they do not guarantee optimality. Similarly, though the Langrangian method can overcome the problems of dynamic programming and heuristics it encounters the problem of finding feasible Langrange multipliers satisfy- ing all the capacity constraints. Further, Kim et al. pro- posed in [12] to combine with genetic algorithms (GAs)[6]     obtained feasible solutions. Similar to GAs, a collective be- havior of simple multiple agent Bees has tremendous power to explore a large search space. Therefore it can be a sug- gestive approach to use honey bee instead of GA. We have used the honey bee to find out feasible assignment which can optimize the evaluation metric of multiple campaign as- signment problem.

In other words, we find out an assignment matrix M = (mij)N?k ? 2?0,1? to maximize f(M) =  ?K j=1(wj ??N  i=1 R(ri)?pij ?mij) or f(M) = ?K  j=1(wj ? ?N  i=1 ?k(rj)? pij ? mij), where k = 1, 2, ..., nfrs and nfrs is the total num- ber of RSF and k is the kth RSF assigned to any of the customer i subject to the constraint that Lj ?  ?N i=1 mij ?  Uj , j = 1, 2, ..., K.

Here we consider an approach of multiple-agent by in-  hering the behavior of honey bee. As we already mentioned, the bees algorithm is an optimization algorithm inspired by the natural foraging behavior of honey bees to find the opti- mal solutions [10]. Compared with the basic bee algorithm our modified version introduce a new operation called RE- PAIRED. The job of REPAIRED operator checks whether a scout bee is feasible or not (i.e., REPAIRED operator tries to restrict the scout bee within the solution domain). This operator repairs a scout bee by employing the following in- formation gain theory approach.

Starting at the left most corner of the bee position (i.e., the assignment matrix) each mij value is checked, whether it is informative or not. Define the Infogain(i, j) for each mij i.e., to be the amount of fitness gain by recommending campaign j to customer i.

Generally, the Infogain(i, j) is formulated as: Infogain(i, j) = R(ri + 1) ? (?i + wj ? pij) ? R(ri) ? ?i.

If the value of Infogain(i, j) is more informative (i.e., if it gives more information gain for the pair (customer i, campaign j) then we update the position as by the following four cases.

? m?ij = 1 if mij = 0 ? ? ?? ? Infogain(i, j)  ? m?ij = 0 if mij = 0 ? Infogain(i, j)? ?? ? ? m?ij = 0 if mij = 1 ? Infogain(i, j)? ?? ?  ? m?ij = 1 if mij = 1 ? ? ?? ? Infogain(i, j)  In addition, each scout bee is represented as a matrix of size N ? K with only binary value. All bees have fitness values which are evaluated by the fitness function measured by equation (2) to be optimized.

In the proposed architecture each bee is initialized with random solutions known as customer-campaign assignment matrix of pre-specified size and each bee will undergo for  constraints checking. Then proposed method searches for optimal one by updating the generations.

The algorithm for the proposed multi-agent honey bee approach is as follows.

MULTI-AGENT HONEY BEE ALGORITHM:  1.INITIALIZATION Randomly initialize each scout bee;  2.REPAIRED FOR each scout bee Check whether the bee is violating the constraint or not; IF it is violating  Repair the bee using REPAIRED operator;  ELSE BREAK  END FOR 3.FOR each bee  Calculate fitness value; END FOR  4.REPEAT Select sites for neighborhood search.

Recruit Bees for selected sites: Employes more bees for best selected sites; Evaluate fitness; IF constraint violated by any of the bees then apply REPAIRED operator.

Select the fittest bee from each patch; Assign remaining bees to search rand- omly and evaluate their fitness; Check for constraint;  5.UNTIL (termination criteria satisfied)  Compared to the basic bee algorithm, the proposed al- gorithm adds an extra cost by introducing REPAIRED op- erator. In the current context the operator is very important because it prevents the bee from becoming an infeasible so- lution. In other words, it restricts each individual bee within the solution space. One can work without considering this operator. The alternative solution is to use INSERTION and DELETION operation, which are not the basic bee opera- tors but the problem is that algorithm getting more complex and also the INSERTION operator does not guarantee to give an intermediate result with some significance.

4. Computational Results  4.1. Dataset and Environments  The performance of the proposed approach was evalu- ated using a series of experiments on the randomly created preference matrix of different sizes with respect to num- ber of customers and number of campaigns. This is due to the fact that no benchmark dataset is publicly available.

Kim et al. [11, 12] used the preference matrix of an e-mail marketing company Optus Inc, to show the superiority of their methods over random and independent methods. In order to keep continuity we tried our best to create the pref- erence matrix of different sizes with respect to N and K.

Each predicted preference value ranged from 0.0 to 1.0. Ta- ble 1 summerizes about the size of the preference matrix, customer-campaign assignment matrix and the number of recommendations for each campaign. Although the number of recommendations can vary from campaign to campaign, in this study we set equal percentage of recommendations of the total number of customers for each campaign.

Table 1. SUMMARY OF PREFERENCE AND CUSTOMER-CAMPAIGN ASSIGNMENT MATRIX  Sl. No. N K Number of Recommendations Maximum Minimum  1 500 7 25 0 2 1000 10 50 0 3 1500 15 75 0  The maximum number of recommendations for each campaign was equally set to 5% of the total number of cus- tomers. However, the minimum number of recommenda- tions was set to 0. The sizes of the preference matrix and customer campaign assignment matrix vary from minimum of 500 to maximum of 1500 with respect to N . Similarly, with respect to K the sizes vary from 7 to 15.

Table 2 shows the statistical analysis of the preference matrix. We have computed the average preference of cus- tomer for each campaign with respect to the different sizes of N and K.

Table 2. STATISTICAL ANALYSIS OF PREFERENCE MATRIX  Size (N ? K) Average Performance of Each Customer  500 ? 7 0.5005 1000 ? 10 0.4992 1500 ? 15 0.5035  We conducted the experiment using MATLAB 7.0.1 in Windows platform. As the response supression function, we used all the RSF discussed in Section 3. To show the ef- fectiveness of the proposed approach, we conducted experi- ment with several other methods such as RANDOM and IN- DEPENDENT. Independent campaign comes from K inde- pendent campaigns without considering their relationships with others. The assignment matrix of independent cam- paign is obtained by choosing the optimal assignment for each campaign, without considering the multiple recom- mendations problem. The proposed approach along with RANDOM and INDEPENDENT are categorized based on the two criteria like assignment of weight values and mode of using RSF.

Based on weight assignment: the methods are bifurcated into two types. For the first category the weights are uni- formly assigned to each campaigns, whereas in the second category the weights are assigned based on some priorities of the campaign. Similarly based on the RSF: the methods are structured into two categories. One category is assigned a RSF uniformly to each customer and another category the assignment of RSF varies from customer to customer. How- ever, we compared the effectiveness of the proposed method with RANDOM and INDEPENDENT.

During simulation of the proposed architecture the fol- lowing protocols were adapted and is summarized in Table 3. The number of bees for each generation is fixed as 25 and the number of generations varies from 100 to 300.

Table 3. PROTOCOLS FOR MUlTI-AGENT HONEY BEE ALGORITHM  Parameters Values Nb 25 Ss 10 Sb 5 Rsb 10 Rrb 5  Number of Iterations 100-300  4.2. Results and Analysis  We performed experiments on various response supres- sion functions with different size of customers and cam- paigns. The methods are tested independently on different response supression functions over a fixed number of itera- tions. In each case the number of recommendations is 5% of total number of customers.

Table 4 shows a comparative performance of the pro- posed multi-agent architecture of honey bee with INDE- PENDENT campaign, and RANDOM methods. The cus-     tomer sizes vary from 500 to 1500 and the campaign varies from 7 to 15.

Table 4. PERFORMANCE COMPARISON OF PRO- POSED METHOD, INDEPENDENT AND RANDOM WITH RESPECT TO DIFFERENT RSF  [N, K] RSF Proposed Random Independent  Method  [500, 7] R1 157.3 151.1 118.5  R2 145.7 150.9 103.8  R3 165.4 165.6 123.7  R4 140.2 142.2 144.6  [1000, 10] R1 474.6 456.8 361.5  R2 455.8 463.3 356.6  R3 494.4 486.6 324.4  R4 419.8 418.6 410.4  [1500, 15] R1 1115.4 1112.1 780.8  R2 1085.3 1061.2 800.4  R3 1115.9 1113.7 845.1  R4 1031.2 974.9 751.2  For all the response supression functions, the results ob- tained by the proposed method showed significant improve- ment over the independent-campaign method. Further, the performance of the proposed architecture is gradually in- creasing corresponding to the complexity of the problem.

5. Conclusions  In this paper we dealt with multi-campaign assignment problem, which is a common and challenging problem of personalized marketing. We proposed a novel multi-agent approach by inheriting the behavior of honey bee to probe a feasible customer-campaign assignment matrix to optimize the evaluation metric under certain restrictions. In addition, we have used two very common approaches for compari- son with the proposed novel method. In all the cases, our method gives a clear edge among others. Our further re- search includes designing of robust RSF and solving this problem using soft computing techniques with a flavor of hybridization with bio-inspired agents like ants, termites and wasps.

6. Acknowledgment  The authors would like to thank DST, Govt. of IN- DIA for Financial Support under the BOYSCAST fellow- ship 2007-2008 and the financial support of BK21 research  program for the Next Generation Mobile Software at Yonsei University, KOREA SOUTH.

