On the Performance of Probabilistic Packet

Abstract-False data injection is a big threat to sensor  networks. A traceback mechanism based on probabilistic packet marking is proposed in this paper. The performance of the basic marking method is thoroughly studied. There is a defect in the basic marking method that upstream nodes? marks are collected by the sink with low probability. To solve the problem, two different improved marking methods-EPPM&EPNM-are proposed.

Every node?s marking is collected by the sink with approximately equal probability in EPPM. The sink can locate every node by collecting packets of approximately equal number in EPNM.

Keywords-Sensor networks, Security, Probabilistic packet marking, Traceback analysis

I. INTRODUCTION   Wireless sensor networks(WSNs) offer new opportunities to directly interact with the physical environment in both civilian and military contexts. Such environments may have adverse conditions (e.g., in a chemical plant) or can be quite hostile (e.g., in a battlefield)[1]. Sensor nodes can be compromised and all the information stored in them is obtained by adversaries. Adversaries can launch various attacks using these compromised nodes. One important form of these attacks is false data injection[2, 3]. Compromised nodes can inject a lot of forged packets to the network in order to exhaust network resources (e.g., energy, bandwidth, storage space).

A number of solutions[2,3,4] have been proposed to cope with false data injection, however, most of them adopt an en- route filtering mechanism[2] and can only passively mitigate the damages caused by attacks. In this paper, we present a practical model for traceback based on probabilistic packet marking in sensor networks, and analyze the performance of marking method in this model. What?s more, we improve the basic marking method in different ways.

The rest of the paper is organized as follows. In the next section, we review the background information. Some models are presented in section III. In section IV, we analyze the marking   method  described in  section III.     Two    different   _________________________ This work was supported in part by Anhui Natural Science Foundation (No.

070412030) and The Research Fund for the Doctoral Program of Higher Education (No. 20050358040).

improved marking methods are proposed in section V.

Simulation results are provided in section VI. At last, we conclude the paper in section VII.



II. BACKGROUND   IP traceback has been proposed for achieving traceback of DDoS[5] attacks in the internet. There are two main kinds of IP traceback techniques: probabilistic packet marking(PPM)[6] and packet logging[7].

In PPM, each router inscribes its identification information onto the arriving packets with a certain probability so that the victim can reconstruct the whole attack path by collecting enough packets. But it is assumed that the compromised nodes cannot launch colluding attacks[6] and routers are well protected[8]. Even if only two nodes which are compromised launch a colluding attack, the PPM method in the internet is ineffective.

In packet logging, each router logs packets that it forwards.

In order to save the required storage space, routers record packet digests, instead of the packets themselves, in a space- efficient data structure like Bloom filter[9]. During the traceback process, routers query their neighbors iteratively using attack packets. This approach can track a single IP packet, but the computation and storage of the packet digests are prohibitive for sensor nodes.

A trackback scheme based on probabilistic packet marking is proposed in ref. [10]. At the same time, it uses various space in packet header. So it is not a practical model for traceback in WSNs.

Thus it can be seen from the above that existing internet traceback mechanisms cannot be adopted in WSNs directly, therefore, the analysis of effectiveness of PPM for IP traceback in the internet[11, 12] cannot apply to WSNs either, and there is not a performance analysis on PPM for traceback in WSNs.



III.    Models   A. Network Model Each node Vi has a unique ID i. Node Vi is also called node  i in the following sections. Let node i be the ith node that receives the packet (including the node that generates the packet), and j denote the number of hops between the node and the sink. Each node i shares two hash functions(hi, hi?) with the sink. It uses hi to encrypt its ID, and hi? to generate  This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE CCNC 2008 proceedings.

Figure 1.The basic marking method  MACs for arriving packets. The reason to do so is to make the mechanism secure enough. A similar and detailed model is presented in ref. [10].

B. PPM Model  All the intermediate forwarding nodes will mark the arriving packet with probability  p, and a packet can be marked by m(m?1) nodes at most. Fig. 1 shows the basic marking method when m=2. When a node determines to mark the packet, it checks that how many nodes have marked the packet. If there are less than m marks, it will mark the packet from the first empty field; otherwise, it will cover the first mark with its own mark and clear the following marks. Every packet that has been marked records partial path information, therefore, the sink can traceback to the source by collecting enough packets. Obviously, there is a defect in the marking method that all nodes mark the packet with the same probability, so upstream nodes? marks can be collected by the sink with low probability. We call this method the Basic Probabilistic Packet Marking (BPPM).

C. Traceback Model  There are two tables in the sink-one is (i, hi(i)), the other is (i, hi?). There are two sets in the sink-one is S, the other is T. S is the set of all possible located nodes; T is the set of all nodes marking packets. If false data injection attacks occur, the sink checks all the marks in the packet header when receiving a packet. The sink records all nodes which are verified, and then it inserts nodes to S and T or deletes nodes from S. If there is only one node in S during a reasonable period of time, the sink locates the source node. We show the process in Algorithm 1 for the case where m=2.

We can prove that our models can defend against all forms of false data injection attacks, but the proof is omitted because of the space constraints.



IV. ANALYSIS on BPPM   In this section, we analyze the performance of the basic marking method. It is assumed that a packet can be marked by m nodes at most. Let n denote the path length (The sink is not included) and ?i(m) denote the probability that node i?s    __________________________________________________ Algorithm 1. Algorithm for traceback___________________ //Initialization  S= ?, T= ?; //Traceback  When the sink receives a packet with no mark does nothing; When the sink receives a packet with 1 valid mark if the packet?s first two fields are marked by node s  if s?T S=S ? {s}; T=T ? {s}; if the packet?s last two fields are marked by node t if t?T T=T ? {t}; if t?S S=S-{t}; When the sink receives a packet with 2 valid marks from nodes s&t if s?T S=S ? {s}; T=T ? {s}; if t?T T=T ? {t}; if t?S S=S- {t};  ______________________________________________________________  marking information is collected by  the sink. We derive the probability ?i(m) as follows.

It is trivial to get ?i(m) for cases where m=1 and m=n. So we consider the case where m=2 firstly.

Lemma 1.

? ?  ? =  ? ?++= 2/   222 2/))()(( n  i  nniini n yxyxyxC                       (1)   PROOF.

n n  n n  nn n  nn n  n yxCyxCyxCyxCyx 001111110 ...)( ++++=+ ???            (2) n  n n  n nn  n nn  n n yxCyxCyxCyxCyx )(...)()()( 001111110 ?++?+?=? ???     (3)  Let  (2)?(3), and then we obtain: ? ?  ? =  ? ?++= 2/   222 2/))()(( n  i  nniini n yxyxyxC  Thus, the lemma follows from induction.   ?  Theorem 1. Let n denote the path length (The sink is not included), and a packet can be marked by two nodes at most.

The probability that node i marks the arriving packet and the marking information is collected by the sink is as follows:   2/))21(1()1()()1()2( 12 ??? ?+??+?= iinini pppinpp?  (4)  There are two following situations in which node i?s marking information can be collected by the sink: 1) Node i marks the arriving packet, and there doesn?t exist  any downstream node marking the packet. Apparently, the probability of this case is that:  This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE CCNC 2008 proceedings.

in  i ppA ??= )1(*                                                       (5)   2)  Node i marks the first two fields in the packet header, and  only one downstream node marks the packet. In this case, there should be even upstream nodes marking the packet, and then node i marks it. Let Bi denote the probability of this case. We have   ? ?  ? ?  =  ?? ?  ?? ? ??=  2/)1(    11 )1(*))1(**(* i  m  mimm i  in ini ppCppCpB  Now if we let x=1-p, y=p, n=i-1 in lemma 1, we have   ? ?? ?  =  ??? ? ?+=?  2/)1(   1 2/))21(1()1(  i  j  ijijj i pppC     Hence  2/))21(1()1)(( 112 ??? ?+??= iini ppinpB     (6)   Base on  (4) and (6) , we get (3). Thus, we prove the theorem.   ?   The average number of marks that a packet carries is np.

Fig. 2 illustrates theorem 1 for cases where n=10, 20, 40 and np=2.

Using the method as in theorem 1, we get ?i(m) for the case where 2<m<n. For the sake of convenience, we only compute ?i(m) for nodes satisfying the condition that i ?n-m.

There is not a unified expression for nodes satisfying the condition that i>n-m, but it is not hard to get ?i(m) for those nodes.

Definition 1:  ? ?  ? ??  =  ???++ ? ?=  mki  w  kwmikwmkwm im ppCk  /)1(   1 )1()(?  (0?k?m-1)    Intuitively, if we let S[j] (0?j?i-1) be the binomial series of (p+(1-p))i-1, we will have that:   ...]2[][][)( +++++= kmSkmSkSkm?  Definition 2:  uinuu inu ppC  ?? ? ?= )1(?   Theorem 2:  )()()(      mnikm m  s  m  t  m  imk mtsi ???= ? ? ?  ?  =  ?  =  ?  ?= ??????  The proof is omitted because of space constraints.    ?   Let n=20, np=m, and we consider the first node. Fig. 3 illustrates the first node?s marking probability and the probability that its mark is collected by the sink when m changes from 1 to 20.

Figure 2. The probability that a node?s marking is collected by the sink.

Figure 3.  The first node?s marking probability and the probability that marks  are collected by the sink for the case where n=20, np=m.



V.    IMPROVED MARKING METHODS  A.  Equal Probability Packet Marking Method  There is not much space in the packet header for PPM, so we consider the basic and practical case where m=2. Let j be the distance between the node and the sink, and ?j be the probability that the node which is j hops from the sink marks the arriving packet and the marking information is collected by the sink. Let Pj be a function of j and p, where p denotes the probability that the last node marks the arriving packet.

The goal of the improved marking method is to make  ?j and p as equal as possible for every j. We call this method Equal Probability Packet Marking (EPPM).

This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE CCNC 2008 proceedings.

TABLE I.

MARKING PROBABILITY IN EPPM&EPNM  EPPM     EPNM          j Pj     ?j     Pj  1 0.060 0.0600 0.060 2 0.062 0.0601 0.063 3 0.064 0.0602 0.066 4 0.066 0.0600 0.069 5 0.068 0.0597 0.072 6 0.071 0.0601 0.076 7 0.074 0.0602 0.080 8 0.077 0.0602 0.084 9 0.080 0.0599 0.088 10 0.084 0.0601 0.093 11 0.088 0.0601 0.098 12 0.092 0.0599 0.103 13 0.096 0.0595 0.108 14 0.101 0.0596 0.114 15 0.106 0.0597 0.120 16 0.111 0.0598 0.126 17 0.116 0.0601 0.132 18 0.121 0.0609 0.139 19 0.123 0.0609 0.146 20 0.123 0.0609 0.151   In EPPM, every node?s marking information is colleted by the sink with approximately equal probability, so the sink can locate the compromised node more quickly.

Unfortunately, there is not a general method to calculate Pj for all sensor networks, so how to get Pj depends on the specific network topology.

We consider a typical sensor network situation that a node is at max 20 hops from the sink. Let p=0.06 and we get Pj through several experiments and evaluations. As shown in Table I, Pj increases with j and ?j is approximately equal to p.

B. Equal Packet Number Marking Method  We have presented EPPM to improve the basic marking method, but it has a disadvantage that the number of packets needed to locate the compromised node increases with the path length. So we present a method called Equal Packet Number Marking (EPNM). Using EPNM, no matter which node is launching a false data injection attack, the sink can locate it by collecting packets of approximately equal number.

There isn?t a general method to calculate Pj in EPNM either.

Considering the same situation as in above subsection, we get Pj in EPNM as shown in Table I. We can see from Table I that Pj in EPNM increases more quickly than in EPPM. More evaluations will be presented in next section.



VI.   SIMULATION EVALUATION   We run simulations to verify our previous analysis and evaluate the performance of each marking method. We consider a typical sensor network situation that a node is at max 20 hops from the sink. The sink uses Algorithm 1 to locate compromised nodes.

Fig. 4 shows the number of runs that the sink cannot successfully locate the source when 400 packets are received.

Apparently, BPPM works well when the attack path is  Figure 4. How many runs fail to locate the source in 100 runs with 400 packets. The distance between the source and the sink changes from 2 to 20 hops.

Figure 5. How many runs fail to locate the source in 100 runs with 600 packets. The distance between the source and the sink changes from 2 to 20 hops.

short (<10),   but the probability of failure increases quickly with the attack path. EPPM performs better than BPPM when the attack path is relatively long. Fig. 5 shows the situation when 600 packets are received. It can be seen that when 600 packets are received, the sink can successfully locate the source with high probability (approximate 90%) using EPNM, no matter which node is launching a false data injection attack.

It can be seen from the above that EPPM and EPNM perform better than BPPM when the attack path is long.

EPNM is more efficient when the coverage of the sensor network is large. In EPNM, no matter which node is compromised, it cannot cause fatal damage to the network.

This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE CCNC 2008 proceedings.



VII.    CONCLUSION   The false data injection attack[2,3] is an severe security  problem in sensor networks. A practical mechanism for traceback based on probability packet marking in sensor networks is proposed in this paper. We analyze the performance of the basic marking method. Based on the analysis, we present two different improved marking methods?EPPM and EPNM. Simulation results show that the sink can reconstruct the attack path more quickly using EPPM, and can locate compromised nodes far away by collecting less packets using EPNM.

