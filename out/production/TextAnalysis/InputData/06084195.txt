A Preliminary Study on Semi-automatic Construction  of Vietnamese Ontology

Abstract? Ontology is an effective formal representation of knowledge used commonly in artificial intelligence, semantic web, software engineering and information retrieval. Typically, ontologies are constructed by domain experts using domain knowledge and domain documents. However, manual acquisition of ontologies from domain documents consumes high costs. We present a support system for Vietnamese ontology construction using pattern-based mechanisms of discovering Vietnamese concepts and conceptual relations from Vietnamese text documents. As there are very few existing taxonomies constructed in Vietnamese, we use non-taxonomy based approach. The combination of association rule mining and lexical pattern based learning was used as our major method of concept extraction and conceptual relation detection. From the experiments, we show that this is a feasible solution.

Keywords ? Ontology; concept discovery; conceptual relation; text mining; lexical pattern

I.  INTRODUCTION Ontology is a formal, explicit specification of a shared  conceptualization [1]. Ontologies that belong to a specific domain are constructed from knowledge about domain concepts, their properties, instances, and conceptual relations between them. Many researches have been done to map text mining and ontology construction using concept/entity extraction and conceptual relation discovery.

Text mining is a subsection of data mining which could discover useful and hidden patterns or information from text. It has been used widely in many fields such as information retrieval, linguistics, knowledge engineering, and bioinformatics, etc. Among text mining tasks, concept/entity extraction (concept mining) is applied extensively in many applications such as document summarization, question answer systems, taxonomy construction, and ontology construction.

Most concept mining methods are based on linguistic rules, statistics or a combination of both [9]. Some other researches also use frequent pattern mining and association rule mining for discovering concepts and conceptual relations from text [4][5][9][10].

Typically, ontologies are constructed by using domain knowledge and domain documents as well as existing taxonomies. This requires a large amount of work to extract concepts and conceptual relations in the text documents. These  tasks might be automated by using semi-automated support tools. Many such systems have been proposed for English [4][5][6], Chinese [2][7]and other languages. However, no system is available for Vietnamese. If we could build a system like that, Vietnamese ontology construction will be simplified and cost less time and labor.

In this research, we propose an approach to extract concepts and conceptual relations from Vietnamese text documents by using a combination of text mining techniques and statistic based methods. Concepts will be discovered by not only using TF-IDF measures but also applying lexical patterns and association rules mining. We also aim to verify the performance of our concept discovery algorithms and the combination of them to determine the best extracting approach for Vietnamese text documents.

The rest of the paper is organized as follows. Related works are described in Section II. Our proposed method, ViText2Onto, is addressed in Section III. Section IV shows the experimental results. The conclusion and discussion are given in Section V.



II. RELATED WORKS Ontology construction requires a lot of efforts to uncover  and organize relevant domain knowledge in a suitable structure, according to the purpose of using the ontology. They can be done manually or by using automatic or semi-automatic methods, in which, learning methods and knowledge engineering are applied to extract concepts and conceptual relations from domain documents.

In manual construction approaches, the experts play an essential role, since all tasks are done by them: covering domain terms (concepts), defining classes and class hierarchies, creating class slots (properties), filling slot values and generating instances [1]. Since every task is executed and verified by human, the constructed ontologies tend to have high level of accurate, reasonable and adequate context. However, it requires a large amount of human efforts and time, especially for large scale domains such as semantic web.

By contrast, fully automatic ontology construction methods try to automatically learn and extract knowledge from domain documents without human supervision. For instance, Christian B. and Alfonso A. introduced an automatic ontology     construction using bibliographic information [6]. Maedche and Staab presented an ontology learning framework from semantic web through ontology import, extraction, pruning, refinement, and evaluation mechanisms [4]. Lee et al. [2] presented an episode-based ontology construction mechanism from text documents and used a fuzzy inference mechanism for Chinese text ontology learning. Unfortunately, these methods are usually difficult to implement and limited in specific domains since many domain-specific decisions must be made to adequately specify the domain of interest [11]. In addition, learning the knowledge base from un-constructed data is a cognitive work that needs many supporting studies, in which the concept hierarchy acquisition is one of the most challenging works.

Combining the above approaches, semi-automatic ontology construction method is the most common approach in which information extraction techniques are used under the supervision of human. Such methods include the learning modules to extract concepts and conceptual relations from domain documents. They require expert knowledge to verify obtained information and decide which information should be included in the ontology. In English, many frameworks and plug-ins have been built to help users construct ontologies semi-automatically. For example, TextToOnto [5] used generalized association rules to find out the co-occurrences between items and relations between them. OntoLT [17] is a Prot?g? plug-in that extracts concepts and relations from annotated documents for ontology construction.

Typically, taxonomy is needed in ontology acquisition task to construct the concept hierarchical structure of the ontology.

In English, taxonomy-based approaches often use WordNet as a super taxonomy to determine the conceptual relations between concepts. In Chinese, HowNet has been used with the same role in many researches. In case taxonomies are not available or due to other reasons, non-taxonomy approach is considered. For example, the concept hierarchy is constructed by learning algorithms as in [2][4][6].

To extract candidate terms, the well-known statistical measurement of TF-IDF can be used [2][7]. Association rules or frequent patterns are mined to discover the co-occurrences and semantic relations between terms [4][5][7]. Linguistic rules are also used in many researches [9][10] in which predefined lexical patterns were used to extract candidate concepts by bootstrapping mechanism. In Vietnamese, Chau Q. Nguyen and Tuoi T. Phan proposed a hybrid approach which combine lexical rule based and ontology based methods to extract key terms and phrases from Vietnamese text [8].



III. PROPOSED METHOD We propose a system, called Vietnamese Text to Ontology  ? ViText2Onto, along with learning techniques to discover concepts and conceptual relations from Vietnamese text documents.

Our contribution can be stated as follows. Given a set of Vietnamese text documents in a specific domain, the system should support users to construct the ontology using semi- automatic approach. The result is an ontology that contains concepts and instances organized in an appropriate hierarchy.

A. System architecture To construct ontology, domain knowledge must be  discovered and organized in a conceptual hierarchical structure.

ViText2Onto employs a semi-automatic approach where discovery methods are used in combination with human supervision. From this perspective, an interactive mechanism is established between the system and users where the construction process is iterative and cyclic. After each iteration, the conceptual hierarchy is extended and verified by users, such that the users can incrementally discovery more concepts and relations based on the accessed concepts. The system architecture is shown in Fig. 1, which includes the following components:    Figure 1. System architecture  1) Vietnamese Natural Language Processing Module is used to make the Vietnamese text documents ready for extraction algorithms. It is a set of Vietnamese processing tools to perform tokenizing, part of speech tagging (POSTagging) and chunking. The output of this module is annotated documents being stored in text files. A small converter is created to read these files and converts them into compatible format that can be used by GATE [12].

2) Learning and Discovering Component is used for extracting concepts and conceptual relations from annotated documents. We use various learning and discovering algorithms, including pattern based, statistic based, and association based approaches. To implement pattern based learning, we use JAPE (a Java Annotation Pattern Engine), an element of GATE framework. JAPE provides finite state transduction over annotations that let us extract predefine patterns based on rules written in a specific grammar.

3) Lexical Patterns contain lexical rules written by using JAPE grammar which are used for pattern based learning. They were constructed based on Vietnamese syntactic rules.

Applying these rules on the corpus using JAPE, we can extract concepts and conceptual relations from the matched patterns.

B. Vietnamese language processing We use Vietnamese language processing tools provided by  the project Building Basic Resources and Tools for Vietnamese Language and Speech Processing (VLSP)[13][14] for preprocessing Vietnamese textual corpora. Processing components include the following features:     Vietnamese word tokenization: Due to the characteristic of Vietnamese, a word might contain only one individual word (one morpheme) or a compound of two or more individual words (many morphemes), this tool identifies words and tokenizes sentences into separated tokens. The tokenized documents are used for further analysis tasks.

Vietnamese part of speech tagging (POS tagging): As discovered concepts are mostly nouns, proper nouns and noun phrases, POS tags play an essential role in both syntactic and semantic based learning for ontology acquisition. The POS tagger uses tokenized documents as input and assigns POS label for all tokens.

Vietnamese chunking: Chunking is used to divide each sentence into frames containing one or more words where each frame has a specific grammatical role in the sentence.

Segmenting sentences into chunks helps determine grammatical roles of elements in sentences; hence, it is useful for learning and extracting. In our extraction rule sets, noun phrases and verb phrases are used as majority units of the patterns. Chunking frames are also used in association rule mining where phrases are used as input.

Stop words removing: There are many words having high frequencies of occurrence in Vietnamese text while they contribute very little to the subject of sentences. To avoid noises caused by these words, we apply stop word removing when computing TF-IDF of terms.

C.  Learning algorithms In this research, the purposes of ontology learning tasks are  concept and conceptual relation discovery. We use a combination of lexical pattern based, frequent sequence based and statistic based methods to overcome some drawbacks in each of the individual methods. Fig. 2 shows the model of learning and discovery components.

Figure 2. Learning model  1) Concept discovery a) TF-IDF based candidate term selection  Well-known term weight, TF-IDF, is used to measure the importance of individual terms contributing to documents.

Important terms, that are terms having higher TF-IDF scores, will be selected based on a user-defined threshold. TF-IDF of term Ti in the document dj is computed by the following equation:  ,  , log | || : | Where ,  ?  is the term frequency of term Ti  in document dj, nij is the number of occurrences for term Ti in document dj, the denominator is the size of document dj, and log | || : |  is the inverse document frequency of term Ti. We construct a set STF-IDF of candidate terms whose TF-IDF values exceed the threshold ?: | where ti refers to one term in documents.

b) Lexical pattern based candidate term and phrase selection  TF-IDF can be used to pick up important individual terms.

However, a Vietnamese concept often consists of multiple terms. To discover multiple-term concepts, lexical pattern based is used. We build a set of lexical rules based on JAPE grammar to discover proper nouns and noun phrases. Input sentences will be processed by the finite state transducer provided by JAPE, in which matched patterns will be discovered and annotated.

According to Vietnamese grammatical characteristics, following patterns can be used for noun phrase and proper noun identification:  ? Noun+  Noun  ? Noun*  (Noun | ProperNoun)  (Adj | Noun)*  ? Noun+  Verb  (Adj | Noun)+  ? Noun*  ProperNoun+  Number  where ?|? means or, ?+? means one or more occurrences, and ?*? means  zero or more occurrences  The last pattern is used for identifying proper nouns which end with numbers, for example: Windows Mobile 6.0, iPhone 4  For example: [C?ng ty]N[tr?ch nhi?m]N[h?u h?n]Adj [VinaCom]NP,(means [Limited]Adj [Company]N [VinaCom]NP) is a noun phrase.

Applying these patterns on the input documents using GATE, we obtain a list of candidate noun phrases and proper nouns SP  c) Sequential pattern mining Lexical pattern based learning is practical and appropriate  for deep knowledge discovering, but the competence of its results depends strongly on the completeness of the set of lexical rules. To overcome this weakness, we adopt the advantages of frequent sequence mining in natural language.

Based on the assumption that a concept might be a phrase or a part of phrase in which element words usually appear in fixed orders, we consider a concept as a sequence of ordered words.

Concepts might be obtained by mining frequent sequential patterns on the documents where each noun phrase is considered as a transaction.

In our research, we use segmented sentences with chunking labels as input of sequential pattern mining. As the input sentences were segmented into frames which have specific grammatical roles, a concept is often belonging to only one frame. We consider each frame as a sequence, and each word as an item. By mining frequent sequences we can obtain word sequences that frequently occur together in a frame, and hence, they can be candidate concepts. For example:  ? Input: ?i?n tho?i Iphone 4 m?u tr?ng ch?a ???c s?n xu?t  ? Meaning: White Iphone 4 has not been produced yet  ? Chunks: [?i?n tho?i Iphone 4 m?u tr?ng]NP [ch?a ???c s?n xu?t]VP  Assume that one of frequent sequences is ?Iphone 4,? we can see the candidate concept completely belongs to the chunk [?i?n tho?i Iphone 4 m?u tr?ng]NP.

After the mining stage, we only use maximal frequent sequences as candidate phrases. The set of frequent sequences is denoted by SF.

d) Concept identification By executing above candidate concept discovery processes,  we have a list of candidate terms and phrases for concept identification. A filter mechanism is used to select relevant concepts for the ontology. The concept identification algorithm in Fig. 3 aims to merge three sets of candidates into a unique set of concepts where low TF-IDF candidates are removed.

Input: STF-IDF: Set of candidate terms being selected based on TF-IDF SP: Set of candidate phrases and proper nouns resulted by using lexical rules SF: Set of maximal frequent sequences resulted by using PrefixSpan Output: Set of concepts C \\filter by frequent patterns for (every sequence pj? SP) if  ?fk,? SF,pj =fk//pj is a frequent pattern C ? pj  // add pj into set C \\filter by TF-IDF threshold for (every sequence si? C) //for every term of sequence si having a TF-IDF score less than threshold if term tj? si and term tk? STF-IDF, tj=tk remove si from C endif endfor return C  Figure 3. Concept Identification Algorithm  2)  Conceptual relation discovery In this phase, we use the combination of pattern based and  association based learning to discover the relation between concepts. Using lexical rules in conceptual relation discovery has high reliability; however, predefined grammatical rules may not cover all cases of language usages. We take the advantage of association rule mining to overcome this weakness, in which, relations between concepts are mined without considering the semantic aspect of sentences.

a) Lexical pattern based conceptual relation discovery In this part, we take into account the semantic relations  between elements in sentences, as used in [8]. According to Vietnamese grammatical characteristics, there are some rules that reflex relations between nouns or noun phrases as follows:  ? Rule 1: {Noun phrase A} ?l? m?t? {Noun phrase B} ? A is a B  ? Rule 2: {Noun phrase A} {Proper noun B} ? B is an instance of A  ? Rule 3: {Noun phrase A} ?c?? {Noun phrase B} ? A has a B  ? Rule 4: {Noun phrase A} ?c?a? {Noun phrase B} ? B has an A  ? Rule 5: {Noun phrase A} ?thu?c? {Noun phrase B} ? A is a subclass of B  ? Rule 6: {Noun phrase A} ?bao g?m? {Noun phrase B},{Noun phrase C} ? B and C belong to A  ? Rule 7: {Noun phrase A} (?v?? | ?ho?c?) {Noun phrase B} ? A (and | or) B  Based on these rules, we build a set of extraction rules using JAPE grammar. When matching process is running, matched concept pairs and the relations between them will be discovered. In this research, we focus on finding subsumption relations and instances of concepts. The set of lexical rules contains many language usage cases that imply isA and hasA relations. Building a complete set of rules seems not feasible, however, the rule sets can be enriched in further study.

Heuristic Context implication: if A is a concept and B appears with  A in the context {A} (?v?? | ?ho?c?) {B}, we can infer that: i) B is also a concept and ii) A and B have the same level of abstraction. For example:  ? ?i?n tho?i HTC Herov?Motorola Milestone ??u ???c c?i ??t h? ?i?u h?nh Android 2.1  ? Both HTC HeroandMotorola Milestone are installed with the operating system Android 2.1  In this context, if we already know HTC Hero is a concept mentioned as a kind of mobile phone, we can easily infer that Motorola Milestone is also a kind of mobile phone.

Incremental learning: Obviously, each domain has some cornerstone concepts, said seed concepts, which occur in many documents within the corpus. The learning phase should be started from these seed concepts to discover concepts at lower level of abstraction and repeat the process in an incremental manner.

Learning from instance: Typically, a class name rarely co-occurs with its subclasses or its properties in a sentence.

Instead, instances of that class usually appear together with its related concepts. For example:  ? HTC Hero ???c trang b? m?n h?nh c?m ?ng ?i?n dung 4.3 inchesv? b? nh? trong 1.5GB     ? HTC Hero is equipped with a capacitive touch screen 4.3 inches and internal memory 1.5GB  If we already know the class of the instance, we generalize the abstraction of the instance by replacing it by its class and obtain the relation between the class and discovered concepts.

In this example, mobile phone will have hasA relation with screen and internal memory.

b) Association rule based conceptual relation discovery Frequent sequential pattern mining can help in such cases  that lexical patterns cannot be applied. We use association rule mining to find hidden (anonymous) relations between concepts by taking into account their co-occurrence in contexts, both on sentence level and document level.

An association rule reflects an implication between its two sides. Let T = {ti | i = 1, 2,?, n } denote a set of transactions, where each transaction is a list of items. I = {i1, i2, ..., im} denotes a list of items. An association rule A ?B states A associates with B, where A,B?I, and A?B=?. A rule A ?B indicates that the appearance of A is followed by the appearance of B with an acceptable probability. The reliability of a rule is expressed by two measures support and confidence.  | | ? |  | | ? || | ? | That is, support is the probability to see both A and B  appear in the same transaction while confidence is the probability to see the consequence B when the antecedent A appears in a transaction.

At the sentence level, we aim to find out concept pairs that often appear together in a sentence. We consider each sentence as a transaction where each item is a term. If concepts are discovered in the sentence, terms that belong to the concept will be merged into one item. The result of the association rule mining stage will be pair of concepts (CA, CB) with support and confidence exceeding predefined thresholds. Nevertheless, we also want to find out the verb that connects these two concepts, the result might be in the form of (CA, CB, VerbV).

At the document level, we consider each sentence as a transaction where items are concepts that appear in it. The assumption under this mining stage is that two concepts occurring in different sentences may have relation between them. The results are concept pairs of (CX, CY) that might co- occur in one sentence.

Result of association rule mining, both at the sentence level and document level, are presented to users as pairs of concepts.

Users (or called domain experts) will make their proper judgments on these concept pairs.

D. Overall construction process Initially, a user should prepare input corpus. HTML files  from the target web sites are collected and parsed to become text document files. Then they are put into the Vietnamese natural language processing module for tokenizing, POS tagging and chunking. A converter is developed to transform  processed documents into a specified format that is accessible to GATE. Afterward, the Vietnamese text documents are ready as input to the next step of learning process.

Firstly, candidate concepts will be extracted and presented in a user interface for users to make selection, where the user can specify the TF-IDF and minimum support thresholds for the extraction algorithm. Using selected concepts as input, pattern based and association rule based relation extraction methods are executed. Matched patterns and association rules satisfying the minimum support and confidence are sent again to the user interface to determine the relation between pair of concepts.

Users will make the final selection to decide which concepts and conceptual relations should be exported into OWL ontology. Some open source tools can be used to do the job.

From the above process of constructing an ontology, we see that expert knowledge is applied in two steps where concepts and conceptual relations are presented to the users for selection.

The result ontology can be easily edited by using some ontology editing tools such as Prot?g? to better meet user expectation.



IV. EXPERIMENTAL RESULTS Our proposed method was implemented in Java using  NetBean 6.8 with JDK 1.6.0. GATE 6.0 was used for lexical pattern based extraction.

To evalutate the contribution of our work, we built a real Vietnamse ontology for the mobile phone domain. We used Vietnamese news on various kinds of smart mobile phone in recent two years as the corpus. The data include about 1000 news articles from the Vietnamese websites talking about the arrival of new phones, comparisons of various phones, sharing phone usage experiences, symtoms of phone problems as well as their advantages and disadvantages.

Firstly, we used HTML Parser to extract text content from the HTML files. The text file was tokenized, POS tagged and segmented using Vietnamese processing tools[13][14]. We constructed a set of Vietnamese lexical rules using JAPE grammar for lexical pattern based discovery. PrefixSpan is used for mining frequent sequential patterns and association rule based discovery. The results of concept set and conceptual relation set are proposed to users for manual selection. Selected objects and relations are exported to OWL model by Jena tool[15]  The constructed ontology of Vietnamese mobile phone can be used in many applications since many instances of mobile phones as well as their advantages, disadvantages, and symptoms are included. It can be considered as a knowledge base in smartphone domain. Hence, it is useful for repairers and users to get inside information about smart phones by means of effective structures and concept hierarchy. Moreover, from the user?s perspective, an ontology based news recommendation can be built using this ontology. Alternatively, semantic based text classification can be implemented by using the ontology as well.

To evaluate the performance of discovery algorithms, we built a golden standard ontology for the mobile phone domain manually. Then we compute the Term Precision, Term Recall, and F-measure scores on the comparision between the ontology constructed semi-automatically by our method and the golden standard ontology.

Let ST be the term set of the golden standard ontology, and T be the term set discovered by our method. We have:   | || |    | || |   2? ?  TABLE I.  PERFORMANCE OF CONCEPT EXTRACTION  TF-IDF minsup T ST?T Precision Recall F-  measure  0 1 1846 746 0.40 1.00 0.58  0.005 1 1768 722 0.41 0.97 0.57  0.01 1 1647 680 0.41 0.91 0.57  0.02 1 943 401 0.43 0.54 0.47  0.005 2 1209 553 0.46 0.74 0.57  0.01 2 1130 529 0.47 0.71 0.56  0.02 2 728 348 0.48 0.47 0.47   Table I shows extraction results for applying different TF- IDF and minsup thresholds in the concept extraction algorithm.

Extraction performance shows that lexical pattern based approach can produce the result with high recall but relative low precision. By increasing the TF-IDF and minsup thresholds, precision becomes better while recall gets worse.

Overall, when testing with various sets of input documents, the average performance of concept extraction is around 60% with the use proper thresholds.



V. CONCLUSION AND FUTURE RESEARCH In this preliminary research, we propose a support system  for Vietnamese ontology construction using the combination of lexical pattern based, statistic based, and frequent sequential pattern based methods. The hybrid approach can overcome different weaknesses of each individual method that may miss some concepts and relations during the discovery task. We also built a real Vietnamese ontology in mobile phone domain using our system. The constructed ontology can be used as a knowledge base on mobile phones in many applications such as a recommendation system, text classification, and information retrieval for anything about phones. Experimental results show that our approach has acceptable performance in concept discovery.

Based on current results, in the future we would like to make the ontology construction process more automatic by considering both syntactic and semantic aspects of Vietnamese  documents. First is to automate relation extraction algorithms by taking into account the semantic relations of selected concepts. This will reduce the manual proportion of the construction process. Second, better methods of measuring term importance will be considered to improve the automation of the concept identification task.

Due to the absence of Vietnamese WordNet, some linguistic relations are not considered in this research, for example, synonym, antonym, hypernym, and hyponym.

Otherwise, Vietnamese WordNet will have valuable contributions to the learning model, in which more concrete concepts and relations can be extracted accordingly. Currently, a small portion of Vietnamese WordNet (about 10,000 words) is under construction. When it is available, we would like to adopt it in our system to improve the construction of Vietnamese ontology within a given knowledge domain.

