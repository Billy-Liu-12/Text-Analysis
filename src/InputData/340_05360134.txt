Discovering the rules in a poker player's mind based on   the association rule mining

Abstract? One of the weaknesses and drawbacks of a computer compared to a human being is the creativity and intelligence of a human being in encountering with different problems and his power of deduction and reasoning.

Therefore computer engineers have been trying to make computers more intelligent and inferential and reasonable in encountering with different problems. Thus in this article we have tried to increase the intelligence and deduction of a computer when playing a poker game. In this article a method is proposed based on the association rule mining which enables the computer to sense thoughts in a poker player's mind and guess his hand by observing his moves.

According to the evaluation and a confidence of 78.6%, the rules in a poker player's mind were proven to be guessed correctly by the computer.

Keywords- Data mining; association rule mining; poker game

I. INTRODUCTION Poker is an interesting trial scene for artificial  intelligence researchers. Poker is a game with imperfect knowledge in which the rival agents must perform risk management. In other words in this game, a player must make a decision based on uncertain information, deception and cheating which is very similar to the decision making problems in the real world. Search techniques can be used conveniently in many games; however some games like poker involve some hidden information which the same search techniques are not able to find. Therefore, poker is an ideal means to test autonomous deduction under uncertainty. This uncertainty is shown by the random physical arrangements of the shuffled cards and the rival's imperfect information and his conservativeness and also the bluffing and lying in the game.

Moreover, poker is a psychological game which involves mathematical precision and effective prediction of the rival's moves. So far lots of research and activities have been done to perform, implement and simulate a poker game on a computer. For instance in [7] a Bayesian decision-making network has been used to model bluffing and simulating poker game. In [10] probabilistic knowledge is used as a betting strategy. In [2] rivals are modeled using decision making agents. In [6] a poker player is regarded as an agent who changes its playing  strategy as it learns. However what leads to success in a poker game is to know the rival based on his moves and then guess his hand intelligently. In this article a method is proposed based on data mining and association rule mining which reads a poker player's mind, so based on this information continues playing and betting. This is explained as the article continues.

The rest of the article is organized as follows, in section 2, poker game is described. In section 3, data mining and association rule mining are explained. In section 4, the prepared method is presented. In section 5, the evaluations are shown and finally in section 6, the results are presented.



II. POKER GAME Here we describe Texas Hold'em which is currently the  most popular one around the world. In this game players bet and use some of their belongings to bet.

In this game initially each player is dealt two cards which he bets on. Before explaining the betting stage, let's consider the ranking of hands. Remember that in poker, each player will eventually have five cards at most which produce ten meaning combination. These are mentioned below (low ranking to high ranking):  High card, Pair, Two pairs, three of kind, Straight, Flush, Full house, four of kind, Straight flush and Royal flush.

The winner will be the player who has the highest ranking among all. Now let us get back to the game. There are typically 10 seats at a Texas Hold'em poker table and a seat in the middle of one side of the table for the dealer.

Each player receives 2 down cards referred to as 'hole' cards. The dealer begins dealing starting with the small blind and ends with the button. The person to the left of the big blind is the first to act after the initial deal. This player has 3 options; he can call the bet, raise the bet, or fold.

? Call: the player agrees with the amount the first player has bet.

? Fold: the player resigns from the round of play and bets no more because he doesn't have good cards or can't bring himself to risk.

? Raise: the player places a higher bet.

DOI 10.1109/ICCTD.2009.117    DOI 10.1109/ICCTD.2009.117     The betting goes on until everyone agrees on a similar amount. It is needed to know that one can lie in betting to make believe he has good cards and scare other players off and make them resign. Here is the point where the player's reaction plays an important role in poker and taking risks highly influences the game result.

After the round of betting the hole cards, the dealer burns a card to prevent card marking, and deals 3 community cards in the middle of the table. This is called the 'flop.' After the flop is dealt, the action begins on the small blind. Once the betting round from the flop is finished, the dealer burns a card and deals a community card face up called the 'turn'. There is a betting round similar to the round after the flop. After this round of betting, the dealer burns a card, and deals the last community card called the 'river.' There is a round of betting, and the players who remained until the end turn their cards up to make their best possible 5 card poker hand. The best hand wins the pot, but in the event of a tied hand, the players split the pot.

As you noticed at the first stage where everyone is dealt two cards and at the flop stage, the player's reactions are of great importance. During the second betting the ability to take risks, bluffing and rival psychology have big efficacy on leading the game to a success. In this article the player's reaction during the first betting and the second one after the flop have been inspected and we noticed which player has the stronger ability to take risks and which one is not able to take risks so that we could guess his cards during betting based on his reaction. Although this guessing and speculation is sometimes wrong, we can increase the probability of correctness to help being successful in the game.



III. DATA MINING DEFINITION Mining the data to discover the hidden knowledge is  one the main challenges that engineers encounter, Therefore data mining is a completely vital science. We need operations such as collecting and data mining to extract the relationships between data, based on a given objective. In other words, we search for the desired meaning not just any meaning. In fact, data mining is analyzing data, according to a certain goal [13].

A. Association rule mining method Using this method we can find the rules and hidden  relationships between data. These rules will help us in making decisions towards our goal. In this method each data in database is considered as an item. So it is a collection of items. An association rule has a form like the following:  BArulenAssociatio ?: setitemBA _, ?  ?=? BA ??BA,  Based on association rules, we can to find some relationships among groups of items, but finding the relations between the items is challenging.

The categories and relationships are discovered depending on how items and data are accessed. Note that data mining is done on a series of transaction. We might find many rules but we should choose the best and the most important rules. This is done by calculating two coefficients, namely confidence coefficient and support coefficient which are defined as follows:  ( ) ( )( )antransactioofnumber bantransactioofnumberbaconfidence ,=?    (1)  ( ) ( ) nstransactioofnumbertotal bantransactioofnumberbaSupport ,=?   (2)  The rules with the highest coefficients have higher validity. Note that these two complement one another and each alone is not sufficient. in association rule mining the goal is to find rules whose threshold for the confidence and support coefficients is higher than 21, ?? ( 1? and  2? are determined based on the objective ) [12].



IV. THE PROPOSED METHOD As mentioned before inspecting a player's reaction and  knowing his kind of playing is one of the major factors which has great influence in being successful in poker. To achieve this, based on data mining a method is proposed in this article to sense thoughts in the player's mind. In this method the association rule mining is applied on transactions of the player. This method is explained as the article continues.

To mine the rules, initially the transactions of a player must be recorded which is regularly done in all computer poker games. Then having the transactions, the required data is found by a parser especially designed to extract this data from the metadata. Here the structure of the extracted data is important because it must be designed in a way so that the data mining system will be able to extract the best rules and avoid discovering redundant rules as possible.

Therefore different structures are studied to find the desired structure.

After having extracted the needed information by the parser, it will be inserted in a table which is called the game transactions table. The table has two columns which are transaction number and the game type as shown in Table I.

Note that there is a table for each player to record the information of his playing type. The table is filled in two steps, First during the first betting and then in flop stage and during the second betting. This is because during the first and two steps the player's risk-taking ability and his mental state have a fundamental role in the final success, after that winning is almost dependent on the cards on the table.

Information was stored in two different ways in the transactions table then compared to find the best structure.

In the first way we insert the card numbers, the card suit and the betting type in the game column. As shown in Table I, in our example jack, queen and king are assigned the numbers 11, 12 and 13. In Table I the player in the first transaction has the cards 2 of spade and 5 of club and does     a fold. Thus, repeating this in transactions we can take the following rule as a rule in the player's mind:  2=existing, 5=existing ? Fold=existing Or we may to have a rule like this rule:  Spade=existing, Club=existing ? Fold=existing  However, as you can see we can't distinguish the suit  of card in first rule, which is an important factor. Likewise the second rule is not significant to us and in fact it is completely wrong, besides in this type it is not obvious that each number includes what kind of suit which is a new problem. Thus we inspected the second type of transactions table structure. This structure has the number and suit together. This table is shown in Table II.

As you see in Table II the first letter of each suit is inserted in the game column along with the card number.

Here D represents diamond, S is spade, C is club and H is heart. With this type, rules will be correct and more effective than the other type and avoids extracting redundant rules.

After obtaining the right structure we apply the association rule mining on the data. We designed a single- purpose miner to this and call it mind miner. We continue to explain the structure of this mind miner, how it does mining and why it's superior to other miners. It mines the information in two steps, during the first betting and then in flop stage during the second betting.

Since the data mining programs calculate the support and confidence coefficients and compares them to the coefficient threshold, association rules mining is done slowly, on the other hand extracted a great number of rules that many of which are useless, causes more latency. Thus we use a method for the mind miner to compensate for these drawbacks.

TABLE I.  FIRST TYPE OF THE GAME TRANSACTIONS TABLE  Transaction id Game type 1 2 1 5 1 Spade 1 Club 1 Fold 2 11 2 9 2 Diamond 2 Diamond 2 Call  TABLE II.  SECOND TYPE OF THE GAME TRANSACTIONS TABLE  Transaction id Game type 1 2S 1 5C 1 Fold 2 11D 2 9D 2 Call 3 11H 3 13S 3 Raise    Therefore we use data cube structure to extract rules during the first step and the vector structure to extract rules during the flop stage. We continue to explain the mind miner structure and how it works.

The mind minder operates on the transactions table which first fills the data cube structure based on the transactions table data. Structure of this data cube is in a way that minimizes the time required to do the calculations. This structure is shown in Fig. 1.

This structure is a (53?53?4) cube in which there are 52 rows and columns for 52 cards. In other words each card is mapped to a number. For example row 1 and column 1 represent the Ace of heart. The Row 53 and the column 53 contain the sum of rows or columns. In the forth level of the third dimension there is the sum of the last three levels. At the first stage when each Player is dealt two cards, depending on the player's move which is fold, raise or call, the square related with the transaction is incremented. For example assume that the player has the Ace of diamond and the Ace of heart and he has done a raise, thus (1, 14, 3) and (14, 1, 3) squares will be incremented; here 1 equals the Ace of heart, 14 equals The Ace of diamond and 3 show a raise. According to the sum values in the cube structure we have the following instances as shown in Fig. 1:  A= the number of times we have card 1 and a fold is done.

B= the number of times we have card 1 and a call is done.

C= the number of times we have card 1 and a raise is done.

D= the number of times we have card 1.

M= the number of times there are two cards numbered  (1, 1).

P= the number of times we have card 1 and a fold is  done.

Z = the number of times fold is done.

Y = the number of times call is done.

X = the number of times raise is done.

W1= the number of times we have card 1.

nW = the number of all transactions.

This structure considerably reduces the time needed to calculate the confidence and support coefficients.

The mind miner is designed in a way to extract rules with more meaningful tangible structure, since other mind miners may to extract a rule as below.

2H=existing, Fold=existing ? 6D=existing Which means when we have the 2 of heart and a fold is  done, there will definitely be the six of diamond too, which is semantically wrong and we can expect that the player always has the six of diamond whenever he has the 2 of heart and he does a fold. Our goal is to predict the rival's moves, not what card might be played.

Figure 1.  The cube structure  Therefore the rules extracted by this mind miner have the following form which shows his hand on the left hand side of the rules and his move on the right hand side of the rules:  2H=existing, 6D=existing ? Fold=existing For this the cube structure is of great help here. The  mind miner discovers the association rules based on the flop stage information using the vector structure shown in Fig. 2. The Pseudo code of the mind miner is shown in Fig. 3.

As you can see at the end of the Pseudo code after extracting the rules, based on these rules, we find out the extent to which a player bluffs and takes risks.

To obtain the extent of a player's risk-taking the following cases were taken into account calculated and the proportion of it to all transactions of the player are measured.

? Cases when a player's cards have the potential to have  a high ranking but has already folded (very low risk- taking).

? Cases when the player's cards have the potential to have a low ranking and he has folded (low risk- taking).

? Cases when the player's cards have the potential to have a high ranking and he has called (middle risk- taking).

? Cases when the player's cards have the potential to have a low ranking but has called (good risk-taking).

To obtain the extent of the player's tendency to bluff the following cases were considered, calculated and the proportion of it to all transactions of the player is measured.

? Cases when the player's cards have the potential to  have a low ranking but does a raise (high bluffing).

? Cases when the player's cards have the potential to  have a low ranking but does a call.

Now with calculating these, the computer can to  change its type of the playing and moves more intelligently based on the player's character.

Sum Raise Call Fold Card #5 Card #4  Card #3  Card #2  Card #1  Figure 2.  The vector's structure for the flop stage.

Begin For each transaction Read the transaction and extract information; Import data to the cube structure and vector structure; End for; For each first state Compute SC;  //support coefficient Compute CC;  //confidence coefficient If (( SC ? 1? ) and (CC ? 2? ) then Extract Rule; End for; For each flops state Compute SC;  //support coefficient Compute CC;  //confidence coefficient If (( SC ? 1? ) and (CC ? 2? ) then Extract Rule; End for; Compute percentage of fiction; Compute percentage of risk; End.

Figure 3.  The mind miner's Pseudo code.



V. EVALUATION We evaluated the proposed method using the test data  in the referred web site in [11] called poker hand. In this evaluation we have considered several goals, first how correct the extracted rules by the mind miner are and second how much these rules and computing the rival's risk-taking ability and bluffing can affect the computer in deduction and decision-making during the game, and third how is the performance of this mind miner in comparison to other miners like oracle miner or Microsoft miner.

Since in poker hand data [11] the decision of player field is not specified, we applied the data on five players and recorded their decision strategy in separate tables like the one shown in Table III.

Then using the mind miner we extracted the rules from the player's transactions. Some of the rules are shown in Table IV. As you can see in Table IV all rules have the best Semantic meaning.

TABLE III.  THE PLAYER'S TRANSACTION TABLE AND THEIR DECISION-MAKING TYPE  Action #2  Card #5  Card #4  Card #3  Action #1 Card#2 Card#1 Tid  Call 2d 13h 1h Raise 1d 12d 1  TABLE IV.  THE LIST OF RULES  Rules players 3D=existing, 6H=existing ? Fold=existing       #1  1D=existing, 1H=existing, 13D=existing, 1S=existing, 10H=existing ? Raise=existing       #1  12D=existing, 10D=existing, 13D=existing, 9D=existing, 5D=existing ? Raise=existing       #2  13H=existing, 10H=existing ? Call=existing       #2  The 100% of the rules represent a perfect concept and  there's no imperfect rule like the following: 8D=existing, 5H=existing ? 4D=existing  Which says when we have the eight of diamond and  five of heart we will also have the four of diamond which     is completely wrong. To evaluate the confidence of rules we tested each player 8 times with cards. 4 times of it was done using the same consecutive cards to see the player's reactions and compare each decision with the previous one. It was seen that in average 78/6 percent of decisions were repetitive which proves that 78/6 percent of the rules are valid. The comparison and validity-testing of the rules are shown in Table V for five players.

Then in the next step we inspect the extraction of these rules and calculation of the rival's bluffing and risk-taking percentage and their efficacy on the computer's decision- making. To do this in each step the computer observes the players' moves and decisions and makes a decision based on the previous transactions of the players, the extracted rules and the bluffing and risk-taking percentage. After applying the decisions the results are seen in the next step and recorded in a table as you can see in Table VI.

As you can see in Table VI, decisions are made based on the bluffing and risk-taking percentage of the rival. The results and whether the decision was right or wrong are inserted in the result column. After calculating the results we saw that in average these rules and calculations had a 75% positive efficacy on the decisions. At the final step of the evaluation, we compare our mind miner with oracle and Microsoft miners. We extracted rules from the player's transactions using these miners. The study and comparison of these miners showed that mind miner has a better response time and extracted better rules than oracle and Microsoft miners. The extraction done by our mind miner is done more intelligently and the rules are semantically perfect, while among the rules extracted by oracle and Microsoft miners there are rules like the following which is wrong and imperfect.

8D=existing, 5H=existing ? 4D=existing In Table VII the percentage of the wrong extracted  rules by all three data miners are shown.

The inspections also showed that the extraction speed  in mind miner is better the other two miners. The speed of all three data miners are shown in Table VIII for extraction of rules from 200 transactions performed by a poker player. All calculations were done on a Pentium 4, 2.5 GHz, 1GB of RAM and Microsoft window server 2003.

TABLE V.  THE RULE VALIDITY-TESTING TABLE  confidence percentage of the rules players 75% Player #1 82% Player #2 86% Player #3 72% Player #4 78% Player #5  TABLE VI.  THE TABLE OF DECISION-MAKING RESULT  Result Decision risk fiction action Player id True Raise 75% 70% Call Player#1 True Fold 8% 10% Raise Player#2 True Call 43% 22% Raise Player#3 False Call 11% 5% Call Player#4 False Raise 52% 37% Raise Player#5  TABLE VII.  THE PERCENTAGE OF WRONG AND MEANINGLESS RULES  Mind Miner Microsoft SQL server Oracle Rules  0% 42% 39% Percentage of mistake  TABLE VIII.  THE SPEED OF DATA MINERS IN RULE EXTRACTION  Mind Miner Microsoft SQL server Oracle Speed  5 s 37 s 26 s Per Second

VI. CONCLUSION In this article a method was proposed to discover the  rules in a poker player's mind. This method empowers the computer and increases its ability to induct and his power of deduction and reasoning. In this method the association rule mining is used on transactions done by a poker player.

We can find out the player's strategies and his bluffing and risk-taking abilities.

In this article based on this method the designed mind miner in the association rule mining does the calculations in a lesser time and extracts the best rules with a greater intelligence and precision which is proven by evaluations.

