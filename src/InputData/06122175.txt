A Fuzzy Approach for Mining General Temporal

Abstract?In this paper, we handle the problem of mining fuzzy  temporal association rules from a publication database, and  propose an algorithm to achieve it. In the algorithm, the lifespan  of an item is measured by its entire publication periods in a  publication database. Also, an itemset table structure is designed  to effectively keep and efficiently obtain information of itemsets  for mining. Finally, experiments on a simulation dataset were  made to show the comparison results of the mined fuzzy frequent  itemsets with and without consideration of lifespans of items  under different parameter settings.

Keywords?fuzzy set, fuzzy data mining, fuzzy temporal  association rule, item lifespan.



I. INTRODUCTION  The goal of data mining is to discover important associations among items such that the presence of some items in a transaction will imply the presence of some other items. To achieve this purpose, Agrawal and his co-workers proposed several mining algorithms based on the concept of large itemsets to find association rules in transaction data [1, 2].

Several temporal data mining approaches are also proposed [4, 10, 12].

Fuzzy set theory has been used more and more frequently in intelligent systems because of its simplicity and similarity to human reasoning [5, 7, 15]. Several fuzzy data mining algorithms for inducing rules from given sets of data have been designed and used to good effect with specific domains [3, 6, 8, 9, 14]. As to fuzzy temporal data mining, since fuzzy calendar algebra could help users describe temporal requirements in fuzzy temporal calendars easily, Lee proposed two temporal patterns that were fuzzy temporal association rules and fuzzy periodic association rules based on fuzzy calendar algebra [11].

Based on Lee?s approach, Zhuo et al. introduced a relativity- based interest measure value for mining fuzzy calendar-based temporal association rules [13].

However, those fuzzy data mining approaches didn?t take item lifespan into consideration. Although Lee proposed two algorithms for discovering fuzzy temporal association rules and  fuzzy periodic association rules by using fuzzy calendar algebra [11], lifespan of each item still didn?t be considered.

Also, the lifespans of items in publication stores are different from those in general stores because of their continuous exhibition periods. In this study, we thus propose a mining algorithm to solve the problem of mining fuzzy temporal association rules from a publication database. The experimental results show that the proposed algorithm is effective.



II. COMPONENTS USED IN THE PROPOSED APPROCH  In this section, the used components in the proposed approach are described.

Publication Information Table. In the real-world, new products (items) are continually put on the shelf in a store.

Generally speaking, some products may be put on the shelf and off the shelf multiple times during their exhibition periods. In this study, however, the database to be processed mainly focuses on the publication databases, such as book publication database (as shown in Table 1). The reason for this is that a product in a publication store is always on the shelf when the product is published and put on the shelf in the store. That is, its lifespan is measured from its first exhibition period to the current period in a publication database. Then, the period of the first appearing transaction of an item is not equal to its actually published on-shelf period.

For example, assume a database includes three time periods, P1, P2, and P3, and there are five items in the database, respectively denoted A to E, as shown in Table 1.

Table 1: The set of six quantitative transaction data for this example.

Period TID A B C D E  P1  Trans1 5 0 4 0 0  Trans2 3 2 0 0 0  Trans3 0 0 4 0 0  P2 Trans4 3 2 4 4 0  Trans5 3 5 0 0 2  P3 Trans6 3 0 0 4 2     In the database, in addition, each transaction consists of three features, transaction identification (TID), transaction occurring time and items purchased. The occurring time of each transaction is first transformed into the corresponding time period. The numbers of items in each transaction represent their purchased quantities. Take the first transaction Trans1 in Table 1 as an example, it includes two items A and C, and their quantities are 5 and 4, respectively. According to the publication information in Table 2, it can be known that the item A is published and put on the shelf in the store within the first time period, P1. Thus, the lifespan of the item A is from P1 to P3. All the other four items in the database can be known in the same fashion.

Table 2: The transformed publication period of each item for this example.

Item Publication Period  A P1 B P1 C P1 D P2 E P2  Membership Functions. In fuzzy set theory, a membership function can be represented using a graph that defines how each point in the input space is mapped to membership value between 0 and 1; it represents the degree of truth as an extension of valuation. For example, the membership function of an item A is shown in Figure 1, and it has two fuzzy regions: Low and High.

Figure 1: The corresponding membership functions of the five items A,  B, C, D, and E for this example.

According to the membership shown in Figure 1, different quantities of items in transactions can be represented by different degree values in different regions. The converted results are shown in Table 3, where L and H represent the fuzzy region titles Low and High, respectively.

Table 3: The fuzzy sets converted for transactions  Fuzzy Sets for Transactions  P TID A.L A.H B.L B.H C.L C.H D.L D.H E.L E.H  P1  T1 1.0 0 0 0 0.66 0.33 0 0 0 0  T2 0.5 0 0.5 0 0 0 0 0 0 0  T3 0 0 0 0 0.66 0.33 0 0 0 0  P2 T4 0.5 0 0.5 0 0 0 0 1 0 0  T5 0.5 0 0.75 0.25 0 0 0 0 0 1  P3 T6 0.5 0 0 0 0 0 0 1 0 1  After the process of converting the fuzzy sets for items in transactions, the scalar cardinality (also called count) values of the items are then found. In this study, the minimum operator in a fuzzy set is adopted to find the intersection among degree values of items in the region degree values of their membership functions. This is done mainly because the minimum operator can satisfy the downward close property for mining. Take, for example, the first transaction in Table 3. It includes two items, A and C, and their fuzzy sets are (1/A.Low + 0/A.High) and (0.66/A.Low + 0.33/A.High), respectively. It is not possible to generate itemsets that include the same items but different regions, such as (A.Low, A.High) and (C.Low, C.High), because they are invalid.

Itemset Table. An itemset table is designed to speed up the execution efficiency in keeping and finding the relevant information of itemsets for mining. The itemset table consists of three fields: itemset, its start time period and its scalar cardinality (count). For each itemset kept in an itemset table, its first time period is recorded, and the degree values of transactions including the itemset are added in the corresponding field value of the itemset in the table during the mining process.

For example, in Table 1, the item A appears in the five transactions, Trans 1, Trans 2, Trans 4, Trans 5, and Trans 6.

The degree values of the two 1-itemsets A.Low and A.High in the transactions are added to the corresponding field values in the itemset table. After that, the start period and count values of the two itemsets are shown in Table 4.

Table 4: The kept information of the two 1-itemsets in the itemset table.

Fuzzy Itemset Start Period Scalar Cardinality  (Count)  (A.Low) 1 3  (A.High) 1 2

III. THE PROPOSED MINING ALGORITHM  In this section, we will describe the proposed mining algorithm, the General Fuzzy Temporal Association Rule Mining Algorithm (abbreviated as GFTARM), for deriving fuzzy temporal association rules from the given publication database.

The proposed GFTARM algorithm: INPUT: A temporal publication database D with n quantitative  transactions, each of which consists of transaction  identification, transaction occurring time, purchased  items with quantities, m items in D, each with a  membership function, j desired time periods, a  publication information table with publication period  information of each item, a predefined minimum     fuzzy temporal support threshold MinFTSup, and a  predefined minimum fuzzy temporal confidence  threshold MinFTConf.

OUTPUT: A final set of general fuzzy temporal association  rules (GFTARs).

STEP 1: Transform the occurring time of each transaction in  the publication database D into the corresponding time  period.

STEP 2: Convert the quantitative value vjyz of each item ijyz in each temporal quantitative transaction Transjy within  each time period tj to a fuzzy set fjyz, and the fuzzy set  can be represented as: +++ jyzh  jyzh  jyz  jyz  jyz  jyz  R  f ....

R  f  R  f     1 , using  the given membership functions for item quantities,  where h is the number of regions for i jyz  , R jyzl  is the l-th  fuzzy region (linguistic term) of i jyz  , and f jyzl  is the fuzzy  membership value of v jyz  in region R jyzl  .

STEP 3: Initialize the temporary itemset (TI) table as an empty  table, in which each tuple consists of three fields: fuzzy  temporal itemset, its start period and its scalar  cardinality (count).

STEP 4: Set j =1, where tj represents the j-th time period in the  temporal transaction database D.

STEP 5: For each y-th temporal quantitative transaction  Transjy in the set of transactions Dj within the j-th time  period tj, do the following substeps: (a) Generate all possible temporal fuzzy 2-itemsets  from Transjy.

(b) Check each itemset in the set of possible 2-itemsets  generated from Transjy whether there exists at least  two same items in the itemset or not. If it does, the  itemset is removed from the set of possible 2- itemsets; otherwise, it is a valid 2-itemset, and it is  kept in the set of 2-itemsets.

(c) Find the count value xs jy  f  of each valid 2-itemset x  in Transjy as zjy  jyz jy isTransxxi  xs fMinf ???  = , where zjy is  f  is  the membership value of item iz in x in Transjy, and  xs jy f  is the intersection value of all membership  values of all items in x in Transjy by using the  minimum operator.

(d) Check each itemset x in the set of valid 2-itemsets  whether it has existed in the TI table. If it has done,  only add its membership value xs jy  f to the count  field value of x in the TI table; otherwise, put it and  its membership value xs jy  f to the corresponding  count field value in the TI table, and set its start period value as j.

STEP 6: For each 2-itemset x in the TI table, do the following  substeps:  (a) Calculate the support tfsx of x by its start period file  value b as follows:  .

|D|  count tfs  j  b  j  x x =  (b) Check the support tfsx of x whether it satisfies the  minimum fuzzy temporal support threshold (MinFTSup).

If it is, x is kept in the TI table; otherwise, it is removed  from the TI table.

STEP 7: Set j = j +1, and repeat STEPs 5 to 7 until all time  periods in the publication database D have been processed.

STEP 8: Initialize the temporary sub-itemset (TS) table as an  empty table, in which each tuple consists of three fields:  fuzzy temporal sub-itemset, its corresponding start  period and its scalar cardinality (count).

STEP 9: For each 2-itemset x kept in the TI table, do the following substeps:  STEP 10: Set r = 2, where r represents the number of items in  the current itemset to be processed.

STEP 11: Put all r-itemsets kept in theTI table in the set of  candidate r-itemsets Cr.

STEP 12: Join r-itemsets in the set of Cr to generate all possible (r+1)-itemsets by using a similar way used in  the Apriori algorithm, and put these (r+1)-itemsets in  the set of Cr+1. If no candidate itemsets are generated  from the set of Cr, do STEP 17; otherwise, do the next  step.

STEP 13: Check each candidate (r+1)-itemest x in the set of  Cr+1 whether its each r-sub-itemset exists in the set of Cr.

If one of its all r-sub-itemsets does not exist in the set of  Cr, the candidate x is removed from the set of Cr+1;  otherwise, it is kept in the set of Cr+1.

STEP 14: Put each candidate (r+1)-itemset kept in the set of Cr+1 in the TI table, and set its start period field value as  the first period value of MCPx of exhibition periods of  all items appeared in x according to the publication  information table.

STEP 15: Decompose each candidate (r+1)-itemest x in the  set of Cr+1 to generate all sub-itemsets of x, and put them in the TS table.

STEP 16: If the set of Cr+1 is not empty, then set r = r +1 and  repeat STEPs 12 to 16; otherwise, do the next step.

STEP 17: Scan the set of transaction in each time period to  find the required count of each itemset x according to start period field value of x in TI table.

STEP 18: Scan the set of transactions in each time period to  find the required count of each sub-itemset x according  to start period field value of x in TS table.

STEP 19: Calculate support of each itemset x in the TI table,  and check its support whether the value is larger than or  equal to the minimum fuzzy temporal support  (MinFTSup) threshold or not. If it is, it is kept in the TI  table; otherwise, it is removed from the TI table.

STEP 20: Calculate support of each sub-itemset x in the TS  table, and check its support whether it is larger than or  equal to the minimum fuzzy temporal support threshold  (MinFTSup) or not. If it is, it is kept in the TS table;  otherwise, it is removed from the TS table.

STEP 21: For each r-itemset x with items (x1, x2, ?, xr) in the  TI table, do the following substeps:  (a) For all possible fuzzy temporal association rules as  follows:  x1???xm-1?xm+1???xr xm, m = 1 to r.

(b) Calculate the confidence value of each possible  association rule R as follows:  , count  count ftconf  mxx  x R  ?  =  where countx is the count field value of x in the TI  table, x - xm is the other items in x not including the  items of xm, and mxx  count ?  is the count field value of  the items x - xm in the TS table.

(c) Check whether the confidence ftconf R value of  association rule R is larger than or equal to the  minimum fuzzy temporal confidence MinFTConf. If  it is, put the rule R in the set of general fuzzy temporal association rules, GFTAR.

STEP 22: Output the final set of general fuzzy temporal  association rules, GFTAR.



IV. EXPERIMENTAL RESULTS  In this section, experiments that were performed are described to show the performance of the proposed approach.

They were performed in Java on a personal computer with an AMD Athlon(tm) 64X2 Dual Core Processor 4800+ 2.5GHz and 3GB RAM. 64 items and 10,000 transactions were used in the experiments. In this experiment, we assume that all items have the same membership functions.

The experiment was made to show the comparison results of the number of frequent itemsets with different minimum supports between the proposed approach (GTFARM) and the previous approach (FAR) [6]. The results are shown in Figure 2.

Figure 4: The number of frequent itemsets between the propsoed approach the  previous approach.

From Figure 2, we can know that the number of frequent itemsets derived by the proposed approach (GFTARM) is larger than the previous approach (FAR), especially when the minimum supports are set at small values. In other words, these  results mean that there are actually more information (useful rules) can be derived by using GTFARM than by using FAR.

Thus, the proposed approach is effective.



V. CONCLUSION AND FUTURE WORKS  Generally speaking, the lifespans of items in publication stores are different from those in general stores because of their continuous exhibition periods. In this paper, we thus take the lifespans of items into consideration, and have proposed an efficient fuzzy temporal mining approach, called the general fuzzy temporal association rule mining algorithm (GFTARM), for finding fuzzy temporal association rules from a given publication database. From the experimental results, the proposed algorithm can actually find more frequent itemsets from the given dataset. In the future, we will focus on the different lifespan of an item which is calculated from the end time of the whole database to its previous nearest time for the item to be a fuzzy temporal frequent item within the duration.

