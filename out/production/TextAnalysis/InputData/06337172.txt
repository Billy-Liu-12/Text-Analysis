Hiding of User Presence for Privacy Preserving Data Mining

Abstract?Recently, it has been expected to realize privacy preserving data mining in order to acquire valuable knowledge from the combined information sources of several service providers. Therefore researches have been conducted on a dis- tributed anonymization method, which combines the personal information and anonymize it to prevent identifying specific user records. However, in those researches, when sets of the users in the providers are not the same, there is a problem that users? presence in either provider may be revealed.

Thus, this paper proposes a new indicator which represents the probability of the presence of users being revealed and introduces a modified distributed anonymization method to satisfy the proposed indicator. Also, we use U.S. census data for evaluation and calculate the relative error of its anonymized data. The results show that it is almost 10-25% in specific cases.

Keywords-k-anonymity; distributed anonymization; Privacy Preserving Data Publishing; Privacy Preserving Data Mining;

I. INTRODUCTION  It has been expected to realize privacy preserving data mining in order to acquire valuable knowledge from the combined information sources of several service providers.

For example, we expect a usage case in which a finance company (Provider A) and an online video service (Provider B) cooperate. In this case, Provider A has the information of its customers? incomes, and Provider B has the information of the video titles rented by its customers and the times they watch them. They then combine the three types of informa- tion and send it all to an advertising agency (Provider C) that performs data mining on it for targeting advertisements under the users? agreements.

Although performing data mining on the combined in- formation will discover new beneficial information, it may cause two problems. First, a specific user record risk be- ing identified from the combined personal information and the user?s sensitive information may be revealed. Second, because the personal information is an asset of the service providers, the providers need to combine it with minimum disclosure. Therefore researches have been conducted on a distributed anonymization method [1]?[5], which combines the personal information and anonymize it to prevent iden- tifying a specific user?s record with minimum disclosure.

However, when sets of the users in the providers are not the same, there is a problem that a user?s presence in either provider may be revealed. The information of a user?s presence is sensitive for that user. Because, for example, if a user?s information is stored by a financial service, then some people may guess that the user has debts.

In this paper, we consider the problem of revealing a users? presence in distributed anonymization. This problem occurs when the attributes of the personal information are vertically partitioned, which means that the providers have different attributes of the users in the providers, and the sets of the users are not the same. This paper consists of two main contributions. First, this paper proposes a new indicator, named ?-site-presence, which represents the probability of the presence of users being revealed. This is an extension of the an existing indicator, named ?-presence [6], which represents the probability of the presence of users in a local environment. Also, we introduce a modified distributed anonymization method to satisfy the proposed indicator.

Second, in order to evaluate the accuracy of data analyses on the data created by our anonymization method, we introduce a relative error of query results as an evaluation metrics.

We use U.S. census data for this evaluation, and calculate the relative error of a basic aggregate query for numerous mining tasks.

The rest of this paper is organized as follows. In Section 2, we discuss related works. Section 3 describes distributed anonymization and the problems of hiding of the users? pres- ence. Section 4 proposes the new indicator, named ?-site- presence, and introduce a modified distributed anonymiza- tion method to satisfy the proposed indicator. Next, we evaluate the utility of the proposed indicator and method in Section 5. Then, in Section 6, we conclude the paper.



II. RELATED WORKS  Anonymization is a method to sanitize personal informa- tion to prevent a specific user being identified. In this paper, we named a set of attributes that may uniquely identify a user quasi-identifier. Also, we named the attributes that users would not like to be revealed sensitive attributes. There is a well-known indicator, named ?-anonymity [7], [8], which represents the anonymity of a user in a table. If a table   DOI 10.1109/IIAI-AAI.2012.35     satisfies the condition that the number of records identified by each value of the quasi-identifier is at least ?, then the table satisfies ?-anonymity.

Distributed anonymization is a method to join and anonymize the tables stored by some providers [1]?[4].

Distributed anonymization can be categorized into two types: vertically partitioned data and horizontally partitioned data.

Vertically partitioned data means that each provider has different types of attributes from the other provider. On the other hand, horizontally partitioned data means that each provider has different users from the other provider.

There are some distributed anonymization methods in vertically partitioned data [2]?[4]. Mohammed et al. [2], [3] used the top-down approach and some secure computation protocols [9], [10] in order to join the tables in multiple providers. The top-down approach is an algorithm to spe- cialize a value qid of the quasi-identifier in the tables step by step. At the start, all qids in the tables are generalized as top level, such as ?*?, and all users are included in the group. The term specialize here means dividing a group identified by a qid into two groups on a division point.

After the division, the set of the identifiers of the users of the two divided groups is sent to the other provider.

Then, the providers continue dividing the tables as long as the tables satisfy ?-anonymity. Finally, the providers join the divided tables in order to create the joined-anonymized table. Some secure computation protocols are used in order to calculate a heuristic function which decides the division point. By using secure computation protocols, the providers can calculate the heuristic function without sharing of the providers? local data. Jiang and Clifton [4] used the bottom- up approach to join the tables in multiple providers. In this approach, all providers anonymize their tables locally and join with each other by checking anonymity securely by using cryptographic technology.

Jurczyk and Xiong [5] proposed horizontal distributed anonymization. They mentioned a new privacy problem in which the location of a data holder is revealed by differences in providers? data types. They used some secure computa- tions and extended Mondrian [11], which is a well-known top-down approach algorithm. They also proposed a new indicator, named ?-site-diversity.

Also, there is a method to hide the presence of a user in a local environment. Nergiz et al. [6] proposed ?-presence and the algorithm in order to satisfy this. However, this algorithm is not for a distributed environment. Therefore, we proposed ?-max-site-presence [12], and a new distributed anonymization protocol for a distributed environment. In this paper, we extend this indicator and propose ?-site-presence which represents the probability of not only the presence of users, but also the absence of the users.



III. PROBLEM OF DISTRIBUTED ANONYMIZATION  A. Distributed Anonymization  In this paper, we assumed that Providers A and B have vertically partitioned tables ?? and ?? , and create joined- anonymized table ? ?:  ??(??,???) , ??(??,??? , ??) , ? ?(???, ??? , ??)  where ???, ??? is a quasi-identifier, ?? is a sensitive at- tribute, and ?? is a common identifier of a user in Providers A and B. ?? and ?? are joined by ?? and anonymized into table ? ?. Also, ?? is a unique identifier of the record in ?? and ?? . In distributed anonymization, a joined-anonymized table should be created with minimum disclosure of personal information. This is because the providers in real-world busi- nesses have difficulty fully trusting each other. In addition, we assume that every provider behaves semi-honestly.

B. Problem of Revealing the Presence of a User  Existing distributed anonymization protocols in vertically partitioned data assume that the sets of the users in Providers A and B are the same [1]?[4]. In other words, each user who exists in Provider A also exists in Provider B. However, in the future, several providers are expected to cooperate with each other. Therefore, it is necessary to support the case in which the sets of the users in the providers are not the same.

However, when the sets of the users in ?? and ?? are not the same, a provider risks to infer the presence of a user in the other provider by comparing the table of the first provider and the joined-anonymized table. For example, let us assume a case in which ?? is Table I(a), ?? is Table I(b), and ? ? is divided on 50K of income like Table I(c).

In this case, the number of records where income <50K in ? ? (Table I(c)) is two, and also the number of records where income <50K in ?? is two: User 1 and User 2. Thus, Provider A can infer that Users 1 and 2 must exist in ? ?  (Table I(c)). Furthermore, because ? ? contains a common user who exists both on ?? and ?? , Provider A can certainly infer that Users 1 and 2 also exist in Provider B. In contrast, if ? ? is divided on 60K like Table I(d), Provider A can infer only that two of Users 1, 2, and 3 exist in Provider B.



IV. PROPOSED INDICATOR AND METHOD  A. ?-site-presence  We propose a new indicator that represents the probability of the disclosure of the presence of users. There is a existing indicator, named ?-presence [6], which represents the probability of the disclosure of the presence of a user by comparing two tables in a centralized environment. Thus, by applying ?-presence to a distributed environment, we propose a new indicator, named ?-site-presence.

Also, in [12], we proposed ?-max-site-presence which represents the probability of the disclosure of the presence in distributed environment. However, this indicator has an     Table I EXAMPLE OF THE JOINED-ANONYMIZED TABLE PROBLEM  income time title <50K 16:00- X movie <50K 16:00- Ysports  50K<= -15:59 X movie 50K<= -15:59 Ysports  ID income User 1 30K User 2 40K User 3 55K User 5 60K User 6 65K User 8 70K  (a) Provider A?s (b) Provider B?s (c)      (revealed case)  income time title <60K 16:00- X movie <60K 16:00- Ysports  60K<= -15:59 X movie 60K<= -15:59 Ysports  AT BT *T  ID time title User 1 16:00 X movie User 2 17:00 Ysports User 4 17:30 X movie User 5 16:30 Ysports User 6 18:30 X movie User 7 19:00 X movie User 9 12:00 Ysports  User 10 14:00 Ysports User 11 14:30 X movie User 12 11:30 X movie  (d)      (non-revealed case)*T  assumption that the numbers of users in the providers are almost same. Thus, it cannot specify the probability of the disclosure from the view of Providers A and B separately. In addition, it cannot represent the probability of the absence of users.

Thus, we proposes a new indicator, named ?-site- presence, which is an extended indicator of ?-max-site- presence and ?-presence.

Definition 1: (?-site-presence) Let ?? and ?? be the tables stored by Providers A and B. Note that ?? and ?? have different attributes. Also, let ? ? be the joined- anonymized table, ? ?? be the table that consists of attributes of Provider ? ? {?,?} of ? ?, and {??,1, ? ? ? , ??,??} be the set of values of any set of attributes in ? ?? . When ??,? ? {??,1, ? ? ? , ??,??}, we represent ???[??,?]? as the number of the records that are identified by value ??,? in ??, and ?? ?[??,?]? as the number of the records that are identified by value ??,? in ? ?. Then, we define that ? ?  satisfies {????,?, ????,?, ????,? , ????,?}-site-presence if the probability of the presence of all users in other providers being disclosed from the view of Providers ? ? {?,?} is less than ????,? and more than ????,? as follows:  ????,? ? ?? ?[??,?]?  ???[??,?]? ? ????,? ?? ? {?,?} (1)  For example, in Table I(d), the {??,1, ??,2} is the set of { <60K, 60K? }. First, let us consider <60K.

The number of records of income <60K in Table I(d) is two. This means ?? ?[??,1]?=2. Also, the number of records of income <60K in Table I(a) is three. This means ???[??,1]?=3. Thus, regarding <60K, the probabil- ity is 2/3. Regarding 60K?, the probability is also 2/3.

Next, let us consider {??,1, ? ? ? , ??,4}, which is the set of {(16:00-,X movie),(16:00-,Y sports),(-15:59,X movie),(- 15:59,Y sports)}. Regarding ??,1=(16:00-,X movie), the number of records of (16:00-,X movie) in Table I(d) is one.

This means ?? ?[??,1]?=1. The number of records of (16:00- ,X movie) in Table I(b) is three. This means ??? [??,1]?=3.

In addition, regarding {??,2, ??,3, ??,4}, ?? ?[??,?]?=1 and  ???[??,?]?=2. Thus, Table I(d) satisfies {23 , 23 , 12 , 13}-site- presence.

Also, as the same reason mentioned in [6], any presence requirement (????,?, ????,?) should satisfy following con- dition.

????,? ? ?? ??  ???? ? ????,? ?? ? {?,?}  B. Dummy user protocol  We introduce a distributed anonymization protocol which satisfy ?-site-presence. In [12], we proposed Dummy user protocol to satisfy ?-max-site-presence. Because ?-site- presence is a extended indicator of ?-max-site-presence, we will modify Dummy user protocol to satisfy ?-site-presence.

The modified Dummy user protocol can satisfy not only ?- max-site-presence but also ?-site-presence.

The modified Dummy user protocol is designed to create ? ? that has as much detailed information as possible and satisfies the following requirements:  ? ? ? must satisfy ?-anonymity and ?-site-presence.

? The disclosed information that is more detailed than ? ?  should be minimized.

The difference of the requirements from the previous Dummy user protocol is the indicator: ?-site-presence or ?-max-site-presence. Therefore, we modify the verification algorithm in Dummy user protocol to verify ?-site-presence instead of ?-max-site-presence.

As the same as the work of Jurczyk and Xiong [5], Dummy user protocol is based on Mondrian [11], which is widely used as a top-down approach algorithm. However, if we use existing distributed anonymization protocol [5] when the sets of the users in the providers are not the same, the presence of a user in a provider is revealed to the other provider when ??s are sent for dividing a group. Thus, in this protocol, a provider treats the users who do not exist in the provider as if they actually did. We call these users as dummy users. In addition, we call the users who really exist in the provider existing users. By using the dummy users, it will be difficult for a provider to distinguish whether the received ?? is of an existing or a dummy user.

In Dummy user protocol, firstly, Providers A and B create an internal anonymized table ? ?? (? ? {?,?}) locally. After that, Provider C obtains the joined-anonymized table ? ? by joining the ? ?? that Provider ? has. In the followings, we describe how to create ? ?? .

1) Step 1: Providers A and B initialize ? ?? by generaliz- ing all values in ? ?? into top state and assign dummy users in their tables (Table II(a)(b)(Initial)). We assume that each provider knows the parent population ? beforehand. Here, let ?? be the set of the existing users in Provider A, ?? be the set of the existing users in Provider B, and ?? be the set of the users who do not exist in Providers A or B.

Then, ? can represent that ? = ?? ? ?? ? ?? (?? ?= ?,?? ? ?? ?= ?). This assumption is satisfied if Providers     function split(??: a set of ??s including dummy user?s ??s) 1: update the dummy values of all dummy users in ?? 2: ????? ? decide division point by the heuristic function 3: verify ?-anonymity and ?-site-presence on the ????? 4: if the verification is failed then 5: give up the split of ?? 6: endif 7: if the ????? is on my side then 8: divide my ? ?? on the ????? 8: send the ??s to the nondividing provider 9: else 10: receive the ??s from the dividing provider, and divide my ? ?? 11: endif 12: ???, ???? ? ??s after the dividing 12: call split(???), split(????) recursively  Figure 1. Algorithm of Step 2 of Dummy user protocol  A and B use the same centralized authentication systems like Facebook Connect. In this case, all users registered in the authentication systems are the parent population ? . Then, Provider A assigns ? ??? as dummy users of Provider A, and Provider B assigns ? ? ?? as those of Provider B.

2) Step 2: Providers A and B execute a split function that divides ? ?? and ?  ? ? by communicating with each other  (Figure 1). First, Providers A and B assign the qid for a dummy user. We call these values dummy values. To make it difficult to distinguish between a dummy user and a existing user in a provider from the view of the other provider, the providers assign dummy values in accordance with the distribution of the existing users? qids.

Next, the providers decide the division point by using the heuristic function. In order to hide a user?s presence, it is effective that the divided groups uniformly have dummy users. Therefore, in order to find effective division point, we introduce an entropy of dummy users (Dummy Entropy,??) in Provider ? across the divided groups:  ??(?, ?) = ? ?  ??????,????  ???(?,??)? ???? ???(  ???(?,??)? ???? ) (2)  where ? is a candidate of division points that divide a group ?? into the upper group ??? and the lower group ????, and ??(?,??) is the set of ??s of the dummy users of Provider ? in the group ??. By using this ??, the heuristic function calculates the following score ?:  ?(??) = ?( ??(??)  max????(?(??)) )  + (1??)1  ?  ???,? (  ??(??, ?)  max????(??(?? , ?)) ) (3)  ?(??) = ?  ???? ??? ? ??? (4)  where ? is the sum of the distance between the value of ?? and each ??, which is a value of the selected attribute. Note that if we set the weight parameter ?=1, then ? is almost same as Mondrian.

At last, the heuristic function selects the ?? whose score ? is the maximum as the division point. This division point is expected to divide a group into two groups across which the dummy users are allocated almost uniformly. As a result, the ? ?? may be divided many times.

After that, the providers verify whether the ? ? that is di- vided on the division point satisfies ?-anonymity and ?-site- presence. If ? ? satisfies the indicators, the providers divide ? ?? . Finally, the providers call the split function recursively with the groups after division. Note that, in the verification and the calculation of the heuristic function, Dummy user protocol user some secure computation protocols [9], [10].

The details are described in [12].

3) Step 3: After finishing all dividing, Provider B cal- culates the number of common users for each sensitive value. As an example of the records of Users 1-5 in Table II(b)(Second division), the number of common users who watched X movie is one. As mentioned above, Provider A, B divides ? ??, ?  ? ? without disclosure the presence of  users. After that, Provider C gets ? ??, ? ? ? without ??s and  combines them to create ? ?.



V. EXPERIMENTAL EVALUATION  We have implemented a prototype of Dummy user proto- col and evaluate it. The prototype has been implemented in Java 1.6. It works in test architecture in which the providers communicate with each other virtually. We use an ?Adult? data set, which is created based on U.S census, in UCI Repository [13]. Furthermore, we divide the ?Adult? data set the same way as Mohammed et al. [2].

Adult is almost 30K records of data with 14 types of attributes and one class of data, income class (50K< or not).

Also, we treat all records of ?Adult? as a user set ? and select the groups from the top: 6,000 records as users who exist in both (?? ? ??), next 12,000 records as users who exist only in Providers A (????????), next 6,000 records as users who exist only in Providers B (?? ? ?? ? ??), and the remaining records as users who exist in neither (??).

Thus, ????=18,000 ??? ?=12,000.

In order to evaluate the accuracy of data analysis on the anonymized data created by Dummy user protocol, we introduce the relative error of query results as an evaluation metrics. As the same as the existing anonymization methods [5], [14], we calculate the relative error of the result of a select count query (e.g. ?select count(*) from ? ? where range predicate?), which is a basic aggregate query for numerous mining tasks, such as association rule mining.

In this evaluation, we let ? (0% < ? < 100%) as a query parameter called the expected selectivity, and create a random query which has a random range predicate which covers ? percent of the domain size. In other words, if ? ?  contains 12,000 records and ?=10%, the expected count of the records selected by the random queries is 1,200. Then, by using this random query, we obtain its actual result ??? from     Table II INTERNAL ANONYMIZED TABLE ? ?? , ?  ? ? AND JOINED-ANONYMIZED TABLE ?  ?  IDs income User 1-15 *  IDs time userCounts User 1-15 0:00-23:59 -  (a)  Provider A?s  User 1-10 * User 11-15 *  User 1-10 0:00-18:59 - User 11-15 19:00-23:59 -  User 1-5 <40K User 6-10 40K<= User 11-15 *  User 1-5 0:00-18:59 X movie:1, Y sports:1 User 6-10 0:00-18:59 X movie:1, Y sports:1 User 11-15 19:00-23:59 X movie:1, Y sports:2  income time title <40K 0:00-18:59 X movie <40K 0:00-18:59 Y sports  40K<= 0:00-18:59 X movie 40K<= 0:00-18:59 Y sports  * 19:00-23:59 X movie * 19:00-23:59 Y sports * 19:00-23:59 Y sports  (c) Joined-anonymized table  Initial  First division  Second division  (b)  Provider B?s  * BT  * AT *T  joined-non-anonymized table, which is inner joined table on ?? and ?? , and estimate ??? from joined-anonymized table ? ?, and calculate the relative error equals ???? ? ????/???.

Regarding the estimating ???, we consider the rate of the overlapping areas of the range predicate of the query and the range of generalized ?? . For examples, if ? ? has 5 records of income ?10-20K? and the range predicate of a query is ?10-12K?, then the range predicate covers 20% of ?10-20K?. Thus, we estimate ???=5 ? 20% = 1. In addition, we select random 3 attributes for the range predicate of the random query. For each evaluation, we create 10,000 random queries and calculate average relative errors  We performed three kinds of evaluation of Dummy user protocol. First, we compare with the existing distributed anonymization method and show that the impact of mining results is smaller than existing method. Second, we compare with existing centralized anonymization method which hides user presence and investigate the difference between the proposed distributed method and the existing centralized method. Third, we vary ? parameters of ?-site-presence and calculate the relative errors.

A. Comparison with Existing Distributed Method  In order to evaluate the accuracy of Dummy user pro- tocol, we compare it with extended Mondrian, which is a simple distributed anonymization protocol extended from Mondrian, in order to compare fairly. The extended Mon- drian divides a group of users when satisfying not only ?- anonymity but also ?-site-presence and outputs the table that contains the record of the common users.

First, we calculate the average relative error of the pro- posed method (Dummy user protocol) and the existing method (extended Mondrian). Figure 2 shows the result when ? = 2, ????,?=????,?=0.9, ????,?=????,?=0.1, and ?={5%, 10%, 20%, 30%}. Moreover, the weight ? is set at 0.5 in order to make the effect of ?? half.

As the result shows, the average relative error of the proposed method is lower than the existing method. This is because adding the dummy entropy into the heuristic function and the update of the dummy values in proposed method enable the selection of a suitable division point that  can hide the presence. In addition, the average relative error of the proposed method is almost 10-25%. This means that if an association rule mining is performed on the anonymized data created by the proposed method, the relative error of the support or confidence of an acquired association rule is almost 10-25%. For example, if the support of an association rule acquired from original data is 10%, then the support of the association rule acquired from its anonymized data may be about 8-12% because of the 10-25% relative error. We think such amount of the relative error does not seriously affect the mining results.

B. Comparison with Exisiting Centrazlied Method  Also, we compare the proposed method for a distributed environment with the existing method for a centralized environment, named MPALM [6]. MPALM is an algorithm that is also extended from Mondrian to satisfy ?-presence and hide the presence of a user in an anonymized table. The big difference is that the existing method hides only one side of the presence, but the proposed method hides both sides.

Thus, to evaluate them fairly, we generate evaluation data set in which ??? ? ?? ? ?? ?=12000 and ??? ? ?? ? ?? ?=0.

Figure 3 shows the result of the average relative error of the proposed method and the existing method with ????,?=0.9, ????,?= 0.1, and {????,? , ????,?} are not specified. As the result shows, the average relative error of the proposed method is worse than the existing method. This is because the algorithm of the proposed method selects the division point by calculating the heuristic function.

On the other hand, the algorithm of the existing method selects it by trying to divide the anonymized table and check the indicators of the users? existence. This means that the existing method can retry division many times, so the existing methods can divide many more times than the proposed method. If the existing algorithm is used in a distributed environment, the user?s existence will be disclosed by knowing whether the table in the existing algorithm can be divided or not.

However, the error of the proposed method and the exist- ing method is almost 10-20%. Thus, we think the proposed method is still effective for data mining.

Expected selectivity  A verage relative error [%  ]  ?        5% 10% 20% 30%  Proposed method (Dummy User) Existing method (Mondrian)  Figure 2. v.s. Mondrian  Expected selectivity  A verage relative error  [% ]  ?        5% 10% 20% 30%  Proposed method (Dummy User) Existing method (MPALM)  Figure 3. v.s. Centralized Method  A verage relative error  [% ]  0.

1 0  .2 0 .3 0  .4 0 .5 0  .6 0 .70      0.8 0.7  0.6 0.5  0.4 0.3  60-80  40-60  20-40  0-20  0.

1 0  .2 0 .3 0  .4 0 .5 0  .6 0 .70      0.8 0.7  0.60.5 0.40.3  Amax,? Amin,?  (a) Changing    of Provider A?  Bmax,? Bmin,?  (b) Changing    of Provider B?  Figure 4. Relative errors of several ????, ???? of Provider A,B  C. Evaluation of ?-site-presence  Finally, we evaluate the relative error on various ????, ???? of Provider A and B. Figure. 4 shows the result when ?=2, ?=10%,????={0.9, ? ? ? , 0.3}, ????={0.1, ? ? ? , 0.7}.

Figure. 4(a) shows that the average relative error gets worse at nearby ????,? or ????,? = 0.3. In contrast, Figure.

4(b) shows that the relative error gets worse at nearby ????,? or ????,? = 0.5. This is because the minimum probability of leveling of users? presence from the view of Priovider A is 0.3 (6000/18000). On the other hand, the minimum probability of it from the view of Provider B is 0.5 (6000/12000).

As the result of the three kinds of evaluations, if ???? and ???? is not set nearby the minimum probability of the leveling of the user presence, our method can anonymize without leveling users? presence. Also, because the relative error is almost 10-25%, we think the impact on data mining is small.



VI. CONCLUSION AND FUTURE WORKS  We showed that there is a problem of the presence of a user in the data of different service providers being revealed when the providers have different sets of users.

To solve the problem, we proposed ?-site-presence, which indicates the probability of the presence of a user being revealed in distributed environment, and introduce Dummy user protocol. Our evaluation results show that Dummy user protocol can anonymize users in accordance with the policy of hiding users? presence and user anonymity with small impact on data mining results  In the future, we plan to calculate computation and communication costs. Also, we plan to improve the heuristic function to make it more efficient and extend the protocol to support multiple sites.

