A New Mining Algorithm based on Frequent Item Sets

Abstract   A new mining algorithm has been put in this paper base on frequent item sets. When affair database and minimum support has changed, this new algorithm can get the new frequent item sets by scanning the undirected item set graph only one time. Its execute efficiency is improved distinctly compared to the traditional algorithm.

1. Introduction   Mining Association Rules is a very important field of research in the data mining. The problem of Mining Association Rules is put forward by R.Agrawal firstly in 1993. Now, the association rules are wildly applied in E-commerce, bank credit, shopping cart analysis, ETC.

The frequent Set excavation is the key of the Mining Association Rules. At present, there are many main mining methods for frequent Set excavation like as Apriori-category algorithm, FP-Tree algorithm, ETC.

Apriori-category algorithm is base on the had candidate items, so its flaw is the need to have a lot Candidate Sets and scan the database. FP-Tree Algorithm?s advantage is not need to produce Candidate Sets and it need scan database two times in the memory allowed. But when the memory is not meet the need, this Algorithm is become more complex.

It need scan the database more than two times and the I/O expenses will increase. So we need design a efficient algorithm to update, protect and manage the Association Rules for the Mining Association Rules in large transaction database. So far, many researchers made analysis and research for how to efficiently update the association rules and put forward corresponding algorithm. There are two instances in the problem of Association Rules update. The first instance is when the transaction database had changed how to create frequent item sets correspond. FUFIA Algorithm is the representational updating method for  this problem. The second instance is when the minimum support had changed how to create frequent item sets correspond. IUA algorithm is the representational updating method for this problem.

This updating algorithm all have advantages and disadvantages each other.

The paper proposes a dynamic algorithm of frequent mining based on undirected item sets graph. It only need scan database one times then made the information of frequent item sets of original database saving in the undirected graph. By searching in the undirected graph, it can find the frequent item sets and not need generate candidate item sets. When the affair database and minimum support had changed, this algorithm only need re-scan the undirected item sets to get the new frequent item sets.

2. The basic concept of association rules   The problem of mining association rules can be described as below: if I= { 1 2, ,..., ni i i } is the set items.

Suppose task related date of D is database transaction set and each transaction of T is set items, make T ? I.

Each transaction has a mark and made it is TID.

Suppose A is a set items and transaction T include A only if A ? T. Association rules is a implication like as A ? B which A, B ? I and A ? B= F .

Definitions one If there are (100?s)% affairs in D support X, then said that X?s support is s(0?S?1). If affair item set of X ? Y?s support is s, then said that the association rules of X ? Y?s support is s in the affair database D.

Definitions two If there are (100?c)% affairs that supported X are also supported Y, then said that the rule of X ? Y?s confidence is c in the affair database D(0?S?1).

Given a minimum reliability threshold value is minconf and a minimum support threshold value is minsup. The task of mining association rules is to find  2008 Workshop on Knowledge Discovery and Data Mining  DOI 10.1109/WKDD.2008.86   2008 Workshop on Knowledge Discovery and Data Mining  DOI 10.1109/WKDD.2008.86   2008 Workshop on Knowledge Discovery and Data Mining  DOI 10.1109/WKDD.2008.86   2008 Workshop on Knowledge Discovery and Data Mining  DOI 10.1109/WKDD.2008.86   2008 Workshop on Knowledge Discovery and Data Mining  DOI 10.1109/WKDD.2008.86     all association problems which support and reliability not less than the given threshold value. For the given minsup, if the item set of D?s support is not less than minsup, then it can say that D is the frequent item set.

So the problem of mining association rules can be simplified to find all the frequent item sets for beforehand given the smallest support.

3. Optimization algorithm of mining frequent item sets  3.1. Define and algorithm of undirected item sets graph  3.1.1 Undirected item sets graph   Define of undirected item sets graph is that its node set V is the commodity set of database like as{ }1 2, ,..., nv v v . Each node includes three attributes: the node name, the number of nodes and the pointer which point associate nodes.

The side set E of undirected item sets graph is the set of side<i, j>. Each side has two attributes: the side name and the number of side appear. < ,i jv v >express two items frequently sets; ? < 1, nv v > express n items frequently sets.

3.1.2. Construct undirected item sets graph   At first scanned database, made each commodity as a node and let transaction item set?s commodity item of each transaction binary group { },T Tid itemsets= (Tid is trade code. itemsets is trade item set.) corresponding the trade list which supports it. That make up of new binary group I= (Item, Tislist). So the side between nodes can be accomplished by correspondence trade list operation. When node A and node B?s corresponding trade list is not empty, then there is a side between node A and node B. the appearance number of side is the result number which is get from sides intersect. Given a undirected item sets graph which is created by database that include nine affair item(show as table one) in graph one. Supposed that it minimum support S is two. Table two is the commodity item and support trade list of table one.

Table 1 A store business data TID the list of item ID  T100 T 200 T 300 T 400 T 500 T 600 T 700 T 800 T 900  I1,I2,I5 I2,I4 I2,I3  I1,I2,I4 I1,I3 I2,I3 I1,I3  I1,I2,I3,I5 I1,I2,I3   Table2. Corresponds to trade list of commodity item  commodity item support trade list  I1 I2 I3 I4 I5  T400, T500, T700, T800, T900 T100, T200, T300, T400, T600, T800, T900  T300, T500, T600, T700, T800, T900 T200, T400 T100, T800   Algorithm one Construct undirected item sets graph Input: original database D Output: undirected item sets graph Begin  Add the item into the vertex set V; For i=1 to n-1  Select iV  From V; For each jV  (j ? i) If ( ji II ? ) ? F then  // iI is corresponds trade list of node i.

Add jV  to the adjacentlist of iV ;  Endif Next End   3.1.3. Optimize mining algorithm based on undirected item sets graph   The algorithm proposed in this paper uses the search strategy of Depth First-Search to set universal undirected item graph. The specific processes are shown as follows:  Choose a node iV  from node aggregate V as the search jumping-off  When the arisen time of node iV  is not less than the minimum support S, then{ }iV will belong to the item in frequent 1-item aggregate with minimum support degree S.

When the node iV to the adjoin node jV ?s side arisen number is not less than support S, then { iV , jV }     will belong to the item in frequent 2-iterm aggregate with minimum support degree S. Then it made iV as the search starting, analogized in turn to find the frequent 2-iterm set.

When there is three nodes? circle in undirected item sets graph and each side of the circle arisen number is not less than minimum support S, these three nodes < , ,k m nV V V > meet frequent 3-item aggregate with minimum support degree S. analogized in turn, when there is n (n?3) nodes? circle in undirected item sets graph each side of the circle arisen number is not less than minimum support S and all the subset of these n nodes are frequent aggregate, these n nodes < , ,k m nV V V > meet frequent n-item aggregate with minimum support degree S.

Algorithm two  frequent set find algorithm based on undirected item sets graph  Input: undirected item sets graph, minimum support S  Output: frequent item set L Begin While While V??do for each iV  of V if count( iV ) ? S do // count( iV ) is the arisen  number of node iV L= iV ; Select unvisited jV  from iV .adjacentlist; If count(( iV , jV ) ? S do // count( iV ? jV ) is the arisen number of side  < iV , jV > L= L? jV L.adjacentlist= L.adjacentlist? jV .adjacentlist Call DFS( jV ) end; Procedure DFS( jV ) begin if jV .adjacentlist?? do Select kV   from jV .adjacentlist; Call isloop(L , kV ) If count((L , kV ) ? S do L = L? kV  Call DFS( kV ) Output L delete kV  from jV .adjacentlist Call DFS( jV  ) Else Return to its parent vertex iV Call DFS( iV ) End; Procedure isloop(L , kV ) Begin If kV ?L.adjacentlist do Return kV Else delete kV  from jV .adjacentlist Call DFS( jV  ) End; According to algorithm two, it contains frequent  1-item is L1= { 1 2 3 4 5, , , ,I I I I I }; frequent 2-item is L2  ={{ 1 2,I I },{ 1 3,I I },{ 1 5,I I },{ 2 3,I I },{ 2 4,I I },{  2 5,I I }};frequent 3-item is L3={{ 1 2 3, ,I I I } ? { 1 2 5, ,I I I }}.

3.2. Update policy based on undirected item sets graph   When trade database and minimum support have changed, how create frequent item set in changed database which many researchers have analyzed and researched and put corresponding algorithm. But in fact, the mode of database is usually must limited rebuilt (as item set add, minimum support changed) in many trade data of applied system database. At this point, the algorithm put above is not immediacy applied, otherwise the availability information of correlation item set?s associate rule will be lose.

Undirected item sets graph can be constructed real-time in this paper proposed mining algorithm base on undirected item sets graph. When there are new item which want to add, the undirected item sets graph can be update. In this time, the new frequent item set can be made only by running algorithm two again.

When the minimum support has changed, the minimum support S can be made the new frequent item set only by adjusting a parameter of algorithm two.

3.2.1. Database affair changed   For example, when new items T910 add in table one; the result is as shown as table three.

Table 3 The new affair data in a store TID the list of item ID T100 T 200 T 300 T 400 T 500 T 600 T 700 T 800 T 900 T910  I1,I2,I5 I2,I4 I2,I3  I1,I2,I4 I1,I3 I2,I3 I1,I3  I1,I2,I3,I5 I1,I2,I3  I1,I4   A new item T910 have added at this time. So the arisen number of side< 1 4,I I >is two. As shown in fig.1, fig.1 contains frequent 1-item is L1={ 1 2 3 4 5, , , ,I I I I I }; frequent 2-item L2={{ 1 2,I I },{ 1 3,I I },{ 1 5,I I },{ 2 3,I I },{ 2 4,I I },{  2 5,I I },{ 1 4,I I }}is; frequent 3-item is L3={{ 1 2 3, ,I I I },{ 1 2 5, ,I I I },{ 1 2 4, ,I I I }}according to algorithm two.

Fig.1 Undirected item sets graph generate by table three   3.2.2 Minimum support changed   For example, when the minimum support S is three, it contains frequent 1-item is L1={ 1 2 3, ,I I I }; frequent 2-item is L2={{ 1 2,I I },{ 1 3,I I },{ 2 3,I I }};frequent 3-item is L3={{ 1 2 3, ,I I I }}according to algorithm two.

4. Algorithm performance analysis  4.1. Space complexity analysis   The space cost of algorithm is mainly in storage UDISG and the size of UDISG is decided by the length of affair database. As UDISG only need n nodes and k sides to storage all the information of frequent item, so space utilization will improved greatly adapt to minimum support S decrease; the size of frequent item increase that made storage mass await item to increase as index; using other tree structure and the structure of adjoin network relative to Apriori algorithm.

4.2. Time complexity analysis   The time cost of algorithm is mainly lie on scanning affair database and executive numbers of DFS when scanning UDISC. The time of scanning affair database is decided by its length and its average estimate time is O (n). Executive numbers of DFS is decided by nodes of figure; numbers of adjoin node and the length of frequent item. Its average estimate time is O (N*K*L).

That N is the number of nodes; K is the number of adjust nodes and L is the length of frequent item set. Its time complexity is far less than algorithm of Apriori and analogy one.

5. Conclusion   This paper put a dynamic associate rule mining algorithm base on undirected item sets graph. The information of frequent item set of original database will save in the undirected item sets graph. Found the frequent item set by searching undirected graph instead to producing candidate item set. When affair database and minimum support have changed, this algorithm only needs search the undirected item set graph again to get the new frequent item set. I will research how to make the undirected item set graph applied in distributed associate rule data mining.

