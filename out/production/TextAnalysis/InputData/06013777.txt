A Web-based Immediate Diagnosis System for Efficient ERM Learning

Abstract- This paper proposes a Web-base Immediate Diagnosis System (WIDS), aiming at promoting students'  efficiency in learning Entity-Relationship Model (ERM). When  a student makes a mistake during learning process, the  diagnosis feedback is delivered immediately, which is achieved  by the AJAX technique. The proposed diagnosis feedback, which is based on association rules, provides a student the  crucial and related hints for rectify current misconceptions and  prevent prospective mistakes.

Keywords- E-Learning, association rules, immediatefeedback

I. INTRODUCTION  Learning feedback used in educational contexts is generally regarded as crucial to improving knowledge and skill acquisition. Feedback gives learners the opportunity to adjust and develop their cognitive strategies and to rectifY misconceptions while progressing through the training [1].

However, in a traditional learning environment, it is difficult for taking advantage of learning feedback since teachers often need to deal with many learners at the same time, or face the pressure of adhering to scheduled progress of instruction [2].

Such predicament can be solved by e-Learning system.

However, most E-Learning system present short statement (e.g. , Corrent or Incorrect) or update a score display in response to student input, leading to limiting capacity of communicate with the learner. These feedback routines are design to function without regard to the individual difference [3]. As a result, diagnosing learning barricades has became popular for enhancing learning effectiveness in E-Iearning environment since such diagnosis feedback is dynamic and allows that learners will receive useful hints whenever facing learning barriers during learning process [4]. Some techniques have been proposed for diagnosing learning problems of learners for adaptive learning systems [5, 6, 7].

On the other hands, there are conflicting results in the literature relating to the timing of feedback (e.g. immediately and delayed) and the effects on learning outcome and efficiency [8, 9, 10]. Researchers have been examining the effect of immediate versus delayed feedback on learning for decades. However, the study of timing of feedback has always been muddied [11]; that is, the question that which type of feedback is better for learning efficiency is not clear.

Buchanan [12] and Wang [2] suggested that do not give correct answers when students are repeating the test, but provide references as immediate feedback when they answer wrongly, students will become more focused on learning and gradually master the teaching materials.

Consequently, this research assumes the combination of the both strategy: "immediate feedback" and "diagnosis feedback" can enhance learning efficiency. Furthermore, a premier Web-based Immediate Diagnosis System (WIDS) for learning database ERM is proposed, which is able to diagnose learning barricades of learners and further provide the crucial and adaptive hints in a real-time way during learning process.

An ERM is the critical tool in the design of database schema, helping users to achieve a better understanding of the database schema by displaying the structure in a graphical format [13].

Association Rules is adopted herein to model the learner's behavioral patterns [14]. By analyzing the leamer' s needs and presenting appropriate feedback, the WIDS system adjusts itself to return the suitable hints for the individual learner.

Also, the prospective misconceptions once a misconception is occurred can be discovered. This paper will also detail how to use AJAX (Asynchronous JavaScript and XML) technique [15] and association rules to achieve immediate diagnosis feedback respectively.

The rest of this paper is organized as follows: Section II elaborates the proposed algorithm for diagnosis feedback and the technique used to achieve immediate feedback. Section III illustrates the typical manipulation process and some demonstrations of the develop WIDS system. Conclusions and future works are given in section IV.

I I. PROPOSED APPROACH  A. The Web Techniques to Achieve Immediate and Delayed  Feedback In traditional Web application, a response from a Web  server is caused by a request from a user. For, example, a new page with the desired information will be returned from the server when a user presses a submitted button. Thus, in the case of drawing an ERD (Entity-Relationship Diagram), the common scenario is that a student submits the result only after finishing the ERD and then feedback return from the Web server. Such feedback occurred after a student completes an ERD can be deems as delayed feedback. The software model of the delayed feedback is illustrated in the left part of Fig. 1.

In order to provide immediate feedback, the new technology AJAX is presented for creating more efficient and interactive Web applications that handle users' requests instantly. AJAX applications do not require installing a browser plug-in, such as Java Applet and Microsoft ActiveX, but work directly with all the most popular browsers, allowing partial content on a Web page to be updated immediately when a user performs an action. Smullen [16] presented a performance study, comparing a traditional Web application    with an AJAX application in which both implemented the same user interface. The results showed that AJAX provides significant performance improvement and a typical user' s service time would improve by 21 %.

In the case of drawing an ERD, the process flows of immediate feedback are as follows: Whenever a user completes a drawing step on a browser, this action will trigger local AJAX engine for submitting the request to the Web server. Then, the Web application will process this request and then return the feedback. Once receiving the results, the browser's partial page, not whole page, will be updated according to the returned results. The above processing flow is employed iteratively if the browser is operated continuously. Such feedback occurred right after a student has completed a step can be deems as immediate feedback. The software model of the immediate feedback is illustrated in the right part of Fig. 1.

Notably, both delayed and immediate design is capable of hosting multiple clients' (i.e. students) operation simultaneously; that is, even when several students perform the ERD practice at the same time, each student will individually get hislher response in delayed or immediate way.

Fig. I The different software models for immediate and delayed mode  B. Diagnosis Software Module Based on Association Rules The proposed diagnosis module is based on the  association rules to mine interesting association or correlation relationships among a set of data items [14]. Extensive information must be available for mining and analysis before and during the diagnosis process. Thus, we need to carry out preliminary tests in order to acquire the model of learners' behavioral patterns. These patterns can be deemed as a set of data item for mining. Then by applying Apriori algorithm, frequent itemsets can be found for association rules. In our case, a frequent itemset means that if a student makes a mistake on an item of an itemset, he/she is very likely to make mistakes on other item of the same itemset. This is because when a learner has a misconception on an item (i.e. make a mistake on it), it is very probably that the learner not only fully misunderstand the item, but also other related items [7].

Then we can generate association rules from these frequent itemsets and further calculate all confidence   (probability) for each association rules, which explicitly reveal the probability of making mistakes on the related items once a mistake is made on an item. These frequent itemsets can be regarded as the learning blockades and thereby providing adequate hints in a timely manner can be useful to conquer such blockades.

Since the crucial and complicated part amid building an ERD is during this process, "determining relationship and cardinality ratio", we mainly focus diagnosis feedback on this part. More specifically, the diagnosis feedback is achieved by executing the following steps.

Step 1: Presetting correct ERD by an instructor  The first step is to drawing the correct ERD answer by an instructor. In order to facilitate computing convenience, we have to convert graphic information into numeric data, which is done by expressing an ERD in terms of a matrix Rcorrect. The translated formula is as follows:  Rcorrec' = [Rlj ]nxn (I) { RIj = RjJ = 0 ; if R, and RJ have no relation\'hip Rlj =Rjl =1; ifE, and H) are one-la-one relationship  Rlj = Nand Rl' = 1 ; if H, and H] are one -to -many relationship  RIj = M and Rjl = N ; if H, and RJ are many -to -many relationship  where n is the number of entities. Supposing that the left part is the correct ERD done by an instructor; thus, after translation process, the resulting matrix is shown in the right part of Fig. 2.

Fig. 2 Translating the correct ERD answer to an matrix  Step2: Comparing the ERD results of all testees with the  correct ERD answer.

The step aims to acquire answer pattern of a testee. After a  testee finishes hislher ERD, the corresponding matrix Rtest can be obtained through the translation formula (1). And then the mistakes made by the testee can be identified by comparing Rtest with Rcorrect. For example, assuming the test result of a testee is shown in the left part of fig. 3. After comparing Rtest with Rcorrect, we can identifY these mistakes: two wrong relationships R12 and R23. By repeatedly comparing the test results of a number of testees, we can obtain the mistake patterns of all testees.

Fig. 3 Translating the ERD result of a testee into an matrix  Step3: Generating transactions from the test result of testee.

From the mistakes patterns of all testees, a test portfolio  table with all testees having mistakes on the test can be listed.

Every compared result can be deemed as a transaction and thereby the table is deems as a transaction database 0 for mining mistake patterns.

In order for clearer explanation, we illustrate an example with the mistake list of nine testees for whole diagnosis procedure, shown as in Table.l. The procedures are the same when the numbers of testees are more than nine.

Table 1. Transaction database consisting of the test results of nine tesetees  TID List of Wrong Items (Relationships) Tl R12, RlJ, R2J T2 R13, R15 T3 R13, R14 T4 R12, RlJ ,R15 Ts R12, R14 To R13, R14 T7 R12, R14 Tg R12, RlJ, R14, R23 To R12, RlJ, R14  Step4: Using the Apriori algorithm tofind frequent itemsets.

Through the transaction database 0, we use Apriori  algorithm to find frequent itemsets, illustrating in Fig. 4.

In the first iteration of the algorithm, each item is a  member of the set of candidate l-itemsets, C1. The algorithm simply scans all of the transactions in order to count the number of occurrence of each item. Supposing that the minimum transaction support count required is 2. The set of frequent l-itemsets, Lj, can then be determined. It consists of the candidate 1-itemsets satistying minimum support.

In the second iteration, to discover the set of frequent 2-itemsets, L2, the algorithm uses LI x LI to generate a candidate set of 2-itemsets, C2 which consists of  (?JI) 2-itemsets. Next, the transactions in D are scanned and the support count of each candidate itemset in C2 is accumulated. The set of frequent 2-itemsets, L2, is then determined, consisting of those candidate 2-itemsets in C2 having minimum support.

C, Itemsei Sup. count {Rd  L, Itemset Sup. count  Scan D for count {R,?} of each candidate {R'4J  Generate C" candidates from L, ?  Generate CJ candidates from L2  ?  C,  c,  {R,sJ {Rd  Itemset {R'2,R1J} {R'2,R14J {R,2,R,sl {R'2,Rd {R'J,R14J {R'J,R,sJ {R,J,Rd {R'4,R,5} {R14,R2J} {R15,R2J}  Itemset  {R'2,R1J,R'4} {R'2,R1J,R2?}  Compare candidate support count with Minimum support count  {R,.,} {Rnl {R14J {R,sJ {Rd  C, Itemsei Scp count  {R'2,R1J} 4 Compare candidate Scan 0 for count {R,,,,R'4J 4 support count with minimum support of each candidate {R'2,R,sJ 1 count {R'2,R2JI 2 {R,? ,R'4J 4 {R,? ,R'5} 2 {R,? ,R2J} 2 {R14,R15} 0 {R'4,R2J} 1 {R15,Rd 0  C,  Itemset Scp Compare candidate Scan 0 for count count support count with of each candidate minimum support  , {R'2,R,? ,R'4} 2 count {R'2 ,R,? ,R2?} 2   L, Itemset  {R'2,Rd {R'2,R14J {R'2,R2JI {R'3,R'41 {R'3,R,sl {R13,Rd  L,  Itemset  {R'2,R1J,R14} {R'2,R'J,Rd  Fig. 4 Using Apriori algorithm to find frequent itemsets.

Sup.

count  Sup, count   In the third iteration, to generate of the set of candidate 3-itemsets, C3, two Apriori properties have to be applied: I) all subsets of a frequent itemset must also be frequent, we can consequently determine that 4-itemsets candidates cannot possibly be frequent; 2) all non empty subsets of a frequent itemset must also be frequent. Under these two properties, we can obtain C3= {{RI2,R13,RI4}, {RI2,R13,R23}}. Then scanning the transactions in 0 in order to determine L3, which consists of the candidate 3-itemsets in C3 having minimum support.

The algorithm uses L3XL3 to generate a candidate set of 4-itemsets, resulting in C4={RI2, R13, R14, R23}' However, this item is pruned since its subset {R13, R14, R23} is not frequent.

Thus, C4= ? (empty set) and thereby the algorithm terminates, having found all of the frequent itemsets.

After finishing Apriori algorithm, we find the two frequent itemsets: {{R12' R13, R14}, {R12' R13, R23}}, as shown in L3 of Fig. 4. These resulting frequent itemsets can be deems as learning blockade for students. Therefore, we can foresee that according to first frequent item set, if making a mistake on R14, a student is very likely to make mistakes on RI2 and R13 also.

Step5: Generating association rules from frequent itemsets  Once the frequent itemsets have been found, it is straightforward to generate strong association rules from them, where strong association rules satisty both minimum support and minimum confidence. This can be done using the following equation for confidence, where the conditional probability is expressed in terms of itemset support count [14]:  spt count(A u B) (2) Confidence(A => B) = PCB I A) = (A) spt _count    Where spt_count(A U B) is the number of transactions containing the itemsets (A U B), and spt_count(A) is the number of transactions containing the itemset A. Based on this equation, association rules can be generated as follows:  ? For each frequent itemset I, generate all nonempty subsets of I.

? For every nonempty subsets s of I, output the rule  "s = (1-s)" if spt count(l) > m ean! (3) spt _ count( s)  where m_confis the minimum confidence threshold.

Now we separately generate association rules for each  frequent itemset. In the case of {RI2' R13, R23}, the nonempty subsets of this I are {RI2' Rd, {R12' R23}, {R13, R23}, {RI2}, {R13}, {R23}. The resulting association rules are as shown in table 2, each listed with its confidence. For the case of {RIb R13, RI4}, the generation of association rules is the same as {R12' R13, R23}'  Table 2. Association rules for the frequent itemset{R12, RIJ, R2J}'  Association Rules  {R12, RIJ} => {R2J} {R12, R23} => {RIJ} {RIJ, R23} => {R12} {R12 } => {RIJ , R2J} {RIJ } => {R12 , R2J} {R23 } => {R12 , RIJ}  Confidence 2/4= 50%  2/2= 100% 2/2= 100% 2/6 = 33% 2/7=29%  2/2= 100%  If we set the minimum confidence threshold to 50%, then the output rules will be these association rules with confidence >= 50%.

Step6: Inputting the hints of learning blockades for adaptive  feedback  Once frequent itemsets (i.e. learning blockades) are identified, the instructor able to input the corresponding hints for each frequent itemset in order to provide adaptive feedback for the prospective students. Note that by this way, the instructor only need to input the hints for major learning blockades, thereby saving the effort of inputting unimportant hints.

Afterward, when a student practices, the system will response the corresponding hint once a mistake is made. At the meanwhile, based on the results of the frequent itemsets and association rules, the related hints and its occurrence probability of the related mistakes will also automatically provide so as to prevent him/her from making other mistakes.

For example, if a student commits a error on R23 (e.g. marking wrong cardinality ratio of the relationship or drawing the relationship which actually is meaningless), the system will return not only the hint of R23 , but also the hints of R 12 and R13 and the probability of committing such error, which is 100%.

The foregoing is the method how we diagnose learning blockades and provide adaptive hints. Combining this method with immediate feedback can offer learners with step-by-step adaptive hints once encountering learning barriers during learning process until finishing the work successfully.



III. THE DEVELOPED IAF A SYSTEM  Visual Studio .NET 2008 has been chosen as the developmental tool for implementing the whole system, since it fully supports the required techniques: HTML, JavaScript, ASP.NET, and AJAX.

A. Operation Procedure and Demonstrations  The operation procedure of WIDS is divided into two phases, as shown in Fig. 5.

Fig. 5 The Operation Stage of IAF A system  The first phase is aimed to generating diagnostic database which consists of the correct ERD answer, frequent itemsets and association rules. First of all, an instructor has to draw correct ERD in management interfaces of the system. In addition, Minimum Support and Minimum Confidence values have to been settled for the further process of generating frequent itemsets and associatIon rules respectively.

Afterward, a number of testees are involved to pretest simultaneously. After pretest finish, the system automatically generates frequent itemsets and association rules and then imports them into the database. Then an instructor can input hints for each frequent itemsets in management interface, as shown in Fig. 6. At this time, the first phase is completed and the second phase is beginning.

Fig. 6 Inputting hints    In the second phase, students can start learning process.

Whenever a student performs a drawing on ERD, the system will determine if this step is correct. If incorrect, the WIDS will return diagnostic feedback immediately to inform the student. The procedure repeats iteratively until the working ERD is finished correctly.

Figure 7 illustrates the user interface for students to practice ERD, which functions including selecting and laying out entities, building relationships and cardinality ratio, adding attributes, setting stroke, and setting colour of font and lines. Once laying out entities in proper place, a student is able to build relationships between entities and their cardinality ratio. If the built relationship is incorrect, the diagnostic feedback will be immediately display below. For example, as shown in Figure 7, the student built incorrect relationship between Employee and Product. The feedback displays the following information:  1) Frequent Itemset: which are R13, R12, and R14.

2) Major and likely errors: This means that because of a  major mistake is made on R 14, it is likely to make mistakes on R13 and R12. Meanwhile the hints for R13, R12, and R14 are also provided.

3) The confidence (e.g. probability) of making errors toward R12 and R13 are also shown for references.

Fig. 7 User Interface

IV. CONCLUSION  This paper proposes a Web-base Immediate Diagnosis System (WIDS), aiming at promoting students' efficiency in learning Entity-Relationship Model. The diagnosis feedback is delivered immediately when a mistake is made during learning process. The diagnosis and real-time functions are achieved by the association rules and AJAX technique respectively.

In the future, we will endeavour to compare the learning efficiency of WIDS with other different feedback types, as shown in table 3.

Table 3. Comparison of f our-type combinations  System WIDS WIVS WDDS WDVS Combined Immediate + Immediate + Delayed + Delay +  Type Diagnosis Verification Diagnosis Verification  Software Web + AJAX + Web + AJAX + Traditional Traditional  Techniques Diagnosis Verification Web Web  module module techniques + techniques +   Diagnosis Verification module module  ? Feedback ? Feedback is returned ? Feedback  is returned ? Feedback right after a is returned  after a student is returned student has right after a  completes an after a student completed a student has ERD completes an  step. completed a ? If the ERD Strategies ? If the step.

answer is ? The answer is ? The  correct, return feedback correct, return feedback "Correct". If answer is either  "Correct". If answer is either answer is "Correct" or  answer is "Correct" or incorrect, "Incorrect".

incorrect, "Incorrect".

return hints.

retumhints.

This research attempts to answer this question: in the case of learning ERD, can WIDS have better learning efficiency than other feedback types (i.e. WIVS, WOOS, and WDVS)?

REFERENCE  [I] R Azevedo and R M. Bernard, "A meta-analysis of the effects of feedback in computer-based instruction," Journal of Educational Computing Research, voLl3, no.2, pp.lll-127, 1995.

[2] T. H. Wang, "Web-based quiz-game-like fonnative assessment: Development and evaluation," Computers & Education, voL5 1, no.3, pp. 1247- 1263,2008.

[3] G. C. Sales, "Adapted and Adaptive Feedback in Technology-Based Instruction," In 1. V. Dempsey and G. C. Sales (Eds.), Interactive Instruction and Feedback Englewood, N.L Education Technology, 1993, pp. 159- 175.

[4] V J Shute and D. Z Rivera, "Adaptive Technologies," In J M.

Spector, M. D. Merrill, 1. V. Merrienboer, and M. P. Driscoll (Eds.).

Handbook of research on educational communications and technology 3rd Edition. Madison, NJ: Erlbaum, 2008, pp. 277-292.

[5] S. M Bai and S. M. Chen, S. M, "Automatically constructing concept maps based on fuzzy rules for adaptive learning systems," Expert Systems with Applications, vo1.35, no.l, ppAI-49, 2008.

[6] S. M. Chen and S. M. Bai, "Learning barriers diagnosis based on fuzzy rules for adaptive learning systems," Expert Systems with Applications, vo1.36, no.8, pp. 1 12 1 1- 1 1220, 2009.

[7] C. H. Lee, G. G. Lee, and Y. Leu, Application of Automatically Constructed Concept Map of Learning to Conceptual Diagnosis of e-Learning," Expert Systems with Applications, vo1.36, no.2, pp. 1675- 1684, 2009.

[8] D. L Anderson, R A. Magill, and H. Sekiya, "Motor learning as a function of KR schedule and characteristics of task-intrinsic feedback," Journal of Motor Behavior, voU3, no. I , pp.59--{)7, 200 1.

[9] G. Corbalan, F. Paas, and H. Cuypers, H, "Computer-based feedback in linear algebra: Effects on transfer perfonnance and motivation," Computers & Education, voL55, no.2, pp.692-703, 20 10.

[ 10] M. L. Schroth, 'The effects of delay of feedback on a delayed concept formation transfer task," Contemporary Educational Psychology, voU7, no.l, pp.78-82, 1992.

[II] E. H. Mory, "Feedback research revisited," In D. H. Jonassen (Ed.), Handbook of research on educational communications and technology.

Mahwah, NJ: Erlbaum, 2003, pp. 745-783.

[ 12] T. Buchanan, "The efficacy of a World-Wide Web mediated formative assessment," Journal of Computer Assisted Learning, voU6, no.3, pp. 193-200,2000.

[ 13] R Elmasri, and S. Navathe, Fundamentals of Database Systems 5nd Ed. Addison Wesley Inc, 2006.

[ 14] 1. Han, and M. Kamber, M, Data Mining: Concepts and Techniques.

San Mateo, CA: Kanfmann,200 1.

[IS] L. D. Paulson, Building Rich Web Applications with Ajax. IEEE Computer, voU8, no. 10, pp. 14- 17, 2005.

[ 16] C. W. Smullen and S. A Smullen, "An Experimental Study of AJAX Application Perfonnance," Journal of Software, voU, no.3, pp.30-37, 2008.

