Large-Scale IP Network Testbed Based on OS-level virtualization

Abstract?Large-scale IP network testbed playing an important role in network-centered information system?s development, testing, evaluation and training. The critical technologies of building large-scale IP network testbeds are discussed. The system building methods based on operate system level virtualization and software router is proposed. By constructing the prototypic system, the network performance and system performance are tested and analyzed in the end.

Keywords- network simulation OS-level virtualization virtual node; software router network performance analysis

I.  INTRODUCTION Network is critical infrastructure of today?s information  systems. Along with the increasing amount of users, the scale of network which supporting information systems is increasing correspondingly. The dependence on large-scale IP network is promoted in many aspects of information system development, such as researching, testing, evaluation, training and so on. In some sense, the scale of network incarnates the value of the information system [1]. However, it is hard to build real large-scale IP network for information system developing or testing because of the enormous costs in both finance and time. On the other hand, without sufficient test may cause unexpected aftereffect after deploying the systems [2]. In order to solve the problems, methods of building large-scale IP network testbeds which can emulate the needed target network on a spot of high performance network devices are proposed.

A good large-scale network testbed can support experimentation, testing and evaluation in many contexts, can work under different parameters and serve multiple users. The features are listed as follows:  (1) Supports large-scale network security test, can build safety, isolated and realistic network environment, which is more flexibility than traditional testbeds and can test information systems during design phase. Using the testbed, the network environment can build and rebuild rapidly, which satisfies different types of test.

(2) Provides typical, innovative, safety, controllable environment to test and evaluate large-scale information system. Compared with traditional methods, the testbed has advantages of the flexibility and economic efficiency.

(3) Supports research on future Internet architecture and new protocols, such as the scalability oriented architecture, the mobility-oriented architecture etc.



II. RELATED WORK Driven by urgently needed of the large-scale IP network  testbed, many research institutions in the world carried out several types of testbeds using different technologies according to different requirements. Generally speaking, there are three technologies are common in current research, namely node emulation, overlay network and OS-level virtualization. For example, Emulab[3] belongs to node emulation, Planetlab[4] and CORE belongs to the others respectively.

A. Node Emulation Large-scale IP network testbed built by node emulation is  one of the first practical mechanisms carried out by the researchers. The main idea of this technique is configuring the physical switch dynamically according to the requirements. The physical switches are full connected with each other. When user gives the topology of the network, system first checks the online physical devices and then assigns appropriate resources to the user. The Emulab of Utah university, Testbed@TWISc and DETER project are the famous large-scale IP network testbeds using node emulation technologies.

The node emulation testbeds select appropriate physical switches as target network nodes, so that the emulated network has advantages of fidelity, stability and performance. Using automatic configuration and implementation, the testbeds can improve the efficiency and save the costs. Nowadays, many research institutions extend the technology, combine network emulation and physical devices, and use GUI to configure parameters of the network, such as error model, delay, bandwidth, sequence of packets and buffer size etc. Users can customize the operation systems of the nodes, all the software can be implemented by remote client. Integrated with virtualization technologies, user can generate virtual test nodes and install different software to achieve the test goals.

B. Overlay Networks Overlay network is a virtual network based on physical  networks. It is composed of logic links between nodes distributing on the different autonomy domains of large-scale   DOI 10.1109/CLOUDCOM-ASIA.2013.67    DOI 10.1109/CLOUDCOM-ASIA.2013.67     IP networks, e.g. Internet. The overlay network is a logic network over the existing physical network, it is independent of the physical network architecture, namely, overlay network can run over any large-scale networks which are connected with each other using IP addresses. Typical overlay network architecture can be shown in Fig.1. The overlay network can emulate lots of link behaves of traffic jam, invalidation etc., support lots of applications with special QoS, such as bandwidth, delay, delay jitter and so on.

One of the most successful projects of the overlay mechanism is Planetlab.

Fig.1 Architecture of overlay network  Compared with other technologies, overlay networks have advantages of reliable and fault-tolerance, it offers agile network environment without changing the exiting architecture of physical network. Testbeds using overlay networks can be built so large to support cooperating of researchers all over the world, and different new applications can be deployed on the specific network which is designed for the specific application. Another advantage of the overlay network is compatibility with virtualizations technologies, virtual machines can connect to the overlay network easily and rapidly.

C. OS-level Virtualization Operation system level (OS-level) virtualization is a  lightweight and resource-friendly virtual technology. It can generate large numbers of network nodes in a single server with common resources. This technology supports live- running emulation, the target networks can be connected in real-time to physical networks and routers. The architecture of typical OS-level virtualization network testbed can be shown as Fig.2[5-7]. Given plenty of resources of servers and network devices, the testbed can generate large-scale and close to native IP networks with high fidelity. Currently, using the normal server and software routers, the OS-level virtualization testbed can generate lagre-scale IP networks up to 103 nodes [8]. The representational projects are CORE, CIVIC[9] etc.

Fig.2 Large-scale IP network based on virtualization  OS-level virtualization enables multiple isolated execution environments within a single operating system kernel. Deployed with software router, each environment can be used as a router. It has the best possible performance and density, and features of dynamic resource management.

However, the technology doesn?t allow to run different kernels from different operation systems at the same time in a same server[10,11]. The example technologies are FreeBSD Jail, Solaris Zones, OpenVZ and LXC etc.



III. OS-LEVEL VIRTUALIZATION BASED NETWORK TESTBED  Large-scale IP network testbeds based on OS-level virtualization has sufficient advantages of agility, scalability and reconfigurable, which are important characters in large- scale IP network emulation. In this paper, we proposed a methodology of OS-level virtualization based large-scale IP network testbed, which can emulate IP networks with large number of nodes and support multiplicity kinds of system tasks.

A. System Mechanism Large-scale IP network is composed of large number of  nodes and links, which are working together under TCP/IP protocols. Generally, nodes can be seen as special computer systems with multiple network interfaces and links are the relationship between nodes. There are node generation, link emulation and parameter configuration three steps of emulation system building. The main mechanism of node generation is constructing virtual environment based on OS- level virtualization.  In order to improve the network functions and performances, the environments are deployed with software router system such as Quagga and XORP.

Links are emulated by network interfaces and Linux Bridge.

From the point of users? view, it works as a separated physical router.

The critical part of the testbes is nodes running environments. Using OS-level virtualization, the testbed can generate lots of lightweight virtual software routers running environments with complete network functions. Virtual Environment (or Virtual Private Server) is an isolated program execution environment, it has its own set of processes, file system, users, network interfaces with IP       addresses, routing tables, firewall rules, etc. All the VEs share the same Linux kernel of the host system, and play different roles according to topologies. The architecture of OS-level virtualization is shown in Fig.3.

Fig.3. Architecture of OS-level virtualization  The large-scale IP network testbed compose of physical resources layer, operation system kernel layer, virtual abstract layer and resource container layer. Physical resources layer contains high performance servers connected to high speed networks. Operation system kernel layer offers basic system services, includes system calls, initial processes and file systems. Virtual abstract layer is critical part of the testbed, it realizes basic virtualization includes I/O, CPU, disk etc. Based on these, virtual abstract layer generates VEs for running protocols and virtual hardware of nodes, e.g.

virtual network interface cards. One of the most important tasks of the virtual abstract layer is to realize the mapping between the virtual ports and physical ports. Resource container layer is the top layer of the system, it contains all the network emulation elements with full functions as well as network performance test tools such as wireshark and tcpdump.

B. System Realization  The testbed is deployed in a cluster of high performance servers. All the servers are connected to a high speed programmable switch. The network divides into emulation network, control network and storage network. Emulation network offers the running environment for target networks generated by server cluster. Moreover, some physical devices can also connect to the network by different interfaces of emulation network. The physical devices such as firewalls can be configured dynamically during the test design period. Using the control network, system administrators can send commands to the testbed to generate nodes, configure the network topology and configure links and so on. All the tasks can be launched remotely by any workstation connect to the control network. The storage network offers the storage spaces for nodes, configure files, temporary files etc. The physical architecture of the system can be shown in Fig.4.

Fig.4 Physical Architecture of the System  System running and configure GUI is illustrated in Fig.5.

To generate network topology as well as nodes and links, users can upload configure files or just select network elements from the toolbar. The configuration includes routing protocols, bandwidth, delay, interface type etc. The emulated network can connect to physical devices and networks by binding virtual interface and physical interface of the servers. After configuration, administrator can start emulation by click the start button. Physical resources may connect to the network and cooperate with each other during the test.

Fig.5 System GUI

IV. PERFORMANCE ANALYSES  A. Function Examination Large-scale IP network testbed based on OS-level  virtualization can generate IP network with grate scale and high reality in laboratory according to the users? needs.

Network traffic of real network can connect to the emulated network by interface binding. Network application of up layer cannot distinguish real network and emulated network.

Namely, the testbed provides transparence traffic transmission to up layers.

In order to examine the function of the network, we use ?tranceroute/tracert? command line to trace the package transmitting of the emulated network, the result tally with the  HARDWARE CPU RAM Disk NIC  Kernel of host operation system  VPS/VE VPS/VE VPS/VE VPS/VE       expected route and the TTL value minus 1 after each hop.

We also use Zenmap to scan the topology of the target network. The scan results are equal to the designed topology.

All the function examinations show that, the testbed can generate emulated network with determined topology, IP address, route protocol(e.g.RIP/OSPF/BGP), interface, link bandwidth, delay et al.

To examine the fidelity of the emulated network, we configure the network parameters and measure the running data and compare with the reference data in real networks.

All the data are average in 10 times test. As shown in table  , the bandwidth verisimilitude of the emulation network come up to 96%.

TABLE I.  COMPARISON OF BANDWIDTH  Designed bandwidth(bps)  Measured bandwidth(bps)  Reference bandwidth(bps)  verisimilitude  64k 60.8k 62.2k 97.7% 256k 240.8k 245k 98.3% 512k 440k 438k 99.3% 10M 9.2M 9.28M 99.1%  100M 40M 41M 97.6% 1000M 576M 600M 96.0%   Table  displays the link delay of the emulated network.

we also take the average of 10 tests. The data show that, the delay is a little large than the real network with same settings.

We find out that, the delay in physical network is composed of sending delay and transmission delay, while in emulated network, the delay include CPU time, so that the number is larger than the former.

TABLE II.  COMPARISON OF DELAY  No. Setting Delay(ms) Measured Delay(ms) 1 unlimited 0.02 2 0.1 0.16 3 0.3 0.25 4 0.5 0.55 5 0.8 0.8 6 1 1.45 7 5 6 8 6 8 9 7 9  10 8 10  B. Performance Examination The performance of emulation network based on OS-  level virtualization includes the scale of emulated networks, the throughput of the network and the stability. The performance is affected by the system resources of servers.

We deploy the testbed in servers cluster with Intel Xeon E5- 2603 CPU(1.8GHz 10MB 1066MHz 4C), CentOS6.2 64bit operation system, 16G DDR3 ECC RAM. There are 400 nodes in single server.

Since the scale of the network can be reflected by the hops of the link, we measure and examine the changing of bandwidth and delay between port to port under TCP/UDP/FTP protocols. The results are illustrated in Fig.6 and Fig.7. As shown in Fig.6, the bandwidth of the links are decreasing when the hops increasing. In one hop real  network, the bandwidth up to 520Mbps, which is close to the physical interface actual speed. When the hop number is 100, the bandwidth is below 100Mbps, however, link with 100 hops is rarely in real world. Delay data in Fig.7, if use UDP, the delay from 0.05ms to 0.65ms according to the increasing of the hops. If use TCP protocol, delay increased rapidly when the hops come to 40.

Fig.6 Bandwidth Curve According to Hops   Fig.7 Delay Curve According to Hops

V. CONCLUSIONS Large-scale network testbed is an important  infrastructure in information system development. The top two targets of the testbed building are large scale and high fidelity. OS-level virtualize technology is an appropriate solution. The lightweight and isolation characters satisfy the two requirements. In this paper, we built a prototypic system and examine the network performance and system performance of the testbed.

