Research on Fuzzy Genetics-Based Rule Classifier in Intrusion Detection  System

Abstract   Intrusion detection technique has become the focus  in the area of network security research. Various soft computing approaches have been applied to the intrusion detection field. The paper incorporate fuzzy logic and genetic algorithms into the classifying system based on fuzzy association rule to extract both accurate and interpretable fuzzy IF-THEN rules from network traffic data for classification, and utilize genetic algorithms to optimize the classifier, The experiments and evaluations of the proposed method were performed with the KDD Cup 99 intrusion detection dataset. Results indicate the high detection accuracy for intrusion attacks and low false alarm rate of the reliable system.

1. Introduction  The security of computer network plays a strategic role in modern computer systems with the widespread use of network. Intrusion Detection Systems (IDS) are effective security tools, placing inside a protected network and looking for known or potential threats in network traffic and/or audit data recorded by hosts.

Basically, an IDS analyzes information about user?s behaviors from various sources such as audit trail, system table, and network usage data. The problem of intrusion detection has been studied extensively in computer security[1,2,3], and has received a lot of attention in machine learning and data mining[4].

The intrusion detection techniques can be divided into two groups according to the type of information they use: misuse detection and anomaly detection. Soft computing is an innovative approach to construct a computationally intelligent system which parallels the extraordinary ability of the human mind to reason and learn in an environment of uncertainty and imprecision[5].

Fuzzy logic, as a robust soft computing method, has demonstrated its ability in intrusion detection systems[6]. Moreover, fuzzy systems have several important features which make them suitable for intrusion detection[7]. Various methods have been suggested for automatic generation and adjustment of fuzzy rules without using the aid of human experts, the genetic fuzzy is one of the most successful approaches in this regard[8,9].

Genetic algorithm (GA)[10] has been successfully applied to solve many combinatorial optimization problems. The application of GA to the evolution of fuzzy rules can be found in Refs[11]. A simple GA is applied to generate and evolve the fuzzy classifiers that use complete expression tree and triangular membership function for the formulation of chromosome. To evaluate the fitness of individual solutions, the weighted sum of fitness values of multiple objective functions is proposed[12], where the proposed weights are user-defined and cannot be optimized dynamically for different cases.

The rest of the paper is as follows: Section 2 discusses fuzzy system and interpretability. Section 3   DOI 10.1109/ICICTA.2008.241     introduces the proposed work, Experiment results are reported in Section 4. Section 5 is conclusions.

2. Fuzzy system and interpretability  2.1. Fuzzy logic  Fuzzy logic has been a powerful tool for decision making to handle imprecise and uncertain data. In contrast to classical set, a fuzzy set is a set without crisp boundaries, the transition from ?belong to a set? to ?not belong to a set? is gradual. Membership function is utilized to reflect a degree of membership and indicated by a value in the range [0.0, 1.0].

There are two alternative ways to denote a fuzzy set  ( )| , (1)( )|  A  AX  x X i ii x x if X is discret  A x x if X is continuous  ?  ? ?  ?             ?? = ?                         ???  where ( )A x?  is called the membership function  which maps each object x from domain X to a continuous membership value between 0 and 1. We usually divide the universe into several fuzzy set covering by some confident consistent membership function, where x is denoted linguistic variable and those fuzzy set is denoted linguistic label. Fuzzy if-then rule is based on linguistic variable and linguistic label. An example conjunctive fuzzy rule  ,1 1 2 2R IF x is A and x is A and and x is A THEN class is cq q q n qn q :                     ?  where Rq is the qth fuzzy rule, x=(x1,x2,?,xn) is an n-dimensional object of X, Cq is the consequent class and corresponding antecedent Aqi is an antecedent fuzzy set. Then the firing strength ?Aq of a rule using the max-min composition is ?Aq=min(m1,m2,?,mn).

The interpretability issues of the genetic fuzzy rule based system is an important problem which must be solved. Redundant fuzzy rules and fuzzy sets, as well as inappropriate fuzzy set topology would be undesirably constructed if the interpretability criterion is not optimized. In order to improve the usage and  performance of fuzzy rule-based system, we can discern and guarantee the classification of fuzzy system from the following factors.

2.2.Completeness and distinguishability  Each fuzzy variable should be partitioned completely and distinguishingly. For each input variable X with n fuzzy set 1, 2, , nA A A? , if the following condition hold true, then the partitioning of fuzzy sets is complete.

, [0,1, ]; ( ) 0, [1, , ]i j ix U i m A x j n? ?   ?   ? ?? ? ,  Where U  is the universe of X. Completeness and distinguishability can be interpreted by the fuzzy similarity measure[7], which identifies (1) the similarity between two fuzzy sets for a fuzzy variable; (2) the similarity of a fuzzy set to the universal set U ; (3) the similarity of a fuzzy set to a singleton set. The similarity between two fuzzy sets A and B can be calculated using the following computationally efficient method:  [ ( ) ( )]1( , ) [ ( ) ( )]1  (2) A B  A B  m xi xiiSimilar A B m xi xii  ? ?  ? ?  ?? = ?? =  =  On a discrete universe { | 1,2, , }U x j mj= = ?  where ?  and ?  represent the minimum and maximum operations respectively. If Similar(A,B)  is larger than a given threshold ( )? , then the partitioning of those  two fuzzy set are not well distinguishable from each other resulting in a bad topology. Now it is necessary to merge the fuzzy set A and B, construct a new fuzzy set C. suppose A have the membership function  1 1 1(x; a , b , c )A? , B have the membership function 2 2 2(x; a , b , c )B? , then the resulting fuzzy set C with the  member function 3 3 3(x; a , b , c )c?  is defined from  merging A and B by 3 1 2  3 1 2,  3 1 2  (3)  m in( , ); * (1 ) * [0,1]  max( , );  a a a b b b c c c  ? ? ? = = + ? ? =  Where [0,1]? ? . If the similarity of a fuzzy set to the universal set ( ( ) 1, )UU x x X? =  ? ? is larger than an     upper threshold ( )U? or smaller than a lower threshold ( )s? , then we can remove it from the rule  base the similarity of a fuzzy set to a singleton set, the fuzzy set in the former case is very similar to the universal set, and in the latter case similar to a singleton set. Neither of these cases is desired to generate interpretable rule cases.

2.3.Consistency and compactness  If two or more rules with similar antecedents are triggered simultaneously, then their consequents should also be similar. In other words, fuzzy rules are consistent if they are not contradictive[10]. The traditional weight(fire-strength) i? of the ith rule can be defined as follows:  1 21 1 1( ) ( ) ( ) ( ), 1,2, ,i i ini A A Ax x x x i R? ? ? ?= ? ? ?   =? ?    (4) Where R is the number of fuzzy rules in the rule base. We can use the inclusion relation for indicating the degree of consistency, and introduce an inclusion factor which is given by  (1 ( )), 1,2, , Rk Ri  i uk x k R k i? ?  = ?   = ?? ? ,              (5)  Then the weight of the rule Ri with the inclusion factor can be updated as  ?i ( )i i x? ?= ? 1, 2, , Ri = ? .                (6)  The interpretability of fuzzy systems is depend on the compactness of fuzzy systems[13]. A compact fuzzy system indicates that it is easy to be comprehended. Compactness of fuzzy rules becomes more important when the system involves a large number of dimensions[14,15]. In order to achieve the effect compactness of fuzzy systems, there are three factors should be considered[16]: (1) a small number of fuzzy sets for each fuzzy variable, (2).a small number of fuzzy rules in rule base (3).a small number of conditions in the rule premise.

When a fuzzy set is not used by any fuzzy rule in the fuzzy rule base, it is necessary to remove the fuzzy set from the rule base.

3. Proposed algorithm  3. 1. Fuzzification of association rules  Association rules are used to represent the relationships between the given data items. It refers to the usage of items and tries to establish relationships.

Its form is given as , ,X Y c s?  where c represent confidence and s represent support.

Fuzzy rules of the form q qA C?  is similar to the  association rules, where the antecedent part is fuzzy but the consequent is not. Assume that Aq?  is the firing strength of the rule antecedent determined by max-min composition. Support of the fuzzy association rule can be computed as  ( ) ( ) /x classp cq Aq pq qs A C x m???? =              (7)  and the confidence of the fuzzy rule can be computed as  1( ) ( ) / ( )mpq q Aq pp p Aqcqc A C x xx class ? ?=? =? ??     (8)  where 1 21 2( ) min{ ( ), ( ), , ( )}Aq Aq Aq Aqnp p p pnx x x x? ? ? ?= ? .

Assuming that the N-dimensional pattern uses 5 linguistic variable for each dimension and including ?don?t care? condition, the total number of  combinations for a rule becomes (5 1) n+ , In order to  reduce the search space, a process of pre-screening would be carried out. The two criteria (support and confidence) are used in the pre-screening process.

3.2. Generation of fuzzy rules base  Step 1: generation of initial population. To generate initial generation, each fuzzy rule should be coded as a string. At first there are 6 symbols which are used for denoting the five linguistic values and ?don?t care?, 1=?small?, 2=?small ? medium?, 3=?medium?, 4=?medium?large?, 5=?large?, and # =?don?t care??  1 2 3   : If   is small and  is don't care and   is medium  &large and  is don't care, then  Class=  j  Ri x x x  x C      is coded as ?1#4#?, which is a chromosome organized     with some genes, each gene present a fuzzy set of membership function.

Calculate the compatibility grade of each training  pattern 1 2( , , , )p p p pnx x x x= ?  with the fuzzy if-then  rule Rj by the product operation as 1( ) ( ) ( ), 1,2 ,nRj p Aji p Ajn px x x p m? ? ?= ? ?   =? ?         (9)  where ( )Rj? ?  is the membership function of jiA .

Calculate the relative sum of compatibility grades of the training patterns for each class as follows:  ( ) ( ) / , 1, 2, ...., (10)  class h j Rj p class h xp class h  R x N h c? ? ? ?=   =  where we use relative sum of compatibility grades instead of traditional heuristic method of Ishibuchi and Nakashima (1999), because some of the classes are very similar to each other. Moreover the number of training patterns for each of the classes is significantly different.

Find the consequent class Cj that has the maximum  value of ( )classh jR?  among the c classes:  ( ) max{ ( ), , ( )} (11)1R R Rclass cj j class j class c j? ? ?=            ?  When a single class has the maximum value in the above equation(11), that class is used as the consequent class of the fuzzy if-then rule jR , note if  two or more classes have the same maximum value, the consequent class cannot be uniquely specified. In this case, we assign empty class to Cj and the zero certainty grade to CFj. When the consequent class Cj   is determined by equation (8), the certainty grade CFj   is specified as  1( ( ) ) / ( ) c classh jhclasscj jj  CF R R? ? ?=?= ?         (12)  where ( ) /( 1)class h jh cj R c? ?  ??= ? the consequent  class and the certainty grade for any combination of antecedent fuzzy sets can be specified by the proposed heuristic procedure.

Step 2: evaluate each of the fuzzy rules in the population. In the paper a novel fitness function is  presented as follows:  ( ) ( )Rjxp jxp classcjjfitness R NCP R???=  ? (13)  where 1, ( ) 0{0, j p  Rj pR x  x else  ? ?   =        and ( )jNCP R is the number  of correctly classified training patterns by Rj. This fitness means the power of a single rule which can classify a pattern correctly when we do not consider the existence of other rules. A pair of fuzzy if-then rules is selected from the current population to generate new fuzzy if-then rules for the next generation, each chromosome is in the current population is selected by the following selection probability:  min min( ( ) ( ))/ ( ( ) ( ))kRk sP fitness R fitness s fitness R fitness s?= ? ??   (14) where min( )fitness s  is the minimum fitness value of the fuzzy if-then rules in the rule set S. This procedure is iterated until a pre-specified number of pairs of fuzzy if-then rules are selected.

Step 3: crossover and mutation operation from each of the selected pairs of fuzzy if-then rules, two fuzzy if-then rules are generated by the uniform crossover for the antecedent fuzzy set of the generated fuzzy if-then rules .The uniform crossover and the random mutation method are presented .

Step 4: replacement. A certain percentage of fuzzy if-then rules in the current population are replaced with new fuzzy if-then rules generated by the crossover and mutation operations. The process of genetic fuzzy rules iterative learning can be stop with the total number of generation as a stopping criterion.

When a rule set S is generated, an input pattern  1 2( , , , )p p p pnx x x x= ?  is classified by a single winner  rule Rj in S, which is determined as follows[7]  ( ) max{ ( ) | }.cj p j j p j jx CF x CF R S? ?= ?              (15)  4. Experiments     The KDD Cup 99 dataset includes a set of 41 features derived from each connection and a label which specifies the status of connection records as either normal or specific attack type. These features had all forms of continuous, discrete, and symbolic, with significantly varying ranges falling in four categories[17]. KDD dataset is divided into training and testing record sets. Total number of connection records in the training dataset is about 5 million records. This is too large for our purpose; as such, only concise training dataset of KDD, known as 10% training dataset, was employed here.

In computer simulation, we have to consider the following assumption: population size Npop=100, replacement percentage Prep=20%. Crossover rate Pc=80%, Mutation rate Pm=5%, Termination condition (Maximum generation=100). Table 1 compare the different algorithm performances, just as shown in Table 1, the total performance of our algorithm is better than other algorithm.

Table 1. Different algorithms performances  Algorithm Detection rate False alarm rate  Our alghrithm 97.29 0.27  Ishibuchi[13] 95.02 0.24  EFRID[14] 98.15 7.0  5. Conclusions  In this work, a genetic fuzzy rule-based classifier has been designed by using fuzzy rule iterative learning algorithm in instruction detection system. To reduce the search space of fuzzy rule candidate, the population is initialized with the individuals randomly chosen among the pre-screened rules. The pre-screening process is completed by the usage of support and confidence. A new fitness function based on NCP[7] is presented in this paper, In fact the performance of the final classification which was constructed according to the new fitness function was compared to several classification algorithms. Result  showed that the presented algorithm was capable of increasing the detection rate and decreasing the false alarm rate simultaneously.

