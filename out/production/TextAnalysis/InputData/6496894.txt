Model Based Systems Engineering (MBSE) Applied to  Radio Aurora Explorer (RAX) CubeSat Mission

Abstract-Small satellites are more highly resource-constrained by mass, power, volume, delivery timelines, and financial cost relative to their larger counterparts. Small satellites are oper? ationally challenging because subsystem functions are coupled and constrained by the limited available commodities (e.g. data, energy, and access times to ground resources). Furthermore, additional operational complexities arise because small satellite components are physically integrated, which may yield thermal or radio frequency interference.

In this paper, we extend our initial Model Based Systems Engi? neering (MBSE) framework developed for a small satellite mis? sion by demonstrating the ability to model different behaviors and scenarios.

We integrate several simulation tools to execute SysML-based behavior models, including subsystem functions and internal states of the spacecraft. We demonstrate utility of this approach to drive the system analysis and design process. We demonstrate applicability of the simulation environment to capture realistic satellite operational scenarios, which include energy collection, the data acquisition, and downloading to ground stations.

The integrated modeling environment enables users to extract feasibility, performance, and robustness metrics. This enables visualization of both the physical states (e.g. position, attitude) and functional states (e.g. operating points of various subsys? terns) of the satellite for representative mission scenarios.

The modeling approach presented in this paper offers satellite designers and operators the opportunity to assess the feasibility of vehicle and network parameters, as well as the feasibility of operational schedules. This will enable future missions to benefit from using these models throughout the full design, test, and fly cycle. In particular, vehicle and network parameters and schedules can be verified prior to being implemented, during mission operations, and can also be updated in near real-time with operational performance feedback.

1 IEEEAC Paper #2170, Version I, Updated 29/01/2013.

TABLE OF CONTENTS  1 INTRODU C TION.................................. 1 2 MBSE AND S YsML ............................. 2 3 CUBESA TS....................................... 3 4 MODEL-BASED ENGINE ERING ENV1RONMENT . 5 5 RAX CUBESA T MISSJON ........................ 5 6 ANALYTI CAL MODEL AND R ESULTS............ 7 7 CONCLUSION .................................... 13  A CKNOWLEDG MENTS........................... 1 6 R EFER ENC ES.................................... 1 6 BIO GRAPHy ..................................... 1 7  1. INTRODUCTION  MBSE Applied to CubeSats  This paper extends the work reported in our 20 12  IEEE Aerospace conference paper [1], which reported on using Model Based Systems Engineering (MBSE) and the Systems Modeling Language (SysML) to model a standard CubeSat, and applied that model to an actual CubeSat, the Radio Aurora Explorer (RAX) mission [2], [3].

A CubeSat is a type of miniaturized satellite with a standard form factor based on standardized cubes with a size of 1 03 cm3 and weighing less than one kilogram. CubeSats typically consist of one to three cubes.

RAX is the first CubeSat funded by the National Science Foundation (NSF) [4]. It is a space weather mission designed to study plasma field-aligned irregularities in the ionosphere.

It has enabled undergraduate students, graduate researchers, engineers, and scientists to be involved in the design, build? ing, and operations of two spacecraft (RAX-l and RAX-2).

INcaSE MBSE Challenge Project  This project is a key part of the International Council on Systems Engineering (INCOSE) MBSE Challenge project.

The Challenge project was initiated at the January 2007 INCOSE International Workshop [5]. The MBSE Roadmap, Figure 1 ,  was created to define the high-level, long term vision for the maturation and acceptance of MBSE across academia and industry.

Several MBSE Challenge teams were established to promote MBSE, advance the state of practice, and share lessons learned related to a diverse range of:  ? MBSE applications  ? Model scope  ? Model quality and robustness  ? Modeling standards  ? MBSE process, methods, tools, and training  Space Systems Challenge Team  The INCOSE Space Systems Working Group (SSWG) estab? lished the Space Systems Challenge team. The Challenge team initially included aerospace students and professors from Massachusetts Institute of Technology and Georgia In? stitute of Technology. The initial focus was on the modeling of a hypothetical FireSat space system [6]. FireSat is a low Earth orbit (LEO) satellite for detecting, identifying, and monitoring forest fires. This representative, however non? realistic, textbook example was used in order to sidestep the challenges of working with International Traffic in Arms Regulations (lTAR) in an international collaboration. This space system is used as an example in the widely used and accepted Space Mission Analysis and Design (SMAD) textbook [6]. Much was learned from modeling FireSat.

Our follow-on CubeSat project was initiated in April 20 1 1  to model an actual space system, a standard CubeSat, with the RAX satellite being the point design.

The team now includes University of Michigan Aerospace graduate students and a departmental professor; the INCOSE SSWG, including engineers from NASAs Jet Propulsion Lab? oratory (JPL) and from modeling and simulation tool vendors InterCAX, Phoenix Integration and Analytical Graphics, In? corporated.

The collaborative environment includes a CubeSat - MBSE Google group, a MBSE Google documents collection, a No Magic Teamwork server for SysML modeling, and bi? weekly/weekly Web conferencing.

Advancement and Demonstration of MBSE State of Practice  Our Challenge team and project was created to assess, ad? vance, and demonstrate the application of MBSE to a realistic mission in the space systems domain.

We are developing a SysML modeling framework and Model Based Engineering Environment for developing CubeSat models. The models formally describe the RAX mission using a domain specific extension of SysML made especially for CubeSat modeling. This environment incorporates several commercial off-the-shelf (COTS) tools:   ? MagicDraw  ? Cameo Simulation Tool Kit  ? ParaMagic  ? Systems Tool Kit  ? PHX Model Center  ? MATLAB  We have built analysis models that analyzes the RAX system model to analyze:  ? Communication subsystem signal to noise ratio  ? Solar energy collection and subsystem power consumption  ? Activity flow including behaviors and interactions  2. MBSE AND SvsML MBSE is the formalized application of modeling to support system requirements, design, analysis, optimization, verifica? tion and validation, beginning in the conceptual design phase, continuing throughout development and into later life cycle phases including operations [7], [8] .

One of the goals of MBSE is to transform the application of systems engineering by integrating information commu? nication and analysis of systems engineering products. This goal is simply not possible in the current document-centric enterprise and thus we intend to replace it with a model-based approach.

Our application of MBSE uses SysML as the modeling language for formally describing and specifying the system.

SysML is a graphical modeling language for modeling sys? tems. It is used to specify, analyze, design, optimize, and verify systems and their hardware and software components.

SysML was developed by INCOSE and the Object Manage? ment Group (OMG) [9].

Figure 2 illustrates the SysML diagram types. A system is described in terms of:  ? Structural models illustrating the constituent elements of a system and their connections (using block diagrams).

? Behavioral activity and state models describing opera? tional behaviors.

? Parametrics definitions for operational constraints and acausal behaviors specified by values and/or equations.

? Requirements text based requirements in the model that can be traced to design, analysis, and verification elements.

SysML is used to formally specify all aspects of a system either directly or by interfacing with other models. It enables systems engineers to create and evolve models in an inte? grated, collaborative, and scalable environment. It enables building models that can be used in early design stages that can support specification and design updates. Using models to define, develop, and ultimately operate a system is known as "Develop With What You Fly With" (DWWYFW) [8] .

MBSE Capability Reduced cycle times System of systems interoperability  Design optimization across broad trade space Cross domain effects based analysis  T nstitutional ized MBSE across Academia/Industry  Extending Maturity and Capability  Distributed & secure model repositories crossing multiple domains  Defined MBSE theory, ontology, and formalisms  Well Defined MBSE  Architecture model integrated with Simulation, Analysis and Visualization  Refer to activities in the following areas:  Matured MBSE methods and metrics Integrated SystemlHW IS W models  Planning & Support Research  Ad Hoc MBSE Document Centric   Standards Development  Processes, Practices, & Methods Tools & Technology Enhancements Outreach, Training & Education  2020 2025  Figure 1. MBSE Roadmap  Figure 3 illustrates that the MBSE environment is an integra? tion of modeling tools and design tools along with viewing and report generation tools. This integration facilitates the analysis of alternative design models, and supports robust design optimization.

The ability to integrate, collaborate, and scale is centered around having a model repository. The repository is an information resource that is accessible through basic web? based technologies in addition to desktop applications. A variety of model editors can be integrated with such a repos? itory, enabling engineers of all disciplines to collaborate.

This integration is facilitated by the use of standard SysML approaches. Using Internet technologies to implement this approach provides a nearly unlimited ability to scale.

3. CUBESAT S CubeSats are a type of low-cost, standardized nanosatellite that consists of one or more units (Us). A 1 U is a cube 1 0  cm3 on a side and approximately 1 kg [ 1 0] .  These small satellites are typically launched as secondary payloads. They have en? abled the university community to design, build, and launch satellites using primarily COTS components. More recently, the worldwide community has adopted the CubeSat standard as a means of performing novel scientific, surveillance, and technology demonstration missions at significantly reduced cost and with short development timelines.

Current Approach to CubeSat Design  The current approach to design vehicles and perform oper? ational planning for CubeSat missions is largely intuition? based, and often relies on simplified trade-studies that do not explore the complete design space [6] .  Furthermore, ad-hoc and often unverified approaches are used to combine mUltiple simulation environments that often critical neglect elements of the mission dynamics. Designing the satellite at an early development stage and neglecting key operational parameters (because they are often unknown or not modeled)can be problematic because decisions made in early design stages can have a significant impact on mission operations. For example, if a battery is sized prior to performing operational simulations, it may be of insufficient capacity to sustain the satellite throughout extended eclipse durations and thus the spacecraft may not be able to satisfy mission operations req uirem ents.

MBSE Approach to CubeSat Design  Our 20 12  IEEE Aerospace conference paper delineated the CubeSat modeling objectives [ 1 ] .

The current modeling effort is well under way, and we have accomplished many of the early work objectives. Our overall plan is to develop a CubeSat model development kit for the CubeSat community that will include (some of which have already been accomplished):  ? A CubeSat meta-model describing CubeSat specific con? cepts and a modeling framework. The framework provides SysML structural and behavior models for the:    I SysML Diagram 'r  I I I I I Package Requirement Behavior Parametric Structure  Diagram Diagram Diagram Diagram Diagram  if if I I I I I Activity Sequence State Use Block Internal  Diagram Diagram Machine Case Definition Block  Diagram Diagram Diagram Diagram  Figure 2. SysML Diagram Types, ?Sanford Friedenthal, Elsevier Inc., 20 12. All Rights Reserved  ,.- .........., Simulation and ""'- --' Hardware and  Analysis Modeling I- Model I- Software Design Tools Repository Tools  .........

Automated View  and Report Generation Tools  Figure 3. Model-Based Engineering Environment  - Mission: * Mission elements which are systems that achieve the  mission objective  * Mission environment, e.g. space particles and fields as well as Earths atmosphere layers and magnetic fields  - Flight system  - Ground system  ? An example CubeSat model that existing and future teams can use as a template for describing and modelin1S thei? 0:-vn satellites, optimizing satellite design, and evaluatmg miSSIOn operations.

? The model will include:  - The entire satellite mission including flight system, ground system, and targets of interest  - Key satellite structural components, including systems,   subsystems, and components and their interfaces  - Key satellite system and subsystem behaviors  - Key satellite constraints and measures of effectiveness  The model will provide the techniques to interface C?be? Sat SysML models with a diversity of COTS modelmg, analysis, and visualization tools. These tools can be used to extract the necessary information to solve a problem or analyze a relevant part of the syste? a!1d then 5ntef?;rate the information/solution back into the mISSion speclficatlOn. For example, an optimization algorithm may have as inputs the satellite position and opportunities to collect e!1ergy and d?ta and output an operational schedule that can be mterfaced wIth the exectue SysML model.

The model will enable verification that design updates com? ply with mission requirements. The model al?o helps eft:ec? tively communicate design updates to all engmeers workmg on the mission.

Ultimately the models will be used by mission operators    to evaluate mission plans, generate schedules, and generate operational strategies that considering dynamic states such as satellite position, attitude, on-board energy, data, and thermal states. This is of paramount importance when responding to satellite component degradation and anomalies.

4. MODEL-BASED ENGINEERING ENVIRONMENT  A key capability of a so-called model-based engineering en? vironment is the integration of modeling applications, repos? itories, and analysis applications. Figure 3 illustrates such a representative environment, which enables us to analyze and optimize system performance. The simulation environment brings to life the models described in the previous section, where various aspects of the system model, such as paramet? rics, activities, and state machines, can be executed.

Conventional approaches for small spacecraft design and operational planning often consist of simulators that are "hacked" together in an ad-hoc manner, or require manual and time-consuming tasks to pass information between simu? lators. Unlike these approaches, our simulation environment supports the automated flow of information between simula? tors, enabling users to easily evaluate different design con? figurations or reconfigure the analysis for different mission scenarios in a rapid and convenient way.

Next we list and describe the modeling and analysis applica? tions in our MBSE environment that are used to develop and execute models:  ? MagicDraw? from No Magic is a graphical SysML mod? eling tool that enables the analysis and design of systems using standardized databases  ? Cameo Simulation Toolkit? (CST) from No Magic is an orchestrated heterogeneous simulation environment. CST in? tegrates tUML, SCXML, and the Java math engine ot provide a coordinated analysis of a SysML model. It enables different MBSE behavioral models such as SysML State Machines and Activity Diagrams to be executed within MagicDraw.

? STK? from Analytical Graphics, Incorporated (AGI) is a tool that supports high fidelity simulation and visualization of satellite behavior including orbital dynamics and satellite subsystems models for power, thermal, sensors, attitude con? trol, and telemetry.

? MATLAB? provides powerful numerical computing for evaluating functions, executing algorithms, and plotting re? sults. MATLAB can also interface with other optimization toolboxes and solvers.

? ParaMagic? is a SysML parametric solver and integra? tor for MagicDraw. It enables the execution of SysML parametric models and performing system trade studies through all stages of system development. ParaMagic can execute mathematical constraint relationships or wrap externally-defined models such as MATLAB/Simulink? , Mathematica?, or Excel. ParaMagic leverages the acausal nature of SysML parametric relationships to execute models in different causalities, i.e. change inputs and outputs on? the-fly. It can detect and solve complex SysML block and parametric model structures, such as complex aggregates, recursion, and property and constraint redefinitions in the model hierarchy. Equivalent tools Melody?, Solvea?,   and ParaSolver? are available for Rhapsody?, Enterprise Architect?, and Artisan Studio? , respectively.

? PHX ModelCenter ? allows users to create and exe? cute simulation workflows by integrating various types of simulation models, including Excel spreadsheets, STK sce? narios, and Matlab scripts. Once a simulation workflow is created, PHX ModelCenter executes the workflow, automat? ically transferring data between the simulators. Users are able to execute multi-run studies by employing a rich set of trade study algorithms, optimization tools, and reliability analysis. PHX ModelCenter can also be used to execute parametric models developed in MBSE tools like MagicDraw and Rhapsody, enabling the user to evaluate performance and verify requirements throughout the design process.

This diverse set of modeling and analysis applications cov? ers a broad range of capability for building and analyzing models with a particular emphasis on model and analysis integration. This integration capability is key to building a scalable model-based engineering environment that can sup? port the full life-cycle of MBSE on a spacecraft development program.

Several diverse tools were used to demonstrate how diverse tools could be integrated into a common framework. Note that a different or smaller set of simulation or calculation tools could be utilized to accomplish similar goals.

5. RAX CUBESAT MISSION Mission Description  RAX is a space weather mission designed to study plasma field-aligned irregularities in the ionosphere [2], [3 ] .  RAX performs experiments using a bi-static radar configuration which utilizes a high-powered ground-based radar station.

The primary station is PFISR, located in Poker Flat, Alaska, as shown in Figure 4. The ground-based radar sends a high- powered signal that reflects off the irregularities and are measured by RAX. Highly accurate on-board timing and position is provided by a GPS receiver, which are required to satisfy the mission requirements. Rough timing is provided by on-board clocks and rough position knowledge is provided by ground-based tracking systems, which is necessary for operations not related to science experiments.

RAX is passively magnetically aligned with the Earth's magnetic field using on-board fixed magnets, as shown in Figure 5. Spacecraft attitude oscillations are dampened with hysteresis material. This type of attitude control system enables RAX to have its experimental (which are also used for communication) antennas pointed towards the Earth when it passes over the experimental zone near the North Pole.

Furthermore, the GPS antenna was installed on the satellite face opposite the experimental antenna, is orientated towards the GPS constellation during experiments, when accurate timing and position is critical.

RAX-1 was launched in October of 20 1 0  and RAX-2 was launched in November of 20 1 1 . At the time of writing (January 20 13 )  RAX-2 is performing experiments and being operated on a daily basis from the command station at the University of Michigan in Ann Arbor and downloading to ground station partners located around the world.

Radio Aurora (wave scattering)  ?i:?}:;?je;a:?!?S f"_  " " " '" .., Il '" " :::I " c I  RAX  --------h l  Figure 4. Radio Aurora Explorer (RAX) CubeSat Mission Bistatic Radar Configuration  Figure 5. STK-generated schematic of RAX spacecraft with vectors pointing towards the experimental zone, Poker Flat, AK, the sun, and along the Earth's magnetic field.

bdd [Package 1 Earth Science Mission Domain { Earth Science Mission  . 1 ?block? r-------iEarth Science M ission Domain  I <block? I RAX launch System I  I <block. I !RAX Environment System I rl. <block. I 1 l?------ - RA- - I  x -M- iS- s-io-n--------?tr I <block. I I <block. I I <block. I IRAX Ops System I IRAX Flight System RAX Ground System  Figure 6. RAX Mission represented in a SysML Block Definition Diagram (BDD)     RAJ( Flight Logical System: RAJ( Flight Logical System  RAX Powe,: Power Collection and Control I I?? I a_max: J II - e_mln: J I  RAJ( Payload: Payload I I P-pay: wl ? fJlay : Data Rate I  RAXBue: BUI jP_bus: w]  J r _bus: Data Rate  RAJ( __ Dota lIII __ ment : Mluion Data Handling  ? I r-pr: Data Rate  RAJ( __ 109 : On-Soard DatIl Handling and Command Dispatcher I RAX Energy: On-board Energy I I RAJ( ADCS : AltItude Determlnatl :HI and Control I d_max : Real i j P adcs:w l RAX Data: On.t>oard Data I ? r ades : Data Rate  RAJ( Thermal: Thermal DetermlnoUon and Control I p therm: w i l r_therm : Data Rate ? II RAJ( Comma: Communication I I P_dl:w l I ,_di: Data Rate I II  Figure 7. RAX Mission key properties represented in a SysML Internal Block Diagram (IBD) with Subsystems and Interactions  RAX SysML Model The RAX satellite SysML models are based on the opera? tional satellite framework developed in Ref. [ 1 ] .  The SysML representations in this section provide a visual representation of the RAX model. They describe the system behavior and can be applied to evaluate the system using the simulations and the performance metrics.

Figure 6 shows the RAX Block Definition Diagram (BDD) consisting of the RAX Launch System, RAX Environment, and RAX Mission. The majority of this paper focuses on the RAX Mission. However; the RAX Launch System and RAX Environment are also important to capture the complete system.

The RAX Mission model consists of both logical and phys? ical models. The logical models consider the operations of the system while the physical models consider the physical components. The decomposition strategy is typically used by CubeSat designers to separate functionality into subsystems that correspond to logical concepts. For the CubeSat model, logical subsystem models describe the different concepts required to define the desired behavior of the system. The physical models specify the hardware and software that real? ize the logical design. For an example of this physical/logical model distinction, consider the Power subsystem. One of its logical functions is to store energy, while the physical battery hardware implements that functionality. Developing both logical and physical models allows the spacecraft sys? tems engineers to clearly define the difference between the functionality (using logical models) and the hardware that supports this functionality (using physical models).

The focus of this paper is on the operations of the RAX system, thus we focus on the logical models. As described in Ref. [ 1 ] , RAX has several functional subsystems, each supporting at least one critical part of the mission or other subsystems, which are described in Ref. [ 1 1 ] .  The Internal Block Diagram (IBD) shown in Figure 7 illustrates key prop? erties and interactions of the subsystems for the RAX Logical Flight System.

The Power Collection and Control subsystem is responsible   for acquiring energy by body-fixed solar panels, distributing power to support ongoing operations, and storing excess en? ergy for future use in an on-board battery. The On-board Data Handling and Command Dispatcher subsystem is responsible for dispatching commands, and managing the storage of on? board data. The Mission Data Handling subsystem is re? sponsible for processing, compressing, deleting, and filtering data for the satellite payload. The Communication subsystem receives commands from the ground command station in Ann Arbor and downloads data to its globally distributed ground station network. The Attitude Determination and Control, Thermal Determination and Control, Structures and Mechanism subsystems are self-explanatory, and are passive for the RAX satellites (i.e. are not active).

6. ANALYTICAL MODEL AND RE SULTS  We use the system model for a variety of analysis applica? tions, which include those listed below and are illustrated in Figure 8.

? Communication subsystem signal to noise ratio (SNR)  ? Power  ? Flight System Behavior  Communication Subsystem (SNR) Analysis  Due to the importance and challenges of designing operating a communication subsystem for a small satellite, we provide a detailed view of the communication subsystem in this section.

The SysML model presented in this section is based on the model in Ref. [ 1 1 ] .

The main purpose of the communication subsystem is to download data from the satellite to ground stations. In this example, we asswne there is a single ground station. To evaluate the communication subsystem, we are interested in analyzing the signal-to-noise ratio, SNR, of the communica? tion link between the satellite communication subsystem and the ground station.

The SNR must exceed some minimwn level, SNRmm, to    RAX System Model  SysML  Domain-specific modeling language for systems engineering  SysML Models, e.g.

- Block Definition Diagram  - Activity Diagram  - State Machine Diagram  RAX Power Analysis  - Power gathering  - Subsystem power usage  PHX ModelCenter  - Animation of SysML  parametric diagrams.

-Interface with STK and MATLAB  RAX Mission System  Activity Analysis  - Behavior and Interactions  Cameo Simulation Tool Kit - Animation of SysML state machines  and activity models  MATLAS  Excel  -Internal Block Diagram  - Sequence Diagram  - Parametric Diagram  RAX Comm Downlink Analysis  - Signal to noise ratio  - Downlink data rage  - Available power  ParaMagic  - Execution of SysML parametric models  -Integration of models in Mathematica,  MATLAB/Simulink and Excel in context  RAX Orbit Dynamics  parametric models  - Orbit and attitude.

- Data collection and ground station  access opportunities.

- Solar power collection.

Systems Tool Kit (STK) - Mission modeling,  analysis, and visualization  Figure 8. RAX Models and Simulations as related to various analysis/simulation tools  ensure a given error rate is achieved.

The SNR Analysis block in Figure 9 represents the commu? nication link that we are evaluating. The link equation used for the analysis uses design variables that belong to the com? munication subsystem (Communication block), network of ground stations (Ground Network block), atmosphere (Atmo? sphere block), and the satellite trajectory (Orbital Elements block).

Figure 1 0  shows the SysML parametric model for the SNR Analysis block. The parametric model shows the link equation (calcSNR constraint property) which relates the SNR analysis variable to the system design variables specific to the communication subsystem, ground stations, atmo? sphere, and satellite trajectory. The parametric model also shows the space loss equation (calcLS constraint property) that relates the space loss (Ls) to propagation path distance (Lp). These equations are represented in log form according to mdustry practice.

SysML parametrics are acausal in nature. The mathematical constraints in the parametric model are represented in a declarative manner, which implies that there are no fixed inputs and outputs specified at the parametric model level.

The same parametric model can be solved with different combinations of inputs and outputs such as y = kx and where we solve for y given x and k. Or x = y / k where we solve for x given y and k. We can solve the equations with different combination of dependent and independent variables.

ParaMagic leverages the SysML standard to execute paramet? ric models in the context of block instances, where each in? stance represents a specific design alternative or configuration or scenario in this case. ParaMagic can be used to execute a given parametric model for different causalities, such that input and output variables can be switched on-the-fly.

The intent of this analysis is to use the given parametric model in three different analysis scenarios:    bdd [Packagel Analysis [ SNR Analysis y  "block"  SNR Analysis constraints  calcLs : Compute L_s calcSNR : Compute SNR  values C : mls = 300000000 f: Hz = 437E6  j atm "block""  Atmosphere  values p_dl :W r_dl : bitls  -'"  radial antenna ???? ??--?  "block""  k : J/K = 1 "3806503E-23 SNR: dB  I j j j j  "block"" UHF Radio "block""  Antenna Orbital Elements (TLE) values  U:dB  values G_t :dBi values  ?  '- ------  "block""  net RAX Ground Network values  "block""  GS1 values  G_r:dBi  Figure 9. SysML Block Definition Diagram (BDD) illustrating the SNR Analysis model  ? Analysis Scenario 1 :  Given the data downl.oad rate (:dl) and the available power (Pdl), compute the maximum feasible SNR for the communication link.

? Analysis Scenario 2 :  Given the d?t? downloa? rate (rdl) and the desired SNR, compute the mmlmum feasible power required (Pdl).

? Analysis Scenario 3 :  Given the ?vailable ?ower (Pdl) and the desired SNR, compute the maximum feasible data down? load rate (Ldl) that can be achieved.

Figure 1 1  shows the Sys? instance st?ucture.(block defini?tion diagram) for an analYSIS of a spec?fic de?lgn configura? tion with specific values of the pr?pertles . . Figure 12  sho?s the ParaMagic browser for AnalYSIS Scenano 1 .  As shown m the figure all of the value properties have assigned values except fo; SNR and Ls. SNR is ?ssigned t.arget causal it;' as the value of interest for AnalYSIS Scenano 1 and Ls IS left with undefined causality which means it will be solved only if necessary to the solve for the sp?cific target valu?.

Figure 12  shows the solved value of SNR (m the box). In thiS example, SNRmin = 1 3  dB, which is acceptable and thererore the power allotted in the design is sufficient for the specified data download rate and acceptable error rate. The Update to SysML button at the right of the browser allows the user to update the solved values in response to the specific model and diagram.

Figure 1 3  shows the ParaMagic ?rowser for.Analysis Scenar?ios 2 and 3 (note the correspondmg SysML mstan.ce struc!Ure is not shown). It shows that SNR has been assigned given   causality and value 1 3 ,  equal to SNRmin? For Analysis Sce? nario 2 (LHS), the power required for download Pdl is com? puted given the minimum acceptable SNR and data download rate. For Analysis Scenario 3 (RR S), the data download rate Ldl is computed given the minimum acceptable SNR and available power.

Power Analysis  To capture realistic power s.cenari?s, we have de?eloped a simulation that consists of SImulatIOns and analYSIS compo? nents from STK, SysML, and MATLAB. PHX ModelCent?r acts as the glue that ties them together. We model dynamiC orbits, opportunities to collect energy a.nd d?wnload d?ta, realistic schedules. We use the model to mvestlgate the time history of the satellite states, including the on-board energy and data, and the amount of downloaded data.

We created a workflow for an example RAX mission sce? nario which includes data and energy collection, on-board oper?tions, and data download over .a specifie? ground st??tion. The simulation is executed dUring a speCified scenario time. The state dynamics are a function of performed 0l?era? tions, including nominal, payload, and download oper?tlOns, and available energy collection from the sun. We . lmple?ment the RAX-specific scenario by combing the MaglcDraw parametric model in Figure 14  with an orbital scenario from STK? and custom analysis MATLAB scripts using PHX ModelCenter, as shown in Figure 1 5 .

The simulation is a workflow that is created graphically by dragging and dropping reusable components and combining    par [Block] SNR Analysis [ SNR Analysis  I I I I I  radio: UHF Radio  L_': dB J r e5  comm : Communication  p_dl : W I r e4  r_dl : bit/s  -------- -  antenna: Antenna  r G_t: dBi I e3 e10  TI L I: dB U p_dl: W U r_dl: bills UG_t: dBi . constrainr  calcSNR : Compute SNR {SNR= 1 O*log( 1 O,p_dl)+G_t+G_r +L_'+L_s+L3-1 0*log(1 0,k)-1 O*log( 1 O,T _s)-1 O*log( 1 O,r_dln  r e9 I k: J/K rtJ k: J/K SNR : dB Le-----ll SNR: dB I n L3:dB  e6 e7 --- - -----  I ___ I-e? _  I I atm: Atmpsphere e2  -- - -----  r orb: Ort ital Elements (TLE) I net: RA) Ground Net ?ork  : r I I  gs1 GS1 I I I I I  SNR=1 0*log(1 0,p_dl)+G_t+G_r+L_'+L_s+L_a-1 ? *log(1 0,k)-1 0*log(1 O,T _s)-1 0*log(1 O,r_dl)  is the log lorm 01  r I I L_s : dBW I I L_p: km I  e13 I e14 L_s : dBW U L_? :  .

?mU  c . m/s ?constralnt . "r- ? c: m/s I calcLs: Compute L_s L II  {L s=20*log(1 0,(c/(4*pi*1 E3*L_p*I)))) - l:J?!.!j f : Hz I I: Hz  Figure 10. SysML parametric diagram showing the SNR Analysis link budget model  them using if-else branches, loops, and other f1owc?art-l?ke constructs (using PHX ModeICenter). The graphIcal lln? editor is used to specify what data is passed between applI? cations when we execute the model. Through a graphIcal user interface, accessible from within the MBSE tool or PHX ModelCenter, we execute the PHX ModelCenter model defined by a SysML parametric diagram.

This simulation environment enables us to evaluate design configurations, perform trade studies, and c?eck requireme?ts compliance. Analysis can also be automatIcally re-run wIth updated the parameter values.

We execute the power scenario in Figure 14  using .the sim?ulation workflow created in PHX ModelCenter, whIch auto? matically executes the workflow as many times as necessa!)" utilizing parallel computing resources as needed. When in? structed, each component is executed auto?atically; trans?er?ring information between components. USing the slmulatl?n environment described above, we can perform parametnc studies and use the multi-dimensional data visualization tools in PHX ModelCenter ?to interpret and analyze the results.

1 0  Flight System Behavior Analysis  CAMEO Simulation Toolkit (CST) was used to analyze the RAX behavior and interactions. Simulation in this con? text means to execute the model so that the RAX System interactions and behaviors can be studied. A model is a simplified representation of the actual system (in . this c?se RAX), thus creating a model that allows for useful SImulation and analysis is an iterative process.

CST enables the user to execute and animate state machines and activity models. The sequence of .steps to execute CST is to run a simulation, view the behavior by the model, and update the design appropriately if the behavior. nee?s to be modified. CST functionality also supports venficatlOn and validation of the system.

The Mission Operations System (MaS) consists of the hard? ware, software, procedures, and personnel that control the Flight System and supports analysis of the Flight System behavior. The MaS operation team generates sets of com? mands that are to be executed on-board the Flight System.

For RAX the On-Board Computer (aBC) is the main handler for processing commands and sending them to the relevant    bdd [Package] SNR Instance [ Instance 01 the SNR Analysis Y r --- - ---\Syst?m-D;sign EI;m;nt? -- "'  IAnalysis 1 'block" ? \ 'block" ? ?  _= SN= R=A= n= a=, ly,=",s= iS=:=S= N= R=A=, n= al?ys= iS=----__ ---I \ sNR Analysis.orb : Orbital Elements (TLE)  atm = sNR Analysis.atm L_p = "3336.0" c = "300000000" {unit = metrePerSecond} T L s - "" \ --comm = sNR Analysis.comm 1 = "437E6"{unit = hertz} L k = 1.3806503E-23 1 net = sNR Analysis.net ? . block"' ? orb = sNR Analysis.orb -+ sNR Analysis.atm : Atmosphere  'block"'  sNR Analysis.comm : Communication  antenna = sNR Analysis.comm.antenna p_dl = "1.0"{unit = watt} radio = sNR Analysis.comm.radio r_dl = "9600.0"  I . block"' ?  SNR = "" \ L3= "0.0" sNR Analysis.comm.radio : UHF Radio \ LJ = "-1.0" \  . block"' ? '-------------....... T sNR Analysis.net : RAX Ground Network -'I gs1 = sNR Analysis.net.gs1  'block" ? sNR Analysis.comm.antenna : Antenna  I?I El  I?I I?I  T_s = "325.0"{unit = kelvin}  I 'block" ?  sNR Analysis.net.gs1 : GS1  Figure 11 .  SysML BDD illustrating the instance structure setup for Scenario 1  OJ c OJ f OJk OJ atm OJ comm  OJ p_dl OJ f_dl  I?I [I] antenna I?I [I] radio OJ net OJ orb  ( Expand ) ( Collapse All )  m/s Hz J/K  .. " Atmosphere  ... (ommuntcation  W bitls  .. " Antenna  ... UHf Radio  ... RAX Ground Network  ... Orbital Elements (HE)  target given given given  given given  o Preserve Refs  Figure 12. ParaMagic Browser showing results for Analysis Scenario 1   437,000,000 o  9,600    ?? ro. ..... ?agidR) 17.0.2 -sNR.Analysls Name ?.? Typ? ! C;tuu.lity v"tues ?Analvli? _. SNR Analvsis  ?SNR; ?dB !livl<n 13 Ole m/s given 300,000,000 Olf ,",z given 437,000,000 Olk J/K given a  B ?atll1 _._ AltIIoSP he re.

OIL_a dB given 0  8 Olcornm _. Commun1cation Dlp_dl W target ? DI r_dl bit/s gMn 9, 6 0 8 C!I anl?nna_ ?? Amenna  C!lG_l dB! given 3 B 01 radkl _. UHF Radio  CilU dB given - 1 8 DIMe ... RAX Ground Net. ..

DIT_s K given 325 8 Dl gsl .?? GSl  C!lG_r dBi glvan 13 SDlorb ??? Orbital Elemenls .??  0Il..P km glv n 3,336 OILs dEW a.ndllary - 1 5 5 . 7 1 6  ---C upand , ( Collapse. All ) Solvl! ( Reset ) I , , :;;"'t: (SNR AnalySis)1 Scenario 2 !

N;une LouIOn ... R.el;uian Active.

ukls Y ? orb.1..?"ZO"log(lO,<;Jr4"pi"lOO ... ? C.1!c-_ Y SNR-lO"jog lO',eomm.p_dO+e;o ...

?f"\.,... ParaMagic(R) .11.0.2 - sNit Analysis Name - T'IK ? SNR Analysis __ . SNR Analysis  OISNR. dB Ole; m/s OJr Hrz Dlle UK  8 D1atm __ AlmMphere DI L-,iI dB  El Dlcomm __ . CMunWllCadon OJ p...:dl W OJ r_dl b 5  8 OJ aruenna_ ?. AlKeMa O1G_I d.B  El OJ radio ??? lIHF Radio []]LJ dB  S Dlnet _ RAX Ground NeL_ DlT_s  E1 OJ 9s1 OJG_r  S DJ orb DIU OIU  ( Expand )  K .?. GSI  dBi Orl:Jitll E.lements .? km d  ( Collapse All ) .

C;tunlity Values I giv n 13 given ?OO,OOO,OOO giVen 437,000,000 given 0  given 0  gJllen 1 target 194.719.7991 glven 3  given -1  9 en 325  glven 13  given 3,336 ancillary -15S.716  Solvl! ( Reset ) ... '" II root (SNR AnalYSIS )1 Scenario 3 I  Name lDCal On... Relation 'Active calcLs Y :? 0lb.L_s-.zO""Iog(lO.c:1(4"pi" 100 ... .? calc. Y , . 5NR; 10" tog 10,C1OmrT1.p_dlJ+c_  Figure 13. ParaMagic Browser showing results for Analysis Scenarios 2 and 3  Figure 14. Parametric Diagram showing RAX Power Scenario in MagicDraw     ,--f----------- ?I I l I I 7 l I ?-? f ! l I ? I ! t , I ,  I ! , I I i [ ,  I ! I I , I ! , I t__ _ __ _ ___ _ ___ _ __ ____ __ ___ ,  Figure 15. RAX Power Scenario in PHX ModelCenter integrated with STK and MATLAB as projected from the SysML model  subsystems for execution. This process was simulated in the RAX Model as described below.

Figure 1 6  shows the interface between the RAX Flight Sys? tem and the RAX Ground System. The sets of commands are uploaded to the Flight System and provide the .schedule, which includes when and how to perfonn an expenment and download data. For the RAX spacecraft, the experiment times are a function of when the spacecraft and target of interest have line-of-sight visibility and when the energetic activity in the ionosphere is predicted to exceed some minimum value.

The upload command consists of sending a signal from the control ground station, which traverses .th? Flight-?round Interface, and is (with successful transmissIOn) received by the OBC. The OBC has timing knowledge (with an on? board clock) and can dispatch the command information to the appropriate subsystems when a command approaches execution time.

Figure 1 7  shows the relevant states related to the Main Flight Computer . In this example, the Command Processing State has underlying behavior for dispatching commands.

Figure 1 8  depicts the behavior that the OBC performs ? order to analyze command files sent from the ground. In this snippet of the process, the OBC dete?mines what ?ubsyst?m is being affected and whether or not thIs subsystem IS entenng upload or download mode. Once the determination i? m?de, the OBC sends the final signal data to the CommunicatIOns Subsystem, shown in Figure 1 9.

In Figure 1 9, the states for the Communication Subsystem are shown. Nominally the system is in the beaconing mode, but once a signal is received from the Main Flight Computer that indicates when the Flight System is uploading or down? loading data, the Communication subsystem transitions to the relevant state.

Using CST for this analysis allows for the interfaces to the  1 3  different systems of the RAX Mission System to be analyzed and the actual information exchange between systems to be depicted and tested. The expected behavior as well as on? flight observed behavior can be compared to what the model predicts. If a model is develol?ed in .the early phase.s of !he Mission, these types of simulatIOns will allow for venficatlOn and validation of the mission software and interfaces through? out the development lifecycle.

7. CONCLUSION  Summary  The RAX model described in this paper demonstrates the utility and advantages of using a standards-based approach for modeling the system design and analysis using a "Develop With What You Fly With" (DWWYFW) philosophy. !he SysML BDD and IBD diagram struc?res ?re the fo?ndatlOns that establish the fundamental relatIOnshIps and mterfaces between the system components. Going beyond traditional static system representations, we add parametric diagraI?s to enable interactive analysis of the design based on established physical principles (e.g. communications link margin, power constraints). Furthermore, time evolution of our system allows the analysis of the dynamic nature of the various flight and ground system states. These states ?re defined in t?e S?ate Machine diagrams. Block representatIOn, parametenzatlOn, and state definition all serve as the glue that ties the system together, and provides the framework for integrating the design model with the analytical models.

The role of the systems engineer is to understand all parts of the system in order to describe how the complete system functions. Unlike traditional requirements-based approaches using declarative "shall statements", the fonnalized descrip? tive language of SysML is not ?nly human reada?le: but als.o allows for machines to read and mterpret the descnptlOn. This capability allows for the integration of seemingly ?ispa?ate analysis tools (e.g. Matlab, STK, Excel, Mathematlca) mto    i b d  !CubeSat Mission Eleme nt] RaJ( M is s ion ! mJ RaJ( Flight-Grou nd I ntera<:lion ]  RAX Ground System  after (1 s)  after (2s)  Preparing  after (1 s)  Data Received  after ( 1  s)  after  Engaged  Upl ink entry I Send Commands  ( 1  s)  Downl ink "???--------------------4---?.

entry I Receive Telemetry  RAX Flight System SysML State Machine D iagram ( ? RAX  O perational Mode J  Instrffident power  ! 1 Sdence Target in V19W.I Nomin a l  ?nce Target in View Ell pe rimenl I I l entry I Spacecrafl Nomlnal pow?? " I entry I Spacecra ft Performlng Experiment  j Gr<>  Statio of Vi  u nd  n out lOW  I  Ground StatiGn in VH!W [stored power  Meded powe,]  D o w n link I entry I Down load ing Data  J Ground Scienc& TargQt Out of VI8W Ground Station out Station lo of Vl8w  VIew  Completed  I I U p link ops j I entry I Up loading D a ta j ?  Figure 16. Composite diagram showing parts and behaviors of RAX Flight System  stm [State Machine] Main Flight Computer! ? Main Flight Computer? II Diagram name 1 Main Fl ight Computer II Documentation I Louise .Anderson@jpl .nasa.gov  ._?_---,?. I Command Processing lli--___ E_nd __ ---:?o?? - 'L?--------9F--------??----_? -  Download Data  Mission Data Download do / Flight Computer Send Data  Prepare for  Uplink  Mission Data Upl ink  Figure 17. Main Flight Computer State Machine     act [Activity] Dispatch Commands [ ? Dispatch Commands ]  , I I  Command  Command.Su bSystem O  = C o m m u n icat ions  I  Su bSystem?

Up l i nk/Down l i nk?

Command .L inkO=Up l ink  Command . LinkO=Down l i n k  Spacecraft Down load ing Data  Figure 18. Activity Diagram for the On-Board Computer (OBC) Dispatch Commands Behavior slm IState Machinel Communicationl ? Communication U  Spacecraft Downloading  Data  Spacecraft Nominal  High rate Download I  Beacon  Spacecraft Uploading  Data Spacecra  Nominal  Uptoad  I  Figure 19. Communication Subsystem State Machine  an integrated modeling environment.

We developed the MBSE simulation environment presented in this paper using a modular approach, which enabled easy growth of the model and multiple modelers to simultaneously contribute to the model. We first identified key framework elements, such as the subsystems, states, and their interac? tions. The framework is thus easily extended to include additional modeling elements, higher fidelity simulators, or more interactions between the components.

All modeling elements were introduced in the context of building or executing an analysis or simulation, which en? sured they were required and minimized the overall complex? ity of the model. We also integrated existing software code into the simulator. A variety of modelers with different levels of expertise (ranging from beginner to expert SysML user) contributed to the model. Beginners found the learning curve reasonable, as they were building off the work of the experts  1 5  and thus learning as they contributed. Beginners found working with SysML easier if they had experience with the CubeSat mission itself or other tools that were incorporated into the framework (e.g. STK, Matlab).

Lessons Learned: Challenges and Successes  Throughout the development of the models and simulations in this paper, we have experienced several lessons learned that are listed below:  ? We were able to extract time-dependent parameters in PHX ModelCenter using a specific post-processing script and vendor support. This was a great advantage for executing the dynamic power system scenario.

? We were able to set up and execute SNR analyses for the Communication subsystem for different scenarios using ParaMagic. This enabled us to set up the parametric model    once and execute it for different causalities, e.g. computing SNR given avai lab Ie power and data down load rate, or alterna? tively compute the required power given acceptable SNR and data download rate.

We also encountered several challenges, listed below:  ? Appropriate licenses are required for all simulation tools, which can be challenging, and required vendor support.

? Setting up the simulation environment requires several steps, including creating wrapper files, wrapping models, saving, and re-opening models in PHX ModelCenter and MagicDraw. Thus, creating and testing the integration of models can be time consuming and inefficient.

? It is currently difficult to de-bug Matlab code and STK scenarios after they have been wrapped into the PHX Model? Center model, which can be time-consuming and frustrating.

Future Work  Beyond the models, simulations, and analyses demonstrated in this paper, there are several additional ways to extend this work to more sophisticated analyses that can aid in both vehicle and mission operation design. Extensions include:  ? The execution of parametric models to compute different performance parameters, using state machine and activity diagram simulations.

? Wrapping STK models as parametric constraints and exe? cuting them using ParaMagic. This capability is in a proto? type stage right now.

? The simulations currently allow the model to be stepped through in time to aid in visualizing what is occurring with spacecraft behavior. In the future, extending this approach to include constraint-based solving would provide a more complete analysis. In particular, the different states can be constrained using constraint value properties specified by the constraint modeling. With both methods working together, a dynamic approach of changing input values could be used to evaluate the equations and to visualize the behavior of the spacecraft based on input values.

? The various simulations in this paper currently execute in? dividually. Future work will bring these simulations together such that broader simulations can be performed, for example the power and communication systems could be analyzed and optimized simultaneously.

? The ability to verify optimal scheduling algorithms in the simulation environment would be extremely useful, as there is currently no unified environment where this can be done efficiently. In particular, it would be helpful to be able to as? sess the robustness of operational schedules to perturbations in various input parameters.

? Beyond demonstrating mission scenarios and performing trade studies, the modeling and simulation environment in this paper may also be useful for combined vehicle and operations optimization. In particular, due to the ease of identifying inputs and outputs, it is possible to vary spe? cific parameters (assigned as inputs) and monitor how they impact other parameters (assigned as outputs). This type of analysis could be extremely useful for designing ground systems, sizing satellite components, etc. Furthermore, these types of trades can be useful for developing the simulation  1 6  system that will be used for later design trades and flight simulations, along the lines of "Develop With What You Fly With" (DWWYFW).

? Finally, comparing results from our simulation environ? ment based on our modeling framework to real data from operational missions such as RAX will provide a means to verify, validate, and improve the models.

ACKNOWLED GMENTS  We thank the entire University of Michigan and SRI Inter? national RAX Teams for their contributions. We also thank Analytical Graphics, Inc (AGI), Phoenix Integration, and InterCAX for their generous support of our work. We thank the Natural Sciences and Engineering Research Council of Canada (NSERC) and Zonta International for their support.

We would also like to thank Sandy Friedenthal for his invalu? able review, contributions, and guidance.

Parts of this research were carried out at the Jet PropUlsion Laboratory, California Institute of Technology, under a con? tract with the National Aeronautics and Space Administra- tioo.

REFEREN C E S  [ 1 ]  S .  Spangelo, D .  Kaslow, C .  Delp, B .  Cole, L .  Anderson, E. Fosse, B. Gilbert, L. Hartman, T. Kahn, and J. Cutler, "Applying model based systems engineering (mbse) to a standard cubesat," in IEEE Aerospace Conference, Big Sky, MT, March 20 12.

[2] J. Springmann, B. Kempke, J. Cutler, and H .  Bahcivan, "Initial Flight Results of the RAX-2 Satellite," in Pro? ceedings of the 26th Annual Small Satellite Conference, Logan, UT, August 20 12.

[3]  J. Cutler and H .  Bahcivan, "The Radio Aurora Explorer A Mission Overview" in AIAA Journal of Spacecraft and Rockets, Accepted 20 12.

[4] T. Moretto, "Cubesat Mission to Investigate Ionospheric Irregularities," in Space Weather : The Journal of Re? search and Applications, November 2008.

[5] I. C. on Systems Engineering (INCOSE), "MBSE initiative," January 2007. [Online] . Available: https:llconnect. incose.org/tbIMnT/mbseworkshop/  [6] J. Wertz and W. Larson, Space Mission Analysis and Design, 3rd ed. Microcosm Press, 1 999.

[7] I. C. on Systems Engineering (INCOSE), INCOSE Website. [Online] . Available: http://www. incose. org/ProductsPu bs/productsl sev is ion2020 .aspx  [8] D. Bindschadler, C. Delp, and M. McCullar, "Principles to Products: Toward Realizing MOS 2.0 ," in SpaceOps Conference, Stockholm, June 20 12.

[9] O. M. G. (OMG), OMG Website. [Online] . Available: http://www.omgsysm I.orgl  [ 1 0] K. Woellert, P. Ehrenfreund, A. J. Ricco, and H .  Hertzfeld, "Cubesats: Cost-effective science and tech? nology platforms for emerging and developing nations," Advances in Space Research, vol. 47, no. 4, pp. 663 - 684, 20 1 1 .

[ 1 1 ]  S. Spangelo and J. Cutler, "Optimization of single? satellite operational schedules towards enhanced commu? nication capacity," in AIAA Guidance, Navigation, and Control Conference, Minneapolis, MN, August 20 12.

BIOGRAPHY  Louise Anderson is an early career hire Software Systems Engineer at JP L. She 's currently on the Ops Revitalization team in Multimission Ground System and Ser? vices (MGSS) .  Louise is also currently Co-Lead of the Modeling Early Adopters group at JPL. She graduated in May 201 0 from the University of Colorado? Boulder with a degree in Aerospace En? gineering. Previously she worked at  the Laboratory for Atmospheric Space Physics in Boulder Colorado working as a Command Controller on the Mission Operations Team. She has worked on the mission ops team for Kepler, Sorce, AIM, Quikscat, and Ices at. Louise is a member of INCOSE, currently for INCOSE she is working on the Space Systems Working Group specifically on CubeSat Modeling. .

Manas Bajaj, PhD is the Co-Founder and Chief Systems Officer at InterCAX (www.lnterCAXcom) where he leads the development of software applications for MBSE. He has successfully led sev? eral government and industry-sponsored projects. Dr. Bajaj has been actively in? volved in the development, implementa? tion, and deployment of the OMG SysML standard and the ISO STEP AP21 0 stan?  dard for electronics. He is a Content Developer (au? thor) for the OMG Certified Systems Modeling Professional (OCSMP) certification program, and coaches organizations on SysML and MBSE. Dr. Bajajs research interests are in the realm of SysML and model-based systems engi? neering (MBSE), computer-aided design and engineering (CAD/CAE), advanced modeling and simulation methods, and open standards for product and systems lifecycle man? agement (PLMlSLM). He has authored several publications and won best paper awards. Dr. Bajaj earned his PhD (2008) and MS (2003) in Mechanical Engineering from the Georgia Institute of Technology, and B. Tech. (2001) in Ocean Engineering and Naval Architecture from the Indian Institute of Technology (lIT), Kharagpur, India. He is an INCOSE member and participates in the OMG and P DES Inc working groups.

Bjorn Cole is a systems engineer in the Mission Systems Concepts section of the Jet Propulsion Laboratory. His research interests are in the fields of design space exploration, visualization, multidisciplinary analysis and optimiza? tion, concept formulation, architectural design methods, technology planning, and more recently, model-based systems engineering. He is currently working  on pre-Phase A mission formulation. He earned his Ph.D.

and MS. degrees in Aerospace Engineering at the Georgia Institute of Technology and his B.s. in Aeronautics and Astro? nautics at the University of Washington.

1 7  Leo Cheng is currently a member of the Flight Control Team for the Spitzer Space Telescope. In addition to his real-time operations experience, Leo has extensive experience in the area of sci? ence planning and operations, including leading the development of the science plan for the Cassini mission 's Huygens probe descent and landing on the sur? face of Titan. Originally from the island  of Guam, Leo holds a B.S. Degree in Physics from Cal Poly Pomona University and a MS. Degree in physics from Rensselaer Polytechnic Institute.

James Cutler received a B.Sc. degree in Computer and Electrical Engineer? ing from Purdue University, and MS.

and Ph.D. degrees in Electrical Engi? neering from Stanford University. He is currently an assistant professor in the Aerospace Engineering Department at the University of Michigan. His research interests center on space systems a mul? tidisciplinary approach to enabling fu?  ture space capability with particular emphasis on novel, nanosatellite missions. He is developing next generation communication capability, design optimization techniques, and space weather measurement missions. His research lab is developing andflying multiple nanosatellites for NSF and NASA.

Christo per Delp is the Systems Ar? chitect for the Ops Revitalization task in MGSS. He is also a Systems Engi? neer on the Europa Habitability Mis? sion Model Based Systems Engineering Team. He is a founder of the Modeling Early Adopters grass roots Model Based Engineering working group. Previously he served as Flight Software Test En? gineer for MSL and Software Test En?  gineer for the Tracking, Telemetry, and Command End? to-End Data Services. He also leads the INCOSE Space Systems Working Group 's entry in the Model Based Sys? tems Engineering Grand Challenge. Additionally, he has performed research on software verification and tools for Service-Oriented Architecture in support of the Deep-space Information Services Architecture. Prior to coming to JPL, he worked as a software engineer performing DO-1 7 8b Level FAAflight qualified software development and testing on Joint Tactical Radio System (JT RS) and the T-55 Full Authority Digital Engine Controller (FADEC). Chris earned a Master of Science in Systems Engineering from the University of Arizona where he studied Model Based Systems Engineering, Simulation and Software Engineering. Previous to graduate studies, Chris performed his duties as a systems engineer on Missile Systems Verification and Validation.

Elyse Fosse is a Software Systems En? gineer for the Ops Revitalization task in MGSS She also develops ground system cost models for deep space and Earth missions. She is also a member of the Multimission Ground Data System Engi? neering group at the Jet Propulsion Lab? oratory. Her interests include software and systems architecture, applications of model-based system engineering, and  cost model implementation and analysis. Elyse is also a part of the INCOSE Space Systems Working Group 's entry into the Model Based Systems Engineering Grand Challenge. Elyse earned her MA. in Applied Mathematics from Claremont Graduate University and her B.S in Mathematics from the University of Massachusetts Amherst.

Dave Kaslow is Director, Product Data Management at Analytical Graphics, Inc. He has thirty-nine years of expe? rience in both the technical and man? agement aspects of developing ground mission capabilities. He is co-author of "Defining and Developing the Mission Operations System ", "Activity Plan? ning ", "FireSat " and "Spacecraft Fail? ures and Anomalies " in Cost-Effective  Space Mission Operations. He is also the author and co? author of papers for the International Council on Systems Engineering (INCOSE) Annual International Symposiums andfor the IEEE Aerospace Conference.

Grant Soremekun has a background in engineering design optimization and software development. He holds a B.S.

in aerospace engineering and an MS in engineering mechanics from Virginia Tech. For the past 9 years, Grant has worked for Phoenix Integration, a soft? ware company specializing in process integration, multidisciplinary analysis, and design optimization. During this  time, he has fulfilled several roles, including software devel? oper, application engineer, product manager, and is currently serving as the manager for Phoenix Integration western US sales . .

1 8  Sara Spangelo completed her Master 's in Aerospace Engineering at the Uni? versity of Michigan, where she worked on optimizing trajectories for energy? efficient periodic solar-powered UAVs.

She has been involved in the GPS and operational scheduling of the Radio Au? rora Explorer (RAX) CubeSat Mission from 2009-2012. She completed a Ph.D.

in Aerospace Engineering at the Uni?  versity of Michigan, focusing on developing models, sim? ulators, and optimization algorithms for scheduling small satellites and diverse heterogeneous ground networks to? wards enhanced communication capacity. She interned at JPL in 2012, where her work focused on integrating diverse simulation environments to enable Model-Based Systems En? gineering of small spacecraft.

Rose Yntema is the Applications Engi? neer at InterCAX (www.lnterCAXcom) where she applies MBSE techniques to complex systems in areas such as aerospace, energy, defense, and telecommunications. She is actively in? volved in the development of SysML parametric modeling and simulation software. Yntema earned her MS (2012) in Electrical and Computer En?  gineering from the Georgia Institute of Technology, and Sc.B.

(201 0) in Electrical Engineering from Brown University.

