Received February 5, 2017, accepted February 28, 2017, date of publication March 7, 2017, date of current version April 24, 2017.

ABSTRACT The identification of influential nodes is essential to research regarding network attacks, information dissemination, and epidemic spreading. Thus, techniques for identifying influential nodes in complex networks have been the subject of increasing attention. During recent decades, many methods have been proposed from various viewpoints, each with its own advantages and disadvantages. In this paper, an efficient algorithm is proposed for identifying influential nodes, using weighted formal concept analysis (WFCA), which is a typical computational intelligence technique. We call this a WFCA-based influential nodes identification algorithm. The basic idea is to quantify the importance of nodes viaWFCA. Specifically, this model converts the binary relationships between nodes in a given network into a knowledge hierarchy, and employs WFCA to aggregate the nodes in terms of their attributes. The more nodes aggregated, the more important each attribute becomes. WFCA not only works on undirected or directed networks, but is also applicable to attributed networks. To evaluate the performance of WFCA, we employ the SIR model to examine the spreading efficiency of each node, and compare the WFCA algorithm with PageRank, HITS, K-shell, H-index, eigenvector centrality, closeness centrality, and betweenness centrality on several real- world networks. Extensive experiments demonstrate that the WFCA algorithm ranks nodes effectively, and outperforms several state-of-the-art algorithms.

INDEX TERMS Influential nodes, weighted formal concept analysis, complex networks, SIR model.



I. INTRODUCTION During recent decades, complex network mining has been the subject of significant attention [1]?[3]. This can help in understanding complex network functions, as well as dis- covering the regularity of the dynamic evolution of complex networks and predicting their behavior [4]?[6]. In a complex network, each node may have a different status or role and the roles of different nodes in the structure and function may be largely different. Some nodes affect the structure and function of the network to a greater extent than others, and these are called influential nodes [7]. The study of influential nodes has important practical value. In the example of epidemic spread- ing, if we know the influential nodes in a given network, this  may help to predict the spread of the disease, and to control the disease before an epidemic outbreak occurs [8], [9]. In the criminal networks, the importance of ranking in favor of discriminating the ringleaders, backbone members and followers, quickly locate the leader of criminal gangs [10].

Identifying influential nodes in networks also can do much good to many applications such as effective vaccinations strategies [11], saving human lives [12], and the resolution of social dilemma [13], all these relying on proper identification of influential nodes. In fact, identifying influential nodes has played an important role in the analysis of social networks, biological networks, information networks, and transporta- tion systems [14]?[17]. Thus, techniques for identifying  VOLUME 5, 2017 2169-3536 2017 IEEE. Translations and content mining are permitted for academic research only.

Personal use is also permitted, but republication/redistribution requires IEEE permission.

See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  FIGURE 1. Toy example of WFCA. (a) A toy network G. (b) The formal context of the network G. (c) The concept lattices of the network G. WFCA clusters objects by attributes. For example, the concept C4 clusters concepts C7,C8,C10, and C11, which have the common attribute {3#}. The objects 1,2,4,5 are gathered to the concept C4. Therefore, the more objects that are aggregated, the more important the corresponding attribute becomes.

influential nodes in complex networks have been the sub- ject of increasing attention. So far, many methods for identifying influential nodes have been proposed, such as degree centrality [18], closeness centrality [19], between- nesscentrality [20], PageRank [21], Leader Rank [22], H-index [23], and HITS [24]. Although many algorithms have been proposed, these methods all have their own advan- tages and limitations. For example, degree centrality has a comparatively low time complexity, but has a low accuracy.

The PageRank algorithm is stable in scale-free networks, but it is sensitive to disturbances of randomnetworks [23]. Leader Rank performs well in directed complex networks, but cannot be applied in undirected complex networks.

In this paper, we propose a new method, called WFCA, to identify influential nodes in complex networks. We con- sider the problem of detecting influential nodes from the new viewpoint of weighted formal concept analysis. This takes into account the relationships of nodes in terms of the overall structure of the network, and converts binary relationships into a hierarchy structure. We will describe WFCA in Section 3, but first let us elaborate on the basic idea.

A. BASIC IDEAS Formal concept analysis (FCA) [25] provides a powerful approach to data mining and knowledge representation. The concept of FCA consists of objects and attributes. FCA uses binary object-attribute relations to construct a knowledge hierarchy that reflects the intrinsic relationships between objects and attributes. Here, we consider a given complex network as a formal context. Nodes of the complex network represent the objects and attributes of the formal context.

An edge between nodes denotes a binary relation, where an attribute belongs to an object. When building upon the con- cepts of FCA, the calculation of important nodes is involved in three major steps. First, we construct the adjacency matrix of a network as the formal context. Subsequently, we compute the concepts of the formal context. Finally, we calculate the weight of each node based on the concepts.

To further illustrate the basic idea, let us consider a toy network as an example. Here, Fig. 1(a) illustrates a  network G that contains five nodes and six edges.

Fig. 1(b) presents the formal context of the network G, and Fig. 1(c) shows the concept lattices of the formal context. The method of calculating the concept lattice will be described in Section 3.2. In Fig. 1(c), there are 12 concepts, denoted by C1 to C12. The numbers (1, 2, 3, 4, 5) represent objects, and (1#, 2#, 3#, 4#, 5#) denote attributes. Both of these represent the nodes (1, 2, 3, 4, 5). Formal concept analysis aggregates these objects by attributes to form a hierarchy, where C12 is located in the bottom, C7 ? C11 are located in the first layer, C2 ? C6 are located in the second layer, and C1 is located in the top layer. As the level increases, more objects are added, while the attributes gradually reduce. The hier- archy structure not only reflects the intrinsic links between nodes, but also characterizes the generalization-instantiation relationships between concepts. For example, because the concepts C7,C8,C10, and C11 have the common attribute {3#}, objects with this attribute will be gathered to form the concept C4. In Fig. 1(c), we can observe that the more objects are aggregated, the more important the corresponding attribute becomes. The weights of the attributes in each concept are obtained intuitively, by using the number of objects divided by the number of attributes.

B. CONTRIBUTIONS WFCA has several attractive benefits for identifying influen- tial nodes in complex networks, most importantly: ? A new viewpoint: We consider the problem of detect- ing influential nodes from a new viewpoint: weighted formal concept analysis. This takes into account global information regarding the network, and converts binary relationships between nodes in a network into a hierar- chy. This hierarchy not only reflects the intrinsic links between nodes, but also characterizes the generalization- instantiation relationships between concepts of nodes.

This allows the clustering of object nodes based on iden- tical attributes nodes. Therefore, the more objects that are aggregated, the more important the corresponding attribute becomes (see Fig. 1(c)).

? High performance: Compared with several representa- tives of influential node detection algorithms, theWFCA  3778 VOLUME 5, 2017    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  method is shown to be more effective (cf. Fig. 5-Fig. 7, Table5, Table6 ).

? Flexibility: Our method can not only be used in undi- rected or directed networks, but is also applicable to attributed networks.

The remainder of this paper is organized as follows. In the next section, we provide a brief overview of related work.

Section 3 describes themain idea ofWFCA, and then presents the algorithm in detail. Section 4 compares WFCA with several representative methods on eight real-world networks.

Finally, our conclusions are presented in Section 5.



II. RELATED WORK In recent years, many approaches have been proposed for identifying influential nodes (e.g., degree centrality [18], K-shell [26], closeness centrality [19], betweenness central- ity [20], eigenvector centrality [27], PageRank [21], Leader Rank [22], H-index [23], and HITS [24]). Here, we only pro- vide a brief survey regarding the identification of influential nodes.

A. STRUCTURE-BASED APPROACHES The influence of a node is significantly affected by the network topology. In fact, the majority of approaches for identifying influential nodes only consider structural infor- mation. Existing Structure-based measures can be divided into two categories: one is based on the neighborhood of each node (such as the degree centrality, K-shell and H-index methods), while the other is based on paths between nodes (such as closeness centrality and betweenness centrality).

Degree centrality characterizes nodes with larger numbers of neighbors as having a larger influence. Thus, it is the most simple index for characterizing influential nodes. However, although it is simple and easy to calculate, it suffers from poor accuracy, owing to the lack of consideration of the global network structure. K-shell determines the importance of a node according to its location in the network. Although it has a low time complexity, it is not suitable for some specific types of networks, such as rule or BA networks [28], and the sorting also results in coarse-graining. In contrast, closeness centrality and betweenness centrality both have high computational complexity, and so they are not suitable for application to large-scale networks.

B. EIGENVECTOR-BASED APPROACHES Methods of this type not only consider the number of neigh- boring nodes, but also take into account their influences (such as eigenvector centrality, PageRank, Leader Rank, and HITS). Eigenvector centrality can be efficiently calculated using a power iteration approach, but it may become trapped in a zero status, because of the presence of many nodes with- out in-degree [23]. PageRank is a famous ranking algorithm that is used in the Google search engine, and it is a variant of the eigenvector centrality method. It supposes that the importance of a web page is determined by both the quantity  TABLE 1. Example of a formal context.

and the quality of the pages linked to it. PageRank performs well in scale-free networks, and has been widely employed in many fields. However, it is sensitive to disturbances of ran- dom networks, and it exhibits topic drifts in special network structures [23]. The HITS algorithm considers each node in the network as performing two roles: authority and hub.

Similarly, HITS also exhibits a topic drift phenomenon [29].

Leader Rank performswell in directed complex networks, but cannot be applied in undirected complex networks.

In general, each algorithm has its own advantages and disadvantages. Effectively and efficiently identifying influ- ential nodes remains a non-trivial task. Here, we provide an effective method for identifying influential nodes, which can not only be applied to directed or undirected networks, but is also suitable for attributed networks.



III. IDENTIFICATION OF INFLUENTIAL NODES BASED ON WFCA A. PRELIMINARIES In this section, we first introduce some basic concepts and definitions concerning FCA. FCA is a powerful data anal- ysis technique, and was first proposed by Rudolf Wille in 1982 [25]. In the past several decades, FCA has been widely applied in software engineering [30], text processing [31], data mining [32], ontology engineering [33], and other fields [34], [35]. FCA considers entities that consist of objects and attributes, where objects have attributes, and attributes belong to objects. The following are some definitions relating to FCA.

Definition 1: A formal context is a triplet of sets K :=  (O,A, I ), where O is a set of objects, A is a set of attributes, and I ? O ? A is a binary relation between O and A. The object o is an element of the object set O, the attribute a is an element of the attribute set A, and oIa or (o, a) ? I indicates that the object o has the attribute a.

Table 1 presents a formal context. It can be represented as a  two-dimensional table (or matrix), where the rows represent objects and the columns are attributes. The cross cell of a row and column in the table represents the incidence relation I , and all relations between objects and attributes could be written in a table. In Table 1, the symbol ? indicates that an object has the corresponding attribute. For example, object 2 has attributes (a,b,c,d,f).

Definition 2: For a set T of objects from O, denoted as  T ? O, we define  T? = {a ? A|?o ? T , oIa}. (1)  VOLUME 5, 2017 3779    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  FIGURE 2. The concept lattice of the formal context in Table1.

Here, T? denotes the set of attributes shared by all of the objects in T . Similarly, we can define the set of objects shared by all of the attributes inP asP?. Here, for a setP of attributes from A, denoted as P ? A, we define  P? = {o ? O|?a ? P, oIa}. (2) Definition 3: A binary group (T ,P) is a formal concept of  a formal context K := (O,A, I ), with T ? O, P ? A, T? = P, and P? = T . We call T and P the extent and the intent of (T ,P), respectively. The collection of all formal concepts of a formal context K is denoted asB(O,A, I ).

For example, ({1, 2, 3, 4, 5, 6}, {b, f }), ({1, 2, 3, 4}, {b, c, f }), and ({4, 5}, {b, f , g}) are formal concepts in Table 1, while ({1, 2, 3, 4}, {b, c}) is not a formal concept. Although the result of {b, c}? is {1, 2, 3, 4}, the result of {1, 2, 3, 4}?  is {b, c, f }. Because {1, 2, 3, 4}? 6= {b, c}, it follows that ({1, 2, 3, 4}, {b, c}) is not a formal concept.

Proposition 4: Let K := (O,A, I ) be a formal context,  where T ,T1,T2 ? O are sets of objects and P,P1,P2 ? A are sets of attributes. Then, the following properties hold:  1) T1 ? T2 ? T ?  2 ? T ?  2) P1 ? P2 ? P  ?  2 ? P ?  3) T ? T??  4) P ? P??  5) T? = T???  6) P? = P???  7) T ? P? ? P ? T? ? T ? P ? I Definition 5: If (T1,P1) and (T2,P2) are two concepts of  a formal context K, where T1 ? T2 (which is equivalent to P2 ? P1 by property 1), then (T1,P1) is called a subconcept of (T2,P2), and (T2,P2) is called a superconcept of (T1,P1).

This can be denoted by (T1,P1) ? (T2,P2).

The relation ? is called a hierarchical order of concept, and represents a partial order. All of the concepts can be combined using hierarchical ordering, with the result being called a  FIGURE 3. A synthetic network consisting of 15 nodes and 22 edges.

TABLE 2. A formal context of Fig. 3. The rows (1, 2, . . . , 15) and columns (1#, 2#, . . . , 15#) represent the nodes (1, 2, . . . , 15).

concept lattice, which denoted by B(O,A, I ). A concept lattice can be represented by a Hasse diagram. For example, Fig. 2 presents the Hasse diagram of the concept lattice of Table 1. All of the concepts are listed as follows:  1) ({1, 2, 3, 4, 5, 6}, {b, f }) 2) ({4, 5}, {b, f , g}) 3) ({1, 2, 3, 4}, {b, c, f }) 4) ({3, 6}, {b, e, f }) 5) ({4}, {b, c, f , g}) 6) ({2}, {a, b, c, d, f }) 7) ({3}, {b, c, e, f }) 8) ({}, {a, b, c, d, e, f , g})  Definition 6: Let (O,A,W , I ) be a multi-valued formal context. This is composed of sets O,A,W and a ternary relation I (with I ? O? A?W . Then, (o, a,w) ? I and (o, a, v) ? I ? w = v,  where (o, a,w) ? I can be understood to mean that the attribute a of the object g has the value w. If w has n elements, then (O,A,W , I ) is called an n-valued context.

Definition 7: Let G = (V ,E) be a graph of a complex  network, where V is the set of nodes, E is the set of edges, e = {u, v} denotes an edge from between the nodes u and v, and e ? E .

3780 VOLUME 5, 2017    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  FIGURE 4. Concept lattice of Table 2.

TABLE 3. The list is ranked by WFCA and several other algorithms, where the last two columns are ranked by the SIR model.

B. WEIGHTED FORMAL CONCEPT ANALYSIS We consider the issue of detecting influential nodes from the perspective of WFCA. From the graph G, we can obtain the adjacency matrix. Let M = (mu,v) denote the adjacency matrix, and let |V | be the number of vertices of G. For example, let e be an edge linking the vertex u to the vertex v.

Then, if G is a directed graph, mu,v = 1 and mv,u = 0.

Otherwise, mu,v = 1 and mv,u = 1. Furthermore, if there is no edge between u and v, then mu,v = 0 and mv,u = 0.

We consider the adjacency matrix as a formal context K, where each row is an object and each column is an attribute.

Fig. 3 illustrates a synthetic network containing 15 nodes and 22 edges. Now, based on the concepts and definitions  of WFCA, we can rank the nodes by importance. The main idea of a node importance ranking using WFCA is to first cluster nodes in a hierarchical tree, and then to compute all concepts of the network. Finally, we calculate the weight of each node, and rank the nodes by weight.

Specifically, 1) Construct the adjacency matrix of the graph G (directed  or undirected).

2) Convert the adjacency matrix into a formal context.

3) Compute all of the concepts of the formal context.

4) Calculate the weight of each node based on the concepts  Wi = ?n  k=1 Oik Aik  .

5) Rank the weights of the nodes.

VOLUME 5, 2017 3781    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  Algorithm 1 WFCA Input:  G = (V ,E); Output:  Ranked nodes; 1: //Initialize the formal context K and weightW , where n  is the number of nodes.

2: if G is attributed network then 3: s? PlainScaling(K ); 4: else 5: s = n; 6: end if 7: K [n][s] = 0; 8: W [n] = 0; 9: //Construct a formal context K , which is a Boolean  matrix.

10: if G is an attributed network then 11: for each node v in V do 12: for each attribute a do 13: if attribute a belong to node v then 14: K [v][a] = 1; 15: end if 16: end for 17: end for 18: else 19: for each edge e = {u, v} ? E do 20: K [u][v] = 1; 21: if G is undirected then 22: K [v][u] = 1; 23: end if 24: end for 25: end if 26: // Compute all concepts C .

27: C ? In? Close(); 28: //Calculate the weight of each node.

29: for each concept Ci in C do 30: Oi = countobject(Ci); 31: Ai = countattribute(Ci); 32: for each attribute node j in Ci do 33: W [j]+ = OiAi ; 34: end for 35: end for 36: // Rank the weights of all nodes 37: return Rank(W );  To illustrate the procedure, we first construct the adjacency matrix for the network in Fig. 3, as shown in Table 2, where the rows (1, 2, . . . , 15) and the columns (1#, 2#, . . . , 15#) represent the nodes (1, 2, . . . , 15). Each cell value is set as 1 or 0, where 1 indicates that an edge exists between two nodes, and 0 signals the opposite.

Next, based on the Proposition 1 and Definition 4, we can calculate all of the concepts of the formal context, as illustrated in Section 3.3. Fig. 4 presents the Hasse diagram,  TABLE 4. Some statistical properties of eight real-world networks: node number |V |, edge number |E |, average degree ?k?, maximum degree kmax and clustering coefficient ?C?.

which contains all of the concepts of the formal context.

Finally, we can calculate the weight of each node based on the concepts, where the weight of node i is denoted by Wi.

Formally, let Ci be a set of concepts (Ci1, Ci2, . . . , Cin) where the attributes contain the node i. The attribute number of Ci1 is denoted as Ai1, and the object number of Ci1 is denoted by Oi1. Then, the weight of node i (Wi) is computed as follows:  Wi = n?  k=1  Oik Aik  . (3)  For example, we calculate the weight of node 1. Here, 1# can be considered as an attribute, and so 1# and the node 1 represent the same node. In the collection of all concepts of Fig. 4, there are three concepts con- taining the attribute 1#: ({3, 6}, {1#, }), ({6}, {1#, 3#}), and ({3}, {1#, 2#, 4#, 5#, 6#, 7#}). According to formula (3), we obtain W1 = 21 +  2 +  6 = 2.666. Similarly, we can also  calculate the weight of node 7#, as W7 = 51 + 6 +  2 +  2 +  2 +  4 +  3 +  4 +  3 = 9.333.

After calculating the weights of all nodes, we rank these weights. Table 3 presents the results for several algorithms, including PageRank, eigenvector centrality, closeness cen- trality, betweeness centrality, HITS, K-shell and H-index, which are all realized using Gephi and NetworkX. In Table 3, the nodes 3, 7, 8, and 9 are found to be more important than the others by all of the algorithms. PageRank and betweeness determined node 3 to be the most important node, but eigen- vector, closeness, HITS and H-index found the node 7 to be the most important. From Fig. 3, we can see that the degree of node 3 is six, and the degree of node 7 is five. Although node 3 has a larger degree than node 7, the neighborhood of node 3 looks less important than that of 7. This is because most of the neighboring nodes of node 3 are leaf nodes. However, those of node 7 are hub nodes. The WFCA method takes into account global information regarding the network, instead of local information, and identifies node 7 as themost influential node. The SIR model is employed to examine the spreading influence of each node. We set the infection rate of the SIR model with a probability of ? = 0.1, and run this 1000 times.

The experiment results for the SIR model are presented in the last two columns in Table 3. The rankings of the SIR model are basically the same as for theWFCAmethod, which  3782 VOLUME 5, 2017    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  FIGURE 5. The value of Kendall?s tau ? is obtained by comparing the ranking lists which generated by the eight algorithms and the ranking list generated by SIR model on eight real networks. The spreading probability ? varies from 0.01 to 0.10, and the results are obtained by averaging over 1000 independent runs. (a) Aviation. (b) Protein. (c) Blogs. (d) Powergrid. (e) Euroroad. (f) Friendships. (g) Ca-Astroph. (h) DBLP.

demonstrates that the WFCA approach identifies the influen- tial nodes effectively.We will evaluate the performance of the WFCA algorithm further for real-world complex networks in Section 4.

C. THE WFCA ALGORITHM In this section, we present theWFCA algorithm in detail. The WFCA algorithm consists of the following three main steps.

1) Formal context initialization and construction. First, we standardize the formal context K using the traditional method, plain scaling [36] (see Algorithm 1), to transform the multi-valued formal context into a one-valued formal context. For attributed networks, the formal context is denoted by K (G) = (V ,A, I ) (cf. Definition 1), where V represents the objects of the formal context, A represents the attributes, and I represents the binary relationships between objects and attributes. For non-attributed net- works,K is amodified adjacencymatrix, which is denoted by K (G) = (V ,V , I ), where the first and second V s represent the objects and attributes, respectively. Here, we use a two-dimensional array structure to represent the formal context.

2) Compute all concepts: C . Based on Definition 3, we calculate all of the concepts of a formal context using a combination of rows or columns. Over recent years, many efficient algorithms have been proposed for constructing the formal concept, including AddIntent [37], FastAddIn- tent [38], and FCbO [39]. Here, we employ the In-Close approach [40], which is an incremental algorithm that uses a recursion to generate the combinations of attributes or objects in lexicographical sequences, while avoiding repeated generations of a concept.

3) Node weight calculation. Building upon the obtained concepts, we compute the weights of nodes according to the formula 3. First, we calculate the sub-weight (OiAi )  of each attribute of every concept. Finally, we obtain the total weight of each attribute by summing over all sub-weights.

D. RUNTIME COMPLEXITY InWFCA algorithm, one of the important work is to compute the concepts of the formal context. However, applying FCA method to large formal context could bring many challenges, because the concepts can grow exponentially in the worst case and calculating all the concepts is an NP-complete problem [41]. The high computational complexity is actually the main weak point of FCA. However, we do not need to generate all the concept lattices in the actual calculation.

So, we can use the lexicographic approach for implicitly searching, prune the recursion and avoid generating a concept repetitively. The time complexity of each step of WFCA is estimated below, where n is the number of vertices, L is the number of all concepts, and |a| is the number of attribute. The time complexity of WFCA algorithm is mainly composed of three parts, and we give our main argument about asymptotic time complexity as follows.

1) The complexity of formal context initialization and construction. The function PlainScaling(K ) [36] stan- dardize the formal context K and the time complexity is O(n|a|). The construction of formal context is imple- mented in two loops. So, in attributed network the time complexity is O(n|a|). Otherwise, the time complexity is O(n2).

2) The complexity of computing concepts. The concepts are calculated by In-Close [40]method and the complexity is O(n2L).

3) The complexity of calculating node weight. To calculate the node weight, there are two loops. The times of the first loop is the length L of the concept lattice, and that of second loop is the number of attribute whose the max  VOLUME 5, 2017 3783    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  TABLE 5. The ranking list is generated by the eight algorithms. Owing to space limitations, we only show the top-10 nodes of two networks, including one directed network and one undirected network, where K-s, H-i denotes K-shell and H-index, respectively. (a) Aviation. (b) Euroroad.

FIGURE 6. The propagation influence of the ranking lists is generated by the eight algorithms, F(t) denotes the number of infected and recovered nodes at time t (t=500), and ranked index represents the order of ranking list. (a) Aviation. (b) Protein. (c) Blogs. (d) Powergrid. (e) Euroroad. (f) Friendships.

(g) Ca-Astroph. (h) DBLP.

value is n. So, the complexity of calculating node weight is O(nL).

In summary, the time complexity of WFCA algorithm is the sum of the three parts, namely O(n2 + n2L + nL).

As we know, n2 ? n2L, nL ? n2L. Therefore, the time complexity is O(n2L). We can see, the time complexity of WFCA is not very low, but its accu- racy is better than the other algorithms(cf. Fig. 5-7).

3784 VOLUME 5, 2017    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  TABLE 6. The influences F(t) is obtained by top-10 different nodes of ranking lists between WFCA and other algorithms in Aviation network.

In future work, we plan to extend WFCA as a paralleling method.



IV. EXPERIMENTAL EVALUATION A. DATA DESCRIPTION In this section, we evaluate WFCA on eight representative real-world networks selected from distinct fields, includ- ing one transportation network (Aviation), one biological network (Protein), one information network (Blogs), two infrastructure networks (Powergird and Euroroad), one social network (Friendships), two collaboration networks (Ca-AstroPh and DBLP). In brief, Aviation is an air traffic control network of USA?s FAA (Federal Aviation Adminis- tration) and this is a directed network. Protein is a directed network of interactions between proteins in Humans. Our Blogs is a directed network which contains front-page hyper- links between blogs in the context of the 2004 US election.

Our Powergird network contains information about the power grid of the Western States of America and this is undi- rected. Euroroad is the international E-road undirected net- work which located mostly in Europe. Our Friendships is an undirected network which contains friendships between users of the website hamsterster.com. Ca-AstroPh is a collaboration graph of authors of scientific papers from the arXiv?s Astro- physics (astro-ph) section. And DBLP is an attributed net- work of computer science bibliography. To extensively study the performance of our algorithm, we compare WFCA with several representative influential node detection algorithms, namely PageRank (PR), HITS, eigenvector centrality (EC), K-shell, H-index, closeness centrality (CC), and between- ness centrality (BC). The statistics of the eight networks datasets are presented in Table 4, and they are all publicly  available from KONECT (http://konect.uni-koblenz.de/) and the DBLP dataset (http://dblp.uni-trier.de/).

B. MEASUREMENT In this paper, we employ the SIR model [42] to investigate the spreading influences of ranked nodes. There are three components to such a system: (I) Susceptible (S) denotes the susceptible individuals who are not yet infected; (II) Infected (I) represents the infected individuals, who may spread the disease to susceptible individuals; (III) Recovered (R) stands for recovered individuals, who can never be infected again.

The SIRmodel begins with one or more seed nodes. Then, the seed nodes infect adjacent nodes with a probability of ?. Next, the infected nodes recover with a probability of ?. Finally, the infected and recovered nodes are used to calculate the spreading influences of seed nodes. Each loop of spreading is regarded as a time step t . F(t) denotes the number of infected and recovered nodes at time t , which is an indicator of the node importance. Obviously, F(t) will gradually converge as the time t evolves, trending towards to a certain level.

To evaluate the performances of different influential node identification algorithms, Kendall [43] ? is introduced to measure the correlation of the node spreading influence with the eight methods. Kendall?s tau as a rank correlation coef- ficient is usually used to measure the correlation between two ranking list. We assume that two sequences associated with the same number of nodes n, X = (x1, x2, . . . , xn) and Y = (y1, y2, . . . , yn). Any pair of two-tuples (xi, yi) and (xj, yj) (i 6= j) are said to be concordant if the ranks for both elements agree, that is, if both xi > xj and yi > yj or if both xi < xj and yi < yj. They are said to be discordant if xi > xj and yi < yj or if xi < xj and yi > yj. If xi = xj or yi = yj, the  VOLUME 5, 2017 3785    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  FIGURE 7. The propagation influence of the top-10 different nodes of ranking lists between WFCA and other algorithms, F(t) denotes the number of infected and recovered nodes at time t, and t varies from 1 to 25. Results are obtained by averaging over 1000 implementations and the spreading probability ? = 0.1. (a) Aviation. (b) Protein.

(c) Blogs. (d) Powergrid. (e) Euroroad. (f) Friendships. (g) Ca-Astroph. (h) DBLP.

3786 VOLUME 5, 2017    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  pair is neither concordant nor discordant. The Kendall?s tau coefficient is defined as  ? (X ,Y ) = nc ? nd  0.5n(n? 1) (4)  In which nc and nd represent the number of concordant and discordant pairs respectively. One can note that, ? ? [?1, 1] is positively related to concordant of the ranking lists. The higher ? value is, the more accurate the ranking list the method could generate.

C. PERFORMANCE EVALUATION In this experiment, to better distinguish the importance of nodes, we use relatively small values of ? in SIR model, namely ? ? [0.01, 0.1]. Because with a large ?, the spread- ing would cover almost all the network [26]. Fig. 5 shows Kendall?s ? of the WFCA method where the ranking lists are generated by the PR, HITS, EC, K-shell, H-index, CC and BC. As shown in Fig. 5c, the Kendall?s ? for the WFCA is between 0.8 and 0.9 for ? ? [0.01, 0.1], indicating that the ranking lists generated by the WFCA and the real SIR spreading process are basically identical to each other. From Fig. 5, we can see that there are different performances for the different algorithms and the WFCA method performs well on different types of networks. For instance, for directed networks (Aviation, Protein andBlogs) and undirect networks (Powergrid, Euroroad and Ca-AstroPh) WFCA performs the best. For the Friendships network, EC and HITS have the best performance, and the WFCA also has a better effect than the others. In DBLP networks, the EC algorithm achieves the best performance, the WFCA method still provides a com- paratively good performance and performs better than other algorithms. Note that the performances of K-shell, BC and CC are not good in Aviation, Protein, Blogs and Powergrid networks. Because, the K-shell algorithm is coarse-grained on the network division, and the nodes of each layer are seen as equally important, but in fact, they are not. Therefore, for the network with small number of layers, the effect is relatively poor. On the contrary, for multiple layers network, the effect is better. For the BC method, there are many nodes whose values are the same, because, these nodes have the same number of shortest paths through them. And the cc algorithm also has the same problem. The performance of H-index method is also not good in directed networks (Avia- tion, Protein and Blogs). As you can see, WFCA performs well not only in undirected networks, but also in directed networks.

To further compares the propagation performance of the algorithms, we investigate the spreading influences of ranked nodes in SIR model. Without loss of generality, we set the infection probability ? = 0.1, recovery probability ? = 1 [44], [45], and time step t = 500. First, we compute the influence of each node using the various algorithms, and rank them in descending order. Table 5 presents the top-L ranked nodes. Owing to space limitations, we only display the top- 10 nodes of two networks, including one directed network  Aviation and one undirected network Euroroad. We can see that most nodes of top-10 of WFCA are presented in other algorithms, so, the WFCA method has better accuracy than other algorithms. For further evaluation, each ranked node is considered as the seed node (with only one seed node for each run). Finally, we calculate the number of infected nodes for each seed node by averaging over 1000 implementations.

Fig. 6 illustrates the average numbers of infected nodes ranked by the eight different algorithms. A good algorithm should result in a downward slope from left to right; that is, the number of infected nodes should decrease as L increases. This is because the more important a node is, the more infected nodes there are. Thus, this node ranks higher.

In the Aviation, Protein, Blogs, Powergrid, Euroroad and aCa-AstroPh networks, WFCA performs the best among all eight algorithms. For the Friendships and DBLP networks, although EC achieves the best performance, WFCA still provides a comparatively good performance. Note that the WFCA method can not only rank the nodes by considering the topological structure of a network, but it can also rank nodes by considering the attributes of nodes (see Fig. 6h).

From the tables and figures, we observe thatWFCA delivers a superior spreading effect compared with the other algorithms.

Furthermore, we compare the influence of the top-10 nodes that are discriminatively selected by WFCA and other algo- rithms. All top-10 different nodes are used as seed nodes and the time step t is set ranging from 1 to 25. Table 6 further presents the propagation influence of top-10 different nodes in the Aviation network. We can observe that the number of accumulative infected nodes F(t) increases as the time step t increases, and eventually obtains a steady value after several time points. Since there are 10 seed nodes, the propagation of most networks reaches a steady state at the time step t = 15 and we can clearly investigate the spread effect ofWFCA and other algorithms. In addition, Fig. 7 illustrates the influences of the different top-10 nodes in eight networks. Note that the differences between two approaches can be distinguished effectively by investigating the effects of discriminative nodes of the two ranking lists. Fig. 7 shows that the WFCA method has a good spreading efficiency of top-10 differ- ent nodes. Specifically, WFCA has the best performance on the networks of Aviation, Protein, Powergrid, Euroroad and Ca-Astroph. In Friendships and DBLP networks, EC and HITS have the best propagation effect, and WFCA also has better spreading influence than other algorithms.



V. CONCLUSION In this paper, we have considered the problem of detecting influential nodes based on weighted formal concept analy- sis. This method considers global information regarding a given network, and converts binary relationships between nodes in the network into a hierarchy. Then, nodes are aggre- gated according to their attributes, to rank node importance.

To evaluate the efficiency of WFCA, we conducted exper- iments on eight real networks, and compared WFCA with several representative influential node detection algorithms.

VOLUME 5, 2017 3787    Z. Sun et al.: Identifying Influential Nodes in Complex Networks Based on WFCA  These experiments further demonstrated the superiority of WFCA over state-of-the-art algorithms. In future work, we plan to extend WFCA as a paralleling method.

