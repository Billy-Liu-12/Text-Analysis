Multi-Objective Genetic Algorithm Based Approach for Optimizing  Fuzzy Sequential Patterns

Abstract This paper introduces the optimized sequential pattern problem and presents a novel approach to find such patterns.

All the methods described in the literature to optimize association rules employ a single objective measure, such as optimized confidence or optimized support. In this study, we propose a novel multi-objective Genetic Algorithm (GA) based optimization method for optimizing quantitative sequential patterns. The objective measures of are support, confidence and a parameter related to the total number of fuzzy sets in the sequence. Experimental results on a synthetic database demonstrate the effectiveness and applicability of the proposed method.

1. Introduction  Mining sequential patterns in large databases has become an important data mining task with broad applications, including business analysis, web mining, security and bio-sequences analysis. This approach was first introduced by Agrawal and Srikant [1] for market basket analysis and can be stated as follows: a sequential pattern is an expression YX ? , where X and Y are disjoint sets of items. This expression may be interpreted as: if a customer buys X item/items, then he/she will buy Y item/items with a high probability. First efforts on mining sequential patterns focused on binary valued attributes. While some of them concentrate on mining traversal patterns in web surfing [2, 3], the others involve shopping sequences in malls, traveling sequences in a tour, plan failure predictions [4] and genetic sequences [5]. However, the importance of attributes with quantitative values was later realized because most of transactional data that exist in real world applications include quantitative attributes. As a result the trend to study has slide towards this direction [6, 7]. The classic algorithm proposed for mining quantitative association or sequential rules discretizes or reduces the domain into interval or categorical [8].

A trend to deal with the problem of sharp boundary is based on fuzzy theory. For this purpose, some work has been recently done on the use of fuzzy sets in discovering sequential patterns for quantitative attributes [6, 7]. The  patterns obtained by this way are called fuzzy sequential patterns. If meaningful linguistic terms are assigned to fuzzy sets, the fuzzy sequential pattern is more understandable. However, the main problem in existing approaches is that an expert must provide the required fuzzy sets of quantitative attributes and their corresponding membership functions. Also, it is not a realistic method that experts must always provide the most appropriate fuzzy sets for fuzzy association rules mining. This appropriateness can change with respect to the criteria user focused on. Existing approaches to overcome this problem can be classified as either based on clustering methods [9, 10], or employ GA based methods [11-13].

In this paper, we propose a novel method based on multi-objective GA for determining the most appropriate fuzzy sets in sequential pattern mining such that the optimized support and confidence rules will be obtained.

For this purpose, we take into account three measures of the objectives for multi-objective GA problem. Each individual in a population represents a separate sequence.

In this sense, the objectives are support that indicates the percentage of records belonging to that individual, confidence and a parameter related to the total number of fuzzy sets in the itemsets. So, the optimized fuzzy sequential patterns are obtained by considering three important criteria. Experimental results obtained using synthetic SALES Database demonstrate that our approach performs well and gives good results even for a larger number of attributes.

The rest of the paper is organized as follows. Related work is presented in Section 2. Sequential patterns are defined in Section 3. The multi-objective optimization problem is introduced in Section 4. Our approach of utilizing multi-objective GA is described in Section 5.

Experimental results are reported in Section 6. Section 7 is the conclusions.

2. Related Work  Existing approaches to find appropriate fuzzy sets for fuzzy association rules mining are mainly classified into two categories. The first is concerned with clustering      methods and the other employs GA based approaches.

Under the first category, Fu et al [9] proposed an automated method to find fuzzy sets for the mining of fuzzy association rules; their method is based on CLARANS clustering algorithm [14]. We developed a more efficient approach based on CURE clustering algorithm [10]. Gyenesei [15] proposed a method to find the fuzzy sets for each quantitative attribute by using clustering techniques. All these studies use a clustering technique and the membership functions of a quantitative attribute are generated with respect to centers of clusters.

So, no optimization measure is taken into account. The only important point is the distribution of values of quantitative attributes. However, in the second category, GA based methods tune the base values of membership functions of quantitative attributes according to an optimization scheme. For instance, Mata et al [11] presented a technique to find large itemsets in quantitative databases without needing to discretize the attributes.

Recently, an increase has been observed in the number of such studies [12, 13], where optimized measures include number of large itemsets in a given interval of minimum support or number of large itemsets in small time.

Another optimization problem, introduced by Fukoda et al [16], proposes an approach to determine boundaries for the intervals of attributes such that the confidence or support of the rule is maximized. The method was used for non-fuzzy domains. Then, Rastogi and Shim [17] improved the optimized association rule problem such that association rules were allowed to contain a number of uninstantiated attributes. Recently, Ghosh and Nath [18] proposed a multi-objective rule mining algorithm using genetic algorithms.

Table 1 A data set grouped by customers Customer ID Transaction Time Purchased Items  June 15, 2003 (A, 8), (B,4) 1 June 24, 2003 (C, 6), (D, 5)  June 5, 2003 (A, 6) June 11, 2003 (C, 2), (D, 3) 2 June 28, 2003 (A, 8), (B, 9)  3. Sequential Patterns  Given a database of customer transactions, where each transaction includes a customer ID, transaction time and some purchased items, where each item is represented by a tuple (item name, item amount). On such a database, a sequential pattern is defined as follows.

Definition 1: Let },...{ 1 nxxI =  be a set of items, each possibly associated with a set of attributes, such as value or price. The value of attribute A in item x is denoted as x.A. An itemset is a non-empty subset of items, and an itemset with k items is called k-itemset.

A sequence ),...( 1 lXXs =  is an order list of itemsets, and an itemset )1( liX i ??  in a sequence is called a transaction.

In a set of sequences, a sequence s is maximal if s is not contained in other sequences.

4. Multi-Objective Optimization  Multi-objective optimization deals with simultaneous optimization of several incommensurable and often competing objectives such as performance and cost. For example, when the design of a complex hardware is considered, it is required for the cost of such a system to be minimized while maximum performance is expected.

If there is more than one objective criterion as in the example mentioned above, some of them can be considered as constraints in the problem. For example, while trying to optimize a system for large performance and low cost, the size of the system must not exceed given dimensions is a separate optimization criterion. This way, a multi-objective optimization problem can be formalized as follows.

Definition 2: A multi-objective optimization problem includes a set of a parameters (called decision variables), a set of b objective functions, and a set of c constraints; objective functions and constraints are functions of the decision variables. The optimization goal is expressed as:  Yyyyy  Xxxxx  xexexexe  xfxfxfxfy  b  a  c  b  ?= ?=  ?= ==  ),...,,(  ),...,,(where  0))(),...,(),(()(contraints  ))(),...,(),(()(maxmin/      where x is decision vector, y is objective vector, X denotes decision space, and Y is called objective space; the constraints 0)( ?xe  determine the set of feasible solutions.

In this paper, we considered the values of support and confidence utilized in the sequential patterns mining process, a parameter handling the amplitude of the interval and number of attributes together as objective functions. These measures are computed as follows.

The fuzzy support of a sequence CBA ??  is defined as the fraction of transactions that contain CBA UU , where A, B and C are items of the sequence. Formally,  ||  )( )(  D  CBASupport CBASupport  UU=?? , where |D| is the  size of database.

The confidence of a sequence is the ratio of the  support of CBA UU  to the support of BAU .

)(  )( )(  BASupport  CBASupport CBAConfidence  U  UU=??  In this study, the other important measure, i.e., Fuzzy Set-Attribute is found by the following formula:  attributestheofsetsfuzzyofnumberimumtheoftotal  sequencetheinsetsfuzzyofnumbertotal AttributeSetFuzzy  max =?  ? =  = k  i iwsequncesofsetsfuzzyofnumbertotal   ||  ? =  = m  i iwattributestheofsetsfuzzyofnumberimumtheoftotal   ||max      where, m is the number of attributes in the database, k is the number of attributes in the sequence and il  is the maximum number of fuzzy sets for attribute i.

The above proposed formula generates sequences with both larger fuzzy sets and number of attributes, i.e., we obtain maximal sequences. The next example demonstrates the superiority of the proposed formula.

Example 1: Consider the sequence CBA ?? , and assume that we have 6 attributes in a database and their maximum fuzzy sets are 5. If we have a sequence  ]4[]3[]4[ setsCsetsBsetsA ?? , and the total number of their fuzzy sets is 11, then: Fuzzy Set-Attribute of  ]4[]3[]4[ setsCsetsBsetsA ?? =  ?  =0.36  On the other hand, if we have a sequence ]4[]4[ setsCsetsA ? , then: Fuzzy Set-Attribute of  ]4[]4[ setsCsetsA ? =  ?  =0.26  The latter sequence is eliminated because the former is a maximal sequence. In this regard, a solution defined by the corresponding decision vector can be better than, worse, or equal to, but also indifferent from another solution with respect to the objective values. Better means a solution is not worse in any objective and better with respect to at least one objective than another. Using this concept, an optimal solution can be defined as: a solution which is not dominated by any other solution in the search space. Such a solution is called Pareto optimal, and the entire set of optimal trade-offs is called the Pareto-optimal set.

Explicitly, the objectives in such an optimization problem are conflicting and cannot be optimized simultaneously. Instead a satisfactory trade-off has to be found. Therefore, it is necessary to have a decision making process in which preference information is used in selecting an appropriate trade-off.

5. Multi-Objective GA Based Process  In this section, we describe the proposed method for mining optimized fuzzy sequential patterns by employing a Pareto-optimality based multi-objective GA. We first present our encoding scheme and then define the fitness assignment and selection criteria. Finally, we give the algorithmic structure of the proposed approach.

5.1. Chromosome Encoding  We use the support, confidence and the ratio of the number of fuzzy sets in the sequence to the total number of fuzzy sets as objectives of the multi-objective GA approach employed in determining optimized fuzzy sequential patterns. The values of support and confidence of a rule are maximized in large number of fuzzy sets.

According to our intuition, stronger rules can be mined  with larger number of fuzzy sets because more appropriate fuzzy rules can be found as the number of fuzzy sets increases.

This section describes the generation of the initial population, where each individual represents the base values of membership functions of a quantitative attribute in the database. We used membership functions in triangular shape.

To illustrate the encoding scheme utilized in this study, membership functions for a quantitative attribute ik having 3 fuzzy sets and their base variables are shown in Figure 1. Each base variable takes finite values. For instance, the search space of base value 1kib  lies between the minimum and maximum values of ik, denoted )min( kiD  and )max( ki  D , respectively. Enumerated next to Figure 1  are the search intervals of all the base values and the intersection point kiR  of attribute ik.

small medium large  ki  b 2 ki  b 3 ki  b ki  b  ?(ik)  )min( ki  D )max( ki  DkiR    )]max(),[min(:  )]max(,[:  ]),[min(:  )]max(),[min(:  )]max(),[min(:      kkk  kkk  kkk  kkk  kkk  iii  iii  iii  iii  iii  DDb  DRb  RDb  DDR  DDb  Figure 1 Membership functions and base variables of attribute ik  So, based on the assumption of having 3 fuzzy sets per attribute, as it is the case with ik, a chromosome consisting of the base lengths and the intersection point is represented as: 432143214321 ...

2222211111 mmmmm iiiiiiiiiiiiiii bbRbbbbRbbbbRbb .

Since it is not possible to know a priori how many attributes will be necessary to create a good sequential pattern, this number has to be automatically adjusted by the GA based on the data being mined. Finally, the structure of the genome of an individual is illustrated by ( 111 Bwv , ?, jjj Bwv , ?, mmm Bwv ), where m is the number  of attributes. jv  represents the part (consequent or antecedent) in which attribute j will appear. If the value of  jv  is 00, then j will be available in neither of these parts.

However, if the value of jv  is 11, then j will appear in either part. On the other hand, if it is 01 or 10 then j will appear in consequent or antecedent, respectively. jB  is the set of variables used to represent the base lengths and the intersecting points corresponding to attribute j.

Further, gene jiw  denotes the number of fuzzy sets for  attribute ji . If the number of fuzzy set is 2, then the first two base variables are considered while decoding the individual, the others are omitted. However, if jiw  is raised to 3, then the next three variables are taken into account as well. So, as the number of fuzzy sets increases,      the number of variables to be taken into account is enhanced too.

In the experiments, we used binary coding; while the value of a variable (gene) is reflected under its own search interval, the following formula is employed:  ))min()(max(  )min( ki k iL  k i  k i jjjj  bb d  bb ? ?  += , where d is the  decimal value of the variable in search, L is the number of bits used to represent a variable in the encoding scheme,  )min( ki jb  and )max( k i j  b  are, respectively, the minimum and maximum values of the reflected area.

5.2. Fitness Assignment and Selection  As mentioned earlier, in multi-objective problems, both fitness assignment and selection must allow for several objectives. One of the methods used for fitness assignments is to make direct use of the Pareto dominance concept. In this concept, fitness value of individuals is computed using their ranks, which are calculated from their non-dominance property. The ranking step tries to obtain the non-dominated solutions. According to this step, if ci chromosomes dominate an individual then its rank is assigned as ci+1. This process continues until all the individuals are ranked. After computing the fitness value of each individual, individuals with the smallest rank constitutes the highest fitness. Finally, selection (we have adopted elitism policy in our experiments), replacement, crossover and mutation operators are applied to form a new population as in standard GA.

The whole multi-objective GA process employed in this study can be summarized as follows.

Algorithm for mining optimized fuzzy sequential rules Input: population size: N, maximum number of generations:  G, crossover probability: cp , mutation rate: mp Output: Nondominated set: S 1. Set ?=0P  and 0=t ,  For h=1 to N do a) Select Ii ? , based on some probability distribution,  where i  is an individual and I  is its space.

b) Set {}iPP += 00  2. For each individual tPi ? , a) Determine the encoded decision and objective vectors b) Calculate the scalar fitness value )(iF  with respect to  the approach mentioned above.

3. Set ?=?P  For h=1 to N do a)  Select one individual tPi ?  with respect to its fitness  value )(iF b) Set {}iPP +?=?  4. Set ?=??P For h=1 to N/2 do a)  Select two individuals Pji ??, ; remove them from P?  b) Recombine i  and j ; the resulting offspring are Ilk ?, c)  Insert lk ,  into P ??  with probability cp , otherwise  insert ji,  into P ?? 5. Set ?=???P ,  For each individual Pi ???  do a)  Mutate i  with mutation rate mp . The resulting  individual is Ij ? b) Set { }jPP +???=??? .

6. Set PPt ???=+1  and 1+= tt .

If Gt ?  or the threshold-based reproduction stability is satisfied then return )( tPpS = , where )( tPp  gives the set of nondominated decision vectors in tP . In other words,  the set )( tPp  is the nondominated set regarding tP .

Otherwise go to Step 2, i.e., execute steps 2 to 6.

The algorithm starts by selecting individuals to the  initial population. Then the following process is repeated until the threshold-based reproduction stability termination condition is satisfied or the prespecified maximum number of generations is achieved. The encoded decision vector and objective vector as well as the fitness value are all determined for each selected individual. Existing individuals are used in generating new ones by applying cross-over and mutation.

Individuals survive based on their fitness and are used in the process. This way, the nondominated set is determined and the target is achieved.

The process of mining fuzzy association rules starts by employing multi-objective GA for tuning membership functions in each generation according to the adjusted number of fuzzy sets and their base values. However, while adjusting membership functions of attribute ik by GA, each value of ik intersects with one or more of its membership functions. Therefore, membership functions do not generally have a uniform structure. Based on this, ik undergoes a normalization process, which is mainly a transformation that leads to a total contribution of 1.0 for ik. The normalization is performed as follows:  ? =  = ki  kk  kk  kk l  p kv  p ii  kv j  ii kv  j ii  itf  itf itf    ).,(  ).,( ).,(  ?  ? ?  where kil is the number of fuzzy sets related to ik; ).,( kv  j ii itf kk?  is the membership degree in the j-th fuzzy set  for the value of ik in transaction tv.

6. Experimental Results  In this section, we report the results of the experiments conducted to analyze the proposed optimization method.

All the experiments were conducted on a Celeron 2.0 GHz CPU with 512 MB of memory and running Windows XP. As experimental data, a synthetic SALES database with 20 attributes and 20K transactions was generated using a randomized transaction generation      algorithm. In the experiments, crossover and mutation probabilities are arbitrarily taken as 0.8 and 0.01, respectively, and 5-point crossover operator is used.

Table 2 Number of generated rules vs number of generations  Number of Rules for Number of Generations FS2 FS3 FS4 FS5 MOGA  250 74 67 53 31 68 500 121 82 62 38 104 750 154 91 65 39 127 1000 173 93 66 39 133 1250 178 93 66 40 135 1500 178 93 66 40 136  The first experiment finds the number of rules generated for different numbers of generations. The results are reported in Table 2. Columns 2-5 show the results obtained for cases when the number of fuzzy sets is fixed at 2, 3, 4 and 5, respectively. The last column deals with finding number of fuzzy sets and optimizing ranges of membership functions. Table 2 shows that as the number of fuzzy sets increases, the numbers of rules decrease. Also, a faster convergence is observed for larger number of fuzzy sets. Although the numbers of rules found by MOGA are between FS2 and FS3, the average number of fuzzy sets determined by MOGA is 3.6.

0 5 10 15 20 25 30 35 40  Support (%)  C on  fi de  nc e  (% )  FS3  MOGA  Figure 2 Non-dominated solutions found  The second experiment investigates the distribution of the non-dominated solutions found in case of FS3 and MOGA. The results in Figure 2 only show the support and confidence dimensions. The solution density in the left hand side of Figure 2 is higher, which is an expected case because larger rules are generated for small values of minimum support. Another density region is observed in case minimum support is around 20%. This region constitutes the most effective part of the solutions.

7. Conclusions  In this paper, we contributed to the ongoing research on sequential pattern mining by proposing a multi- objective GA based method for mining optimized sequential patterns. Our approach uses three measures as objectives, namely: support, confidence and fuzzy set- attribute. The advantage of the proposed method is to  directly find maximal sequences for different cases. The results obtained from the conducted experiments demonstrate the effectiveness and applicability of the optimized patterns.

