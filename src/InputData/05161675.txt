Meharouech Sourour                                          Bouhoula Adel                                                  Abbes Tarek     m.sourour@voila.fr                                     adel.bouhoula@supcom.rnu.tn                                      Tarek.Abbes@loria.fr

Abstract?Network Address Translation (NAT) is a technology that allows multiple computers on a LAN to share a single public IP address for accessing the Internet. Without it, the IPv4 protocol?s limited number of available addresses would be pushed to its limits. However, NAT poses a big problem for security and especially for networks protected by intrusion detection systems (IDS) and intrusion prevention systems (IPS).

The paper underlines the NAT?s implications on IDS and IPS and proposes a solution that includes the NAT technique in this security infrastructure.

Keywords? Network Address Translation, Intrusion Detection Systems, Intrusion Prevention Systems.



I. INTRODUCTION Internet is one of the fastest growing communication  mediums ever. It is estimated that several thousand new hosts are connected every day. However, the vast growth rate had caused considerable problem, due to the fact that Intemet transport version 4 protocol (IPv4) does not provide enough addresses for all the new hosts in its infrastructure. To resolve this limitation, the IANA (Internet Assigned Number Authority) has defined a set of IP addresses as private addresses (non Internet-routable) to be used freely in any intranet. But since these addresses are non Internet-routable IP addresses, a Network Address Translation (NAT) technique is mandatory to interconnect a local network to Internet. In fact, NAT assigns public addresses (routable IP addresses) to packets sent from private LAN. Generally, it operates on a router between a private network and outside (Internet) and does a one-to-one or a many-to-one IP address translation.

There are also three NAT techniques: traditional NAT modifies the source addresses, Twice NAT modifies both the source and destination addresses for packets, and NAPT (Network Address Port Translation) modifies the address and the port source. Without NAT, the IPv4 address space would have been exhausted a long time ago. However, the translation of address/port by NAT affects different other applications since applications behind the NAT have no way to know what the real address/port used by the hosts [5, 6]. For example, the translation of the address/port in a packet across the NAT breaks mechanisms such as IPSec which verify the integrity of packets over network since the packet is modified. In [1], Shieh el al state ?By breaking the end to-end nature of Internet applications, NAT threatens Internet security?. In this paper, we are interested by the security implications of NAT in network protected by Intrusions Detection Systems (IDS) and  Intrusions prevention Systems (IPS). In fact, it is a problem for IDS and IPS to work with NAT since the host information (IP address and port number) are affected by NAT. If the IDS detects a suspicious incoming packet, the alert generated will contain the public IP address as victim?s identifier; so the security operator cannot determine who is the really victim since all the incoming packets have the same destination IP address. If the IDS detects a suspicious outgoing packet, the alerts will contain the public IP address as attacker?s identifier.

So, the security operator cannot identify the real attacker since all the outgoing packets contain the same public address as source IP address. Another problem is that NAT does not permit to extricate profit from the alerts correlation technique since the alerts have the same source or destination IP address.

Another problem is that if we have an IDS deployed below the NAT and another above the NAT, these two systems will refer the same occurrence of attack with different victim and attacker?s identifiers whereas they mention the same entities and the same attack. The problem of NAT is more far serious in context of IPS. If the IPS assumes an incoming packet as malicious, it can block the traffic to the victim. But this action will cause self-inflicted denial of service to all the users in our private network since the IP address of the victim is common for all the others hosts. If it blocks the source address, no one from the entire remote network can reach our system; if this remote network is also managed by NAT. If the IPS assumes an outgoing packet as malicious, the IPS?s active response can block the attacker. However this action will block the entire network since all the outgoing packets contains the same address IP source.

Although the NAT technology provides network benefits, there are also a number of security problems that remain to be solved. So, in order to address these problems, the paper develops a solution that solves the NAT?s security issues in local area network protected by IDS and IPS systems. The remainder of this paper is organized as follow. Related works are presented in section 2. Section 3 describes our IDS/IPS architecture. We present in section 4 the detail of the identification module. Section 5 illustrates the evaluation of the solution. Finally, in the last section we summarize the paper and outline future work.



II. RELATED WORK Network Address Translation is been the focus of much  debate in the networks security community. From the studies  Security Implications of Network Address Translation on Intrusion Detection and Prevention Systems  (c) 2009 ESRGroups France         Figure 1.  IDS/IPS architecture   that address the NAT problem on security, we highlight the solution of Chi Huang et al [2]. The authors state that sensitive applications cannot hold their end-to-end security mechanisms because of the translation of address/port in a NAT; to resolve this problem, they present a Smart Tunnel Union for NAT Traversal (STUNT) which keeps end-to-end security mechanisms. In fact, STUNT is defined as a global naming policy to make the server behind the NAT identifiable to Internet clients so that the clients can actively initiate connections to the server. Besides, STUNT does not modify communication data so that end-to-end security mechanisms can be guaranteed. Yuji et al [7] propose a Dynamic Process Resolution Protocol (DPRP) that can traverse NAT and by which devices in the network learn changes in system configurations automatically, and maintain communication groups. NAT poses also a problem for the Internet Protocol Security (IPSec) which is an increasingly popular way to protect the confidentiality and integrity of data while it?s in transit over an IP network. The problem is that NAT changes the IP address of the internal computer to that of the NAT device. The Internet Key Exchange (IKE) protocol used by IPSec embeds the sending computer?s IP address in its payload, and this embedded address doesn?t match the source address of the IKE packet (which is that of the NAT device).

When these addresses don?t match, the receiving computer will drop the packet. The IPSec working group of the IEEE has created standards for NAT-T that are defined in RFCs 3947 [3] and RFCs 3948 [4]. NAT-T is designed to solve the problems inherent in using IPSec with NAT. However, Microsoft recently revealed that the way IPSec and NAT-T work can cause a security threat wherein IPSec traffic intended for one computer may be routed to the wrong computer, if certain criteria exist. These comments show that despite that NAT mitigates the problem of IPv4 address depletion in today's Internet; it poses problems for network security. So, existing security solutions must be re-examined in order to function correctly within the network environment.



III. SOLVING THE NAT PROBLEM ON IPS AND IDS   To resolve this problem, we suggest that the IDS/IPS deployed in the network must be aware about the presence of a NAT device that changes the packets headers. So, we propose a new architecture of IDS/IPS that respects and integrates this  network characteristic in its analysis process in order to correctly identify the entities implicated in security issues and take the best decision based on what is appropriate to these entities. Networks deployed NAT, IDS or IPS can be illustrated as in figure 1. This figure presents also our new IDS/IPS architecture which is composed of three components: receiver module, analysis module and identification module.

Receiver module: it collects network data and forwards the  traffic to the analysis module.

Analysis module: it analyses traffic to look for malicious or  suspicious intents. The output of the analysis module is an alert composed of four attributes: attacker, victim, attack and time. The field attack identifies the malicious action. The field attacker identifies the entity source of attack. The field victim designs the entity destination of attack and the field time determines when attack is detected. However, in the first hand, the alert generated does not identify the real hosts implicated in the security issue. In the second hand, if there are two IDSs/IPSs systems, one deployed above the NAT and another below the NAT, so these two systems will refer attacker and victim with different identities even if they alert the same attack, so these two alerts will be considered as two different alarms which increases the number of alerts and overwhelm the security operator. These requirements underline the need to add another module in the IDS/IPS architecture.

Identification module: the out put of the analysis module is  send to the identification module which determines the real hosts? identities that are implicated in the security issue based on the NAT table.  Once, the real hosts are identified, the IDS send an alert to the security operator with the appropriate information, so the operator can take the best decision based on the properties of these hosts. In case of IPS, the active response is applied only on the concerned host, so neither the entire private network nor the entire remote network is involved.



IV. IDENTIFICATION MODULE  Before explaining our identification module, we adopt the  following NAT characteristics.

NAPT: both the source addresses and ports are modified  NAT device   INTERNET   IDS/IPS Private Network  Receiver module  Identification module  Analysis module  Private Adress source  Port source  Public Adress IP  Assigned Port number  NAT Table  (c) 2009 ESRGroups France      Dynamic NAT: the mapping between private and public addresses and ports is not configured manually but dynamically by the NAT device. In fact, dynamic NAT is useful when the network topology changes frequently.

Many-to-one IP address translation:  we suppose that the number of available public addresses in a network is NP. The different private hosts can be divided into several sets.  The number NS of these sets should be inferior or equal to NP.

The NAT device attributes for all the private hosts in each set Sj, 1 ? j ? NS a public address PAi, 1 ? i ? NP.

It is important to note that the identification module accesses to the information from only the local NAT but not remote NAT deployed in others private networks. In fact, allowing local NAT information to others devices can have security implications since an attacker can access this information and use it maliciously.

There are two possible IPS/IDS?s errors according to the traffic direction.

Case 1: a suspicious outgoing packet (figure 2) In this case, the address source is changed to the public address and the port source to the assigned port. So, the IDS/IPS cannot determine the malicious internal user?s identity and the port number that initiates the intrusive connection since this information is hidden by the NAT device. As discussed in section 1, the IDS/IPS reaction can have serious consequences on our network.

Figure 2. case 1- suspicious outgoing packet   Figure 3. case 2- suspicious incoming packet   Case 2: a suspicious incoming packet (figure 3) In this case, the IDS/IPS cannot determine the internal user?s victim of the attack since the address destination contains a public address and the port destination is different from the port chosen by the private host. In this case, the reaction of the IDS/IPS can have serious consequences on the network availability. In addition, identifying the real victim is helpful to be aware about the vulnerable hosts in our system since attacks are generally generated against hosts presenting vulnerabilities.

To resolve these problems, we propose that the identification module identifies not only the hosts implicated in the security issue but also the malicious connections. In fact, the identification module process is based on two phases.

During the initialisation phase, the identification module builds an identities-graph, figure 4, to discover the hosts? properties in the private network. As shown in figure 4, the identification module starts by sorting the public IP addresses in a linked list called Public-adr-chain. Each node in Public-adr-chain, contains a public address PAi, 1 ? i ? NP and leads to a set of connections sharing PAi as a source or destination IP address (in order to take into account the both traffic?s directions). In fact, this set, called  PAitree is defined as an acyclic direct graph where each node Nj, V j? 0, represents a connection that is completely identified by the public address PAi, 1 ? i ? NP and the assigned port number, APk, {V k? 0, APk ? 1024}. In fact, since the NAT device assigns different port numbers for connections initiated from private hosts, APk serves as an identifier of a node in PAitree. So, the couple (PAi, APk) serves as a key of a connection in identities-graph. In addition, each node N in PAitree contains a structure called P-Info containing information about the private address, PrA, which initiates the connection and the initial port number, IP, chosen by the private host. In fact, one host can initiates several simultaneous connections behind different ports numbers. All these ports are changed by the NAT to different port numbers APk; and each APk will generate the creation of a new node. This permits to follow the connection and to differentiate between the intrusive connections and the legitimate ones within the same host.

Figure 4. Identities-graph structure   Definition 1 (connection C) A connection C is completely identified by the 4-tuple (as, aD, ps, pD) where:  1. as is the IP Address source.

2. aD is the IP Address destination.

3. ps is the port source 4. pD is the port destination  Definition 2 (node N) A node NC corresponding to a connection C is presented as a couple (PA,AP) where:  1. PA is a Public Address IP assigned by the Nat device.

2. AP is a decimal value, superior or equal to 1024,  assigned by the Nat device.

For suitably organizing identities-graph, we  define the relation ? between a connection C and a PAitree, 1 ? i ? NP as follow: Definition 3 (relation?) Let C a connection, NC its corresponding node and T a PAitree, 1? i ? NP. We denote by AS= C.as, AD = C.aD, We define the relation ? as:  NC ? PAitree   iff   AS=PAi or AD=PAi   To order PAitree, V 1 ? i ? NP, we use a total order < on NC. In addition, we introduce the relation = to express equality between two nodes.

Definition 4 (relations <, =) Let NCk, k {1, 2} be two node in PAitree, V 1? i ? NP. We denote by Pk = NCk.AP. We define the relations < and = as:  NC1 < NC2 iff  P1 < P2    ;       NC1 = NC2 iff  P1 = P2  PA1   PA2  ??  ? .

Public-adr-chain  PANP  AP1  PAN P tree PA1 tree  AP2 C1  ??  C1  C2         C2  AP1 AP2  (PANP, AP1)      (PrA, IP)   key  P-Info  NAT router Network  INTERNET  IDS/IPS  Suspicious packet  NAT router Network  INTERNET  Suspicious packet  IDS/IPS  (c) 2009 ESRGroups France      Once the identities-graph is constructed, we need to update this architecture. When a host initiates a connection, the identification module needs to create a new node with the corresponding assigned port number and the couple (private address, initial port); and when it puts an end to a connection, our identification module should destroy the connection?s node. This involves communication between the identification module and the NAT device. So, to update the identities-graph, we start by defining a data structure graphupdate (figure 5). This structure is exchanged between the identification module and the NAT device. As shown in figure 5, graphupdate contains a set of attributes identifying a connection: private address, port, public address and assigned port. When the NAT device effectuates a new modification in its table, it creates an instance of graphupdate with the appropriate information. In fact, it uses the different methods Set to can modify the values of the different attributes; after it sends this data structure to the identification module that can extract the needed information thanks to the different methods Get and updates the identities-graph. To determine if the identification module should create or destroy a node, it consults the Connection_state attribute that indicates if it is a new connection (create a new node) or the end of a connection (destroy a node).

graphupdate { Attributes Connection_state Boolean // new or end of a connection Private_adr STRING // private address IP port INTEGER       // port number public_adr STRING // public address assigned to the host assigned_port INTEGER //assigned port Methods Set-private_adr (adr_ip)// to set the private address Set-port (port)// to set the port number chosen by the private host Set-public_adr (adr_ip)// to set the public address Set-port (port)// to set the port number assigned by NAT adr_ip Get-private_adr ( )// return the private ip address port   Get-port ( )// return the port number adr_ip Get-public_adr( ) // return the public ip address port   Get-assigned_port( )// return the }                 assigned port number   Figure 5. graphupdate data structure   During the operational phase, the identification module  confronts the alert generated by the analysis module with the identities-graph. The identification module starts by extracting from the alert the attacker and the victim IP addresses and verifying which of these addresses correspond to a PAi address, 1 ? i ? NP. In fact, if there is a match with the attacker, this corresponds to case 1 (figure 2); and if there is a match with the victim, this corresponds to case 2 (figure 3).

Once, the PAi address is found, the identification module goes  over the linked list Public-adr-chain to find the corresponding node that leads to the appropriate PAitree.

After, to determine the real private host (attacker or victim) implicated into the security issue, the identification module is based on the port number assigned by the NAT device. So, it extracts from the alert the port source if PAi corresponds to the attacker?s address and the port destination if PAi corresponds to the victim?s address. If the port number is determined, the identification module browses PAitree to find the corresponding node. Once we reach the correct node, we extract (PrA, IP). Finally, in case of IDS, our identification module constructs a new alert with the real values of address and port. In case of IPS, we can take the adequate active response action against the real address and port. So in both case, only the implicated host is concerned and the others hosts continue running normally.



V. EXPERIMENTAL RESULT In order to validate the efficacy of our IDS/IPS system, we develop a test environment. We generate different TCP streams including FTP, HTTP, ICMP and different other types of traffic. We use several tools as ARP0c, APsend and Hunt permitting the simulation of attacks. We deploy our NAT device on a Cisco router (model 2501, category 2500, RIP as routing algorithm). We use 3 public addresses to access to the internet and each public address is shared between 8 hosts. In fact, in our test environment we use 3 PC and beside each one we create 8 virtual hosts using the vconfig utility. On each virtual interface, we attribute a private IP address. In fact, private virtual hosts from 10.0.1.1 to 10.0.1.8 shared the public address 193.95.66.10; private addresses from 10.0.1.9 to 10.0.1.16 shared the public address 193.95.66.11 and private addresses from 10.0.1.17 to 10.0.1.24 shared the public address 193.95.66.12.

We chose the host 10.0.1.9 to run a HTTP server and we use the port forwarding technique in order to be accessible from out side. To deploy an IDS, we use Snort and to deploy an IPS, we use Snort-inline. In both cases, we add the identification module and we implement the whole on a PC equipped with Intel Pentium 4 (2 GB of RAM), running Linux Redhat. The communication between the identification module and the Nat device is based on J2EE platform.

The identification module implements Java RMI to invocate the remote object graphupdate.

The main goal of the first experiment is measuring the identification module?s time taken to process packets. In this experiment, we are interested only by the operational phase?time. But it is important to note that Java RMI can provoke a certain burden of response time during the initialisation phase. Our identification module presents a linear time complexity. Indeed, let Ai be a public address, d the size of Public-adr-chain, Ni the dimension of Aitree.

Besides, we use ??o to compute a public address and ??int to compute a port number. Then the worse search time is:    (c) 2009 ESRGroups France      This time complexity is not always reached in practice since it imposes to browse all Public-adr-chain list and its last node leads to an Aitree having the highest dimension Ni.

Our second experiment measures the performance of the identification module to correctly identify attackers/victims.

We emulate three attacks scenarios and we compare alerts generated from our system with the snort ones.

Scenario 1: Network scan launched by the private host H1 ?10.0.1.2?. In this scenario, H1 uses NMAP to detect whether FTP service is running on target hosts.

Result : During the experiment, we observe that in scenario 1 (figure 6), snort generates an alert with 193.95.66.10 as IP address of attacker and 2356 as port source; but this address corresponds to a router?s extern interface. Whereas, our IPS/IDS architecture does the correspondence between the two address (193.95.66.10 and 10.0.1.2), the two port numbers (assigned port 2356 and initial port 5987) and formulates an alert with the appropriate value.

Figure 6. Experimental result of scenario 1   Scenario 2: DoS attack launched by a remote host against  our web server in order to interrupt the HTTP service running on the host ?10.0.1.9?. In this scenario, we emulate a DoS attack using an ICMP Flooder.

Figure 7. Experimental result of scenario 2   Result: In scenario 2 (figure 7), snort is incapable to  determine the victim since its alert specifies 193.95.66.11 as victim?s identifier. However, our identification module successfully determines that the attack is directed to the host 10.0.1.9 running the web server.

Scenario 3: Attack using worm launched against different private hosts.

Result: In scenario 3 (figure 8), we remark that not only snort but also our IPS/IDS architecture failed to identify the victims. In fact, this failure is not due to the identification module?s performance decrease but due to the absence of the connections? characteristic in the NAT table. When a remote host launches connections containing worm, the NAT router cannot determine the target host since the port/address and their assigned values are undefined in the NAT table and the destination address in packet header corresponds to its interface address. In this case, the object graphupdate cannot be constructed. This scenario underlines the need to use not only IPS/IDS system but different security devices as antivirus and firewall in order to form a global security layer.

Figure 8. Experimental result of scenario 3

VI. CONCLUSION NAT provide a way to handle IP address depletion incrementally. However, IDS/IPS must be re-examined to function correctly within NAT. In this paper, we have fully integrated the NAT?s modification done on packets headers within the IDS/IPS analysis process in order to correctly identify the entities implicated in security issues. Our experiments have shown that utilizing a NAT-aware IDS/IPS system permits to identify the real attacker/victim, launch the adequate response actions with respect to the attacker/victim characteristics and improve the protection of the network.

Future work will include more interest at finding relationships among alerts generated by IDS/IPS systems deployed below and above the NAT device.

