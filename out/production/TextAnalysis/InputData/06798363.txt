ICROIT 2014, India, Feb 6-8 2014

Abstract - The need for an e fficient technique for com pression of Images ever increasing because the original images need large amounts of disk space seems to be a big disadvantage during transmission & storage. Even though there are a lot of compression technique already present a better technique which is faster, memory efficient and simple which surely suits the requirements of the user. This paper proposed the Lossless method of image compression and decompression using a simple technique called KMP Technique. This technique is simple in implementation and utilizes less memory. An algorithm has been developed and implemented to compress and decompress the given image using KMP technique.

Keywords -Image Encryption, Chaos, DES, Security Measu res

I. INTRODUCTION  Image compression plays an important role in many applications. It helps in reducing the number of bytes of an original image without any distortion in its quality, so that it will take less time, hard disk space or transmission bandwidth to send a data from one place to another. For example, A 24 bit color image with 512x512 pixels will occupy 768 Kbyte's storage on a disk, and a picture twice of this size will not fit in a single floppy disk. So, to transmit an image over a 28.8 Kbps modem would take almost 4 minutes. The reason for image compression is to reduce the amount of data required for representing sampled digital images and therefore reduce the cost for storage and transmission. There are different techniques for compressing images. They are generally classified into two classes:  1. Lossless Image Compression  2. Lossy Image Compression  1. Lossless coding techniques - The Lossless coding technique  also further classified into following categories -  a. Run length encoding b. Huffman encoding c. Arithmetic encoding d. Entropy coding e. Area coding  2. Lossy coding techniques - There Lossy coding technique also further classified into the following categories-   a. Predictive coding b. Transform coding  I n  t h e  l o s s l e s s  c o m p r e s s i o n  t e c h n i q u e s ,  n o inf(FT/DCT/Wavelets) onnation regarding the image is lost. In other words, the reconstructed data exactly matches the original. W hereas in lossy compression, some image information is lost, i.e. the reconstructed image from the compressed image is similar to the original image but not identical to it. In this work we will use a lossless compression and decompression through a technique called KMP technique.

The main objective of this paper is to compress images by reducing number of bits per pixel required to represent it and to decrease the transmission time for transmission of images .and then reconstructing back. Digital Image compression addresses the problem of reducing the amount of data required to represent a digital image.

The basic flow diagram of image compression-  Original Image  E Bitstream 0  ? ,,,. ? OIOI1?OI1I ?  LJ ?  Figure 1  Decoded Image  According to KMP imagcompresses the image in any manner by selecting the pixels. According to this technique, if a pixel is repeated from a previous scanned pixel then add 1 otherwise add O. If it adds the zero then select the next pixel.e compression technique, it

II. HISTORY  Compression techniques have played an important role in the world of telecommunication and multimedia systems where bandwidth is still a valuable commodity. Hence, Image compression techniques are of prime importance for reducing the amount of information needed for picture sequence without losing much of its quality. The history of compression began in the 1960s. Interest increased with improvements in picture quality and digital coding.

Compression is useful because it helps reduce resources    norm, such as data storage space or transmISSIOn capability. As compressed data must be decompressed to use, this additional processing imposes computational or other costs through decompression. In lossless compression, the reconstructed image after compression is numerically identical to the original image. In lossy compression scheme, the rebuilt image contains degradation relative to the original. Lossy technique causes image quality degradation in each compression or decompression step. In common, lossy techniques provide for greater compression ratios than lossless techniques. So the lossless technique is much more suitable than lossy technique. After that the international standard organization and international telecommunication established the concept of jpeg Uoint photographic experts group) but it does not provide the high contrast screenshots.

Compression Standards  MPEG Stands for the Moving Picture Experts Group MPEG is an ISO/IEC working group, which is established in 1988 to develop standards for digital audio as well as video formats.

There are five MPEG standards being used or in development.

Each compression standard was built with a specific application and rate of bit in mind, although MPEG compression scales well with increased bit rates. These days MPEG-l decoders/players are becoming commonplace for multimedia on computers.

MPEG-l decoder plug-in hardware boards (e.g. MPEG magic cards) have been around for a while, and now software MPEG-l decoders are available now with the release of operating systems or multimedia extensions for PC and MAC platforms.

JPEG JPEG Stands for Joint Photographic Experts Group. It is used to build the standards for continuous tone image coding. JPEG is a technique as lossy compression used for gray-scale or full-color images, by exploiting the fact that the human eye will not notice small color changes.

Input image  Compressed Image  Redundancy - Redundancy is the number of bits used to transmit a message minus the number of bits of actual information in the message.

Types of Data Redundancy  (1) Coding  (2) Interpixel  (3) Psychovisual  ? . . . .

?. ,. . .  ? -- . - .... -_ .  "'  5.oi!:: ? ? =- .  __ .  =- __ _ c: .......

? ? .  I: > _Il. T ? .? _ ""_ r--: <OIL --..

.? ? - ? ? ? I 7"-.J ? ? "'""' ? <: - ? --- - - - - - - ---  Compression attempts to reduce one or more of these  redundancy types.

Coding Redundancy-   Code: a list of symbols (letters, numbers, bits etc.) Code word: a sequence of symbols used to represent a piece of information or an event (e.g., gray levels).

Code word length? number of symbols in each code word.



III. PROPOSED COMPRESSION PROCEDURE  In the KMP technique, the repetition of pixels in any direction.

Here any direction means not only in horizontally or vertically or diagonally but also in anywhere in the image. As image are made of pixel hare pixel means representation of different color in image which can be repeated anywhere in image. KMP technique is very power full technique to compress images of highly repeated ration of same pixel in whole image. If pixel is repeat from previous scan pixel then add 1 otherwise add O. If it adds the zero then select the next pixel. If it adds 1 then add 1 more bit which will specifY adding ofnextnumberofbits.Add 00 for horizontally repeated pixel and store its relative position within two bits if relative position is less than 4 and so on. In this way our image has been compressed easily. As in figure shown below image can compress by KMP technique even pixel repeat in anywhere in image  Suninga' pi?ellY:lrilOntilily pi?eI  Relative  positil)'llS  repeatedpl?eI<lndCilnCOmpreHeasily  byKMPTechn'que  from green pixel to another green pixel  COmpression eX Im.ge by KMPTechnlque by redudngbi ts of repeMed pi lei In spedfi crange In an direction

IV. KMP COMPRESSION ALGORITHM  1. First of select image for Compression  2. Than select its first pixel and add bit 0 in starting of its  bits  3. If it have more pixel then select next pixel.

4. Then check is pixel repeat from previous scan pixel  5. If repeat than add 1 other wise add 0  A. If add 0 then go to step 3.

B. If add 1 then add 1 more bit which will specifY adding  of next number of bits as :

I. Add 0 if next adding number of bit is 2 or 4  a) Add 00 for horizontally repeated pixel and store  its relative position within two bit if relative position  is less than 4 and then go to step 3.

b) Add 01 for vertically repeated pixel and store its  relative position within two bit if relative position  is less than 4 and then go to step 3.

c) Add 10 for diagonally repeated pixel and store its  relative position within two bit if relative position is  less than 4 and then go to step 3.

d) Add 11 for other repeated pixel and store its relative    position within four bit two bits for horizontally and  two bits for vertically position if relative position is  less than 4 and then go to step 3.



II. Add 1 if next adding number of bit is 4 0r 8  a) Add 0 0  for horizontally repeated pixel and store  its relative position within four bit if relative position  is less than 16 and then go to step 3.

b) Add 01 for vertically repeated pixel and store its  relative position within four bit if relative position is  less than 16 and then go to step 3.

c) Add 10 for diagonally repeated pixel and store its  relative position within four bit if relative position is  less than 16 and then go to step 3.

d) Add 11 for other repeated pixel and store its relative  position within eight bit four bits for horizontally  and four bits for vertically position if relative position  is less than 16 and then go to step 3.

6. End.



V. KMP DECOMPRESSION ALGORITHM  1. First of select Compressed data for Decompression 2. Then select its binary data and point to its initial  position 3. Check next bit.

A. If bit is 0 then copy as it is next 24 bits in place of 0 and these 24 bits  B. Else if bit is 1 then check next three bits

I. If 000 then check next two bits and convert it in to decimal  number and then find the pixel relatively far away horizontally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1000 plus decimal number. Then go to step 3.



II. Else If 001 then check next two bits and convert it in to decimal number and then find the pixel relatively far away vertically from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1001 plus decimal number.

Then go to step 3.



III. Else If 010 then check next two bits and convert it in to decimal number and then find the pixel relatively far away diagonally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1010 plus decimal number.

Then go to step 3.



IV. If 011 then check next four bits and convert it in to decimal numberl and decimal number 2 by two bits and then find the pixel relatively far away horizontally and vertically from current pixel here relative position is equal to decimal number! as horizontally and decimal number 2 for vertically. And then copy repeated pixel in place of 1011 plus decimal numberlplus decimal number2.



V. If 100 then check next four bits and convert it in to   decimal number and then fmd the pixel relatively far away horizontally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1100 plus decimal number.

Then go to step 3.



VI. Else If 101 then check next four bits and convert it  in to decimal number and then find the pixel relatively far away vertically from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1101 plus decimal number.

Then go to step 3.



VII. Else If 110 then check next four bits and convert it in to decimal number and then fmd the pixel relatively far away diagonally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1110 plus decimal number.

Then go to step 3.



VIII. If 111 then check next eight bits and convert it in to decimal numberl and decimal number 2 by four bits and then fmd the pixel relatively far away horizontally and vertically from current pixel here relative position is equal to decimal numberl as horizontally and decimal number 2 for vertically. And then copy repeated pixel in place of 1111 plus decimal numberl plus decimal number2. Then go to step 3.

4. End.



VI. RESULTS  KMP technique will compress the image by repeating the pixel's either not only horizontally, vertically or diagonally.

This technique will depend only on image because how pixels are repeated is not said exactly for an? image b?cause image can be of any type. Hence by KMP technique whole unage will be compress mostly 4 0  to 60 percent easily.

Because it is always found that pixel are repeated alias in out of these three form (horizontally, vertically or diagonally) as well as in some case where pixel is repeated with any position in image. In other words repetition of pixel in two dimensional or with respect to both horizontally and vertically position. But according to experiment average image compression is found 55 percent in this case for 20 different images. And also those images whose background color is same in the whole image, then it is frond that that type of images which are compressed 70 percent due to the reason high redundancy of same color pixels in images  S i  .... ....e ot- i.-rouge in bits  20 kb(...vith. high. redundan.cy ....nthi.n dis{?u ... ce of" 1 6 pixel relative position )  20 kb(-..vith. high. redundan.cy .....nthout distance of" 16 pixel relative position)  20 kb(-..vith. lo'\? redundancy)

I.-rouge si .... ....e Per centage

VII. CONCLUSION  KMP technique is a very strong technique to compress image data from any kind of repetition. KMP technique can be used for compressing data which will be not only repeated horizontally or vertically or diagonally but also repeated anywhere in the image. And also it will very fast executable compression or decompression because its design of algorithm is well managed.

Benefit of this technique over other technique is KMP will compress maximum. But it will compress only those pixel which will be repeated with relative position range of 16 horizontally and 16 vertically and also 16 diagonally. That's its disadvantage. But for small images KMP will become very powerful technique to compress images and for those who are large size or high resolution image can be compressed here by dividing image in small sub images. But more than 99 percent time there is no need to divide whole high resolution image as probability of pixel repetition is found with relative position range of 16 horizontally and 16 vertically and also 16 diagonally. So for only one percent there is no need to divide whole image in recent time but in future if percentage will decrease then large size or high resolution image can be compress here by dividing image in small sub images. Hence for smaller images KMP Technique is very good and efficient technique and for large or high resolution images there is need to divide the whole image in smaller sub images or makes the block of images and apply operation on every block.



VIII. FUTURE PROSPECTS Further improvements of current scheme are still in process.

Today due to more requirements of new researches so here all need to do some extra effort and new technologies. This compression technique, will extract extra no. of bits which are not as much important for our data. So due to this, it reduces our memory space which is needed to store our data and will also increase data transmission rate. At last all these processes also helps us to secure our data. It is more important that our image will be lossless or lossy after compression in image compression technique. In this paper we will remove such type of problems. Experimental results of this technique clearly show that the used compression technique results in higher quality reconstructed images compared to that of other techniques at similar bit rates for the class of images.

Furthermore, image compression is still a challenging problem when some kinds of assistant information is provided into which we need to put more effort in the future.

