Hybrid Approach for Database Intrusion Detection with Reactive Policies

Abstract? Database systems are the important assets of the information system infrastructure in most organizations. The databases may contain invaluable sensitive information and unauthorized transaction could cause a lot of harm. In this paper, we proposed a Hybrid Reactive Database Intrusion Detection System that detects known as well as new database intrusions. We used an improved Apriori algorithm for mining association rules from the user behaviour. It analyses the associations between various parameters of the user activities.

This improved Apriori algorithm is considered to make the data mining process faster. Reactive policies are adopted for the detected intrusions. These policies are created based on the severity of an intrusion and an appropriate response is generated for the users who performed intrusive activity. This approach enhances the database security by generating more selective and more sensitive rules, and by providing faster decision, faster performance.

Keywords-Intrusion Detection System; Database; Anomaly detection; Misuse detection; Apriori Algorithm

I. INTRODUCTION Database security has become very essential as there are  several ways which can breach the traditional security systems such as firewall. Further the possibility of intrusion from the insider has emerged as large threat. It is very difficult to detect such attacks. In such situation intrusion detection system works fairly well. Database Intrusion Detection system finds the intrusions based on the user activities as explained in [1].

Basically, intrusion is an illegal activity performed against the privileges assigned and database is more vulnerable to the intrusions like brute force attack, SQL injection attack, privilege escalation etc. [2]. Intrusion Detection Systems are designed to find out such intrusions.

They are mainly classified as: anomaly vs misuse detection systems and passive vs reactive IDS [3], [4]. The anomaly detection system detects the novel attacks whereas the misuse detection system uses the signatures of the known attacks to find out the intrusions. In other category, the passive detection systems simply detects the intrusions and send an alert whereas the reactive system  detects as well as reacts to the intrusions to stop them  The proposed system is designed to detect such intrusions by using a hybrid detection model that comprises of anomaly as well as misuse detection techniques. It is also designed to react to such intrusions based on the reactive  policies [5]. The process of detection of intrusion is based on observation of user activities of a database. The log of user activities is stored in a database and mining is applied on the database to extract information [6], [7].  Response policies for each intrusive user are created. Response for each intruder will depend upon the severity of intrusion. The action will be decided by level of severity. These actions will be suspension, warning and blocking of a user.

The remainder of this paper is organized as follows.

Section 2 presents the related work done in this area.

Section 3 describes the system?s architecture for the proposed hybrid reactive IDS system for database. Section 4 explains the result parameters considered and Section 5 focuses on the experimental results.  Finally, Section 6 concludes the paper.



II. RELATED WORK Several intrusion detection techniques have been  invented to combat with the intrusions. Yawaei Zhang and Xiaojun Ye [8] has represented a DIDS based on anomaly detection technique that is also aided with pattern recognition and knowledge discovery by analysing sessions of database. The proposed system in [9] is a signature based intrusion detection approach for real time databases. It is only capable of detecting the known attack and this approach produces less false alarms. The system of [10] has introduced an approach for DIDS based on anomaly detection based on event sequence clustering. The sequence clustering is only capable of detecting intrusion sequence. It monitors the activity sequence of the users and the change in sequence is predicted as an intrusion. Yi Hu and Alina Campan [11] have given a method to enhance detection of malicious transactions in database by using data dependencies of a log. Each of these approaches detects either known attack (misuse detection) or a unknown attack (anomaly detection), but not both.

There also exist approaches which combines both misuse as well as anomaly detection to enhance the detection capabilities of the DIDS. Changxin song et al. [7] has proposed a system that uses both anomaly & misuse detection technique. It uses a association analysis followed by a cluster module, but it lacks in preventing the intrusions as it simply alerts about the intrusive event.

The approach in [12] focuses mainly on the SQL injection attack and the insider misuse detection for DBMS.

DOI 10.1109/CICN.2012.126     A distributed Intrusion detection system in [13] introduced the influence of different data storage modes on detection algorithms. There are a number of approaches available which are specific to Network intrusions that are based on the data mining techniques.Hu Zhen Bing [14] proposed a NIDS using known attack signatures. This approach has been utilized for network intrusion detection system not for the DIDS. A pattern based IDS [15] is a NIDS that monitors packets on the network using sniffers and detects the network intrusions using CIDF (Common Intrusion Detection Framework). The system in [16] explains about the vulnerability of the databases and SQL injection attacks at application layer, but doesn?t focus on the novel attacks.



III.  SYSTEM ARCHITECTURE The proposed model consists of the components as shown  in the Figure 1. It starts with the database user login. Further the activities of the users are monitored, then the data is pre processed and converted to a suitable format. Improved apriori algorithm is used to filter out rare patterns. The model is accomplished with a response model at the end.

Figure 1.  System Architecture for HRDIDS  The model shows the directional flow of the proposed  work. It starts with the user login into the database.

Database is having several users and each user is defined with username and password for authorization. Intrusions start from the login itself e.g. brute force attack. The database is having many user with different privileges assigned to it. Every authorized user should work according to the privileges; if it does any activity which does not come under its privilege will be treated as intrusion.

Every user which is logging in into database is monitored and its activities are stored in a log file. Every activity in the log file is processed to convert it into a required format.

This log generates the information of the users? activities.

Operation ID for each operation is defined and log is classified between users with its parameters.

The preprocessed data is placed in a specific format and the data mining is applied on the preprocessed data set. An improved apriori algorithm is applied as a data mining technique. The algorithm generates the association rules for the given data. These rules are formed on the basis of support and confidence parameter of the apriori output. A threshold is defined which will classify the normal rules and the strong rule. If an association generates support & confidence which are above threshold; such rules are classified as strong rule and stored in the rule set.

Data mining process generates the rule set and a normal behavior rule set is prepared from the training data set. This normal behavior rule set is used for the anomaly detection model. The new rules generated are compared to the training dataset and if it does not find the match to normal behavior, the rule is considered as the anomaly or intrusion.

Alongside to the anomaly detection model, we also have a misuse detection model. Misuse detection model have rule set of attack signatures, every time a rule is generated, it is compared to the signature stored in the data set. If it finds the match in data set then it defines it to be intrusion otherwise rule is forwarded to anomaly detection model.

The anomaly detection works on that and finds out whether it is normal or intrusive log.

The logs declared to be abnormal or intrusive are attended with the response. A threshold is defined and this will decide reaction to the intrusive user. A severity threshold is decided for each reactive action. Reaction will depend on the severity of intrusion.

The important components of the HRDIDS are discussed below.

A. Pre-processed Audit Log The very first step in designing the DIDS is to collect the logs of user activity. The information regarding the user activity should be collected properly and need to be processed properly. Pre-processing of collected logs is done.

This is done by collecting the user activity in a proper format. This format consists of attributes of a user and its corresponding activity. Each activity is identified by an operation ID and operation status ID.

B.   Data mining Data Mining is very useful for market-basket applications,  to analyse the trends of market. Association rule mining is very popular and useful technique in extracting patterns in a large database; it is a very well researched technique. Large datasets are observed which contain items that frequently occur with each other and a threshold level is defined; if the  User Login  Capture User Behavior  Preprocess Log  Data Mining  Misuse Detection Model  Anomaly Detection Model  Misuse Detected?

Anomaly Detected?

Response Policy Generation  Yes  No  Misuse Rulebase  Anomaly RuleBase  Yes  No Operation  No     percentage of threshold is crossed for certain association, a strong rule is generated. These rules can be very useful for deciding future trends and in our case; this will give us exact strategy of intruders. One of the very popular techniques in association rule mining is Apriori algorithm. Apriori algorithm gives us the important associations and gives us association patterns that can be very useful for detecting the intrusions.

We are using data mining technique to find out the associations in a user activity. Each activity is monitored with several attributes and corresponding associations are observed. One of the most popular data mining approaches is to get frequent itemsets from a transaction dataset and derives association rules. Apriori algorithm generates the associations that are hidden in the operations.

1)  Apriori Algorithm: Apriori is an algorithm for obtaining frequent itemsets using candidate generation [17].

Let the set of frequent itemsets of size k be Fk and their candidates be Ck. Apriori scans the database and searches for frequent itemsets of size 1 by accumulating the count for each item. It collects those that satisfy the minimum support requirement. It then iterates on the following three steps and extracts all the frequent itemsets.

1. Generate Ck+1, candidates of frequent itemset of size k + 1, from the frequent itemset of size k.

2. Scan the database and calculate the support of each candidate of frequent itemsets.

3. If support of itemsets satis?es the minimum support requirement, then add them to Fk+1.

2)  Improved Apriori Algorithm: Apriori algorithm is the best known algorithm for mining association rules in a large database and gets the association rules which are hidden in the database. For generating the association rules Apriori have to scan the database several times to generate the frequent itemsets.

To overcome these drawbacks, we have to reduce the time taken by the Apriori algorithm to generate the frequent itemsets and the candidate itemset. The improved Apriori algorithm [18] proposes a method that will reduce the number of scan done on the database and consequently reduces the time taken by the Apriori to generate the association rules. This method is based on calculating support values on their probability. Initially support values are obtained using the first scan. Next scans are not done in actual, instead using a probability model, support values are estimated. Likewise we can avoid having large number of scans.

This process reduces the time taken by the scans and fastens the process. Following steps shows the process.

? Get the support values of 1-itemset by scanning the database for once.

? If the support values are larger than the probabilities of support of user sets is considered as frequent itemset.

? It evaluates the probabilities of every 2-itemset, every 3-itemset, and every k-itemset from the frequent 1-itemset.

? It gets all the candidate frequent itemsets.

? It scans the database to verify the support of  candidate frequent itemset.

? Finally the candidate frequent itemsets are mined  and association rules are produced.

The above process describes the generalized way used in this improved Apriori algorithm. The process includes calculating the probabilities of support of the frequent itemsets based on the probabilities of 1-itemset.

C. Intrusion Detection Techniques Misuse and Anomaly detection are the two measure  techniques used for IDS. Misuse detection is also known as signature based detection. Misuse detection technique is used for known attacks whereas Anomaly detection is based on finding the unknown attacks. Misuse detection is unable to detect the zero day attack and hence anomaly detection is employed in our system alongside the misuse detection.

Both techniques have their own advantages and disadvantages: Misuse detection technique has already defined attack patterns so rate of false alarms is less, but it detects only known attacks. On the other hand anomaly detection technique detects novel attacks but the rate of false alarms is high.

D. Training  phase     Figure 2.  Training Phase  Figure 2 shows the process under training phase. The  training phase helps us to learn the user?s normal activity patterns. Data mining techniques are applied to the pre- processed logs which act as the training dataset and association rules are found. Here we are making use of  Audit Data  Data Pre- processing  Data Mining  Rule Base     improved Apriori algorithm. A threshold is defined for Support & confidence for each rule, if the rule has parameter values above threshold, then the rule is considered a strong rule. These rules give the normal behaviour of the users.

E. Test  phase Test phase is the most important part of IDS. The  decision of an audit log being intrusive or normal is taken in test phase. We capture both normal as well as abnormal activities of the users and we test these activities with the normal patterns which we have identified during the training phase.

Figure 3. Test Phase  As shown in Figure 3, current data (audit log) is matched  with trained rule base in case of anomaly detection process.

If the process uses signature based intrusion detection technique then current data is matched with the updated rule base consisting of all previous intrusive signatures.

F. Response Model in HRDIDS Upon finding the intrusive logs of a user, that user is  defined as intruder. Each such user will be entertained with a response policy which is based on the severity of the intrusion. Severity of an intrusion will be defined on the basis of intrusive activity done by the user.

Response policies are designed to respond to the intrusive behaviour according to its level of intrusion. The response actions are executed by the response system to address the intrusions. The policies will work upon ON {Event} IF {Condition} THEN {Action} principle. Depending on the severity of the intrusion following policies are defined   TABLE I.  RESPONSE POLICIES        The low severity actions may log the anomalous details or send an alert but it will not prevent the intrusion.

Aggressive actions are applied for high severity actions.

Such actions are capable of preventing the intrusion proactively by dropping the request, disconnecting the users or denying them from using necessary privileges.



IV.  RESULT PARAMETERS Following parameters are considered to evaluate the  performance of the HRDIDS.

1)  Detection rate (Pd): Detection rate refers to the rate of producing alarm when a legitimate attack is detected. Detection rate is equal to the quotient of dividing the number of detected intrusion events by the total of intrusion events.

Pd = Nd/N * 100 %                             (1)   Here, Nd denotes number of detected intrusion events and N denotes total number of abnormal events.

2)  Rate of false report (Pf): Rate of false report refers to the probability that correct  events are declared as intrusive events.

Pf = Nf/N * 100 %                             (2)   Here , Nf  denotes the number of normal events detected as abnormal.

3)  Rate of missing report(Pm):  Rate of missing report refers to the probability of undetected intrusion events. Rate of missing report is equal to the quotient of dividing the number of unreported intrusion events by the total number of events.

Pm= Nm/N * 100 %                           (3)   Here, Nm denotes the number of events not reported.

4)  Rate of correct detection (Pc): Rate of correct detection refers to the probability of  correct detection. Rate of correct detection is equal to the difference between 1 and the sum of rate of false report and missing report.

Pc = (1-Pm- Pf )* 100 %                       (4)

V. EXPERIMENTAL RESULTS The proposed system works in two phases: training and  test phase. Training phase is composed of only the normal activities of the users and is used to find out the patterns of  Severity Policy Lowest Log Low Alert Moderate Abort transaction High Suspend User  Rule Base  Current Data   Matched? Response     the normal activities, whereas test phase helps us to find out the abnormal behavior of the users.

A. Training Phase The database user activities of 5 days are monitored and a rulebase representing the users? normal behaviour is generated by applying the improved apriori on the transaction log. The initial support value considered is 10% and confidence as 25%.

TABLE II.  PRE-PROCESSED LOG         The pre-processed log contains the details of all normal  transactions. The ResourceID represents the database accessed and OperationID represents operation performed on the database by the user. Every database is assigned a ResourceID, e.g. 30 represents Library database. And operationID 2 represents the ?update? operation.

The normal rulebase represents the rules generated after applying the improved apriori algorithm on the pre- processed log. These rules show the normal behaviour of the users.

E.g. ?w^31?3? states that user w normally access database 31 and performs operation 3 (insert) on that.

TABLE  III.  NORMAL RULEBASE          B. Test Phase In test phase we introduced the abnormal transactions  along with the normal transactions and again applied the improved apriori on the log to generate rules. The rules representing the abnormal events are stored in the misuse rulebase.

TABLE  IV. MISUSE  RULEBASE  Rules Uname z^IDS?delete z l^College?select l a^Company?delete a ?. ?.

?. ?.

So we have two rulebases: normal which represents normal user?s pattern and misuse which contains the patterns of the abnormal behaviour. Table III shows few of the generated patterns through the abnormal events. The rules represent the abnormal behaviour of the users.

The current transactions are tested against these two rule  sets. The current activity is first matched with the misuse rulebase to check whether it is matching with the known abnormal condition. If it is not a known intrusion, then it is matched with the normal pattern to check whether it represents a normal activity. If not, then it is a novel attack and it?s pattern is updated in misuse rulebase.

C. Response Policies For every abnormal event a reactive policy is applied  .We ignored initial 25% attempts of the intrusive users by simply logging the transaction just to reduce the number of false alarms. Next 25% attempts were noticed by sending the alert messages about the intrusive activity. If the frequency of the intrusion exceeds the threshold 50%, it comes under moderate severity activities and if we found any intrusion with this range, we are aborting the transaction there itself.

And finally in the high severity intrusive activities, we have those abnormal transactions which have crossed the attack frequency of 75%. Here we are not letting the user to continue with the intrusions any more and we are suspending that user. The user will not be able to perform any kind of operation on the database .The user can get back the access of the database only if the administrator change the status of the suspended user to a active user.

D. Performance Analysis The proposed system (HRDIDS) is compared with the  existing IDS system which is based on the Association rule mining [19]. The performance is tested with three parameters: total detection rate, missing rate and correct detection rate.

Keeping the false rate same for both the systems, the remaining result parameters are shown. The comparison is done with 4 different groups of abnormal transactions: 50, 100,150 and 200.The following table shows the different performance parameters. The shaded part in the following table represents the actual detection rate.

TABLE V. TEST DATA    ResourceID OperationID Uname 31 3 w 25 1 z 29 4 r 29 3 b ?. ?. ?.

Rules Uname Confidence w^31?3 w 0.5 z^25?1 z 1 b^29?3 b 0.9 ?. ?. ?.

?. ?. ?.

Detection Rate Correct Detection Missing Rate Existing System  Proposed System  Existing System  Proposed System  Existing System  Proposed System  92.00% 72% 70% 30% 8% 28% 93.00% 90% 75% 69% 7% 10% 94.67% 95.33% 81.27% 82.67% 5.40% 4.66% 98.50% 99% 90% 91% 1.5% 1%     ? Detection Rate :      Figure 4. Detection Rate   ? Correct Detection :      Figure 5. Correct Detection Rate   ? Missing Rate :   Figure 6. Missing Rate    The result shows that the detection rate is low and the missing rate is high in the initial phase because in the initial phase we have less number of rules in misuse ruleset. As we keep on updating the misuse rulebase with new rules, missing rate decreases gradually.



VI. CONCLUSION The proposed system for the Hybrid Reactive Database  Intrusion Detection finds out the intrusive users and acts  upon them to prevent further intrusions. Our System detects known as well as unknown intrusions and enhances the security by generating more selective and sensitive rules.

This process is made faster by implementing the improved Apriori algorithm.

This model can be enhanced by implementing a trust model for the Database Administrator.

