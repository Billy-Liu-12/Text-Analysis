Association Rule Based Acquisition of  Hyponym and  Hypernym Relation from a Turkish Corpus

Abstract? In this paper, we propose a method for the automatic acquisition of hypernym/hyponymy relations from a Turkish raw text. Once the model has extracted prospective hyponyms by using lexico-syntactic patterns, an Apriori algorithm is applied to eliminate faulty hyponyms and increase precision. We show that a model based on a particular lexico-syntactic pattern and association rules for Turkish language can successfully retrieve many is-a relation with high precision.

Keywords-lexicon; hypernym/hyponym; Apriori algorithm

I.  INTRODUCTION Semantic relations among words have captured the interest  of NLP researchers. The Hypernym/Hyponym relation is one of the main semantic relations. The term hyponym used in this paper refers to the definition that can be summarized as ``hyponym is (a kind) of hypernym'' [1]. Over the years, many studies have been done for semantic lexicon construction.

Hand-built lexicons, such as Cyc [2] and WordNet [1,3,4] are the most popular and useful resources for NLP purposes. These lexicons are widely used and considered here for comparison.

Although these resources are reliable, effective and widely used, developing them can be troublesome and time- consuming. To cope with the problem, many alternative methods have been developed in recent years. In this study, we aim to make a contribution to the field by proposing a fully automatic system for acquisition of hypernym/hyponym relations from a Turkish corpus [5].

Previous attempts [6,7,8,9] used patterns to extract lexical information from Machine Readable Dictionaries (MRDs).

Because of the limitations of MRDs, Hearst proposed automatic acquisition of hyponyms from a large text corpora and became the first to apply a pattern-based method to extract hyponyms from Grolier's American Academic Encyclopedia [10,11]. Several researchers also used corpus-driven pattern- based methods to find hypernym/hyponyms [12,13,14,15,16,17].

Pattern-based methods have also been applied to other web documents [18,19,20]. Recently, many studies have proposed to construct semantic relations by exploiting web documents and wiki pages [21,22,23,24,25].

For the Turkish language, BalkaNet [26] is the first comprehensive project for a multilingual lexical database for Balkan languages such as Turkish WordNet. Although the project has not yet been completed, it has been used as a comparison in other studies. Some studies [27,28] have proposed to construct an automatic Turkish Wordnet and used the T?rk Dil Kurumu (TDK)1 dictionary to extract semantic relationships. Another study used rule-based methods in order to extract hypernym/hyponym relations from a dictionary [29].

In recent years, some studies regarding semantic relation derivation in Turkish from dictionary definitions have been published [30,31]. Most studies on the Turkish language are based on a Turkish dictionary and comparison with BalkaNet.

Our study can be classified as a major attempt at integrating lexico-syntactic patterns for the Turkish language. Once the model has extracted prospective hyponyms by using lexico- syntactic patterns and then eliminated non-hyponyms, shrinking the size of output by applying the Apriori algorithm that is one of the association rule algorithms [32,33]. Although association rule mining is introduced for basket analysis in data mining, it is also widely used in many different domains such as word sense disambiguation [34], automatic query expansion [35], document clustering [36], ontology and semantic relations [37,38,39].

The rest of this paper is organized into three sections. We explain our methodology in Section 2. Implementation details are demonstrated in Section 3 and experimental results and evaluation are shown in Section 4.



II. METHODOLOGY The system takes a given unannotated Turkish corpus of  490M tokens and applies a Turkish pos-tagger to identify the part-of-speech tag and other features of the words. Then, the system applies the most reliable lexico-syntactic pattern to find the hypernyms. For each hypernym, a variety of patterns are used to extract its potential hyponym lists, called transactions, which are passed to the Apriori algorithm. The algorithm generates several rules to discover important relations between    1  Turkish Language Council       hyponyms. In brief, the methodology employed here proceeds in three stages as follows.

A. Extracting Hypernyms and Their Candidate Hyponyms The most precise and well-known acquisition methodology  applied previously by Hearst [10] relies on lexico-syntactic patterns. Starting from the same idea, we firstly determine which hypernyms are chosen. We analyzed the following lexico-syntactic patterns by using regular expressions for Turkish:  ? "(NP) gibi CLASS"  (CLASS such as (NP))  where NP refers to Noun Phrase and CLASS refers to Hypernym. The pattern matches over 200.000 cases from which 500 reliable candidate hypernyms can be compiled and, from them, 17 hypernyms are selected according to their frequency.

Different variations of the same pattern can be used to find candidate hyponyms as follows:  ? "(NP)(, NP)* gibi CLASS" (CLASS such as (NP)(, NP)*),  ? "(NP)(, NP)* ve NP gibi CLASS" (CLASS such as (NP)(, NP)* and NP)  These patterns have a good potential to give a strong indication of an is-a hierarchy. At the end of this process, prospective hyponym lists are determined. The lists will be evaluated as transactions in the following sections.

B. Elimination by Assumption When we examine the instances that are captured from  lexico-syntactic patterns defined above, the output list has many correct hyponyms. However, some incorrect hyponyms are extracted due to parsing and other errors. Another reason for the inclusion of non-hyponym words is that they could be strongly associated with their hypernyms. We need to filter these non-hyponyms out. The objective of this step is to prevent such non-hyponyms from being a member of finally decided hyponym list.

In our reliable patterns, we observed a grammatical rule that real hyponyms tend to appear in nominative case and without any suffix. If a noun appears in the pattern, but is not in nominative case but in accusative, dative, or genitive case, it will be eliminated. This rule is very effective for the Turkish language due to its agglutinative structures and highly productive inflectional and derivational morphology.

C. Elimination with the Apriori Algorithm Although we successfully filtered out non-hyponyms by  applying the assumption above, we can still have erroneous candidates. To discover strong relations between hyponyms and eliminate weak relations, an association rule algorithm, the Apriori algorithm that is inspired by Agrawal [32], is used. The association rule algorithm utilizes assumptions about the domain and the idea that frequently co-occurring terms are semantically related. In this way, association rules can be used to extract semantic relations between hyponyms.

The formal definitions and formula for the association rules used in this paper refer to the definition proposed in Agrawal.

Let I ={i1,i2,..,im} be a set of distinct items and D={t1,t2,..,tn}  be a set of  transactions, where each transaction ti is a set of items such that Iti ? . A transaction ti contains X, a set of some items in I, if .tX i?  The association rule is described as Y,X ? where I,YI,X ?? and 0.=YX ? The rule YX ? holds in the  transaction set D with confidence c if  c% of transactions in D that contain X also contain Y. The rule YX ? has support s in the transaction set D if s% of transaction in D contain  Y.X ?  The problem of association rules mining is to generate all association rules that have a support and confidence value greater than a support threshold (minsup) and confidence threshold (minconf).

In our paper, the transactions are considered as the lines that match patterns above (e.g. ?fruit such as apple and banana?) and the items are each unique noun in the lines (e.g.

?apple?, ?banana?, ?table?). For example, Ifruit={banana, apple, orange, pear, potato, broccoli, berry} is a simple example which shows items for fruit hypernym and the following five transactions are examples of the transaction database for the same hypernym:  t1=banana,apple  t2=banana,pear,orange,potato  t3=apple,pear,orange,broccoli  t4=banana,apple,pear,orange  t5=banana,apple,pear,broccoli  To extract hyponyms, association rules such as pearorange ?  can disclose useful information in order to  predict { } fruitpearorange, ? as an expected result. To eliminate an unexpected result such as { } fruitbroccoli ?  and to explore less observable real relations such as { } fruitberry ?  where berry is one of items in I, is the main challenge of this study.

The process of building association rules can be divided into two steps: to find all frequent item sets whose support are greater than minsup and to discover rules whose confidence is greater than minconf. Weak candidates are expected to be removed by pruning in step one, because the rule implies that frequent item sets automatically satisfy both minsup and minconf.

For transactions above, let the minsup be 0.5 and minconf be 0.7. The resulting rules would be as shown below:  pearorange ?   (conf: 1.0  sup: 0.6 )  applepear ?      (conf: 0.75 sup: 0.6 )  bananaapple ?  (conf: 0.75 sup: 0.6 )    orangepear ?   (conf: 0.75  sup: 0.6 )  pearapple ?      (conf: 0.75  sup: 0.6 )  bananapear ?   (conf: 0.75  sup: 0.6 )  applebanana ?  (conf: 0.75  sup: 0.6 )  pearbanana ?   (conf: 0.75 sup: 0.6 )  To choose an appropriate threshold for both confidence and support degree is crucial to the successful exploration of strong association rules. For the example above, when the minsup value is chosen 0.4, the item broccoli would be also included in the hyponym lists, which is unexpected.



III. IMPLEMENTATION  A. Language Resources In our experiments, we used the BOUN Web corpus and  language resources [5]. They provide a set of language resources for Turkish language processing applications. These include an implementation of a morphological parser based on two-level morphology, an averaged perceptron-based morphological disambiguator with accuracy of %98, and a web corpus of  490M  tokens.

B. Experimental Setup The model takes raw text and finds structure (root, suffix,  pos and other) of the words in the text by using Turkish morphological parser [5]. Each token in the corpus is represented in the form of surface/lemma/pos. We manually selected 17 categories/hypernyms out of 500 classes that the lexico-syntactic pattern based module yields.



IV. RESULTS AND EVALUATION For the evaluation phase, we checked the proposed model  against the 17 selected categories. The first column in Table-1 shows the categories. In order to measure success rate, we semi-automatically extracted all possible hyponyms of all classes. To capture all hyponyms, once several algorithms employing word similarity measurement (e.g. dice, jaccard, chi etc.) has been run to produce as many candidates as possible, then incorrect hyponyms were manually eliminated.

We tested the methodology within 3 different settings. The pattern based procedure called Pattern-1 was used to extract a number of hypernym/hyponym pairs by lexico-syntactic patterns that showed in Section II. This can be considered as a baseline algorithm due to its simplicity. Its output size and precision score are shown in second and third columns respectively in Table I. In a second phase called Pattern-2, the method proceeds by applying the assumption that if an item occurs only once within the patterns, it is suspicious and eventually eliminated, since incorrect items can accidentally appear in the pattern. The fourth and fifth columns of the table represent the output size and the precision score of the second phase. Finally, we tested the Apriori algorithm by substituting it for pattern-2 above. The results obtained by the Apriori  algorithm are shown in the last three columns; the number of output, minsup/minconf value and precision.

Looking at Table I it is obvious that the pattern-2 module outperforms pattern-1. The items appearing once in the pattern tend to be incorrect hyponyms. To check whether those items are reliable or not, we apply association rules to the system.

The Apriori algorithm eliminates non-hyponyms from pattern-1 according to pre-determined minsup and minconf value. For low minsup values, there can exist many frequent sets and also many rules. The result would remain the same as pattern-1 and not make any sense. The essential key is to choose a proper threshold. It is necessary to experiment with different thresholds and observations of results are crucial in this phase.

When we analyze the average precision of pattern-2 and Apriori, they both have higher precision than pattern-1. It is normal because of elimination and reduced size of output. On the other hand, their recall values are low. In order to solve the recall problem, the capacity of the Apriori model can be improved by using low minsup values to find new candidates.

The average precision scores of pattern-2 and Apriori algorithm seem to be the same at a glance. However, the Apriori algorithm outperforms the pattern-2 in terms of production capacity and recall value.  When we look at the total number of items for a comparison, while the former has produces 828 items, the latter gives only 726. It means that the former has better recall on average.

When looking at the hypernyms which have low accuracy in Table I, we face the topical similarity problem. For example, the terms tea and cigarette frequently co-occur as a part of beverage hypernym. The relation is mostly based on topical similarity. They are highly associated and related like the terms astronaut and moon. However they are not siblings and do not share the same type. The main problem described here can be solved within a more fine-grained model.



V. CONCLUSION To disclose is-a relations in a corpus, we proposed a fully  automatic model based on syntactic patterns and association rules. In this study, a most productive and reliable lexico- syntactic pattern was used. We observed that hypernym/hyponym pairs are easily extracted by means of the patterns for Turkish Language. In order to get more precision, we designed some elimination criteria. Methods for the elimination phase can be divided into two types. One type is based on grammatical rules, the other utilizes association rules.

The study succeeded in getting promising results and at the model that gives higher precision. The experiments show that the limited number of pairs with low recall is the main challenge in this field.

The results showed that a fully automated model presented in the paper can successfully discover is-a relations by mining a large corpus. The simplest method for the detection of is-a hierarchy is to apply lexico-syntactic patterns. It can disclose many relations. Secondly, frequency based and rule-based elimination are very useful for the sake of higher precision. We designed an elimination phase and succeeded in getting a better    score. Finally, to get better precision, we exploit the Apriori algorithm. We showed that the Apriori algorithm within the proposed model gives promising results. We implemented and provided a utility program to verify and reproduce the results that we claim.

In a future piece of research, we will design a preprocessing phase in order to avoid the problems coming from polysemy and other factors. We also intend to apply an expansion algorithm to get better recall and productivity. A subsequent step will be to adopt the same principles to different semantic relations such as meronyms or holonyms specifically for the Turkish  language domain.

