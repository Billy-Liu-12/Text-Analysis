<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings  of the 2003 IEEE

Abstract Recent DoS attacks on major e-commerce companies like Yahoo, Amazon.com and eBay have been very successful in disrupting the Internet activity for a considerable period. The popularity of DoS attacks in the hacker-community may be attributed to the vulnerability of interconnected computer systems and the ease with which DoS attacks can be launched over the Internet. Our research focuses on building efficient intrusion detection system (IDS) to achieve high detection accuracy while maintaining low false alann rates.

Data mining techniques have been used for alann investigation for many years. Manganaris et al. [1] mine association rules over alann bursts. Consequently, alanns that are regular with these association rules are labeled "normal". Clifton and Gengo [2] propose episode mining to show the construction of custom-made filtering rules.

Barbara et aI., [3,4] demonstrate the use of incremental data mining techniques to detect anomalous network traffic patterns in real time. Lee and Stolfo [5] propose data mining techniques for feature construction and training of classifiers to detect intrusions. Use of data mining techniques to learn correlation rules from hand-labeled training examples by Dam and Cunningham [6] is worth mentioning. In [7], Moore D. et a1. present 'backscatter analysis' to quantitatively estimate DoS activity on the Internet. Yeung D. Y. and Chow C. [8] model normal network data using a non-parametric density estimation approach based on Parzen-window estimators.

We propose a grid based technique to mine the KDD Cup '99 data. We propose a novel idea of using mixed clustering technique called CLustering In QUEst (CLIQUE) [9] in experiments with KDD Cup '99 data to detect attacks efficiently. Novelty lies in the fact that CLIQUE was never used on network traffic data. The results produced by CLIQUE when evaluated on synthetic data sets improved as the dimensionality of the data increased. Based on these results we assumed that CLIQUE can handle large database 0-7803-8572-1/04/$20.00 ?2004 IEEE 447 of high dimensional network traffic data efficiently.

CLIQUE clustering technique is a combination of grid? based clustering and density-based clustering [9].

CLIQUE's clustering identifies sparse and crowded area in space, thereby discovering the overall distribution patterns of the data set. CLIQUE automatically fmds subspaces of the highest dimensionality such that high? density clusters exist in those subspaces. It is insensitive to the order of input tuples and does not presume any canonical data distribution. It scales linearly with the size of the input and has good scalability as the number of dimensions in the data is increased [9].

Two main reasons for using CLIQUE in our research are: (I) CLIQUE can handle high dimensional data in large databases without requiring the user to specify the subspaces for cluster analysis. (2) CLIQUE showed good results on synthetic data sets as well as real data sets acquired from Insurance companies, department store and    acquired from Insurance companies, department store and bank [9]. Figure I illustrates the schematic model of our approach.

High level description of the algorithm is as follows: input: 10% processed KDD Cup '99 data.

begin end Ilpartilion data space into grid and find the number of points that lie inside each cell quantize ( ); Ilidentify subspaces that contain clusters apriori (); Ilclusters are connected regions of dense grid cells identify_clusters ( ); /Idefine a threshold and label each grid as dense or parse identify_dense_units ()j Iidetennine connected dense units connected_dense_units ( ); //outliers are any points not in a dense cell identify_outliers (); Proceedings of the 2003 IEEE Workshop on Infonnation Assurance United States Military Academy, West Point, NY June 2001 Data space S is partitioned into non-overlapping rectangular units. These units are obtained by partitioning every dimension into ? intervals of equal length, where ? is an input parameter. Each unit u is the intersection of one interval from each attribute.

Qunllzatlun ..... _ ....... _ ... _. __ ., II Normal II .----...., I GtmeratiDg i JDiDim..1 (.I)ver L.....-r--....Jr+" ror th. &lt;Iu.te ..

,--....;.....-.... 1 i I I !

I ; .......... _ .... __ .. ____ ?? 1 Figure 1. Illustration of schematic model of the proposed research.

We propose to evaluate the perfonnance of our algorithm over the KDD Cup '99 data sets in tenns of detection accuracy and false positive rate. KDD Cup'99 data set has 41 features, 9 of which are basic features and the rest are derived features. Derived features are obtained by using domain knowledge and by using a two-second time window.

Basic features can be derived directly from individual TCP connections, making them more relevant to a real time situation. We have used the basic features given in the KDD Cup'99 dataset so that the model can be extended to a real time environment in future. The selected features are shown in a vector fonnat: &lt; Protocol Type, Service, Source Bytes, Destination Bytes, Flag, Land, Wrong Fragments, Urgent, Hot&gt; Figure 2. Illustration of quantization step of the algorithm in a three dimensional space, as a proof of concept.

I 0-7803-8572-1104/$20.00 ?2004 IEEE 448 Figure 2 illustrates the quantization step of the algorithm.

Three features source bytes, destination bytes, and wrong fragments are chosen arbitrarily to visualize discretisation (of features) and quantization step of the algorithm. As a proof of concept, 500 TCP sessions are considered to place them in units. From figure 2, it is evident that all the 500 sessions had a value of '0' for the wrong fragment feature.

For source bytes, 45% (approximately) of the sessions had a value between 200 and 250 bytes, 30% had a value between 250 and 300 bytes. For destination bytes, 80% of the sessions had a value between 0 and 5000 bytes.

We also propose to implement the algorithm on real?    We also propose to implement the algorithm on real? time data by simulating DoS and DDoS attacks with background network traffic generated by Traffic Generator tool, in an experimental network setup at Anomaly Detection And Mitigation (ADAM) laboratory. We analyze and compare our results with other intrusion detection systems in terms of detection accuracies and false positive rates.

