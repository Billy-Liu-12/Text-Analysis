FIM Algorithm for Multi-source Heterogeneous Information in Power Grid  Intelligent Dispatching

Abstract?Power grid dispatching has involved large amount of multi-source heterogeneous data with high complexity, therefore transforming power data into knowledge by data mining is the inevitable trend of intelligent dispatching development. Applying big data technology to power grid dispatching, the analysis model of multi-source heterogeneous data based on big data is built and a frequent itemset mining (FIM) algorithm for processing big data is proposed in this paper. Combining MapReduce programming and combinatorics, the algorithm will scan transaction database once to complete the target frequent itemset mining, and support is changing with no need to mining. The algorithm can overcome the problem of multiple scanning transaction database and low mining efficiency. In this paper, compared with other frequent itemset mining, the algorithm take advantage of Hadoop to deal with fault information transaction database. Experimental results show the proposed algorithm performs well in expansibility and has a little time cost with large transaction database. The method in this paper will provide useful knowledge for realizing intelligent analysis and decision making with comprehensive optimal objectives of accuracy, security, economic, which single data source can?t achieve.

Keywords-power dispatching and control system; Frequent Itemsets(FIs); set theory; Hadoop

I.  INTRODUCTION Smart grid operation needs panoramic state data, and  during the operation, maintenance and management of smart grid massive heterogeneous and multi-state data, namely the big data which the current information focuses on. At present, how to store the big data efficiently, reliably and cheaply and analyze them rapidly is the foundation of smart grid that is self-healing, green, strong and reliable operation. The power grid dispatching and control center is the center of operation data of the power grid, which contains valuable information about the operation and safe production of power grid.

Association rule mining is used to find interesting correlations in big data of power grid dispatching and control system. So we can use distributed mining to process information in dispatching and control system with the technology of big data. Association rule mining aims at discovering implicative tendencies that can be valuable information for the decision-maker. Association rule mining was proposed by R.Agrawal et al in 1993 in the United  States. Starting from a database, it proposes to extract all association rules satisfying minimum thresholds of support and confidence. The whole mining process is divided into 2 sub processes: First, we can find FIs which satisfy the minimum support degree; second, the strong association rules are generated according to the FIs. And the second sub process is simpler, it has given the support count of FIs.

Therefore efficient frequent itemset mining (FIM) is a fundamental and primary problem for mining association rules.

Apriori is the first algorithm proposed in the association rule mining field and famous for discovering a prohibitive amount of association rules in [1]. However a large number of candidate itemsets will be generated and transaction database needs to be scanned many times in the process of mining. To overcome this drawback, FP-growth is proposed by Han Jiawei, and it scans twice transaction database, candidate itemsets will not be produced in the process of mining, so the efficiency of FP-growth has been greatly improved, but for a large number of transaction data, efficiency still needs to be improved. Aiming at limited memory and large scale transaction data, some algorithms are presented in [3],[4],[5],[6], which are based on disk storage, but their operation is complex, and their time complexity is high. A method based on the matrix of FIs mining (FIMM) is proposed with scanning transaction once, its run time is changing without support, but for a large number of transaction data, mining efficiency is not ideal.

In this paper, a method of FIs mining based on big data (FIMBB) is proposed, it combines set theory and the Combinatorics in distributed way. It only needs to scan transaction database one time and transfer transaction data to FIs waiting for mining. The proposed algorithm is designed for big data in dispatching and control system. And the whole process with the idea of distributed and parallel has largely improve mining efficiency.



II. THE ANALYSIS MODEL OF MULTI-SOURCE HETEROGENEOUS DATA BASED ON BIG DATA IN POWER  DIAPATCHING AND CONTROL SYSTEM With the rapid development of smart grid, more and  more dispatching relevant systems and the accumulated data will make the correlation of original systems become stronger. The main idea of dispatching and control system based on big data is that we can extract and integrate a wide   DOI 10.1109/CyberC.2016.27    DOI 10.1109/CyberC.2016.27    DOI 10.1109/CyberC.2016.27     range of multi-source heterogeneous data with the appropriate big data tools, according to the unified standard for storage, then we can analyze and process the storage data with data analysis techniques in order to obtain valuable knowledge, finally, new intelligent applications are formed according to the new demand of smart dispatching and control system. The primary difference in analysis method between big data and traditional research method is: the big data of dispatching and control system need to process a large amount of semi-structured data and unstructured data, every aspect of the entire process will use parallel processing with Hadoop, MapReduce. Based on the above content, this paper establishes a analysis model of multi-source heterogeneous data based on big data shown in Figure 1.

Heterogeneous data source  layer  Data analysis  layer  Unified data model based on subject  SCADA WAMS OMS GIS EMS  Data storage framework  Hierarc- hical  storage HDFS cloud storage NoSQL  Data process framework  Hadoop MapReduce  Cloud computing  ETL  Data integration technology  Data mining  clustering classification association forecasting  Equipment foundation  data warehouse  External environment  data warehouse  Real-time measurement  data warehouse  Alarm data  warehouse  Load forecasting  Disaster warning  Wide area Optimal  scheduling  Cascading outage mode  Intelligent applications   Figure 1. The analysis model of multi-source heterogeneous data based on  big data  The whole analysis model of Figure 1 describes the process of transforming the data in the dispatching and control system into the useful knowledge for scheduling management and decision-making. It breaks the information isolated island between the systems in power dispatching and control system, which is the inevitable trend of the development of intelligent dispatching in the future.

In the heterogeneous data source layer, SCADA, WAMS and other systems will produce huge amounts of data, these data types are complex because of different systems in dispatching and control system in [9]. SCADA is Supervisory Control and Data Acquisition, WAMS is Wide Area Measurement System. First, we can extract and integrate the data from data source for the purpose of extracting entities and relations helping unified structure store the data. In order to guarantee the quality and reliability of data, ETL (Extract Transform Load) is used to extract and integrate data. NoSQL database technology is a distributed data storage, which removes the relational characteristics of relational database, therefore data storage is simplified and more flexible, and it has good scalability, solves the problem of massive data storage. Based on cloud computing, to achieve reliable storage and fast parallel processing, ETL,  data mining and other data analysis techniques are used to the storage data, multi-source heterogeneous data in power dispatching and control system has formed a subject oriented, integrated of panoramic data, such as alarm data warehouse, so it can provide comprehensive data sharing for power system. Combining the internal and external data of various types of power grid and the corresponding control business data, the new intelligent dispatching scenarios are formed.

The association analysis in dispatching and control system has a wide range of applications for big data. We can collect data from SCADA with big data technology, the data consists of steady-state data protection and recorded fault data, alarm data, the PMU data, GPS time data and meteorological data. Above data is used to analyze for the correlation analysis for preventing fault, fast fault recovery, so the reliability of power grid has been improved.



III. FIMBB ALGORITHM  A. Algorithm Idea Let 1 2{ , , , }nI i i i? ?  be a set of literals, called items.

Let 1 2{ , , , }mT T T T? ? be a set of transactions over I .?  1 2{ , , , }k qT t t t? ? ?is a transaction record in T , i kt T? ? , so  it I? ? , in short, all items in transaction records are from transaction database. Let kT ?be items set in each transaction record. Let I ?  be all items in transaction record from transaction database items, apparently, kT I? ? ? .? Suppose  kT ?? ? , so the total number of elements in kT ? is 2 q , q  is  the total number of elements in kT .?The element? in kT ? is the FIs to be mined, for an itemset, the number of items is called length of the itemset and an itemset of length k is referred to as k-itemset. For example, ? 	1, 2,3, 4I ? , the combination result of I is  ? 	' 1, 2,3,4,12,13,14,23, 24,34,123,124,134,234,1234I ? .?If ? 	1,2, 4kT ? , then we obtain? ? 	' 1, 2, 4,12,14,24,124kT ? ,  ' kT is a subset of I ? .? Own to? massive transaction database  of power grid dispatching and control system, the main idea of MapReduce is we can distribute the data to different data nodes and start some map and reduce process for data processing, so as to achieve the purpose of fast processing. The overall framework of FIMBB is shown in Figure 2. Figure 2 describes the process of Map and Reduce.

The process of Map is divided into four steps:  Read dispatching and control system information  transaction data record by the order.

Adjust the internal order of transaction record  according to the natural sequence of transaction records.

Make a combination of internal items adjusted by above step.

Output the combination of records such as a form of ,Key Value , Key is the combination of records,  Value is 1.

Mapper  Reading transaction record  Adjusting items according to natural order  Combination of itemsets  Outputing <Key,1>  Mapper  Reading transaction record Adjusting items  according to natural order  Combination of itemsets  Outputing <Key,1>  Reduce  Inputing <Key,Value>  reducing<itemset record>  Reduce  Inputing <Key,Value>  reducing<itemset record>  Outputing frequent itemsets   Figure 2. The overall framework of FIMBB  In the phase of Reduce, the output of Map is used as the input of Reduce and the count of the same itemset is combined. The number of times that the item appears when the item set is non empty, the support count is calculated. If the support satisfies the support threshold, the itemset is output.

B. Realization of Algorithm In the phase of Map, the transaction records are stored in  the string array named Strings after adjusting the order of transaction records, besides we can make a combination of the internal items of transaction record. We can construct a function according to the combination. the idea of combination algorithm is to build an array called b, the length of data is the number of the array, the Top N is 1, N is the number of data, then according to the subscript array data, from left to right we can scan array element value of "10" combination, find the first "10" converted into "01" combination, at the same time, move left of all "1" to the array of the left, "0" moved to all "1" to "01", when b array of N elements are 1 combination, it is completed. The process of Map is: First of all, the transaction data is converted into a unified format defined by program, the upper limit of the number of items in FIs is determined, each data record satisfied the upper limit of combination transaction is output as ,Key Value  after reading each transaction data processed.



IV. EXPERIMENTAL RESULTS In this section, some of the experimental results obtained  using Hadoop are presented. Note that all FIM algorithms in this paper considered have been implemented. In order to test the effect of FIMBB algorithm, the artificial random fault data of power grid dispatching and control system such as Data file( 10 different information items, transaction data  from 1000 to 200000) is used to make an experiment of FIMBB compared with FIMM and Apriori. FIMBB algorithm has been realized on the Hadoop, specifically, two machines fitted with CPU running at 1.6GHZ, with 2GB of RAM, one machine fitted with CPU running at 1.2GHZ, with 1GB of RAM. These three nodes use Gigabit Ethernet card and connect with the laboratory switch, so it is in the same local area network, the Hadoop version is 1.2.1. FIMM algorithm operating environment is a personal notebook fitted with Corei3 CPU running at 2.53GHZ, with 6GB of RAM. The experimental results are shown in Figure 3 and 4.

0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5         Support  Ti m  e( Se  c.

)  FIMBB FIMM Apriori   Figure 3. Running time with support changing  0 500 1000 1500 2000 2500     Transactions  Ti m  e( Se  c.

)  FIMM FIMBB Apriori    Figure 4. Running time with the number of transaction data changing  Figure 3 shows a contrast for run time of Apriori, FIMM and FIMBB with a range of support thresholds in the same amount of transaction data. The results demonstrate that the time of FIMBB and FIMM is not affected by support threshold. However the running time of Apriori and the change of support threshold have a great relationship,     because with the increase of support, the number of candidate itemsets generated by Apriori becomes small, and the number of FIs becomes less. Figure 4 shows that the running time of the 3 algorithms under different transaction data sizes, the results show the running time of FIMM is linear with the size of transaction data. When the number of transactions is less than 600, the running time of the FIMM is less than that of the FIMBB, and the running efficiency of FIMBB is significantly higher than that of FIMM when the number of transactions is greater than 600. The reason for this is that the FIMBB of the preparation time of the parallel operation environment and the communication time between nodes constitutes a large proportion of the running time, FIMBB has obvious advantages when the transaction data is large. The efficiency of Apriori is significantly lower than the other two algorithms when the number of transactions is large. The reason is that the amount of transaction data is greater, Apriori will produce a large number of candidate itemsets and the original database needs to be scanned repeatedly, so it consumes more time. The speedup ratio of FIMBB with different transaction data is shown in Table 1.

TABLE I. THE SPEEDUP RATIO OF FIMBB  The number of machines  The speedup ratio of FIMBB  1000 10000 100000 200000  2 1.14 1.27 1.33 1.35  3 1.12 1.71 1.76 1.82  It is known that the ideal speedup ratio of 2 and 3 machines 2 and 3. Table 1 shows that there is a gap between the speedup and the ideal speedup. The main reason is that the performance of one machine is much less than that of the other two machines. In addition, the speedup is calculated as R .

q 1  s 2  T c R  T c ?  ? ?  (1)  Let qT  be the time cost of computing cluster, sT  is the time cost of single computer. 1c is the system overhead of qT , and  2c  is the system overhead of sT . If the transaction data is increased, the time cost of the algorithm increases, then the speedup ratio is only related to the ratio of qT  and sT . In conclusion, With the increase of the amount of transaction to be analyzed, FIMBB is better and faster than other two algorithms. It has good expansibility and is suitable for the mining of FIs in big data of power grid dispatching and control system.



V. CONCLUSION In this paper, we proposes FIMBB algorithm which is a  FIM algorithm for mass data of power grid dispatching and control system. It combines the theory of Combinatorics and MapReduce, and we can get all FIs by scanning transaction  database once. In the process of mining, it can save a lot of time and improve the efficiency of mining algorithm. In the combination of FIs mining, it does not need to prune and join, so the candidates of FIs are not produced. In the step of Reduce, we can obtain FIs that is satisfied with the minimum support threshold according to the value of support. Mining results are not affected by support threshold, when the support threshold changes, it is not re-mining. Experimental results show that FIMBB for the transaction database of power grid dispatching and control system has very high mining efficiency and operating speedup, it is of great significance for the future development of smart grid and dispatching and control system.

