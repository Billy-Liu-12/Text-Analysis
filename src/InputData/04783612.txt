A Trust Model in Pervasive Computing

Abstract  Security and privacy is a big problem that feazing computer researchers all along. In the pervasive computing, because the traditional methods of user authorization and access control are no longer adapted, the security andprivacy becomes much more difficult to ensure. This paper proposes a dynamic trust model based on P2P. In this paper we call the trust model PDTM The model adopts the technique of automated trust negotiation. Compared with those models existing, our trust model can fit the environment of pervasive computing even more. And it can resolve the problems well that the entities' ubiquitous and mobile brought about.

Keywords: Pervasive computing, PDTM, Automated trust negotiation, Dynamic trust model.

1. Introduction  Along with the applications of pervasive computing becoming more and more extensive day by day, the requirement for pervasive computing expands more.

The research of pervasive computing has turned into a research keystone and a hotspot in current computer industry. In the same time, because of characteristics of the pervasive computing environment such as the dynamic, uncertain and ubiquitous etc. has brought new challenges for computer network's security.

For pervasive computing environment, a typical character is that every entity is autonomous. Thanks to the work demand among entities, they often need to move the workplace continually. And the relationship among entities is established randomly, and the entities may also be required to deal with the requests from the other entities which they know nothing before capably.

Entities in the pervasive computing environment are required to be able to make out the corresponding judgments to the trust from claiming entities automatically and make out the corresponding disposals to the action of request synchronously. But all these problems can not be resolved directly by the present trust models in PKI.

The most popular PKI is defined by the IETF's PKIX working group [1], which defines a security system used for identifying entities (users and resources)  through the use of X.509 identity certificates [2]. In this PKI, highly trusted entities known as certificate authorities (CAs) issue X.509 certificates where essentially a unique identity name and the public key of an entity are bound through the digital signature of that CA. As a trusted third party, the CA can be used as an introducer: through the proof of private key possession and the validation of the CA's issued X.509 certificates, entities are able to associate a trusted, unique identity name with the communicated claims and statements of others. X.509 trust model is a kind of model used to authenticate with strict trust hiberarchy. In this structure, every entity has an identity card signed by center CA or other CA which can be verified directly or indirectly.

It's supposed that these CAs were organized to global uniform CA tree structure in the model, and every local CA can link to this CA tree. This kind of model is based on the centralized control on every domain, so it is not suit to the applications in pervasive computing environment which is lack of centralized management domain.

Phil Zimmermann established Pretty Good Privacy (PGP). PGP trust model is one kind of trust model taking users as centre. It has no centralized or hierarchical structured CA, and every user decided which certificates could be trusted themselves. PGP adopted the policy "trust introducers" to evaluate a user's reliability. But this model only support very limited trust policies, and the users can but define the user entities that can be absolute trust or partial trust and define the restriction policy "How many recommendations are needed from credible presenters could ensure a new user were absolute trusted or partial trusted" themselves. What the matter of this model is that an introducer is believable or not as well as the credible degree is defined completely by users themselves. So that trust evaluation depends on the users' action and decision-making capability, and the trust result gained is static. Besides, PGP's way of issue private keys and the meshy trust relationship taking users as centre is not flexible enough to face thousands upon thousands users.

In order to overcome the PKI system's (based on

X.509) localization on the aspect of certificates authorization and its excessive complexity, SPKI was proposed. SPKI described a simpler and more applied PKI than the traditional PKI. The object of SPKI is that to propose a kind of simple, easy realized and executive certificate format and conjunction protocol, and  978-1-4244-2020-9/08/$25.00 02008 IEEE  - 370 -    implement creditable authentication and authorization at the same time. SPKI suggest using public key as entity's global sign. It through authorized certificate and permit further the right delegation to realize the flexible authorization mechanism. But how to control the right delegation is a problem [3].

With a view to those models' disadvantages introduced above, this paper proposed a dynamic trust model based on P2P. In this model, every entity has a trust agent, and the trust authentication among the entities is transferred to carry through among agents. So the P2P here is not the real P2P, and we call it pseudoP2P. This model established trust relationship based on entities' attributes, and it also considered the context information. This paper is organized as follows: In Section II, we will introduce the structure of our trust model and describe the design ideology and implement policy particularly. We will analyze the advantages of our model in Section III. In Section IV, the model will be simulated and we will analyze the experimental results. Future work will be given in Section V. The conclusion is also given in this section.

2. The trust model ofPDTM  present the steps in detail in the following section. In the pervasive computing environment, entity can be a Personal Computer (PC), and it also can be an embedded equipment, and it can be a kind of software too. In this model, the entities' agents act by servers.

Here, all the trust we said is the static trust based the entities' attributes. The context information decides the dynamic trust.

automated trust negotiati  -e CE  C)  Entity a  2. request  6. serve  C-  Entity b  Figure 1. The structure of the trust model  2.2. Set up the trust  In 2000 year edition, X.509 defined the trust (X.509, 3.3.54): Generally, if an entity assumes another entity would be behaved exactly as it anticipated, we say that it trusts that entity. The height of trust grade is denoted with Trust Value (TV). Trust Value is the trust degree that one node can complete the task what it is expected to. It is the measurement to trust relationship. And the Trust Value is diversifying between [0, 1].

To any entity E, E Entity, it has the attributes: a1, a2 a3, ..., an, a, E Attribute. And the attribute set of E,  denoted as: A(Ei)=(a1,a2,...,a,1). The context information is denoted as C. To Ei and Ej, the direct trust value of Ei to Ej is denoted as: T= (Ta, Tc), where Ta denotes the trust value is produced by the entity's attributes and Tc denotes the trust value is produced by the entity's context information. Ta is the static part of the TV which we call it static trust value. Once confirmed, its value will not change. Tc is the dynamic part of the TV and we call it dynamic trust value. It changes along with the context information's change.

2.1. The structure ofPDTM  The structure of our trust model is shown in figure 1.

Now, we present this structure for you simply. In the model, every entity has its own agent, and the entities submit their attributes to their agents at the time of initialization. The calculation of the static trust value is transferred to the agents. The calculation of the static trust value is carried through among the agents through trust negotiation. Then, the results return to the entities from their agents for the entities themselves do the decision. All process is divided to six steps. We will  2.2.1. Build the static trust  Automated trust negotiation (ATN) [4-6] is an accessing control way to establish trust relationship among strangers. This is carry out through uncover the digital certificates to the other side step by step. In automated trust negotiation, the trust relationship among strangers is established by the exchange the information of participants' attributes and this is realized through uncover the digital certificates. Besides, the negotiation process do not need the third part participate in. The accessing control policies decide to uncover which certificates and the order of uncovering certificates in the process of automated trust negotiation.

Our model adopted this technique. In our model, we build the primary trust based on entities' attributes through automated trust negotiation. The digital certificate is realized by the X.509 certificates.

As figure 1 shown, the process of building the static trust among entities is as follows:  1. Entities submit their attributes trust certificate to their agents.

2. Entity a has request to entity b.

3. Entity b submits the trust query to its agent. The  query contains the accessing control policies of entity b that it need for offering the service, i.e. what attributes entity a must be have if it want to access the resource of entity b.

4. The agents of entity a and entity b gained the trust result through automated trust negotiation.

5. The agents return the trust result to their entities.

6. The entities make a judgment according to the  result. If the result answers for their rules, they provide the service.

- 371 -    The trust negotiation between agents is carried out through uncover the digital certificates step by step. We suppose an example like this: [7] Online bookshop B offers 700O discount for some college students and visitor A asks for the discount. In this example, the online bookshop B has nothing about the visitor A before. The security policy of the online bookshop B is that he gives the discount to the college students only, so the bookshop B asks for the visitor to bring forth the student number of the college and the trust certificate of the bank credit card ID. The security policy of visitor A is that he only offers his credit card ID to the member of Bank of China, so after visitor A provided his certificate of the college student to bookshop B, he asks for B to show the certificate of the member of Bank of China.

After bookshop B brought forth his certificate, visitor A would show his certificate with credit card ID. The process of automated trust negotiation is shown as figure 2.

A B  policy (student and credit card ID  policy (member of Bank of China  certificate (student) >  policy (the member of Bank of China)  policy (credit card ID)  Figure 2. The process of automated trust negotiation  2.2.2. Build the dynamic trust  In the pervasive computing environment, the dynamic trust relationship among nodes is decided by the context information. Context is all kinds of factors in the computing environment including itself that may bring influence to the process of inter-accessing [8].

The context in pervasive computing environment can be sorted into three kinds approximately: environment context that contains the factors such as position, speed, and time and so on, facility context that contains the device characteristics such as bandwidth of network, screen size and so on, and user context that contains operational habits, personal fancy and individual demand and so on. That's a quite complicated process to apperceive the context. We usually use the structural model with multilevel and hierarchy to apperceive the environment and facility context, where the data sources are all sorts of physical or logistic sensors. To obtain the user context is most difficult, and the apperception to them is essentially a user's learning process based on the accumulation of time of the  previous interactive process, i.e. historical context. This study can use rule-based algorithms for the simple application systems, while for those complicated application systems it need to use corresponding algorithms in artificial intelligence.

In order to simplify our model, we just take the environment context and equipment context, which are provided by sensors and sensing modules in the system.

Implement the trust evaluation of context information: Tc=h(C), where C stands for context information and Tc denotes the dynamic trust value. Because different nodes have different resource trust policies, so we don't uniform the method to evaluate in the model. Different nodes can design different methods of evaluation according to their own trust policies.

3. The analysis of the model's merits  3.1. Compare with other trust models existing in pervasive computing environment  Reference [12] expanded the concept of trust from network security to propose a trust model for pervasive computing, but it just only introduced the context information into the system simply.

Reference [ 1 3 ] reviewed the two maj or recently-used trust model (X.509 and PGP trust model) and their problems. Then with the knowledge of uncertain probabilities and character in ubiquitous computing, it presented a trust model based on the attribute credential, a new trust model in ubiquitous computing. But it didn't give the composition of attributes clearly, and it didn't show how to build the trust either.

Reference [7] combined attributes with context information in its trust model which can meet Lamsal's trust modeling requirement of pervasive computing. But this model also has some shortness. To illustrate, the calculated amount is overload in building trust relationship among entities.

3.2. The merits ofPDTM  Compared with the models in literatures [3] [7] [12] [13] [14], our model has the following advantages:  (l)the introduction of the agent The trust computing between nodes is transferred to agents to carry out, and agents implement the calculation through automated trust negotiation. The process needs no participation of the third party, which embodied the idea of P2P.

(2)distributed computing The computing tasks are completed both by nodes and agents, and agents take the most. This distributed computing is quite suitable to the small embedded devices in pervasive computing environment whose computing ability is poor.

(3) independence of trust choice In the model we proposed in this article, different nodes can select different assessing method according to their own  - 372 -    policies while evaluating the dynamic trust, which reflects a certain amount of autonomy.

4. The experiment of simulation  Experimental environment: Linux 4.1.22, J2EE, Java We choose TOSSIM as the simulator. For the  introduction of TOSSIM, please refer to literatures [9- 11].

For the sake of simplicity, it only refers to the establishment of static trust in our experiment. This experiment simulates the establishment of trust relationship among 100 nodes, and the status of successful establishment of trusted relationship is illuminated through the resources request success or not. Still for the sake of simplicity but not missing reality, we arrange two agents and make every 50 nodes to share each agent. We also simulate the traditional method, the results of the experiment are shown in figure 3 and figure 4.

-4our model traditional model  101%41<100%99%98%97%96%/ 95% -  0 20 40 60 80 100 120 node number  Figure 3. The success rate of establishing trust relationship  Figure 4. The amount of time consumed  Figure 3 shows the success rate of establishing trust relationship among nodes both in the model putting forward in this article and in the traditional model.

Apparently, our model is superior to the traditional model with its success rate remaining at over 98% while the nodes increasing.

Figure 4 shows the experimental result of the amount of time consumed while different number of nodes request resources successfully. We test our model and the traditional model separately, and the test only refers to files download. In the test, every node requests resources only once, and the providing nodes produced randomly. The result shows that the amount of consuming-time is almost of no difference in the both  models while nodes are few. But the gap becomes increasing obviously with the nodes increasing.

The experiment proved that the model putting forward in this article is superior to the traditional model either in validity or in efficiency.

5. Future work and conclusion  According to the characters of pervasive computing, this article proposed a dynamic trust model based on P2P. The model established the static trust relationship among nodes by automated trust negotiation first, and then established the dynamic trust relationship combining the context information, and it introduced the mechanism of agent to distribute computing tasks.

Compared with the existing models, this model can better adapt to pervasive computing environment and can better solve the security problems caused by mobility, ubiquitous distribution of entities etc.

Currently, pervasive computing becomes a hotpot in academic research, and the security study in pervasive computing has a more practical significance. In the future work, we will study the techniques of attributes' composition and information's safe exchange to further improve the model.

