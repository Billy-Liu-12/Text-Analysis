Ma$$ive ? An Intelligent Mobile Grocery Assistant Sourav Bhattacharya?, Patrik Flore?en??, Andreas Forsblom?, Samuli Hemminki?,

Abstract?We present Ma$$ive, an intelligent mobile grocery assistant that provides support for the customer during the entire shopping process. To guide the design of Ma$$ive, we conducted a user study that explored customer preferences regarding fea- tures in a mobile grocery aid. We first describe the study and its results, after which we introduce the design principles and design of Ma$$ive. We also describe the features that Ma$$ive supports and discuss functionalities that we are integrating into Ma$$ive.

As part of the discussion, we describe technical challenges that we have encountered during our development efforts.



I. INTRODUCTION  Grocery shopping is one of the most fundamental everyday activities, as almost everyone shops for groceries on a reg- ular and frequent basis. The fundamental nature of grocery shopping combined with large business potential makes it an interesting domain for developing and deploying novel pervasive and mobile computing technologies.

Grocery shopping is a relatively complex and stressful activity. The complexity and stressfulness arise from diverse sources such as time and budget constraints, crowding, adver- tisements and the behaviour of other customers [1]. To reduce stress and to make the shopping experience smoother, most customers plan the shopping activity, both before going to a store and while inside it [2]. Pervasive and mobile technologies can reduce the complexity and stressfulness by facilitating planning and supporting dynamic adaptation of plans during the shopping activity.

For most customers, planning the shopping event involves creating either a written or a mental shopping list. Consumer studies have shown that between 50% and 75% of customers create a written shopping list for major shopping visits and the majority of the remaining customers create a mental shopping list [2]. Shopping lists have numerous functions.

Among other things, they are used as external memory aids, as a tool for budgeting and as a way to efficiently organize the visit to the store [3]. In terms of design, the central role of shopping lists implies that pervasive and mobile technologies for retailing should support the use of shopping lists and practices surrounding their use. However, it is also important to note that shopping lists are not rigid plans that determine how the shopping event unfolds. In fact, customers typically purchase two to three times more items than what are included  on their shopping lists [4]. Accordingly, retailing also provides opportunities for facilitating the exploration of alternatives and for helping to find potentially relevant and interesting items.

Grocery shopping is closely linked with social functions and roles. For example, studies in western countries have indicated that wives tend to contribute more to shopping lists than hus- bands [5]. However, within families shopping lists are typically created collaboratively and most family members contribute to the process [6]. Pervasive and mobile technologies for retailing should not undermine family roles, and they should support existing collaborative processes among the family members.

In this paper we present Ma$$ive, an intelligent mobile grocery assistant that focuses on supporting customers dur- ing all stages of the grocery shopping process. To support prevailing shopping practices, Ma$$ive has been designed around a shopping list paradigm, where customers create shopping lists using free-form natural language. Ma$$ive has been constructed in collaboration with a large Finnish supermarket that has been instrumented with additional WiFi access points to enable positioning, and from which we have received anonymized shopping basket data to support personalization. To determine which functionalities to include in Ma$$ive, we conducted a survey study in a large national supermarket in which we explored customer preferences for potential features in a mobile grocery aid. We describe the study and its results in Sec. III, after which Sec. IV describe the design and current features of Ma$$ive. We also describe some functionalities that we are currently working on and discuss technical challenges that we have encountered during our development efforts.



II. RELATED WORK  The design of grocery aids can benefit from investigations of shopping practices. Newcomb et al. [7] conducted in-store interviews and questionnaires that studied customers? shopping habits and attitudes towards ubiquitous retail solutions. The authors found that shopping lists play a central role in grocery shopping and that customers prefer grocery aids they can use on their personal devices. Features that facilitate shopping list creation and management were considered to be the most important. Customers also valued systems that help them locate products with aisle-level accuracy, provide itemized   DOI 10.1109/IE.2012.21    DOI 10.1109/IE.2012.21    DOI 10.1109/IE.2012.21     pricing and inform about special offers. Features that provide product or health information were considered least important.

Tamura et al. [8] used participatory observation combined with pre and post interviews to analyze customers? shopping behavior in Japan. Their study indicated that grocery shopping consisted of three phases, each of which has a specific pattern.

The three phases correspond to selecting items for the main dish, the side dish and replenishing items that are lacking from home. However, these findings are of limited use in our setting, as the Japanese shopping and eating habits differ significantly from those in western countries. A focus group study by Roussos and Moussouri [9] indicated a need to carefully design systems that gather and analyze customers? shopping data, in order not to raise concerns about the loss of privacy. The study also revealed that participants feared that automatically generated shopping lists could have a negative effect on the everyday household routines and responsibilities within the family unit.

A number of prototypes of pervasive shopping aids for supporting grocery shopping have been proposed in the lit- erature. These range from instrumented shopping carts to applications that run on a PDA or a mobile phone. An example of the former is the MyGrocer system, which uses RFID-based product identification to monitor which products the customer has selected and provides special offers and information about the total price of the current shopping basket [10]. Other examples of instrumented shopping carts include [11], [12].

An example of the latter is the Easi-Order system, which has a list-based personalized recommendation system, letting the users place grocery orders remotely and fetch them later on from the supermarket [13]. Recommendations have also been considered in other systems. For example, Lawrence et al. [14] make recommendations by matching the customer with a cluster of similar shoppers. The iGrocer system, on the other hand, adapts its recommendations based on the customer?s purchase history and preferences selected from a menu [15].

Another common feature has been a map that can guide customers to the products of interest, usually listed in a digital shopping list [10]. In addition to pervasive shopping aids that support grocery shopping, various pervasive shopping aids that focus on malls or other retail domains have been proposed in the literature; see, e.g., [16]?[19].

Ma$$ive, the system presented in this paper, offers features that have not been considered in previous shopping aids. First, in Ma$$ive, shopping lists are created using natural language, and recommendations are based on the user?s current shopping list entries instead of relying on the customer?s purchase his- tory. To avoid undermining family roles, the recommendations in Ma$$ive focus on facilitating the exploration of products instead of automating tasks. Secondly, Ma$$ive combines rec- ommendation techniques with positioning to enable location- aware information delivery.



III. EXPLORATION OF USER NEEDS  To guide our design, we have conducted a survey study that investigated which features customers consider important  in a grocery aid running on the customer?s mobile phone, and how demographic variables or shopping habits influence these preferences. The study was conducted within a large supermarket, reaching 45 responses. The survey design was informed by an earlier study by Newcomb et al. [7], which also investigated shopping habits and preferences regarding features in a mobile grocery aid. However, whereas Newcomb et al. analyzed shopping habits and customer preferences separately, as part of our study, we also investigated how demographic factors affect the customers? preferences for grocery aid features.

A. Questionnaire  The questionnaire that was used in the study consisted of two parts. The first part surveyed participant demographics: age, gender, grocery shopping frequency, number of people in the household, ownership of a customer loyalty card for the target supermarket chain, mobile phone ownership and its use for text messaging and note-taking, and the medium (paper, mental, electronic) of shopping lists. The second part of the questionnaire consisted of a list of potential features for a mobile shopping assistant. The participants were asked to rate the importance of each feature on a seven-point Likert scale (1 = not at all useful, 7 = very useful). To compile the list of features, we conducted a literature review to identify features that have been part of existing shopping assistants.

Only features that could be implemented on contemporary mobile phones without additional hardware were included in the questionnaire. The literature review resulted in twelve features, and five additional features were included after an internal brainstorming session; see Table I the features that were considered.

The survey was carried out within a large national super- market. Potential respondents were approached inside the store and asked to fill in the questionnaire in paper form (2 pages).

Participants were rewarded with coffee and cake for their participation. The responses were collected during a four hour interval around lunch time on two consecutive weekdays. In total we collected 45 valid responses.

The participants ranged in age from 18 to 84 years (mean = 47, ? = 18) and were of an almost equal number of males (24, 53%) and females (21, 47%). Before analysis, we clustered the participants into age groups of approximately the same number of participants. With the exception of the oldest participant, everyone owned a mobile phone. 31% of the participants used their phones for tasks other than voice calls and text messages.

Only one participant had used his mobile phone camera while shopping. 31% of the participants rarely typed on their mobile phones, 20% typed 1?4 times a week, and 49% typed more often. 31% of the participants had children, and 82% had the supermarket?s customer loyalty card.

The results indicated that customers shop frequently for groceries. 91% of the participants said they shop for groceries at least twice a week, 71% said they shopped at least three times a week, and 51% shopped at least four times a week.

Most participants used some form of shopping list to support     their shopping activities. Specifically, 89% of the participants said they used some form of shopping lists to support their grocery shopping activities. 71% of the participants used written shopping lists and 78% of the participants used men- tal shopping lists. Accordingly, only few participants relied exclusively on one type of shopping lists.

B. Importance of Shopping Assistant Features  The responses are presented in Table I in the order of their mean ratings. They indicate a clustering of features into three groups: features that facilitate budgeting and time usage, features that facilitate basic shopping tasks, and supplementary features. The ranking of feature groups was stable, i.e., the features? importance ranks varied solely within the three feature groups and not across them. The only exception to this rule was the automatic checkout feature, the rank of which was different in different age groups. Participants aged between 18 and 25 considered automatic checkout (mean 6.86) more important than other participants (mean of other age groups combined 3.73), ?2 = 16.49, p < .011.

Participants considered features that facilitate budgeting and time usage most important. Female participants were more interested in price-related features than their male counterparts, as both product price information (?2 = 7.99, p < .01) and special offers (?2 = 6.01, p < .05) were considered more important by females (mean 6.44 and 6.28) than by males (mean 5.05 and 4.80). The possibility to compare prices of similar products within a store was considered more important by participants with no children (mean 5.24) than by those with children (mean 3.92), ?2 = 3.98, p < .05.

Features that facilitate basic shopping tasks, such as finding products or recipes, paying or examining product information, were considered the second most important feature group. The possibility to create a shopping list was generally perceived as important, whereas responses to other features within this category contained more variation. First, as noted above, we found the age group of the participants to influence their preferences regarding automatic checkout. Second, product information (?2 = 9.31, p < .01) and shopping basket health information (?2 = 6.62, p < .05) were considered less important by participants with children (mean 2.54 and 3.00) than by those without children (mean 4.36 and 4.80).

Supplementary features (i.e., features 14?17 in Table I) were considered least important. Participants aged between 18 and 25 were more interested in supplementary features than other participants. Especially recipe recommendations were considered more important by this age group (mean 4.29) than by other age groups (mean of other age groups combined 2.63), ?2 = 10.24, p < .05. Participants over 65 years old were most critical towards supplementary features. Especially recipe related features were not consider important by them (mean rating 1.14 for both recipe recommendations and recipe search). Participants with children (mean 1.92) found product  1The significance tests have been carried out using Kruskal-Wallis one-way analysis of variance, where we have adjusted the ranks for ties.

recommendations less useful than participants with no children (mean 3.60), ?2 = 6.88, p < .01.

Thus, interestingly only the participant?s age, gender or whether the participant had children were found to have a sta- tistically significant influence on the customers? preferences. In addition, we found no evidence that the customer?s familiarity with mobile technology would influence the preferences.

C. Design implications  The results indicate a strong preference for price-related information. Presenting exact product price information is not in the business interests of retailers as it could improve cus- tomers? price knowledge, thus enabling them to better compare prices across different stores. However, there are other ways to support price consciousness, e.g., by making special offers prominently visible or by providing recommendations of items that have attractive prices.

In the second feature category, the dominant aspect is the large variance of the respondents? evaluations. This implies that the practices of individual customers vary and call for different functionalities. In our design we have prioritized a small set of core features that the majority of respondents found important. However, to cater for differing individual practices, we have also provided users easy access to a wide variety of supplementary features. The preferences for the supplementary features depend to some extent on demographic variables, whereas the preferences for the core features were generally stable across all demographics .

Similarly to consumer studies on shopping list usage, our survey indicated that a large proportion of customers use shopping lists. Motivated by this finding, we have designed our shopping assistant around a shopping list paradigm where the shopping list serves as an entry point for users to access different resources that help them to carry out their everyday shopping practices.



IV. MA$$IVe  This section describes the design and implementation of Ma$$ive, our intelligent mobile grocery assistant. We present the current features of Ma$$ive, summarizing results from a number of studies that we have conducted during the design process. We also describe some of the features we are currently working on.

A. Architecture  Ma$$ive has been implemented following a client-server architecture; see Fig. 1. The main application logic resides on a remote server that is also responsible for storing all user data.

In addition, the server hosts a product database, anonymized shopping basket data and association rules that are used to make recommendations. Storing all user data on the remote server makes it possible to share shopping lists and to access the same shopping list both on PCs and on mobile devices.

We have implemented two versions of the Ma$$ive client.

The first client is web-based and can be accessed using the web browser on a mobile device or a PC, whereas the second     Rank Feature MEAN VAR 1. Product price information 5.73 2.34 2. Special offers and customer loyalty card offers 5.71 2.89 3. Price comparison of similar products within store 5.07 3.65 4. Creating a shopping list 4.39 3.68 5. Automatic checkout 4.32 5.57 6. Health information of products in the shopping basket (e.g., total amount of fat or vitamin C) 4.22 4.45 7. Product information (e.g., ingredients or manufacturer) 4.12 4.44 8. Locating a product with aisle-level accuracy 4.00 4.98 9. Product retrieval (e.g., the query ?ice cream? would retrieve the ice creams available in the shop) 3.93 4.48 10. Automatically organizing the shopping list according to product location 3.86 4.88 11. Map of the store 3.81 5.35 12. Recipe search 3.56 4.11 13. Providing a route though the shop based on the shopping list 3.41 4.57 14. Manually arranging the shopping list 3.16 4.18 15. Product recommendations based on the user?s shopping history 3.16 3.44 16. Recipe recommendations based on the user?s shopping history 3.02 3.93 17. Discussion forum about products 2.43 3.32  TABLE I OVERALL IMPORTANCE OF DIFFERENT FEATURES. THE FEATURES HAVE BEEN RANKED ACCORDING TO THE MEAN RATING GIVEN TO A FEATURE. IN  THE TABLE WE HAVE GROUPED TOGETHER FEATURES WITH A SIMILAR RATING INTO THREE GROUPS.

Fig. 1. Architecture diagram.

is a native application that runs on Nokia N900 devices. The Nokia N900 was selected, among other reasons, because of its physical keyboard, Linux-based operating system and high quality camera. All communications between the client and the server take place over HTTP. To minimize latency, we cache data locally on the client whenever possible. Our current de- velopment focuses on the native version as it makes it possible to integrate more advanced features, such as positioning or the use of the mobile phone?s camera, into the client.

To enable positioning, we currently require that the user carries a separate WiFi tag. The tag is approximately the size of a matchbox and it communicates with wireless access points installed in the store. The positioning is described in more detail in Sec. IV-D.

B. User Interface  The user interface of the Ma$$ive client on the Nokia N900 smartphone is shown in Fig. 2. The actual Ma$$ive  Fig. 2. The shopping list view of Ma$$ive. The user can change the active view by tapping on the header bar, i.e., the part of the interface at the top of the screen with the text ?Massive - Shopping List.?  application is in Finnish and we have translated the text for this screenshot. The user?s current shopping list is shown on the left of the screen. The user can scroll the list using touch gestures.

Tapping on a shopping list item toggles the status of the item (picked up or not). To enter a new item, the user can start typing, which opens up a text box. In the shopping list, items for which there are special offers are highlighted (e.g., beer in Fig. 2). Next to each shopping list item we have included two buttons. The first button, labeled ?More...?, provides access to product and recipe recommendations as well as the possibility to modify or delete the shopping list entry. The second button provides information about the location of the product, and the user can access a map with more detailed location information by clicking on the button.

In addition to the features described above, we have de- veloped supplementary features as part of Ma$$ive. Each of the supplementary features has a dedicated view. The user can switch views by tapping on the header bar and selecting the corresponding view from a context menu that opens     up. We have planned for six views: shopping list, available shopping lists, special offers, navigation, recipe search and camera mode. Currently only the four first views have been implemented. The available shopping lists view allows users to change the currently active shopping list and to share shopping lists with other users. The special offers view provides a list of currently available special offers. Finally, in the navigation view, the customer can locate products and obtain navigation instructions to that location from his/her current location within the store. The planned interface for the camera mode would enable the user to take a picture of a shelf of interest, after which relevant information, such as recommendations or information about relevant special offers, would be provided to the user. The recipe recommendations view, on the other hand, would work similarly to the special offers view and provide recommendations about relevant recipes based on the (natural language) items on the customer?s shopping list.

C. Natural Language Interaction  Existing shopping assistants typically require that customers create shopping lists either by referring to specific products or by selecting items from a predefined taxonomy. Actual shop- ping lists, on the other hand, contain a mixture of generic item names (e.g., milk or coffee), specific products and personally meaningful expressions such as ?something good.? Instead of requiring customers to create shopping lists using predefined vocabularies, Ma$$ive enables creating shopping lists using natural language.

Stores typically refer to specific products instead of generic item names, which means there is a semantic gap between the user?s shopping list entries and the information contained by the store. To bridge this gap, we have developed a grocery retrieval engine that takes a natural language entry (e.g., milk) as input, and returns a ranked list of candidate products that match the query. The engine uses a ranking formula that combines textual features, i.e., product name and category name, with product popularity information, i.e., how often the product has been purchased. User evaluations have indicated that our retrieval engine can determine relevant products for approximately 80% of shopping list entries [20], [21].

Currently the retrieval engine is not directly integrated as part of the interface, but it acts as a background service that assists other functionalities.

Entering shopping list items using a mobile device is often slow and cumbersome due to the limited input capabilities of mobile devices. To facilitate shopping list creation, Ma$$ive incorporates a novel predictive text input technique that uses dictionary frequencies together with association rules to sug- gest relevant items. The use of association rules makes it possible to capture correlations between different shopping list items. For example, if the user?s shopping list contains ice cream, the item chocolate sauce would be ranked higher due to the strong correlation between the two items. We have evaluated our predictive text input technique in a user study.

The results of the study indicate that our method increases user satisfaction, reduces the amount of errors and makes text  input faster [22]. The predictive text input technique is used in the shopping list view as the default text input method when customers enter new grocery items.

Currently pen and paper are the dominant way to create shopping lists, since they provide an easy, fast and convenient way to enter items. Paper-form shopping lists can also be placed in a prominent location within a home, which enables collaborative list creation among family members. To this end, even if we are able to facilitate shopping list creation on mobile devices, it is unlikely that customers would be willing to change their existing practices and to start using Ma$$ive simply because of its shopping list capabilities. To motivate customers to use Ma$$ive for creating their shopping list, we should provide added value. As an example of an additional feature, we have developed a grocery product recommender that operates on individual shopping list items and recom- mends potentially interesting products. The recommendations are generated using a three-phase process. First, we use our grocery retrieval engine to map the items on the customer?s shopping list into potential products. Next, we take the top five retrieval results and use generalized association rules to generate recommendations for each result item. Finally we re-rank the recommendations taking into consideration the goodness of the retrieval result and the goodness of the recommendation. We have evaluated our recommendation technique in a user study. The results indicate that most of the times our method is able to generate recommendations that customers consider interesting; see [23] for more details about our recommendation technique and the user evaluation.

The recommender has been integrated as part of the shopping list view. Recommendations for a particular shopping list item can be examined by clicking on a ?more? button next to the corresponding item; see Fig. 2.

The exploratory study on user needs, described in Sec. III, indicated that customers are highly interested in obtaining information about special offers on their mobile device. Major retail chains typically provide promotions for numerous prod- ucts at a given time, which makes it challenging to identify the most interesting and relevant special offers on a mobile device.

To address this challenge, as another additional feature, we have developed an algorithm that determines the relevance of available special offers based on the contents of the customer?s shopping list. The algorithm is currently used in the special offer view of Ma$$ive to provide a personalized ranking of the currently available special offers. Our technique first uses the natural language retrieval engine, described above, to map items on the customer?s shopping list to product categories. Next, association rule based recommendations are used to identify potentially relevant purchase categories that are missing from the participant?s shopping list. A statistical interest measure is then used to assign a rank score for each of the categories that either the retrieval engine or the recommender system returned. The resulting rank scores of the categories can then be used to determine a personalized ranking of special offers for each customer. We have con- ducted preliminary user evaluations with the algorithm, which     Interval Empty Crowded Shelving50% 90% 50% 90% 50% 90% 0.2 1.5 3.2 1.8 3.5 1.9 3.8 0.5 1.7 3.4 1.9 3.8 2.0 4.0 1.0 1.9 3.9 2.3 4.7 2.4 4.8 2.0 2.2 4.4 2.6 5.0 2.8 5.2  TABLE II ACCURACY (MEDIAN AND 90 PERCENTILE) OF THE INDOOR POSITIONING  ENGINE (IN METERS) UNDER DIFFERENT CROWDING CONDITIONS AND TAG SCANNING INTERVALS (IN SECONDS).

demonstrate that our technique identifies special offers that customers consider relevant and interesting. Moreover, the results of these preliminary evaluation indicate that the use of a recommender system to identify potentially missing product categories significantly improves the algorithm.

D. Indoor Positioning  To enable location-based features, we have integrated sup- port for indoor positioning into Ma$$ive. The positioning is based on a commercial WiFi engine provided by Ekahau2. The positioning is available only within our partner supermarket, where we have deployed 29 wireless access points. The positioning requires users to carry WiFi tags that periodically scan the wireless signal environment and send fingerprints that contain information about available access points and signal strengths to a positioning server that estimates the user?s position. The tag scanning interval can be configured between 0.2 and 10 seconds. Higher scanning frequencies result in better positioning accuracy, but also deplete the batteries of the tags faster.

We have evaluated the accuracy of the positioning engine in our partner supermarket under different crowding conditions and using different tag scanning intervals. We considered three crowding conditions: (i) an empty shop, (ii) rush hour, and (iii) shelf replenishment, during which roller cages and crates disturb wireless signals in the store. In the evaluation we considered four different scanning intervals: 0.2, 0.5, 1.0 and 2.0 seconds. The results of the evaluation are shown in Table II. The table shows the median and 90 percentile accuracies for the different conditions. The average error of the positioning is roughly two meters and most of the time the estimates are within five meters of the user?s actual position. This level of accuracy is well-suited for services such as navigation or location-based advertisements. However, the accuracy is not sufficient for pinpointing item positions exactly or for constructing mobile augmented reality solutions.

Getting the positioning to work within a supermarket envi- ronment has proved challenging. In terms of fingerprinting, the challenge arises from the structure of the environment as supermarkets contain a mixture of open spaces where signals can propagate freely and aisles that block signals. Other challenges are related to multi-path effects that are caused by the metallic shelves, and to the varying number of people  2http://www.ekahau.com/  inside the store. The human body consists mostly of water, which blocks wireless signals. This makes calibration of the positioning engine difficult as signal measurements must be collected at different times of day and under different crowding conditions.

To mitigate the inaccuracies described above, we currently utilize a grid-based location model where we have divided the floor plan of the retail environment into 103 grid cells; see Fig. 3. In the construction of the grid we ensured that each aisle was divided into three cells and that there are grid cells located at both ends of an aisle. This grid structure helps us to distinguish when the user is navigating within an aisle or moving from one aisle to another. As part of the grid structure, we store information about each cell?s extended neighborhood, which consists of the direct and shelf neighbors. The direct neighbors of a cell are defined as those cells that have at least one border in common with the cell, i.e., spatially adjacent grid cells, whereas the shelf neighbors correspond to cells that are not spatially adjacent, but that are situated in neighboring aisles. For example, the direct neighbors of grid cell 12 are 13 and 14, and its shelf neighbors are 8 and 18. The measured position can sometimes stray to the wrong end of the aisle or to the neighboring one. By configuring a cell neighborhood we are able to alleviate some of the positioning inaccuracies by replacing a target grid cell with its neighborhood. Abstracting the position using a grid structure also significantly facilitates management of product location information and we have currently mapped 15, 000 products into corresponding grid cells. This was accomplished using a web-based tool that allowed associating product categories with the grid cells.

While this effort is feasible for individual supermarkets, a full exploitation of positioning within a supermarket chain (all the shops) would require extensive resources due to individual shop designs and product layouts.

E. Location-Based Services  Our recent work has focused on integrating the positioning and the natural language interaction techniques described previously. As an example of this work, we have developed MONSTRE [24], an indoor navigation system that assists customers in finding products within the store. The navigation view of Ma$$ive has been implemented using MONSTRE.

MONSTRE takes as input a natural language query, which can be either one of the items on the customers?s shopping list or any additional product. The system uses the retrieval engine described in Sec. IV-C to map the query into a product category, and the mapping of products described in Sec. IV-D is then used to determine the location of the product that the customer is searching for. The indoor positioning engine is then used to determine the current location of the customer, after which the shortest path between the current location and the location of the product is identified. To determine the shortest path, we consider the grid layout as a weighted graph where the vertexes correspond to grid cells, and there is an edge between two vertexes whenever the corresponding grid cells are spatially adjacent. As the weights of the edges     Fig. 3. The grid structure used in the supermarket environment.

we use the real world distance between the centers of the corresponding grid cells. The shortest path is then determined using Dijkstra?s algorithm. MONSTRE determines when to present new navigation instructions to the user, by mapping the shortest path into a motion trajectory where each grid cell has been reduced to its center coordinates. The coordinates are then processed sequentially and we calculate the angle ? between two successive line segments, i.e., straight lines joining two successive coordinates. We consider a cell a turn- ing point, whenever the angle ? between two successive line segments exceeds a predefined threshold ?Th. Currently we use ?Th = 45?. After analyzing the path and determining the turn points, we divide the path into a number of overlapping segments. Each of the two end points of a segment is either the starting grid cell, the destination grid cell or a turn point.

While the user is moving along the path, her current location is monitored and segment specific instructions are generated.

Specifically, when entering a segment, a new instruction is presented that steers the user towards the end point of that segment. Furthermore, if the length of the segment is long enough, an intermediate instruction is also presented to help the user to stay on the correct path. In our current imple- mentation, an intermediate instruction is played only if the length of a segment is at least five grid cells. To minimize the influence of positioning inaccuracies, the instructions are presented when the estimated location of the user is within the extended neighborhood of the target grid cell.

The performance of MONSTRE has been evaluated in a user study with 20 participants. In the study, participants were given different navigation tasks and we measured the number of navigation errors and the cognitive load of the participants. The results indicate that MONSTRE facilitates finding products from the store despite the challenging environment, while at the same time imposing a small cognitive load on the participants; see [24] for more details. We have also used MONSTRE to conduct a study that explored how different types of navigation instructions affect the attention that cus-  Fig. 4. Navigation support in Ma$$ive.

tomers pay to the supermarket environment. In the study, we considered two types of landmark instructions that differed in terms of their visual demand. The first type of instructions, sign-based, used salient signage within the supermarket as landmarks, whereas the other type of instructions, product- based, used salient product-categories as the landmarks. As the product categories were located within the aisles, the land- marks forced the participants to actively scan the environment for the landmarks. However, results from the study revealed that, in both conditions, customers paid little attention to their surroundings [25]. Consequently, a major challenge in provid- ing navigation support within supermarket environment is how to assist the customer in a way that is commercially feasible, i.e., not only enables customers to find products efficiently, but also ensures customers are susceptible to advertising and impulse purchases within the store environment. This aspect is one of the main topics in our current research.

In addition to navigation, we have also integrated our algo- rithm for identifying special offers with the indoor positioning to provide personalized and location-aware advertisements within the supermarket environment. Results from a prelimi-     nary study suggest that the algorithm is able to increase sales and to lead to additional impulse purchases.



V. SUMMARY AND FUTURE WORK This paper described the design and current status of  Ma$$ive, an intelligent mobile assistant for enhancing cus- tomer?s grocery shopping experience. The design of Ma$$ive has been informed by a survey study that we conducted in a large national supermarket. The current features of Ma$$ive include support for natural language shopping lists, predic- tive text input, product search, product recommendations and indoor positioning. We are currently developing new func- tionalities, as well as extending and augmenting the current functionalities. First, in terms of natural language interaction, we are exploring how to make recipe recommendations based on the user?s shopping list entries. Second, the results of the survey indicated that users are relatively interested in product level information. One-dimensional bar codes are currently the standard way to identify grocery products and it seems un- likely that other technologies would become commonplace in the near future. Mobile phone cameras have been successfully used to read one-dimensional bar codes in laboratory settings.

However, recognizing bar codes that are small or printed on reflecting metallic surfaces is difficult and alternative solutions for product recognition need to be investigated. Instead of attempting to recognize individual products, we are currently exploring the combination of computer vision and positioning for recognizing product categories by taking pictures of the shelfs of interest. We also exploring the integration of WiFi positioning with pedestrian dead reckoning to improve the accuracy of the indoor positioning.

