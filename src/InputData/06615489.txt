Application of Data Stream Technique in Simulation

Abstract-Data stream technique mainly includes data stream More over, DSMS can solve the problem. Recently, many management technique and data stream mining technique. Both DSMS prototypes have been developed, for example, can be applied to simulation system. In this paper, we proposed STREAM system in Stanford University, Aurorasystem in MIT an on-line evaluation framework for simulation system based on and BrownUniversity, TelegraphCQ system in data stream management technique and a simulation application BerkeleyUniversity, OpenCQ system in COUGAR. Paper [2] framework based on data stream mining, and design general presents an abstract architecture for data stream management data-streams-mining federate to make it easy to integrate the system, as showed in Figure 1.

various data streams mmmg algorithms in  HLA-architecture-based simulation system quickly, and  introduce our general federate for mining association rule in data  streams with a simulation system for missile penetration.\  Keywords- data stream; association rule; simulation; HLA

I. INTRODUCTION  Recently, data stream techniques have been researched widely. Data stream is a kind of real-time, continuous, ordered sequence of items. Many applications contain data stream.

Examples include stock tickers, network traffic measurements, web-server logs, click streams, data feeds from sensor networks, telecom call records. The characters of data streams include continuity, highly data rates, infmity, data distribution changing with time.

The data generated by the simulation for large-scale complex system has the characters of data stream. First, it is the continuous sequence of items with high speed. Second, for some simulation system, the amount of data is huge, and it is verging on infmite. Last, with the advance of simulation time, the characters of data and the relations among data maybe alter.

So, it is essential to process simulation data with data stream technique. For example, paper [I] treats the data of scientific computing simulation as data stream and sets up approximate query system of the data stream to provide Ad-hoc query. The researches on data stream include two aspects, data stream management technique and data stream mining technique. We think that both techniques can be applied to simulation system.



II. ApPLICATION OF DATA STREAM MANAGEMENT TECHNIQUE IN SIMULATION SYSTEM  A. Overview for Data Stream Management System  Traditional relational database management system (RDBMS) stores relatively static data. It can't provide frequent, high speed and complicated approximate query manipulation.

I This work is supported by state key laboratory of complex electromagnetic environment effects on electronics and information system.

? ? y Streaming  Inputs Updates to User Static Data Queries  y ? y Slreaming  OJtputs  Figure 1. An abstract architecture for data stream management system  B. Online Evaluation Frameworkfor Simulation System  When treating simulation data as data stream, we should considering some other requirements. First, we must store simulation data in static storage for farther analysis. Second, we should provide on-line and complicated queries for users during simulation. Based on these requirements and ideas of data stream management system, we propose the on-line evaluation framework for complex simulation system, as shown in Figure 2.

Repository  I I Tmd ?  (loc" I ----'Optimiration  1f J Que" I l Froccssor  Figure 2. The on-line evaluation framework for simulation system  The main modules in the framework are described as follows.

? Simulation system based on HLA  It is composed of RTI, various simulation models and simulation management tools. With the development of simulation teclmiques, the simulation system may be the one based on other architecture, for example, the Web-based simulation system.

? Data collector and data parser  Data collector gets data from simulation system for on-line evaluation with publishing-subscribing technique. Data parser parses original data from data collector and preprocesses the results for further treatment.

? Static database, buffer and in-memory summary data structure  Static database stores data from data parser for replay and further analysis after simulation. Buffer temporarily stores data from data parser for amortizing the pressure from high speed data stream to query processor. In-memory summary data structure stores some temporary results from query processor to respond query request quickly. For some query request, we can directly get approximate result from in-memory summary data structure without using query processor.

? User query and result output  User sends query request to on-line evaluation system.

There are two kinds of query request, one-time query and continuous query. When user sends one-time query to system, system will get and send back result through parsing current data. While for continuous query, user provides query request with some specific conditions, and with data arriving continuously, query processor will send back results while the data satisfies the specified conditions. That is to say that query processor will send back results many times for one continuous-query command.

? Query queue and output queue  All query requests are stored in query queue for further processing. Output results are stored in output queue firstly.

Then they are sent out.

? Query optimization  Query optimization module optimizes the query requests in query queue to process them quickly.

? Evaluation model repository  Evaluation model repository stores all evaluation models.

The kinds of evaluation models include static algorithms and data stream mining algorithms, et al.

? Query scheduler  The function of query scheduler is scheduling evaluation model to process data for getting result.

? Query processor  Query processor performs evaluation model for the data in buffer or static database to get query result. And sometimes it even directly gets result from in-memory summary data structure, buffer or static database.

? Load shedder  Query processor may perform several evaluation models synchronously. Therefore, it needs load shedder to balance load.



III. ApPLICATION OF DATA STREAM MINING TECHNIQUE IN SIMULATION SYSTEM  It is significant to use data steam mining algorithms to evaluate simulation data. With increasing of complexity and augmenting of scale of simulation system, the simulation data becomes much huger. The cost is high for storing all data.

More over, the simulation time may become much longer, so that it requires getting interesting patterns from data during simulation. Then we can tune simulation system ahead of schedule to approach simulation aims quickly.

A. Overview for Data Stream Mining Technique  In contrast to mining static dataset, it is more challengeable to mining data stream as following reasons. First, every item in data stream only can be scanned one time, so that it requires algorithm must be single-pass one. Second, the data in data stream is infinite, while the memory of computer used by algorithm is limited. Third, the speed of data stream is high, so that every item in data stream must be treated as quickly as possible. Fourth, when user queries mining result, the algorithm must respond the result in time, and sometimes it even require algorithm maintain mining result at any time[3].

Data streams ___ -----,  ? Pre-proces?  ?--? DulTcr  ,/ If-memory summary data  structure  f, Data stream mining engine  I Result display I Figure 3, The model of data stream mining  Figure 3 shows the model of data stream mining. When the data streams arrived in high speed, they are processed by the pre-process module firstly, and then they are stored in the buffers. The pre-process module mainly performs the data transformations. The in-memory summary data structure often keeps some data in the data streams and the mining results in the compressed format. The data stream mining engine deals with the query request and the data stream mining. The query request is classified as two types: one-time query and continuous query. The result display module output the mining results in the form that can be comprehended easily by users.

B. Simulation Application Framework based on Data Steam  Mining  For large-scale simulation systems, the algorithm of data stream mining can be applied in the following three aspects: (1) it is embedded in the simulation system in the form of data stream mining federates, and collect the date generated by every federate in the system; (2) it is used to process the simulation results that are collected ultimately. Compared with    the traditional algorithm of data stream mining, this algorithm presents more advantages in the aspect of large-scale data processing; (3) it is embedded in the federate of the simulation system directly, and thus provides decision-making ability for the federate. According to the above aspects, we propose the simulation application framework based on data stream mining, as shown in Figure 4.

(l;lmbedded in the simulation federatE  t Data stream  mlfltng  algorithm  , ,  :1 Simulation  system ....

I  t I Parameter I Data streams adjusting mining federate +  Result display (2:online evaluation  Figure 4. The simulation application framework based on data stream mining  C. General Data Stream Mining Federate  In this section, we introduce the basic structure of the general data stream mining federate. There exist diversiform algorithms of data stream mining. How to quickly introduce them into the simulation system based on the HLA architecture is a significant problem. The traditional development method of HLA simulation federate is as follows: according to the idiographic application, the method builds the relationship of publication/order in turn, and writes the codes of simulation logic and display interface. When the data of publication/order or simulation logic varies, the method can only modify the source codes, and especially need to modify or rewrite a number of codes sometimes.

( onfiguration tables for  ( A?  Figure 5. General data stream mining federate  For different applications, the data contents that are mined by the data stream mining federate are different, that is, the data of publication/order are different. And the data stream mining algorithms adopted by the federate are also different, namely their simulation logics are different. If the traditional development methods are adopted, the methods need to exploit different federates aiming at various applications. The methods  106 1  present low reuse degree and huge workload. Thus, we develop the generate data stream mining federates based on the HLA simulation system. The framework of the federate is illustrated in Figure 5.

In the method, the configuration tables for publication/order and data transformation tables are the configuration files stored in the XML form, and different configurations are determined in terms of the idiographic applications. Dynamic modules of publication/ order determine the publication/order relationship between federates, according to the publication/order object classes or alternating classes in the configuration tables of publication/order. The detailed implementation is referenced by paper [4]. When the simulation began, data collection module achieves the data in simulation system according to the order relationship. But the achieved data may be the type of enumerate, integer, or float et al . While the algorithms of data stream mining usually take tuple <ii, i2,.??, im> as input data, so they must transform the data that are collected by the data collection module. According to the mapping rules described in the data transformation table, data collection module transforms the data to the forms required by the data stream mining algorithm. Data stream mining module is the algorithm in the DLL form, and chooses different DLL in terms of corresponding applications. The rules mined by the data stream mining modules can not be directly comprehended generally, and thus they should adopt data reversion module to recover the data. This is the converse process of data transformation module. The rules mined by different kinds of data stream mining algorithms differ from each other. Therefore, the algorithms should adopt different result display model, which also exhibits in the DLL form.



IV. AN EXAMPLE OF ApPLYING DATA STREAM MINING ALGORITHM IN SIMULATION SYSTEM  In this section, taking the simulation system for missile penetration as an example, we introduce our general federate for mining association rule in data streams.

Association rule mining quests the interesting relationship between the attributes in the data set, so it is a kind of significant data mining application. For example, paper [5] mines the association rule between tanle's hit rate and some elements including weather, landform, etc in the tank simulation system; paper [6] mines the association rule between air's alter rate and some elements including wind speed, wind trend, etc in the house design simulation. The essential of mining association rule is to mine the frequent patterns in the data. The frequent patterns can be subdivided as frequent itemsets, closed frequent itemsets, maximal frequent itemsets, and Top-K frequent itemsets. The data stream mining algorithms for them are also widely studied accordingly.

In order to explore the penetration ability of a certain missile, we build a simulation system for missile penetration.

The system consists of penetration missile federate, electromagnetic environment federate, radar federate, interference federate, interceptor missile federate, association rules mining federate. The federates of the system are shown in Figure 6.

Figure 6. The federates of simulation system  A general federate for mining association rule is used to analyze which elements chiefly affect the penetration success of missile. Firstly, conditional attribute set C is determined as { weather, traj ectory, interference pattern, decoy missile}, and decision-making attribute set D is built as {penetration success}. Table 1 (data transformation table) gives the value range and the mapping pattern of every attribute. The publication/order configuration table of general federate for mining association rule includes all attributes in C and D.

According to the value of different attributes, the number of scenarios in penetration experiment is 3 X 3 X 4 X 3 = 108. We perform 100 Monte Carlo simulations for each scenario, that is the simulation amount is 10800. The values of both conditional attribute and decision-making attribute in every simulation compose an item of transaction data of association rule mining.

After general federate for mining association rule achieves the transaction data, the data are transformed to the form that can be recognized by data stream mining module via data transformation module. Such as, the data of a certain simulation are {fine day, trajectory 1, bomb load interference, one, success}; the transaction data after data transformation are {I ,4,8, 12, 14}. The continuous transactions form a transaction data stream, such as { {I ,4,8, 12,14}, { I ,5,8,12,15}, {1,5,9,12,14}, {l,6,10,12,14} . . .  }.

TABLE I. DATA TRANSFORMA nON TABLE  Attribute Range of value Projection weather fine day I  cloud day 2 rainy day 3  trajectory trajectory I 4 trajectory 2 5 trajectory 3 6  interference none 7 pattern bomb load interference 8  long range suppression 9 long range multiple false 10 targets  decoy missile none II one 12 several 13  penetration success 14 success fail 15  In order to achIeve complete mformation of support degree, and make the amount of association rules as few as possible, we choose to mine closed frequent itemsets. The algorithm FPCFI-DS in paper [7] is adopted. To achieve the association rules in the whole process, the window size of FPCFI-DS is set   at the whole data set, and the minimal support degree is set as 1, that is, the algorithm mines all closed frequent itemsets.

TABLE II. THE RESULTS OF SOME ASSOCTA nON RULES  Association rules Support rainy day > success 3168 trajectory 1 > success 3021 several > success 2809 long range multiple false targets ->success 2955 rainy dayntrajectory 1 nnone ->success 2767  After fimshmg all sImulatIOn expenments, the general federate for mining association rule can output all closed frequent item sets immediately, and then gain the pattern that can be recognized by users through data reversion module.

Since the experiments aim at exploring which elements chiefly affects the penetration success of missile, this paper just chooses Top-K closed frequent itemsets that include "success" as analysis base, and transforms these sets to association rules.

Table 2 enumerates some association rules and their support degree. Note that, the data in the table are just as example, and don't represent any practical system.

Though analyzing the result, a serious of interesting knowledge are educed. For example, penetration can achieve success more possibly at a rainy day or through adopting trajectory I.



V. CONCLUSIONS  With increasing of complexity and augmenting of scale of simulation system, the simulation time becomes much longer and the simulation data becomes much huger. These make the simulation data has the characters of data stream. It is essential to process simulation data with data stream technique. Data strea? technique mainly includes data stream manage technIque and data stream mining technique. In this paper, we discussed the application of both techniques in simulation system.

