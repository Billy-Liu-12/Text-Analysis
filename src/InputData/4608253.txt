Extraction of Spatial Association Rules Based on  Binary Mining Algorithm in Mobile Computing

Abstract-In mobile computing there are many spatial data correlative with locations, which are very important for mobile intelligent system to extract spatial association among locations that can provide potential and useful information for mobile clients. Hence, aiming to simple transverse association describing spatial association among different spatial objects under the same pattern of association, this paper proposes an approach of extracting spatial association rules based on binary mining algorithm, which firstly uses the method of Circle contained by spatial analysis to extract the values of spatial predicate based on the definitive spatial predicate, specific objective and other given objects around the objective, and then aiming to each objective, transforms them into digital transaction database by binary, finally extracts these spatial association rules from the spatial database with binary mining algorithm introduced by this paper.

In mobile computing the mining algorithm uses the method of increasing value to generate candidate frequent item sets and uses binary logical ?and? operation to calculate support of item sets in order to reduce running time of mobile intelligent system, which can fast respond to requirement of client. The experiment indicates that efficiency of binary mining algorithm is faster and more efficient than Apriori used in mobile intelligent system.



I. INTRODUCTION  Spatial data mining [1] mainly extract latent and useful knowledge, spatial association and pattern from spatial database. Mining spatial association rules is a key task of spatial data mining. Now the research work mainly focuses on solving two types of spatial association, which include lengthways and transverse spatial association. Lengthways spatial association is among these attributes of homogeneous objects under the same pattern of spatial association [2], transverse spatial association is among both these different objects under the same pattern and these different objects under the diversiform patterns. Spatial data mining need compute all kinds of spatial association among many spatial objects, and so intelligent mining system must spend too time and space at the time of mining spatial association rules, it leads to debasing the efficiency of system. Hence, aiming to some intelligent systems in mobile computing, this paper propose an approach of extracting spatial association rules based on binary, which simply consider a kind of spatial environment, namely one of transverse spatial associations is among these different objects under the same pattern of spatial  association, which contains close_to that is a definitive spatial predicate, hotel that is regarded as objective, and other spatial objects including mall, traffic-service, restaurant and etc..

Because it is very necessary for mobile clients to know what is around the hotel and how will they inn, and so it is important for people to extract latent associations among these different locations around these hotels. For example, before some mobile clients want to stay in a hotel when getting a strange city, if they want to fast know whether here are mall and ATM nearby the hotel, at the time they will gain this information by submitting some demand to corresponding mobile device. And so, this paper presents an approach based on binary mining algorithm, which is able to fast extract the spatial association rules and betimes provide some useful information for mobile clients.



II. EXTRACTING THE VALUE OF SPATIAL PREDICATE  Traditional association rules [3] mine some correlative characteristic among item sets. In the same way, spatial association rules also extract some associations among different objects from spatial database. Spatial association rule is expressed as A?B[s%, c%], where A and B are sets of predicate, which describes either spatial association or non- spatial association, at least, one of them must be a spatial association, let s% be a support of spatial association rules, let c% be a confidence of spatial association rules. Here is an example about spatial association rules: is_a (X, school) ?close_to (X, bookshop) ?close_to (X, restaurant) [s%, c%].

All kinds of spatial predicates may generate spatial association rules, such as expressing spatial predicates of topology association: equal(x, y), disjoint(x, y), touch(x, y), overlap(x, y), cover(x, y), contain(x, y), coveredby(x, y), inside(x, y) and so on, expressing spatial predicates of distance association: very_close(x, y), close_to(x, y), commensurate(x, y),  far_way(x, y), very_fay(x, y) and expressing spatial predicates of orientation association: east_of(x, y), north_of(x, y), south_of(x, y), west_of(x, y), is_same(x, y) and etc..

However, general spatial association rules mining algorithms need compute diversiform spatial associations among all spatial objects, and mining system need spend tremendous cost.

And so this paper simply consider a kind of requirement in   Proceedings of the 2008 IEEE  June 20 -23, 2008, Zhangjiajie, China    mobile computing, where the most important hotel for mobile clients is regarded as objective, the other objects, including mall, traffic-service, casino, hospital, restaurant and bank (ATM), are regarded as especial objects related to objective, close_to expressing distance association, is defined as definitive spatial predicate used by extraction of spatial association rules. This paper regards hotel and the other special objects as spatial point-entity in database, and uses the method of Circle to create point-buffer which regards hotel as centre, let r be radii of chosen buffer. There are two ways to choose the value of radii, one is that server may choose it according to mobile circumstance, although we may save time through the way, it didn?t make each mobile clients gain the most satisfaction, the other is that mobile clients may give it out when they put in task. Database used in this paper adopts vector structure, and only uses point-entity. Each of point- entity also has coordinates of position in database.

Process of Circle extracting is expressed as follows: Step 1: Let?s search the entire point-entity expressing a kind  of hotel from spatial database, let (xio, yio) be their coordinates, and let Ti be hotel regarded as definitive objective.

Step 2: Let r be radii of buffer, and make hotel be the centre of a circle to create each buffer, expression is defined as follows:  (x-xio) 2+(y-yio) 2?r2         (1) Step 3: Let close_to be a spatial predicate, the objects  including restaurant, traffic-service, casino, hospital, mall, bank (ATM) and etc., are regarded as especial objects expressed as Oj (j=1?m). If above these objects? coordinates expressed as (x, y) satisfy (1), these objects and corresponding hotel will form the value of spatial predicate expressed as close_to (Ti, Oj).

All the values of spatial predicate are extracted from spatial database existing in some domain based on the definitive objective (hotel) and the special relative objects (mall, traffic- service, casino, hospital, bank, restaurant and etc), these values of spatial predicate may be expressed as close_to (Ti, Oj).

For example: close_to (hotel1, restaurant), close_to (hotel2, mall), close_to (hotel3, bank) and so on.



III. FORMING TRANSACTION DATABASE  Transaction database is made up of transaction identifier (TID) and corresponding transaction-items (ID). We regard different hotels as transaction identifier (TID) of database, the values of spatial predicate related to hotel is regarded as sets of transaction-items (ID) with transaction identifier (TID),  which is expressed as close_to (Ti, Oj). Let Oj express entity as follows:  O1: mall; O2: traffic-service; O3: casino; O4: bank; O5: restaurant; O6: hospital; ......

And so we may get transaction database expressed as table I, then all close_to(Ti, Oj) are regarded as close_to(T, Oj), let T express all the hotels, then we change close_to(T, Oj) into normal transaction-items (Ij).

TABLE I TRANSACTION DATABASE  TID List of items(ID) T1 close_to(T1,O1), close_to(T1,O2), ? T2 close_to(T2,O2), close_to(T2,O3), ? ? ? Tn close_to(Tn,O4), close_to(Tn,O6), ?  Suppose transaction database have n transactions, and there are m transaction-items (m?n), Ti is turned into TIi, so normal transaction database is expressed as table II according to table I.

TABLE II NORMAL TRANSACTION DATABASE  TID List of items(ID) TI1 I1, I2? TI2 I2, I3? ? ? TIn I4, I6?

IV. THE ALGORITHM OF ASSOCIATION RULES MINING BASED ON BINARY  Let I= {i1, i2?im} be a set of items, if ik (ik ?I), let T= {i1 ? i2 ? ? ? im} (Tk ?  I) be a subset of items, named a Transactions. For example, let Tk= {i1, i2, i3} be a subset of items, called a transaction. And then let D= {T1, T2?Tn}, let Tk ?I, (k=1?n) be a set of transactions, called Transaction Database (TD).

A. Definitions and Theorems  As above hypothesis, correlative definitions and theorems are proposed as follows:  Definition 1 Binary Transaction (BT), a transaction is expressed as binary, binary transaction of transaction T is expressed as BT= (b1 b2?bm), bk? [0, 1], k=1?m.

If ik?Ti, and then bk=1, otherwise bk=0, the order of binary digits is as same as items which have been fixed.

Example, Let I={1,2,3,4,5} be a set of items, if a transaction is expressed as Ti={2,3,5}, and then BTi=(01101).

Definition 2 Digital Transaction (DT), which is the integer, the value of which would be obtained by turning binary of transaction into algorism.

Example, If BT=01101, and then DT=13.

Definition 3 Relation of digital transaction accord with  relation of transaction set.

Example, Let DT1 be digital transaction of transaction T1,  Let DT2 be digital transaction of transaction T2. If T1 ? T2, and then DT1 ? DT2.

Definition 4 Frequent Digital Transaction (FDT), which is a digital transaction, the support of which excess minimal support given by users.

Definition 5 Candidate Digital Transaction Section (CDTS), which is an integral section from 3 to max, each power of 2 does not belong to CDTS.

Max=BTi1 ?BTi2 ?? ?BTjk, each BT only expresses a kind of item, their support excess minimal support given.

Min=3, which is regarded as initialization because 3 is the least digital transaction expressing dualistic association.

Example, If support of BTj (j=1?4) excess minimal support, BT1=(01000), BT2=(00100), BT3=(00010), BT4=(00001), max=BT1 ? BT2 ? BT3 ? BT3 =15, and selective digital transaction section is expressed as CDTS = [3, 15].

Theorem 1 The given binary transaction uniquely corresponds to a digital transaction, vice versa.

Theorem 2 Let p and q be binary transactions with m bits, let Tp be transaction about p, let Tq be transaction about q, then Tp ? Tq ?p and q=p.

Proof suppose digit 1 locates each bit of binary p from i1 to ik (k?m), digit 0 locates other ones. If p and q=p, then digit 1 locates each bit of binary q from i1 to ik (k?m) (otherwise these bits must occur digit 0 with logic ?and? operation), other ones will be either 0 or 1, so Tp ? Tq according to definition 1.

And then via the hypothesis about p as before, since  Tp ? Tq , then digit 1 must locate each bits of binary q from i1 to ik (k?m) (otherwise, ? ik, so ik?Tp , ik ? Tq, the conclusion is contrary to premises as Tp ? Tq), other ones will be either 0 or 1, so p and q=p.

Via theorems as before, two deduced conclusions are expressed as follows:  Conclusion 1 Let p and q be binary transactions with m bits, let DTp be digital transaction about p, let DTq be digital transaction about q. If p and q=p, and then DTp ?DTq.

Conclusion 2 Let p and q be binary transactions with m bits, let Tp be transaction about p, let DTp be digital transaction about p, let Tq be transaction about q, let DTq be digital transaction about q. If DTp?DTq, then Tq ? Tp.

Theorem 3 Let p and q be binary transactions with m bits, let Tp be transaction about p, let Tq be transaction about q, let F be frequent item sets. If p and q=p, and Tq ? F, then Tp ? F.

Proof since p and q=p, via theorem 2, then Tp ? Tq, and Tq ? F, based on set theory, then Tp ? F.

B. The Process of Association Rules Mining Based on Binary  Firstly, we define some signs as follows: DB: DB is used to save digital transaction.

D: data-domain of D contain ?value? and ?count?, ?value? is  used to save digital transaction and ?count? is used to save the number of same digital transaction.

FDT: data-domain of FDT contains ?value? and ?count?, ?value? is used to save digital transaction and ?count? is used to save support of digital transaction, which excess minimal support given by users.

NFDT: data-domain of NFDT only contains ?value? to save digital transaction, the support of which is under minimal support given, and then go on doing:  Step 1: Data Transformations. Transaction would be transformed into digital transaction from traditional database to  DB via definition 1 and 2, and then digital transactions would be saved in D on descending by digital transaction.

Step 2: Creating candidate digital transaction section (CDTS).

Frequent digital transactions gained by scanning D, are used to create CDTS via definition 5, which only express a kind of item.

Step 3: Forming sets of Frequent Digital Transaction (FDT).

All frequent digital transactions are searched from CDTS to save in FDT.

Step 4: Creating Digital Association Rules. Digital association rules are created from FDT when their confidence excess given min-confidence.

C. The Algorithm of Association Rules Mining  Let [3, max] be a CDTS, and there are N digital transactions saved in D on descending by digital transaction, where data aren?t repeated, and the algorithm which generates digital association rules after search frequent digital transaction, is expressed as follows:  (1)  While (DT? [3, max]) { (2)      If (all   NFDTj ?DT) { (3)       While (DT?Di.value&&i?N) { (4)         If (DT ? Di.value) (5)           s_count+= Di.count; (6)         i++;}//computing support of DT (7)       If (s_count/N?support) { (8)        Delete all FDTk (FDTk ?DT) from FDT; (9)           Write DT and s_count to FDT; (10)      }//checking frequent digital transaction (11)     Else (12)      Write DT to NFDT;} (13)      DT++; (14)    }//searching all frequent digital transaction (15)      For (all DT?FDT) { (16)         DT =FDT.value; (17)        s_count= FDT.count; (18)        Create_Rules (DT, s_count); (19)        }//generating association rules Create_Rules (DT, s_count); (1)   While (sub? [1, DT] && sub?DT) { (2)      For (all Di?D) { (3)         If (sub?  Di.value) c_count+= Di.count; (4)         i++;} //computing support of sub (5)        If (s_count/c_count?confidence) (6)            Display sub?DT& (~sub); (7)      sub++ ;}  D. The Analysis of Association Rules Mining Algorithm The algorithm generates candidate frequent item sets by  automatically increasing value. Length of candidate frequent digital transaction generated continually varies, but trend of variation is from few to many. For example:  If CDTS= [3, 15], the sequence of generating candidate frequent item sets is expressed as follows:  DT1=3, length1=2.

DT*=4, length*=1. (4 have been pruned via definition 5) DT2=5, length2=2.

DT3=6, length3=2.

DT4=7, length4=3.

DT*=8, length*=1. (8 have been pruned via definition 5) DT5=9, length5=2.

DT6=10, length6=2.

DT7=11, length7=3.

DT8=12, length8=2.

DT9=13, length9=3.

DT10=14, length10=3.

DT11=15, length11=4.

As before their lengths crossways vary from 2 to 4,  candidate frequent item sets are easily generated. The method of the algorithm is different from the other algorithm. The algorithm uses the method of property 3 to prune redundant candidate frequent item sets. The algorithm also uses binary logical ?and? operation to calculate support of item sets, and at the time it is the most key to use conclusion 2 of property 2 to reduce the number of scanned record in database. Because it is easier to create candidate frequent items, the efficiency of binary is faster than B_Apriori [17].



V. PROCESS OF GENERATING SPATIAL ASSOCIATION RULES  The process is expressed as follows: Step 1: Digital association rules are transformed into binary,  if digital ?1? exists in some binary bits, transaction-item (ij) related to each bit should exist according to definition 1, and then comprehensible association rules are expressed as {i1,i2}?{i4}.

Step 2: Item (ij) of comprehensible association rules would be renewed into spatial predicate close_to (T, Oj), and then the spatial association rules are expressed as follows:  close_to (T, O1) ? close_to (T, O2) ?close_to (T, O4) Step 3: The normal spatial association rules are expressed as  follows: is_a (X, T) ?close_to(X, O1) ?close_to(X, O2) ?close_to  (X, O4) [30%, 80%] Let X is an objective which is hotel, so above rule is  explained as follows: When percent 80 of hotel are close to O1 (mall) and O2  (traffic-service), they are also close to O4 (bank), there are percent 30 of data accord with the rule in transaction database.



VI. EXPERIMENT AND CAPABILITY OF ALGORITHM  A. Experiment about the Centre of Chengdu We use data from electronic map of China in 2006 made by  LingTu Software Corporation. The hypotheses of experiment are expressed as follows:  Minimal support=40%; Minimal confidence=80%; Area: the centre of Chengdu; Objective: hotel; The definitive spatial predicate: close_to; Radii of buffer: r=2 Km; The other special objects: O1: mall includes bazaar, shop and etc.

O2: traffic-service includes depot and service station.

O3: casino includes club and show business.

O4: bank includes ATM.

O5: restaurant.

O6: hospital includes all dispensaries.

So we may gain 178 records from definitive database, and  via algorithm based on binary we can extract the spatial association rule expressed as follows:  is_a (X, T) ?close_to (X, O1) ?close_to (X, O4) ?close_to (X, O6) [40%, 80%], which is expressed as follows: when percent 80 of hotels are close to O1 (mall) and O4 (bank), they are also close to O6 (hospital), there are percent 40 of data accord with the rule in map database of Chengdu 2006. The result of experiment is expressed as figure 1 by simulation model of system.

Figure 1. The result of simulation experiment about system    B. The Contrast of Capability about Algorithm In order to compare with mining algorithm based on  B_Apriori [17] and Binary, we use two mining algorithms to extract spatial association rules from these digital transactions come from 3 to 4095, m=12, N=4083. Our experimental circumstances are expressed as follow:  AMD Athlon (tm) 64X2 Dual Core Processor 3800+ 2.00 GHz, 512MB, language of the procedure is Visual C# 2005.NET, OS is Windows XP Professional.

The executed time of algorithms is expressed as figure 2 (a) and (b).

Figure 2(a). The result of experiment about algorithms  Length=3, Binary<B_Apriori       Figure 2(b). The result of experiment about algorithms  Length=6, Binary<B_Apriori   The result of comparing about executed time between B_Apriori and Binary is expressed as figure 3.

?  ???  ????  ????  ????  ????  ????  ???? ???	 ??? ??? ??? ?? ?? ?  ????????????????  ?? ? ??  ? ??  ?? ? ??  ? ??  ?? ? ??  ? ?  ?  ??????  !?"?#   Figure 3. The executed time of two algorithms   According to the result of experiment, the efficiency of  algorithm based on binary is faster and more efficient than Apriori, and so it made the efficiency of mobile device be improved.



VII. CONCLUSIONS  It is very important for mobile clients to know the association among locations in mobile environment, but we need spend very expensive cost in mining all spatial association from spatial database. So aiming to simple predicate, the definitive objective and some especial objects around objectives, this paper proposes an approach of extracting spatial association rules based on binary mining algorithm to reduce cost of extraction, because binary mining algorithm uses binary logic operation to calculate support and confidence and uses the method of increasing value to generate candidate frequent item sets. It is helpful for mobile intelligent system to improve the efficiency of work. And then we will extend spatial objects and enhance efficiency of mining association rules in the future.

