A Recycle Technique of Association Rule for Missing Value Completion

Abstract  The technologies of internetworking and database have  expedited the distributed database systems to be  implemented in the global information systems. But it  cannot avoid to occur random missing values in the  process of gathering data. The research on association  rules can effectively establish the relationship of attribute  in databases containing missing values. While this  technique is used to resolve the issues on replacing the  missing values, the integrity of the methodology and the  measurability of the quality can already be verified in  related essays. However, the accuracy of replaced missing  values in the database can only be satisfactory with  specific criteria and a higher completion rate cannot yet  be achieved. In other words, a given accuracy cannot be  reached at the same time as resolving the database  validity issues. Therefore, we propose a Rule Recycle  Technique, which reuses and composes the rules in order  to retrieve more complete attribute value association  rules. This will not only enable the database recovered to  improve the accuracy and completion rate but also  increase the validity of missing value completion.

Keywords. Distributed database, internetworking,  association rule, missing value, recycle technique  1.Introduction  The recurrence procedures described in Knowledge  Discovery in Databases [5] list the cleaning of data as a  top priority and the most important procedure in  preparation step. It is because the current database  technology, though able to handle massive amount of data  distributed in the global site, cannot avoid incompleteness,  abnormality, or inconsistency in the process of gathering  data with internetworking method. When inferring an  incomplete transformed database, if the tuples with  missing values were omitted, it would affect the  information content of the analysis. Alternatively, using  simple statistical methods [6] (such as using mean or  medium) to predict the missing values will transform  most of the missing values into noises and influence the  quality of the information.  Therefore, the research of  inferring missing value is to provide a well-rounded  system to improve the quality of the prediction, in order  to recover the data effectively.

The method of Missing Value Completion (MVC)[9]  utilizes the set of association rules produced by Robust  Association Rule (RAR) [10]to support the prediction on  the missing value and resolve the value completion issues.

By comparing the experiment results with C4.5[7,8], the  accuracy increases 100%. It can also quantify the  accuracy of the prediction based on the confidence of the  association rule. However, with regards to the  effectiveness on the value completion techniques [6],  MVC can only increase the accuracy of the prediction,  without considering the replacement rate of the missing  values. To achieve this, a higher threshold is needed to  filter the rules and more attribute association rules need to  be discovered. Though RAR can discover more  association rules on the missing values in the given  threshold range, RAR will still lose some usable rules as  found in some research papers on association rules [3,6].

Hence we propose Recycle Composed Association Rule  (RCAR) to reuse and compose the rules and to identify  those rules which satisfy the threshold. Meanwhile we use  a UCI?s database for the experiment, it shows that the  accuracy and completion rates are up to 1.5 times.

2.Related Research  The association rules of Agrawal et al.[1], R:  [sup 1 :s%, conf 2 :c%], are strong rules upon given  thresholds(min_sup3 and min_conf4) and consequent  research papers[2,3,4,11] proved that can be discovered  quickly and effectively in the large database. The  RAR[10] introduces a concept of a ?valid database? for  mining a database containing missing values. There are  three measures of rule interestingness defined.

Let DB be a database, X and Y a set of attributes, x and  y a set of attribute values, Vdb(X) a subset of tuples  containing X, and X without any missing values in its  ???? 1 sup:support.

2 conf:confidence.

3 min_sup: min_spport.

4 min_conf: min_confidence.

values, DBx a subset of tuples containing x, and Dis(Y) is  a subset of tuples containing Y, and Y with one or more  missing values in its values.

( ) DB  )X(Vdb =Xrep  Vdb  DB xsup  x   xx  xy  DBDisDB  DB yxconf   (3  3.Issues and Proposal  Under given threshold, the more association rules are  discovered, more missing values can be predicted and  validity of the recovered database is higher. RAR can  already discover more association rules from the database  containing missing values. However, looking at the  combination characteristics among the attribute values, to  clearly describe the potential association problem of that  RAR causes, we can display the database using the  following attribute diagram which has attributes A,B,C,?,  attribute values 1,2,3,?, missing values ?, and ratios  being rate of each attribute value in the database. We also  use the notation A1 for A=1. (assuming min_sup=35% and  min_conf=70%)  A      B    C? 1:30% 1:40%  ?:10% 2:25% 2:50%  3:25% 2:5% ?:10% 3:5%  ? ? ?     Figure 1. Diagram of correspondence between  attributes values  Only one rule R:A1 B1 [sup:38%, conf:100%] is  found to provide MVC to predict the value of B?, but not  that of A?. Because sup(A2B2) and sup(A2B3) are both  smaller than min_sup, a strong rule can not be generated.

More of association rules will be found. If those can be  represented in the format of R:B2 B3 A2, then we can  establish the association between the combination of the  attribute values. This type of rules is called Composed  Association Rule. When we are in the process of mining  the database containing missing values, if we could  retrieve this type of rules, we can then discover more  strong rules to increase MVC. However, when using  MVC to resolve the missing value issues, the table of data  warehouse is usually huge and old. It is often the case that  the users cannot provide much information on the data  content. Hence, we still need RAR to assist this issue.

Taking the proposed recycle technique, it is possible to  quickly get the typical association rules and feasible  composed association rules under the same threshold  criteria. This will promote the integrity of the MVC result.

The new proposed method is called Recycled Composed  Association Rule (RCAR).

(1)  (2)  )  4.Rule Recycle Technique  4.1 Definition  The concept of recycling comes from the examination  of the deleted itemsets in the RAR mining process. If the  attribute values are categorical data type and evenly  distributed, then the ratios of each attribute value are  small and the tuple will be deleted when examining the  support value on the step of locating the frequent itemsets.

This satisfies the RAR, but association rules of this type  of attribute values will never be discovered through RAR  mining. Even if we want to appropriately categorize this  type of data, or transform to representation among  different ranges, the data is usually stored in a table of  data warehouse that is difficult to categorize beforehand  as described in Section 3. Therefore, we need to rely on  the recycle technique to re-examine and compose the  itemsets deleted by RAR. It then requires to further  extend the join concept of Apriori algorithm[1]. Besides  getting the frequent itemsets by self-join, we could also  join frequent itemsets and non-frequent itemsets. Even  though the support value of the later cannot fulfill the  requirements of min_sup, if there are several k-itemsets  can be composed, the support value will be re-calculated  after composing. If this support value is greater than  min_sup, then this composed itemset will be included in  the frequent composed itemset. Some new definitions are  listed below.

Definition 1. Composed Itemset  For any k-itemset Xc containing k items assume that they are  {A1v11, A2v21, ?, AKvk1}, {A1v12, A2v21,?,AKvk1}, ?, {A1v11,  A2v22,?,AKvk1}, ? or {A1v11, A2v21,?,AKvk2}, ?.

If the first k-1 items of Xc are item-wised identical,  while the k-th item has the same attribute but with  different values Vk1, Vk2, ?,Vkn then AK(vk1,vk2,?,vkn)  is said to be a value composed item, and Xc can be rewritten  as { A1v1j , A2v2 j  , ?, A(K-1) v(k-1) j  k-1 , AK(vk1,vk2,?,vkn)},  and it is called as a composed k-itemset.

By Definition 1, those composing itemsets are  independent, and the sup(Xc) can be defined as,     Sup (Xc)=  sup ({A1v1j , A2v2 j  ,?,A(K-1) v(k-1) j  k-1 ,AKvk1}) +  sup ({A1v1j , A2v2 j  ,?,A(K-1) v(k-1) j  k-1 ,AKvk2}) + ? +  sup ({A1v1j , A2v2 j  ,?,A(K-1) v(k-1) j  k-1 ,AKvkn})  For example, {A2B2} and {A2B3} in Fig.1 can be  composed as {A2B(2,3)}, whose support value  sup(A2B(2,3))=62.5% is greater than min_sup, and hence  a frequent composed itemset.

Definition 2. Composed Association Rule  If itemset Xc is a frequent composed itemset and ,  are the items in Xc then rule R:  [sup:s%,  conf:c%] is said to be composed association rule.

For example, {A2B(2,3)} is a frequent composed itemset  and deduce the following two composed association  rules:  R:A2  B(2,3) [sup:62.5%, conf:100%]  R:B(2,3)  A2 [sup:62.5%, conf:100%]  Definition 3. Feasible Composed Association Rule  If rule R:  [sup:s%, conf:c%] is a composed  association rule, and if  is not a value composed item,  then R is a feasible composed association rule.

For example, R:B(2,3)  A2 [sup:62.5%, conf:100%] is a  feasible composed association rule.

Definition 4. Recycle Bucket  Recycle Bucket, RBk,, is used to recycle the k-itemset of  CIk and its support value is min_rep  sup(x)  min_sup of the deleted itemsets. The min_rep is the  recycle threshold.

Definition 5. Recycle Candidate  Recycle Candidate, RCk, is used to store the k-itemset  generated by joining FIk-1 and RBK-1 , whose support  values are calculated using Equation (2), and compose  itemsets, whose support values are calculated using  Equation (4).

4.2 Procedure  The main purpose of RCAR is not only to discover the  rules RAR able to find, but also the composed association  rules that RAR is unable to discover. The algorithm A can  locate RAR?s frequent itemsets and the frequent  composed itemsets. The later is reusing and composing  the itemsets deleted by RAR mining. The rules generating  from algorithm B are the RAR?s rules and feasible  composed rules.

Algorithm A  //Find all frequent itemsets (include frequent  composed itemsets) using an interactive level-wise  approach based on candidate and recycle candidate  generation.//  Input: Database Table DB  // DB contained missing attribute values in it.// (4) min_sup and min_rep  Output: FI, Dis(X) and DBx  //FI is the Frequent Itemset.//  Begin  //scanning Table DB once.//  CI1 = a set of all 1-itemset //CI is the Candidate Itemset.//  Dis(X) = the subset of tuples containing X, and X with  missing values  DBx = the subset of tuples containing x  IF  the sup of CI1   min_rep then discard  Else  IF  the sup of CI1   min_sup then move to RB1 Else  FI1 = the remaining set of CI1  Endif  Endif  For i = 2 to n  Perform self-join FIi-1 to generate CIi  Perform join FIi-1 with RBi-1 to generate RCi  IF the itemset of RCi  map to Definition 1  then perform composed  Endif  //scanning Table DB again.//  IF  the sup of CIi  min_rep then discard  Else  IF  the sup of CIi  min_sup then move to RBi Else  FIi = the remaining set of CIi  Endif  Endif  IF  the sup of RCi  min_sup then move to RBi Else  move to FIi  Endif  FI =  FIi  Dis(X) = the subset of tuples containing X, and X with  missing values  DBx = the subset of tuples containing x  IF  FIi =   or  i = the cardinality of the relation  then exit  Endif  Next  End  Algorithm B  //generate strong association rules uses the found     frequent itemsets straightforward.//  Input: FI, Dis(X), DBx and min_conf  Output: ARset // strong association rule set.//  Begin  Perform generating association rule R:  from FI  IF the conf( )  min_conf and  is not a value  composed item then move R to ARset  Endif  End  5.Results and Conclusions  For the experiment we use the Breast-cancer database from  UCI Machine Learning Repository. The database contains 277  records without missing value. There are 10 attributes for each  record. We randomly introduce 30 missing values for each  attribute among the database. For The RAR and RCAR  methods, we use the following three values as mining  thresholds, i.e. min_sup=65%, min_conf=65%, and  min_rep=3%, as shown in the Fig. 2 and 3, there are 74  predicted missing values are found by RAR rules, and  only 63 values are accurate. Meanwhile, the relative  values of those are 120 and 73 by RCAR.

RCAR preserves the integrity of RAR method and ability  of quantifying the quality of the prediction, and increate the  MVC rate with RAR as a tool. Hence it can satisfy the  requirement of valid database and become a practical tool that  missing value researches lack for a long time.

The universal goal of the widely used recycle technique is  to find valuable information in seemingly useless data. We  apply RCAR, originally created for missing value completion  techniques, to reuse and compose the deleted itemsets in the  association rule mining process. The resulted database not  only demonstrate the meaning of recycling, but also displays  high values of recovering database with categorical data types.

6.References [1] R. Agrawal, T. Imielinski, and A. Swami: Mining  Association Rules between Sets of Items in Large Database.

ACM, 1993, pp.207-216.

[2] R. Agrawal, H. Mannila, R. Srikant, H. Toivonen, A.I.

Verkamo: Fast Discovery of Association Rules. Advances in  Knowledge Discovery and Data Mining, MIT Press, Cambridge,  MA., 1996, pp.307-328.

[3] R. Agrawal and R. Srikant: Mining Quantitative Association  Rules in Large Relational Tables. In ACM SIGMOD Conf.

Management of Data, 1996, pp.1-12.

[4] D.W. Cheung, V.T. NG, A.W. FU, and Y.Fu: Efficient  Mining of Association Rules in Distributed Databases. IEEE  Transactions on Knowledge and Data Engineering, VOL. 8, NO.

6, 1996, pp.911-922.

[5] U. Fayyad, G. Piatetsky-Shapiro, and P. Smyth: The KDD  Process for Extracting Useful Knowledge from Volumes of  Data. Communication of the ACM, Vol. 39, NO.11, 1996,  pp.27-34.

[6] J. Han and M. Kamber: Data Mining: Concepts and  Techniques. Morgan Kaufmann Pub, 2000, pp.105-251.

[7] J.R. Quinlan: C4.5: Programs for Machine Learning.

Morgan Kaufmann, San Mateo, CA., 1993.

[8] J.R. Quinlan: Unknown attribute values in induction.

Proceeding of the 6th International Workshop on Machine  Learning, Morgan Kaufmann, Los Altos, CA., 1984,  pp.164-168.

[9] A. Ragel and B. Cremilleux: MVC-a preprocessing method  to deal with missing values. Knowledge-Based Systems, 1999,  pp.285-291.

[10] A. Ragel and B. Cremilleux:Treatment of Missing Values  for Association Rules. Proceeding of the Second Pacific-Asia  Conference on Knowledge Discovery and Data Mining  (PAKDD-98), Melbourne, Australia, 1998, pp.258-270.

[11] A. Savasere, E. Omiecinski, and S. Navathe: An Efficient  Algorithm for Mining Association Rules in Large Databases.

Proceedings of the 21th VLDB Conference, Zurih, Swizerland ,  1995, pp.432-444.

