

EFFECTIVE ALGORITHM OF MINING FREQUENT ITEMSETS FOR ASSOCIATION RULES  /'  /' ' PEI-QI LN, ZENG-ZHl LI, YIN-LUNG ZHAO  Institute of Computer Architecture & Network, Wan Jiaotong University, Xi'an 710049, China E-MAIL: peiqiliu@l63.com  Abstraet: The efficiency of mining assodation rules is an important  6eld of MID. The algorithm Apriori is a classid algorithm in mining assoeiation rule.%'It is a breadth h t  seareh on the Mice space of itemsets. Though it makes use of anti-monotone of itemsets to d u c e  searehiog breadth, the algoritbmic complexity of time is stiU the exponential quantity.

In this artide, the concepts of the generation and the ordinal itemsets hee are intmduced. The ordinaI itemsets hee is the dynamic description of mining relation OF itemsets, and the vegetal ability OF the ordinal itemsets bee is described by the generation. Through the study of the association rules, the condusion that all frequent itemsets rue not dl vegetal itemsets and all vegetal itemsets rue all Frequent itemsets is discovered. With this condusion, the number of the candidate itemaets can be reduced further to improve the efficiency of mining assoeiation rules and d u c e  the searching breadth.

According to the generation, the AprioriFREQ algorithm, which is the improvement algorithm of Apriori, is designed in this article. By testin& the efficiency of the AprioriFREQ algorithm is obviously higher than the Apriori's  Keywords:  Ordinalitemsetstree Associational rules; Frequent itemsew, Generation;  1. Introduction  Data mining is a cross subject of artificial intelligence, machine learning and database. Its aim is extracting unknown knowledge from a great mount of data. Data mining has been used in communication, network and marketing etc. In all fields of data mining, the most active field of research is the association rules mining. Many scholars have proposed lots of algorithms for mining association rules. The algorithm Apriori[l] is a classical algorithm of mining association rules. Since then, many improved algorithms had been proposed. For example, the algorithms of AprioriTID and AprioriHybird are described in [2]. These algorithms are based on breadth first search on the lanice space of itemsets. But the complexity of time is still the exponential quantity, so the procedure of mining  0-7803-8403-2104/520.00 an004 IEEE  association rules is a NF' problem.

In this article, the concepts of the generation and the  ordinal itemsets tree are proposed to describe the vegetal ability of the supersets of frequent itemsets in the lattice.

Combing the generation and anti-monotone of itemsets[3][4], the algorithm AprioriFREQ is designed.

This algorithm can reduce the cardinal number of the candidate itemsets and improve the efficiency of mining association rules effectively. '  2. Basic Conception  The concept of the association rules was fmt proposed by R. Agrawal. It is used to describe the patterns of customers' purchase in the supermarket. The association d e s  can be formally defined as Definition 1: Let I=(i,, iz ...., i. ] be f ~ t e  itemsets. D=(< Tid, TAT E I) is a transactional database. Where ik( k E [ 1.2.. ..,m)) is an item, and Tid is the exclusive identifier of transaction Tin transactional database.

Definition 2: Let X CT, Y c T, and X n Y= 0. The implication of the form X 3 Y is called an association rules. where X C T  and Y C T  are purchases patterns of customer.

Definition 3: Let D is a transactional database. If the percentage of transactions in D that contain XU Y is s% , the rule X * Y holds in D with Support s. If the percentage of transactions in D containing X that also contain Y is c%, the rule X 3 ' Y  has Confidence c. The definitions of probability are,  Support( x =3 Y)= P( x U Y) Confidence ( X 3 Y)=P(YlX)   Rules that satisfy both minimum support threshold (minsup) and minimum confidence threshold (minconf) are called strong d e s .

Definition 4: If the support of itemsets X is greater than or equal to minimum support threshold, X is called frequent itemsets. If the support of itemsets X is smaller than the minimum support threshold, X is called infrequent  1 447  mailto:peiqiliu@l63.com   Proceedings of the Third Intemational Conference on Machine Leaming and Cybemetics, Shanghai, 26-29 August 2004  itemsets.

According to definition 4, we can get the following  properties, Property 1: Let Y Y. If Y is frequent itemsets, X is also frequent itemsets.

Property 2: Let Y G I  and XGY.  If the X is infrequent itemsets, Y is also infrequent itemsets.

The correctness of property 1 and property 2 can be gained easily. These properties can be used to reduce searching width of mining association rules.

Definition 5: Let X be frequent itemsets and X E Lk. If the percentage of transactions containing XU Iik}itemsets in D is g%, the g is called Generation of X. Where ik E I, Lk is a frequent itemsets, and its cardinal number is k.

In the definition 5, the concept of generation of itemsets is used to describe the ability of generating candidate itemsets in mining association rules. When the algorithm Apriori generates Ck+l using Lr. the generation can reduce ck+l to make c k + l  be close to LK+I. By means of this technique, the efficiency of Apriori can be improved further. In order to reflect the function of generation, support, and anti-monotone of itemsets in mining association.rules, the concept of the ordinal itemsets tree is introduced in this article. The ordinal itemsets tree has some resemblance with the lexicographic tree in [51[61[71.

The ordinal itemsets tree can be defined as, Definition 6 The ordinal itemsets tree is a lexicographic trc. It bas some properties, 1. The root node is the empty itemsets( 0).

2. The items in I are children nodes of 0. That is, the  children nodes of Q, are il,iz ,... , and i,. ' .

3. An any node ikik+l...Ik+ ~ ( l ~ i k < i r + , <  ... <ik+l~n)  in the  ordinal itemsets tree bas children nodes . The children nodes are ikik+l-~k+lik+l+l, irik,~ ... i1;+14+1+~, ..., i&+l ...ik+14+1+,,,,  Where m=n-k-1.

The ordinal itemsets. tree, corresponding to Table 1, is  showed in figure 1. In the figure 1, the children of are A, B, C, D, E, and F, The children of A are AB, AC, AD, AE and AF. Using definition 6, the ordinal itemsets tree describes the process of generating superset by frequent itemsets and vegetal itemsets. It reflects a dynamic process of mining association rules.

D e w t i o n  7: In transactional database, if the generation of frequent itemsets X is great than or q u a l  to the minimum suppoa threshold, X is called vegetal itemsets, otherwise X is called unvegetal itemsets.

Theorem: Let X be frequent itemsets in the ordinal itemsets tree. If Xguninsup, the children of X must be infrequent itemsets.

h o o f :  Let X be a frequent itemsets in the ordinal itemsets  I and X  . .  .

tree and X U  (ix] be children of X. When the algorithm scans the transactional database to count the Support of X, it can also count the generation of X. By the definition 5,  if the generation of X is g, the support of itemsets X U 1 ik) also is g, where ik is an arbitrary item after X. If

X.g<minsup, the counter of the transactions containing XU {ik] is smaller than minsup. From definition 4 and definition 5, XU { ik) must be infrequent itemsets and X is a  . unvegetal itemsets. So XU {ir) can be deleted from C,,,.

E  Through the proof of the theorem, we draw a conclusion that the generation can reduce the redundancy of the candidate itemsets in mining association rules.

3. Design the algorithm of mining assodation rules  StudyGg the process of mining frequent itemsets and the relation of itemsets, we can find out many redundadt candidate itemsets in Ck+l which are generated by Lk in the k-th mining loop. The reason generating these redundant candidate itemsets is that the support of some (k+l)-itemsets, which is supersets of the frequent itemsets in Lk, is smaller than the minsup. In order to make the cardinal number of candidate itemsets Crtl be near to the cardinal number of frquent itemsets L,,, the concept of the generation is introduced on the basis of Apriori. In the mean time of calculating the support of itemsets in CL, we also calculate their generation. In this way, we can reduce the cardinal number of the candidate itemsets in each loop and improve the efficiency of mining algorithm.

Moreover, we can delete the transactions that can't generate frequent itemsets in the process of scanning database. It was described in [8]. By this method, the volume of the database can be reduced rapidly and the mining efficiency can also be improved.

The new algorithm, using the concepts of the support and the generation to improve the efficiency of mining frequent itemsets, is also similar to Apriori. It can be divided into two steps. First, the algorithm finds out all frequent itemsets. Then it generates all association rules from frequent itemsets. Obviously, the second step is easy than fmt step, so we only describe the algorithm of the fmt step. We call this algorithm AprioriFREQ. It can be described briefly as follows, Algorithm: AprioriFREQ /Wing used to find out all frequent itemsets in database.

Input: DB, minsup // DB is a database and minsup is the minimum support threshold.

Output: Result  Result :=[ ] k :=l;     . .

ck:= (large I-itemsets] Whiile(Ct) do Begin . .

V CECk, create c.counter1 and c.counter2; for (i=l;i<=IDBl;i++) begin  if ITil=k-l then delete Ti; //the Ti is i th transaction.

then delete Ti and its subsets: if (.TiGDB, XcSr. , ,  ITil-IXI=O) ,  if c s T i  then c.counterl++; if cETiAITil>k then c.counter2++;  if(X C Sk.1~ T i c  DB v ITil=k+l, Ti-XG Sz) ,  then delete Ti and its subsets;  end L k =  Icl cEC,Ac.counterl>minsup}: L' k =  (cl cECkAc.counter2>minsup) Sr= Cr-L k: If (k==2) S = S k ; Result: = Result U L I; k=k+ 1 ;  C ~ ( C l C E L k . i A C E L ' r . , ~ L ' k . , ] ; lithe operator is the connection of two vegetal itemsets.

End The algorithm generates 1-itemsets, 2-itemsets, . ..,  and k-itemsets in tum. If ck is empty for some k, the algorithm ends. The counter1 and counter2, which are used to count the support and the generation, are generated in every loop. If c.counter1 Sminsup, the itemsets c will be added into Lk . If c.counter23minsup. the itemsets c will be added into Uk. By connecting two Ck, we can gain the candidate itemsets Ck+l. The Sr and SZ in the algorithm are two infrequent itemsets. By using Sk and Sz, the volume of database can be reduced rapidly.

. .

4. Examples  A transactional database is showed in Table 1, and the minimum support threshold is 20%. The result of mining association rules which is generated by algorithm AprioriFREQ is illustrated in figure 1. The figure 1 which is an ordinal itemsets free describes the process of mining association rules. In the ordinal itemsets tree, the rectangle with solid line stands for frequent itemsets, and rectangle with dashed stands for infrequent itemsets, and dashdotted rectangle stands for an unvegetal itemsets. The itemsets connecting with dashed shows that the itemsets is reduced hy infrequent itemsets, and itemsets connecting with  dashdotted line is reducing by unvegetal itemsets. For example, itemsets DE has support 2, and generation 1. The <temsets ADE, BDE, CDE and DEF can be reduced by DE.

The Ca of AprioriFREQ is (ABC, ABD, ACD, ACE, ACF, BCD, BCE, CEF], while Cn of Apriori is [ABC, ABD, ABE, ACD, ACE, ACF, ADE, ADF, AEF, BCD, BCE, BDE, CDE, CDF, DEF, CEF]. Obviously, the candidate itemsets of new algorithm is smaller than old algorithm's.

So the efficiency of AprioriFREQ is higher than Apriori's.

Tablel. Transactional database I TID 1 Transactions  A, B, C, D, E  -Ah1 1 BF, ~  Figure 1. The ordinal itemsets tree of AprioriFREQ  5. Analysis and evaluation of the algorithm  The algorithm AprioriFREQ has been implemented by Visual C++6.0 on a personal computer with 1.7 GHz Pentium 4 CPU, 256MB main memory and Microsoft Windows98 operation system. The experiment datahase  1449 . .

. sources are 10 simulative databases with 1000, 2000, 3000, until loo00 transactions. The testing results of experiments are showed in figure 2 and figure 3.

40 1  4-m -A- ApriorFRM  Figure 2. The difference of mining time by algorithm Ariori and AprioriFREQ  I  and same database, which has 8000 transactions.

By the describing in the figure 2 and figure 3, the  mining efficiency of algorithm AprioriFREQ relates to not only the number of transactions of the transactional database, but also the stlllcture and length of transaction in database. For a transactional database in fine shucture, the mining efficiency of algorithm AprioriFREQ has improved remarkably. Because of decreasing of frequent itemsets in same transactional database, the mining time of algorithm AprioriFREQ will decline rapidly with ascending of minimum support.

6. Conclusions  \  Through the research of classical algorithm Apriori for mining association rules, we put forward the concept of the generation and the ordinal itemsets tree in the mining association rules in this article. The generation CM reduce the redundanky of the candidate itemsets directly generated from frequent itemsets. With this method, the candidate itemset is much closer to the frequent itemsets, so the mining efficiency of association rules will be improved greatly. We design the new algorithm AprioriFREQ according to the generation. Through testing, the mining efficiency of the new algorithm can be improved obviously if the distributing of the cardinal number of itemsets is symmetrical, otherwise the efficiency of algorithm AprioriFREQ will be the same as the Apriori's approximately. In the future research of mining association d e s ,  we will study more efficient algorithm for the database with the same length records.

Acknowledgements  This paper is supported by National Natural Science Foundation of China. The Grant number is 60173066.

