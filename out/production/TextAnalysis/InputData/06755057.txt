Comparative Study of a Hybrid Model for Network Traffic Identification and its Optimization using Firefly Algorithm

Abstract?Considerable effort has been made by researchers in the area of network traffic classification, since the Internet grows exponentially in both traffic volume and number of protocols and applications. The task of traffic identification is a complex task due to the constantly changing Internet and an increase in encrypted data. There are several methods for classifying network traffic such as port-based and Deep Packet Inspection (DPI), but they are not effective since many applications use random ports and the payload could be encrypted. This paper proposes an Optimized Hybrid Model (OHM) that makes use of a rule-based model (Apriori) along with a self-organizing map (SOM) model to tackle the problem of traffic classification without making use of the payload or ports. The proposed method also allows the generation of association rules for new unknown applications and further labeling by experts. Besides that, a optimizer called Firefly Algorithm was also used to enhance the results by optimizing both Apriori and SOM parameters and a comparative study was performed on both optimized and non-optimized models.

The OHM showed to be superior to a non-optimized model for both eMule and Skype applications, reaching levels superior to 94% for correctness rate. The OHM was also validated against another model based on computational intelligence, named Realtime, and the OHM proposed in this work presented better results when tested in real time.

Keywords-Association Rules; Self-Organizing Maps; Net- work Traffic Measurement; Firefly Algorithm;

I. INTRODUCTION In recent years the research effort towards network traffic  identification has been growing [1] [2] [3] [4] [5]. As the Internet grows exponentially in both traffic volume and number of protocols and applications, it is essential to understand the composition of dynamic traffic characteristics to recognize protocols and applications which are often encrypted.

In this context, identifying network traffic is a complex task, since access to the Internet is significantly increasing, bringing with it new users with different goals. Many P2P applications are increasingly popular and accessible, such as eMule, Ares, and BitTorrent [6] [7]. The users behavior is also changing and the growth of streaming video services is notable [5]. To bring to the experts attention what is flowing through a network is an increasingly important activity.

There are several methods for classifying network traffic, such as port and payload (Deep Packet Inspection (DPI))  based analysis [8] [9]. The classification method based on ports assumes that applications always use well-known port numbers registered by the Internet Assigned Num- bers Authority (IANA) [10]. This is inaccurate since many applications use nonstandard ports to bypass firewalls or circumvent operating systems restrictions, specially for P2P applications [11]. The payload inspection technique or DPI, in turn, eliminates the problem of using random port number used for a specific application or protocol. The technique works starting with a classifier that extracts the payload from TCP/UDP packets and scans each packet in search of signatures that can identify the flow type. However, this approach assumes that the access to the payload of every packet is always visible, that is, not encrypted.

Recently, some methodologies have been investigated as network traffic classification tools. The work presented in [12] demonstrates the use of data mining techniques to classify flow and user behavior profiles. In order to classify the network traffic, the clustering k-means algorithm is used and compared to other model-based clustering methods along with rule-based classification models. Associations were found among flow parameters for several protocols and applications, such as Hypertext Transfer Protocol (HTTP), Mail, Simple Mail Transfer Protocol (SMTP), Domain Name System (DNS) and Internet Relay Chat (IRC). However, the variables used were source port, destination port, source IP address and destination IP address, and they may not be efficient when this technique is used for applications that enable obfuscation techniques or which are constantly changing pairs, IP addresses and random generations of ports number (eg. eMule, BitTorrent and Gnutella).

The authors in [3] propose a methodology based on a hybrid combination of two machine learning algorithms - K-Nearest Neighbor (KNN) and K-Means, but this method works only with prior knowledge of the number of analyzed applications, i.e., the number of formed groups. Some works [1] [2] [4] [8] [9] [12] [13] do traffic classification based on port number, payload, or even the use of machine learning algorithms. Some of these works exhibit signatures or association rules, resulting in extracted patterns. However, as already explained, these methods are not efficient for encrypted data and when applications make use of random     ports. Furthermore, few studies validate their methods in real time.

In [14], it was proposed a methodology to extract patterns automatically, and to identify and classify network traffic in real time without performing payload inspection and without the need for known ports. It was proposed a real time hybrid model that combines the algorithm that automati- cally generates the association rules with a self-organizing maps (SOM) model to characterize the traffic. The model used a machine learning algorithm based on Apriori [15] for the automatic extraction of association rules, choosing the most representative rules for each type of traffic. One characteristic of association rules is that these are easy to understand, unlike complex mathematical models. With the generated rules, the expert is able to identify the patterns more easily, assisting in decision making, e.g., blocking rules in firewalls. The model also uses an algorithm based on SOM [16] to perform grouping of protocols and applications traffic, dividing it by similarity to help with rules generation and as a second classifier. Moreover, the proposed model was capable of grouping unknown traffic for future tagging by experts (e.g. new applications traffic).

The proposed hybrid model presented by [14] showed to be efficient on the task of identifying most investigated applications and protocols, however the results for eMule and Skype applications can be improved regarding the correctness metric. This paper aims to improve their results by enhancing the model using the Firefly Algorithm [17] to optimize the SOM and Apriori parameters; in this work, our previous work [14] is labeled as Hybrid Model (HM) and this work proposes an Optimized Hybrid Model (OHM) by using the Firefly Algorithm as the optimizer.

This paper is organized as follows: Section II we briefly review the techniques used in this paper; Section III shows the OHM methodology; Section IV presents the experiments and the analysis of the results. Finally, Section V concludes with final considerations.



II. FUNDAMENTALS  The machine learning is a very promising approach for traffic classification, since classification using artificial intel- ligence techniques can be used to identify traffic data without relying on packet payload. To deal with the analysis of huge network traffic data, machine learning techniques have been used as important tools for extracting association rules and performing traffic classification.

A. Self-Organizing Maps (SOM)  Self-Organizing Maps (SOM) or Kohonens Self- Organizing Map is a clustering technique and data visualization technique that uses neural networks. These were based on observations of brain behavior where the unsupervised training is predominant. The main reason for using SOM networks is to group similar input data into  Figure 1. Self-Organizing Maps (SOM). (figure adapted from [18])  classes or groups called clusters [16]. What distinguishes SOM networks from others is a structure of two layers: one input and one output as shown in Fig. 1. The output layer is formed by a grid of neurons connected only to its immediate neighbors where, in this example, there are j input neurons and 15 output neurons.

B. Association Rules  Analysis by means of association rules using Apriori has been studied and applied in a variety of fields such as web mining [19] and intrusion detection systems [20].

The advantage of using association rules is that associations between different databases attributes can be explored in the task of network traffic patterns extraction.

Association rules show how the occurrence of an item set implies the occurrence of some other distinct item set in records of the same database. The main objective of association rules is to find items that occur simultaneously and often in large transaction databases, facilitating the understanding of data behavior, since the use of association rules techniques make it possible to predict not only the class but any other attributes, like, for example, a network traffic behavioral profile.

Agrawal et al. [15] presented a mathematical model in which parameters such as support and confidence are considered. The support corresponds to the frequency of the occurrence of patterns throughout the database, while confidence is a measure of the force of rules, which indicates the frequency at which items in Y appear in occurrences containing X. Both parameters are used in this paper.

C. Information Gain  Before extracting the rules, the stored data must be evaluated according to their relevance by measuring the information gain. Information gain is a measure based on the entropy of a system, that is, on the disorder degree of a system. This measure indicates to what extent the whole systems entropy is reduced if we know the value of a specific attribute. Thus, it can show us how the whole system is related to an attribute; in other words, how much information this attribute contributes to the system [21].

Figure 2. The Optimized Hybrid Model (OHM).

D. Firefly Algorithm  The Firefly Algorithm (FA) [17] is a metaheuristic, nature- inspired optimization algorithm. FA can solve mixed vari- able structural optimization problems and mimics the social behaviour of fireflies. It is based on the swarm behavior such as fish, insects or bird schooling in nature. In the algorithm, a less bright firefly will move towards a brighter one, taking into consideration a percentage of randomness.

The brightness of a firefly is determined by the objective function value for the given problem, that is, the higher the brightness, the better the solution, which is determined by the firefly position.

Experiments [22] showed that FA performed better than other well-known metaheuristic algorithms such Particle Swarm Optimization (PSO), Genetic Algorithm (GA), Sim- ulated Annealing (SA) and Harmony Search (HS), tested against six structural optimization problems. Therefore, FA was selected as the algorithm to optimize the parameters of the computation intelligence techniques used by the OHM.



III. PROPOSED MODEL  The proposed techniques in the literature cover several models to deal with traffic identification and pattern ex- traction. However, the number of new Internet applications increases at a high speed, and to extract patterns and identify applications is a complex task, especially when it comes to new applications done without the analysis of the payload and done in real time. To deal with this problem, this paper presents an optimized hybrid model (OHM) for traffic classification based on Apriori and SOM algorithms.

A. Architecture  In our previous work [14] (HM), the model was divided into two main modules: a rule-based classifier and a second classifier named SOM Classifier, forming a hybrid model. In Fig. 2, we present an overview of the OHM for automatic pattern extraction and real time traffic classification. The model is optimized by the FA to search for better results when compared to [14].

The main objective is to generate association rules, i.e., knowledge from network traffic. One of the advantages of a rule-based classifier is that the generated knowledge is easily readable and understood by experts, unlike the case of complex mathematical models. The rules are used to classify  Table I FIREFLY ALGORITHM PARAMETERS  Parameter Value  Number of Fireflies 20 Iterations (n) 50  Alpha Coefficient (?) 0.8 Minimum Attractiveness (?0) 1  Absorption (?) 1  traffic with low computational cost, without the need to perform complex calculations. In the OHM of Fig. 2, the rule-based classifier was previously trained and is described in Section III-B2. In Fig. 2, after the data is pre-processed (Section III-B1), if traffic is known, the results are presented, and otherwise an SOM classifier is used to aid in traffic classification. The SOM model was previously trained as described in Section Section III-B3.

The proposed model also deals with unknown traffic. In case both classifiers, the rule-based and SOM, does not have a label for the packet being investigated, it is then classified as unknown. Unknown data is stored for future retraining and this dataset is subjected to another SOM network (data partitioning in Fig. 2). For each dataset partition, new rules are generated with the help of an expert to label each cluster, that is, each unknown traffic. In a new capture cycle, the retrained unknown traffic would be labeled correctly. The analyzed applications were eMule and Skype, since both applications didn?t achieve good results of correctness in [14].

Both computational techniques described in Fig. 2 had their parameters optimized by the FA during the training phase described in the next subsection. The FA parameters used are described in Table I. The number of iterations (n) was 50 and the number of fireflies was 20. Each firefly is evaluated in each generation (iteration), so the objective function was evaluated 1000 times for each computational technique.

B. Training Process  The assembly of the OHM is explained in the next subsections.

1) Pre-processing: The datagram header has several fields that could be used in the network traffic training and classification process. But not all fields are relevant for association rules generation. Thus, an algorithm based on information gain [23] was used to refine the most significant attributes to be used (feature selection).

The most relevant attributes determined by the infor- mation gain algorithm were: DataLength (referring to the datagram length field), Flag (associated with the flags field), Lay (associated with the upper layer protocol field), Tc- pLength (relative to the packet payload size (TCP)) and SegmentLength (relative to the packet payload size (UDP)),     Figure 3. Rule-based classifier training process optimized by Firefly Algorithm.

totaling five attributes. The attributes TcpLength and Seg- mentLength were calculated since they are not part of the header. Note that neither payload nor port information is used in the process. The traffic was pre-processed so that only these five attributes were used as input data. In the training of the SOM model (Section III-B3), the duplicated records were removed from the database and then normal- ized.

2) Rule-based Classifier: The rule-based classifier used in the OHM (Fig. 2) was generated from the training process of Fig. 3. The training was conducted using real time traffic as input (online). The entire process was repeated for each application, ensuring that only a particular application traffic would be trained at any time. The difference in the process, when compared to [14], is that the parameters of the rule- based classifier, that is, support and confidence, are now optimized by a FA. The objective was to optimize the model correctness rate (see Table II).

At first, the rules database is empty, and therefore the application is labeled as unknown. After storing 30,000 unknown packets, new rules are generated to classify this initial unknown traffic. As it is ensured that what is flowing through the network traffic belongs to the application that is being trained at the moment, the rules are labeled according to the corresponding application. Each passage through the Apriori training stage corresponds to a training cycle. The training process ends when the result of the classification correctness rate (see Table II) and the number of rules in the database does not increase after 10 consecutive cycles.

After the training process execution for both eMule and Skype applications used in this work, a single rules database is created by unifying all rules databases found, which is then used as the rules database on the rule-based classifier on the proposed hybrid model (Fig. 2). The Apriori algorithm generates a huge number of rules, so it was necessary to realize a filter process to determine the most relevant rules.

Relevant rules were defined as the rules with the greatest number of used attributes in their composition that represent an application.

Table II METRICS USED IN THE EXPERIMENTS  Metric Equation  Accuracy (AC)  AC = AD D  AD = number of packets correctly detected.

D = number of packets detected.

Correctness (CR)  CR = AD A  AD = number of packets correctly detected.

A = real number of packets of the desired application.

Completeness (CP)  CP = D A  D = number of packets detected.

A = real number of packets of the desired application.

False Negative Rate (FN)  FN = FN A  FN = number of packets of a desired application that was not  detected.

A = real number of packets of the desired application.

False Positive Rate (FP)  FP = FP D  FP = number of packets incorrectly detected as a desired application.

D = number of packets detected.

Figure 4. SOM classifier training process.

The parameters used in the model were support and confidence. The parameters were optimized by the FA; the objective was to maximize the correctness rate (see Table II) of the rule-based classifier only. The best parameters found by the FA were 1% and 90% for support and confidence respectively.

3) SOM Classifier: The SOM model used in the OHM of Fig. 2 was generated from the SOM network training accord- ing to Fig. 4. An offline and stratified dataset with 100,000 packets was used during the training for each application and was randomly mixed. Several training processes were conducted by the FA. The main objective was to find the best SOM model, that is, maximize the correctness rate (see Table II) of the model for the given training dataset.

In our previous work [14] (HM), the SOM parameters were set to fixed values. In this work (OHM), during the     training process, the SOM parameters were optimized. The parameters were: number of iterations, learning rate and the radius used by the gaussian neighborhood function. The best results achieved by FA for radius, iterations and learning rate were, respectively, 19, 4289 and 0.099.



IV. EXPERIMENTAL RESULTS This section introduces the experimental results when  validating both HM and OHM against the eMule and Skype datasets. A comparative analysis is then performed.

A. Metrics  The models were measured using the metrics described in Table II. In the next subsections we present the obtained results for each metric in order to compare both optimized subsection III-A and non-optimized [14] models. Besides that, a comparative investigation between the model pro- posed by [3] and both HM and OHM was performed.

B. Dataset  The dataset used in the experiments was generated by exclusively running the applications investigated in this work, assuring the collection of the ground-truth data. The experiments were performed in real time and it was ensured that only a determined application was being captured at that time, therefore, the data are submitted without label (unknown data) to the models analyzed in the next subsec- tions. The dataset contains an average of 1,000,000 packets for each application. The packets were pre-processed to extract only the five attributes, serving as input to the classifiers. For the SOM Classifier, the data was normalized.

The experiments were performed at the Point of Presence of Pernambuco (PoP-PE) of the National Network on Teaching and Research (RNP). The comparative investigation between the model proposed by [3] and both HM and OHM was performed in real time.

C. Results  The OHM was discussed in Section III-A and the results obtained in validation, i.e., using the dataset described in Section IV-B are displayed in Table III. Notice that the results of accuracy on the Skype application proved to be superior in the OHM (100%) against a 94.97% rate for the HM, as well as for the other metrics (except for FP).

The results were also superior to the eMule application, when all metrics are considered. The results for correctness (CR) have improve significantly, which clearly indicates the improvement of the model when classifying applications, with less packets being classified as unknown data. Rates of FP were better tackled by the OHM regarding both applications.

Besides that, an investigation was performed to determine the effectiveness of the OHM against the model proposed by [3] (RTM), since it also uses some well-known com- putational intelligence techniques to classify network traffic  Table III EXPERIMENTAL RESULTS  Models (dataset) AC % CR % CP % FN % FP %  HM (eMule) 91.52 76.23 83.29 7.06 0.25 OHM (eMule) 100 94.06 94.06 0.00 0.00 HM (Skype) 94.97 86.66 90.25 3.58 0.00  OHM (Skype) 100 98.06 98.06 0.00 0.22  Table IV RESULTS FOR THE REALTIME MODEL (RTM) [3] AND THE PROPOSED  HYBRID MODEL (PHM)  Applications RTM HM OHM  eMule 94.57 91.52 100 Skype 90.54 94.97 100  data. The experimental results for both eMule and Skype applications and metric (AC (%)) in common with both works, are shown in Table IV.

It can be observed that when both models were validated against a real time traffic scenario, the proposed model (OHM) was far superior when compared to the model proposed by [3] and HM [14].



V. CONCLUSION  This work proposed an Optimized Hybrid Model (OHM) based on computational intelligence techniques, consisting of a rule-based model and a self-organizing map (SOM) model, both optimized by the Firefly Algorithm (FA). Our previous work [14] proposed a hybrid model (HM) to cope with the problem of encrypted data, random ports usage by applications and the identification of new protocols or applications (unknown network traffic) for future labeling by experts, since the architecture has the ability of being in a constant learning process to extract patterns from new applications or protocols. Besides that, the aim of the method is to extract association rules for a network traffic classifi- cation purpose, since rules are easily understood by experts.

However, the results for the eMule and Skype applications didn?t present good results of correctness rate. The aim of this work was to apply a optimizer (FA) to enhance both applications results.

The experimental results showed that the OHM was superior to the non-optimized model (HM), with results for eMule and Skype exceeding 94% of correctness and reducing the rates of false positives and false negatives.

Besides that, the accuracy rate was increased significantly.

The OHM also presented superior rates of accuracy when compared to the Realtime model (RTM) [3] when evaluated against a real time network traffic.

Future work will follow similar directions, performing more tests on different data sets in order to continue to evaluate the robustness of the model. We are also interested in optimize the model not only for the correctness rate, but     for multiple rates simultaneously, using a multi-objective optimization algorithm such as the Multi-objective Genetic Algorithm (MOGA) [24].

