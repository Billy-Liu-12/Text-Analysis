Mining the smallest association rule set for predictions

Abstract  Mining transaction databases for  association rules usu- ally generates a large number of rules, most of which are unnecessary when used for  subsequent prediction. In this paper we define a rule set for  a given transaction database that is much smaller than the association rule set but makes the same predictions as the association rule set by the con- fidence priority. We call this subset the informative rule set.

The informative rule set is not constrained to particular tar- get items; and it is smaller than the non-redundant associ- ation rule set. We present an algorithm to directly generate the informative rule set, i.e., without generating all frequent itemsets first, and that accesses the database less often than other unconstrained direct methods. We show experimen- tally that the informative rule set is much smaller than both the association rule set and the non-redundant association rule set, and that it can be generated more eficiently.

1 Introduction  The rapidly growing volume and complexity of modern databases makes the need for technologies to describe and summarise the information they contain increasingly im- portant. The general term to describe this process is data mining. Association rule mining is the process of generat- ing associations or, more specifically, association rules, in transaction databases. Association rule mining is an im- portant subfield of data mining and has wide application in many fields. Two key problems with association rule min- ing are the high cost of generating association rules and the large number of rules that are normally generated. Much work has been done-to address the first problem. Methods for reducing the number of rules generated depend on the application, because a rule may be useful in one application but not another.

In this paper, we are particularly concerned with gener- ating rules for prediction. For example, given a set of as-  0-7695-1 119-8/01 $17.00 0 2001 IEEE  sociation rules that describe the shopping behavior of the customers in a store over time, and some purchases made by a particular customer, we wish to predict what other pur- chases will be made by that customer.

The association rule set [ l ]  can be used for prediction if the high cost of finding and applying the rule set is not a concern. The constrained and optimality association sets [4, 31 can not be used for this prediction because their rules do not have all possible items to be consequences. The non- redundant association rule set [ 171 can be used, after some extension, but can be large as well.

We propose the use of a particular rule set, called the in- formative (association) rule set, that is smaller than the as- sociation rule set and that makes the same predictions under natural assumptions described below.

The general method of generating association rules by first generating frequent itemsets can be unnecessarily ex- pensive, as many frequent itemsets do not lead to useful as- sociation rules. We present a direct method for generating the informative rule set that does not involve generating the frequent itemsets first. Unlike other algorithms that gener- ate rules directly, our method does not constrain the con- sequences of generated rules as in [3, 41 and accesses the database less often than other unconstrained methods [ 161.

We show experimentally, using standard synthetic data, that the informative rule set is much smaller than both the association rule set and the non-redundant rule set, and that it can be generated more efficiently.

2 Related work  Association rule mining was first studied in [l]. Most research work has been on how to mine frequent itemsets efficiently. Apriori [2] is a widely accepted approach, and there have been many enhancements to it [6 ,7 ,9 ,11,  131. In addition, other approaches have been proposed [5 ,  14, 181, mainly by using more memory to save time. For exam- ple, the algorithm presented in [5] organizes a database into a condensed structure to avoid repeated database ac-     cesses, and algorithms in [ 14, 181 use the vertical layout of databases.

Some direct algorithms for generating association rules without generating frequent itemsets first have previously been proposed [4, 3, 161. Algorithms presented in [4, 31 focused only on one fixed consequence and hence is not ef- ficient for mining all association rules. The algorithm pre- sented in [ 161 needs to scan a database as many times as the number of all possible antecedents of rules. As a result, it may not be efficient when a database cannot be retained in the memory.

There are also two types of algorithms to simplify the association rule set, direct and indirect. Most indirect algo- rithms simplify the set by post-pruning and reorganization, as in [15, 8, lo], which can obtain an association rule set as simple as a user would like but does not improve effi- ciency of the rule mining process. There are some attempts to simplify the association rule set directly. The algorithm for mining constraint rule sets is one such attempt [4]. It produces a small rule set and improves mining efficiency since it  prunes unwanted rules in the processing of rule min- ing. However, a constraint rule set contains only rules with some specific items as consequences, as do the optimality rule sets [3]. They are not suitable for association prediction where all items may be consequences. The most significant work in this direction is to mine the non-redundant rule set because it simplifies the association rule set and retains the information intact [ 171. However, the non-redundant rule set is still too large for prediction.

3 The informative rule set  3.1 Association rules and related definitions  Let I = { l , 2 , .  . . , m} be a set of items, and T C I be a transaction containing a set of items. An itemset is defined to be a set of items, and a Ic-itemset is an itemset containing k items. A database D is a collection of transac- tions. The support of an itemset (e.g. X) is the ratio of the number of transactions containing the itemset to the num- ber of all transactions in a database, denoted by s u p ( X ) .

Given two itemsets X and Y where X n Y = 0, an asso- ciation rule is defined to be X +- Y where sup(X U Y ) and sup(X U Y ) / s u p ( X )  are not less than user specified thresholds respectively. sup(X U Y ) / s u p ( X )  is called the conjidence of the rule, denoted by c o n f ( X  + Y ) .  The two thresholds are called the minimum support and the min- imum confidence respectively. For convenience, we abbre- viate X U Y by X Y  and use the terms rule and association rule interchangeably in the rest of this paper.

Suppose that every transaction is given a unique identi- fier. A set of identifiers is called a tidset. Let mapping t ( X ) be the set of identifiers of transactions containing the item- set X .  It is clear that s u p ( X )  = I t (X)l / lDl .  In the follow-  ing, we list some basic relationships between itemsets and tidsets.

1. x c Y =5 t ( X )  2 t ( Y ) ,  ? ? 2. t ( X )  t (Y )  + t ( X 2 )  2 t (Y2 )  for any 2, and 3. t ( X Y )  = t ( X )  n t (Y) .

We say that rule X + Y is more general than rule X? + Y if X c X?,  and we denoted this by X + Y c X? + Y .

Conversely, X? + Y is more spec@ than X + Y .  We define the covered set of a rule to be the tidset of its an- tecedent. We say that rule X =+ Y identij5es transaction T if X Y  C T .  We use X z  to represent X U { z }  and sup(X-2 ) for s u p ( X )  - s u p ( X 2 ) .

3.2 The informative rule set  Let us consider how a user uses the set of association rules to make predictions. Given an input itemset and the association rule set. Initiate the prediction set to be an emp- tyset. Select a matched rule with the highest conference from the rule set, and then put the consequence of the rule into prediction set. We say that a rule matches a transac- tion if its antecedent is a subset of the transaction. To avoid repeatedly predicting on the same item(s), remove those rules whose consequences are included in the prediction set.

Repeat selecting the next highest confidence matched rule from the remaining rule set until the user is satisfied or there is not rule to select.

We have noticed that some rules in the association rule set will never been selected in the above prediction proce- dure, so we will remove those rules from the association rule set and form a new rule set. This new rule set will pre- dict exactly the same as the association rule set, the same set of prediction items in the same generated order. Here, we consider the order because a user may stop selection at any time, and we will guarantee to obtain the same prediction items in this case.

Formally, given an association rule set R and an itemset P,  we say that the predictions for P from R is a sequence of items Q. The sequence of Q is generated by using the rules in R in descending order of confidence. For each rule r that matches P (i.e., for each rule whose antecedent is a subset of P) ,  each consequent of T is added to Q. After adding a consequence to Q,  all rules whose consequences are in Q are removed from R.

To exclude those rules that never been used in the pre- diction, we present the following definition.

Definition 1 Let RA be an association rule set and R i  the set of single-target rules in RA. A set RI is informative over RA if(1) RI c Ra; (2) V r  E RI $r? E RI such that r? c r and c m f ( r ? )  2 con f ( r ) ;  and ( 3 )  VT? E Ra - RI, 3r E RI such that r? 3 r and c o n f ( ~ ? )  5 conf(r) .

3 62    The following result follows immediately.

Lemma 1 There exists a unique informative rule set for any given rule set.

We give two examples to illustrate this definition.

Example 1 Consider the following small transaction database: ( 1  : {a ,b ,c} ,2  : {a ,b ,c} ,3  : {a ,b ,c} ,4  : {a ,  b, d } ,  5 : { a ,  c, d } ,  6 : {b,  c,  d}} .  Suppose the minimum support is 0.5 and the minimum confidence is 0.5. There are 12 association rules (that exceed the support and con- fidence threshholds). They are { a  =$ b(0.67,0.8), a +- c(0.67,0.8),b =$ c(0.67,0.8),b +- a(0.67,0.8),c + a(0.67,0.8),c + b(0.67,0.8),ab + c(0.50,0.75),ac +- b(0.50,0.75), bc +- a(0.50,0.75), a =$ bc(0.50,0.60), b +- aq0.50,0.60), c =$ ab(0.50,0.60)}, where the numbers in parentheses are the support and conjidence respectively.

Every transaction identijied by the rule ab + c is also iden- tified by rule a =$ c or b + c with higher confidence. So ab + c can be omitted from the informative rule set without losing predictive capability. Rule a =$ b and a +- c pro- vide predictions b and c with higher conjidence than rule a + bc, so rule a +- bc can be omitted from the infor- mative rule set. Other rules can be omitted similarly, leav- ing the informative rule set containing the 6 rules { a  + b(0.67,0.8),a =$ c(0.67,0.8),b + c(0.67,0.8),b + a(0.67,0.8),c =$ a(0.67,0.8),c + b(0.67,0.8)}.

Example 2 Consider the rule set { a  + b(0.25,1.0), a + c(0.2,0.7),ab =$ c(0.2,0.7),b + d(0.3,1.0),a + d(0.25, l.O)}. Rule ab + c may be omitted from the in- formative rule set as the more general rule a +- c has equal confidence. Rule a + d, must be included in the informa- tive rule set even though it can be derived by transitivity from rules a + b and b + d. Otherwise, if it were omitted, item d could not be predicted from the itemset {a} ,  as the definition of prediction does not provide for reasoning by transitivity.

rule set.

Theorem 1 Let RA be an association rule set. Then the informative rule set RI over RA is the smallest subset of RA such that, for any itemset P, the prediction sequence for P from RI equals the prediction sequence for P from RA.

Now we present the main property of the informative  Proof We will prove this theorem from two aspects.

Firstly, a rule omitted by RI does not affect prediction from RA for any P. Secondly, a rule set omitted one rule from RI cannot present the same prediction sequences as RA for any P.

Firstly, we will prove that a rule omitted by RI do not affect prediction from RA for any P.

Consider a single-target rule r? omitted by R I ,  there must be another rule r in both RI and RA such that the r c T? and con f ( I - )  2 cun f (T? ) .  When T? matches P, r does.

If both rules have the same confidence, omitting T? does not affect prediction from RA.  If c o n f ( r )  > conf(r?) ,  T? must be automatically omitted from RA after r is selected and the consequence of T is included in the prediction sequenc. So, omitting T? does not affect prediction from R A .

Consider a multiple-target rule in RA,  e.g. A + bc, there must be two rules A? + b and A? +- c in both RI and RA for A? C A such that conf(A? + b) 2 c u n f ( A  =$ bc) and conf(A? =$ c )  2 c o n f ( A  +- c).

When rule A +- bc matches P, A? =$ b and A? + c do.

It is clear that if conf(A? +- b) = conf(A? +- c) = c o n f ( A  =$ bc), then omitting A =$ bc does not affect pre- diction from R A .  If conf(A? +- b) > c m f ( A  +- bc) and conf(A? + c)  > c o n f ( A  +- bc), rule A + bc must be automatically omitted from RA after A? + b and A? +- c are selected and item b and c are included in the prediction sequence. Similarly, we can prove that omit- ting A +- bc from RA does not affect prediction when conf(A? + b) > conf(A? + c)  = c o n f ( A  + bc) or conf(A? +- c)  > conf(A? =$ b) = c o n f ( A  + bc). So omitting A +- bc from RA does affect prediction. Similarly, we can conclude that a multiple-target rule in RA does not affect its prediction sequence.

Thus a rule omitted by RI does not affect prediction from R A .

Secondly, we will prove the minimum property. Suppose we omit one rule X =$ c from the R I .  Let P = X , there must be a position for c in the prediction sequence from RA determined by X + c because there is not other rule X? + c such that X? c X and conf (X? +- c) 2 conf(X + c). When X + c is omitted from R I ,  there may be two possible results for the prediction sequence from R I .  One is that item c does not occur in the sequence. The other is that item c is in the sequence but its position is determined by another rule X? +- c for X?  C X with smaller confidence than X + c. As a result, the two prediction sequences would not be the same.

Hence, the informative rule set is the smallest subset of RA that provides the same predictions for any itemset P.

Consequently, the theorem is proved. 0  Finally, we describe a property that characterises some rules to be omitted from the informative rule set.

We can divide the tidset of an itemset X into two parts on an itemset (consequence), t ( X )  = t ( X 2 )  U t ( X 4 ) .

If the second part is an empty set, then the rule X =$ 2 has 100% confidence. Usually, the smaller is I t ( X 4 ) l , the higher is the confidence of the rule. Hence, It(X+)l is very important in determining the confidence of a rule.

Lemma 2 Z f t ( X 4 )  C t(Y+Z), then rule X Y  + 2 does not belong to the informative rule set.

Proof Let us consider two rules, X Y  + 2 and X + 2.

We know that c o n f ( X Y  + 2) = S ~ / ( S I  + T I ) ,  where  s1 = I t (XY2)I  and r1 = I t (XY-Z) l ,  and c o n f ( X  + 2)  = sa/(s2 + ~ 2 ) ,  where s2 = I t (X2) l  and 7-2 =  r1 = ( t ( X Y I Z ) (  = I t ( X 4 ? )  n t(Ylz)I = It(xlz)l.

I t ( X 4 ) I  = r2.

5-1 = I t (XY2) l  5 I t (X2) l  = s2.

As a result, c o n f ( X Y  =j 2) 5 conf (X + 2). Hence  rule X Y  + 2 must be excluded by the informative rule set.

This is an important property for the informative rule set, since it enables us to predict rules that cannot be included in the informative rule set in the early stage of association rule mining. We will discuss this in detail in the next section.

4 Upward closed properties for generating informative rule sets  Most efficient association rule mining algorithms use the upward closed property of infrequency of itemset: if an itemset is infrequent, so are all its super itemsets. Hence, many infrequent itemsets are prevented from being gener- ated in association rule mining, and this is the essence of Apriori. If we have similar properties of the rules excluded by the informative rule set, then we can prevent generation of many rules excluded by the informative rule set. As a result, algorithm based on the properties will be more effi- cient.

First of all, we discuss a property that will facilitate the following discussions. It is convenient to compare support of itemsets in order to find subset relationships among their tidsets. This is because we always have support information when mining association rules. We have a relationship for this purpose.

Lemma3 t ( X )  C_ t (Y)  if and only if s u p ( X )  = sup(XY) .

We have two upward closed properties for mining the informative association rule set. In the following two lem- mas, we use a description that is easy to use in algorithm design but may not be very good in terms of mathematical simplicity  As a direct result of Lemma 2 and 3, we have  Lemma4 If s u p ( X 4 )  = s u p ( X Y 4 ) ,  then rule X Y  =+ 2 and all more spec$c rules do not occur in the informative rule set.

The following special case is useful in practice.

Lemma 5 I f  s up (X)  = s u p ( X Y ) ,  then for any 2, rule X Y  + 2 and all more spec$c rules do not occur in the informative rule set.

These two lemmas enable us to prune unwanted rules in a ?forward? fashion before they are actually generated. In fact we can prune a set of rules when we prune each rule not in the informative rule set in the early stages of the compu- tation. This allows us to construct efficient algorithms to generate the informative rule set.

5 Algorithm  5.1 Basic idea and storage structure  We proposed a direct algorithm to mine the informative rule set. Instead of first finding all frequent itemsets and then forming rules, the proposed algorithm generates infor- mative rule set directly. An advantage is that it avoids gen- erating many frequent itemsets that produce rules excluded by the informative rule set.

The proposed algorithm is a level wise algorithm, which searches for rules from antecedent of 1-itemset to an- tecedent of l-itemset level by level. In every level, we select qualified rules, which could be included in the informative rule set, and prune those unqualified rules. The efficiency of the proposed algorithm is based on the fact that a number of rules excluded by the informative rule set are prevented from being generated once a more general rule is pruned by Lemma 4 or 5. Consequently, searching space is reduced after every level?s pruning. The number of phases of scan- ning a database is bounded by the length of the longest rule in the informative rule set.

In the proposed algorithm, we extend a set enumeration tree [ 121 as the storage structure, called candidate tree. A simplified candidate tree is illustrated in Figure 1 .  The tree in Figure 1 is completely expanded, but in practice only a small part is expanded. We note that every set in the tree is unique and is used to identified the node, called identity set. We also note that labels are locally distinct with each other under a parent node in a layer, and labels along a path from the root to the node form exactly the identity set of the node. This is very convenient for retrieving the itemset and counting its frequency. In our algorithm a node is used to store a set of rule candidates.

5.2 Algorithm for mining the informative rule set  The set of all items is used to build a candidate tree. A node in the candidate tree stores two sets { A ,  2). A is an itemset, the identity set of the node, and 2 is a subset of the identity itemset, called potential target set where every item can be the consequence of an association rule. For example, {{abc}, {ab}}  is a set of candidates of two rules, namely, bc + a and ac + b. It is clear that the potential target set is initialized by the itemset itself. When there is a case satis- fying Lemma 4, for example, sup(a7c) = sup(abyc), then  3 64    aMp 2 3  2 4  3 4  Figure 1. A fully expanded candidate tree over the set of items {1,2,3,4}  we remove c from the potential target set, and accordingly all rules such as abX + c cannot be generated afterwards.

We firstly illustrate how to generate a new candi- date node. For example, we have two sibling nodes {{abc},  {ab}} and {{abd},  {ad} } ,  then the new candidate is {(abcd}, { a d } } ,  where {ad}  = ({ab} U { d } )  n ( {ad}  U { c } ) .  Hence the only two candidate rules that could be in- cluded in the informative rule set in this case are bcd + a and abc + d given abcd is frequent.

We then show how to remove unqualified candidates.

One way is by the frequency requirement, for example, if sup(abcd) < D then we remove the node whose identity set is abcd, simply called node abcd. Please note here that a node in the candidate tree contains a set of candidate rules.

Another method is by the properties of the informative rule set, and again consists of two cases. Firstly, given a candi- date node {A',  2); where A' means that A' is a Z-itemset.

For an item z E 2, when there is sup((A'\z)iz) = sup((Al-' \z)~z) for (A1\.) 3 (A"-'\z), thenremove the z from Z by Lemma 4. Secondly, we say node {A" 2) is restricted when there is sup(A') = sup(A"-') for A' 3 A"'. A restricted node does not extend its potential target set and keeps it as that of node {A1-' ,  2). The reason is that all rules Al-'X j c for any X and c are excluded from the informative rule set by Lemma 5 ,  so we need not generate such candidates. This potential target set is remov- able by Lemma 4, and a restricted node is dead when its potential target set is empty. All super sets of the itemset of a dead node are unqualified candidates, so we need not generate them.

We give the top level of the informative rule mining algorithm as the following.

Algorithm: The informative rule miner  minimum confidence +.

Input: Database D, the minimum support n and the  Output: The informative rule set R.

Set the informative rule set R = 8 Count support of 1 -itemsets Initialize candidate tree T Generate new candidates as leaves of T While (new candidate set is non-empty)  Count support of the new candidates Prune the new candidate set Include qualified rules from T to R Generate new candidates as leaves of T  Return rule set R  The first 3 lines are general description, and we do not explain them here. We will emphasize on two functions, Candidate generator in line 4 and 9 and Pruning in line 6.

They are listed as follows.

We begin with introducing notations in the functions. ni is a candidate node in the candidate tree. It is labeled by an item ini and it consists of an identity itemset Ani and a potential target set 2,;. 7'~ is the 1-th level of candidate tree. Pl(A) is the set of all l-subsets of A.  n~ is a node whose identity itemset is A.  The set of items are ordered lexically.

Function: Rule candidate generator (1) for each node ni E Tl ( 2 ) (3) ni such that  (5)  for each sibling node nj (inj > i n i ) generate a new candidate node nk as a son of  //Combining (4) A,, = A,; U Anj  Z,, = (zni U inj) n (Znj U ini) //Pruning if 3A E P'(A,,) but n~ $! Ti then remove  else if TIA is restricted then mark nk  ( 6 )  (7) restricted and let Z,, = Z,, f l  Z,,  (9)  n k  (8) else z,, = (znA U (A,,\A)) n z,, if nk is restricted and Z,,, = 0, remove node  n k  We generate the ( I  + 1)-layer candidates from the 1 layer nodes. Firstly, we combine a pair of sibling nodes and insert their combination as a new node in the next layer. Secondly, if any of its I-sub itemset cannot get enough support then we remove the node. If an item is not qualified to be the target of a rule included in the informative rule set, then we remove the target from the potential target set.

Please note that in line 6, not only a super set of an infrequent itemset is removed, but also a super set of a frequent itemset of a dead node is removed. The former case is common in association rule mining, and the latter case is unique for the informative rule mining. A dead node is removed in line 9. Accordingly, in the informative rule     mining, we need not to generate all frequent itemsets.

Function: Pruning ( 1 ) (2) (3) (4) if 3nj E for Anj c Ani such that  then mark ni restricted and let  for each ni E T ~ + I if sup(Ani) < 0, remove node ni and return if ni is not restricted node, do  sup(&,) = sup(&)  Zni = 2,; f l  Znj ( 5 ) (6) that sup( (Anj  \ z )  U i z )  = sup( (Ani \z) U i z )  (7)  // Lemma 4 for each z E Zni  if 3nj E Z l  for (Anj\z) c (Ani\z) such  then Zi = Zi \ z .  /I Lemma 5 if ni is restricted and Zni = 8, remove node ni  We prune a rule candidate from two aspects, the fre- quency requirement for association rules and the qualifica- tion requirement for the informative rule set. The method for pruning infrequent rules is the same as that of a general association rule mining algorithm. As for the method in pruning unqualified candidates for the informative rule set, we restrict the possible targets in the potential target set of a node (a possible target is equivalent to a rule candidate) and remove a restricted node when its potential target set is empty.

5.3 Correctness and efficiency  Lemma 6 The algorithm generates the informative rule set properly.

It is very hard to give a closed form of efficiency for the algorithm. However, we expect certain improvements over other association rule mining algorithms based on the fol- lowing reasons. Firstly, it does not generate all frequent itemsets, because some frequent itemsets cannot contain rules being included in the informative rule set. Secondly, i t  does not test all possible rules in every generated frequent itemset because some items in an itemset are not qualified as consequences for rules being included in the informative rule set.

The phases of scanning a database is bounded by the length of longest rule in the informative rule set.

6 Experimental results  In this section, we show that the informative rule set is much smaller than both the association rule set and the non-redundant association rule set. We further show that it can be generated more efficiently with less number of in- teractions with a database. Finally, we show that the effi- ciency improvement gains from the fact that the proposed algorithm for the informative rule set accesses the database  fewer times and generates fewer candidates than Apriori for the association rule set.

Since the informative rule set contains only single target rules, for a fair comparison, the association rule set and the non-redundant rule set in this section contain only single target rules as well. The reason for the comparison with the non-redundant rule set is that the non-redundant rule set can make the same predictions the association rule set.

The two testing transaction databases, T10.16.DlOOK.N2K and T20.16.DlOOK.N2K, are gen- erated by the synthetic data generator from QUEST of IBM Almaden research center. Both databases have 1000 items and contain 100,000 transactions. We chose the minimum support in the range such that 70% to 80% of all items are frequent, and fixed the minimum confidence as 0.5.

0? T1016DlOXMK  II, .- 0 25 0 3  T b  m m m  e (I x)  12\ 0 5  1  0 ~ 0 3  h  Figure 2. Sizes of different rule sets  Sizes of different rule sets are listed in Figure 2. It is clear that the informative rule set is much smaller than both the association rule set and the non-redundant rule set. The size difference between an informative rule set and an asso- ciation rule set becomes more evident when the minimum support decreases, and as does the size difference between an informative rule set and a non-redundant rule set. This is because the length of rules becomes longer when the mini-     mum support decreases, and long rules are more likely to be excluded by the informative rule set than short rules. There is little difference in size between an association rule set and a non-redundant rule set. So, in the following comparisons, we only compare the informative rule set with the associa- tion rule set.

Now, we will compare generating efficiency of the in- formative rule set and the association rule set. We imple- mented Apriori on the same data structure as the proposed algorithm and generated only single target association rules.

Our experiments were conducted on a Sun server with two 200 MHz UltraSPARC CPUs.

/ I  i l n  Figure 3. Generating time for different rule sets  The generating time for association rule sets and infor- mative rule sets is listed in the Figure 3. We can see that mining an informative rule set is more efficient than mining a single target association rule set. This is because the in- formative rule miner does not generate all frequent itemsets, and does not test all items as targets in a frequent itemset.

The improvement of efficiency becomes more evident when the minimum support decreases. This is consistent with the deduction of rules being excluded from an association rule  set as shown in Figure 2.

I L- I  i 33 Figure 4. The number of times for scanning the database  Further, the number of times of scanning a database for generating an informative rule set is smaller than that for an association rule set, as showed in Figure 4. This is because the proposed algorithm avoids generating many long fre- quent itemsets that contain no rules included in an informa- tive rule set. From the results, we also know that long rules are easier to be excluded by an informative rule set than short rules. Clearly, this number is significantly smaller than the number of different antecedents in the generated rule set which are needed to scan a database in aother direct algorithm.

To better understand of improvement of efficiency of the algorithm for mining the informative rule set over that for the association rule set, we list the number of nodes in a candidate tree for both rule sets in Figure 5 .  They are all frequent itemsets for the association rule set and partial frequent itemsets searched by mining the informative rule set. We can see that in mining the informative rule set, the searched itemsets is less than all frequent itemsets for form- ing association rules. So, this is the reason for efficiency im- provement and reduction in number of scanning a database.

7 Conclusions  We have defined a new, informative, rule set that gener- ates prediction sequences equal to those generated by the association rule set by the confidence priority. The infor- mative rule set is significantly smaller than the association rule set, especially when the minimum support is small. We have studied the upward closed properties of informative rule set for omission of unnecessary rules from the set, and presented a direct algorithm to efficiently mine the informa- tive rule set without generating all frequent itemsets first.

10 -  B 8 - B !! 6 -  4 -  2 ?  0 15 0 2  0 25 03  Figure 5. The number of candidate nodes  The experimental results confirm that the informative rule set is significantly smaller than both the association rule set and the non-redundant association rule set, that can be gen- erated more efficiently than the association rule set. The experimental results also show that this efficiency improve- ment results from that the generation of the informative rule set needs fewer candidates and database accesses than that of the association rule set. The number of database accesses of the proposed algorithm is much smaller than other direct methods for generating unconstrained association rule sets.

Although the informative rule set provides the same pre- diction sequence as the association rule set, there may exist other definitions of ?interesting? in different applications.

How to use the informative rule set to make predictions un- der such different criteria remains a subject of future work.

