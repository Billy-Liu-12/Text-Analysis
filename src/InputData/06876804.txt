SNS of Things: Concept, Issues, and Challenges for Globe Scale Interoperability of IoT Applications

Abstract?Internet of Things (IoT) has been getting interest during the past several years due to the diverse application areas.

The providers of IoT applications carefully design the devices and the applications and deploy the system in the field. Such applications are running on their own. However, due to the high cost of development and deployment of the IoT applications, there have been efforts to provide interoperability among different IoT applications. In this paper, we propose the concept of SNS of Things (SNSoT), which is a platform that acts as a SNS among the things in the Internet. Thus, all the data generated by the devices are considered as updates of the devices and the dissemination of the update is based on the social relationship among the devices.

Our system, SNSoT, provides a framework in which the devices can create social neighbor relationships among the devices and exchange their data through the social networks. We carefully identify the necessary components of the framework and discuss the issues and challenges of SNSoT.



I. INTRODUCTION There have been many data brokers and cloud services  for the interoperability of the IoT applications. For example, ThingWorx [1], EVRYTHNG [2], and Sense [3] are the most popular cloud platforms. In all these cloud platforms, the key functionality is to collect the data from the Things and combine them to create useful applications. The existing platforms are known to successfully provide such functionality. However, as the number of devices increases rapidly and the real-time processing of the data is required, the existing platforms may not provide satisfactory services.

In this paper, we focus on the real-timeness and the huge size of things. Thus, we present the design of an IoT platform that handles the data in real-time and is simple enough to deal with the incoming data from a huge number of devices.

We call the platform SNSoT, namely SNS of Things. The main idea is that we consider all the things as a user in a SNS. Thus, each thing posts an update and the update is propagated through the social network, which is defined by the characteristic of the applications. As a simple example, let?s consider a travel application. Suppose a person plans to travel from a city to another. Then, the application searches the traffic monitoring devices along the path and creates a friend relationship between a map application of the user?s mobile device and the monitoring devices. The data generated by the monitoring devices is now forwarded to the map  *This research was supported by Seoul Creative Human Development Program (HM120006) and by Basic Science Research Program through the National Research Foundation of Korea(NRF) funded by the Ministry of Education, Science and Technology(NRF-2013R1A1A2007113).

application whenever the data is generated just like the SNS update messages are propagated. This simplistic collection and dissemination mechanism of the data enables SNSoT to deal with huge data traffic and to meet the requirement of Real- timeness. We provide the conceptual design of SNSoT and discuss the issues and challenges to implement SNSoT at the following sections.



II. SNSOT : THE SYSTEM DESIGN In this section, we describe the conceptual design of SNSoT  and discuss the issues and challenges to implement SNSoT.

Furthermore, we propose an algorithm for big data analysis in SNSoT, which is one of the key algorithms for the success of SNSoT.

A. Overall System Design As the name implies, SNSoT adopts the idea of SNS and ap-  plies it to the interoperability framework for IoT applications.

To make the framework cover a broad range of applications, we want to make the data collection and dissemination process as simple as possible. We find that the SNS framework is suitable for this purpose. The general procedure to construct a social network among things is as follows. First, each Thing (devices, users, applications, etc) registers itself to the platform, namely, SNSoT. Then, the Things post their status to SNSoT. Application developers search the Things that are suitable for the application and create the friend relationship among the chosen Things. The relationship depends on the data flow among the Things in such a way that if one Thing needs to receive some data from another Thing, there should be a link from the latter to the former. It should be noted that such relationship is asymmetric. After the relationship is established, the postings from the Things are forwarded to the friends of the owner of the postings. Application developers can implement their applications based on this data forwarding mechanisms. Fig. 1 shows an overview of the SNSoT architecture. Each Thing posts their updates to the platform and the data flows based on the social relationships.

Each Thing has real-time architecture in itself so that real-time processing can be achieved.

B. Issues in the Overall Design of SNSoT For this conceptual design to work in the real-time envi-  ronments, there are many issues and challenges. We discuss some of the most prominent ones in the following. First of      Thing  SNS Node  (1)  Logical Friend Relationship  Data Posting/Reply from Things  (2)  (2)  (2)  (1)  (2)  (2)  Fig. 1. Overview of the SNSoT Architecture  all, it is a big challenge that the number of Things is huge.

It is likely to be much more than the number of users in Facebook since the number of IoT devices increases rapidly.

In such situation, maintaining the social graph structure at the SNSoT platform is quite challenging. Unlike the currently social networking services, our main focus is to provide the Real-time processing of data. Thus, it might be necessary to maintain the graph structure in the memory rather than in Database. However, since the number of Things is huge, keeping the information in one machine is not possible. Thus, we might need to partition the graph into multiple subgraphs (hopefully disjoint) and maintain them in different machines.

We need to develop efficient algorithms and architecture for doing this.

Second issue is the device registration process in SNSoT.

Since the devices belong to different IoT applications, the registration should be as general as possible. For this purpose, we use XML elements to describe each device. Thus, each device can add as many attributes as possible and the meaning of the attributes are defined by the device. The registration can be done automatically or manually depending on situations.

With the given registration information, an application may search the devices that it wants to use. Since the devices may not have enough processing capability to deal with XML, the gateway nodes at each IoT networks may convert the raw data to the XML forms.

Third issue is the security in various places of the SNSoT architecture: device-to-device communications, device-to- gateway communications, and device-to-platform communica- tions. Thus, a new attack model should be developed for this emerging technology and consequently new defense mecha- nisms should be developed. One possible research direction is to modify the techniques developed for RFID and USN.

Anyway, it should be noted that a complete SNSoT platform  security architecture is needed for the seamless protection of various devices.

Forth issue is the information instancing in SNSoT. Al- though various kinds of devices are registered in SNSoT, it is high chances that different devices with similar attributes retrieve the similar information in SNSoT. For example, in a city travel scenario, different Things (e.g., person, navigator, etc.) want to get the same kind of information such as top 10 must-see places and their optimal route, where the Thing shares a similar attribute, such as unusual locations. Such kinds of information that Things retrieve several times should be instances as high-level knowledge in SNSoT. For this purpose, SNSoT framework should contain the functional modules on similarity measurements, information instantiation, and instance revolution. The similarity measurements module com- putes the metrics among the retrieval information in SNSoT and binary or fuzzy decisions for that the input query is related to the already obtained information instances. The information instantiation modules classify the retrieved information in SNSoT as an instance. The high-level feature extractions using deep learning can be a plausible approach to accomplish the information instantiation. The instance revolution module evolves the instantiated information into novel one.

C. Real-time Big Data Analysis using Feature-Sign Search To analyze the various data from different types of sensors  or devices, the data should be normalized. However, in the normalized representation of data, the number of data field that shows the characteristics of a specific device is small.

Thus, the analysis algorithm should work with such sparse data set. We propose to exploit l1-Minimization algorithms to extract the fields that are critical for the specific data sets. The algorithm is described in Algo. 1.

Algorithm 1 FeatureSignSearch(y, n) 1: n : Dimension of data 2: y : input data in Rn 3: Find x that satisfies the following optimization  minA,x ||y ? Ax|| 2 + ??(x), where  ?(x) =  {  |x1|+ ? ? ?+ |xn| l1-penalty function ?  x2 + ? ? ?+ x2n + ? ?l1-penalty function

III. CONCLUSION In this paper, we propose the concept of SNSoT. Due to the  large volume of data generated from various IoT applications, a new platform architecture for IoT interoperability is needed.

We claim that SNS architecture is a viable candidate for such architecture. Furthermore, we provide a list of research issues in implementing SNSoT platform and a draft algorithm for the big data analysis of the SNSoT data sets. We plan to derive a concrete architecture of SNSoT in the future.

