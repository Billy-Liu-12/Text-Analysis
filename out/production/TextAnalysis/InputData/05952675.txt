(a)                (b)

Abstract?Mining frequent itemsets is a core problem in many data mining tasks, most existing works on mining frequent itemsets can only capture the long-term and static frequency itemsets, they do not suit the task whose frequent itemsets often change. Using the theory of ant colony algorithm, we proposed a new method for mining dynamical frequent itemset(called AC-MFI). The method considers the item of transaction as a node in the path, takes the itemset as a path, and takes each transaction as a foraging behavior. According to the pheromone updating policy of ant colony algorithm, AC- MFI mines dynamical frequent itemsets from transaction data stream. Experiment results show that the method is valid and practicable.

Keywords- dynamical frequent itemsets; ant colony algorithm; data mining; association rules

I. INTRODUCTION Mining frequent itemsets is the core problem of mining  association rules, it determines the performance of association rules directly [1]. With the developing and more detailed of the research on frequent itemsets mining, it is widely used in the field of data mining, for example, mining association rule, correlation analysis, classification, and clustering et al.[2]. Up to now, there are two kinds of mining methods were studied and applied: Breadth-First Search algorithms(called BFS) and Depth-First Search algorithms (called DFS)[3]. The BFS algorithms improve mining efficiency by reducing candidate set, the typically algorithms are Aprioris algorithm and it?s improved algorithms. The DFS algorithms use the pattern growth strategy to avoid generating a large number of candidate sets, the typically algorithms are FPGrowth algorithm, CLOSET algorithm, and OpportuneProject algorithm [4]. Each mining method above has its own advantages in practical applications, and has achieved good performance. However, it also has some shortcomings: it can only capture the long-term and static frequency itemsets, and this can not properly reflect the dynamically change of frequent itemsets [5]. But we all know: just as human's interesting always change, frequent itemsets will also change in a long period of time.

Based on ant colony algorithm, we count itemsets according to the pheromone concentration. Moreover, using the accumulating and volatilization characteristic of pheromones, we simulate the change of frequency of  itemsets, and propose a new mining method for dynamical frequent itemsets.

The structure of the paper is as follows: Section 2 introduce the theory of Ant Colony Algorithm, section 3 describe the method for mining dynamical frequent itemsets in detail, section 4 discuss experiments and it?s analysis, and section 5 concludes the paper.



II. ANT COLONY ALGORITHM Ant Colony Algorithm was presented by the Dr. Marco  Dorigo, who was inspired from the foraging behaviors of real ants in the natural world. He found that ants can find the shortest path from the food source to the nest without vision.

In the feeding process, ants can release pheromone which is proportional to the quality of food source, perceive the presence of pheromones, and tend to follow the paths where pheromone concentration is higher. Thus, the collective behavior of ant colony show a positive feedback phenomenon: when a path have more ants went through, the later ants are more likely to follow that path. Therefore, the best and nearest food source would attract more and more ants, and the growth rate of pheromone concentration is faster then other?s [6]. Ant colony algorithm works as follow:  Figure 1. The theory of Ant Colony Algorithm based on pheromone concentration: (a) Initial state of two paths ; (b) The pheromone  concentration of two path after some time  Suppose there are two paths called the ACB and ADB between point A and point B, and the length of ACB is longer than ADB's. Ants move back and forth between point A and point B. Assuming that there is same number of ants on the two paths at the beginning, because ADB is shorter then ACB, ants which in ADB move more times, and deposit more pheromone. Then, because of the positive feedback  ___________________________________     mechanism of ant colony algorithm, there will be more ants follow the path ADB, and thus the pheromone density will be higher, until ants find the nearest path.

Ant colony algorithm has the virtues of simpleness, robustness and parallel in essence. As a new type of general heuristics method, it have been successfully applied to solve the TSP problem, allocation, VRP, job-shop scheduling, and other NP-C problem[7].



III. THE METHOD FOR MINING DYNAMICAL FREQUENT ITEMSETS BASED ON ANT COLONY ALGORITHM  The item of transaction can be considered as a node in the path, the itemset may be regarded as a path, and the transaction may be regarded as a foraging behavior.

According to the pheromone updating policy of ant colony algorithm, the pheromone density of frequent itemset is higher then that of non-frequent itemset. Using ant colony algorithm, we can get the value of the evaluation function of all paths, and identify frequent itemsets quickly and accurately. Because the pheromone is real-time updated, the frequent itemsets we obtained has dynamic characteristics.

A. The parameters of ant colony algorithm Ant colony algorithm works according to the evaluation  function by which ants select foraging path.  According to the character of frequent itemsets, we calculate the evaluation function with support degree and pheromone concentration, it is defined as follows:  [ ] [ ] [ ] [ ]?  =  = ?  ? n  k kk  ll l  t  ttp  )(  )()( ??  ?? ??  ?? (1)  where n is the total number of paths, ?, ??[0,1] are the regulatory factor for pheromone concentration and support degree respectively, Pl (t ) is the evaluation function which represents the probability of path l being selected by the next ant, and the path l is corresponding to the current itemset.

In the equation (1), ?k is support degree, ?k(t) is pheromone concentration. The support degree is calculated by the times of items co-occurrence in transaction data stream. Assuming that Ni, Nj are the two node which is corresponding to two items, l ( i, j) is the path which from node Ni to node Nj, the times of ants go through the path l ( i, j) is denoted by C(i, j), the support degree is defined as:  ?( i, j) = ? ?=  1 ),(  ),( n k kiC  jiC (2)  where n is the total number of paths, ?( i, j) is support degree of the path l ( i, j).

Pheromone concentration represents the frequency of items occurrence in transaction data stream, it is lower as time goes on, and is higher as the items occurrence in transactions. The pheromone concentration at time t is described as follows:  ? l (t+1) = (???) ? l (t) +? ?? l    (3) In the equation (3), ? l (t) is the pheromone concentration  at time t, ? is the coefficient of pheromone evaporation, ? is  the constant related to pheromone concentration, and the ??l is the added value of the pheromone concentration of path l , ?? l  is defined as:  ?? l  = )1,(  +?? =  tt m  k  k l?    (4)  where )1,( +? ttkl? is the value of pheromone that the k- th ant deposits on the path l  during the period from time t to time t+1.

Given the threshold of the evaluation function, we can calculate the value of the evaluation function Pl (t) of all paths by the equation (1), and get frequent itemsets dynamically.

B. The algorithm of mining dynamical frequent itemsets Considering item, itemset and transaction as a node, a  path and a foraging process respectively, we can get the value of the evaluation function Pl (t) of all paths according to the equation (1), and take the top-k paths as frequent itemsets quickly and dynamically. Using the structure of FP- tree, the algorithm of mining dynamical frequent itemsets (called AC-MFI) is described as follows:  Input: m preprocessed transactions, the threshold of evaluation function (denoted by Tp )  Output: frequent itemsets (stored in set F) Step1?Tree=NULL;  t=0, ? l (t)=0, ?l=0, Cl=0; Step2?Get frequent 1-itemsets by scanning transactions,  sort it by support degree in, and save it in the list of frequent item (denoted by L );  Step3?FOR (i=1 to m ) rank items of transaction i by the order of list L; for each ordered item i of transaction, seek it in the Tree, if found, update Cl, ?l (t); otherwise, create a new sub-tree for remaining items, initialize it's parameters such as Cl,?l (t), and link it to it's parent node;  ENDFOR Step4?Calculate support degree (?l) of all paths by the  equation (1); Step5?Initialize the regulatory factor ?, ? ;  FOR each path l in Tree calculate evaluation function of path l (denoted by Pl (t ) ); if Pl (t) >Tp , then l?F;  ENDFOR Step6?Return F ;

IV. EXPERIMENTS AND RESULTS  A. Validity experiments of obtained frequent itemsets We mined frequent itemsets from transaction data stream,  and determined the validity of obtained frequent itemsets by it's accuracy of predicting the subsequent transactions. [8] presented an algorithm of obtaining customizable behavior model by mining frequent pattern set (CBMFP for short),    and predicted user's behavior by obtained customizable behavior model. In order to compare the validity of our mining algorithm with it's, we use the log file used in [8].

The data are from three different types of servers: the first log is from the Computer Science Department of the Polytechnic University of Madrid (abbreviation: CS); the second log is from the NASA Kennedy Space Center server (abbreviation: NASA); the third log is from a commercial website named ClarkNet (abbreviation: ClarkNet). The characteristics of training logs and test logs are given as follow:  TABLE I. TRAINING  LOGS CHARACTERISTICS  Date Size # of sessions  CS Sep. 2001 27M 3,499  NASA Jul. 1995 160M 124,666  ClarkNet 6-9 Sep. 1995 102.8M 72,312  TABLE II. TEST  LOGS CHARACTERISTICS  Date Size # of sessions  CS Oct. 1st 2001 170K 53  NASA Aug. 1st 1995 6.8M 2753  ClarkNet Sep. 10th 1995 19M 5725  Using the mining algorithm of this paper (named AC- MFI), we obtained the frequent itemsets from training data, and predicted subsequent transactions by the frequent itemsets, and compared the accuracy with [7]. The results are as follows:  TABLE III. PREDICTION ACCURACY COMPARISON ON FREQUENT ITEMSETS  Algorithm? CS NASA ClarkNet  CBMFP 62% 16% 17%  AC-MFI 75.8% 28.1% 19.3%  It is clear that the AC-MFI can work better from the analysis on table III. Because of using dynamic mining method, AC-MFI obtained better frequent itemsets which can reflect the current characteristics of the data, and got better prediction.

B. Experiments dynamic performance of obtained frequent itemsets The best virtue of AC-MFI is that it can dynamically  mine frequent itemsets which reflect the current characteristics of the data. To verify this derectly, we generated a set of data whose frequent itemsets were changed, then made simulation test with AC-MFI, and  observed the changes of frequent itemsets. The training data is showed as follows:  TABLE IV. THE LIST OF TRANSACTION DATA  TID List of item_IDs  T001 I1, I2, I5  T002 I1, I2, I3, I4, I6  T003 I1, I2  T004 I1, I2, I7  T005 I1, I4, I5, I6, I7  T006 I3, I4, I9  T007 I3, I5, I7, I8  T008 I2, I3, I7, I10,I15  T009 I1, I3, I7, I11  Assuming that the minimum support count of transaction is 3, the traditional algorithm might get frequent itemset {{I1I2: 4}, {I3I7: 3}} by mining on this 9 transactions (To express conveniencely, the itemset {I1, I2} is called itemset1, and the itemset {I3, I7} is called itemset2 ). However, if you analysis the data stream, you will find two facts: 1. For a long time, the frequent itemset is itemset1 (it had occurred continuously 4 times); 2. Recently, the frequent itemset has changed (the itemset1 hasn't appeared in recent 5 transactions, but the itemset2 has occurred continuously 3 times).

To show the change process of frequent itemsets intuitionally, we increased the coefficient of pheromone evaporation while trained the transaction data described in table 3. The parameters of ant colony algorithm are defined as: ?= 0.15; ? = 1; ? = 0.5. The curves of evaluation function for each itemset are shown as below:  0 1 2 3 4 5 6 7 8 9 -0.2   0.2  0.4  0.6  0.8   1.2  Training times  Th e  va lu  e of  e va  lu at  io n  fu nc  tio n  Itemset1 Itemset2  Figure 2. The curves of evaluation function for each itemset    From figure 2, we can see two facts: 1. At the beginning of the training, the value of evaluation function of itemset1 increased at exponential growth because of it's continuous occurrence, and the value of itemset2 is zero; 2. In the second half of training, the value of evaluation function of itemset1 decrease gradually because it hasn't appeared in later transactions, but the value of itemset2 increased gradually with it's occurrence. So, it can be concluded that the algorithm can capture dynamically the current frequent itemsets while the frequent itemsets got changed.



V. CONCLUSIONS Just as our habits and customs always change, frequent  itemsets may also change constantly in many cases. How to mine dynamical frequent itemsets accurately and efficiently is a hard problem. Using the pheromone updating policy of ant colony algorithm, we presented a novel efficient method for mining dynamical frequent itemsets in this paper. The results of the experiment reveal that the method is valid and practicable.

