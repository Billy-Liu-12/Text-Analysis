

Abstract?The use of systems architecture, following a set of integrated descriptions from an architecture framework, has been well codified in Department of Defense acquisition and systems engineering.  12However, in the Space Science and Technology (S&T) community, this guidance and practice receives much less attention.  This paper outlines an approach to embrace the new focus of DoD Architecture Framework 2.0 (DoDAF2.0), with an emphasis on data and support to acquisition decision analysis. After decomposing the Space S&T lifecycle into phases, design milestones and activities using process models, we then propose a set of lifecycle-matured models and Fit-for-Purpose views.   Our approach makes DoDAF2.0 more relevant and integrated with S&T missions, as well as facilitates reuse with existing documentation.

TABLE OF CONTENTS  1. INTRODUCTION.................................................................1 2. BACKGROUND...................................................................2 3. METHOD ...........................................................................3 4. APPLICATION AND ANALYSIS ..........................................3  CONCEPT REFINEMENT .................................................. 8 PRELIMINARY SYSTEM DESIGN.................................... 10 FINAL SYSTEM DESIGN................................................. 12  5. CONCLUSIONS ................................................................14 BIOGRAPHY ........................................................................15   1. INTRODUCTION Within the Department of Defense (DoD), the use of architecture has become a necessary element of systems development. Recently, a new version of the DoD Architecture Framework (DoDAF2.0) has been promulgated which adds new models, views and viewpoints [1].   These models and views depict various perspectives of an overall integrated design, with the purpose to better support technical and managerial decision making aligned with core DoD processes.

1 U.S. Government work not protected by U.S. copyright 2 IEEEAC paper#1626, Version 1, Updated 2010:01:04  In the Space Science and Technology (S&T) community, where guidance to use and implement architecture permits great latitude, and where pressures to field new capabilities is paramount, documentation and other typical systems engineering practices may receive less attention than they deserve.  The development and integration of an innovative space technology is a technically complex environment that requires multiple systems operating in conjunction correctly.   These systems are complicated by a variety of stakeholders with differing values on success and challenging systems integration of launch, vehicle, payload and mission control.  Additionally many S&T missions are ?non? standard solutions. Designs are frequently an amalgamation of previous systems, COTS or GOTS components and new engineering thus adding extra complexity from an interface standpoint.  Paradoxically, this environment was the impetus for the use of architecture across the DoD for non-space systems almost two decades ago.

Given the focus on rapid development and transition, if a system architecture could be developed and used in a manner that increased visibility within the design, and was a useful tool for stakeholders and developers alike without significant additional effort, it could serve as a valuable tool throughout the development. As the goals for space technology demonstrations become more ambitious, the schedule and budget expectations can be equally as challenging.  Thus, as developmental systems are acquired; in many cases the focus is to minimize waste by eliminating any excess.  Given the relatively finite nature of space experimental and technology demonstration missions and the absence of mandates, a formal system architecting model is typically not developed or maintained.

With this complex development environment, any tool or process that promotes insight into systems relationships and aids the maturation of system development could be a useful asset adding decision making and adding structure for the developer and stakeholder. However, a common criticism of system architectures and DoDAF is that they are not well aligned with those principles.   Instead the common perception is that architecting models and products are       secondary end products developed to satisfy regulations or policy. This division between system architecting goals and perceptions begs the question of how to balance the need for architecture and the information it contains and the need to eliminate and avoid overhead?

The Department of Defense has tried to address this problem in the release of  DoDAF2.0.  The recent revisions place a strong emphasis in asking the stakeholders to define the objectives and implement any models to service those objectives. The framework states, ?Architecture scoping must facilitate alignment, and support the decision-making process, and ultimately [support] mission outcomes and objectives? [1].

Using the revised guidance from DoDAF2.0, this paper will offer a potential implementation of architectural models that is aligned with purpose, objectives, and roles in the design of space science and technology (S&T) systems.

2. BACKGROUND Current State of DoD Architecting  The use of system architectures within the DoD, using a standard framework, is a well established practice. The application of architecting has been expanded well beyond its inception in the 1990?s within the Command, Control, Communications, Computers, Surveillance and Intelligence Architecture Framework (C4ISRAF).  The guidance initially provided within the current DoDD 5000.02 directive [2] and refined in joint and component instructions [3,4] has dictated the use of architectural products throughout the defense enterprise.

Although guidance to develop system architectures in conjunction with defense acquisitions is well understood, the roles, purpose and processes for creating, maturing and using a architecture throughout a given development are still being developed and refined at all levels within the DoD.  As organizations have attempted to develop system architectures that are aligned with policies, significant obstacles have been encountered in implementing the guidance using the DoDAF construct.  Some of these shortcomings include the following.

Applicability across the spectrum of DoD Acquisition  As Maier et al [5] states in their evaluation of DoDAF to ANSI/IEEE 1471 conformance, organizations ultimately using the framework may have different objectives for an architecture than the audience that it was originally developed to assist. They write, ?Although developed for acquisition supervisors concerned with interoperability, the DoDAF in practice is primarily used to produce architecture descriptions during the early-stages of system development? [5]. This observation illustrates that DoDAF is not a ?one size fits all? tool.  Organizations that implement DoDAF  need to spend time tailoring the framework to ensure that it provides useful information to support decision making.

Alignment with existing engineering processes  At a US Army sponsored Workshop in March 2009 [6], an observation was offered that accurately summarizes the poor alignment with architectures and the systems engineering process.  Bergey and others documented that, "Members observed that there are a lot of issues with respect to the use of the DoDAF for architecture development in any genre. The good news is that architecture work is being done. In many cases (but certainly not in all), programs are performing architecture tasks as part of their normal systems engineering efforts, but they are not using the DoDAF for architecture development.

Rather, it seems a common practice is to develop DoDAF views to meet DoD requirements after the initial architecture work has been largely complete". Instead of a design tool, DoDAF architectures are often used as a way to document the system design.

Lack of Processes for Maturing Architectures  Research that examined the usability of the DoDAF framework cites the lack of guidance in how to mature DoDAF products as the central reason for misalignment with decision making processes.  Richards et al state, "Most fundamentally, weaknesses in the DoDAF have been identified as it undergoes transition from a static, descriptive tool to a tool that attempts to characterize dynamic system properties" [7].  Little guidance or training has been provided on how to translate operational requirements into system design.  We have seen lack of appreciation in the requirements communities (generally operators) to understand early architectural trade space analysis. As originally written, the early versions of DoDAF did not have a foundational development process to take advantage of its interconnected views.

These issues highlight some of the obstacles that systems developers are currently encountering in the system architecting effort and are major factors that are inhibiting the a more holistic use of the DoDAF framework during system design and development.  If the issues are examined in the context of each other, an interesting conclusion may be drawn that the second two issues are functions of the first.  In other words, because the architecting process as implemented historically is not necessarily well suited for many areas (i.e. development) it has not been embraced and aligned with development.  Since this has not occurred by and large effort and processes have not been adopted to mature these models effectively.   Given this thought process, relevance and utility become the most important factors consider when discussing how the architecting process should be tailored.

DoDAF Version 2.0       The developers of DoDAF appear to have recognized these shortcomings and attempted to address them in Version 2.0.

This version places much greater emphasis on the data contained within the architecture as opposed to the specific products to display the data.  Overall, the framework shows an expansion of standard views, shown in Figure 1. The following list summarizes key differences.

?  Data-centric approach focusing on the collection, storage, and maintenance of data needed for efficient and effective decisions.

? Distinction between Enterprise and Solution architectures ? The three major views described in all previous versions (e.g., Operational, Systems and Technical, and System) have been extended with viewpoints that relate to stakeholders or DoD processes.

? DoDAF does not prescribe particular models (never did) and introduces the concept of new Fit-for-Purpose views.

The remainder of this paper will propose a concept that will use DoDAF2.0 models  and views to specifically address the needs of the space S&T community.

3. METHOD If architecture is to support decision making, one must determine which decision makers. Due to lack of higher headquarters reporting requirements, it was decided that the appropriate owners would be the program executives and/or milestone decision authorities.   We measure success of this approach by architectures ability to help effect the outcome of the design in terms of completeness, timeliness and capability.

Figure 1. Architecture Viewpoints in DoDAF2.0 [1]  Process diagrams were first developed for the various phases of the S&T development to help provide context for architecting.  Interviews were conducted where the process diagrams were used to confirm and extract purpose, scope  and data for space S&T architecture.  After interviews were completed, information was captured identifying the lessons or suggestions where architecture could help support development, the data that would be relevant and the notions of how it may be represented using either a ?heritage? DoDAF view or a local artifact that is commonly used within spacecraft acquisition.

Using the data obtained, and the process diagrams the information was then organized into a notional structure of architectural models.  This structure examines the early phases of the design process and briefly highlights the purpose for the model, highlights changes in function and maturity across the phases and identifies existing product(s) that may contain this information as well as references to DoDAF views. Specific explanation of the column headings in the framework are provided in Table 1.

4. APPLICATION AND ANALYSIS   DoDAF version 2.0 places a renewed emphasis on stakeholders identifying the role and purpose architecture should play within a system or enterprise.  This is supported by broader DoD systems engineering reviews and recommendations which challenge users to tailor the content and rigor of the SE effort to align with their needs.

Table 1. S&T Space Mission Framework Descriptors  Mission Phase Identifies the mission phase for the architecture models Relevant Information  Identifies information within the view that would be useful to the S&T stakeholder, based on SME interviews  Purpose/ Function  Statements describing the information and potential relevance to the S&T development  Maturity  Lists document maturity at a given phase in the development: -Initial: document released by responsible party, document should not be considered vetted and any decisions based on documentation should be validated with the author for accuracy - Final: document has been reviewed and revisions have been coordinated, reader should assume information to be accurate and complete - Living: document regularly updated and posted, periodicity of updates should be understood, questions regarding the currency of the document should be coordinated with owner  Product(s) Identifies existing program document that contains the relevant architecture information  DODAF Model Reference Documents DoDAF reference view designation Notes: Any other relevant information that is required   In order to develop specific ways a tailored architecture could support S&T space development, purpose and roles for architecture in this environment needed to be addressed first.   As this question was posed to various individuals, two main themes emerged from the responses. Most       individuals identified the use of system architecture as tool to preserve information for future modification ? in effect, a method for configuration control and documentation.  A smaller subset identified the possibility of using system architecture as a construct for gathering, storing and maturing information to assist a spacecraft development.

This view aligns more with architecture as early and maturing design ? the system blueprints.

A summary of objectives for a Space S&T architecture based on the responses is documented below.

? Preserve critical system development information.  S&T missions must ensure that the ?as-built? system information, issues encountered and lessons learned are preserved to help enable subsequent efforts that are derived from the concepts that are demonstrated ? Provide a communication tool to coordinate and integrate critical programmatic and technical information among the various system stakeholders throughout the development process ? Implement a construct for identifying how information from various program elements should be matured over time to result in a system that meets its mission objectives  All individuals surveyed felt that boundaries should follow functional lines, but also felt that there was significant information about other systems that needed to be preserved to have the appropriate amount of context. The Venn diagram in Figure 2 illustrates the typical S&T boundaries, with the research in this paper on the space vehicle.

However, the other components of the system cannot be ignored especially in the early stages of design where mission requirements are developed and functional responsibilities are allocated to various components.

One of the other insights from system developers was the need to synergize any architecture with the work that was being conducted in support of the design.  Architecture needed to keep pace with the maturation of the development.

g    As a result, the goals associated with this implementation system architecture were to use products that are commonly created throughout the system acquisition process, and make them more effective by highlighting their role in the development with the use of the reference model.

Throughout process of cross referencing program documentation with DoDAF model descriptions it also became clear that in several cases existing documentation could satisfy more than one view within the DoDAF construct.  This can be a very effective way of keeping the architecture a manageable size.  However, attention needs to be paid during the document development process to ensure that expectations for the information are properly framed to ensure the desired outcomes are achieved.  If a given product is going to include or be labeled as a ?DoDAF model?, the requirements for what data should be contained within the model still must be adhered to.  The goal of this approach is not intended to re-define existing models.   It is meant to offer streamlined methods for model development and maintenance of relevant views.  This can be accomplished by ensuring the various DoDAF model data definitions and requirements in Volume II are referenced and checked during the document development and editing.

Throughout the development of architecture significant attention was paid to what information was required to achieve the purpose outlined above.  As a result, several ?Fit For Purpose or FFP? views were created to help identify program and system information that DoDAF construct did not expressly identify.  This tailoring process is strongly encouraged by the new guidance to help increase the relevance of the architecture to the stakeholders based on their input.

The following sub-sections will chronologically step through the development process and discuss how a tailored system architecture may assist the invested parties in more effectively achieving all desired outcomes.

Pre-Systems Acquisition  At the onset of an S&T mission many decisions will have a profound outcome on the acquisition, and need to be made quite early in the lifecycle.  In this phase many decisions are made quickly and may be communicated in an ?ad hoc? fashion not allowing parties who subsequently join the development to appreciate the impetus.  This underscores the criticality for program tools that help develop understanding regarding the system, its associated risks, and technical challenges.   As can be seen in the process diagram (Figure 3), once the decision to pursue a mission is made, contractual and system development processes immediately follow.  If these decisions and processes are not well defined and documented they will delay subsequent requirements analysis and development activities.

Space Vehicle  Launch Vehicle  Payload        Ground Segment  Figure 2. System Architecture Boundary Diagram       At this point in the mission there are several areas that have been identified where system architecture products and processes could help mature expectations for different elements of the program appropriately before a ?mission acceptance? decision is made.  Table 2 lists relevant architecture information that was identified throughout this research and highlights rationale for the product as well as maturity.  The following section examines the purpose for the various views and attempts to illustrate how their presence could provide valuable technical and programmatic insight to support decision making.

Consolidated Risk Plan (FFP-1A) and List (FFP-1B)?  The risk plan outlines the strategy for risk management, scoring and defines a risk posture for the program.  The list provides an integrated view of all the risks within the system in order to effectively identify, manage and mitigate risks effectively.  Many S&T missions are willing to accept more program risks due to the finite nature of the mission.

For example many S&T missions accept single string designs which immediately set a certain risk posture for the program.   By defining major program risks early it helps to set a frame of reference for acceptable risk within the program throughout the program and makes it easier to understand what level of risks must be mitigated during the design phase  or conversely can be accepted.

Mission Plan (AV-1, OV-1, OV-4, StdV-1) ?  During the pre-acquisition phase, a Mission Plan is a common umbrella document that summarizes the approach for the mission, the organizations that will be involved and the outcomes that are desired.  This document can take various forms and contain differing information depending on the developing organization.  While polling individuals regarding this mission phase the areas discussed below were highlighted as items that needed to be documented at the onset of a mission.

Mission Life. In many cases expectations for mission life are not clearly defined or adhered to for S&T missions.

Following a successful S&T demonstration, perceptions may exist to use the residual space capability operationally.

Developers need to clearly state what type of system is desired and not force artificial expectations for design robustness that exceed the actual need.

Mission Expectations, Outcomes & Measures of Effectiveness. S&T missions do not uniformly have a process for measuring the success of a technology on-orbit.

The mission plan must identify how success will be managed to ensure that it appropriately flows into the design.  In many cases mission requirements such as higher than planned payload duty cycles or 100% data collection at the ground emerge in later phases.  If these are not appropriately defined before mission segment requirements  documentation is formulated than the appropriate capability may not exist.

Standards. Common problems encountered within S&T developments are how certain standards should be applied to achieve the desired outcomes.  In many cases the programmatic effects are not appropriately considered when a decision of how to apply a standard is made. For example decisions regarding piece part procurement standards can drive component piece part procurement cost by as much as six times  as well as have significant effects on lead time for procurement based on availability and requirements [8].

These decisions need to be closely evaluated and framed with desired mission outcomes and risks tolerances for a project to strike a successful balance.  This needs to be done prior to mission acceptance to avoid costly mis-conceptions and delays during the requirements decomposition and design phases.

Furthermore many decisions at this point can become a function of prior precedent and that may or may not be appropriate for the outcomes that are desired for the mission at hand.  Programs may unnecessarily levy over restrictive cleanliness requirements that will result in significant extra time being spent, handling and cleaning.

Waiver Authority. It is equally as important to define processes for requesting waivers to any approved standards, by understanding the regulatory processes that surround them and identifying waiver authorities. In many cases waiver authorities do not reside within the program office (i.e Form 813 Environmental Assessments).  Additionally, some standards and regulations are unable to be waived so compliance must be achieved in the mission design.

Naturally, waivers occurring after established baselines would require a management procedure to control and document the new baseline.

Integrated Milestone Schedule (PV-2) ?  Prior to making the decision to embark in on a mission, it is also critical to define the elements of a program that will challenge or constrain the trade space in terms of schedule.

Some elements of the mission are bound to constraint the program, such as long lead items and those on the critical path.  Common understanding of how that will affect the development needs to be done at the earliest stages of the program.

Some components in common small satellite designs routinely drive the ability to begin system integration.  The procurement of a SGLS transponder is a perfect example.

Acquisition time for a transponder is typically on the order of 16 months.  This is primarily due to the fact that specific crystals must be grown that correspond to an approved radio frequency.  The process to obtain approval for a specific frequency is also a lengthy process which will drive schedule risk.  Therefore in order to achieve system       development timelines of 24- 36 months, critical decisions regarding parts procurement will have to occur in advance of design reviews.

System Development Begins  Elapsed Time ~ 3 ? 12 months    Figure 3. Pre-Systems Acquisition Process Diagram  Table 2. Preliminary Design System Architecture Information  Mission Phase Relevant Architecture Information Purpose/  Function Maturity Product(s)  DODAF Model Reference  Pre - system Acquisition  Integrated Risk List - Cross  functional list of risks compiled across integrated product team Living Document  Consolidated Risk List FFP-1A  Integrated Risk Plan - Documentation outlining the program's risk posture and threshold's for reporting and mitigating risk  Initial Delivery  Consolidated Risk Plan FFP-1B  Schedule - Program Driving Schedule Requirements - Key schedule driven technical decisions - Giver / receiver relationships that span different program elements  Living Document  Integrated Milestone Schedule  PV-2  Critical System Requirements Capabilities /  Constraints /  Outcomes  - Identify required program outcomes /  measures of effectiveness - How residual capability may be used if deemed successful - Communicate aspects of the mission that must be adhered to and cannot be traded within the project  Initial Delivery Mission Plan AV-1  Organizational Roles /  Boundaries  - Establish lines of authority - Highlight system boundaries that will require interface control documentation to be developed - Delegate project roles and responsibilities  Initial Delivery  Mission Plan OV-1 OV-4  Design Standards and Life Requirements  - List of regulatory standards that program is required to comply with - Understanding of nominal SC design life and risk classification (i.e.

Class  A, B, C...) - List of any international treaties that may affect program decisions - List of applicable technical standards  Initial Delivery Mission Plan STDV-1  Critical Program  Documentation  - Identify required documentation/  information /models from various system developers - Highlights the how many iterations are planned throughout the document lifecycle - Identifies delivery dates for all information among stakeholders  Living Document  Program Documentation Maturity Matrix  FFP-2  Open System Trades  - Description organized by subsystem of open design trades and decisions that need to be completed - Each trade should have an owner and associated due dates that are aligned with program constraints  Living Document  Trade / Decision tracking matrix  FFP-5       Program CDRL List (FFP-2) ?  A common understanding of what program documentation will be delivered and how it matures is a common request when discussing development lessons learned.  As different program elements interface with each other the ability to understand what documents will be delivered and how they will mature through the course of the development is a proactive way to enhance dialogue surrounding interfaces and on what time tables design trades must occur.  This product can also be used to re-enforce expectations with respect to information contained within the document and develop a common understanding among invested parties.

In many cases, expectations for documentation vary significantly, and costly time can be spent in review and revision because a document did not meet its intended purpose.  Among the space S&T enterprise there are drastically different ways of documenting system design and programmatic information. The use of this view can help baseline expectations and set the focus for the initial CDRL releases.  This view can help an individual understand where information resides, as well as how it will mature through the course of a development.  This product should be have the widest distribution throughout the program so all invested parties understand the plan for system documentation evolution.

Mission Expectations, Outcomes & Measures of Effectiveness. S&T missions do not uniformly have a process for measuring the success of a technology on-orbit.

The mission plan must identify how success will be managed to ensure that it appropriately flows into the design.  In many cases mission requirements such as higher than planned payload duty cycles 100% data collection at the ground emerge in later phases.  If these are not appropriately defined before mission segment requirements documentation is formulated than the appropriate capability may not exist.

Standards. Common problems encountered within S&T developments are how certain standards should be applied to achieve the desired outcomes.  In many cases the programmatic effects are not appropriately considered when a decision of how to apply a standard is made. For example decisions regarding piece part procurement standards can drive component piece part procurement cost by as much as six times  as well as have significant effects on lead time for procurement based on availability and requirements [8].

These decisions need to be closely evaluated and framed with desired mission outcomes and risks tolerances for a project to strike a successful balance.  This needs to be done prior to mission acceptance to avoid costly mis-conceptions and delays during the requirements decomposition and design phases.

Furthermore many decisions at this point can become a function of prior precedent and that may or may not be appropriate for the outcomes that are desired for the mission at hand.  Programs may unnecessarily levy over restrictive cleanliness requirements that will result in significant extra time being spent, handling and cleaning.

Waiver Authority. It is equally as important to define processes for requesting waivers to the approved standards understanding the regulatory processes that surround them and identifying waiver authorities for the applicable standard if they can in fact be waived. In many cases waiver authorities do not reside within the program office (i.e Form 813 Environmental Assessments).  Additionally, some standards and regulations are unable to be waived so compliance must be achieved in the mission design.

Integrated Milestone Schedule (PV-2) ?  Prior to making the decision to embark in on a mission it is also critical to define the elements of a program that are presently understand  will challenge or constrain the trade space in terms of schedule.  Some elements of the mission are bound to constraint the program.  Common understanding of how that will affect the development needs to be done at the earliest stages of the program.

Some components in common small satellite designs routinely drive the ability to begin system integration.  The procurement of a SGLS transponder is a perfect example.

Acquisition time for a transponder is typically on the order of 16 months.  This is due to the fact that specific crystal oscillators must be grown which takes several months create a wave form that corresponds to an approved radio frequency.  The process to obtain approval for a specific frequency is also a lengthy process which will drive schedule risk.  Therefore in order to achieve system development timelines of 24- 36 months, critical decisions regarding parts procurement will have to occur in advance of design reviews.

Program CDRL List (FFP-2) ?  A common understanding of what program documentation will be delivered and how it matures is common request when discussing development lessons learned.  As different program elements interface with each other the ability to understand what documents will be delivered and how they will mature through the course of the development is a proactive way to enhance dialogue surrounding interfaces and on what time tables design trades must occur.  This product can also be used to re-enforce expectations with respect to information contained within the document and develop a common understanding among invested parties.

In many cases, expectations for documentation vary significantly, and costly time can be spent in review and revision because a document did not meet its intended purpose.  The use of this view can help baseline expectations and set the focus for the initial document.  This view is not intended to replace detailed requirements for a document.  However, among the space enterprise there are drastically different ways of documenting system information. This view can help an individual understand where information resides, as well as how it will mature through the course of a development.  This product should be have the widest distribution throughout the program so all invested parties understand the plan for documentation evolution.

Open System Trades (FFP-3) ?  From the onset of concept development in the various system areas trades emerge as the vision for the mission is constructed.  These trades will have widely different time horizons for decision making.  It is important within a development to ensure that all open trades are known and when closure must be achieved is well understood.  This can help avoid hasty time based decision making that isn?t well coordinated or documented.  In many cases subsystem engineers do not fully consider the ramifications of how design changes within their system will affect other systems. An Open System Trade list and description will help mitigate issues during system integration and testing.

Secondary benefits of this view include ensuring consensus by all required parties, providing useful insight leading to major program reviews, and supporting decisions regarding the amount of outstanding work.

An example of how this product can be useful throughout the design phase of the acquisition occurred during the development of a flight software system.  In this case the flight software engineering team made the decision to not implement the concurrent ability to range and receive telemetry without consulting the larger systems engineering, ground operations and telecom engineering teams.  This implementation has serious implications for operations, especially in an early orbit anomalous situation post launch where the ability to see telemetry and range on the vehicle would be highly desirable.  Given the programs significant time constraints, there was no ability to go back and re- design this capability once the disconnect was uncovered.

Therefore the team will have to work with this architecture and develop procedures to address this in the event of an anomaly.  A product which tracked trades like this and forced concurrence before an implementation was approved would have been useful for the agency responsible for the acquisition.

Concept Refinement Concept refinement and requirements development is often a challenging phase of any system development.  In a very short period of time the program must adequately define  their requirements for the system and the developer is expected to understand, refine, decompose, and allocate all of the requirements for a given system.  Within the space S&T realm, like many advanced technology efforts, this is often done with high levels design uncertainty among system elements.  Figure 4 documents this phase.

Sound requirements development and refinement is a cornerstone of a development?s success.  However, in many instances this phase of the mission has been plagued by poor documentation and systems engineering.  This underscores the need for information that can help the system developer and/or the program decision authority with ways to effectively structure and document decisions throughout this phase.

There are two distinct efforts within this phase.  The first is the acquiring agency articulating what is required of the system under development.  This effort should heavily leverage and refine many of the architecture views outlined in the previous phase in particular the Mission Plan.  As can be seen in Table 3, effort early in this phase is geared towards ensuring that the mission needs, outcomes and standards are completely articulated.  This ultimately results in the delivery of a Space Vehicle Technical Requirements Document to the system developer  A strong emphasis throughout the beginning of this phase should be to solicit feedback from external agencies. In many instances this coordination can allow for more current requirements or standards to be applied and included prior to delivery to the developer thus avoiding confusion and iteration later in the design review process.  Once this information is coordinated, it should culminate in the delivery of a comprehensive technical requirements document being delivered to the developer in order to convey system requirements in fashion that allow for the agency to fully evaluate the merits of a design.

Following the acceptance of a system requirements document, it is the responsibility of the developer to begin the process of reviewing, refine, decomposing and allocating the requirements to the various subsystems.   This is an effort intensive process given the complex interfaces between various systems. For this reason, a common understanding of what constitutes a complete requirements baseline is a useful benchmark for both the system owner and the developer by creating an set of expectations to evaluate the completion of this phase.

Mission Plan (AV-1, OV-1, OV-4, STDV-1) ?  This update should be focused on clarifying any changes or omissions to the critical system requirements, outcomes and standards.  The revision of this document should be well circulated with external agencies to ensure that properly regulatory guidance and best practices are implemented. In       many cases revisions to guidance and policy do not marry well with acquisition timelines.

Figure 4. Concept Development Process Diagram  Table 3. Concept Development Process Information  Mission Phase Relevant Architecture Information Purpose/  Function Maturity Product(s)  DODAF Model Reference  Concept Refinement  Integrated Risk List - Cross  functional list of risks compiled across integrated product team Living Document  Consolidated Risk List  FFP-1A  Schedule - Program Driving Schedule Requirements - Key schedule driven technical decisions - Giver / receiver relationships that span different program elements  Living Document  Intgrated Milestone Schedule  PV-2  Critical System Requirements Capabilities /  Constraints /  Outcomes  - Identify required program outcomes /  measures of effectiveness - How residual capability may be used if deemed successful - Communicate aspects of the mission that must be adhered to and cannot be traded within the project  Final Delivery Mission Plan AV-1  Organizational Roles /  Boundaries  - Establish lines of authority - Highlight system boundaries that will require interface control documentation to be developed - Delegate project roles and responsibilities  Final Delivery Mission Plan OV-1 OV-4  Required Standards,  Design Life Requirements  - List of regulatory standards that program is required to comply with - Includes Preliminary LV Environments and Loads - Understanding of nominal SC design life and risk classification (i.e.

Class  A, B, C...) - List of any international treaties that may affect program decsions - List of applicable technical standards  Final Delivery Mission Plan STDV-1  Requirements Functionally allocated and derived for each subsystem and  component  - System Developers repsonse to the Technical Requirements Document - Identifies how requirements will be allcoated among various systems - Highlights functional responsibility for each subsystem - Provides critical data regarding system boundaries and interfaces  Final Delivery SV Requirments Specification FFP-4  SV Technical Requirements Documentation  - Complete list of performance requirements for the Space System - Delivered by the government to the contractor /  agency responsible for space vehicle design, development and integration  Initial Delivery  SV Technical Requirements Document  FFP-3  Open System Trades  - Description organized by subsystem of open design trades and decisions that need to be completed - Each trade should have an owner and associated due dates that are aligned with program constraints  Living Document  Trade / Decision tracking matrix  FFP-5         SV Technical Requirements Document (FFP-3)  ?  Following the validation of critical outcomes and standards, the acquiring agency should release a comprehensive systems requirements document that elaborates on the desired outcomes for the system by detailing significant system and subsystem requirements.  Some may suggest that this element is not required and it should be the responsibility of the developer to derive from the required capabilities and outcomes. However, in most cases, the agency has expectations for design development and test.  If the developer is expected to derive system or test requirements without the guidance that a comprehensive requirements document would provide there is likely to be serious discrepancies in the approaches taken with respect to requirements and standards.

A good example of this can be seen in the development practices for the Space Test Program.  The Space Test Program will commonly take risks in accepting a single string spacecraft design due to mass and volume constraints associated with their space lift opportunities. However, in order to mitigate that risk, rigorous test requirements which may not be typically required for an S&T such as full MIL- STD 1540-E are commonly levied to screen for workmanship issues and infant mortality.  Without these detailed specifications being documented in a technical requirements document to the developer it is unlikely that they would adopt the preferred approach.  This would result in extra time and cost expended in order to come to a consensus.

Space Vehicle System Specification (FFP-4) ?  This view represents the complete set of requirements associated with the system and the methods that will be used to demonstrate this requirement.  The requirements specification should demonstrate how requirements are organized at the system, sub-system and component levels.

Recommendations for how to construct this view are well documented in some Data Item Descriptions (DID).   This proposed formatting does allow for tailoring and does not have specific requirements associated with how the document is prepared or managed.  However, careful consideration should be paid to the approach that is taken.

Several tools exist that make use of databases to allow the user and the developer to trace requirements compliance from the component to the system level.  This capability significantly enhances the ability to work with the information and assess changes as they are encountered throughout the design process.  This is important in the S&T environment because it allows the individuals associated with design trades to more effectively understand the impacts of change throughout the development process.

These lessons can be applied into final interface control documentation and used to assess overall suitability entering the review.  If there are issues encountered during  these activities, mitigations should be developed prior to a final design review in order to ensure that developers can successfully transition from design to integration at completion of the review.  These steps will help all parties validate the design and give them the requisite data to make informed decisions when planning for later phases of the mission.

Preliminary System Design  The name for this phase can be somewhat of a misnomer.

Even though the first iterations of the design process is made, there are many elements which need to be completely solidified at this point in the design process.  Additionally, this tends to be the point in the project where detailed interface boundaries and specifications must be developed among sub-systems and systems.

As can be seen in Figure 5, much of the effort expended throughout this phase is dedicated to resolving various design decisions and trades.  Tools that assist both the program developer and procuring agency add structure and organization to this time are particularly important.  Many of the systems architecture products that were mentioned previously (i.e. schedule and CDRL list) within the chapter play a significant role in aiding this process.

The preliminary design phase is unique because although the review marks the closure of the phase, some milestones that are of equal or greater importance must occur before this happens.  As individual subsystem and system designs emerge and component trades for the various systems are developed, it becomes apparent that orders must be placed before the any design review occurs. This is to have long- lead products delivered by the close of the design phase.

This can be very difficult because, usually, the components that fall into this category are some of the most important system elements (avionics, flight computers and transceivers) and this places an additional challenge for the systems engineering team to ensure the requirements and interfaces for the component and the systems are properly vetted.   This is where the program can heavily leverage system architecting products.   Table 4 lists the relevant architectural information for this phase.

System Subsystem Design Specifications (DIV-3, SV-5, OV- 6A, SV-10B) ?  At the culmination of this phase the initial design for each subsystem and the system as a whole should be well understood.  Several Aerospace reference documents detail all of the pertinent design elements for the various subsystems.  However, what is often not seen are common views for how the information should be represented among the various subsystems ensuring that the approach the various developers have for conveying information translates well from subsystem to subsystem.  This is not to say that each presentation needs to be structured identically.

Discussions with various engineers and program managers identified what these ?common views? (Table 5) may be.

