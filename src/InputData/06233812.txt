

Abstract?The malicious code detection based on behaviors has proved effective. But there are high false positives and high false negatives when using this method. Because the behaviors are always out-of-order and redundant. To solve these problems, this paper proposes a detection method based on statistical analysis.

Firstly, this method uses association rules to sort out the behaviors, and then we can get the integrated and accurate behavior sequences. Secondly, by using the association algorithm we can pick up the signatures of behavior sequences. In addition, this method can detect the signatures to judge the threat based on statistical analysis. Experimental results indicate that it can reduce both the false positives and the false negatives effectively.

Keywords-association rules; linear regression; malicious code; statistical analysis  INTRODUCTION Because of the fast increase of malicious codes, the manual  analysis method cannot meet the demand. With the number of polymorphic viruses increasing, the traditional detection methods based on signatures can do nothing [1, 2].

Cohen has proven that there was no algorithms can detect all computer viruses accurately [3, 4]. However, Chess thought there was no detection techniques can detect some specified viruses and did not cause false positives [5]. Bergeron tried to get the behavior semantics by analyzing the syntax [6], but Landi proved that it was not feasible [7]. Reference [8] did not give the detailed definitions of behavior association and the association algorithm.

The malicious code detection based on behaviors mainly contains the following steps: behaviors collection, behaviors arrangement, signatures extraction and malicious code detection. By using SSDT HOOK techniques and IRP HOOK techniques we can get the API function calls sequences which represent the behaviors of programs. These sequences implicate the signatures of malicious codes. But the sequences are always out-of-order and redundant. So if we want to extract the signatures from the raw behaviors, we should preprocess them.

To the above problems, this paper proposes a malicious code detection method based on statistical analysis. Firstly, this method gives the detailed definitions of behavior association.

Secondly, based on the definitions it proposes an association algorithm. Then by using the association algorithm we can pick  up the signatures of behavior sequences. In addition, this method can detect the signatures to judge the threat based on the linear regression model. Experimental results indicate that it can reduce false positives and false negatives effectively.

BEHAVIORS COLLECTION The methods of behavior detection can be divided into  result-oriented and process-oriented [9]. The result-oriented detection determines threat behaviors by comparing some key areas of operating system before and after running, while the process-oriented detection determines threat behaviors by monitoring, obtaining and detecting the condition of API function calls. Considering the hidden property of malicious codes, they will delete their behaviors after the malicious operations, and which lead the inaccuracy of result-oriented detection. So we only discuss the general methods of process- oriented detection.

If malicious codes want to achieve a specific function, it?s necessary for them to use API functions. There are many mature monitoring technologies towards API function calls such as SSDT HOOK or IRP HOOK, so we don?t talk about the monitoring technology in detail. Thus the key point of behavior detection lies on how to choose a good way to associate discrete behaviors and how to choose a proper model to judge the threat accurately and intelligently [8].

BEHAVIOR ASSOCIATION  Subject-Tree We build the Subject-Tree model based on the relations of  creating of processes, the structure is shown in Fig. 1.

Figure 1. the Subject-Tree     R1 is the root node. R11 and R12 are sons of R1. R111, R112 and R122 are grandsons of R1.

Definition of Behavior Association The behavior association contains two parts: the single  subject behavior association and the Subject-Tree behavior association. For one subject, the behavior association reflects on the succession of execution of this subject, and which objects the subject operates on. For the Subject-Tree, we can get the integrated behavior sequences by referring to all subjects of the Subject-Tree. Here we give the relevant definitions.

Definition 1. The single subject behavior sequences are associated with time, objects and parameters. It can be expressed as:  _ , , , ,  .

S is the set of subjects which are the nodes of the Subject- Tree. But now we do not consider the association between subjects.

O is the set of objects. They can be either the nodes of the Subject-Tree or not.

T is the operation time. All the behaviors are arrayed with time.

P is the parameter of behaviors. Only if the parameters meet the condition will we record the behaviors. For example, when the parameter of CreateFile() is FILE_ATTRIBUTE_HIDDEN, we will record it.

is the set of a single behavior, and it can be expressed as: , , , , F is the type of functions. The meaning of  is that when the subject S operates on which object O and what is the type of functions.

Definition 2. The Subject-Tree behavior sequences are associated with subjects and the _  of subjects.

We can define _ , _ .

S is the set of subjects of the Subject-Tree.

_  is the behavior sequences by associating with other subjects.

Association Rules We can get the _  of each subject according to  the association rules.

Association Rule 1. A single subject behavior association. , (1) _ ?                (2)  Equation (1) illustrates that  and are associated according to objects and time.

Equation (2) shows that we can get the behavior sequences of subjects by summing all .

Association Rule 2. The Subject-Tree behavior association. , , (3)  _ ? ? (4) Equation (3) illustrates that if the subject S and subject T  operate on the same object, then the two behaviors are associated.

Equation (4) shows that we can get the integrated behavior sequences of subjects by summing the behaviors sequences of the subject S and the object S.

Rule Library After getting the integrated behavior sequences, all we will  do is find the malicious signatures. To simplify the analysis work, we define several malicious behavior sequences as malicious rules. By comparing the behavior sequences of programs with malicious rules we can pick up the malicious signatures of programs.

Definition 3. We can express the malicious behavior sequences as:  _ , , R is the set of malicious rules, , , , ? , .

Association Algorithm  Here we have gotten the integrated behavior sequences and rule library, the next is how we use them to detect malicious codes. We propose an association algorithm to solve this problem, the procedure is as follows:  Step 1. By monitoring the system we can get the raw behaviors: _Seq , , , .

Step 2. Referring to the Association Rule 1 we can get the single behavior sequences _ ? .

Step 3. Referring to the Association Rule 2 we can get the integrated behavior sequences of each subject _ ? ? .

Step 4. By comparing the behavior sequences of programs with  _ we can get the malicious signatures of programs.

MALICIOUS CODE DETECTION METHOD BASED ON STATISTICAL ANALYSIS  In the above discussion, we have gotten the malicious signatures of programs, but how to judge the threats of programs is another problem. If we judge that a program is malicious when it triggers one malicious rule, as we know, it is not accurate. Because normal programs may trigger some certain malicious rules, we must set the trigger conditions accurately. We consider defining the suitable statistics to integrate all malicious rules to judge the threats of programs.

Considering  , , , ? , are the influencing factors, we introduce the linear regression model.

Linear Regression Model Assume variables , , , ? ,  are n  influencing factors of threat values T, and then meet the Equation (5). , , ? , , , ? ,     (5)  T is the threat value of programs. 1, ? ,  is called the regression coefficient.  is the random error, and     0, ?,  is unknown. 1 the regression factor (factor for short).

By choosing n groups of factors and do experiments we can get n individual observ which are , , ? , . Then we can get Equat, , ? , , , ?0, , 1, ? 16,                     , ? ,   .

This is the multiple linear regression mod for short). We usually express the linear mod matrixes.

, 11     ? ,? ,1     ? , , We also can express the linear model as Eq,             0, .

xi represents that either it meets rulei or not  consider that xi contains only two states.

Definition 4. Assume xij is the coefficient define xij as: 1,  ,        0,   .

Regression Factor Training  For the linear model , , , th calculate the point estimation of X. Because estimation has the intuitionistic geometric sign excellent character, so we chose this way to tra factors [10].

If , ? ,  meets the Equation (1 as the least-squares estimation of X, and X  By analyzing a mass of malicious samples we define 16 rules which are 16 potentia function calls sequences. The structure is show  TABLE I.  THE RULE LIBRARY  Rule  Description API Sequence rule1 Remote Threat OpenProcess?WriteProc  CreateRemoteThre rule2   ?  rule16  Hide Process   ? Key Record  VirtualQueryEx?Virtua WriteProcessMemo  ? SetWindowHookEx?Imm  So R can be expressed as: , And upon the degree of treat, we can define levels on each rule.

Definition 5. Upon the degree of treat, w levels.

1, ? ,  is called oing n individual ved values of T tion (6). ? , ,                                                        (6) del (linear model  del as vectors and  ,   (7) quation (8).

(8)  . So we can  of rulej, we  (9)  e first thing is to the least-squares nificance and the ain the regression  0), we express .

(10)  and normal ones, al threating API  wn in Table. I.

Y  es cessMemory? ead?? alProtectEx? ory??  GetContext?? , , ? , .

e different threat  we define 5 threat  5,   4,  3,2, ,      1, .

When the behavior sequences m  should be 0 (Base=0 and  Here we take 96 samples (norma to train the regression factors. To f order 16 samples into one group an factors. By setting the threat value solutions of  and t  We define  as the matrix of Fig. 2 shows the results of . 0.32360.16260.08750.07490.15180.26640.56920.09260.07910.21620.06100.43920.16530.26890.23730.0570    0.25000.13230.15380.12930.18230.22710.34530.04220.12710.10240.17420.31230.27190.29100.12920.1129  0.10120.13410.28290.12010.29010.19210.12390.37400.17120.18210.28120.37490.28100.18220.21120.2028  Figure 2. the Estimatio  By solving the average value ? 6? [0.2194, 0.0084, 0.0807, 0.3054, 0.1196, 0.0265, 0.2657, 0.1381, 0.0968, 0.1662].

EXPERIME Based on the above ideas, we  statistical analysis (SBSA for experiments contain two parts: the and the detection results comparison  We select 100 malicious sampl make the experiments, and then co the false negatives. The detection r Fig. 4, and Fig. 5.

Figure 3. the Detection Result of  ,,           , (11)  meet no rules, its threat value ).

al ones and malicious ones) form the square matrix, we  nd take 6 groups to train the es manually we can get the the estimation value of X.

.  is the column vector.

0.21320.12300.17290.13420.45120.10190.22100.01240.12910.01120.13410.44110.21210.12810.13120.2812    0.20910.12100.01230.11290.10210.01010.38110.01220.12310.21110.00930.32010.39100.12980.01920.2027  0.21920.11200.00220.10290.33100.21920.19210.18420.19220.37190.11200.29360.27310.19280.11100.2548    on Values of X  of 6 groups we can get , 0.0853, 0.0874, 0.1207,  0.1218, -0.0679, 0.3635,  ENTS design a scanner based on short). The contents of  e threshold value choosing n.

es and 100 normal ones to ount the false positives and results are shown in Fig. 3,   f 100 Malicious Samples     Figure 4. the Detection Result of 100 Norma  Figure 5. the Detection Result of Two Con  The dotted line in Fig. 5 represents the thre can see that when the threshold value incr positives will decrease and the false negatives adjusting the threshold value dynamically we c the threshold value is between 2.25 and 2.35, low false positives and low false negatives Table. II shows the detection results of SBS Kingsoft Anti-virus, and the threshold value is  TABLE II.  THE RESULTS OF THREE ME  False Positives False SBSA 10%  McAfee 17% Kingsoft Anti-virus 21%  The results show that the false positives Kingsoft Anti-virus are 17% and 21%, and th are 14% and 16%. They are higher than our m that our method is more effective to dete malicious codes.

al Samples   nditions  eshold value. We reases, the false will increase. By  can see that when it can meet both  s synchronously.

SA, McAfee and 2.3.

ETHODS  e Negatives  8% 14% 16% of McAfee and  he false negatives method. It proves ect the unknown  CONCLUSION AND F Firstly, this paper gives the deta  association. Secondly, based on the association algorithm. Then by usin we can pick up the signatures o addition, this method can detect t threat based on statistical analysis.

the least-squares estimation [8], the accurate and comprehensive. Exper it can reduce both the false positive unknown malicious codes effectivel  In the future, our efforts will m Firstly, we plan to expand our samp accurately. Secondly, we plan to ap applications to evaluate the effective  REFERENC [1]   Fuyong Zhang, Deyu Qi, and Jinglin H  Based on IRP?, Journal of South C (Natural Science Edition), Vol. 39, No  [2]   Lansheng Han, Cai Fu, Deqing Zou, C ?Task-based behavior detection of i Computer Modelling, Vol. 55, No. 1-2  [3]   Weiwei Liu, Yong Shi, Yu Guo, Zhen malicious code detection method characterization,? ACTA ELECTRON 696-700, 2009.

[4]   F.B.Cohen, ?A Formal Definition o Related Results?, Computers & Secu 1992.

[5]   George S. Boolos, John P. Burg ?Computability and Logic?, Cambridg  [6]   Engin Kirda and Christopher Kru Detection?, 15th USENIX Security S 288, 2006.

[7]   Boaz Barak, Oded Goldreich, Rusell I Sahai, Salil Vadhan, and Ke Yan Obfuscating Programs?, Lecture No 2139, 2001.

[8]   Wu Yunlong, Chen Chen, Wang Hu ?Research on Malicious Code De Estimation?, 2012 ICCSEE Proceedin  [9] Pei Chen and Wei Gao, ?Research malicious code behavior?, Journal of pp. 76-82, 2009.

[10]  Mengda Wu, Bing Li, and Wenhao mathematics,? Science Press, 2004.

FUTURE WORK ailed definitions of behavior e definitions it proposes an ng the association algorithm of behavior sequences. In the signatures to judge the  Compared with just using e statistical analysis is more imental results indicate that  es and the false negatives of y.

ainly focus on two aspects.

ples to train the factors more pply our algorithm to more eness.

ES Hu, ?Unknown Malware Detection China University of Technology o. 4, pp. 15-20, 2011.

ChangHoon Lee, and Wenjing Jia, illegal codes?, Mathematical and 2, pp. 80-86, 2011.

n Han, and Changxiang Shen, ?A  based on integrated behavior NICA SINICA, Vol. 37, No. 4, pp.

of Computer Worms and Some rity, Vol. 11, No. 7, pp. 641-652,  gess, and Richard C. Jeffrey, ge University Press, 2007.

uegel, ?Behavior-based Spyware Symposium Proceedings, pp. 273-  Impagliazzo, Steven Rudich, Amit ng, ?On the (Im)possibility of otes in Computer Science, Vol.

uiquan, Xu Xinhai and Zhou Jie, tection Based on Least-squares  ngs, Vol. 2, pp. 124-128, 2012.

