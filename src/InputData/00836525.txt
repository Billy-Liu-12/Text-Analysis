Creating Adaptive Web Sites Through Usage-Based Clustering of URLs

Abstract  In this paper we describe an approach to usage-based Web personalization taking into account both the offline tasks related to the mining of usage data, and the online process of automatic Web page customization based on the mined knowledge.

Specifically, we propose an effective technique for capturing common user profiles based on association- rule discovery and usage-based clustering. We also propose techniques for combining this knowledge with the current status of an ongoing Web activity to perform real-time personalization. Finally, we provide an experimental evaluation of the proposed techniques using real Web usage data.

1 Introduction  Web personalization has quickly moved from an added value feature to a necessity, particularly for large information services and sites that generate revenue by selling products. Web personalization can be viewed as using user preferences profiles to dynamically serve customized content to particular users. User preferences may be obtained explicitly, or by passive observation of users over time as they interact with the system. Principal elements of Web personalization include modeling of Web objects (pages, etc.) and subjects (users), matching between and across objects and/or subjects, and determination of the set of actions to be recommended for personalization.

Existing approaches to Web personalization often rely heavily on human input for determining the personalization actions. For example the use of static profiles obtained through user registration is the predominant techniques used by many Web-based companies. Collaborative filtering techniques (e.g., GroupLens [9] and Firefly [18]), usually involve explicit ratings of objects by users. Content-based filtering techniques such as those used by  WebWatcher [12] and Letizia [13] rely on client-side personal profiles and content similarity of Web documents to these profiles.

This type of input is often a subjective description of the users by the users themselves, and thus prone to biases. Furthermore, the profile is static, and its performance degrades over time as the profile ages.

Furthermore, using content similarity alone as a way to obtain aggregate profiles may result in missing important relationships among Web object based on their usage.

Recently, a number of approaches have been developed dealing with specific aspects of Web usage mining for the purpose of automatically discovering user profiles. For example, Perkowitz and Etzioni [15] proposed the idea of optimizing the structure of Web sites based co-occurrence patterns of pages within usage data for the site. Schechter et al [17] have developed techniques for using path profiles of users to predict future HTTP requests, which can be used for network and proxy caching. Spiliopoulou et al [16], Cooley et al [6], and Buchner and Mulvenna [3] have applied data mining techniques to extract usage patterns from Web logs, for the purpose of deriving marketing intelligence. Shahabi et al [19], Yan et al [20], and Nasraoui et al [14] have proposed clustering of user sessions to predict future user behavior.

In this paper we describe an approach to usage- based Web personalization taking into account both the offline tasks related to the mining of usage data, and the online process of automatic Web page customization based on the mined knowledge. First, we discuss the data preparation in order to transform Web log entries into meaningful semantic units of navigation called user transactions. We then present an effective technique for capturing common user profiles based on association-rule discovery and usage-based clustering. The clustering technique employed, called Association-Rule Hypergraph Partitioning is capable of clustering URL references directly, hence eliminating the need for discovering clusters of user transactions as the starting point for    obtaining aggregate profiles. We also propose techniques for combining this knowledge with the current status of an ongoing Web activity to perform real-time personalization. Finally, we provide an experimental evaluation of the proposed techniques using real Web usage data.

2 Mining Usage Data for Web Personalization  The overall process of usage-based Web personalization can be divided into two components.

The offline component is comprised of the data preparation tasks resulting in a user transaction file, and the specific usage mining tasks, which in our case include the discovery of association rules and the derivation of URL clusters based on user access  patterns. Once the mining tasks are accomplished, the frequent itemsets and the URL clusters are used by the online component of the architecture to provide dynamic recommendations to users based on their current navigational activity. The Web server keeps track of the active user session as the user browser makes HTTP requests. The recommendation engine considers the active user session in conjunction with the URL clusters to compute a set of recommended URLs. The recommendation set is then added to the last requested page as a set of links before the page is sent to the client browser.  A generalized architecture for usage-based personalization is depicted in Figure 1. In this section, we discuss the offline components of this architecture. The online customization process is presented in the next section.

Figure 1. General Architecture for Usage-Based Web Personalization    2.1 Data Preparation Tasks  A critical step in effectively mining usage data for Web personalization is the cleaning and transformation of access log data, and the identification of a set of user sessions. Cleaning the server logs involves removing redundant references (e.g., image and sound files, multiple frames, and dynamic pages that have the same template), leaving only one entry per page view. It is also necessary to filter the log files by mapping the references to the site topology induced by physical links between pages.

Client-side and proxy level caching often create impediments to the identification of unique user sessions. For example, in a Web server log, all requests from a proxy server have the same identifier, even though the requests potentially represent more than one user. Techniques such as the use of client- side cookies for user identification are not always practical due to privacy concerns of the users, or limitations of the capabilities of the Web server. In [6] we proposed several simple heuristics using the referrer and agent fields of a Server log to identify user sessions and infer missing references with relative accuracy in the absence of additional information such as cookies.

The goal of transaction identification is to dynamically create meaningful clusters of references for each user. Based on an underlying model of the user's browsing behavior, each page reference can be categorized as a content reference, auxiliary (or navigational) reference, or hybrid. In this way different types of transactions can be obtained from the user session file, including content-only transactions involving references to content pages, and navigation-content transactions involving a mix of pages types. The details of methods for transaction identification are discussed in [6]. Finally, the session file may be filtered to remove small transactions and low support references (i.e., URL references that are not supported by a specified number of user transactions). This type of support filtering is important in removing noise from the data, such as transactions corresponding to users who do not traverse the site.

Given the preprocessing steps outlined above, for the rest of this paper we assume that there is a set of n unique URLs  U = {url1, url2, ?, urln},  appearing in the preprocessed log, and a set of m user transactions  T = {t1, t2, ?, tm},  where each ti ? T is a non-empty subset of U.

