

Abstract: In this paper, using the closure of the Galois connection,  two algorithm are proposed for computing all closed itemsets and their generators of a formal context. The canonical implications basis is a minimal no-redundant implication set from which all implications can be inferred by the Armstrong rules. The canonical basis relies on the particular sort itemsets called pseudo-closecd itemsets of formal context are presented.

Keywords: Formal context; closure operator; implicational system;  closed itemset; pseudo-closed  1.  Introduction  Formal concept analysis(FCA)[7]is a discipline the hierarchical structures induced by a binary relation. The term concept lattice and formal concept analysis are due to Wille[10]. Concept lattices is an appropriate framework for data mining especially association rules mining[1,2,8]. The notion of closure operator and Moore family both involve the concept of logical or entail implication, used for in knowledge acquisition method called attribute exploration[9] and association rules in data mining. The notion of implicational system (IS for short) was defined in[4]. The properties of implicational Moore families and ISs have been studied in[11,4]. In general, even for a small formal context, its implicational system maybe very large, and has a huge proportion of redundant implications, i.e.

implications conveying the same information. Hence, finding the smallest set of implications such that other implications can be inferred form these implications by the Armstrong rules[6] is a interest work. Thus set of implications is called the canonical basis of implicational system. By the theorem in[2], in order to get the canonical basis of implicational system, the main works are finding all pseudo-closed itemsets and finding all closed itemsets.

The paper is organized as follows. Section 2 gives the background knowledge of formal context and concept lattice. In Section 3, some definitions, lemmas and the  theorems about implicational system which will be used in our algorithms are presented. In Section 4, we propose four algorithms for computing the canonical basis of implicational system of a formal context. The following Section 5 gives experimental results on a simpler formal context and the UCI KDD?s archives?s database.

2.  Formal contest and concept lattice  Definition1. A formal context is a triple ( , , )K O A R= , where O  andA  are finite sets of objects  and attributes(items) respectively, and R O A? ?  is a binary relation between O  and A . If ( )o i R, ? , then object o O?  has the attribute i A?  (object o O?  is related to the item i A? ).

A formal context is usually represented by a cross table. For example, the following table is a cross table of the formal context  ( {1 2 3 4 5} { } )K O R a b c d e= = , , , , , = , , , , , . This formal context always mentioned in this paper.

Table 1. The cross table of formal context a  b  c  d  e  1 ?  ? ?  2  ? ?  ?  3 ? ? ?  ?  4  ?   ?  5 ? ? ?  ?    We define two maps between 2O  and 2A , for arbitrary 2O O?  and 2M A? :      ( ) { ( ) for all }  ( ) { ( ) for all }  f O m M o m o O  g M o O o m R m M  = ? , ?, ? ,  = ? , ? , ? .

The couple of ( )f g,  is called the Galois connection between power sets 2O and 2A . For 2 2,O O M A? ? , M  is said to be common to O , if ( )g M O= .

Proposition 1. The following three conditions is holding for arbitrary 1 2 2O O O, , ?  and 1 2 2I I I, , ?  1. if 1 2O O? , then 2 1( ) ( )f O f O? ,  2. if 1 2I I? , then 2 1( ) ( )g I g I?  3. ( )O g I?  if and only if ( )I f O?  Let( )f g, be the Galois connection. Setting f g? = and g f? = . It is easily to prove that ?  and ?  are two closure operators in  2O and 2A . i.e. for arbitrary  1 2O O O O, , ? , 21 2I I I A, , ? , ? and ?  satisfies the  following conditions: 1. 1 2 1 2( ) ( ),I I I I? ?? ? ?  1 2 2 1 ( ) ( )O O O O? ?? ? ?  2. ( ), ( )I I O O? ?? ?  3. ( ( )) ( )I I? ? ?=  ( ( )) ( )O O? ? ?=  Definition 2. Itemset 2I A?  is closed, if ( )I I? = .

For any itemset I A? , ( )I?  is called the closure of I corresponding to closure operator ? , i.e. ( )I? is the smallest closed itemset containing I .

Let ( , , )K O A R=  be a formal context,  2 2O O A A? , ? . binary couple ( )O A,  is called a formal concept of K , if ( )f O B=  and ( )g A O= . O  is called the extent andA the intent of formal concept ( )O A, .

Let C  be the set of all formal concepts of ( , , )K O A R= .

We define a partial order  on C . For  1 1 2 2( ) ( )O M O M C, , , ? ,  1 1 2 2 1 2 2 1( ) ( ) orO M O M O O B B, , ? ? ?  (1)  Theorem 1. [7] Let =  be a formal context, ( )f g,  the Galois connection. The partial ordered set ( )C ,  is a complete lattice. The infimum and supremum are respectively  ( ) ( ( ))t t t t t T t T t T  O M O M? ? ? ?  , = , ,? ? ?     (2)  ( ) ( ( ) )t t t t t T t T t T  O M O M? ? ? ? ?  , = , .? ? ?      (3)  The Hash graph of concept lattice is also called the line diagram. It would be too messy to label each concept by its extent and its intent. So, one concept is labeled by its extent or its intent. In the line diagram, the node labeled by objects represents the smallest concept with those objects in its extent; the node labeled by items represents the greatest concept with those items in its intent. Thus, if object o has an attribute m  if and only if there is an ascending path from the node labeled by o to the node labeled by m in the line diagram. The extent of a concept consists of all objects whose labels are below in the line diagram, and the intent consists of all items labeled to concepts above in the hierarchy.

Figure 1. The Hash graph of context formal repre-sented by  table 1  In figure1, the concept labeled by A  has {1,3,5}  as its extent and { , }AC  as the intent; the concept labeled by {3,5}  is the smallest concept which extent is {3,5}  and intent is { , , }A B E . { , , }B C E  is the greatest itemset common to the objects set {2,3,5} .

3.  The implicational system  Definition 3. A closure system (also called Moore family)is a family F  of subsets of A  satisfying the two following properties:  1. F?A  2. 1 2F F F, ?  implies 1 2F F F? ?  The poset ( )F,?  is a lattice, for each 1 2F F F, ? , the least upper bound(LUD) and the greatest lower bound(GLD)      are 1 2 1 2F F F F? = ? and 1 2 1 2{ }.F F F F F F F? = ? ? ? ?  It is well known that the set of all closure systems and the set of all closure operators on set M  are in a one-to-one correspondence. For a given closure operator ? , the closure system associated to ?  is the set of all closed elements of ? :  { | ( )}F F M F F? ?= ? =           (4)  The closure operator associated to the closure system F  is such that, for any X M? , ( )F X?  is the least element F  that contains X :  ( ) { }F X F F X F? = ? ??       (5) Let ( , , )K O A R=  be a formal context, An implication on A  is written as A B? . A  is called the premise and B the conclusion. The implication A B?  holds in A  if ( ) ( )g A g B? . Subset X ? A  is a model of implication A B?  if A X?  implies B X? . Implication A B?  holds for an object o O?  if ( )f o  is a model of A B? . An implication is valid in formal context  ( , , )K O A R= , if it holds for all objects in O . Let ?  be the set of all implications that are valid in formal contextK .

Setting  { }F X A X B X A B? = ? ? ? ? , ? ? ?  then F? is clearly a closure system and its elements is closed. by (4) and (5), It is easily to prove that the closure operator associated to F? is the closure operator  f g? = .

In general, even for a small formal context K , the  closure system K? is huge and some implications are redundant. Hence, a special interest is finding the smallest subset of K? , such that all other implications in ?  can be inferred by the three Armstrong rules[6]. Thus subset is called the canonical basis of K? , denoted KB .

Definition4.  Let ( , , )K O A R=  be a formal context, ( )f g,  the Galois connection. Subset A  is pseudo-closed if ( )A A??  and ( )B A? ?  for any pseudo-closed subset B A? .

Theorem 2. [5] Let ( , , )K O A R=  be a formal context, f g? =  the closure operator on A .

{ ( ) \ is pseudo closed}B A A A A M A?= ? ? , ?   (3)  is a non-redundant base of ? .

4.  The canonical basis of implicational system  By theorem5, in order to get the basis KB  of K? , one must finish two main computing works. One is finding all pseudo-closed sets in K ; The other one is computing the closure of each pseudo-closed set. By the definition of pseudo-closed, getting the pseudo-closed sets, one needs to find all closed itemsets. In this section, we present the algorithms of computing the pseudo-closed itemsets and their closure.

4.1.  The Generators  Definition 5. Let ( )K O A R= , ,  be a formal context, ( )f g,  the Galois connection. Itemset I A?  is a (minimal) generator of closed itemset C  if and only if  ( )I C? =  and there exist no other itemset A I?  such that ( )A C? = . A generator of cardinality k  is called a k -generator, the set of all k -generators is denoted as kG .

Lemma 1.  Let ( )K O A R= , ,  be a formal context, ( )f g,  the Galois connection of K . For any two itemsets  1 2I I A, ? ,  1 2 1 2( ) ( ( ) ( ))I I I I? ? ? ?? = ?  Proof: Let 1 2I I A, ?  be two non-empty itemsets, then 1 1 2 2( ) ( )I I I I? ?? , ? , 1 2 1 2( ) ( )I I I I? ?? ? ? , so  1 2 1 2( ) ( ( ) ( ))I I I I? ? ? ?? ? ? .       (6)  On other hands, 1 1 2I I I? ?  and 2 1 2I I I? ? ,  1 1 2( ) ( )I I I? ?? ?  and 2 1 2( ) ( )I I I? ?? ? . According to the idempotency  property of the closure operators, we have  1 2 1 2( ( ) ( )) ( ( ))I I I I? ? ? ? ?? ? ?  1 2 1 2( ( ) ( )) ( )I I I I? ? ? ?? ? ? ?  (7)  By (6) and (7), so, 1 2 1 2( ) ( ( ) ( ))I I I I? ? ? ?? = ? .

Lemma 2.  Let ( )K O A R= , ,  be a formal context,  ( )f g,  the Galois connection of K . For any two itemsets  1 2I I A, ? , if 1 2( ) ( )g I g I= , Then 1 2( ) ( )I I? ?= , and for any subset 3 1 3 2 3( ) ( )I M I I I I? ?? , ? = ? .

Proof: By the definition of closure operator ? ,  1 1 2 2( ) ( ( ) ( ( ) ( ).I f g I f g I I? ?= = =  Let 3I M? . Then      according to Lemma 1:  1 3 2 3 2 3( ) ( ( ) ( )) ( )I I I I I I? ? ? ? ?? = ? = ?    (8) By lemma1 and lemma2, the  candidate ( 1)i + generators 1iG +  can be obtained using i generators in iG : any two generators in iG  with the same first 1i ?  items are joined, producing a new potential generator of size 1i + . The candidate 1iG + may be redundant, i.e. the closure of some generators in  1iG +  already be computed. Hence these generators were pruned from 1iG +  by the following two rules.

1. The candidate ( 1)i + -generator c  is deleted from 1iG + , if some i -subset s  of c  is not in iG .

2. The candidate ( 1)i + -generator c is deleted from 1iG + , if there exist some i -subset s  such that ( ) ( )g s g c= , this means that the closure of c  is equal to  those of s .

The pseudo-code of obtaining ( 1)i + -generators 1iG +  is given in algorithm 1.

Algorithm 1 The generator function  Input iG .

1iG + = ? .

For arbitrary two i -generators ip q G, ?  with the same first 1i ?  items.

1 1 { }i iG G p q+ +? ?? .

For all candidate generators 1ic G +?  do  if there exist some i -subset s  of c , s.t. is G?/ , then  1 1 \ { }i iG G c+ +?  end if  end for  for all candidate generators 1ic G +?  do  if there exist some i -subset s  of c , s.t.

( ) ( )g s g c=  then  1 1 \ { }i iG G c+ +?  end if  end for  Output 1iG + .

4.2.  The closed itemsets  Theorem3. Let ( )K O A R= , ,  be a formal context, ( )f g,  the Galois connection of K . The closure ( )I?  of an itemset I  is the intersection of all objects in the context that common to I , i.e.

( ) { ( ) ( )}  o O  I f o I f o? ?  = ??         (9)  Proof: For any items ,I  Setting  { ({ })}S o O I f o= ? ?  and  { ( )}S o O o g I? = ? ? .

By the definition of the Galois connections f  and g , if  ({ })I f o? , then ( )o g I? . On the other hand, if ( )o g I? , then ( ) ( ( )) ({ })I I f g I f o?? = ? . Hence  S S ?=  and  ( ) ( ) ( ( )) ({ }) ({ }) ({ }).

o g I o So S  I f g I f o f o f o? ?? ??  = = = =? ? ?  By the above theorem, the closure of an itemset can be easily computed, the pseudo code of closure function ?  is given as following:  Algorithm 2: The closure function  for all o O?  { ({ })oG p p G p f o? ? ? ?? ; for all op G?  do  if ( )p? = ?  then  ( ) ({ })p f o? ? ;  else  ( ) ( ) ({ })p p f o? ?? ? ;  end if  end for  end for  Answer  { ( ) ( )}p G p G p p? ?? ?/? ? ? ? , =? As finding all closed itemsets, one first determines the  set 1G  of 1-generators. Then, the level variable is set to 0.

In each of iteration, the Generator function is applied to the set of generators iG , determining the candidate ( 1)i + generators 1iG + . This pricess takes place until iG  is empty. Finally, closures of all generators produced are determined. Using the level variable, we construct two sets      of generators. The set G  which contains generators p for which size is less than 1level ? , and so that are closed.

The set  G ?  which contains generators for which size is at least 1level ? , among which some are not closed, and so for which closure computation is necessary. The closure of generators in  G ?  are determined by applying the Generator function to  G ? . Then all closed itemsets have been produced. The pseudo-code of this process is:  Algorithm3: The pseudo-code of finding all closed itemsets  Input 1G .

0l ? ;      level variable  for 1i ? ; iG ? ? ; i + +  do  1 Generator( )i iG G+ ? ;  end for  if 2l >  then  { 1}jG G j l? < ?? ; for all p G?  do  ( ) Generator( )p p? ? ;  end for  if 0l ? { 1}jG G j l ? ? ? ?? ;  Closure( )G G? ?? ;  end if  end if { }FC c c G C ?? ? ? ;  4.3.  The algorithm of computing the canonical basis  When all closed itemsets have been computed, by the definition4, the work of computing all pseudo-closed itemsets becomes easier. Let i i iI C P, ,  be sets of the itemsets, closed itemsets and pseudo-closed itemsets with size i  respectively. The pseudo-codes of the algorithm are presented in Algorithm 4.

Algorithm 4: the code of computing the canonical basis  Input the set of all closed itemsets C ;  Output the base KB ;  {}KB ? ;  if 0 {}C =  then  0P ? ? ;  else  0 {}P ? ;  end if  for 1i i k i= ; ? ; + +  do  \i i iP I C= ;  for all iL P?  do  1ps = ;  for all jP P j i? , <  do  if ( )P L P L?? ? ?/ then  0ps = ;  \ { }i iP P L? ;  end if  end for  if 1ps = then  ( ) min({ })jL c C L c j i? ? ? ? , > ;  end if  end for end for  for all  n ii  P P =  ? ?  do  { ( ) \ }K KB B P P P?? ? ? ,  end for  5.  Experimental results  Executing our algorithms on the example formal context in section 4, we obtain the following result showed in table 2. The mushroom database consists of 8416 objects of an average size of 23 attributes(23 items by objects and 127 items on the whole) describing the characteristics of mushrooms. We implement the algorithms described above on mushroom database. The implication system has 8231 implications and it?s canonical basis consists of 78 implications      Table 2. The table of experiment result Generators Closed itemsets Implications  { }A  { }AC,  A C?  { }B  { }B E,  B E?  { }C  { }C  { }D  { , , }AC D  D AC?  { }E  { }B E,  E B?  { }A B,  { }A B C E, , ,  AB CE?  { }A E,  { }A B C E, , ,  AE BC?  { }B C,  { }B C E, ,  CB E?  { }C E,  { }B C E, ,  CE B?  6.  Conclusions  The attribute implication rules in formal concept analysis can give the plausible dependencies in data that can be used for data recovery, classification, etc. In general, the size of the implicational system is huge, even for a small context. And some implication rules are redundant in the sense that it could be retrieved from smaller sets of implication rules. The canonical implication basis is a minimal no-redundant implication set from which all valid implication can be inferred by the Armstrong rules. In this paper, we discuss how to construct the canonical basis in formal context. By the theorem in [5], the keys of constructing the canonical basis are finding all pseudo-closed itemsets and computing their closures. In order to finding all pseudo-closed, one must find all closed itemsets and their generators. We write out the pseudo-code of algorithms for above computing works. Experimental result show that the algorithms presented in this paper are feasible and efficient for large database.

Acknowledgements  This paper is supported by the Homecoming Fund of North China Electric Power University (200514001).

