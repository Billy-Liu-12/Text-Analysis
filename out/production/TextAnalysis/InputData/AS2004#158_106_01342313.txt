

<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings of the 5?WorId Congress on Intelligent Control %hlft?tkBkE@US flakit&amp; and Automation, June 15-19, 2004, Hangzhou, P.R. China 2004 4 6  R 15 - 19 8. KPEMM gMPIS: ?Maximal-Profit Item Selection based on Generalized Cross-Selling Considerations Bihong Liu, Fansheng Kong, Xiaobing Yang Institute of Artificial Intelligence, Zhejiang University, Hangzhou 3 10027 (E-mail: bibongli3002@yahoo.com) Abst?acf-An algorithm was proposed to rank items with respect to profits and to select the most profitable ones for business and other applications by analyzing historical transaction data see.

The decision of maximal-profit items subset considers both the cross-selling effects among items and the customers? changing buying behaviors. Generalized loss rules are proposed to model the effects of the unselected items to the customers? purchase aetinns. We show that the approach models customers? buying behaviors well and is very suitable and practicable for real business applications. We proposed a fast heuristic algorithm to the problem. Experiments show that the algorithm is highly effective and efficient and is scalable for large data sets.

Keywords- item selection, cross-selling, association rule, data mining

I. INTTRODUCTION Item selection is a hasic problem in business and other applications. In retailing, limited by shelf spaces and financial resources, a retailer usually wants to select only a limited amount of items for sale. Certainly, the retailer wants to get a maximal profit from the selection. So, the problem becomes the following: bow to select a subset of items so that the estimated profit will be maximized. Simply selecting items based on their individual profits is not a good solution, because it doesn?t consider the mutual effects between different items: a missing item not only makes a customer?s desirable item unavailable, but also reduces the probability of the customer?s purchasing of other items.

The easy availability of vast data sets has provided some foundations for the problem. Data mining has showed its great capabilities on the discovery of patterns from large data.

Association rule mining origins from the analysis of basket data and has been extended to discover the correlations between different things[2,3,6,9]. Although many algorithms have been proposed, there are relatively few researches on how to use data mining techniques directly for the business decision makingp].

In recent years, several algorithms for maximal-profit item selection problem have been proposed, such as PROFSET[4,5], .HAP[II] and MPIS[IO]. PROFSET decomposes each transaction into several disjoint subsets and use 0-1 programming on these subsets to select items. HAP models the mutual reinforcement relation between items as the hublauthority weights of web pages and ranks items basing on authority weights. MPIS uses the lose rules to estimate.the profits lost because of the unavailability of some items and heuristically remove items until the expected number of items meet.

PROFSET, HAP and MPIS solve the item selection problem to some extent, but they still have some disadvantages. The main disadvantage is that they don?t well model the purchasing behaviors of customers. PROFSET?s maximal fiequent ifemsets doesn?t reflect a customer?s purchase intention well and HAP doesn?t well consider the effects of an unavailable item to the purchasing behavior of a customer.

MPIS considers the effects, but it makes a questionable hide assumption that a customer will reduce an item?s purchase if  the item is unavailable. Another disadvantage is that these algorithms can?t be used to add new items for sale.

The disadvantages of these algorithms urge us to develop an efficient and effective algorithm-gMPIS: generalized Maximal-Profit Item Selection with the consideration of cross-selling effects. gMPIS uses generalized loss rules to    cross-selling effects. gMPIS uses generalized loss rules to model the effects of the unavailable items to the purchase actions of customers. Unlike MPIS, gMPIS assumes a customer will choose some similar items if his ?intended? item is unavailable. We propose a heuristic algorithm to speed the selection. Experiments show that the algorithm is highly effective and efficient and is scalable for large data sets.

0-7803-8273-0/04/$20.00 02004 IEEE 11. PROBLEM DEFMITION Given a set of items and a transaction database about the selling of the items, maximal-profit item selection problem intends to select a subset of the items, so that the selected items will produce a maximal profit based on the consideration of cross-selling effect. We define the problem in a formal form similar to [io].

Definition 1 (Taxonomy tree). Given an itemset 1={11, 12, . . ., I"} ,  a taxonomy tree H on I is a tree H with each item in I as vertex. An edge in H represents an is-a relationship. If there is an edge in H from p to e, we call p a parent of c and c a child ofp.

We use vertex and item interchangeable in the paper.

Definition 2 (Cut items of a taxonomy tree). Given a taxonomy tree H on itemset Z={Z,% I&gt;, ..., I " ] ,  the cut items I ' C I  of H is a set of items in H such that each path from the root to each leaf of H contains exactly an item in 1'.

Definition 3 (gMPIS: generalized Maximal-Profit Item Selection problem). Given an itemset 1={11, J2, ..., ZJ, and a data set D={t;l 15i5m,m,tjc I }  with m transactions. Let ~ ( I J ; )  be the profit of item I, in transaction t j ( lY5m) .  (The profit of an item may differ since the amount of purchase may be different and its price may be changing along time). Let H be a taxonomy tree on I and I ' C I  be the cut items of H. gMPIS problem is the problem of selecting a subset S C I '  of J elements, such that the estimated profit produced by S is maximal among the profits produced by all subsets of size J in I', where J is a parameter specified by user.

Definition 4 (Generalized item). Given a taxonomy tree H on itemset I={[,, 12, ..,,I,,}, for an item I, in H, the generalized item I,' of I ,  is the ancestor of I, in the cut items of H.

Definition 5 (Generalized transaction). Given a ' ransaction t ;CI ,  the generalized transaction T; of r, is defined as: T,= {Ia' II, E t , } .

Definition 6 (Selected generalized items). Given a transaction tiGI, a selection S C I ' ,  we define the set of selected generalized items as t;'T.nS, the set of generalized items not selected in ti as di'=Tt-tz'.

Definition 7 (Profit of a generalized item). For a and a generalized item Ior in T;,p(I,,', generalized transaction T;), the profit of a generalized item I,' is: P U a ' , T . )  = CIcSI, PV, &gt; t i )  (1) We use historical transaction data sets to estimate the profit P(S) will be generated if the total available generalized itemset is S.

P(S) = c;, c,e,,j. P V 0 ' X  ) X U  -Ww, '&gt; In')) (2) Here, csfdj'Jo') is the cross selling factor, which means that if the generalized itemset d;' is unavailable, at what probability is the generalized item I,' won't be bought in transaction 1;.

p(Ia',Tj) is the profit of generalized item I,' in generalized transaction T;.

Definition 8 (Loss rule). A loss rule is of the form I,'=&gt;V d;: which means a customer who purchases generalized item I,' will also purchase at least one generalized item in d;, Definition 9 (Confidence of loss rule). con(l,'=&gt;Vd,') is the number of transactions containing both I,' a id  at least one element in d;' divided by the number of transactions containing Io'.

Modeling csf(d;',I,') as con(l,,=&gt;Vd;'), we get P(S).

Po =~==,c,,,,.d~:,~x(1-... (1:=&gt;4'))  (3) 111. RELATED WORK Association rule mining has received many attentions in    Association rule mining has received many attentions in retent yean[2,3,6,9]. The formal definition of association rule is the following. Given a set of items I={I,J2, . . .Jn] and a data set B { t $ ; L I ,  l s i s m } ,  an association rule is the implication of the form X=&gt;Y, where XL I, Y c  I, XnY=@. The rule X=&gt; Y holds in the data set D with confidence e% if c% of transactions in D that contain X also contain Y. The rule X=&gt;Y has support s% in the transaction set D i fs% of transactions in D containXU y[2,3].

There are some algorithms used for item selection.

PROFSET [4,5] first identifies a customer's purchase intention in a transaction by decomposing the transaction into several disjoint "maximal frequent itemsets", which are the itemsets with support above some user-defined minimal support and have no proper supersets. Then PROSET applies 0-1 programming to select some purchase intentions, not single items, kom the whole purchase intentinns.

Just as pointed in [ 111, PROFSET has several drawbacks, such as, it considers none of the strength of relation between items and marimal frequent itemsets doesn't reflect purchase intentions well.

Another item selection algorithm is HAP[Il]. It uses the "hub-authority" method as in [7] to rank items. Items are represented by vertices in a graph and each link from I, to 4 represents the cross-selling effects from 1, to 4. Each item is assigned a hub weight and an authority weight. An item pointed by many items with high huh weights is a good authority item. Correspondingly, an item pointed by many items with high authority weights is a good hub item. HAP selects items based on the ranking of authority weights.

In [IO], drawbacks of HAP are pointed, such as, the problems of dead ends or spider traps, item with small profit will gain high autharity weight if many items point to it. H A P can't solve the problem of generalized items selection.

The most recent algorithm is MPIS. Our gMPIS algorithm flows the same concept of loss rule from it. MPIS estimates the probability of not purchasing each available item I, in a transaction t, under a selection S using the confidence of I,=&gt; Vd;, where d; is the unavailable items in 1,.

MPIS is efficient and effective for item selection. However, it also has some drawbacks. First, MPIS makes a questionable hide assumption that a customer won't choose to buy another item when his intended item is unavailable, even if there are some items very similar to it. Also, a transaction isn't the just description of a customer's purchase intention, because the customer may have no a concrete purchase intention and he is buying under the selection of controlled available items and affected by the situations at that time. MPIS decreases the cross-selling factor, since it computes cross-selling factor using the confidence between item I ,  and 4, hut a more accurate estimation of cross-selling factor should he between generalized items. MPIS can't he used to select new items.



IV. gMPIS ALGONTHM A. gW1S Algorithm In this section, we propose our gMPIS algorithm. At first, Definition 10 (Individual generalized transaction). If a generalized transaction T; contains a generalized item I,' only, then T, is an individual generalized transaction of lo'. The individual count c.' is the total count of individual generalized transaction ofl,'.

we give some definitions.

Definition 11 (Average profit of generalized item). Let Za' be the set of transactions that contain generalized item Io', the average profit of I.' is defined as: (4) P, '= (&amp;ez,# PU, ' &gt;  T. )) / I z, 'I The following are our gMPIS algorithm and it has used some methods in [IO].

gMPIS algorithm.

1. Read each transaction from disk, translate it into generalized items, compute the individual count of each generalized item, the count of each generalized item, the count    generalized item, the count of each generalized item, the count of each pair of generalized items, average profit of each generalized item.

2. Compute the estimated set for each generalized item. For each generalized item I,', compute the estimated value of generalized item 4' from 4': e;;=pj'X C~'+@~'+P;~ X sup(l;',~'), where sup(1,'A') is the support of generalized itemset {l;,g'} Choose J-I generalized items with the highest estimated values and put them into the estimated set S,' for 1,: put the rest into U&amp;'.

3. Compute the benefit of each generalized item. For each generalized item I;: compute the estimated benefit of 1,': bi'=P(Sj'U {I,'}). Let the selection with the highest bj' he MaxS and let MaxF'rofif=b;'.

4. Item pruning. Compute the estimated lowest profit L,'and estimated highest profit H,' of each generalized item.1,: where L,'=f({l;']) and H,'=f(Sl'U { l ; ' } ) - f (Sj ' ) .  Find the J-highest value L from all L;'. For each generalized item I(', remove I;' if Hj'&lt;L. Let I' be the set of all generalized items that have not been pruned.

value from I'. For each generalized item I,' in I': 5. Prune a generalized item I,' with the smallest benefit 5.1 Iflx' is in S,: remove 1,'from S;', add a generalized item 4' from UnS;' with highest eij' value into S,: then recalculate b;kP(S,'U (4')).

5.2 If  bi5MaxS, let MaxS be &amp;'U {c'}, let MaxProfit be b!'.

6. Select a generalized itemset M with J generalized items from I' with highest benefit values. Calculate P(M). If P(M)&gt;MaxS, let MaxS de Mand MaxProJif he P(M).



I. If I' contains exactly J elements, return MaxS as a selection and MaxProfit as the estimated profit, else goto step 5.

B. Some Notes to gMfIS It's easy to add user's constraints into gMPIS, such as which generalized items are selected and which ones are not selected.

When estimating the profit of a selection, the calculation of con(/,?=&gt;Vd,?) will takes a lot time, since it nearly needs to scan the whole transactions and the total scans of the transactions data sets are up to the sum of the amount of the generalized items bought by each customer. We use the method similar to MPIS to approximate the calculation. That is, con(/,?=&gt;Vdi? is approximated by:. . .

con?(/.?=&gt;vd,?)=min( C d . e d i , ~ u p (  ~ ? ? , d ? )  /sup(/,2,1). (5) From [IO], we can know that con? (/,?=&gt;Vd;,) is an approximation of con(/,?=&gt;Vd,?). It?s easy to see that the estimated profits using con? (Z?=&gt;Vd;? will be not greater than the profits estimated by using con(l,?=&gt;Vd;?). con? (Io?=&gt; Vd;? can be easy calculated in constant time.

the items that are sure to be non-profitable items.

In the step 4, we use the same method as in [IO] to prune gMPIS has great flexibilities on the selection of cut items.

Note that the definitions of taxonomy tree and cut items have guaranteed that there are no two cut items such that one is the generalized items of the other. Although there is no limitation on tbe selection of cut items, we recommend users not to select leaf items. That will reduce the merits of our generalized items selection model. But, a user can climb up the taxonomy tree to select more generalized items. A user can first decide which generalized items should be selected, and continue to select more specialized items among selected generalized items. A general method is to select the parents of leaf items as cut items. After selecting generalized items, a user can select specialized items based ?on his other methods, for example, select the most profitable items, or all items, or add new items.

C. Our Contribulions Our contributions are the following: First, gMF?lS is based on the framework of generalized items and the ?~ generalized cross-selling effect models    items and the ?~ generalized cross-selling effect models customers? purchase behaviors well. It also gives users the flexibilities of selecting items on multiple granularities.

Second, gMPIS uses a fast algorithm to compute the confidence of a generalized loss rule and speeds the algorithm a lot.

Third, gMPIS always records the optimal solution has gotten up to now, and after removing a generalized item, it selects a local optimal solution. That only takes a little time, but it makes gMPIS converge to optimal solution fast. A user can get an optimal solution up to now at any time and can control the running

V. PERFORMANCE EVALUATION We use AMD XP 2500+ PC to conduct our experiments. All programs are written in Visual C-H. We use theIBM synthetic data generator[l] to generate the test data with item taxonomy[9]. The features of the generated data sets are: 5000 leaf items, 10,000 transactions, IO items per transaction on average, 4 items per frequent itemset on average, 5 fanouts, IO roots. We add a new root to be the parent of all the roots generated by [I]. We use the same method as in [ I l l  to model the profit distribution. 10% of items have low profit range between $0.1 and $1, 80% of items have the medium profit range between $ I  and $5, and 10% of items have ?the high profit range between $5 and $10.

Figure 1 shows the runtime (in seconds) of gMPIS when different numbers of generalized items are selected. Figure 2 shows the profitability of gMPIS when different numbers of generalized items are selected. Here profitability is the ratio of estimated profit of a selection to the total profit of all transactions. Figure 3 shows the run time of gMPIS when only the number of.leaf items changes and keep the selected generalized items number half of the total generalized items number. Figure 4 describes the,run time of gMPIS when only the transactions number changes and keep the selected generalized items number as 500.

_. .. . 1 .m Fig.1 3 0 7 Fig.4 In Fig. I ,  when selected generalized items number is 200, the run time is only 28 seconds and attains maximal value. In Fig. 2, the profitability of the selection of 100 generalized items is 70.9% and when 300 generalized items are selected,  the profitability will be 93.6%. In Fig. 3, when the number of leaf items increases up to 11000, the run time is only 30 seconds. In Fig. 4, the run time increases linearly as the transaction number increases. When the transaction number is 26000, the run time is only 56 seconds. Experiments show that gMPIS is highly efficient and effective. It is fast and can find items with high profitability and also is scalable to data sets with large number of items and transactions.



VI. CONCLUSION In this paper, we propose an algorithm to select most profitable items based on historical transaction data sets. Our algorithm uses generalized items and models cross-selling effects as generalized loss rules. The generalized loss rules model customers' purchase behaviors well. We apply a heuristic algorithm to speed the calculation of the confidence of generalized loss rules and record the optimal selection at each step, thus make the selection fast and easy controlled by users. Experiments show that gMPIS is highly efficient and effective. It is fast and can find items with high profitability and also is scalable to large data sets.

[Z] M e s h  Agrawal, Tomasz Imilienski, and A N ~  Swami, "Mining association N I ~ S  between sets of i t em in large databaSes,l' in Pmc. of ACM-SIC Int? Con/ on Manogemen1 of Dolo, 1993.

m e s h  Agrawal, and Ramakrishnan Srikant, "Fast algorithms for mining assmiation rules," in Pmc. of :he 20th Inl'l Con/ on Very Lowe Dotaboses, 1994.

Tom Bnjs, Ban Goethals, Gilben Swinnen, Koen Vanhoof, and Geen Wets, "A data mining framework for optimal product selection in retail supermarket data: The generalized profset model," in Pmc. ofACM-SIC in1 ' I  con/ on knowledge discovery and doto mining, 2000.

Tom Brijs, Gilben Swimen, Koen Vanhoof, and Geetl Wets, "Using associalion rules for pmduct assonment decisions: A case shldy," in Pmc.

ofACM-SIG in1 ' I  con/ on knowledge discovery and dam mining, 1999.

[6] Jiawei Hm, Jim Pei, and Yiwen Yin, "Mining frequent panems without candidate generation," in Pmc. of ACA4-SIG IM'I Con/ on Monogemen1 of Dolo, 2000.

[7] Jon M. Kleinberg, "Authoritative sources in a hyperlinked environment," In Pme ACM-SlAMSy". on Discme Algorithms, 1998.

[3] [SI [8] Jon Kleinberg, Christos Papadimitnou, and Prabhakar Raghavan, "A microeconomic view of data mining," Dolo Mining and Knowledge Dlreovery, vol. 2, 1998.

[9] Ramakrishnan Srikant, and Rakesh Agrawal, "Mining Generalized Association Rules", in Pmc. of the ZlsI Inl? Confir" on Very L q e Dotobases, 1995.

[ I O ]  Raymond Chi-Wing Wong, Ada Wai-Chee Fu, and Ke Wang, "MPIS: Maximal-profit item selection with cross-sellinp considerations". in Pmc.

ofIEEE Inl? Con/ on Dora Mifling, 2003.

[Ill Ke Wang, and Ming-Yen Thomas Su, "Item selection by "hub-authority" profit ranking," in Pmc. of ACM-SIC in17 con/ on howledge discovery and dolo mining, 2002.

