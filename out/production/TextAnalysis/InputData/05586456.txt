Genetic Network Programming with Estimation of Distribution Algorithms for Class Association rule Mining in Traffic Prediction

Abstract? As an extension of Genetic Algorithm (GA) and Genetic Programming (GP), a new approach named Genetic Network Programming (GNP) has been proposed in the evo- lutionary computation field. GNP uses multiple reusable nodes to construct directed-graph structures to represent its solutions.

Recently, many research has clarified that GNP can work well in data mining area. In this paper, a novel evolutionary paradigm named GNP with Estimation of Distribution Algorithms (GNP- EDAs) is proposed and used to solve traffic prediction problems using class association rule mining. In GNP-EDAs, a prob- abilistic model is constructed by estimating the probability distribution from the selected elite individuals of the previous generation to replace the conventional genetic operators, such as crossover and mutation. The probabilistic model is capable of enhancing the evolution to achieve the ultimate objective.

In this paper, two methods are proposed based on extracting the probabilistic information on the node connections and node transitions of GNP-EDAs to construct the probabilistic model. A comparative study of the proposed paradigm and the conventional GNP is made to solve the traffic prediction problems using class association rule mining. The simulation results showed that GNP-EDAs can extract the class association rules more effectively, when the number of the candidate class association rules increases. And the classification accuracy of the proposed method shows good results in traffic prediction systems.



I. INTRODUCTION  As an significant part of Intelligent Transportation System (ITS), traffic prediction system is capable of helping cities maximize their existing infrastructure to avoid the traffic congestion. Reliable analysis of the historical traffic data is an important part for traffic prediction system. Therefore, data mining is capable of analyzing the real-time traffic data to predict the traffic flow.

As one of the most popular data mining techniques, association rule mining has been proposed by Agrawal et al. in 1993 [1], which aims to discover association relation- ships among a set of attributes in a database. The form of association rules is represented as ?X ? Y ?, which denotes that if antecedent part X is satisfied, then, consequent part Y will occur. As an extension, Liu. et al. have proposed a method to integrate the classification and association rule mining, in which the consequent part is restricted to a single classification class attribute [2]. In order to discover class association rules, using evolutionary computation algorithms is effective to establish the space of candidate solutions and  The authors are with the Graduate School of Information, Production and Systems, Waseda University, Japan. (phone/fax: +81-93-692-5261; email: sennou@asagi.waseda.jp, mabu@aoni.waseda.jp, zhy836@toki.waseda.jp, k.shimada@aoni.waseda.jp and hirasawa@waseda.jp).

perform a global search. J. H. Holland proposed two kinds of methods, Pittsburgh approach and Michigan approach based on Genetic Algorithm (GA) to deal with data mining problems [3]. However, Michigan approach represents an entire rule as an individual and Pittsburgh approach repre- sents an entire rule a part of an individual, which hardly give a complete picture of the underlying relationships in data. Therefore, it is not easy to extract enough number of association rules. Genetic Programming (GP) [4], [5], which evolves individuals as tree structures, enables a more explicit representation of candidate rules. Nevertheless, when dealing with dynamic problems, it may suffer from the problem of the loose structure and bloating.

As an extension of GA and GP, a new evolutionary computation named Genetic Network Programming (GNP) [6], [7], [8] has been proposed recently. GNP uses directed- graph structures to represent its solutions, which is capable of dealing with dynamic environments efficiently and ef- fectively. The fixed number of nodes is used to build the directed-graph structures which can avoid the bloating prob- lem compared with GP. Moreover, a GNP-based association rule mining method [9] has been proposed for solving the traffic prediction problems, in which GNP is used as a tool to extract candidate association rules. The method can handle the databases to extract the time-related association rules, which can tell not only what events happen together, but also at what time the event will occur.

However, as many other evolutionary computation tech- niques, GNP adopts crossover and mutation to generate the offspring and the major drawback of GNP is the heavy com- putation required. The interrelations called building blocks are kept implicitly between the different nodes in the indi- viduals of GNP. Generally speaking, reproducing the building blocks is a very powerful principle to solve the decomposable problems [10]. But, the crossover and mutation work just like a kind of random operators to explore the search space, which might decompose the building blocks implicitly saved in the individuals of GNP. One possible way for overcoming this problem is to prevent the breakage of building blocks to reduce the production of invalid individuals. Therefore, in this paper, a novel evolutionary paradigm named GNP with Estimation of Distribution Algorithms (GNP-EDAs) has been proposed to improve the efficiency for generating valid offspring, which combines GNP and EDAs [11], [12], [13] to avoid the break down of building blocks and improve the efficiency of evolution.

EDAs are population-based probabilistic search algorithms     which use a probabilistic model for promising solutions to guide further exploration of the search space. Some researchers have applied EDAs to GA [11], [12], [13] and GP [14], [15] to improve the efficiency of evolution. These algorithms use GA?s binary structure or GP?s tree structure to represent the chromosome of EDAs, which inherit the disadvantages of GA or GP such as low expression ability or bloating, respectively.

Based on the principle of EDAs, GNP-EDAs generalizes conventional GNP by replacing the genetic operators such as crossover and mutation with learning and sampling from the probability distribution which is estimated from selected elite individuals in the previous generations. Comparing with GA based EDAs and GP based EDAs, GNP-EDAs has higher expression ability when dealing with dynamic environments and avoid the bloating problem to some extent. Two methods are proposed for building the effective probabilistic model of GNP-EDAs in this paper. A comparative study of the proposed paradigm and the conventional GNP is made to solve the traffic prediction problems using class association rule mining. The features of the proposed paradigm are as follows: the relationships between the attributes of given databases can be explicitly and effectively captured and exploited, and the prediction accuracy shows that GNP-EDAs can work well in traffic prediction problems.

In the next section, GNP is briefly reviewed. The proposed paradigm is described in section III. In section IV, GNP- EDAs is adopted to discover the class association rules to solve traffic prediction problems. Section V presents the simulation results using a simple traffic simulator, and the efficiency of rule extraction and accuracy of traffic prediction are compared with the conventional GNP-based class asso- ciation rule mining. Finally, section VI presents conclusions.



II. GENETIC NETWORK PROGRAMMING (GNP)  A. Basic Structure  GNP [6], [7], [8] is a graph-based evolutionary algorithm, which is composed of a number of nodes. Like other evo- lutionary computation algorithms, GNP is trained to evolve the population of candidate solutions. Generally, one start node, fixed number of judgment nodes and processing nodes compose the structure of GNP. The transition starts from the start node, and each judgment node which works as ?if- then? type decision making functions judges the information from environments to make a decision and transit to the next node. Processing nodes preserve the action functions to determine the actions. Each judgment node has multiple branches connecting to different nodes, while processing nodes have no conditional branch.

As shown in Fig. 1, GNP can be illustrated by its phenotype expression and genotype expression. Phenotype expression shows the directed graph structure of GNP, while genotype expression demonstrates the encoding of GNP. As shown in Fig. 1, let i represent a node number of GNP. Ki defines the type of node i such as start node, judgment node and processing node. IDi identifies the node function, such  P  S  JT  J  J  P  J  J  J  P T T  i  S  P  J  i K  i ID  i t  1i C  1i t  2i C  2i t ... inC int  P  J  P  J  Fig. 1. Basic structure of GNP  as judgment function and processing function. Cin denotes the node which is directly connected from the nth branch of node i. ti and tin are the delay time, which are the time required to execute the processing of node i and time to transit from node i to node Cin, respectively.

B. Genetic Operators of GNP  In GNP, three kinds of genetic operators are used: selec- tion, crossover and mutation. Such kinds of genetic operators are similar to other evolutionary computation algorithms.

These three kinds of genetic operators are used to generate offspring. Any kind of selection strategies could be used in GNP such as elite selection and tournament selection, etc.

Generally, crossover operator is executed between two parents to generate two offspring. As an example shown in Fig. 2, each node of the parent individuals is selected as a crossover node with the probability of Pc. Two parents  P  S  JT  J  J  P  J  J  J  P  P  S  JT  J  J  P  J  J  P  P  P  S  JT  J  J  P  J  J  J  P  P  S  JT  J  J  P  J  J  P  P  Fig. 2. Crossover of GNP    exchange the genes of the corresponding crossover nodes to generate the new individuals of the next generation.

Mutation operator is executed to one individual by select- ing nodes with mutation rate Pm. Generally, two kinds of mutation are used in GNP to randomly change the functions of mutation nodes or connections of mutation nodes to generate offspring.

C. Evolution of GNP  In GNP, the first population is generated at random.

From the current population, a set of elite individuals is selected. Any selection strategy can be used in GNP. The new population is generated using crossover operator and mutation operator. The pseudo-code of GNP can be found in Algorithm 1.

Algorithm 1 Genetic Network Programming (GNP) 1: t? 0  randomly generate the initial population S(t) 2: evaluate the fitness of the initial population 3: execute selection operator to select a set of elite individ-  uals B(t) 4: execute crossover operator and mutation operator to  individuals and generate the new population S(t + 1) 5: evaluate the fitness of new population S(t + 1)  set t? t + 1 6: if the termination criteria are not met, go to 3

III. GENETIC NETWORK PROGRAMMING WITH ESTIMATION OF DISTRIBUTION ALGORITHMS  (GNP-EDAS)  This section introduces a novel evolutionary paradigm named GNP-EDAs that combines GNP and EDAs. In GNP- EDAs, a probabilistic model is constructed by estimating the distribution of promising individuals to replace the conven- tional genetic operators such as crossover and mutation. The objective of building the probabilistic model is to generate the population to increase the efficiency of problem-solving by learning from the current good individuals.

A. Basic Idea of GNP-EDAs  GNP-EDAs use the same directed graph structure as the conventional GNP shown in Fig. 1. One start node, several judgment nodes and processing nodes are used to construct the structure of GNP-EDAs. In addition to the selection operator of the conventional GNP, GNP-EDAs estimates the connection probabilities between different nodes to construct a probabilistic model and generate the new population.

The probabilistic model replaces the crossover operator and mutation operator of the conventional GNP.

In GNP-EDAs, the initial population is generated ran- domly. From the current population, a set of promising individuals is selected. Based on the selected promising in- dividuals, a probabilistic model is constructed by estimating the distribution of connection probabilities between different nodes of the promising individuals. The new population is  generated using the probabilistic model. The pseudo-code of GNP-EDAs is shown in Algorithm 2.

Algorithm 2 Genetic Network Programming with Estimation of Distribution Algorithms (GNP-EDAs)  1: t? 0 randomly generate the initial population S(t)  2: evaluate the fitness of the initial population 3: execute selection operator to select a set of better indi-  viduals B(t) 4: construct a probabilistic model P t from B(t) 5: generate the new population S(t + 1) using the proba-  bilistic model P t  6: evaluate the fitness of new population S(t + 1) set t? t + 1  7: if the termination criteria are not met, go to 3  The following subsections describe the details on the algorithms for the probabilistic model construction and its use for generating new population, which corresponds to step 4 and 5 in the pseudo-code of GNP-EDAs.

B. Construction of Probabilistic Model  In this subsection, the details of the construction of the probabilistic model are described. The connection probabil- ities between different nodes are considered to construct the probabilistic model. In the tth generation, P t denotes the probabilistic model, and P t(i, k, j) represents the connection probability from the kth branch of node i to node j. The probabilistic model P t is composed of a set of P t(i, k, j).

All the values of these connection probabilities are saved in a probability table. Fig. 3 shows the procedure. Two methods are proposed in this paper to construct the probabilistic model.

1) Method 1: consider connection information between different nodes: In the tth generation, Method 1 considers the connection information between different nodes to calculate the connection probability from the kth branch of node i to node j: P t(i, k, j). The equation of Method 1 is shown as follows.

P t(i, k, j) =  ? n?N  ?tn(i, k, j)? j?A(i,k)  ? n?N  ?tn(i, k, j) , (1)  where, N : set of suffixes of individuals having better fitness values.

A(i, k): set of suffixes of connected nodes from the kth bra-  nch of node i.

?tn(i, k, j): value defined by  ?tn(i, k, j) =  ???? ???  1 if the kth branch of node i in individual n is connected to node j in the tth generation,  0 otherwise.

2) Method 2: consider both connection information and transition information between different nodes: Generally, for one individual with the directed graph structure, not all    i  th k  i  j  e  ?  ?  ??  th k  ?  ?  j e  k P(i,k.1) P(i,k.j)i P(i,k.e)  .

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

Fig. 3. The construction of probabilistic model in GNP-EDAs  P  S  J  J  J  P  J  J  J  P  Fig. 4. An example of node transition in one individual  the nodes will be used to solve the problems. The node transition will be made by selecting necessary nodes. Fig.

4 shows an example of the node transition. In this example, the nodes is transited like P1 ? J1 ? J3 ? J4 ? P3 to solve the problems, which means the information on the connections between these transited nodes are useful for solving the problems, while it is unknown whether other nodes are useful or not.

Therefore, in Method 2, the transition information is also considered to construct the probabilistic model. For a connection from the kth branch of node i to node j, the more frequently the node transition happens in this connection, the more useful this connection is, comparing with the other connections from the kth branch of node i. The probabilistic model construction by Method 2 is shown in Equation (2).

P t(i, k, j) =  ? n?N  (?tn(i, k, j) + ?? t n(i, k, j))?  j?A(i,k)  ? n?N  (?tn(i, k, j) + ??tn(i, k, j)) , (2)  where, ?: coefficient.

?tn(i, k, j): value defined by  ?tn(i, k, j) = ? if the transition from the kth branch of node i to node j in individual n occurs ? times in the tth generation.

In these two methods, after the selection step in Algorithm 2, GNP-EDAs studies the structures of the elite individuals.

The connection probabilities between different nodes of the elite individuals could be calculated. Besides, the following exponential smoothing method is considered to update the current probabilistic model considering the previous proba- bilistic model.

P (i, k, j)? (1? ?)P (i, k, j) + ?P t(i, k, j), (3)  Here, the coefficient ? can be considered as a smoothing rate and ? ? (0, 1).

C. Generation of New Population  In this subsection, the generation of new population using the constructed probabilistic model is described.

Since the number of nodes and the number of branches of each node are predefined and fixed, it is easy to generate a new individual by sampling from the probabilistic model.

The detailed description of the algorithm for generating a new individual is shown in Algorithm 3.

Algorithm 3 Generation of a new individual in GNP-EDAs 1: set all branches of all nodes as unprocessed  i? 0, k ? 0 2: decide node j which is connected from the kth branch  of node i with probability P (i, k, j) 3: k ? k + 1  if there are unprocessed branches left in node i, go to 2, otherwise go to 4  4: i? i + 1 if there are unprocessed nodes left, go to 2, otherwise end the generation of a new individual

IV. GNP-EDAS FOR CLASS ASSOCIATION RULE MINING IN TRAFFIC PREDICTION  The class association rule mining based on GNP has been proposed and its effectiveness and accuracy have been proved in some previous research[9], [16], [17]. The way of using GNP in class association rule mining is to extract the rules existed in the individuals. The rule extraction is done generation by generation. Since GNP-EDAs are the extension of the conventional GNP, GNP-EDAs can be applied to class association rule mining for solving traffic prediction prob- lems. The following subsections briefly introduces the class association rule mining used in traffic prediction problems.

A more complete description could be found in the cited papers. Furthermore, the way of using GNP-EDAs in class association rule mining is also emphasized.

TABLE I  AN EXAMPLE OF THE TRAFFIC DATABASE  Ai Aj Time Low Mid High Low Mid High 0001 0 1 0 1 0 0 0002 0 1 0 0 1 0 0003 0 0 1 0 0 1 0004 1 0 0 1 0 0 0005 0 1 0 0 0 1  A. Time-related Class Association Rules for Traffic Predic- tion  Table I shows an example of the traffic database. The traffic flow of each road section of the traffic network is classified as three cases: Low, Middle or High. At each time point, only one case of the traffic flow in the section could happen. Therefore, the form of attributes saved in the traffic database can be denoted like Ai(?), where Ai represents a road section of the traffic database and ? represents the case of traffic flow, i.e., Low, Middle or High. The structure of time-related class association rules for traffic prediction is as follows:  (Ai(?)(t=ta)=1)? ...?(Aj(?)(t=tb)=1)?(Ac(?)(t=tc)=1).

Here, ta, tb and tc are the time points which satisfy the condition: ta ? ... ? tb ? tc. Meanwhile, the first time ta always equals to 0, so, tb ? ta represents the time delay between Ai(?) and Aj(?). Such kind of time-related class association rules can express the relationships between different attributes with time points, which could be used to predict the traffic flow. For example, (A1(Low)(t = 0) = 1) ? (A2(Mid)(t = 2) = 1) ? (A3(High)(t = 8) = 1) means if A1 is Low at time 0 and A2 is Mid at time 2, then at time 8, A3 is High.

B. Rule Extraction  The basic structure and concepts of GNP-EDAs based class association rule mining are almost the same as the conventional GNP. In class association rule mining, the functions of judgment node and processing node are defined as follows.

1) Judgment Node: The judgment nodes represent the attributes of the traffic database. Therefore, each judgment node function is regarded as one attribute of the database.

2) Processing node: The processing nodes are used to calculate the measures of class association rules.

Class association rules are represented as the connections of judgment nodes. In this paper, support, confidence and ?2 measures are used to define the significance of class association rules. Candidate rules that satisfy a minimum support threshold, a minimum confidence threshold and a minimum ?2 threshold can be extracted in each individual generation by generation.

Extraction Mechanism at Stages (EMS) [18] are used, in order to extract the rules of all of the sections in the traffic database. For each consequent attribute Ac(?), a fixed number of class association rules are extracted in order to  obtain high classification accuracy. Nf denotes the fixed number of rules. Furthermore, in order to deal with a large number of attributes, Attribute Accumulation Mechanism (AAM) are also used to choose a small attribute set which is used to do the rule extraction and is accumulated round by round. The detail description of AAM can be found in [9].

Meanwhile, since it might occur that there does not exist an enough number of rules for all the consequent attributes at the fixed threshold setting, self-adaptive criteria are used to adjust the thresholds of support, confidence and ?2, which work like this: if any new rule cannot be extracted during the recent generations, the significance level of important rules will decrease using the following equation.

Measuremin ?Measuremin ? s, (4)  here, Measure denotes support, confidence and ?2 which are used in this paper. Furthermore, s belonging to (0,1) represents the step size of the decrease for the threshold of support, confidence and ?2.

C. Fitness Function  Depending on the importance, complexity, novelty and diversity of class association rules which are implicitly saved in the individuals, the fitness function is defined as follows.

F = ? r?R  {?2(r) + 10(na(r) ? 1) + ?new(r) + ?multi(r)}, (5)  where, R: set of suffixes of extracted important class association  rules in the individuals of GNP-EDAs.

?2(r): ?2 value of rule r.

na(r): the number of attributes in the antecedent part of  rule r.

?new(r): additional constant defined by  ?new(r) = {  ?new if r is a new rule, 0 otherwise.

?multi(r): additional constant defined by  ?multi(r) =  ?? ?  ?multi if rule r has more than ? kinds of attributes,  0 otherwise.

here, the constant ? is the threshold to define the number of attributes of multiple rules.

D. Construction of Probabilistic Model  In class association rule mining, the connections of judg- ment nodes are represented as class association rules [9], [16]. Therefore, the probabilistic model is constructed based on the learning of the connection information between the judgment nodes. The connection information of processing nodes do not have to be considered. The connection prob- abilities between different judgment nodes are calculated to construct the probabilistic model. Method 1 and Method 2 can be directly used for the construction of probabilistic model.

E. Evolution of GNP-EDAs in class association rule mining  The evolutionary algorithm of GNP-EDAs in class associ- ation rule mining is the same as shown in Algorithm 2, where class association rules are extracted from the population of GNP-EDAs in each generation. The evolutionary algorithm will be executed generation by generation until enough number of class association rules are discovered.

F. Classification  After the rule extraction, the obtained time-related class association rules are used to build a classifier which classifies the testing traffic data to predict the traffic flow.

The time difference between the last attribute of the an- tecedent part and the consequent attribute is called Prediction Span (PS). In order to predict the traffic flow of road section Ac of L time points later, which is called L-step prediction, the rules whose PS is equal or larger than L (PS ? L) are selected to do the classification.

Let k denote a class of the consequent attribute, i.e., k ? {Low,Mid,High}. Rk is the set of suffixes of the rules in class k which satisfy PS ? L and whose antecedent attributes match with the testing traffic data. Numk denotes the number of rules in class k, which satisfy PS ? L. The average matching degree of data d with the rules in class k, i.e., Matchk(d) is calculated as follows.

Matchk(d) =  ? r?Rk  Confidence(r)  Numk , (6)  The values of Matchk(d) of three classes are compared, where the class with the highest value of Matchk(d) is the classification result.



V. SIMULATIONS  A comparative study of the proposed algorithm and the conventional GNP is made to solve the traffic prediction problems using class association rule mining in this section.

The efficiency of rule extraction and the accuracy of traffic prediction are also shown.

A. Simple Traffic Simulator  A simple traffic simulator [9], [18] is used to simulate the traffic road in the simulations. The model simulates a 7?7 grid rectangular traffic network as shown in Fig. 5, which consists of the edge intersections in the North, South, East and West. The real-world traffic situations, such as traffic lights, traffic jams, speed of cars etc., are all considered in the traffic simulator. Using the simulator, the traffic databases are generated for the simulations. Table II shows an example.

W1N1,W2N1 represents a section of the road network, and the average traffic flow of each section is discretized to Low, Mid or High. In the road map, there are 112 sections.

Furthermore, considering the two directions of each section and 3 kinds of traffic flow of each section, there are total 112? 2? 3 = 672 attributes including classes in the traffic database.

#W1  #W2  #W3  #W4  #W5  #W6  #W7  #E1  #E2  #E3  #E4  #E5  #E6  #E7  #N1 #N2 #N3 #N4 #N5 #N6 #N7  #S1 #S2 #S3 #S4 #S5 #S6 #S7  This model is 7*7 grid network;  : represent section: represent intersection  Fig. 5. A simple road map model  TABLE II  THE TRAFFIC DATABASE GENERATED BY THE SIMULATOR  Time W1N1,W2N1 W1N1,W2N1 W1N1,W2N1 Low Mid High  0001 0 1 0 0002 0 1 0 0003 0 0 1 0004 1 0 0  B. Parameter Setting  The parameters of the simulations are set as shown in Table III. In the simulations, the conventional GNP uses four kinds of genetic operators to evolve the individuals: uniform crossover, mutation for functions, mutation for connections and mutation for time delays of judgment nodes [9], while a probabilistic model is adopted to evolve the individuals in the proposed algorithm. In the conventional GNP, the probabilities of crossover and mutation are set to achieve the best results. In the proposed paradigm, Method 1 construct the probabilistic model using the connection information, while coefficient ? should be used in Method 2 for con- sidering the transition information. In the databases used in the simulations, we studied that there occur around 200 transitions for the connection between two judgment nodes.

Therefore, we set the coefficient ? at 1/50, 1/200 and 1/300 to study Method 2. And the smoothing coefficient ? in Equation (3) is set at 0.1 in order to update the current connection probability by considering the previous connection probabil- ities. Furthermore, the thresholds of support, confidence and ?2 are set at 0.03, 0.9 and 6.63, respectively, based on many trials.

C. Simulation results and analysis  1) Rule Extraction: In order to study the efficiency of the proposed method, 4 traffic databases generated by the simulator are used to extract the class association rules.

As mentioned earlier, self-adaptive criteria are adopted in order to extract enough rules for all sections of the traffic network. Three simulations are carried out, where the               0  500  1000  1500  2000  2500  3000  N um  be r  of e  xt ra  ct ed  c la  ss a  ss oc  ia tio  n ru  le s  Round  GNP GNP-EDAs Method 1  GNP-EDAs Method 2 ?=50 GNP-EDAs Method 2 ?=200 GNP-EDAs Method 2 ?=300  (a) simulation 1: s=0.9             0  500  1000  1500  2000  2500  3000  N um  be r  of e  xt ra  ct ed  c la  ss a  ss oc  ia tio  n ru  le s  Round  GNP GNP-EDAs Method 1  GNP-EDAs Method 2 ?=50 GNP-EDAs Method 2 ?=200 GNP-EDAs Method 2 ?=300  (b) simulation 2: s=0.85             0  500  1000  1500  2000  2500  3000  N um  be r  of e  xt ra  ct ed  c la  ss a  ss oc  ia tio  n ru  le s  Round  GNP GNP-EDAs Method 1  GNP-EDAs Method 2 ?=50 GNP-EDAs Method 2 ?=200 GNP-EDAs Method 2 ?=300  (c) simulation 3: s=0.8  Fig. 6. Comparison of the efficiency of rule extraction between GNP-EDAs and GNP  TABLE III  SIMULATION SETTING FOR THE EVOLUTION  Items Values  Population Size 100 Elite Individuals Size 25 Processing Nodes Size 10 Judgment Nodes Size 100 Time Units Size 800 Attribute Size including classes 672 Generation Size per Round 100 Fixed Number of Rules per Class (Nf ) 100  coefficient s of self-adaptive criteria is set at 0.9, 0.85 and 0.8, respectively.

The average number of class association rules extracted over 20 independent runs are shown in Fig. 6 for the 4 databases using the proposed method and conventional method. The results shows that when s is set at 0.9, Method 2 with ?=1/50 can get almost the same efficiency as the conventional method, but Method 1 and the others of Method 2 are a little worse. When s is set at a smaller value (i.e., 0.85 or 0.8), both Method 1 and Method 2 are much better than the conventional method.

Furthermore, it is shown that the efficiency of Method 2 is better than Method 1, which means considering both the connections and transitions between nodes can generate a more effective probabilistic model than just considering the nodes connections.

2) Classification for Traffic Prediction: After the rule extraction stage, the proposed classification mechanism is used to build a classifier for predicting the traffic flow of the simple traffic network. In order to estimate the performance of the proposed method in traffic prediction problems, 4-fold cross-validation is applied. The proposed method and con- ventional GNP are compared in the L-step traffic prediction.

The average classification accuracies for 1-step, 2-step and 3- step traffic prediction are shown in Table IV. The simulation results show that the accuracy of GNP-EDAs is almost the same as that of GNP in testing, and in most of the cases even a little better.

3) Analysis: It is easily understood that the more the value of s decreases, the easier the rules could be extracted, since the threshold of support, confidence and ?2 will  decrease more. As a result, the rules with lower significance level will be extracted, leading to the decrease of traffic prediction accuracy. We design the simulations following different settings of s. When s is set at a high value, like 0.9, it might occur that there are just a small number of candidate rules in the searching space for some consequents.

Therefore, GNP-EDAs cannot extract enough mutual interac- tion information to produce an effective probabilistic model.

However, Method 2 can still achieve the same efficiency of the conventional GNP. When the value of s decreases, the number of potential candidate rules increases. As a result, the efficiency of GNP-EDAs will be significantly improved in terms of extracting many rules by the effective probabilistic model, which leads to the better rule extraction efficiency of the proposed method than the conventional GNP.

In evolutionary algorithm based class association rule mining, the strongly related attributes (corresponding to judgment nodes in GNP and GNP-EDAs) could be viewed as building blocks, that could be recombined in the next generation. The principle why GNP and GNP-EDAs could work for finding class association rules is decomposing the problems to find strongly associated judgment nodes (build- ing blocks) and recombine them by evolution. Therefore, the simulation results of rule extraction shows that GNP-EDAs could outperform the conventional GNP when dealing with the problems with a large number of building blocks scattered in the search space, such as decomposable problems.

On the other hand, the prediction accuracy is in an acceptable range, even if the value of s decreases (i.e., the accuracy will decrease by less than 1% when s decreases from 0.9 to 0.8), but, the rule extraction efficiency of the proposed method will greatly increase comparing with the conventional GNP by reducing s. Concludingly, when s is set at a relatively small value (i.e., 0.85 or 0.8), the rule extraction efficiency of the proposed method is much better than that of the conventional GNP. Meanwhile, the accuracy of L-step traffic prediction can keep the same level as the conventional GNP. Therefore, considering the rule extraction efficiency and prediction accuracy as a whole, the proposed algorithm can provide a better trade-off between the efficiency and accuracy to solve traffic prediction problems comparing with the conventional GNP.

TABLE IV  CLASSIFICATION ACCURACY OF 4-FOLD CROSS-VALIDATION. (UNIT: %)  1-step prediction 2-step prediction 3-step prediction s=0.9 s=0.85 s=0.8 s=0.9 s=0.85 s=0.8 s=0.9 s=0.85 s=0.8  D 1 GNP 87.8 87.6 86.9 86.9 86.7 86.4 87.1 86.8 86.3  Method 1 87.9 87.3 87.1 87.2 86.5 86.4 87.3 86.4 86.0  Method 2 ? = 1/50 87.8 86.7 86.5 87.1 86.1 85.8 87.2 86.0 85.5 ? = 1/200 87.9 86.8 86.6 87.1 86.3 85.7 87.0 86.1 85.4 ? = 1/300 88.1 86.8 86.4 87.5 86.3 85.5 87.9 86.2 85.4  D 2 GNP 85.8 85.0 84.7 84.8 84.7 84.3 84.7 84.4 83.6  Method 1 85.7 85.0 84.9 85.0 84.2 84.1 85.2 84.0 83.8  Method 2 ? = 1/50 85.7 84.6 84.5 84.9 84.0 83.7 85.0 83.5 83.3 ? = 1/200 85.9 84.8 84.5 84.9 84.1 83.5 85.0 83.7 83.2 ? = 1/300 85.8 84.8 84.4 85.1 84.2 83.4 85.6 83.7 83.0  D 3 GNP 85.6 85.5 84.5 85.0 84.9 84.5 85.5 84.7 84.3  Method 1 85.8 86.3 84.8 85.1 84.5 84.3 85.5 84.6 84.1  Method 2 ? = 1/50 85.8 84.8 84.6 85.1 84.1 84.0 85.1 84.2 83.6 ? = 1/200 85.9 84.8 84.5 85.1 84.1 83.6 85.2 84.5 83.4 ? = 1/300 85.7 84.9 84.5 85.3 84.4 83.7 86.2 84.4 83.5  D 4 GNP 85.8 85.6 84.9 84.6 84.5 84.2 84.3 84.0 83.5  Method 1 85.5 85.2 85.1 84.7 84.4 84.3 84.5 83.6 83.2  Method 2 ? = 1/50 85.6 84.4 84.4 84.7 83.6 83.6 84.2 83.3 83.0 ? = 1/200 85.6 84.6 84.3 84.6 83.8 83.3 84.1 83.5 82.9 ? = 1/300 86.1 84.7 84.2 85.0 83.9 83.3 85.1 83.3 82.9

VI. CONCLUSIONS  A novel evolutionary paradigm named Genetic Network Programming with Estimation of Distribution Algorithms (GNP-EDAs) has been proposed in this paper. The pro- posed algorithm collects the mutual interaction information between nodes of individuals to construct the probabilistic model replacing the conventional crossover and mutation for the guidance of evolution. Two methods are proposed in this paper to construct an effective probabilistic model.

A comparative study of the proposed algorithm and the conventional GNP is made to solve the traffic prediction problems using class association rule mining. The advantages of using the proposed algorithm have been demonstrated through the simulations of the traffic prediction problems.

It is clarified from the simulations that the proposed algo- rithm can provide the better trade-off between efficiency and accuracy to deal with the traffic prediction problems than the conventional GNP. Since the proposed algorithm is an extension of the conventional GNP, it has high applicability to other decomposable problems in dynamic environments.

In the future, the construction of more effective probabilistic models will be studied.

