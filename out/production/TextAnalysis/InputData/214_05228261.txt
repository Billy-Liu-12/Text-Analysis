An Efficiency Filtering Algorithm for Mining Association Rules

Abstract- Filter the original data by using the item sets that the users are interested in. At the time of producing the frequent itemsets, filter the data again according to the frequent data itemsets of large one itemsets (L1) and large two itemsets (L2) .

This can reduce the data in the database. At the time of producing the rule, making use of the template matching method to mine the association rule that the users are interested in and confirm the previous item and the consequent item of the association rule, we can confirm the mining direction of the association rule. This method can be applied to the data analysis of the evaluation of the tutors. The templates matching algorithm was provided in this paper.

Index Terms-Data Mining, Frequent Itemsets, Mining Association Rules, Interestingness, Template  At the beginning of the algorithm, preprocess the original data and then filter according to the condition and the attribution of the users' interest. After the producing of the frequent itemsets of large one itemsets and large two itemsets, filter the data again on the basis of frequent itemsets L1 and Lz. This can reduce the data in the database so as to improve the scanning speed. During the process of rule producing, we can make use of the template to put the rules, in which the users are interested into the rule collection, filter the useless rules to decrease the amount of rules. Thus the generating speed of rules can be improved. This method can be applied to the data analysis of the evaluation of tutors. The templates matching algorithm was provided in this paper.



II. PROBLEM DESCRIPTION

I. INTRODUCTION  As the rapidly increasing amount of data, the users must depend on corresponding tool of data mining to find out the rule hiding in the data so as to provide support for their decision. The mining of the association rule is an important issue in data mining [1,2]. One of the most important problems is the evaluation of the degrees of interest in the mined rules. However, the interestingness of the association rule can be measured from the objective and subjective aspects.

The amount of the association rules in the data mining are so large that the users may be interested in only part of the association rules in the itemsets. Maybe most of the rules are useless to the users or the users have no interest in them, which may cause misleading results [4]. In fact, there are several definitions of interest degree of rules. In the document [5], the interest degree is defmed as follows:  RI= prob(B/ A)! prob(A)- prob(B) (1)  max(prob(B / A)! prob(A),prob(B)) This definition limits the numerical value of RI between  minus one and one. The higher above zero the numerical value is, the more interest it shows. (That is, the rule has more practical value). On the other hand, if the numerical value is below zero, it suggests that people have much more interest in the opposite rule. (i.e., the opposite rule has much value.) In the document [6], the interest's degree is defmed as follows:  PS= I A&B I -IAIIBI / N (2)  The formalized specification of the association rule [1] is as follows:  Defmition 1  Set 1= {i., iz, ...,im } is a class with signs, m is integer, ik (k=1,2 ... m) is called item.

Definition 2  To random itemsets X, if s% of the transactional database include itemsets X, then the supporting rate of itemsets X is written as support(X)=s%. Among that, the transaction including itemsets X is called the frequent itemsets X. It is written as count(X) =c. If the supporting rate of itemsets X is above or equal to the minimum supporting rate designated by the users, then itemsets X is called frequent itemsets or large itemsets. Otherwise, itemsets X is called non-frequent itemsets or small itemsets.

Defmition 3  In database D, ifs% of the transaction includes XDY, then the support of the association rule X=>Y is s%; In database D, if Y is also included in the c% transaction which include itemsets X, then the confidence is c%.

Defmition 4  Templates are expressions like AI, ... .A, =>Ak+1. A, can be an attribute name, class name or an expression C+ or C*. C is a class name. C+ means there is one or many examples in C. C* means there is none or many examples. If the rule BI,      End  c.count ++;  For all candidates c E C, do  For all transactions tED do begin  C, = subset (Ck, t); IIEach subset of candidate frequent itemsets  II New candidate frequent itemsets  Ck = apriori-gen (Lk- l ) ;  uninteresting records to achieve our goal of compression the numbers of records in the database transversely and improve the scanning speed. Secondly, owing to the decrease in the numbers of records, the support of some candidate's itemsets will surely be influenced and the result is the decrease in the numbers of frequent itemsets in which the users are not interested. Consequently, the generating speed of frequent itemsets will be greatly increased. Finally, at the time of the rule being generated, using the templates to put the rules in which the users are interested into the rule sets and filter out the useless rules, we can decrease the numbers of rules and increase the generating speed of rules.

A. The algorithm ofgenerating frequent item sets  Suppose minsupport is the minimum support, the specific description of algorithm is as follows:  CREATE VIEW the name of view  AS SELECT the attribute the user concerns FROM original table WHERE the data that the users are interested in/I put the data which that the users are interested into the view  L I = {large l-itemsets};  SELECT all attributes in LI FROM view name  WHERE the data in LI lifilter the data according to the frequent data itemsets of large one itemsets (L I )  For (k = 2; Lk- l =F cD; k++) do begin  If the user wants to put "algorithm design" in front of the rule and this rule doesn't include the "required course", they can use the following templates:  ? Compatible template: algorithm design, random course *=> random course  Neural network, operating system=>algorithm design.

By adding the exclusive template, such as:  Required course, random course *=> random course  They can exclude the association rule which includes the "required course".

... , Bm=>Bm+1 is one of the examples in template AI, ... , Ak=>Ak+I, then we can say rule BI, ... , Bm=>Bm+1 matches rule AI, ... , Ak=>Ak+ l .

For example, if the user is interested in the course "algorithm design" and expect the "algorithm design" to appear behind the association rule and the "graduate course" before the rule, we can use the following template to fmish the mining task.

Graduate course, random course *=> algorithm design  Defmition 5  If a rule matches some templates and this rule is interesting, thus the template is called compatible template.

U sing the compatible template, we can select the association rule that matches it. If only the rule that doesn't match the template might be interesting, then the template is called exclusive template. Using the exclusive template, we can filter the association rule that matches it.

For example, if we use the matching template, the formula is: graduate course, random course *=> algorithm design  Some users may not be interested in some rules they gained, they can add an exclusive template. Thus, the users can remove the association rule they are not interested in. For example: if the user is not interested in the rule of "required course" such as:  ? Exclusive template: required course, random course *=> random course  Lk = {CECk I c.counte minsupj/z Generate frequent itemsets  ? Exclusive template: random course *=> required course  Generally speaking, the interesting association rules are non-expected. To mine the interesting association rule, the first essential problem is to solve how to manage the association rules that have been mined. The template matching method can select some from the large numbers of rules as candidates and mine further directionally. This is one of the ways that the users take part in the process of mining and an important means to mine interesting association rule subjectively.



III. ALGORITHM DESCRIPTION  Basic idea of algorithm: firstly, after processing and analyzing the original data, making use of the attribute the users are interested in to select, we can filter out the useless or  IF K=2 THEN  SELECT all attributes in L2 FROM view name  WHERE the data in L2 II filter the data according to the frequent data itemsets of large two itemsets (L 2)  End  Answer = U k Lk.

B. The algorithm ofgenerating strong association rule  Lk: frequent k-itemsets, Xm: frequent m-itemsets, minconf: Minimum Confidence, Template: AI, ...,Ak=>Ak+1  (1)FO R each frequent itemset lk in L begin      num Professional Professional Have Valid score grade ber title teacher teaching votes  duties above or not 75?A.

01 senior yes yes yes 97.8 A lecturer  02 lecturer no yes yes 91.2 A 03 senior no no yes 89.5 B  lecturer 04 lecturer yes no no 94.2 A 05 lecturer no no no 82.4 B 06 lecturer yes no yes 78.9 B 07 Assistant no no no 67.9 C  lecturer .. ... ... ... ... ... ...

(2) X- {(m-1)-itemsets xm-Ilxm-l in xm}; (3) FOR each Xm-l in x begin (4) IF Xm-l =>lk-Xm-b matching template AI, ...,Ak=>Ak+1 then  begin (5) Conf=support (lk)/ support (Xm-l); (6) If (conf>=minconf) then begin (7) Generate the rule Xm-l=> (lk -Xm-l); (8) If m-1> 1 then goto (1)//generate rules with sunsets of Xm-l as antecedents (9) END (10)END (ll)END (12) END

IV. THE APPLICATION OF ALGORITHM  TABLE II. COMPREHENSIVE TABLE  The tutors play an important role in the students' daily management. At the beginning of a new semester, according to the characteristics of the different specialty, to assign appropriate tutor is of crucial importance to the university's management. On the basis of the tutors' evaluation result in recent years we can use matching templates method to mine the rule we are interested in and find out the relationship between the excellent tutors, qualified tutors and their quality.

A. Obtain data in the questionnaire  c. Filter data according to the user's interest If we are only interested in the two parts which score are  above 90 or score>=60 and score<=70, we can filter out the records by meeting the conditions so as to reduce the numbers of the itemsets. This can be described in SQL language.

SELECT (number, professional title, professional teacher, have teaching duties or not, valid votes is above 75%, score, grade) FROM table name WHERE score> 90 OR score<=70 AND score >= 60  D. Generate the frequent itemsets The scores of the tutors got from each class are the  average value. Analyze it and get the data in table I . TABLE III. FREQUENT ITEMSETS  Actually, the result of the evaluation mostly depends on the quality of the tutor. Therefore, we expand the table into a comprehensive table II .

number Valid votes Invalid votes score 2rade 01 98% 2% 97.85 A 02 100% 0 91.2 A 03 98% 2% 89.5 B 04 20% 80% 94.2 A 05 40% 60% 82.4 B 06 90% 10% 78.9 B 07 69% 31% 67.9 C ... ... ... ... ...

As a general rule, the tutor whose score is above 90 is regarded as excellent teacher, but we can not neglect the interesting phenomena in table 1. Number 4 can be regarded as excellent teacher from his score. However, this does not represent most of the students' willingness. For most of the students' votes are invalid votes. People must be interested in this phenomena and want to know the reason why are there so many invalid votes. So we can put emphasis on this class.

B. Process the data  TABLE!. POINTS TABLE valid votes are above 75%,grade is A,professional title=senior lecturer",professional teacher=" yes",having teaching duties =" yes", grade is C, valid votes are above 75% AND grade is A, having teaching duties =" yes" AND grade is A, professional title="senior lecturer" AND having teaching duties=" yes", professional teacher=" yes"AND grade is A AND valid votes are above 75%, valid votes are above 75% AND grade is A AND professional title="senior lecturer" AND having teaching duties=" yes"  E. Definite the template  Suppose all the attributes in the table can be replace with the random attributes in the table and we are only interested in the rule that the valid votes are above 75% and the grade is A, then we can make use of the compatible template:  Valid votes above 75%, random attribute in the table=> grade ="A".

Or use the Exclusive template:  The random attribute in the table=> grade="B"  The random attribute in the table=> grade="C"  Here we are only interested in the data that the grade is A and the valid votes are above 75%. The relation between the data and the value of other attributes helps to determine the requirements for a tutor. Using the compatible template:      professional teacher ="yes"=>grade ="A", Valid votes are above 75%  professional title = senior lecturer, having teaching duties ="yes"=>grade ="A",Valid votes are above 75%  The random attribute=>grade is A and the valid votes are above 75% (templates 1)  F. Mine rules by using the compatible template  Suppose the minimum support is 36%, the rrummum confidence is 60%, we can use the frequent itemsets produced previously to generate the rule. If it matches templates 1, then put it into the rule set. Otherwise filter it out to avoid many useless rules.



V. PERFORMANCE COMPARISON TABLE  Improved algorithm filters data that the users are not interested in. consequently, the generating speed of frequent itemsets will be greatly increased. At the time of the rule being generated, the templates are used to filter out the useless rules. We can decrease the numbers of rules and increase the generating speed. Experimental data is shown in the table V. From the table we can see the algorithm greatly improves efficiency.



VI. SUMMARY  The algorithm of the association rule mining is to mine the association rule from a great deal of data. At the beginning, analytically process the original data and filter according to the attributes in which the users are interested. This filters out the useless records or the records that the users are not interested in to cut down the records in the database so as to improve the scanning speed. At the time of producing the rule, we can make use of the template to confirm the previous item and the consequent item. This helps to avoid a lot of useless rules to the users and determine the mining direction of the association rule. This method can be applied to the data analysis of the evaluation of tutors. The templates matching algorithm was provided in this paper.

