A Typical Operation Sequence Discovery Algorithm  Based on Association Rule

Abstract?With the deep application of Computer Aided Process Planning, a wealth of process data has been accumulated in the manufacturing enterprises. To capture the inheritable experience and knowledge about the process planning from the data, the association rule is applied to discovery the typical operation sequence (TOS). An association rule model mining the TOS was built. In the model, a process route was a transaction, and an operation was an item. Therefore, the operation sequence was the subset of items and transactions. Each TOS was regarded as a rule. Based on the model, an improved Apriori algorithm was presented to mine the TOS. The algorithm includes six steps: 1) generating frequent operation set; 2) the join step: generating the frequent operation sequence candidate set; 3) the prune step: reducing operation sequence in the frequent operation sequence candidate set; 4) calculating the support of every operation sequence; 5) generating frequent operation sequence set; 6) terminating the algorithm and obtaining the TOS. Finally, an example mining the TOS was analyzed. The analysis result explains that the algorithm is effectively applied to discovering the TOS.

Keywords-Computer Aided Process Planning (CAPP); Typical operation sequence (TOS); Association rule Knowledge Discovery in Database (KDD); Apriori algorithm

I.  INTRODUCTION A process planner planning the process for a new part  generally consults the former plan and hardly any process plan is generated without the former experience. The knowledge and experience that process planners have held is very important to the quality of the process planning. As the complexity of products increases, the complexity of process plans increases. The reuse of process knowledge becomes more and more important to ensure the quality and efficiency of process plan. The manufacturing enterprises urgently need the process knowledge to adapt them to the market competition. The knowledge and experience that process planners have held is hard to fetch in their head. How to obtain a mass of effective knowledge is the key issue.

Now, all the current CAPP (Computer Aided Process Planning) systems in China have the function to draw up the technological procedure by the computer. The papery technological procedure is replaced with the spreadsheet in the big manufacturing enterprises. For the deeper application of  CAPP system, a wealth of process data has been accumulated in the enterprises? database in which the planners? intelligence and experience are hidden. The process database becomes the new source of process knowledge. Moreover, the process database has the advantage of the universal data structure. It is of great benefit to finding and structuring process knowledge in such a way that it can be used in an intelligent computer tool.

There is the similarity between two process routes included in the process plan [1]. The partial similarity can be shown as the operation sequence. The similar operation sequence is also the experience of process planning. It will spend a lot of the material resource, the financial resource, the manpower resource and the time in summarizing the typical operation sequence (TOS) for there is quite a large number of process data waiting for dealing. Further more, TOS obtained by hand is hard to be represented by structural data so that the process knowledge can barely be updated, expanded and reused. Data mining is a method by analyzing the great deal of dada to obtain the knowledge. It make possible obtain the process knowledge automatically in the process database by computer. Association rule is very important in data mining field [2]. It can reflect the correlative dependence and relevancy. This paper discusses the method of mining TOS based on Association rule and the Apriori algorithm.



II. TOS DISCOVERY THEORY If values between two or many variable has some kind of  regularity, it is called association [3]. If two or between the many things has certain incidence relation, that, a thing can be forecast through other things. The operation sequence is the seriate operations, that is, the operations? orderly relevancy.

For example, in the process route of the revolution part, the operation of rough turning external cylinder and end surface usually is arranged behind the operation of baiting. That is a kind of operations? orderly relevancy. An operation?s position in the process route can be forecast through other one.

Therefore, TOS discovery is discovering a kind of association rule in essence. So association rule can be applied in discovering TOS.

There are three steps of discovering TOS shown as Fig.1.

First one is cleaning up the process data. The process data accumulated in the process of CAPP system application  2007AA04Z187(National Hi-tech Research and Development Program of P.R. China) and 2008K05-08 (Science & Technology Development Program of  Shaanxi Province, P.R.China)     inevitably include the nonstandard, redundant, incomplete data. To ensure the quality of the process data and fully utilize the usable data, cleaning up the process data must be done before mining process knowledge. Usually, process data extraction, launder and transform are required to obtain the eligible data set. Second one is mining the typical process sequence. The typical process sequence can be mined in optimized process route database by the mining algorithm of associate rule. Third one is analyzing the operation content.

The process sequence consists of the appropriate order operations. An operation includes some features. Thereby, the operation content analysis is to get the machining features that are corresponded with TOS. At last, TOS is saved with the machining feature information in database. Once TOS is used to plan the process, the new process route could be planned referring to TOS.

Figure 1.   The process of TOS discovery

III. APRIORI ALGORITHM FOR TOS DISCOVERY Apriori algorithm is the one of classical mining algorithms  among association rule [4]. It need search the whole database many times. Its core is the recurrence method based on frequent itemsets properties, i.e. using k-itemsets to explore (k+1)-itemsets. I is a set of items. A is a set of items, too, and A ? I. If the support count of A is not less than the support count given by the user, A is called frequent itemsets. For the process data is abundant, this paper adopts the way of decreasing the number of candidate itemsets and the record count that be covered to calculate the support count of candidate itemsets [5] in order to reduce the calculation that process route transaction set T support frequent itemset Ck and consequently improve the algorithm?s efficiency.

A. Association Rule model for operation sequences For mining TOS, Let the transaction set { }ntttT ,,, 21 L=  be a set of the process routes. ti (1?i?n) called data item is the data of every transaction. A process route is a data item.

Let the data item set { }miiiI ,,, 21 L=  be a set of all data in T.

It is the set of the operations existing in every process route.

The member ij (1?j?m) represents an operation. In the model of association rule, every transaction contains a subset of I, which is accordant with that every process route contains an operation sequence at least, for the operation sequence is a subset of the set I. An association rule is an implication of the form BA? , where IBIA ?? , , and ?=? BA [4]. The support of the itemset A is the percentage of transactions containing A in T.  The support of BA?  in the form  ( )BAsupport ?   is the percentage of transactions in T that contain BA ?  [4]. The support of the operation sequence can be measured by the support count because it equals to divide the support count by the transaction count. The confidence of  BA?  in the form Confidence )( BA?  is the percentage of transactions in T containing A that also contain B [4]. That is,  Confidence )( BA? = ( )BAsupport ? / ( )Asupport If both the support and the confidence satisfy respective threshold, the rule BA? can be defined as a significative rule.

In a word, mining TOS based on Apriori algorithm just is obtaining the significative operation sequence in the process route database that both the minimum support threshold and the minimum confidence threshold are satisfied.

B. Steps of applying the Apriori algorithm to mining TOS According to the Apriori property [4], every non-null  subset of the frequent operation sequence must also be frequent and If the superset of the unfrequent operation sequence set must be not frequent. The steps of applying the Apriori algorithm to mining TOS are followed.

1) Generate the frequent operation set L1 Scan the data transactions set T and calculate the support  of each 1-itemset, i.e. scan the process route set and calculate the support of each operation to generate the frequent operations set.

2) Join step: create the frequent operation sequence candidate set Ck  The frequent candidate set Ck is a set of the frequent operation sequence candidates, in which the number of the operation equals to k. The frequent k-itemsets Lk is a set of the frequent operation sequences, in which the number of the operation equals to k. To find Lk, Ck need be generated by joining Lk-1 with itself in advance. That is,  Ck = Lk-1*Lk-1={X U Y | X, Y?Lk-1, |X I Y |=k-2} where |X I Y | describes the number of the same operations in X and Y; X U Y is the operation sequence in that both X and Y are included.

For the operation sequence is an order association, make a new rule. If  { } { },,,,,,,,,,,, 122112211 ????? ==? kkkkk qqqqqpppppLqp LL  and pi+1 equals to qi when 1? i ? k-1, then,  { }1121 ,,,, ??=? kk qpppqp L is an member of Ck.

To reduce the operation sequence candidate, in the process of generating Ck, two data items whose first item are same are firstly found and then judge whether the last item of two operation sequences satisfies the minimum support. When it satisfies, the collection of two data items is a candidate data item.

3) Prune step: reduce the operation sequence data item in Ck  Ck is a superset of Lk, that is, there may be not frequent members. To reduce the size of Ck, Apriori obeys the property [4], that is, any (k-1)-itemset that is not frequent must be not a subset of a frequent k-itemset. Therefore, the (k-1)-subset of k- itemset is not a member in Lk-1, then the candidate frequent itemset can?t be frequent and it can be removed from Ck. This is the prune of Apriori.

4) Calculate the support of every operation sequence in Ck By the single scan of the process route transaction set T,  calculate the support of every operation sequence in Ck. To reduce the number of the records that are involved for calculating the candidate itemset support, mark the process route transaction which any itemset in Ck is not included in and it is not taken count of in scanning T next.

5) Create the set of the frequent k-itemset Lk Remove the operation sequences in Ck that don't satisfy the  minimum support count, and form the set Lk that consist of the frequent operation sequences.

6) Terminate the algorithm Repeat the step two to five. Until the frequent itemset that  is non-null can?t be generated, the algorithm is terminated while all operation sequence are obtained that satisfy the minimum support count. TOS is attained.



IV. AN EXAMPLE By cleaning up the process data, the process route data of  one enterprise is deal with and saved in the optimized process route database. A group of process routes in this database are given as an example to explain the process of mining the typical process route. There are ten process routes, then there are ten transactions, | T | = 10, shown as Table 1. To simply the calculation, the operation name is regarded as dataitem, and the selected process routes are shorter. Suppose that the  minimum support count is 5, that is, minsup = 5 and the minimum confidence is 60%. The steps of the calculation as followed:  1)  In the first iteration of the algorithm, each operation is a member of candidate 1-itemset C1. Scan the transaction set T calculate the support count of every operation shown as Figure 2.

2) The operations that can satisfy the minimum support count compose the frequent 1-itemset L1.

3)  Join L1 with itself and generate a candidate set of 2- itemsets C2 that is consist of 2L1C itemsets.

4) Calculate the support count of every dataitem in C2.

Scan the transaction set and calculate the support count of  every candidate 2-itemset C2 shown as Figure 3.

5) Generate the set of frequent 2-itemset L2 and it is composed by 2-itemsets that can satisfy the minimum support count.

6)  Generate a candidate set of 3-itemsets C3.

Two data items, ?turning ? milling? and  ?turning ? fitting? are firstly found for their first items are same and their support counts satisfy the minimum support count. Therefore, ?turning ? milling ? fitting? is a candidate itemset. If generate a superset by joining L2 with itself, five candidate itemsets are gotten. The way of reducing candidate itemsets is valid.

7) Scan the transaction set and generate L3.

L3 is composed by 3-itemsets that can satisfy the  minimum support count. In this scan, the transaction PS8 may be not taken into account because any itemset in C2 is not be included in it shown as Figure 4. Thus, the record count of relating with the candidate itemset support is 9. It is less than the actual transactions count that is 10.

8) Terminate the algorithm.

Because L3 has only one 3-itemset, C4 is empty, while the  algorithm is terminated. Supposed that C4 is non-null. If scan the transaction set again, the transactions, PS4, PS7 and PS10 may be not taken into account because any itemset in C3 is not be included in it shown as Figure 5. Thus, the record count of relating with the candidate itemset support is 6. It is less than the actual transactions count that is 10. It validated the  TABLE I.  PROCESS ROUTE DATASET (T)  ID Part Name Process Route (Operations) PS1 Separate circle A Baiting Turning Milling Fitting Turning Fitting Inspecting PS2 rotor Baiting Turning Fitting Turning Milling Fitting Inspecting Sandblasting PS3 accessorial weight ring Baiting Turning Milling Fitting Inspecting anodizing PS4 lower joint sheath Baiting Turning Aging Turning Fitting Turning Fitting Inspecting PS5 Junction pressure block Baiting Turning Milling Fitting Turning Inspecting anodizing PS6 Setting Screw Baiting Turning Milling Fitting Inspecting Passivation PS7 Shield bowl Baiting Turning Turning Fitting Turning Inspecting anodizing PS8 Joint pin Baiting Solution Turning Grinding Fitting Inspecting aging PS9 loop Baiting Turning Heat treatment Turning Milling Fitting Inspecting PS10 Columned pin Baiting Turning Turning Inspecting Passivation        efficient of reducing the record count of relating with the candidate itemset support.

Figure 2.   Generate C1 and L1  Figure 3.  Generate C2 and L2  Figure 4.  Generate C3 and L3  9) Calculate the confidence.

The confidences of the frequent 2-itemsets in L2 are  calculated as followed:  Figure 5.  If C4 is non-null  confidence (baiting ?turning) =9/10=90%, confidence (turning ?milling) =6/19=31.58%, confidence (turning?fitting) =5/19=26.32%, confidence (milling? fitting) =6/6=100%, confidence (fitting?inspecting) =5/12=41.67%.

The confidences of the frequent 3-itemsets in L3 are calculated as followed:  confidence(turning? milling?fitting)= 31.58%, confidence(turning?milling? fitting)= 100%, confidence(turning?milling?fitting)= 65.79%.

As a result, the significant rules are ?baiting?turning?, ?milling?fitting?, and ?turning?milling?fitting?. They are TOS mined in the process route set T by Apriori algorithm.

They can be used to automatically generate the next operation in a new process planning.



V. CONCLUSION According the fact that there is similarity between the  segments of the part?s process, the method of mining TOS based on the Apriori algorithm is presented. The association rule model of TOS is built up. The algorithm?s steps of mining TOS are elaborated and the way decreasing the number of the candidate itemsets and the record count in transaction set is adopted to improve the efficiency of the algorithm. An example is given and .validate the algorithm can effectively obtain TOS.

