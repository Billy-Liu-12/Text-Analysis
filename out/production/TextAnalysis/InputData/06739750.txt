Adaptive navigation of an omni-drive autonomous mobile robot in unstructured dynamic environments

Abstract? One of the challenges of Autonomous Systems navigating in real world is to deal with the large amounts of uncertainties which are inherent in such environment while maintaining stability. Higher order Fuzzy Logic Systems (FLS), such as Interval Type-2 Fuzzy Logic Systems (IT2FLS), that use type-2 fuzzy sets, can model and handle such uncertainties, and give good performances that outperform their Type-1 counterparts. However, the complexity and com- putational time of type-reduction process which is strongly related to Membership Functions (MFs) structure and the number of fuzzy rules limit their applications to simple cases in real-time. Artificial Potential Field (APF) approach due to its elegant mathematical analysis, simplicity and its possibility to take into account the dynamic of the system is widely used for autonomous mobile robots navigation. However, the potential field introduced exhibits local minima other than at the goal position of the robot. In this paper, a new real-time navigation approach where we combine the APF and IT2FL approaches is developed and implemented for an omnidrive mobile robot navigating in dynamic unstructured environments. The novelty of the approach is the association of IT2FL to APF and the way in which the two approaches are hybridized (rule base size reduction). The experiments carried out on an omnidrive mobile robot named Robotino show the effectiveness of our approach.



I. INTRODUCTION Motion planning and real-time obstacle avoidance are  very important issues for the successful navigation of autonomous mobile robots. According to the complete or incomplete knowledge of the navigation environment, the path planning can be divided into two broad classes: global and local planning. A lot of global path planner [1] [2] have the property of completeness (probabilistic), which means that they will find a path if it exists. However, its computational time increases exponentially with the degrees of freedom of the robot and the complexity of the environment that limits their use for real-time to only simple navigation cases. Local path planning is typically based on reactive navigation (Artificial Potential Field (APF) and Fuzzy Logic (FL) approaches,...) and can be implemented either in tasks [3]-[6], or in C-space [7],[8].

A. MELINGUI is with LAGIS, (UMR), (CNRS) 8146, Ecole Polytechnique de Lille, 59655 Villeneuve d?Ascq, France and Physics Department of the Faculty of Science, University of Yaounde 1, P. O. Box: 812 Yaounde, Cameroon.

(achille.melingui@etudiant.univ-lille1.fr, achille.melingui@yahoo.fr)  R. MERZOUKI is with LAGIS, (UMR), (CNRS) 8146, Ecole Polytechnique de Lille, 59655 Villeneuve d?Ascq, France (rochdi.merzouki@polytech-lille.fr)  T. CHETTIBI is with LMS, UERMA, EMP, Bordj El-Bahri, 16111, Algiers,Algeria. (tahachettibi@yahoo.fr)  J. B. MBEDE is with Electrical Engineering and Telecommunications Department of Polytechnic National School, University of Yaounde 1, P.

O. Box: 8390 Yaounde, Cameroon (mbede@neuf.fr)  In contrast to many approaches, robot motion planning through APF considers simultaneously the problem of ob- stacle avoidance and that of trajectory planning. In addition, the dynamic of the mobile robot is directly taken into account. The APF approach is conceptually simple, it can be easily implemented in feedback form and also extended to moving obstacles. The concept of APF approach is a creation of artificial potential fields in the robot workspace in which the robot is repulsed by obstacles and attracted to its goal position [3]. The robot follows the gradient of this APF towards its minimum. In spite of its simplicity and elegant mathematical analysis, some limitations exist which may stop the goal from being achieved [9].

To overcome the previous problems, various extensions of classical potential field have been proposed. Kim et al [5] have used harmonic functions to build an artificial potential field that eliminates local minima and the panel method to derive the potential field for obstacle avoidance. Krogh et al. [10] have suggested a generalized potential field method that combines global and local path planning. Rimon et al. [8] have suggested a technique for the construction of artificial potential fields that are guaranteed to bring a bounded-torque actuated to a desired robot configuration without collision in a perfectly known and stationary envi- ronment. Some researchers have used adaptive algorithms: Vadakkepat et al. [11] have used evolutionary algorithm to fit the potential field parameters for real time mobile robot path planning. Liu et al. [12] have proposed a novel genetic algorithms (GAs) approach for near optimal path planning of a mobile robot in a green house. Kasac et al. [13] have used a Radial Basic Function Neural Networks to learn the dependence between Gauss function parameters and mobile robot velocity ensuring the navigation of the mobile robot in a cluttered environment. However, all these approaches cannot handle the large variety of uncertainties present in the real world.

The traditional fuzzy logic (Type-1 Fuzzy Logic) ap- proach, inspired from the human being, has an impor- tant characteristic in the way it deals with various situ- ations without a model of environment. Therefore, many researchers have used fuzzy logic approach for mobile robots autonomous navigation [14]-[16]. Recently, it has been shown that, the fuzzy logic controller for mobile robot navigating in changing and dynamic unstructured environments and all the learning mechanisms which at- tempt to adapt the type-1 membership functions both face many sources of uncertainties (inputs Fuzzy Logic Con- troller (FLC) uncertainties, control actions uncertainties and linguistic uncertainties) [15], [17]. These linguistic and   Proceeding of the IEEE  Shenzhen, China, December 2013     digital uncertainties associated with changing unstructured environments cause problems in determining the exact and precise antecedents and consequents membership functions during the FLC design [18].

Higher order Fuzzy Logic Systems (FLS), such as the interval type-2 FLS, have been shown to be suitable to deal with these uncertainties. This ability is justified by the fact that an interval type-2 can be seen to possess an uncountable number of type-1 sets. The third type-2 fuzzy logic sets dimension and its footprint of uncertainty gives them more degrees of freedom sufficient for better modeling on uncertainty in comparison to type-1 fuzzy sets [19], [20]. The Type-Reduction process is a very important step for type-2 fuzzy sets and systems. However, the algorithms used for the type-reduction process (Karnik- Mendel Algorithm, Enhanced Karnik-Mendel Algorithm etc.) involve a computational overhead [21]. In addition, the type-reduction process is strongly related to Membership Functions (MFs) structure and the number of fuzzy rules.

The number of fuzzy rules increases with the complexity of the environment and of the task. The type-2 fuzzy logic as its type-1 counterparts ignore the dynamic of the controlled system, making the stability evaluation difficult.

Many researchers have used the two approaches for mo- bile robots autonomous navigation. Mbede et al. [22] have focused on autonomous motion planning of a manipulator in a known environment and with unknown dynamic obstacles.

They have used the fuzzy logic to approximate the gradient of harmonic functions. Unfortunately, this approach cannot handle uncertainties and does not exploit sufficiently the performances of the APF approach. Tsourveloudis et al.

[23] have combined an Electrostatic Potential Field (EPF) path planer with a two-layered type-1 fuzzy logic infer- ence engine for real time mobile robot navigation in a 2- D dynamic environment. The EPF generates in real-time minimum occupancy trajectories through current injection into network. The first layer of fuzzy logic inference engine performs sensors fusion into fuzzy variables. The second layer guarantees collision avoidance with dynamic obstacles while following the trajectory generated by EPF.

However, the APF approach is used as a planner, and the different algorithms are executed separately, increas- ing the computation time. This approach cannot handle uncertainties. The contribution of Parhi et al. [24] is the most interesting, especially in the way in which they have combined the two approaches. They have used the output of the APF controller named the "First heading angle" as an input of type-1 FLC, showing the contributions of the two approaches. They have developed a Petri-potential- fuzzy hybrid controller for the motion planning of multiple mobile robots with multiple targets in presence of obstacles in unknown cluttered environment. However, their approach cannot handle uncertainties and does not exploit sufficiently the performances of the APF approach.

To overcome these problems, a hybrid Type-2-Fuzzy- Potential Controller (T2FPC) is developed in this paper.

APF approach is an efficient and elegant mathematical method for mobile robots navigation. However, the local  minima problem limits its use. The local minimum occurs when the attractive and the repulsive artificial potential forces are collinear. The latter are usually collinear when the mobile robot is face to goal position. In this work, we consider a linguistic variable (angle) which define the orientation of the robot relative to goal position. This linguistic variable is partitioning into three labels (Negative, Zero and Positive). When the linguistic variable angle is negative or positive (left and right regions), the proba- bility that the robot encounters a local minimum during its displacement towards the goal position is negligible; because the attractive and repulsive APF forces are not collinear. The IT2FL is used to avoid the trap situations.

To deal with uncertainties from start to goal position and to reduce the rule base size, the APF outputs controller (attractive and the repulsive APF forces ) are considered as additional fuzzy variables for IT2FL controller and the whole is integrated into a common framework (T2FPC).

This integration leads to a significant reduction of the rule base size. The remainder of this paper is organized as follow: Section 2 presents the design of T2FP controller.

Section 3 provides experimental results for the autonomous navigation of an omnidrive mobile robot. Finally, Section 4 presents the conclusions.



II. TYPE-2-FUZZY-POTENTIAL FIELD CONTROLLER DESIGN  A. Artificial Potential Field General Concepts  The idea of using artificial potential field for robot planning and obstacle avoidance has been pioneered by Khatib [3]. The mobile robot moves in a field of forces.

The goal position is attractive pole for the mobile robot and the obstacles are repulsive surfaces. The introduced potential field Uart (x) consists of the attractive potential field Uatt (x) and repulsive potential field Urep (x). The total artificial potential acting on the robot is the sum of these two potential fields:  Uart (x) = Uatt (x) + Urep (x) (1)  The negative of the gradient of the total potential field Uatt (x) consists of two terms, the attractive force Fatt (x) = ??Uatt (x) driving the mobile robot to reach the goal position, and the repulsive force Frep (x) = ??Urep (x) which keeps the mobile robot away from obstacles, hence the name "Force inducing and artificial repulsion from the surface of obstacles (FIRAS from the French)".

B. Interval Type-2 Fuzzy Logic concepts  Type-2 fuzzy sets [25] are an extension of type-1 fuzzy sets. While a type-1 fuzzy set noted F is characterized by a type-1 Membership Function (MF) ?F (x), (i.e. the membership grade is a crisp number in [0, 1]), where x ? X and ?F (x) ? [0, 1], a general type-2 set noted F? is characterized by a type-2 MF ?F? (x, u) (i.e. the membership grade for each element of this set is a fuzzy set in [0, 1]), where x ? X and u ? Jx ? [0, 1]. When the secondary MF are type-1 interval sets, where fx(u) = 1, we call the     type-2 set an interval type-2 set. The schematic diagram of an IT2FLS is similar to T1FL, the major difference being that at least one of the FS in the rule base is an IT2FLS. Hence, the outputs of the inference engine are IT2FS, and a type-reducer [20], [26] is needed to convert them into a T1FS before defuzzification can be carried out [27]. We use the singleton fuzzification to transform the physical variables to symbol variables. Type reduction was proposed by Karnik and Mendel (KM) [20]. However, KM type reduction represents a major bottleneck to the use of interval type-2 FLS in real-time applications, especially when the rule base and the input variables are large. As we have to operate in real-time, we use the Uncertain Bound type-reducer proposed by Wu and Mendel [17].

C. Mobile Robot control  The main contribution in this paper is to make full use of the advantages of the APF approach which can be exploit to evaluate the stability of robot [22]. While the IT2F have the ability to deal with uncertainties [20] In the literature, some researchers have used an external force [9], [28] to extract the robot of the local minima situation. The robot moves to goal by means of APF, the extract force is used only in case of local minima situations. This needs a good local minima detection system (a switch controller) and introduces most often some instabilities, especially during the selection of the controller to use. We are judged useless to use the IT2FL just to extract the robot of the local minima positions; because our objective is to deal with the uncertainties overall the navigation environment. The trick is to fuzzified APF controller outputs, and add the APF concept in the experience of the human controller [29] in order to reduce the rule base size. Usually, some information are lost when the experts express their experience by linguistic rules.

Hence, linguistic rules are usually not enough for design a successful control system. On order hand, the information from sampled input-output data pairs are also not enough for successful design (difficult to cover all the situation the control system will face). In this paper, the sampled input- output data pairs are combine with the linguistic rules into a common framework to build fuzzy rules base [29]. The MF "none" is used to exclude some linguistic variables for a given rule. This function is well know by the type-1 fuzzy logic Matlab toolbox users. In the case of type-2 fuzzy logic, we consider the "none" MF as a rectangular interval type-2 MF, where the lower and upper membership grades are equal to one over the universe of discourse. We can use the minimum or the product t-norm operations to evaluate the T2FP controller outputs.

The developed control for the autonomous navigation is applied for the case of a mobile robot named Robotino.

The latter is an omnidrive mobile robot; its omnidirectional wheels allow a free displacement of the chassis in longi- tudinal and lateral directions. The robotino mobile robot (Fig. 1) is equipped with 9 infrared sensors. These sensors are used to detect static and moving obstacles (4cm up to 70cm). The APF controller uses the infrared sensor voltages as inputs and generates the longitudinal Fx and lateral  Fy artificial forces as outputs. The IT2FL controller uses (LOD,FOD,ROD,?x, Fx, Fy) as inputs and generates the longitudinal Vx and lateral Vy velocities as outputs (Fig. 2). The infrared sensor voltages are clustered into 3 groups: Left obstacles distance (LOD), Front obstacles distance (FOD) and Right obstacles distance (ROD). ? defines the orientation of the robot relative to goal position (Fig. 3). Fx and Fy represent the artificial forces generated by APF controller. ?x defines the distance between the current robot position and the target position. We use the type-2 fuzzy sets (Gaussian IT2 MFs Fig. 4) both for the inputs and outputs of the controller to model and handle the uncertainties and to deal with the difficulty associated with determining the exact membership functions [20].

Linguistic labels such as Near (N? ) and Far (F? ) are defined for the distance of obstacles and the distance of the robot relative to the target. Terms like Negative (N?E), Zero (Z?) and Positive (P?O) are considered for the longitudinal APF force, lateral APF force and the angle. The longitudinal and lateral velocities are defined by the linguistic labels: Fast Backward ( ?FBW ), Backward (B?W ), Stop (S?), Forward (F?W ), Fast forward ( ?FFW ). The fuzzy rule base is con- sisted of 15 fuzzy rules (Table. I). The first nine rules use the APF approach, where the outputs of the T2FP controller are strongly related to APF controller outputs. The last six rules use the IT2FL approach, where the robot faces to local minima situations. We can see that from 1st to the 6th  rule, the angle is negative and positive (the attractive and repulsive APF forces are not collinear), the robot exploits the APF approach to move to goal. From 7th to 9th rule, the distances from the robot to obstacles are far, hence it can exploit the APF again. From 10th rule to 15th rule, we have the local minima situations, The T2FP controller uses fuzzy logic approach. Comparing with [30] and [31], where the authors have used the fuzzy logic approach to control the same mobile robot, our rule base size is significantly reduced (15 rules instead of 64 and 182 rules). IF-THEN rule for IT2FP controller can be expressed as following (the first rule of the table).

R1 : IF ? is N?E and Fx is N?E and Fy is N?E  THEN Vx is ?FBW and Vy is B?W (2) The mobile robot is able to avoid static as well dynamic obstacles. The rule base regroups: the goal seeking behavior, the front obstacle avoidance behavior, the right and left wall-following behaviors, the right and left corners avoid- ance behaviors, the corridor following behavior and the U- shaped obstacle avoidance behavior.

Fig. 1. Robotino mobile robot     TABLE I FUZZY RULE BASE  N0 LOD FOD ROD ?x ? Fx Fy Vx Vy  1 None None None None N?E P?O N?E F?W B?W 2 None None None None N?E P?O Z? F?W S? 3 None None None None N?E P?O P?O F?W F?W 4 None None None None P?O P?O N?E F?W B?W 5 None None None None P?O P?O Z? F?W S? 6 None None None None P?O P?O P?O F?W F?W 7 F? F? F? None None Z? N?E S? F?BW 8 F? F? F? None None Z? Z? S? S? 9 F? F? F? None None Z? P?O S? F?FW  10 F? F? N? None Z? None None F?W S? 11 N? F? F? None Z? None None F?W S? 12 F? N? F? N? Z? None None S? S? 13 F? N? N? N? Z? None None S? S? 14 N? N? F? N? Z? None None S? S? 15 N? N? N? N? Z? None None S? S?  Fig. 2. T2FP controller structure  Fig. 3. Artificial potential force direction  Fig. 4. Membership functions

III. EXPERIMENTAL RESULTS  To evaluate the performances of the proposed approach, the experiments have been performed and the validation of the IT2FP controller has been achieved in real-time on an omnidrive mobile robot. Using the camera Matlab toolbox calibration to evaluate the intrinsic and extrinsic webcam parameters and image processing Matlab toolbox, we built a suitable system able to track target colored object.

The system starts with image acquisition from video flow provided by Robotino webcam; Afterwards, the image will pass through pre-processing such as filtering and smoothing.

The Hough Transform algorithm will be applied to detect colored object before the process of distance estimation.

Odometry is the most used method for estimation of momentary position of mobile robots. It provides easily real-time information concerning the robot position and orientation. In our experiments in order to reduce the odometry sources errors, we dealt only with the linear displacements (lateral and longitudinal velocity control). We use the yaw rate only in the video and image processing system for target tracking. We initialize the odometry only after obtaining the coordinates of the target. The robot is directly opposed to target (midle region), it moves in the right or in the left regions in the case of a mobile obstacle or in case of a large frontal obstacle. We use an Elman neural network to estimate both systematic and non- systematic odometer errors. The experimental environment is like FESTO Hokey Challenge league area, with small pebbles, dust, which affect the robot performance and introduce additional sources of uncertainty. Fig. 5 shows the sample of experimental environment. We used two Robotinos each controlled by one PC via wireless commu- nication; one is used as moving obstacle while the other is the controlled robot. The controlled robot is supplied with a colour webcam which supports a colour depth of 24 bit true colour and a VGA resolution with 15fps and JPEG compression. Using the Robotino Matlab Toolbox for Robotino control, infrared optics sensors for static and     mobile obstacle detection and the optical shaft encoders for Robotino localization, we built the navigation system suitable for an autonomous navigation of Robotino mobile robot in unstructured and dynamics indoor environments.

The nine infrared distance sensors mounted in the chassis at an angle of 40 to one another which are capable of accurate or relative distance measurements to objects at distances of 4 to 30cm (by expressing the length as a linear function of voltage). But, in our experiments, to deal with mobile obstacles, we developed a simple neural network (perceptron) to measure the distances up to 70cm.

Several experiments have been performed using the mobile robot. We have considered many geometrical scenes which regroup all the individual behaviors and present a real challenge to mobile robot controllers. Due to the number of pages limitation, we present only two in this paper. The first experiment is depicted in Fig. 5-A. In these experiments, we have considered an environment without local minima situations to evaluate the performances of the APF ap- proach. In the second experiment, we evaluate successively the performances of a simple IT2F controller, a combination of APF and IT2FL by a switch system denoted by: (APF +IT2F) controller and the proposed combination approach denoted by: T2FP controller. The starting position of the robot is considered as the global frame, and the robot moves along the X-axis. The goal position coordinates are updated in each step with respect to robot frame by means of odometer system. In the first experiment the goal position is situated at 2.5m, the start point coordinates are O(0, 0) and the goal point coordinates are G(2.5m, 0). Fig. 6 and Fig.

7 depict respectively the resulting trajectories for the four controllers and the outputs generated by the controllers. The T2FP controller generates the most smoothness path. The APF, the IT2FL and (APF+IT2FL) have almost the same trajectories; and spend almost the same time to achieve the task. The second experiment Fig. 5-B evaluates the abilities of the controllers to deal with diverse geometries of obstacles. It is a difficult test bench for controller, because the optical sensors used to sense the environment are spaced at 40 degree and we don?t use an infrared laser. The con- trollers deal also with a moving obstacle. The start position coordinates are O(0, 0) and the goal position coordinates are G(3m, 0). Fig. 8 and Fig. 9 depict respectively the resulting trajectories for the three controllers and the outputs generated by each controller. The T2FP controller generates the most smoothness path and it is the fastest, followed by the IT2FL controller. We notice the convergence problems for the (APF+IT2FL) controller. In this paper, the main objective is to combine the APF approach with the type-2 FL approach. Hence, four controllers have been designed to better evaluate the performances of each approach. The different controllers do not track the predefined path or trajectory; we evaluate the performances in respect of time taken and the smoothness of the resulting path. The experi- ment results show that the T2FP, IT2FL and (APF+IT2FL) implementations move the robot to the desired position.

Nevertheless, the (APF+IT2FL) controller encounters some convergence problems. The APF controller achieves a stable  path in an environment without local minima. However, it is slow to react with moving obstacles and the robot moves too close to certain obstacles. Following the obtained trajectories and the velocities we can see that the robot moves without collision and deals with uncertainties. It achieves its task without collision, and it takes a reasonable time to achieve its tasks. The T2FP controller is the most reactive and generates the smoothest path.

Fig. 5. Experimental environments  Fig. 6. Scene A: Trajectories  Fig. 7. Scene A: Velocities

IV. CONCLUSIONS In this paper, we presented a Type-2 Fuzzy potential  approach for the real-time autonomous navigation of mo- bile robots in changing and dynamic unstructured indoor environments. This approach is based on the combination of two approaches: artificial potential field and type-2 fuzzy logic. The type-2 FP system simplifies the design of mobile robots controller and reduces the number of fuzzy rules to be determined. We have presented experimental results obtained from an omnidrive mobile robot named Robotino.

Fig. 8. Scene B: Trajectories  Fig. 9. Scene B: Velocities  We can conclude that, the T2FP controller can deal with uncertainties present in dynamic indoor environments in real-time. The robot navigates efficiently from start to goal position with accuracy and smooth motion. We have shown that the T2FP approach outperforms the APF approach, the (APF IT2FL) approach and IT2FL approach. In the future, it is interesting to investigate the type-reducer process by an evolutionary algorithm to improve the performances of the navigation system.

