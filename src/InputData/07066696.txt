Rare Association Rule Mining For Data Stream

Abstract: The immense volumes of data is populated into repositories from various applications. More over data arrives into the repositories  continuously  i.e. stream of data that cannot be stored into repository due to its varying characteristics.

Frequent  itemset mining  is thoroughly studied  by many researchers  but important rare items are not discovered by these algorithms. In many cases, the contradictions or exceptions also offers useful associations. In the recent past the researchers started to focus on the discovery of such kind of associations called rare associations. Rare itemsets can be obtained by setting low support but generates huge number of rules. The rare association rule mining is  a challenging  area of research on data streams. In this paper we proposed an idea  to analyze the data stream to identify interesting rare association rules. Rare association rule mining is the process of identifying associations that are having low support  but occurs with high confidence.

The rare association rules are useful for many applications such as fraudulent credit card usage, anomaly detection in networks, detection of network failures, educational data, medical diagnosis etc. The proposed rare association rule mining algorithm for data stream is implemented using sliding window  technique over a stream of data, data is represented in vertical bit sequence format. The advantage of proposed algorithm is that  it  requires single scan to discover all rare associations. The proposed algorithm outperforms  both in terms of memory and time.

Keywords: Rare items, Data stream, Rare association rule mining, Infrequent items.



I. INTRODUCTION Data mining is a process of extracting useful  information from large dataset by combining statistical and artificial intelligence techniques. It aims at discovering the interesting correlations, frequent patterns, associations or casual structures among sets of items in the data repositories.

The data mining techniques are used   to analyze the data in the repositories and which can be extended to analyze  data streams and present the knowledge from the huge volumes of the data to the user.

The digital revolution has made  digitized information easy to obtain and inexpensive to store with the rapid enhancements in hardware and software. The automation of business large volumes of data is being generated continuously  from many  applications like sensor data, web logs, market basket data, network flows etc. Normally it is highly impossible to store entire data stream in main memory. Hence online mining of data stream is required which is very thrust research area  in data mining. Data stream mining is the very challenging  issue because of its varying characteristics like  continuous, infinite, very fast inflow of data.

The association rule mining was first introduced by Agarwal et al. for market-basket analysis that identifies frequent itemsets  used for many applications. The data obtained from many applications also consist of significant rare data that is being neglected by association rule mining algorithms. Rare itemsets  can be used in many applications, e.g. to detect errors in an industry like  if {Fire = Yes} is frequent, but {Fire = Yes, Alarm = On} is  rare, signals that alarm system is malfunctioning, which is being neglected by frequent itemset mining algorithms.

An association rule is an implication X?Y, where X and Y are disjoint itemsets (i.e., sets with no items in common). The intuitive meaning of such a rule is that when X appears, Y also tends to appear. The two traditional measures for evaluating association rules are support and confidence. The confidence of an association rule X?Y is the proportion of the transactions containing X that also contain Y. The support of the rule is the fraction of the database that contains both X and Y. The problem of association rule mining is usually broken down into two subtasks. The first one is to discover those itemsets whose occurrences exceed a predefined support threshold(MST), and these items  are called frequent itemsets. A second task is to generate association rules from those large items constrained by minimal confidence(MCT). Though these algorithms are theoretically expected to be capable of finding rare association rules, they  become intractable if the minimum level of support is set low enough to find rare rules.

Adda et al.  highlighted the problem of discovering rare items  from static data, has recently captured the interest of the data mining community. Rare itemsets are those that only appear together in very few transactions in the database. Rare association rules have low support and high confidence in contrast to general association rules that are determined by high support and a high confidence level. Rare association rule mining  has many applications, in particular fraudulent credit    card usage, anomaly detection in networks,  educational data, medical diagnosis, market basket data to promote the sales of rare items that gives more profit.

Many  rare association rule mining algorithms were proposed by different authors, these algorithms assumes that data is static where  as if we consider many applications data is continuous. Hence the existing algorithms designed for static data may not be suitable  for continuous stream of data. Data stream mining is used to capture  the interest of user that varies from time to time. Thus we proposed  to implement an algorithm to find rare associations from data stream.

The remainder of this paper is organized as follows.

Related work is discussed in Section II. Problem formulation and description of  algorithm is elucidated in section III.

Expected results are given in section IV. Finally we concluded the work in section V.



II. RELATED WORK Association rule mining is thoroughly studied research area  in data mining [1][2] and recently data mining communities are concentrating on new emerging data model data stream, as many applications are generating continuous data stream. In the literature  there are many algorithms available that generate frequent items both from static databases and data streams. In many cases, the contradictions or exceptions also offers useful associations i.e. infrequent associations are useful for many applications. There are algorithms to discover rare associations from static databases, but these algorithms need to be enhanced to deal with data streams.

The problem of missing rare items that are having low support but with high confidence  is handled by  multiple minimum item support(MIS) values [3][4]. An approach is introduced to find all rare items that are having  support less than maximum support threshold  [4][5]. An efficient matrix based and hash based structure is introduced to discover rare associations. The method is very helpful to discover relations among  items [6].

To find infrequent itemsets  based on Proportional Error Reduction Technique [7]. A naive approach for "Generating Rare Association Rules using the Minimal Rare Itemsets Family? is to find Minimal rare items [8]. Efficient Vertical Mining of Minimal Rare Itemsets uses Talky-G and Walky-G algorithms [10]. The former is based on  level wise search, later is based on  depth first search of prefix tree. Both of  these algorithms  first discovers the minimal rare items and these can be used to get rare associations. An efficient rare association rule generation by constructing the compact MIS-tree, uses the notion of least minimum support and infrequent child node pruning. The approach is based on FP-Growth [11]. Extraction of  rare associations from e_learing data is proposed by gathering student usage data from a Moodle system [9].

Many algorithms have been proposed to discover frequent patterns in stream of data, most of them do not differentiate recently-generated information from obsolete information that may currently be useless, insignificant, or possibly invalid.

Moreover, almost all of the algorithms are designed to generate frequent patterns from data streams [12][13].

Online   mining of frequent items over a stream used an efficient sliding window [14]. This algorithm generates complete set of frequent itemsets with in current sliding window using level wise approach. It makes use of bit sequence representation efficiently.

The rare itemset mining is still an emerging research field and has been studied for a decade. There are still many unsolved issues that can be explored, such as how to minimize the number of generated candidates and how to improve the mining process by providing more targeted candidates. It is easy to generate a large number of rare items, but the challenge comes from how to determine which rare itemsets are interesting and valuable to end users and their applications.

In this paper we elucidated an efficient algorithm Data Stream_Rare Association Mining (DS_RAM) that identifies rare associations among current window of transactions using level wise approach. It uses efficient window sliding techniques and it generates complete set of  rare associations in single scan.



III. PROPOSED WORK As most of the users are interested  in  only small part of  entire data stream, so before applying data mining techniques data needs to be pre processed. The proposed algorithm is based on support confidence frame work. It uses the  two support thresholds MaxSupportThreshold(MST1) and MinSupportThreshold(MST2). The proposed algorithm uses level wise approach to discover higher order itemsets .

Let D be the set of transactions in the data stream. Each transaction is assigned with Tid i.e. D={T1,T2,T3....Tn}, where n is  infinite because the data stream is indefinite or continuous.

Each transaction is represented  as a set of items referred as itemset. Tid ={i1,i2....im},where m is number of  distinct items in the data stream. The proposed algorithm is implemented with the sliding window technique to process the stream of data. As the new transaction arrives into the system   the oldest transaction in the window is removed. The  size of the window is user defined parameter .

Definition 1: An itemset X ? I, then support of  X is defined as the fraction of transactions that contains itemset  X .

Definition 2: An itemset X ? I and Y ? I  and X?Y =? then confidence of the rule X?Y is defined as  Confidence(X?Y)=Supp(XUY)/Supp(X).

Definition 3: An itemset X is rare item if Supp(X)< MaxSupportThreshold (MST1) and Supp(X)>= MinSupportThreshold (MST2).

Definition 4: An association  X?Y is said to be rare association, itemset XY ? I and Confidence of (X?Y)  is greater than user defined MinimumConfidenceThreshold (MCT). Methodology  The following steps are followed to generate the rare association rules from data stream. As the new transaction arrives the oldest transaction is removed from the window i.e.

window slides  and assuming two transactions are generated per each time unit.

Step 1. Obtain the window of transactions from the main memory.

Step 2. Convert obtained transactions into vertical format using bitsequence, then find the support of one itemsets and place them  in separate table.

Step 3. Generate candidate list of  nth  rare  itemsets  and based on support measure from the (n-1)th itemsets. This step is repeated until no new  rare item is  found. This  step is same as Apriori.

Step 4. Formulate the rules using minimum confidence threshold  as defined in  definition 4.

Step 5. Present the results  to the user.

The  algorithm that implements above steps is given below and  an example showing sequence of execution steps is explained. The  output after each step is shown in tables labeled TABLE III to TABLE VIII.

Algorithm: DS_RAM  //finds all the rare patterns of interest and generates the rules.

Input: D (A transaction data stream), MST1(User defined MaximumSupportThreshold), MCT(User specified MinimumConfidenceThreshold, MST2(User specified  MinimumSupportThreshold) and size( Maxwindowsize).

output: Set of  Rare associations.

Begin  TW=NULL repeat TW=get_newtransactions(size) //Reads   transaction from main memory for each transaction  Ti in TW do for each item I in the Ti do Store_VTW( I, Convert _ Bitsequence(I)) /*drop if(sup==0)*/ end  end  Calculate the support of each itemset in Store_VTW and update the SP field in the same table.

RI1=Select_rareoneitems()  for(k=2; RIK-1 != NULL; K++) { CIK=gen_RI(RIk-1) Gen_RareAssoc() } Gen_RI(RIk-1) { for each itemset  X in  RIk-1 do for each remaining itemsets Y  in RIK-1 do BV=Bitwise_AND(BS(X), BS(Y))  SP=Support(BV) If(SP<MST1 && SP>=MST2) Store_temp(X||Y, BV, SP) end end }  Gen_rareAssoc() {  for each tuple  T in Store_temp do for each subset I of  itemset  in  tuple T do rule=  gen_arule(I) if(rule!=NULL and Confidence(rule)>MCT) save _rule() end end }  DS_RAM: The algorithm reads the window of transactions from the data stream. The size of window is a user defined parameter. The window of transactions are converted into vertical bitsequence(BS) as shown in TABLE II.

The support of an itemset is obtained  by performing bitwise AND  operation and counting the number of 1's in resulting bitsequence.

For example Consider  BS(a)  = 0010  and  BS(b) = 1111  Bitwise_AND(BS(a), BS(b)) will be 0010. So the support of itemset (ab) is 1 as the number of 1's in resulting bitsequence is  1.

Gen_RI(): This  method generates rare items based on two support thresholds MST1  and MST2. An  itemset X is treated as rare if    MST2 <= Support(X) < MST1 as defined in definition 3.

Gen_rareassoc(): A rule is said to be rare and interesting  if it satisfies parameters defined in  definition 3 and definition 4.

All rules satisfying these two definitions are generated by this method.

TABLE I.  TRANSACTIONS IN DATASTREAM  Tid Items  T1 acd  T2 bce  T3 abce  T4 bce  T5 b  T6 ce    TABLE II.  BITSEQUENCE FOR EACH ITEM IN WINDOW1 AND WINDOW2  W_id Item Bitsequence Support  TW1 a 1010 2 b 0111 3 c 1111 4 d 1000 1 e 0111 3  TW2 a 1000 1 b 1110 3 c 1101 3 d 0000 0 e 1101 3  Let us consider an example with stream of transactions as shown in TABLE I. The given data stream(D) is considered as two windows TW1 and TW2.

D= ( TW1(T1,T2,T3,T4),TW2(T3,T4,T5,T6).....)  The TABLE II shows list of items in the database along with their bit sequence. The first bit in bitsequence of itemset (a)  is set to one if transaction T1 has the item 'a.'  Let us see  the generation of candidate items and rare items for window1(TW1). Consider the bitsequences of TW1 and let us assume MST1 as 80%(0.8), MST2 as 20%(0.2), size of the window as 4, and MCT as 80%. An item X is said to be rare if support(X) <0.8*4=3.2 and support(X)>= 0.2*4=0.8.The association X?Y of rare itemset(XY) is interesting if confidence(X?Y)>MCT (0.8). The set of generated rare associations is shown in TABLE VII.

Let us discuss the steps of rare  association  mining for TW1. First, DS_RAM algorithm generates four rare 1-itemsets satisfying support thresholds: (a), (b), (d) and  (e). The support of each of these 1-itemsets is shown in TABLE II. The support(a) is 2, it is calculated by counting  the number of 1's in the bitsequence(BS(a)=1010). Similarly support of other items is calculated. The 1-itemset(c) is a  frequent itemset, since its BS(c) = 1111, i.e., support(c) = 4, support(c)> MST1, so  the 1- itemset(c) is discarded from list of 1-itemsets. The  itemsets whose support is zero are discarded. Candidate 2-itemsets  in TABLE III are generated by combining rare1-itemsets.

The Support of  2-itemsets is obtained  using bitwise AND operation and then by counting the number of  1's  in resulting bitsequence, E.g. consider  BS(a)=1010, BS(b)=0111, then BS(ab)=1000 and support(ab)=1. The 2-itemsets satisfying MST1(3.2) and MST2(0.8)  are considered as rare 2-itemsets.

These rare 2-itemsets  are shown in TABLE IV. After this step DS_RAM generates three candidate 3-itemsets as shown in TABLE V. E.g. Bitwise AND  on BS(ab)=0010  and BS(ae) = 0010,  so the BS(abe)=0010 and support (abe) =1.Similarly support of remaining 3-itemsets is calculated.

The resulting rare 3-itemsets are  shown in TABLE VI. As we got only one 3-itemset no new candidates are generated, the generation and test process is stopped. Hence,  nine  rare itemsets (a), (b), (d), (e), (ab), (ad), (ae), (be), (abe)   are  generated by DS_RAM algorithm for input data in TW1. The results obtained after each iteration are shown in TABLE III to TABLE VI.

The process of generating rare associations is explained below. First, for each rare item a subset of an itemset is chosen.

E.g. Consider rare 2-temset  (ab). The possible rules with the item set are a ? b and b ? a. To check the interestingness of these rules, compare it with MCT. A rule is interesting if confidence of the rule is greater than the MCT(0.8 as given at the beginning of the example).

Example 1: Consider the 2-itemset (ab)  Confidence(a ?b)=support(a U b)/support(a)  =1/2  = 0.5 <MCT(0.8)  Confidence(b ? a)=support(a U b)/support(b)  =1/3    =     0.33<MCT(0.8)  The above two rules a ?b, b ?a are not satisfying  MCT.

Hence those  associations are not interesting.

Example 2: Consider 2-itemset (ad)  Confidence(a ?d)=0.5, Confidence(d ?a)=1, hence d ?a is interesting and a ?d is not interesting. This process is applied to  all the rare item sets obtained, the generated interesting rare  associations are shown in TABLE VII.

TABLE III.  CANDIDATE TWO ITEMS  CI2(Canditem) Bitsequence Support ab 0010 1 ad 1000 1  ae 0010 1 bd 0000 0  be 0111 3 de 0000 0    TABLE IV.  RARE  TWO ITEM SETS SATISFYING MST1 & MST2  RI2(Rareitem) Bitsequence Support  ab 0010 1  ad 1000 1  ae 0010 1  be 0111 3  TABLE V.  CANDIDATE 3 ITEMSETS  CI3(Canditem) Bitsequence Support  abd 0000 0  abe 0010 1  ade 0000 0    TABLE VI.  RARE 3 ITEM SETS SATISFYING MST1 & MST2  RI3(Rareitem) Bitsequence Support  abe 0010 1  TABLE VII.  RARE ASSOCIATION RULES FOR WINDOW 1(TW1)  S .No Rare itemset Support Rare association rule Confidence   1 ad 1 d ?a   100%  2 be 3 b ?e e ?b  100%  3 abe 1 ab ?e ae ?b  100%   TABLE VIII.  RARE ASSOCIATION RULES  FOR WINDOW 2(TW2)  S .No Rare item set Support Rare association rule  Confidence  1 ab 1 a ?b 100%  2 ac 1 a ?c 100%  3 ae 1 a?e 100%  4 ce 3 c ?e e ?c  100%   5 abc 1 a ? bc ab ? c ac ?b   100%  6 abe 1 a  ? be ab ? e ae ? b   100%  7 ace 1 a ? ce ac ?e ae ?c  100%  8 bce 2 bc ?e be ?c  100%  9 abce 1 a ? bce ab ?ce ac ? be ae ? bc ....

100%    The similar procedure is applied to the  second window of transactions TW2, the results are shown in TABLE VIII.



IV. EXPECTED  RESULTS The algorithm DS_RAM  identifies rare associations  among current window of transactions using level wise approach with vertical data format represented in bitsequence, It uses efficient window sliding technique to process incoming data stream .

The advantages of proposed algorithm are  1. Vertical format outperforms when  compared to horizontal format representation of data, since it facilitates the  user to generate complete set of rare associations in single scan over input data stream, where as horizontal format requires multiple scans of input data stream to count the support of itemsets.

2. As the vertical format is implemented using  bit sequence, it facilitates the fast computation of support counts by using bit level AND operation. It also requires  less memory compared to  Tid set implementation.

3.One more advantage with bit sequence representation is, it allows the fast moving of sliding window when new transaction is generated.

The prototype is under implementation. The expected result for data stream in TABLE I is shown in TABLE VII and TABLE VIII.



V. CONCLUSION AND FUTURE SCOPE Our approach first performs conversion of original window  of transactions  into vertical data format with bit sequences and then generates the rare association rules from the converted database based on two user defined support thresholds MST1and MST2. The approach is very simple and efficient.

Advantage of vertical data format is that it reduces the number of database scans to one.

The rare itemset mining is still an emerging research field and  there are still many unsolved issues that can be explored, such as how to minimize the number of generated candidates and how to improve the  mining process by providing more targeted candidates. It is easy to generate a large number of rare items, but the challenge comes from how to determine which rare itemsets  are interesting and valuable to end users and their applications. The  proposed work can be further extended to  prune the number of candidates  during early stage using user specified constraints .

