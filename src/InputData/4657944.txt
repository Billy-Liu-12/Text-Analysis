The Study of Alarm Association Rules Mining in Telecommunication Networks

Abstract-Association rules mining plays an important part in the alarm correlation analysis in the telecommunication networks. A novel algorithm based on time window pre- processing and the weighted frequent pattern tree method was proposed in this paper. It is an efficient algorithm which can avoid scanning the database many times and producing a large number of conditional pattern trees. Experiments on a large alarm data set show that the approach is practical for finding frequent patterns in the alarm correlation analysis, and the performance of WFP method is better than the classical FP- growth algorithm.



I. INTRODUCTION  The recent global expansion in the demand for telecommunications services has resulted in the considerable growth of networks in terms of size, complexity and bandwidth. Networks often consist of hundreds of even thousands of interconnected nodes from different manufacturers using various transport media and systems. As a result, when a network problem or failure occurs, it is possible that a very large number of alarm messages are generated. Alarm correlation is a conceptual interpretation of multiple alarms such that new meanings are assigned to these alarms [1]. In the past, the knowledge of alarm correlation was mainly obtains from network experts. But with the development of telecommunication networks, it is much more difficult for experts to keep up with the rapid change of networks, so more and more researchers adopt data mining methods to discover alarm correlation rules.

Telecommunication alarm correlation analysis based on mining association rules plays an important part in current research.

The first question of the mining association rules in telecommunication network is the pre-processing of the alarms. Because of there are large volumes of alarms generated daily by all kinds of network elements or components of many different types, and the alarms are different from the different devices, even the contents and  Li Xing-ming Key Laboratory of Broadband Optical Fiber  Transmission and Communication Networks of Ministry of Education  UESTC, Chengdu 610054 Email: xingmingL@uestc.edu.cn  formats of the alarms are quite different which are specified by the manufacturers, alarms in telecommunication networks are massive, bursting and intermittent. The complexity of alarms is not appropriate in the form of direct association rules mining, it is necessary to put the alarms into the form of transactions sets which are suitable for data mining. If not handle well the alarms of the networks, mining efficiency and accuracy will be great to be affected. It is a challenge to trigger alarms immediately, accurately and flexibly. In other words, the preprocessing of alarms plays an important part in the alarm correlation analysis. By the other hand, efficient mining of frequent itemsets is also a fundamental problem in association rules mining. Lots ofApriori-like algorithms [2-4] are proved to achieve good performance. However, it is costly to handle a large number of candidate sets and must scan the database repeatedly. As the amount of data increases, designing an efficient mining algorithm become increasingly urgent. FP-growth algorithm [5] avoids the costly generation of a huge number of candidate sets which is a depth-first search algorithm. The frequent pattern tree structure is an extended prefix-tree structure for storing compressed, crucial information about frequent patterns. FP-growth algorithm is an efficient FP-tree based mining method for mining the complete set of frequent patterns by pattern fragment growth.

Although the FP-tree structure is efficient in many applications, it has to produce too much number of frequent conditional pattern trees to be applicable in the alarm correlation analysis of telecommunication networks directly.

This paper discussed how to use the association rules mining technique to find the correlation of the large amounts of alarms. The method includes two important parts. One part is the pretreatment of alarms; the other part is to construct the data structure of association rules mining. The method based on the time window preprocessing and the weighted frequent tree structure is proposed to resolve these problems. The algorithm in telecommunication networks is proved to be efficient.

The remainder of this paper is organized as follows: Section 2 is outlines time window preprocessing method, Section 3 introduces the weighted frequent tree construction, while Section 4 shows the experimental results. A conclusion is drawn in Section5.



II. ALARMS FOR THE ASSOCIATION RULES MINING  A. The problems ofthe original alarms  The preprocessing of the alarms includes the alarm data collection, cleaning (cleaning means adds with the missing data and discards the redundant data) and converts the alarm data into an alarm transaction.

Alarm events include the abnormal state of the managed object information, in according to X.733 of the ITU-T standard recommendations, an alarm usually includes the following attributes: Equipment name, device type, equipment address, interface types, alarm level, alarm types, alarm status, alarm time, and so on.

Unfortunately, the alarm does not usually contain significant network fault information and the exact location of the fault source. When the network fault appears, it will trigger a series of alarms, but not all alarms are the cause of the fault, which requires the analysis of all alarms to determine the root of the fault.

Original alarms of the actual network data contain the main problems as: information redundancy, the data is incomplete, time synchronization, and the alarms contain a lot of noise which is unrelated to the association rules, and the attributes of the alarms are different, and so on. This system can not directly deal with the original alarms. Before the mining process, alarms in database must be converted into the transactions which are suitable for data mining alarm services library, and be distributed with different weights. In general, the original alarm data exists below problems:  ? A fault often can trigger many alarms: an equipment failure may have caused number of alarms for the same equipment; the fault may be intermittent occurred, it means that if the fault occurs, alarm events will happen; one alarm can be detected by many network components and each component will send the alarm incident.

? The alarm contain many attributes, some of which are unnecessary in the association rules mining.

Only parts of the attributes can be extracted to alarm events and be used to mine weighted association rules.

? Incomplete data: in certain special circumstances, some information may be lost for the lack of access to the alarms, such as the network management channel interrupted, and the information can not be transmitted, and so on.

? Alarm noise in the data: in the association rules mining, the data unrelated to rules and fault diagnosis can be called noise. Noise has great interference role in the alarm correlation analysis, which must be removed in the alarm preprocessing process.

? Time Non-synchronous: in the large network, the time of different and same equipments can't be standardized in common, which can induce some time errors can make the mining very difficult.

? The alarms data are considered inequity, which are short messages, generally of textual formats, and typically contain several fields giving information creation time, location and some condition which the alarms contain. The items should be given different weights to reflect their importance.

From above analysis of the problems in alarm correlation analysis with association rules mining, it is known that the extraction of the alarms and the time synchronization of alarm are two most important factors. The methods to resolve these two problems will be proposed next part.

B. The alarm extraction and time synchronization  Pretreatment extracts the alarm time, alarm level, alarm sort and equipment address to form the alarm events database and mark it as a 4-tuple (a, s, 1, t) . The four attributes are most important of all, which can stand for the alarm. The information extraction is shown as figure 1.

alarm_time  alarm_sort  alarm_status  alarmJevel alarm_time  \. alarm_level interface_type  , J, alarm_sort  equip_type equip_address  equip_address  equip_name  alarm_number  Figure 1. information extraction  The time synchronization problem exists in the original alarms. The occurrence of alarm time from one or two seconds sometimes, and sometimes from great, some alarms even occur at the same time. The mining efficiency will be low if directly mining the original alarms. In order to resolve this problem and converse the database into the appropriate alarm affairs, this paper proposed the method with the sliding time window to deal with the idea.



III. WEIGHTED FREQUENT TREE METHOD PROPOSED  Through the time window operation, the original alarms will be tum to the sets of transactions. The ultimate goal of time window selection is to improve the efficiency of the association rules mining and quickly position even forecast the network failures.

Definition 1. Given a set E, the alarm sequence  S = {s, 1; ,r:} is an ascending sequence occurred in the time  interval [1;, r:] , Sw = { w, t s ' t e } is a time window of the  sequence S, in whicht s  > r:,te < r:, w ={w ~ slls < I < Ie} ? t  e - t  s is the width of the window, as W.

Definition 2. Given the time window width Wand the  window sliding step s, the starting time of the sequence is 1; ,  and the ending time is r: ' the time span r: -1; = W is called the width of the window. The alarm in a window started at  T + s and ended at T + s .

I e  Figure 2 shows the time widow, of which the alarm  sequence is {A, C, "', A, F} , the width of the window is 5  and the sliding step is 2.

AC BADCAE BF E AF  C. Example ofWFP-tree construction  The following is an example of WFP-tree tectonic process. The transaction database is made of the original alarm data in telecommunication networks after pretreatment, which is shown in table 1.

B. WFP-tree Construction algorithm  Starting with the root node, the WFP-tree can be constructed as follows:  Inputs: Transaction database D , minimum weighted support value Wminsup.

Output: WFP-tree.

Algorithm for WFP-tree Construction:  ? Scan the transaction database D once. Collect the descending weighted potential 1-itemsets S according to the count of the support.

? Scan the transaction database D , for each transaction 1j , find all the weighted potential 1- itemset in 1j and sort them as a sequence Si according to the descending order of the support count. Set the pointer point to the new node ofWFP-  tree all the time, and insert the sequence Si to WFP- tree.

? Traverse the WFP-tree from the root, overturn the pointers that pointed to the child node and right brother node, and make them point to father node and tree, nodes with the same item-name are linked in sequence via node-links.

!! ?  40 T  Figure 2. an example of the time window  25 28 30 35 tt=W=5~  : r--- I t-s=2,  !! !!!!!!! I!

Given minimum support count 3, a scan of the database derives the descending weighted potential l-itemsets  S ={I5 , I4 ,I2 ,I1} according to the WFP-tree Construction algorithm. WFP-tree is generated based on the above algorithm. The process in detail is shown in figure 1.

Transaction ID Transaction itemsets  Tt 11, 12, 14, 15  T2 11, 14, IS  T3 12, 14, IS  T4 11, 12, 14, 15  T5 11, 13, IS  T6 12, 14, IS  T7 12, 13, 14, 15  A. Weighted Frequent Pattern Tree (WFP-tree) Constructed  The property of Apriori algorithm no longer exists in weighted association rules mining method, so we can't use the FP-tree [5] which is based on the Apriori algorithm. In this paper, the Weighted Frequent Pattern Tree (WFP-tree) is proposed to mine frequent patterns. WFP-tree is constructed with the potential l-itemset defined as follows:  The nodes of WFP-tree are made of four fields: itemsets names, support counts of itemsets, pointers to the father nodes and the pointer region to the next node link.

Define the pointer to the itemset nodes as the pointer to the same itemset.

Define the root node as follow:  I null I 0 I null I null I Define the HeadTable of the frequent itemsets as follow:  Item name I Pointer to the node link I  TABLE!. ALARM TRANSACTION DATABASES     Figure 3. WFP-tree construction  THE PRE-PROCESSING OF THE ALARMSTABLE II.

The number of 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000original alarms  The number of 369 721 1041 1369 1716 2084 2396 2784 3106 3482  trasactions  The number of 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000original alarms  The number of 350 715 1064 1372 1739 2077 2404 2728 3093 3538 trasactions  The number of 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000original alarms  The number of 166 355 523 678 875 1037 1205 1384 1547 1725trasactions  nodes shows in Figure 4, there are three root nodes among them. The alarms of other nodes are triggered by these three root nodes.

Time window is 10 seconds, the sliding step is 6 seconds  The preprocessing results of the original alarms are shown in table II. The experiment selected three time windows, and produce the number of original alarms from 1000--10000, from which the transactions would be generated to mine the association rules. By the pre-processing, the number of original alarms reduced more than half and the transactions are more suits to association rules mining.

Time window is 5 seconds, the sliding step is 3 seconds  Time window is 10 seconds, the sliding step is 3 seconds  Figure 4. the topology of the network  Figure 5 and Figure 6 show the flex performance of the two algorithms in running time and memory occupied capacity. The minimum weighted support is fixed up to 0.25.

From the figures, although running time and memory occupied capacity with two algorithms increase with the number of transactions linearly, WFP method increases more slowly than FP-growth method, and it has better flex performance than FP-growth algorithm.

I ~NULL15:7 ~  NULL  , , ~JJ ,  NULL NULL  HeadTable  NULL  HeadTable   ........

It ~ ,  15 NULL  14 NULL  12 NULL  11 NULL

IV. EXPERIMENTS  A series of experiments are done to show the performance of these algorithms on AMD Sempron (tm) Processor 2800+ machine with 512MB of main memory and the algorithms are written in JAVA. The topology of twenty  The framework for our proposed algorithm for mining weighted association rules is similar to MINWAL (0) [7], but with some major differences in the details. First, the definition of the potential weighted frequent itemsets is proposed. Second, the construction ofWFP-tree with passing database only once, contrast to the MINWAL (0) which needs pass the database many times. Third, the WFP-tree method needn't produce a large number of conditional pattern trees, which is proved to be useful for mining association rules in telecommunication networks.

700 ~ FP-growth method en 600 ........ WFPmethod---  Q.) 500 E  400E= OJ) 300 t:  ?S 200 t: ;:3  100~  -100 0 1000 2000 3000 4000 5000 6000 7000 8000 9000  The number of alarms  Figure 5. Running time changes with the number of alarms  correlation analysis in telecommunication networks. In this method, the time window operation can converse the original alarms into the transactions which are fit for the mining. The WFP method avoids scanning the database many times and producing a large number of conditional pattern trees.

Algorithm performance tests show this method can improve mining efficiency obviously in comparison with FP-growth method and has better flex performance. It has great significance for rapid and accurate fault location of alarm correlation analysis in telecommunication networks.

