ICICS-PCM 2003  15-18 December 2003

Abstract  Semantic clustering is an important and challenge task for content-based image database management. This paper proposes a semantic clustering learning technique, which collects the relevance feedback image retrieval !mnsach ?on and uses bypergraph to represent images correlation ship, then obtains the semantic clusters by bypergraph partitioning. Experiments show that it is efficient and simple.

1. Introduction  Content-based image retrieval (CBIR) is a set of techniques for retrieving semantically relevant images kom image database based on antomaticaUy derived image features [1,2,3]. Semantic feature extraction and description is the headstone of CBIR. For human, it is not ditFcult to extract the semantic information fiom an image. The backgound knowledge plays an important role in human object recognition. So, manual or semi-automatic image annotation methods are adopted by some CBIR systems.

Image annotation is used in traditional image database systems. It is a tedious work to annotate images in large databases manually. However, without the help of human beings, it is very difficult to extract the semantic content of an image automatically [4].

examples designated by users [1,2,5]. Many feedback image retrieval systems [6,7,8] are developed to support content-based image retrieval. But most feedback approaches do not have a learning mechanism to memorize the feedbacks conducted previously and reuse them in favor of future queries [9].

This paper introduces a semantic learning method by analyzing the relevance feedback image retrieval process, which could cluster the semantic related images into same class. For relevance feedback image retrieval system, the images relevant to query are pointed as positive example, otherwise the images irrelevant to query are pointed as negative examples. It is assumed that these positive examples are related in semantic content. So, we can collect the correlation ships of images fiom retrieval processes.

Semantic retrieval and clustering is carried out based on these association relationships.

For a relevance feedback image retrieval system, it is not reality to capture the semantic relationship of all images by analyzing one query or one feedback. Even by the same query requirement, merent user has respective interest, so the query result may not be consistent with others. The ?correct? semantic of a multimedia is what most people (but not necessarily all the people) agree upon [14]. Noisy information must be identitied and eliminated. So, the leaming algorithm must robust and efficient. Zhuang [9] proposes a graphic theoretic model for incremental relevance feedback in image retrieval. In fact, the correlation ships of images are very complex. We use bypergraph to describe the relationship of images.

Furthermore, we use association rule hypergraph partitioning method [10,11,12] to obtain the semantic clustering.

Association rule hypergraph partitioning algorithm (ARHP) is a new clustering method, which is based on generalizations of graph partitioning, do not require pre specified ad hoc distance functions [10,11,12]. It has used to clustering related items in transaction database.

To resolve the problem, relevance feedback is introduced The rest of this paper is organized as follows. Section 2 into CBIR. Relevance feedback is a power technique, introduces the details of leaming algorithm. The which improves the retrieval performance by adjusting the effectiveness of the algorithm is presented in Section 3.

original query, based on the relevant and irrelevant image Section 4 concludes the paper.

This paper is supported by the Pb. D. Research Fund of Beijing University of Techology  0-7803-8185-8/03/$17.00 0 2003 El33 1581    2. Learning Algorithms  The basic idea of the semantic learning algorithm is very simple. It collects the relevance feedback image retrieval transaction and uses hypergraph to represent images correlation ship, then obtains the semantic clusters by hypergraph partitioning. Following sections 2.1, 2.2, slid 2.3 describes the details of these steps.

2.1 Constructing image retrieval transaction database  In information system, transaction is a useful concept. It is the basic logical unit of execution in an information system.

Image retrieval transaction is a d o l e  query process for relevance feedback image retrieval system.

The outcome R, of relevance feedback image retrieval is represented by an image retrieval transaction< Q, P,N,I  > .

Q is query example. P is positive examples,  N={n, ,n , ,n , ,n ,  ...., n,)  . I is the retrieved images I = {i , , iz , i3, i  ,...., im)  .

The images related in semantic level are called semantic correlation images. Such as Q and p = ...,pn} are semantic correlation images. Q and N = {n,,rzz,n,, n ,...., n,} are not semantic correlation images.

2.2 Representing image correlation using association rule hypergraph  A hypergraph H = ( V , E )  consists of a set of vertices (v) and a set of hyperedges (E) [10,11,12]. A hypergraph is an extension of a gmph in the sense that each hyperedge can connect more than two vertices [10,11,12].

A key problem in modeling data items as a hypergraph is determining that related items can he grouped as hyperedges and determining the weights of the byperedge [10,11,12]. In this case, hyperedges represent the frequent item sets found by the association rule discovery algorithm.

In our system, the set of vertices V corresponds to the set of images being clustered, and each hyperedge (e E E) corresponds to a set of related images. A fieqnent item sets found using the association rule discovery algorithm corresponds to a set of images that have been feedback as positive examples simultaneity. These fkequent images are mapped into hyperedges in a hypergraph.

~ = { p , , p , , p , , p  ,...., p.) . N is negative examples,  ,p2 ,p , ,  p , .

2.3 Learning the semantic cluster  The hypergraph representation can then be used to cluster relatively large groups of related images by partitioning  them into highly connected partitions. We use HMETIS to partition the complex bypergraph gained fiom section 2.2.

=TIS is a multilevel hypergraph partitioning algorithm that has been shown to produce high quality bisections on a wide range of problems arising in scientific applications [11,12,13], such as VLSI application, document category, lxaffic assignment problems. In the beginning, HMETIS partitions the hypergraph into two parts such that the weight of the hyperedges ' that are cut by the partitioning is minimized. Each of these two parts can be further bisected recursively, until each partition is highly connected. At each recursion, =TIS minimizes the weighted hyperedge cut, and thus tends to create partitions in which the connectivity among the vertices in each partition is high, resulting in good clusters. So, bad clusters are eliminated by using the following cluster fitness criterion [13]. The fitness function is used to measure the ratio of weights of edges that are within the partition and weights of edges involving any vertex of this partition. Let e be a set of vertices representing a hyperedge and C be a set of vertices representing a partition. The fitness function that measures the goodness of partition Cis defined as follow [12,13]:  In formula 1, the high fitness value implies that the partition has more weights for the edges connecting vertices within- the partition [12,13]. To filter out vertices that are not highly c o ~ & e d  to the rest of the vertices of the partition, each partition is examined. Connectivity, another measure function is defined in AR". It measures the percentage of edges that each vertex is associated with. High connectivity value suggests that the vertex has many edges connecting good proportion of the vertices in the partition. The connectivity function of vertex v in C is defined as follow [12,13]:  In formula 2, the vertices with connectivity measure greater than a give threshold value are considered to belong to the partition, and the remaining vertices are dropped fiom the partition [12,13].

In AR", the support criteria in the association rule discovery algorithm is also used to 6lter out of non-relevant images. Depending on the support threshold images that do not meet support criteria (i.e., images that do not relevant with other images) will he pruned.

3. Experiment  In order to test the efficiency of mentioned algorithm, an experiment system is established, which adopts the Rich Get Richer relevance feedback strategy [15]. Tests are performed on commercial database Core1 Gallery. It contains 1,000,000 images, being classified into many     semantic groups. We create a test database by randomly selecting 20 categories of Core1 Photographs (30 images in each category). We collect retrieval results of two stages.

In the 6rst stage, 113 times retrieval processes are collected.

The query images are different for these retrievals. In another word, 113 images are point as query example to cany relevance feedback image retrieval. In the second stage, 7196 times retrievals are collected. 600 images are pointed as query examples in these retrieval processes. The query times for eacb image of the test database are merent.

In section 3.1, we illustrate the semantic clustering results using algorithm mentioned in section 2. In section 3.2, we compare the results of different clustering methods. In section 3.3, we illushate the semantic retrieval result.

3.1 Semantic clustering results  Image transaction database are constructed using the method mentioned in section 2.1. The first transaction database ( called I ) includes 113 transactions, which  involves 555 images in the test database. The second transaction database (called II) includes 7196 transactions, which involves 600 images.

To filter out of non-relevant images can be achieved using the support criteria in the association rule discovery process. Depending on the support and confidence threshold, images that don't meet threshold will be pruned.

In the experiment, support threshold is 1%, confidence threshold is IO%, and each hyperedge has 3-15 vertices.

For transaction database I, the hypergraph has 2187190 hyperedges. For transaction database II, the hypergraph has 331102 hyperedges. Fig.2 illushates the detail of hypergmph creating process for transaction database I.

The hypergraph representation can then be used to cluster relatively large groups of related images by partitioning them into highly connected partitions. We use HMETIS to partition the complex hypergraph. Fig. 3 displays the semantic clustering process for transaction database JI.

H : U a i r i o r i  f ".::." -1 --3 a 1 5  -1 -10 -th t - s l c t i o n l l 3 . d a t  hyp-aph W F * O r l  - find asxociafinn r u l s a h - m d g c s  w i t h  a p r i o r i  algorifh vsrnimn 2.9 a9.86.2881> <e> 1996-2881 h r i n t i a n  %welt rsading t m r a c f i o n l l 3 . d a r  _ _  1555 i t e m < = > ,  113 t m r a c t i o n < r > l  done 1 0 . 0 l s l .

smting f t a a  w . r . t .  thir f r o w n s j  ... dono 10.P&1.

=coding loaded t r ~ s a c f i o n s  _ _ _  done lB.P&I.

chscking subsets of sire 1 2 3 4 5 6 7 8 9 10 11 12 13 I4 15 dons 1 3 3 6 l . 8 0 ~ 1 .

n i t i n g  hya-ph _ _ _  12lWl90 h-mdgo<r>l done 1357.33~1.

Fig.2 Creating hypergraph  m p h  lnfb-eion hyp~rgraph3:+. DUtxr: 680. EH=*==: 331182. 9Parer: 28. U B f k f o r :  0.0  ions: HPC, Pn..Paconst-Palss ,  0 1 ~ ~  U b c s h .  Ila Pixsd  Uortioor  s " r = i u c  P a r f i t i o n i n g  ...

B i z s e f i n g  a hm-aph of size luert ic=s-600.  hedgco*33l182, ' h l a n s c - 8 . 5 8 1  Cut of tr ial  8: 0 18.581 Cut Of tri*1. 1: B 18.581 Cut of tr ial  2: 8 18.581 Cut of trial 3: 0 18.581  Cut O f  tr ial  5: 8 10.581 Cut o f ' t r i a l  6: B 18.581 Cut bf tr ial  7: B 18.581 Cut of t r i a l  8: 0 18.501 Cut O f  trial 9: 0 18.581 lk ,mincue  . .. for t h e  hirestion - 8. <avorag0 ~ 8.0) < h l a n c e  * 8.50).

Cut or trial 4: 8 i a .581  ......

sWy for tha mV9 -.tition: Hyperadge Cut: 8 .<aininizs>  s m - o f  EXtsrna1 Degree*: 8 <ninimize>- S o s l e d  Cast: B.&rBBB < n i n i m i z c > a*orp,tion: 3311q.88 <.+..iz?>  P a r t i t i o n  S h e a  5 Extsmal Dagrrek: 351 01 341 81 271 0 1  241 81 291  8 1 341 01  341 8 1  261  8 1  291 8 1  271 8 1 371 81 381 8 1  241 8 1  241 81 271 8 1 351 01  351 01 2 3 t  81 381 01 281 81  -. ring Infc.-tion P u f i t i o n i n g  ria: 8 5 8 . 5 2 3 ~ ~ ~  1,d ria: 2.123mce  Fig.3 hypergraph partitioning     TmactimDatabase I Tnmsactions I Images 1 Support 1 Confidence I Hyperedges Precision I I 113 I 555 I 1% I 10% I 2187190 I 79.5% II I 71% I 6 0 0 1  1% I 10% I 331102 I 85.8YO  Tab.1 Clustering result  The hypergraph is portioned into 20 classes in Fig.3. It takes 14 minutes to gain the clustering result on the computer ( Pentium Pro Pentium 1.4GHz with 256M of RAM ). The relevant images should be partitioned into the same cluster according to the partition rule of HMETIS.

The test database includes 20 categories of Corel Photographs (30 images in each category). We wish that the semantic clustering results could consistent with test database categories. As shown in Fig.3, the number of images for each cluster is liom 23 to 37. It is obviously there is some error in the processing. To verify the clustering results, each cluster is observed manually and a topic is given by the observer. In factually, the topic comes from the categories of Corel Photographs. In another word, the topic is assigned to each cluster according to the category that most images of the cluster belong to. For example, there are 35 images in cluster 1 and 28 images are roses. The topic of the cluster is ?kose?. It is obviously that 7 images are not rose in cluster 1. Tab.1 displays clustering precision for each database. For database 4 the clustering precision is 79.5%. For database I& the clustering precision is up to 85.8%. It shows that the clustering method is efficient.

3.2 Comparing with traditional clustering method  To illustrator the efficiency of semantic clustering method, we compare it with the result by using traditional clustering mechanism. Traditional image clustering technique is based-on visual feature, such as color or texture. Fig.4 displays some images with red color, which are clustered into one cluster by using color feature. It is obviously that these images can be partition into many semantic classes. Fig.5 displays some clusters by using the mentioned algorithm in section 2. It is obviously that the images related in semantic (high level fature) are clustered together.

( C )  Fig.5 Semantic clustering result  3.3 Experiment result of semantic retrieval  The result of clustering could then be used to semantic retrieval for searching similar images. Fig. 6 gives an example of semantic retrieval using the cluster result mentioned in section 3.1. Fig. 7 gives an example of visual feature based retrieval.

In Fig.6 and Fig. 7, the query image is displayed at the upper left corner. As these show that the query images of the two experiments are same, which come from the ?sand? category of Corel database. The best 32 retrieved images are displayed. In Figd, 90% images are belonging to ?sand? category. While in Fig.7, 80% images are not belonging to the ?sand? category. It obviously shows that the clustering method is very useful for semantic retrieval.

FigA Image clustering result based on visual feature     Fig.6 Retrieval result by using the cluster result  Fig.7 Retrieval result based on visual feature  4 Conclusion  A semantic clustering learning technique is proposed in this paper. Different fiom traditional image clustering technique, it exmcts image?s semantic content by analyzing image?s correlation ship, not by image understanding techniques. The basic idea of the semantic learning algorithm is very simple. It collects the correlation ships of images !?om retrieval processes, uses hypergraph to represent the images relationships, and obtains images semantic clustering using bypergraph partitioning method.

Experiments show that it is efficient and simple.

Reference  [I] Yong Rui, Thomas S. Huang, and Shih-Fu Chang.

?Image Retrieval. Past, Resent, and Future?. Invited paper in Int Symposium on Multimedia Information Processing, Dec 11-13,1997, Taipei, Taiwan  [Z] Catherine. Lee, Wei-Ymg Ma, Hongiiang Zhang.

?Information Embedding Based on User?s Relevance Feedback for Image Retrieval?. Technical report HF? Labs, 1998.

[3] James Z. Wang, JiaLi and Gio Wiederhold.

?SIMpLIcity: Semantics-sensitive Integrated Matching Analysis And Machine Intelligence, Vol. 23, No. 9, September2001.

[4] J. R Smith, Shih-Fu Chang. ?Automated Image Retrieval Using Color and Texture?. Columbia University, Dept. of Electrical Engineering and Center for Telecommunication Research. 1995  [5] Yong Rui, Thomas S. Huang, Sharad Mehtra,  and Michael mega ?Relevance Feedback a power tool for interactive content-based image retrieval?. IEEE trans. Circuits and systems for video technology, vol.

8, no. 5, pp. 644-655, Sep. 1998.

[6] Y.Lu,C.-H.Hu,X.-Q.Zhu,H.-J.ZhangandQ.Yang, ?A Unified Framework for Semantics and Feature Based Relevance Feedback in Image Retrieval Systems?, ACM Multimedia, 2000.

[7] I. J. Cox, U L Miller, S. M Omohundro, P. N.

Yianilos, ?F?ichunter: Bayesian relevance feedback for image retrieval system?, In Intl. C b .  On Pattern Recogoition, Vienna, Austria, August 1996, pp.361- 369.

[8] Jun Yang, Liu Wenyin, Hongjiang Zhang, Yueting Zhuang . ?An Approach to Semantics-Based Image Retrieval and Browsing?. International Workshop on Multimedia Database Systems, Taipei, Sept. 2001.

[9] Yueting Zhuang, Jun Yang, Qing Li and Yunhe Pan.

?A Graphic-Theoretic Model For Incremental Relevance Feedback In Image Retrieval?. ICE2002  [lo] E. H. Han, G. Karypis, V. Kumar, and B. Mobasher.

?Clustering based on association rule hypergmphs?.

In workshop on Research Issues on Data Mining and Knowledge Discovery, Tucson, Arizona, 1997, pp.9- 13.

[ l l ]  E. H. Han, G. Karypis, V. Kumar, and B. Mobasher.

?Hypergraph based clustering in high-dimensional data sets: A summary of results?. Bulletin of the Technical Committee on Data Engineering, 1998,  [12] D. Boley, M Gini, R Gross, E H  Han, K. Hastings, G. Karypis, V. Kumat, B. Mobasher, J. Moore.

?Partitioning-Based Clustering for Web Document Categorization?. Decision Support Systems (1999) Vo1.27, pp.329-341.

[I31 E. H. Han, G. Karypis, V. Kumar, and B. Mobasher.

?Clustering In A High-Dimensional Space Using Hypergraph Models?. Technical Report TR-97-063, Department of Computer Science, University of Minnesota, Minneapolis, 1997.

[14] Q. Li, J. Yang, Y. T. Zhuang, ?Web-Based Multimedia Retrieval: Balancing Out between Common Knowledge and Personalized Views?, Web Information Systems Engineering (WISE?OI), Organized by WISE Society and Kyoto University, Kyoto, Japan, 3-6 December 2001, Volume 1, pp.92- 101.

[15] L. J. Doan, W. Gao and J. Y. Ma ?A Rich Get Richer Strategy for Content-Based Image Retrieval?, Fourth Systems, Lyon, France, November 2000.

V01.21, No.1, pp.15-22.

