<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Alpha Galois  Lattices

Abstract In many applications there is a need to represent a large number of data by clustering them in a hierarchy of classes.

Our basic representation is a Galois lattice, a structure that exhaustively represents the whole set of concepts that are distinguishable given the instance set and the representa- tion language. What we propose here is a method to re- duce the size of the lattice, and thus simplify our view of the data, while conserving its formal structure and exhaus- tivity. For that purpose we use a preliminary partition of the instance set, representing the association of a ?type? to each instance. By redefining the notion of extent of a term in order to cope, to a certain degree (denoted as ?), with this partition, we define a particular family of Galois lattices de- noted as Alpha Galois lattices. We also discuss the related implication rules defined as inclusion of such ?-extents.

1 Introduction One way to cluster instances in classes organized in a hi- erarchy is to build a concept lattice [4], a structure in which each node corresponds to a class represented as its extent (the set of the instances of the class) and its intent (the common properties of these instances expressed as a term of a given language). Concept lattices express all the sub- sets of instances distinguishable when using the language.

Various techniques have been proposed to reduce the size of concept lattices by eliminating part of the nodes. In par- ticular, frequent concept lattices [11, 10] represent the top- most part of a concept lattice, i.e. the nodes which extent cardinality exceeds a given threshold. In our approach, we reduce the number of nodes of the concept lattice by ac- counting in a flexible manner a prior partition of data. The partition is a set of basic classes which are clusters of in- stances sharing the same basic type. Basic classes are then used in order to add a local criterion of frequency to the notion of extent as follows: an instance i now belongs to the ?-extent of a term T of the language, when it belongs to ext(T ), the extent of T , (i.e. i has every T?s property), and when at least ? % of the instances of the basic class of i also belong to ext(T ). Defining ?-extents results in a family of flexible concept lattices that we call Alpha Galois lattices. For instance, in an Alpha Galois lattice represent- ing the C/net electronic catalog, with ?= 92, the ?support? property will appear since in the HardDrives basic class, 92 % instances were sold with support. Actually, this prop- erty is not frequent (13 products out of 2274, i.e. 0.5 %) and so would not apppear in a frequent concept lattice.

We show that the set of nodes of an Alpha Galois Lattices is a subset of the set of nodes of the corresponding concept lattice and that the values of ? define a total order on Alpha Galois lattices. Finally, the inclusion of ?-extents corre- sponds to particular implication rules, representing some kind of approximation of usual implication rules (i.e. as- sociation rules with confidence 1), that depends on the a priori partition of the data. Such ?-implication rules can be extracted in the same way that ordinary implication (and association) rules are extracted from concept lattices.

The general framework of Galois lattices is given in sec- tion 2. In section 3, we present Alpha Galois lattices. Sec- tion 4 presents experimental results on the C/net data set and discuss the ability of such a representation to deal with exceptional data (? near 0 or near 100). Finally, discussion and conclusion are given in section 5.

2 Preliminaries and definitions    2 Preliminaries and definitions Detailed definitions, results and proofs regarding Galois connections and lattices may be found in [1], and, in the framework of Formal Concept Analysis in [4] . However we need for our purpose a more general presentation than 0-7695-2142-8/04 $ 20.00 IEEE the one in [4] as our extents are different from those used in concept lattices .

Definition 1 (Galois connection and Galois lattice) Let m1: P ? Q and m2: Q ? P be maps between two lattices (P,?P ) and (Q,?Q). (m1, m2) s called a Galois connection if for all p, p1, p2 in P and for all q, q1, q2 in Q: C1- p1 ?P p2 ? m1(p2)?Q m1(p1) C2- q1 ?Q q2 ? m2(q2)?P m2(q1) C3- p ?P m2(m1(p)) and q ?Q m1(m2(q)) Let G={ (p,q) with p an element of P and q an element of Q such that p=m2(q) and q = m1(p)}. Let ? be defined by: (p1,q1)? (p2,q2) iff q1 ?Q q2, then: (G,?) is a lattice called a Galois lattice. When necessary it will be denoted as G(P,m1, Q,m2) Example 1 The two ordered sets are (L, ?) and (P(I), ?).

L is a language a term of which is a subset of a set of attributes A = {t1, t2, t3,a3,a4,a5,a6,a7,a8}. Here c1 ? c2 means that c1 is less specific than c2 (e.g. {a3,a4} ? {a3,a4,a6}), I is a set of individuals = {i1,i2,i3,i4,i5, i6,i7,i8}. Let int and ext be two maps int: P(I) ? L and ext: L ? P(I) such that int(e1) is the subset of at- tributes common to all the individuals in e1 and ext(c1) is the subset of instances of I that belongs to the term c1, i.e.

the set of individuals which have all the attributes of c1.

The example is represented in Figure 1 where each line is an individual and each column is an attribute. Together with L and P(I), int and ext define a Galois connection. We also have G={(c,e) where c belongs to L, and e belongs to P(I) and are such that e=ext(c) and c=int(e)}. Then (G, ?) is a Galois lattice denoted as a concept lattice.

Figure 1. Example 1. Tab(i, j) = 1 if the jth attribute be- longs to the ith individual.

In concept lattices, a node (c, e) is a concept, c is the intent and e is the extent of the concept. A characteristic property of Galois lattices is that each node (c, e) is a pair of closed terms, so we have in particular int(ext(c)) = c, and c is the greatest term whose extent is e = ext(c). So the intent c is a representative of the equivalence class of terms whose extent is e. We refer to the corresponding equiva- lence relation as ?L.

Example: In example 1, ext({a4}) = {i1, i3, i4}, int({i1, i3, i4}) = {a4, a6}. The term {a4, a6} is there- fore a closed term as int(ext({a4}) = {a4, a6} 3 Alpha Galois lattices In this section we start with the concept lattice G(L, ext,P(I), int) as previously examplified. Then we modify ext to obtain an equivalence relation ??L coarser than the original one. This results in larger equivalence classes on L and therefore in less nodes in the correspond- ing Galois lattice.

The new ext function relies on the association of a pre- defined type to each individual of I . The corresponding clusters of instances are denoted as basic classes.The first  idea is then to gather such clusters rather than individuals (see [9]). For instance, let us assume that the attributes t1, t2, t3 express the types of the individuals of example 1.

These types corresponds to three basic classes BC1, BC2, BC3 whose descriptions are the following: BC1={i1,i2}, int(BC1)= {t1,a3,a6}; BC2={i3,i4,i5}, int(BC2)= {t2,a6}; BC3={i6,i7,i8}, int(BC3)= {t3,a3,a6,a8}.

Let us consider the concept lattice built on a new set of in- dividuals: {bc1,bc2,bc3} (let us call them the prototypes of their respective basic classes) such that, for any index i, int(BCi) = int({bci}). This concept lattice is represented    int(BCi) = int({bci}). This concept lattice is represented in Figure 2 as a particular case of Alpha Galois lattice, and is much smaller than the original concept lattice (6 vs19 nodes).

Now, by relaxing the constraint that enforces to consider only whole basic classes we define Alpha Galois lattices.

Definition 2 (Alpha satisfaction) Let ? belong to [0,100].

Let e={i1, . . . , in} be a set of individuals and T be a term of L. Then, e ?? satisfies T (e sat? T ) iff | ext(T )? e | ? |e|.?100 We check now whether at least ? % of a basic class sat- isfies a term of L and add this constraint to isa, the mem- bership relation between individuals and terms: Definition 3 (Alpha membership and Alpha extent) Let BC be a partition of the set of individuals I as a set of basic classes. Let us denote as BCl(i) the basic class to which belongs i, and let T be a term of L, then: i isa? T iff i isa T and BCl(i) sat? T The ?-extent of T in I w.r.t. BC is then: ext?(T ) = {i ? I | i isa? T } Example. Let T={a6,a8}, ext(T) = {i1,i3,i5,i6,i7,i8}. BC2 0-7695-2142-8/04 $ 20.00 IEEE sat60 T since | ext(T ) ?BC2 |? |BC2|.60100 . So we have i3 and i5 isa60 T . We also have BC3 sat100 T , as 100 % of BC3 belong to the extent of T , and so BC3 sat60 T .

So we have i6, i7, and i8 isa60 T and isa100 T . As a result, ext0(T)= ext(T) = {i1, i3,i5, i6,i7,i8}, ext60(T)= {i3,i5,i6,i7,i8} and ext100(T)= {i6,i7,i8} We now define the corresponding Alpha Galois lattices: Proposition 1 (Alpha Galois lattices) Let E? = {e ?

P(I) | ?i ? e, | e ?BCl(i) | ? |BCl(i)|.?100 }.

Then, int and ext? define a Galois connection on L and E? and the corresponding Galois lattice G?= G(L, ext?, E?, int) is called an Alpha Galois lattice.

When ? is equal to 0, E? = P(I) and ext? = ext. There- fore, G0 simply is is the corresponding concept lattice. The extents of the nodes of G100 are whole basic classes gath- ered and here the Alpha Galois lattice is the concept lattice obtained by considering as instances the prototypes of the basic classes (Figure 2).

Figure 3 presents the topmost part of G60. Note that intents of the nodes of G100 are also intents of nodes of G60 that in turn are all intents of nodes of the original con- cept lattice G0 Figure 2. The G100 Alpha Galois lattice of example 1 {a6,a8}{i3,i5,i6,i7,i8} {a6}{i1,i2, ... ,i8} {t2,a6}{i3,i4,i5} ?t3,a3,a6,a8 ??i6,i7,i8 ? {t2,a4,a6}{i3,i4} ?a3,a6 ??i1,i2,i6,i7,i8 ? Figure 3. ? = 60 : The topmost part of G60 of example 1.

New nodes, w.r.t. G100 are the lighter ones.

In [3] the authors extend formal concept analysis to more  sophisticated languages of terms and use the notion of pro- jection as a way to obtain smaller lattices by reducing the language. [9] also introduces extensional projections that reduces the concept lattice by modifying the notion of ex- tent. It is easy to show that there exists an extensional pro- jection proj? such that E? = proj?(P(I)) and that then ext?=proj? ? ext. Applying a theorem presented in [9] allows then to prove Proposition 1. By changing ext, an extensional projection changes a Galois lattice to a smaller one corresponding to larger equivalence classes on L.

An interesting case is the one of the partition {I} in which we consider only one basic class, i.e. the case in which all individuals share the same type. The correspond- ing Alpha Galois lattice is the topmost part of the concept lattice defined by the same language L and the same set I of individuals. The lattice then only contains nodes whose    of individuals. The lattice then only contains nodes whose extents have a size greater than ?100 |I| (plus the bottom node whose extent is empty). This structure has been previously investigated and is denoted as an Iceberg (or frequent) Con- cept lattice [10, 11] where ?100 corresponds to the value of the support threshold minsupp.

4 Experiments The program ALPHA that computes Alpha Galois lat- tices relies on a straightforward top-down procedure in which nodes are generated as follows: a current node intent c is specialized by adding a new attribute a, then int?ext? is applied to c?{a} in order to obtain a closed term; the corre- sponding node has then to be compared to previous nodes in order to avoid duplicates. We have experimented ALPHA on a real dataset composed of 2274 computer products ex- tracted from the C/Net catalog. Each product is described using a subset of 234 attributes. There are 59 types of prod- ucts and each product is labelled by one and only one type.

In our first experiment we have built G100 using the whole data set (so practically restricted to 59 prototypical instances), Then we smoothly lowered the value of ? and recomputed the corresponding G? lattice. As we can see hereunder the number of nodes (and so the CPU time) exponentially grows from 211 concepts to 107734 as ?

varies from 100% to 92%. This means that it is here impossible to have a complete view of the data at the level of instances (?=0): Alpha 100 98 96 94 92 Nodes 211 664 8198 44021 107734 We are first interested in what happens with high val- ues of ?. Starting from G100, new nodes appear as ?

slowly decreases. For instance at ? = 99%, a new node appears under the G100 node standing for the basic class Laptop. The intent of the new node now contains the attribute ?network-card?. This is due to the fact that most instances of the class Laptop do possess a network card. So by relaxing the basic class constraint we get rid of the few, 0-7695-2142-8/04 $ 20.00 IEEE exceptional, instances of Laptop found in the catalog and that were hiding this ?default? property of Laptop in G100.

So, by slowly decreasing ? from 100 % we have a more accurate view of our data by revealing properties that are relevant to at least some basic class.

A second experiment with 24 basic classes and 1187 objects (some large basic classes are removed thus resulting in a more homogenous class size distribution) shows that the size of Alpha Galois lattices can be really different from the one of frequent lattices:  Alpha Values 100 80 50 30 0 Alpha Nodes 158 842 1493 1900 2202 Frequent Nodes 2 18 18 50 2202 Here as ? slowly grows from 0 to small values (say 10%), some instances, which behavior is exceptional within their basic class w.r.t. some term t of L, will dis- appear from the corresponding ?-extent. These instances are exceptional as they belong to the extent of the term t whereas very few instances of the same basic class do belong to this extent. As a result some properties that are very unfrequent within some basic class will no more be allowed to discriminate concepts. For example, only few Laptops have the property ?Digital-Signal-Protocol?, and so when ? = 6% , nodes which intent contains the ?Digital Signal Protocol? property no more include instances of Laptop in their extent. As a result terms including? Digital- Signal-Protocol? become equivalent whenever their extent only differed because of Laptop instances, thus resulting on a smaller (and so simpler) lattice.

5 Related work and conclusion Recent work in Knowledge Representation and Machine    Recent work in Knowledge Representation and Machine Learning investigates Galois connections and lattices based on languages of terms more complex than those used in con- cept lattices, so modifying the notion of intent of a con- cept [4, 2, 6, 3]. We have shown here that by restricting the notion of extent of a term with respect to a a priori partition of the instance set I , we also modifies the lattice of extents which is no longer P(I) and we obtain a new family of Galois lattices. As mentioned above Iceberg (or frequent) concept lattices [11, 10] formally are Alpha Ga- lois lattices in which all individuals belong to the same ba- sic class. Besides, the implication rules related to Alpha- Galois lattices simply correspond to inclusion of ?-extents and a canonical basis of such ? ? implication rules can be extracted from the Alpha-Galois lattices in the same way as from frequent concept lattices (the intents of the nodes are usually denoted as closed frequent itemsets. Association rules are then built using closed frequent itemsets [7, 12]).

Note that ?? implication rules inherit from the Galois lat- tice structure interesting properties (as transitivity) unusual when dealing with ?approximate? rules.

About construction of Alpha Galois lattices, it should be interesting to adapt efficient algorithms aimed at the con- struction of concept lattices (e.g. [5]). Now there is another particular set theory view of a priori partitioned data re- ferred to as rough sets theory ([8]). As the partitioning on rough sets expresses some indiscernibility between individ- uals of the same basic class, the rough sets view results in some degree of membership of i to an extent e, even if the individual i does not belong to e. At the contrary in the Al- pha Galois lattice view, membership of i to an extent e is a prerequisite for ?-membership. A fortunate consequence of the latter view is the opportunity to construct Galois lattices.

As a conclusion there is still much work to experiment and to investigate theoretical issues and practical use of Al- pha Galois lattices and corresponding ?-implication rules.

However we do believe that they represent a flexible tool to investigate data and handle exceptions that are relative to a preliminary view of the data.

