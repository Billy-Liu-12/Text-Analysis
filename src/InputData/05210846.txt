Architecture Development for Efficient Sensor Tag Management

Abstract? The possible integration of sensing information with RFID data can be accomplished by using Sensor tag instead of using RFID tag only. Although EPCglobal provides standard architecture framework for processing RFID information, the diverse RFID applications and services necessitate collection and manipulation of integrated RFID-sensing information at the same system. Systems deploying Sensor tag can achieve both ID data and sensing data simultaneously. However, it is a big system challenge to monitor sensing data and manage sensor tags using existing standards. Moreover, efficient control and management of Sensor tag moods and states is also an issue in saving tag battery power and storing necessary sensing information in sensor tag memory. To fulfill all application requirements and manipulation of RFID-sensing data require efficient management of Sensor tag. In this paper, we propose a new system architecture for efficient Sensor tag management based on EPCglobal framework.

Keywords-Active Sensor tag;Active RFID;RFID-sensing data

I. INTRODUCTION The evolution of sensor technology and Radio Frequency  Identification (RFID) research makes possible integration [1,2] of RFID data and Sensing data using same RF tag, called Sensor Tag [3,4]. Sensor tags are, in general, characterized by RF identification, user memory and sensing information. RF capable sensor tags having user memory store sensing data to its memory and can transfer that data to the reader when it is in reader interrogation area. While comparing EPCglobal [5] tag class structures [6], active tags enable a greater communication range, can be applied to metal objects, and allow easy addition of sensing modules [7,8]. Therefore, active RFID tag can be used as senor tag [9], enabling simultaneous id and sensing data transmission using same RF infrastructure. A large number of such tags can be deployed in cold chain management [10,11], supply chain management systems and harbor logistics systems where huge amount of sensing data is generated.

Consequently, sensor tag is suitable for continuously monitoring temperature-sensitive perishables, controlling product temperature and humidity, elimination of container damage due to huge inside pressure, and automatic tracking of product location. Thus, it is possible to create a physically linked world in which every item is numbered, identified, cataloged and tracked with various sensing information.

However, to provide proper system services using sensor  tags, it is necessary to control and efficiently manage tags carrying id and sensing information.

Although Sensor Tag is used to acquire integrated RFID- Sensing information, the technology used in its management and control is still in its infancy. Still there is no global standard provided for RFID-Sensing data collections. In most RFID applications, heterogeneous tags such as RFID tag (only id data) and active sensor tag (RFID-sensing data) from various vendors are used and RFID reader must be able to retrieve data from these heterogeneous tags. Therefore, compatibility and interoperability become a major system concern in using Sensor Tag. Also, sensor tag must continuously store sensing information in its tag memory.

But limited memory and battery power is big challenge in system deployment. Moreover, system suffers from bulk air load while transmission of sensing data in tag memory takes place. However, faster tag collection is possible using active RFID System [12], still controlling sensor tag moods and states is important for saving tag battery power and sensing values in tag memory.

We develop an efficient Sensor Tag Management (SenTM) architecture based on EPCglobal Architecture Framework [13]. Our state-of-the-art system architecture follows standard active air interface ISO/IEC 18000-7 [14] to manage and control sensor tag, tag moods and states to store battery power with sensing information. SenTM provides several APIs for receiving sensing queries, managing tags and readers, monitoring sensing values, reporting alarms and notifications to the users. SenTM also provides four service types that together form core service module for an efficient sensor tag management.

In this paper, we focus on the development of efficient Sensor tag management architecture using existing standards. We analyze all the necessary standards and background technologies involved with active RFID systems, existing management architectures and related application scenarios to extract all the system requirements.

The main contribution of this paper is to design efficient management architecture for sensor tag that incorporates all the management requirements to provide compatibility and global interoperability of the system.

The structure of this paper is as follows. Section 2 describes lists of related works. Section 3 analyzes sensor tag application scenarios and active air interface standards to extract system design requirements of SenTM with some unique services. In section 4, requirements are used as brick   DOI 10.1109/SENSORCOMM.2009.103     features to build the proposed system to its fundamental to final architecture. We conclude Section 5 with avenues for further research.



II. RELATED WORKS  A. EPCglobal Architecture Framework The Architecture Framework [13] published by  EPCglobal Inc. [5] provides a comprehensive overview of the EPCglobal standards. It shows how the different interface standards are related and outlines the principles that have guided the design of the standards. The architecture framework consists of three layers: (1) Identification layer, (2) Capture layer and (3) Exchange layer; and it provides several standards for all the three layers. The EPCglobal Architecture Framework does not dictate a particular system architecture, but leaves this to implementors who can choose the system architectures that are most appropriate for their deployments. Therefore, the architecture presented in this paper is based on EPCglobal Architecture Framework because it helps easy adaptation of the system over the world.

The interaction between RFID reader and various types of tags takes place at the bottom layer of EPCglobal Architecture Framework shown in Fig. 1. The interoperability problem that arises in reading heterogeneous RFID tag (tag id) and active Sensor tag (tag id and sensing data) can be resolved by using readers compliant with international standards, controlling and managing readers using standard management protocol. ISO/IEC 18000-7 defines standard for active RFID systems and EPCglobal provide standard Reader Management (RM) Protocol to control and manage the reader.

Figure 1. EPCglobal Architecture Framework  B. EPCglobal Reader Management (RM) Host can control and manage RFID reader device by  implementing RM Protocol [15] specified by EPCglobal.

The standard provides 3 message channels between reader and host to manage the reader device. Fig. 2 shows the 3 channels: (1) Command Channel, (2) Alarm Channel(s) and (3) Notification Channel(s). Command channel carries request from host to reader and response from reader to host.

Alarm Channel(s) carries asynchronous reader health and status alerts to the host. Notification channel(s) delivers tag id and tag memory data such as sensing information to the host using standard reader protocol (RP) [16].

Reader Device  Application  R e a d e r L  a y e r  AlarmCommands Notification  Reader Manager (RM)  Reader Management Protocol  C o m  m a n d C  h a n n e l  A la  rm C  h a n n e l  N o tific  a tio  n C  h a n n e l  Reader Device  ApplicationApplication  R e a d e r L  a y e r  R e a d e r L  a y e r  AlarmCommands Notification AlarmCommands Notification  Reader Manager (RM)Reader Manager (RM)  Reader Management ProtocolReader Management Protocol  C o m  m a n d C  h a n n e l  C o m  m a n d C  h a n n e l  A la  rm C  h a n n e l  A la  rm C  h a n n e l  N o tific  a tio  n C  h a n n e l  N o tific  a tio  n C  h a n n e l   Figure 2. EPCglobal Reader Management (RM) Architecture  C.  Active Tag Memory Accessing Mechanism Active RFID Reader uses Active Air Interface to access  tag memory of an active tag. There are two ways to access the tag memory: (1) implementing reader commands following ISO/IEC 15961 [17] and 15962 [18], (2) implementing RF-interface commands based on ISO/IEC 18000-7.  Fig. 3 depicts the basic components of active reader and how it accesses active tag memory data by using active air interface. Command/Response Unit of an active reader receives the request from host and converts the request to ISO/IEC 18000-7 air interface commands. Finally, reader uses tag driver to access the data stored in the tag memory.

Active Reader Active Tag  System Data  Tag ID  Memory Data  Convert to ISO/IEC 18000-7 Commands  Tag Driver  Command / Response  Unit        Request  Response  ISO/IEC 18000-7  Store data in Tag memoryReceive Request and Send Response  Air Interface Active Reader Active Tag  System Data  Tag ID  Memory Data  Convert to ISO/IEC 18000-7 Commands  Tag Driver  Command / Response  Unit        Request  Response  ISO/IEC 18000-7  Store data in Tag memoryReceive Request and Send Response  Air Interface   Figure 3. Active Reader and Active Tag Communication

III. SENTM REQUIREMENTS  A. Cold Chain Application Analysis Cold Chain Management (CCM) System is the biggest  application domain for sensor tag deployment. Fig. 4 shows an example where sensor tag is attached to item at processing     plant and tag logs the sensing value of the item until to Store Delivery. Table1 shows the product temperature history from processing plant to store delivery. From the table we find, product temperature exceeds threshold limit when it is at the Transport DC.

Figure 4. Product flow in CCM Application  TABLE I.  TEMPERATURE RECORD IN CCM APPLICATION  Although it is necessary to send an instant alarm/notification when product temperature exceeds threshold limit, lack of proper management and system services causes loss in product quality as well as tag battery power. Moreover when battery becomes low, there occurs a significant malfunction in sensing values because sensor requires continuous battery power to store sensing values in tag memory. Therefore, immediate measures should be taken when tag battery falls down.

B. Enhanced Active Air Interface ISO/IEC 18000-7 defines a list of commands active  reader to active tag communication. Those commands could be divided into 5 broad categories such as Information command, Memory command, Security command, Collection command and Mood command. To operate active tag as sensor tag, management system requires extended air interface commands such as Logging ON/OFF, Sensing ON/OFF, Set Threshold, Set Alarm condition, Clear Sensing Memory, Reboot etc.

C. Required Services and APIs An efficient tag management system should provide  various services for configuring tag, controlling its moods and states, managing device and data, handling events and processing queries, report generation and data storage.

Table2 shows the required service types and their description. An efficient management must also provide API for those services.

TABLE II.  SENTM APPLICATION SERVICES  Types of Services Description  Tag Command  and Control Services (TCCS)  Provides service for tag configuration, tag mood and state control.

Device and Data Management Services (DDMS)  Provide services for active reader and tag device management with tag data services.

Event and Query Processing Services (EQPS)  Listens to the events, handles events happened and process registered queries.

Data Storage and Output Services (DSOS)  Stores sensing data in data base, generate reports and sends to the users.



IV. SENTM ARCHITECTURE DEVELOPMENT  A. Fundamental Architecture SenTM architecture development is based on the  EPCglobal Architecture Framework. EPCglobal Architecture Framework Active RFID tag integrated with sensing module is considered as active sensor tag require active air interface to communicate with active reader for sensing data transmission. Therefore, EPCglobal Architecture Framework requires minor modification to represent SenTM application, which is shown in Fig. 5.

Active Air Protocol  A ct ive Reader  Sensor  Tag  Manager (STM)  Active Sensor Tag Management  Active Sensor tag S   Figure 5. Modification of EPCglobal Framework for SenTM application  Here we propose the modification of active tag memory to serve as active sensor tag. The tag memory is divided into several blocks to store tag configuration, tag status bits and sensing values. At initial stage, tag is configured with its TagID, threshold value, sleep time etc. Tag status bit is used to set bit value tag memory is full or battery level becomes low. Status bit is important get the tag status especially when tag arrives long after it is out of the reader zone. As tags move frequently in and out of the reader interrogation area, SenTM application can check status of the tag by checking only its status bits. To configure tag or to retrieve sensing values, SenTM uses active tag memory access mechanism of active RFID reader. SenTM requests are first sent to the reader that converts the request to ISO/IEC 18000-7 air interface commands. Reader then retrieve tag memory data and respond to SenTM application. Fig. 6 shows the fundamental SenTM Components and communication mechanism between SenTM application and active sensor tag using active RFID reader.

Location Time Temp (0C) Remark Processing Plant 01:00 -1  C  Below Threshold  Transport to DC  03:00  1 C  Exceed Threshold  Storage/Pick/Loading  05:00  -1 C  Below Threshold  Store Delivery  08:00  -1 C  BatteryLow (No Sensing)  Sale at Store  11:00  -1 C  BatteryLow (No Sensing)  1. -10C-10C  Processing plant Transport DC  2. 10C10C 3. -10C-10C  Storage/Pick/Loading  4. -10C-10C  Store Delivery  5. -10C-10C  Sale at Store     Active Reader  Command / Response  Unit  Convert to ISO/IEC 18000-7  Commands  Tag Driver1       Application Tag Management  TM Services  ISO/IEC 18000-7  Active Tag Memory Stores Sensing Values  Active Reader Processes Request and Response from Sensor Tag Manager  Active Air Interface  TCCS  DDMS  DSOS  EQPS Request  Response  Active Sensor Tag  System Data Tag ID  Memory Data  Sensing values  Configuration Tag Status bits  Active Sensor Tag Management Application  Figure 6. Fundamental SenTM Components  B. SenTM Core Object Model-CCNA Command, Control, Notification and Alarm (CCNA)  together forms the SenTM core object model. There are three objects that form SenTM Command: (1) DeviceSetting, (2) AlarmSetting and (3) Sensing Query.

DeviceSetting object sets and configures the device where as AlarmSetting and SensingQuery object is related with SenTM Reports object. SenTM administrative user uses the SenTM Control object to control the tag moods and states.

The detailed description of the CCNA objects is given in Following Table3.

TABLE III.  SENTM CORE OBJECTS  SenTM Commands Description Device Setting Configure tag such as sets TagID, sensor sampling time,  sampling duration, sleep time etc.

Alarm Setting Sets Alarm Conditions such as Threshold, Battery Limit etc.

Sensing Query Sends user Query to requesting Sensing value or tag status.

SenTM Controls Description Tag State Control tag state such as sleep to wake up, active to inactive  etc.

Tag Mood Control tag mood such as Logging mood ON/OFF, Sensing mood ON/OFF etc.

Tag Alarm Create and delete tag alarm  SenTM Reports Description Data Report Sends data report in response to user query  Alarm Notification Sends asynchronous alarm notification to the user.

The high level relationship between CCNA objects and Sensor Tag Management object illustrated in Fig. 7. The gray color components describe CCNA objects and the white color components represent the objects related to each CCNA object. SenTM Reports are sent to the user in two ways: (1) Synchronous data report and (2) Asynchronous notification. SensorDataReport object provide Synchronous data report while AlarmNotification object provide Asynchronous notification to the user when any alarm event occurs.

Figure 7. SenTM core object Model  C.  SenTM Control Flow As shown in the CCNA object model in Fig. 7, the  SenTM control object controls the sensor tag states, moods and the alarms. During sensor tag life cycle, a tag has several states and moods while it generates alarm if any unexpected tag condition occurs. Table4 provides the detailed description of tag moods, states and alarm types in a sensor tag life cycle. It is important to control and manage these objects in order to extend tag battery life as well as to provide reliable system services.

TABLE IV.  SENSOR TAG CONTROL OBJECTS  Tag Mood Description Sensing ON/OFF Tag starts to sense when Sensing is ON but does not store  sensing values in its tag memory.

Logging ON/OFF Tag starts to log/store sensing values in its tag memory when Logging is ON.

Beep , Flash bit ON/OFF Beep or Flash bit becomes ON when any alarm condition occurs if tag is out of reader zone.

Tag States Description Active/Inactive If tag is active it is ready to sense and RF communication is  also activated otherwise converse.

Sleep/Wakeup In sleep state tag has no RF communication and saves battery life.

Lock/ Unlock Protect tag information reading when it is locked  Tag Alarm Types Description BatteryLow Alarm occurs when battery level falls below 80%  SensingThreshold Alarm occurs when sensing value exceeds threshold limit.

SensingMemoryFull Alarm occurs when tag memory becomes full    A flowchart of SenTM control flow in a sensor tag life cycle is shown in Fig. 8. We can divide a sensor tag life cycle and its control flow, broadly into 3 stages. First stage can be named as Configuration and Activation stage. At this stage, tag is activated; tag information and threshold condition is configured. For tag security Lock command is used to lock the configured values. Tag Sensing and Logging is activated so that tag starts to sense and store the sensing values in its tag memory. Then control switches to second stage- Checking and Alarm generation. Sensing values and alarm conditions (BatteryLow, ThresholdExceed, MemoryFull) are checked continuously and alarms are generated accordingly.

ControlSensor Tag Management  SensorDataReport  TagAlarm  0..*  0..*  0..*  SensingData TagStatus  Command 0..*  AlarmNotification  TagMood  TagState  DeviceSetting AlarmSetting SensingQuery      Figure 8. SenTM Control Flow during Sensor Tag life cycle   Final stage of the control flow is- Action and De-  activation. When an alarm event occurs, separate alarm actions are taken depending on the types of the event. If alarm type is BatteryLow, tag Logging and Sensing is de- activated to save tag battery life and to protect loss of sensing information stored in the tag memory. Similar action is taken to save tag battery power, if sensing value exceeds threshold limit. In case of MemoryFull alarm, a check is necessary whether tag is in reader area or out of the reader area. Read and Reset sensing memory action is taken when tag is inside the reader interrogation zone. But, tag status bit is set or Beep/Flash-bit ON when tag is out of the reader zone, in order to provide reliable system services.

D. 3-Layer SenTM Architecture Fig. 9 shows the detailed block diagram of SenTM  architecture for efficient sensor tag management. It is a 3- layer architecture: (1) Capture Layer, (2) Service Layer and (3) Application Layer. Capture Layer receives integrated RFID-Sensing data from active sensor tag, Application Layer provides necessary API(s) to the user, while Service Layer provides all the services required for efficient sensor tag management.

SenTM Capture Layer is the bottom layer of SenTM architecture. It provides common reader interface for both active and passive reader types. Active Reader Layer is used for capturing streaming RFID-Sensing data from active sensor tag while Passive Reader Layer is used to read passive RFID tag data. Captured event is dispatched by Message dispatcher and sent to the SenTM Service layer for further processing.

SenTM Service Layer is the core of SenTM Architecture.

This layer provides 4 types of services required by the application. These are: (1) Tag Command and Control Services (TCCS), (2) Device and Data Management  Services (DDMS), (3) Event and Query Processing Services (EQPS) and (4) Data Storage and Output Services (DSOS).

Tag command and controlling is performed by TCCS.

TCCS consists of Command and Controller modules while DDMS consists of four management modules. The Active Reader and Tag manager modules used for device management and other two is used for data management.

EQPS has an Event Handler module that listens and detects events of several types and process that event accordingly.

The Report Generator, and Data Storage and Loggers together form DSOS service module. SensorDB stores sensing data while Report Generator module provides the sensing report in accordance with the query registered by the user.

Internet / Intranet  Figure 9. 3-Layer SenTM Architecture     SenTM Application Layer is the top layer of SenTM architecture which provides four API(s) to the users.

Command and Query is sent by using Tag Configuration API and Sensing Query API. The other two API(s) used for synchronous and asynchronous sensing reporting to the user. Sensing Data Report API is used to send synchronous reporting for user query and Sensing Alarm Notification API sends alarm notification to the user asynchronously if any alarm event occurs.

E. Challenges in SenTM  Implementation High performance is one of the major system challenges  in SenTM implementation. Detection and generation of alarm notification for tag health and status (BatteryLow, MemoryFull, Sensing threshold etc.) as well as a quick response to user queries are the key requirements of SenTM implementation. Also, application deploying a number sensor tags, generate huge amount of RFID-sensing information which is a scalability issue. Furthermore, system performance degrades with the number of users and applications connected to the system. Our designed SenTM architecture uses Continuous Query (CQ) Processor and Event Handler module to resolve these issues.



V. CONCLUSION Active RFID tag integrated with sensing module can serve as active sensor tag. The advantage of using active sensor tag is that it provides greater communication range, long battery life and fastest tag data collection. However, sensor tag differs from active tag in several ways, because it continuously senses and stores sensing values in its tag memory. Each sensing value in a tag, costs battery power as well as memory space. Moreover, a sensor tag life cycle has different moods and states. It is necessary to switch tag moods and states depending on the situation that helps store tag battery power as well as sensing data. To control tag and to provide efficient system services, a management system is required. Although, ISO provides standard for active tag communication, it is insufficient to provide all the services required by sensor tag application. In this paper, we analyze the sensor tag applications and existing global standards to extract requirements and necessary features for efficient sensor tag management. Our proposed Sensor Tag Management (SenTM) architecture is based on EPCglobal Standard Architecture Framework and ISO/IEC 18000-7 active air interface standard that provides compatibility and global interoperability of the system. We proposed four types of core management modules which are namely: Tag Command and Control Services (TCCS), Device and Data Management Services (DDMS), Event and Query Processing Services (EQPS), and Data Storage and Output Services (DSOS). Here, we only consider about tag device and tag data management but our tag management does not consider about sensor tag locations. Our future research work lies on providing integrated RFID-Sensing-Location management services using existing standards.

