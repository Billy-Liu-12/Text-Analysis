

25-29 July. 2004 Budapest, Hungary  Getting Adaptability or Expressivity in Inductive Logic Programming by  Henri Prade lRlT  University Paul Sabatier Toulouse, France  E-mail: prade@;irit.fr  Abstruct- Introducing fuzzy predicates in inductive logic pro- gramming may serve two different purposes : getting more expressivity by learning fuzzy rules, or allowing for more adaptability when learning classical rules. On the one hand, we can thus learn gradual and certainty rules, which have an increased etpressive power and have no simple crisp counterpart.

On the other hand, fuzzy predicates in  rules can be used for dicretization when the database contains numerical attributes.

In this case the fuzzy counterparts of crisp rules allow us to check the meaningfulness and the accuracy of the crisp rules. I n this paper we formally describe the computation of the confidence degrees for each type of rules with fuzzy predicates. Next, we discuss the interest and the application domain o f  each kind of rules with fuzzy predicates.



I.  IN?I?RODU(? I?ION Fuzzy set-based methods have been widely introduced in  all areas of machine learning. First, neuro-fuzzy learning techniques have been developed for tuning fuzzy membership functions in fuzzy rules: see [ IO]  for a survey. The fuzzy rules, which are produced in that way, are used for func- tions approximation in automatic control problems. Another research line has been investigated with a grcatcr concem for the descriptive powcr of thc fuzzy d e s  from a user?s point of view, by extcnding Quinlan?s [I41 ID3 algorithm to fuzzy decision trces. involving a fuzzy dcscription of classes and making use of entropy measures (extended to fuzzy sets) for building the fuzzy rules: see [I]  for a survey. More recently, the use of fuzzy membership functions has been advocated by several researchers for providing association rules in data mining with a better representation power, e.g. [8].

Currently, the majority of these methods for learning fuzzy rules are propositional. Inductive Logic Programming (ILP) [ 1 11 provides a general framework for learning classical first- order logic rules, for which rcasonably efXcicnt algorithms have been devclopcd (Progol [9], FOIL [15] ....). As in propo- sitional framework, the use of fuzzy predicates in ILP allows to give different meanings to implication rules. Two recent versions of FOIL [ 181, 131 handle fuzzy membership degrees.

but only induce one type of rule (which in the first work still keep a classical meaning). Recently [12], different ways for computing the confidence degree of a fuzzy rule have been described. Each type of Confidence degree corresponds to a type of implication-based fuzzy rule, then. it is possible to  Using Fuzzy Predicates Mathieu Serrurier  IRlT University Paul Sabatier  Toulouse, France E-mail: sermrie@irit.fr  induce cach type of rules by using thc appropriate confidence degrcc in FOIL.

In this paper. we propose to extend the research presented in [12] by a deeper analysis of the properties of the different types of first order rules involving fuzzy predicates, and of their integration in the ILP fiamework. The first interest in the introduction of fuzzy sets in ILP is to provide more expressivity for the learned rules. Indeed fuzzy sets are well- known for providing an efficient representation for imprecise concepts such as ?young?, ?expensive?, ?tall? ... I n  this scope, the rules induced may have a meaning different from classical ?if ... thcn? rules.

Thc second way of using fuzzy sets is for tuning the efficiency of the discretization of continuous data. Generally speaking, the algorithms for  learning rules have difficulties for handling real-valued attributes. In fact. numerical values usually lead to an infinite hypothesis space. The difficulties grow up when real numbers appear in the target concept. One can deal with real numbers in two manners : either by introducing constraints, or by discretization. By constraints, we mean the use of specific predicates or operators, such as inequality predicates (2,s: = #) or mathematical functions (average, ...) [16]). Rules induced by this method may suffer from a lack of expressivity and generality. Furthermore, algorithms dealing with constraints go out of the scope of the standard resolution process. The second way is to use discretization and clusterization to transform continuous information into qualitative information. So we come back to the classical logic setting. This method is the most currently used since it allows the user to cope with numerical values and to improve the  transition bctu?ccn classes. Then fuzzy sets can be used for adapting standard rules induced from crisp sets in order to improve the faithfulness or the robustness of the rule with respect to small variations of values of the data or of the boundaries of the crisp sets.

The paper is organized as follows. First we recall some definitions about ILP and fuzzy databases. Next we present two kinds of fuzzy rules. whose expressivity is increased with respect to ordinary rules, and their integration in the ILP machinery. We also describe two other types of rules involving fuzzy predicates whose concern is rather a inattcr  COPC. fWZY Sets allow US t0 haVC a gradual  0-7803-8353-2/04/$20.00 0 2004 IEEE 73  mailto:prade@;irit.fr mailto:sermrie@irit.fr   FUZZ-IEEE 2004  of adaptability, since the meaning of these rules remain close to the one of ordinary rules, but Rith some tolerance permitted.

Lastly we illustrate the approach on a toy cxamplc.

11.  BACKGROUND A. ILP  induction is to find a set of formulas H such that : Stated in the general context of first-order logic, the task of  B U H b E  (1) given a background theory B and a set of observations E (training set), where E ,  B and H here denote sets of clauses. A set of formulas is here. as usual, considered as the conjunction of its dements.

Of course. one may add two natural restrictions :  B  B U H  E since, i n  such a case, H would not be necessary for explaining E.

I : this means B U H is a consistent theory.

In ILP. there are two ways for describing examples. The first describes the set of positive examples E+ and the set of negative examples E - .  The other describes only positive examples in E and makes the Closed World Assumption. It is this hypothesis that we will use along this paper. Each element of E is called an example and we call a counter-example a fact on the target concept which i s  not in E. In the setting  not take into account the number of situations covered in the condition part of the rule. which is not always the total numbcr of exaniplcs covered sincc we are in a first-order setting.

In ILP, the goal i s  to learn a concept represented by a predicate. E i s  the set of all facts pertaining to the target predicate. B is the set of facts pertaining to predicates other than the target one. So the learned rules are (in the non-recursive case) composed by predicates that appear in B for the condition part. and by the target predicate in the consequence part.

B. Fuzzy Databuses We consider a first-order logic database K with fuzzy  predicates (e.g., 'heavy', 'old' ...) as a sct of positive facts labeled by real nzmbers in_[& 11. Thus, Er' is made of pajs of the form (A(  f )&p(A( t 1)) for t E H n ,  where A( t ) is a fact. and //(A( t )) i s  the %tisfaction degree associated with the fuzzy property -4 for t . A fuzzy predicate F can be -+ viewed as a f y i l y  of ordinary predicates F, namely f E F, iff p ( F (  t )) 2 o. Thus a rule " A ( f )  ---f C(T')"  is naturally associated with thc set of crisp rules of the form *'-4(x(T?) -+ C'fi(7)''. Notc that. if &(?) holds then &(Z) also holds for CL 5 3.

Confidence degrees are computed according to the definition ofdoniain probabilities [7].  ILP data are supposcd to describe one interpretation under Closed World Assumption. Wc call I1f-p this interpretation. So. given a fact f :  I 1 ~ p  b f  i f f B A E F f .  12) The domain 31 is the Herbrand domain described by B and E. We take P as a uniform probability on 3.t. So we deduce that the confidence in a clause A -+ c, with as vector on the 17 free variables, is :  cf (A(Z)  -+ C(7u l , r , , , I{f??'L'' I f r i , t - + ( , 4 (  t ) A ( 7 ( 7 ) ) } 1  1{-Tcn91 I I ) )  ,+(.q7))}1 where I I denotes cardinality. In the following. we namc support of the rule the dcnominator of (2) .  which corresponds to the probability of the satisfaction of the condition part of the rule. Another possible definition of a confidence degree might be taken here as the proportion of the number of positive examples covered by the rule w.r.t. the number of total examples (positive and negative) covered by the rule.

This confidence degree would represent the probability that a fact deduced from the rule i s  true. But this definition would  (3)  .4. Grudual R u k s Thezeaning of a gradual rule ''A(5?) ---f C'(2)" is "the  more t is A, the more t is B'. It corrcsponds to the following understanding of fuzzy rules :  3 .

Thus, this fbzzy rule is equivalent to a set of ordinary rules with nestedpi icatcs  and summarizes it into a unique fuzzy rule. Then t is a positive valuation of the rule A ( 2 )  -+ C($)  if and only if B ( 7 )  2 >4(7). So we deduce the computation for the confidence degree :  C f y P C l ( t ( A ( a )  + C ( 2 ) )  = I{T'i"H'' I I, r , r , l = ( A ( c ) h c ' ( ~ ) ) , ~ ( ~ ' ( ~ ) ) ~ , ~ ( , 4 ( ~ ) ) } 1  ( 5 )  ' { T - E H ' ~  I f , ,>PHA(-F))}l When the valuation of the condition part of the rule is a conjunction of ground literals, the satisfaction degree of this conjunction is taken as the minimum of the degree of each literal. These rulcs describe a synergetic evolution of member- ship degrees of the condition part with the membership degree of the conclusion part of the rule. This kind of rule has no simple crisp counterpart. If we use it for automatic deduction from a new example, wc can deduce a minimum value for     25-29 Joiy, 2004 Budapest, Hungary  the membership degree of the example to the concept. Then we can CVdlUak accuracy by checking the validity of this minimum. Note that gradual rules are useful only whcn the fuzzy sets used for discretization have a sutliciently restrictive core and a sufficiently large support. Indeed, if the core and the support of the fuzzy sets were too close, few examples would have a membership degree in (0.1). and then gradual rules would not be more informative than crisp ones.

B. Certainy Rules The mea i ig  of thc fuzzy rule ??A(a> --i C ( 2 ) ?  is then  ?the more t is A, the more certain 7 is C?. For these rules, we are not primarily interested in the satisfaction degree of the consequence part. The a-cut for these rules corresponds to the following type of classical interpretation.

Dejnifion I :  An a-certainty interpretation, given a fact f, is defined by :  Irr--lsrTt I= f iff ( B  I= f ~ f f )  2 a )  07? E I= f (6)  With this kind of rules, confidence degrees are expected to be high especially for the interpretations which highly match the condition part. Thus, the idea is that we can be more permissive with respect to exceptions for the classical counterparts of the rulc ?A(T?) -+ C?(2)?? corresponding to small values of a. So. we are led to use thc following Choquet integral [2 ] .

c.fcpT,,~(A(-2) --f C(-.q) = C?,,(CIL - az+1) * (*f(24(3 -+ a-ah,k,-,,?t (7)  This kind of rules is of intcrcst for lcaming a concept in a broad sense. For instance, if we consider the concept ?activity? of the well-known ILP benchmark database ?mutagenesis??, active molecules have a positive activity level and non-active molecules have a negative one. Then, the fuzzy sets used will have disjoint parts around 0. A gradual rule may inform on the level of activity of the molecule, whilc a certainty rule will be intcrcstcd in knowing if the molecule is  somewhat active or not. This kind of rules can be also used for lcaming non- fuzzy concept.



IV. A D A P ~ A B I L I - I  Y-OKIEN?I ED R I J L ~ S Continuous data are very common in machine learning.

Although numerical attributes can be easily handled by some learning technics such as neural networks or regression, the problem is harder for leaming methods based on propositional or first order logic [I  I], [14]. Discretization is the method which is the most currently used, The discretization can be made at different steps of the leam- ing proccss. If the clusters are defined before the process starts,  ? http //web comlab 0 x . a  uk nucli research areas machlead mutagenesis. html  the database will be transformed and a label can be associated with each clustcr of valucs. This allows the user to leam rules that are easy to understand intuitively. Discretization can be made during the leaming process too, and then the clusters can be morc adapted to the data. but the readability of the rules may decrease. In the case of discretization before the learning process. clusters can be chosen in accordance with intuitive concepts (modeling e.g., low, old, expensive, ...). In the second case clusters are chosen according to entropy criteria [SI, [6] .

Regardless when discretization i s  performed. none of the methods take into account the problem raised by the sharpness of the wansition between clusters. Indeed. if the value of a numerical attribute for a piece of data is close to the boundaries of the clusters used for discretization, the values of the membership of the data to the cluster would change for a small variation of the value of the boundaries. More generally, commonly used nieasiircs such as support or confi- dence degrees can be very sensitive to the choice of the class boundaries and to the variation of the data. Since rules are used for prediction and are learned on a sample of data, there exists some statistical discrepancy between values in the training data and values in real data.

Fuzzy sets can bc used for prolliding gradual transitions between classes. In this case, crisp sets are tumcd into fuzzy sets. Givcn a crisp set defined by thc interval I = [ I - ,  I+] we can define a tizzy counterpart of I for a fixed chosen range c as a trapezoid II? = [ I -  - c / 2 .  I -  + t/2. I+ - c / 2 ,  I+ + 6/21.

Note that the core of ?1? [I-  + ?13. I+ - 6/31 i s  included in I , and the support of il? [ I - - E / ~ ,  I + + c / 2 ]  contains I. Then, two kinds of fuzzy adaptations of a crisp rule can be introduced, which have different properties with respect to the behavior of the crisp rule for variations (within a chosen range) of values of the data or of the location of the boundaries of the crisp sets. We will study their impact on the confidence dcgrce of thc rule.

A. Making Crisp Rules More Rohust The rules will be then referred to as,@aible rules in the  following. The meaning of a flexible rule ?d4(Z?) -+ C?(?)?? is close to the one of a classical rule. It corresponds to the following understanding of rules :  (8)  i.e. there exists a crisp understanding of the flexible rule which covers each example (but it is not necessary the same one for each example since cr depends on 2). In pLactice, we are expecting that the satisfaction degrees of A( t ) and C( t ) are as high as possible. So we can introduce the confidcncc degree of a rule for an n-cut.

-+ ?d7.30 A , ( T )  --+ CQ( t )  --+  We use the product operator for the conjunction. For this type of rulc, only conjunctions of facts having a satisfaction degree greater than (1 arc considered. According to the intended     FUZZ-IEEE 2004  meaning of the fuzzy rule, we must favor the confidence degrees of the rule computed for high ck-cuts. Indeed, we prefer that the examples be covered with a high degree of Satisfaction. The following definition. which is an adaptation in terms of first order logic of the one proposed in [2], takes this into account :  where = 1 2 ... 2 at = 0 is the decreasing list of the satisfaction degrees that appear in the database. This confidcncc degree corresponds to a discrete integral of the confidence degrees on a-cuts.

Given a crisp rule with p attributes issued from discretization and its flexible counterpart obtained by using chosen ranges of variation ?1. ..., e p ,  it can be proved [I71 that the confidence degree of the fuzzy rule viewed as a flexible rule is the average of the confidence degrees of the corresponding crisp rules for all possible combinations of variations of the values of the data or of the boundaries of the crisp sets on the p attributes according to their respective ranges E X ,  .... cp .

According to this remark, we can notice that flexible rules will be more stable than their crisp counterparts with respect to small variations of the sets used in discretization. especially when discretizing before the learning process. and the statis- tical variations that exists between training data or real data.

Note that this result remains true if the rule contains non- numerical attributes in its condition part or if the conclusion of thc rule does not refer to a continuous attribute. In this ease, we can regard this attribute as a trivial fuzzy attribute for which membership degrees can only be equal to 0 or 1.

Given a rule h issued form a crisp discretization and its fuzzy flexible counterpart h,f according to fixed variation ranges for each attribute, if we compare the confidence degrees of h and h f ,  we may have different results. If the confidence degree of / i f  is less than the one of h, this means that a majority of positive examples of the rule are close to the boundaries of the crisp sets for some attributes and then, the confidence degree of h may decrease rapidly with small variations of the boundaries or when it will be computed from real data. If thc confidence degree of h f  is greater than the h, one, the contrary may happen because it means that a majority of counter-examples of the rule are close to the boundaries of the crisp sets for some attributes. Then, if the support and the confidcncc degrces are high, the majority of the examples will be in the core of the fuzzy sets, and the rule will not be sensitive to variations.

8. Favoring the Accuracy of Crisp Rules  A rule is improved, i.e. made more informative, when enlarging the scope of its condition part (i.e. its support) and making its conclusion part more accurate. This leads to study the following understanding of the rule with fuzzy predicates :  Let us consider two extreme cases of this family of crisp rules.

The first one is  wherc by convention CO is restricted to the support (the elements with non-zero membership) of the fuzzy set that corresponds to the predicate C. In this case. the condition part of the rule is very restrictive, while one is very tolerant for the conclusion part which is maximally enlarged. As can be seen, this extreme understanding of the rule is very permissive. In fact. since we are restrictive for the condition part of the rule, the support of the crisp counterpart of the rule will be stable for small variations of values of the data or of boundaries of the crisp sets, but the confidence degree may have high variations due to the fact that we are very permissive with the conclu5ion of the rule.

The second extreme case is  (13)  Clearly, this is more demanding because the scope of application of the rule is enlarged and the conclusion is as restrictive as possible. Then. in this view, we prefer to cover examples with rules corresponding to a small value of a.

We now define the logical interpretation corresponding to these rules.

Definition 2: An ct-improved interpretation Ianmp, given a fact f, is defined by :  B /= f  E + f and p(f) 2 a >  0  and p(f)  _> 1 - a > 0 (14)  According to the previous remarks. the confidence degree of these rules is computed as follows :  (15) C f i m p ( A ( 2 )  ---t C ( T ' ) )  = E,, (at - &,+l) * c f ( 4 f )  - c(a)f<*-<*,; I,,, >,  Then, finding crisp rules that have a good confidence degree for their fuzzy counterpart in the sense of this section ensures that, if the support may decrease for variations of data or of boundaries of the crisp set, the confidence degree will remain stable.

v. 1L.LUSTRATIVE E X A M P L E Let us consider a database that describes houses in a  town. First we have some f k z y  relational predicates such as (clo.se(n.. y). a) which means that the house .x is close to the house ?j with a membership degree CY, or (know(.e.  y), CL') which means that the owner of house .T knows the owner of the house ~j at a degree a' (from 0 for unknown to 1 for friends).

The houses are also described with some nearly propositional fuzzy predicates such as expensrvP(r) or srr la l l ( z ) .

So, in this context, we can find fuzzy rules of each type with a good confidence degree. A typical gradual rule is     25-29 July, 2004 Budapest, Hungary  i.e. "the larger the house, the more expensive it is". which describes the fact that price grows up with size. A good examplc of a certainty rule is  close(.r, y) - knm-( .c ,  y) . This rule means "the closer the houses, the more we are sure that the owners know each other''. The certainty that the owners of close houses know each other can decrease when the distance between the houses grows up.

If we are interested in adaptability, an example of a flexible rule is in this context  close(x, g). expensi ue(y) -+ ex:pe7isice(z).

This would exprcss that a house which is closc to an expcnsivc one, is expcnsive as well (since cxpensiw houses are often located in the same area). The Confidence degree of the rule is high if it is viewed as a flexible rule. It seems that the crisp countcrpart of this rule (whcrc crisp scts correspond to the 0.5-cut of the fuzzy sets) has a confidence degree stable with respect to variations of the data or of the boundaries, and when the scope of the rule is enlarged.

Benchmark experiments on gradud rules, certainty rule and flexible rules can be found in [12].



VI. CONCLWON In this paper we have presented different uses of fuzzy  prcdicatcs in ILP. Fuzzy rules of differcnt types can be induced by using the appropriatc definition of the confidencc degree in FOIL [13]. We have shown that fuzzy predicates can be introduced for improving expressivity or adapting crisp rules.

Gradual rules and certainty rules provide new kinds of summaries of features present in fuzzy databases. Since these summaries involve membership degrees, a new definition of accuracy is necded. This kind of rulcs are uscful when the database contains predicates whose understanding is typically fuzzy, not only predicates issued from a fuzzy discretization of a continuous attributc.

Rules with fuzzy predicates obtained by fuzzification of crisp sets are used for improving efficiency in the management of continuous attributes. Their meaning is the same as for crisp rules and then accuracy can be computed as usual. There are two ways of using this kind of rules. First, in genuine fuzzy databases, these rulcs can be learnt togcther with gradual and ccrtainty rules. There are easier to find and they provide rules with a classical meaning. The second way is to use rulcs with fuzzy predicates just for the computation of the confidence degrees of crisp rules. In this case, automatic methods for turning crisp sets into fuzzy sets can be used during the discretization phase (before or during the leaming process). It allows to ensure that the crkp rules induced will keep good confidence degree not only on training data and ensure that the confidence degree of the rule is not too dependent on the choicc of the boundaries of the crisp sets uscd for discretization. Induccd rulcs arc then used as  classical ones.

Exprcssivity-oriented rules may be appropriate in  data- mining since wc are interested in this context in finding r e d - able pattcms. Adaptibility-oricnted rules are useful in machine leaming because there are easy to find and they ensure stability with respect to small variations of the boundaries of the sets used for discretization.

