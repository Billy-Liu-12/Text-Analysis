Mining Quantitative Frequent Itemsets Using Adaptive Density-based Subspace Clustering

Abstract  A novel approach to subspace clustering is proposed to exhaustively and efficiently mine quantitative frequent item- sets (QFIs) from massive transaction data1. For the com- putational tractability, our approach introduces adaptive density-based and Apriori-like algorithm. Its outstanding performance is shown through numerical experiments.

1. Introduction An important extension of Basket Analysis is to mine  ?Quantitative Frequent Itemsets (QFIs).? They represent the cooccurrences of both ?numeric items? and ?categori- cal items? having numeric interval values and categorical values in transactions respectively [12]. A ?Quantitative Itemset (QI)? has a form ? ? where is an item, an attribute and its value. An example is ?  .? Given a transaction , a nu- meric item in a QI is supported by a numeric item in if and where states that the range of is within the range of . Hence, ?  ? supports the aforementioned QI, whereas ?  ? does not, because is not within . Given a transaction data set , a QI is a QFI if it is supported by more frequently than a ?minimum support ( ).?  QFI mining has been initially proposed in the study to mine quantitative association rules [12, 14]. Subsequently, the study on ?density-based subspace clustering? has been started which is applicable to mine QFIs, since a QFI is an axis-parallel and hyper-rectangular bound containing a cluster of transactions in a numeric attribute subspace.

1More details are reported at .

CLIQUE [3]. ENCLUS [4], MAFIA [6] and SCHISM [11] are the representatives, where the original numeric attribute space is first discretized by an axis-parallel grid, and a max- imal set of connected dense blocks in the grid are searched as a cluster by levelwisely merging the blocks. PRO- CLUS [1], ORCLUS [2] and EPCH [9] are the other suc- cessive extensions called ?projective clustering? where data objects are projected to some attribute subspaces, and clus- ters are sought based on the axis-parallel grid in the sub- spaces. DOC uses moving hypercube windows to mine subspace clusters [10]. CLTree mines axis-parallel and hyper-rectangular subspace clusters under a hierarchical and greedy search strategy [8]. Though their computational complexities are low (around with  ), they miss some clusters due to inadequate orien- tations, shapes and sizes of their grids/windows and due to the incompleteness of their search strategies. The recently developed SUBCLU searches subspace clusters under a rigid density measure proposed by DBSCAN [7, 5], where a dense region called a ?density-connected set? is that for each object in the region the neighborhood of a given radius  has to contain at least a minimum number of ob- jects. This approach takes an exhaustive search strategy for dense clusters in every attribute subspace by an Apriori-like levelwise algorithm with the (anti-)monotonicity property of the dense clusters. However, the computational complex- ity is . A crucial limitation of the most approaches is that they are dedicated to numeric attributes only.

In this paper, we propose a novel approach of QFI min- ing called ?QFIMiner? having the following features:  1. The approach exhaustively mines all dense clusters supported by more than transactions in all subspaces formed by both numeric and categorical at- tributes of a given transaction data.

2. The clusters to be mined are axis-parallel and hyprect- angular in the numeric attribute subspaces.

3. Interval values of numeric items are allowed in the transactions for mining.

4. The approach is virtually and tractable.

0 100p1  p2  MinPts(CS,p1)  MinPts(CS,p2)    0 100p1  p2  MinPts(CS,p1)  MinPts(CS,p2)  Projections and Candidate Clusters  Projections and Dense Clusters  Figure 1. Derivation of dense clusters.

2. Outline of Method QFIMiner searches QFIs from a data set of trans-  actions consisting of numeric and categorical items.

QFIMiner assumes that dense clusters of the transactions exist with scattered background noise in the subspace. The upper part of Fig. 1 depicts this example where every nu- meric item takes a point interval (unique) value in each transaction, and two dense clusters exist in .

QFIMiner uses a definition of density similar to DB- SCAN. This approach significantly reduces the possibil- ity to miss clusters under an appropriate density threshold.

QFIMiner uses a levelwise algorithm where it starts from the clusters in one dimensional subspaces, and joins dimensional clusters into a candidate cluster in di- mensional subspace . While this is similar to SUBCLU, QFIMiner can derive clusters on both numeric and categor- ical items by embedding the levelwise subspace clustering into the standard Apriori algorithm. At each level, first, it derives frequent itemsets consisting of categorical items and numeric item?s attributes, then second, dense clusters in formed by the numeric attributes in the frequent itemsets are searched. The clusters supported more than a minimum support ( ) in numeric and categorical attribute sub- spaces are exhaustively mined.

To avoid computational complexity, QFIMiner does not compute the pairwise distances among transac- tions. Instead, it projects transactions in a candidate dense cluster onto each attribute axis of the subspace . The upper part of Fig. 1 shows a case that is a  region. All maximal density-connected sets are searched in the transactions projected onto every axis ,  where a density-connected set on is such that for each transaction in the set the neighborhood on has to contain at least a minimum number of transac- tions, and a maximal density-connected set is not contained in any other density-connected set. An intersection of the maximal density-connected sets on all axes in the subspace becomes a new due to the (anti-)monotonicity of the density. In Fig. 1, the four intersections are new . These projection and searching maximal density-connected sets are iterated until each converges to a dense cluster .

The two intersections containing the dense clusters in Fig. 1 are retained under this iteration and the rest pruned. In the lower part of Fig. 1, dense region of each retained intersec- tion is further narrowed down to ensure the density within the region projected to every axis. Because the density on every axis is evaluated in a scan of sorted transactions, the complexity of this algorithm is expected to be .

In the search of maximal density-connected sets on an axis, if is lower than the background noise level, the projection of dense clusters may be buried in the back- ground. If it is too high, the projection of dense clus- ters may be missed. Accordingly, is adapted to  which is the expected number of transac- tions projected to the neighborhood on an axis from each assuming that has the average density of the subspace . is always between the den- sities of the dense cluster and the background. In Fig. 1,  efficiently extracts the maximal density- connected sets reflecting the dense clusters. This adap- tive density threshold further accelerates QFIMiner, be- cause is higher for a lower subspace di- mension, and prunes more maximal density-connected sets below the noise level. In summary, QFIMiner takes the in- put paramters (usually given by a unique relative width over the total range of data on every axis) and .

3. Experimental Evaluation  3.1. Comparison with Other Approaches  The performance of QFIMiner has been evaluated by us- ing a PC with a 2.7GHz Pentium 4 CPU and 2GB RAM throughout this evaluation. QFIMiner was compared with SUBCLU [7] and QAR mining of Srikant and Agrawal [12]. SUBCLU takes the parameters ( in our expres- sion) and for the density computation. Its per- formance is known to be superior to CLIQUE [7]. QAR mining applies the ordinary Apriori algorithm to mine QFIs after preprocessing numeric items. It takes the parameters  and maximum support ( ) 2. We obtained SUBCLU?s code together with the data sets for the exper- iments from its authors [7]. The program to derive QFIs  2A parameter called partial completeness is also used, but it is not very influential to mine QFIs.

10000 20000 30000 Size         C om  p.

T  im e  (s ec  ) SUBCLU  QFIMiner  QAR mining  Figure 2. T. vs. data size.

10 20 30 40 Dimensionality         C om  p.

T  i m e  (s ec  ) SUBCLU  QFIMiner  QAR mining  Figure 3. T. vs. dimensionality.

Dimension of Cluster        C om  p.

T  im e  (s ec  )  2 4 6 8  SUBCLU  QFIMiner  QAR mining  Figure 4. T. vs. dim. of clusters.

by QAR mining has been rebuilt based on [12]. The data for the comparison are artificially generated to locate some clusters having different densities in different dimensional subspaces. The size of each cluster is around of the total data range on each axis in the subspace. Substantial background noise has been uniformly added to the entire attribute space. The similar data sets were used to evalu- ate SUBCLU and CLIQUE in the paper [7]. The appropri- ate values of and which QFIMiner does not use have been predetermined by our insights on these data sets. , , and  were used throughout this subsection.

First, we assessed the computational efficiency against  the size of data set, the dimensionality of data set and the maximum dimensionality of hidden subspace clusters as de- picted in Fig. 2, 3 and 4. For Fig. 2, data sets having 20 dimensions and containing five subspace clusters of dimensions were used. The increase rate of the computa- tion time of QFIMiner against the data size was less than SUBCLU and similar to QAR mining. This is consistent with of QFIMiner, of SUBCLU and  of QAR Mining. For Fig. 3, data sets having 3967 transactions and containing a 7 dimensional subspace clus- ter were used. The increase rate of QFIMiner was larger than the others, while we observed its significant decrease when we slightly increased . This implies that the number of noisy candidate dense clusters in lower dimensional subspaces increases under our adaptive density threshold along with the increase of the combinations of at- tributes. For Fig. 4, data sets having 4000 transactions and 15 dimensions were used. The computation times gently increased in all approaches. This indicates that the increase of computational complexity in high dimensional search is relatively small, and the efficient and accurate pruning of candidates in the low dimensional subspaces is a key for the speed. Every figure shows that QFIMiner is faster than SUBCLU and slower than QAR mining in the order of 2 and 1, respectively.

Table 1 shows the accuracy of the clustering in terms of the number of clusters correctly mined by the three ap- proaches. Six data sets having different subspace clusters were used for the evaluation. QFIMiner could successfully mine the clusters for almost all data sets, while the other two  Table 1. Comparative evaluation.

N dim. of # of QFIMiner SUBCLU QAR  cluster clusters mining (# of trans- sactions) 3(711)  4324 5(256) 3 3 2 1 7(92) 5(256)  4057 5(256) 3 3 3 2 5(256) 5(256) 5(256)  4469 5(256) 5 4 2 1 5(256) 5(256)  4045 2(3673) 1 1 1 1 3967 7(1024) 1 1 1 1 3986 10(49) 1 0 0 0 The dimensionality of all data sets is 15.

failed in many data sets. The reason why the performance of QFIMiner is better than SUBCLU is the evaluation of the density by the projection to every axis. The projection reduces the statistical errors on the density by collecting the transactions of onto an axis. In contrast, the error of the density directly evaluated in a hyper- -neighborhood increases due to the sparse distribution of the instances in higher dimensional subspaces. In summary, the perfor- mance of QFIMiner is superior to the other approaches in accuracy and efficiency.

3.2. Scalability  The scalability of QFIMiner w.r.t. computation time and memory consumption has been evaluated by using a large artificial data consisting of both numeric and cate- gorical items. The average size of each transaction is 24 in which around half of the items are numeric. 10 QFIs are embeded to the data where each QFI includes a clus- ter having diameter and some background noise in the subspace formed by the numeric attributes. and  were used in this analysis. The dependency of the computation time and the memory consumption on  is shown in Fig. 5. As known by the reference line, the computation time is almost up to 1 million transactions. The memory consumption is almost .

This is reasonable, since the memory is mainly consumed for . These results indicate the tractability of QFIMiner for massive data.

0 2 105 4 105 6 105 8 105 1 106  Size        C om  p.

T  im e  ( s ec  )        M em  or y  C on  s.

(M  B )Comp. Time  O(N log N)  Memory Cons.

Figure 5. Time and Memory vs. data size.

3.3. Mining Practical Data We demonstrate a data mining example to see if  QFIMiner can mine comprehensive relations to character- ize objective data. The data is the adult database in UCI ML Repository [13]. We analysed its test data containing 100,000 instances of 40 attributes where 6180 instances are persons having more than 50K USD annual income, and the rest are persons having less than 50K USD. We splitted the data into two groups according to the 50K USD threshold for a comparative study. and high are used, since the association among items is so strong that more than 2,000 QFIs are mined even with this .

The followings two QFIs are the examples of the com- parative study.

50K, support=69.6%:  50K, support=56.2%  The first QFI is for the persons having more than 50K USD income while the second is for the persons less than 50K USD. Under similar support, the former is for elders and veterans while the latter is for younger and unemployed per- sons. The upper bound of the dividends as stock owners is far larger in the former. The high granularity of the interval values yet maintaining the interpretability shows the high usability of QFIMiner to analyse massive data.

4. Discussion and Conclusion QFIMiner evaluates the density in the neighborhood of  each transaction projected onto every axis in each candidate dense cluster. This enables finer and more accurate detec- tion of dense clusters than the other grid based approaches while maintaining a good efficiency. In addition, QFIMiner computes the density threshold by the average density in each candidate dense cluster in every subspace. This en- ables more accurate and efficient detection of dense clus- ters than by the equi-width grid based and variable density threshold of SCHISM [11].

In summary, the performance of QFIMiner is superior to the past subspace clustering approaches in terms of its accuracy and efficiency. It provides highly comprehensive notions of numeric and categorical clusters in form of QFIs.

Acknowledgement: The authors wish to thank Dr. Alexan- dre Termier in ISIR, Osaka Univ. for his extensive support to write this paper. This research was partially supported by the Japan Society for the Promotion of Science (JSPS) Grant-in-Aid for Scientific Research (B), 16300045, 2005.

