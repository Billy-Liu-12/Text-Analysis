June 27-30, 2011, Taipei, Taiwan

Abstract?In this paper, we propose a multiple-level genetic-fuzzy mining algorithm for mining membership functions and fuzzy association rule on multiple-concept levels. It first encodes the membership functions of each item class (category) into a chromosome according to the given taxonomy. The fitness value of each individual is then evaluated by the summation of large 1- itemsets of each item in different concept levels and the suitability of membership functions in the chromosome. After the GA process terminates, a better set of multiple-level fuzzy association rules can then be expected with a more suitable set of membership functions. Experimental results on a simulation dataset also show the effectiveness of the algorithm.

Keywords- data mining, genetic algorithm, multiple-concept levels, membership function, fuzzy association rule.



I.  INTRODUCTION Data mining is most commonly used in attempts to induce  association rules from transaction data [2]. An association rule is an expression X Y, where X and Y are a set of items. It means in the set of transactions, if all the items in X exist in a transaction, then Y is also in the transaction with a high probability. A variety of mining approaches based on the Apriori algorithm [2] have also been proposed [4, 21].

However, most of them are focus on finding association rules on a single-concept level. Thus, many approaches have also been proposed for mining multiple-concept-level association rules to discovery more specific and important knowledge from data [8, 22].

Most of the mentioned approaches above focused on binary valued transaction data. Transaction data in real-world applications usually consist of quantitative values. Thus, fuzzy data mining algorithms have been proposed for handling quantitative transactions and mining fuzzy association rules [5, 11, 17, 24]. As to multiple-concept levels fuzzy mining, according to the given fuzzy generalization hierarchies, Lee first proposed a generalized fuzzy quantitative association rules mining algorithm [16]. In 2003, Hong et al. then proposed a multiple-level fuzzy association rule mining approach [12]. It first transforms quantitative transactions into fuzzy values by using the predefined membership functions and taxonomy.

Then, a top-down progressively deepening approach is used to finding large itemsets and rules. Additionally, in order to reduce the time complexity, only the linguistic term with the maximum cardinality of each item is used in later mining processes. In [14], Kaya et al. proposed a weight fuzzy rule mining approach based on Hong?s approach. In 2008, Lee et al.

proposed a fuzzy mining algorithm for discovering generalized  fuzzy association rules with multiple supports of items for extracting implicit knowledge from quantitative transaction data [18, 19].

Those mentioned approaches assumed the membership functions to be known in advance. The given membership functions may, however, have a critical influence on the final mining results. In recent years, the Genetic-Fuzzy Mining (GFM) approaches have then proposed for deriving appropriate membership functions and mining fuzzy association rules [3, 6, 10, 13, 15]. Kaya et al. proposed a GA-based approach to derive a predefined number of membership functions for getting a maximum profit within a user specified interval of minimum supports [13]. Hong et al. also proposed a genetic- fuzzy data-mining algorithm for extracting both association rules and membership functions from quantitative transactions [10]. Alcal?-Fdez et al. then modified Hong?s approach to propose an enhanced approach based on the 2-tuples linguistic representation model [3]. Besides, multi-objective genetic- fuzzy mining approaches have also been proposed [6, 15].

However, those mentioned GFM algorithms are focus on one single-concept level. To the best of our knowledge, there is no GFM algorithm for multiple-concept levels until now. In this paper, we thus propose a multiple-level GFM algorithm for mining membership functions and fuzzy association rule on multiple-concept levels. According to the given taxonomy, it first encodes membership functions of each item class (category) into chromosome. The fitness value of each individual is then evaluated by the summation of large 1- itemsets of each item in different concept levels and the suitability of membership functions in the chromosome. After the GA process terminates, a better set of multiple-level fuzzy association rules can then be expected with a more suitable set of membership functions.



II. A MULTIPLE-LEVEL GENETIC-FUZZY MINING FRAMEWORK  In this section, the fuzzy and GA concepts are used to discover both useful association rules and suitable membership functions from quantitative values. We propose a Multiple- level Genetic-Fuzzy Mining (Multiple-level GFM) framework for searching membership functions suitable for multiple-level mining problems and then use the final best set of membership functions to mine multiple-level fuzzy association rules. The proposed framework is shown in Figure 1.

linguistic terms  MF Acquisition process Genetic Fuzzy  Fuzzy Mining for Large 1-itemsets  Final  Membership Function Set  Minimum support Minimum confidence  ?  Transaction Database  Population  Fuzzy Mining  Fuzzy Association Rules  Mining Membership Functions  Mining Fuzzy Association Rules  Taxonomy  Item Category1 Item Category2 Item Category3 Item Categoryn?  Food  Fruit Bread  Apples Oranges OldMills Wonder  Drinks  Beverages Alcohol  juice soda-water burgundy brandy ? ?  Chromosome1  Membership Function Set1  Membership Function Set2  Membership Function Setq  Membership Function Set3  Chromosome2 Chromosome3 Chromosomeq?  Transaction Database  linguistic terms  MF Acquisition process Genetic Fuzzy  MF Acquisition process Genetic Fuzzy  Fuzzy Mining for Large 1-itemsets  Fuzzy Mining for Large 1-itemsets  Final  Membership Function Set  Final  Membership Function Set  Minimum support Minimum confidence  ?  Transaction Database  Transaction Database  Population  Fuzzy Mining  Fuzzy Association RulesFuzzy Association Rules  Mining Membership Functions  Mining Fuzzy Association Rules  Taxonomy  Item Category1 Item Category2 Item Category3 Item Categoryn?  Food  Fruit Bread  Apples Oranges OldMills Wonder  Food  Fruit Bread  Apples Oranges OldMills Wonder  Drinks  Beverages Alcohol  juice soda-water burgundy brandy  Drinks  Beverages Alcohol  juice soda-water burgundy brandy ? ?  Chromosome1  Membership Function Set1 Membership  Function Set1 Membership  Function Set2 Membership  Function Set2 Membership Function Setq Membership Function Setq  Membership Function Set3 Membership  Function Set3  Chromosome2 Chromosome3 Chromosomeq?  Transaction Database  Transaction Database   Figure 1.  The Multiple-level GFM framework  The proposed framework consists of two phases, namely mining membership functions and mining fuzzy association rules phases. It maintains a population of sets of membership functions, and uses the genetic algorithm to automatically derive the resulting one. In the first phase, according to the given taxonomy, it first transforms each set of membership functions of each item category into a fixed-length string. It then chooses appropriate strings for mating, gradually creating good offspring membership function sets. The offspring membership function sets then undergo recursive evolution until a good set of membership functions has been obtained. In second phase, the derived membership functions are then used to mine multiple-level fuzzy association rules by using rule mining approach [12].



III. COMPONENTS OF THE PROPOSED APPROACHES In this section, the components of the proposed approach  for deriving membership functions and fuzzy association rule on multiple-concept levels are stated. The details of them are described below.

A. Chromosome Representation It is important to encode membership functions as string  representation for GAs to be applied. Several possible encoding approaches have been described in [1, 3, 7, 20, 23]. In this paper, each set of membership functions is encoded as a chromosome and handled as an individual with real-number schema. In order to effectively encode the associated membership functions, we use two parameters to represent each membership function as Parodi and Bonelli did [20].

Thus, in multiple-level fuzzy rule mining, membership functions applied to an item class (category) are then assumed to be isosceles-triangle functions as shown in Figure 2.

cj1wi1  Membership value  R j1  Quantity  Rjk Rjl  cjkwik cjlwilcj1cj1wi1wi1  Membership value  R j1  Quantity  Rjk Rjl  cjkcjkwikwik cjlcjlwilwil Figure 2.  Membership Functions of item class ICj  where Rjk denotes the membership function of the k-th linguistic term of item class ICj, cjk indicates the center abscissa of fuzzy region Rjk, and wjk represents half the spread of fuzzy region Rjk. As Parodi and Bonelli did, we then represent each membership function as a pair (c, w). Thus, all pairs of (c, w)'s for a certain item class are concatenated to represent its membership functions. Thus the set of membership functions MF1 for the first item class IC1 is then represented as a substring of c11w11?c1|IC1|w1|IC1|, where |IC1| is the number of linguistic terms of IC1.

The entire set of membership functions is then encoded by concatenating substrings of MF1, MF2, ..., MFj. Since c and w are both numeric values, a chromosome is thus encoded as a fixed-length real-number string rather than a bit string.

B. Fitness and Selection In order to develop a good set of membership functions  from an initial population, the genetic algorithm selects parent membership function sets with high fitness values for mating.

An evaluation function is then used to qualify the derived membership function sets. The performance of membership function sets is then fed back to the genetic algorithm to control how the solution space is searched to promote the quality of the membership functions. In this paper, we thus propose an evaluation function according to the one used in our previous approach [10] as shown below.

, )(  || )( 1   q  levels  k  k q  q Cysuitabilit  L Cf ==    where the || 1 k qL  is the number of large 1-itemsets in level k of  chromosome Cq, 1 ? k ? levels, and the suitability(Cq) is used in the fitness function can reduce the occurrence of the two bad kinds of membership functions, where the first one is too redundant, and the second one is too separate. The suitability of the membership functions in a chromosome Cq is thus defined as:  )],(_)(_[  )(  qjqj  m  j  q  CfactorcoverageCfactoroverlap  Cysuitabilit  += =    where the overlap factor of the membership functions for an item class ICj in the chromosome Cq is defined as:  ?  ?= ik jijk  jijk qj ww  RRoverlap Cfactoroverlap ],1)1),  ),min( ),(  [max(()(_           where the overlap ratio overlap(Rjk, Rji) of two membership functions Rjk and Rji is defined as the overlap length divided by half the minimum span of the two functions. If the overlap length is larger than half the span, then these two membership functions are thought of as a little redundant. Appropriate punishment must then be considered in this case.

The coverage ratio of a set of membership functions for an item class ICj is defined as the coverage range of the functions divided by the average value of maximum quantity in each level of that item class in the transactions. The larger the coverage ratio is, the better the derived membership functions are. Thus, the coverage factor of the membership functions for an item class ICj in the chromosome Cq is defined as:  )( )...,,(  1)(  j  jlj qj  ICavgmax RRrangeC_factorcoverage =  ,  where range(Rj1, Rj2, ?, Rjl) is the coverage range of the membership functions, l is the number of membership functions for ICj, and avgMax(ICj) is the average value of maximum quantity in each level of that item class in the transactions. Note that the overlap factor is designed for avoiding the first bad case ?too redundant?, and the coverage factor is for the second one ?too separate?.

C. Genetic Operators Genetic operators are very important to the success of  specific GA applications. Two genetic operators, the max-min- arithmetical (MMA) crossover proposed in [9] and the one- point mutation, are used in the genetic fuzzy mining framework. In the max-min-arithmetical (MMA) crossover operator, it will generate the following four candidate chromosomes from the given two chromosomes. Then, the best two chromosomes of the four candidates are then chosen as the offspring.

The one-point mutation operator will create a new fuzzy membership function by adding a random value ?, for example ? wjk, to the center or to the spread of an existing linguistic term, say Rjk. Assume that c and w represent the center and the spread of Rjk. The center or the spread of the newly derived membership function will be changed to c + ? or w + ? by the mutation operation. Mutation at the center of a fuzzy membership function may however disrupt the order of the resulting fuzzy membership functions. These fuzzy membership functions then need rearrangement according to their center values.



IV. THE PROPOSED MULTIPLE-LEVEL GENETIC-FUZZY MINING ALGORITHM  According to the above description, the proposed multi- level genetic-fuzzy data mining algorithm for mining both membership functions and fuzzy association rules is described below.

The proposed multiple-level GFM algorithm: INPUT: A body of n quantitative transaction data, a set of m  items, each with a number of linguistic terms, codes  of item names, a predefined taxonomy, a support threshold ?, and a confidence threshold ?.

OUTPUT: A set of multiple-level fuzzy association rules with its associated set of membership functions.

STEP 1: Encode the predefined taxonomy using a sequence of numbers and the symbol ?*?, with the t-th number represents the branch number of a certain item on level t.

STEP 2: Translate the item names in the transaction data according to the encoding scheme.

STEP 3: Find level-k representation of the transaction data using following substeps:  SUBSTEP 3.1: Set k = 1, where k is used to store the level number being processed.

SUBSTEP 3.2: Group the items with the same first k digits in each transaction datum Di, where 1 ? i ? n.

Denote the j-th group on level k in transaction Di as vkij.

SUBSTEP 3.3: If level-k representation is not null, set k = k + 1 and go to SUBSTEP 3.2; otherwise, go to next step.

STEP 4: Randomly generate a population of P individuals; each individual is a set of membership functions for items in level-1 classes of the taxonomy.

STEP 5: Encode each set of membership functions into a string representation.

STEP 6: Calculate the fitness value of each chromosome by the following substeps:  SUBSTEP 6.1: Set k = 1, where k is used to store the level number being processed.

SUBSTEP 6.2: Transform the quantitative value vkij of each transaction datum Di (i =1 to n) for each encoded group name Ijk into a fuzzy set fijk represented as:  +++ k jh  k ijh  k j  k ij  k j  k ij  R f  R f  R f )(   )(   )( 1 .... ,  using the corresponding membership functions represented by the chromosome, where Rkjl is the l-th fuzzy region of item Ijk, 1 ? l ? h, fijk is vkij?s fuzzy membership value in region Rkjl, and l (= |Ijk|) is the number of linguistic terms for Ijk.

SUBSTEP 6.3: Calculate the scalar cardinality of each fuzzy region Rkjl in the transactions as follows:  =  = n  i  k ijl  k jl fcount   .

SUBSTEP 6.4: Check whether the value of each fuzzy region Rkjl is larger than or equal to the predefined minimum support value ?. If the value of a fuzzy region Rkjl is equal to or greater than the minimum support value, put it in the large 1-itemsets (L1k) at level k. That is:  L1k = { Rjlk | countjlk ? ?, 1 ? j ? mk, 1 ? l ? h }.

SUBSTEP 6.5: If level-k representation is not null, set k = k + 1 and go to SUBSTEP 6.1; otherwise, go to next step.

STEP 7: Set the fitness value of the chromosome as the summation of the number of large 1-itemsets in L1k for all levels divides by its suitability suitability(Cq) as follows:  )(  || )( 1   q  levels  k  k  q Cysuitabilit  L Cf == .

STEP 8: Execute crossover operations on the population.

STEP 9: Execute mutation operations on the population.

STEP 10: Using the selection criteria to choose individuals for  the next generation.

STEP 11: If the termination criterion is not satisfied, go to  Step 6; otherwise, do the next step.

STEP 12: Output the set of membership functions with the  highest fitness value.

The set of membership functions are then used to mine  multiple-level fuzzy association rules from the given transactions. The multiple-level fuzzy mining algorithm proposed in [12] is then adopted to achieve this purpose.



V. EXPERIMENTAL RESULTS In this section, experiments made to show the performance  of the proposed approach are described. They were implemented in Java on a personal computer with Intel Core i5 CUP 661 @ 3.33GHz and 1.8GB RAM. And, 10000 transactions were used in the experiments. The initial population size P was set at 50, the crossover rate pc was set at 0.8, and the mutation rate pm was set at 0.001. The parameter d of the crossover operator was set at 0.35 according to [9] and the minimum support ? was set at 0.04 (4%).

There were 64 purchased items (terminal nodes) on level 3, 16 generalized items on level 2, and 4 generalized items on level 1. Each non-terminal node had four branches. Only the terminal nodes could appear in transactions. Data sets with different numbers of transactions were run by the proposed algorithm. In the data set, numbers of purchased items in transactions were first randomly generated. The purchased items and their quantities in each transaction were then generated. An item could not be generated twice in a transaction.

After 500 generations, the final membership functions are apparently much better than the original ones. For example, the initial membership functions of four item classes are shown in Figure 3.

Quantity  Item Classe1  3 9  Low Middle High  0 2 2   2 3 Quantity  Item Classe2  3 9  Low Middle High  0 1 3   1 2  Quantity  Item Classe4  2 4  Low Middle High  0 1 1   1 2Quantity  Item Classe3  3 12  Low Middle High  0 1 5   1 1  Quantity  Item Classe1  3 9  Low Middle High  0 2 2   2 3 Quantity  Item Classe2  3 9  Low Middle High  0 1 3   1 2  Quantity  Item Classe4  2 4  Low Middle High  0 1 1   1 2Quantity  Item Classe3  3 12  Low Middle High  0 1 5   1 1 Figure 3.  The initial membership functions of four item classes  In Figure 3, the membership functions have the two bad types of shapes according to the definition in the previous section. The membership functions of Item Class1, Item Class2 and Item Class3 are ?too separate?. The membership functions of Item Class1 and Item Class4 are ?too redundant?. After 500 generations, the final membership functions for the four item classes are shown in Figure 4.

Quantity  Item Classe1  9.50  Low Middle High  0 2.04 3.28   2.03 Quantity  Item Classe2  5.41  Low Middle High  0 1.16 1.83   1.10  Quantity  Item Classe4 Low Middle High  0 1.11   1.10Quantity  Item Classe3  9.99  Low Middle High  0 1.82 4.43   1.82  5.80 3.05  2.98 1.56  4.522.71 2.57  1.43 4.06  1.48  Quantity  Item Classe1  9.50  Low Middle High  0 2.04 3.28   2.03 Quantity  Item Classe2  5.41  Low Middle High  0 1.16 1.83   1.10  Quantity  Item Classe4 Low Middle High  0 1.11   1.10Quantity  Item Classe3  9.99  Low Middle High  0 1.82 4.43   1.82  5.80 3.05  2.98 1.56  4.522.71 2.57  1.43 4.06  1.48 Figure 4.  The final membership functions of four item classes after 500 generations  It is easily seen that the membership functions in Figure 4 is better than those in Figure 3. The two bad kinds of membership functions didn?t appear in the final results. Then, the five runs average value of average fitness values of the chromosomes along with different numbers of generations are shown in Figure 5.

Figure 5.  The five runs average values of average fitness values along with different numbers of generations  From Figure 5, we can observe that the curve gradually goes upward, finally converging to a certain value.



VI. CONCLUSION AND FUTURE WORKS In this paper, we first propose a Multiple-level Genetic-  Fuzzy Mining (Multiple-level GFM) framework for searching membership functions suitable for multiple-level mining problems and then use the final best set of membership functions to mine multiple-level fuzzy association rules. Then, a Multiple-level GFM algorithm is proposed. Experiments on a simulation dataset were also made to show the effectiveness and stableness of the proposed approach. The main contribution of this work is that the proposed algorithm is the first work for mining both membership functions and fuzzy association rules on multiple-concept levels. However, the          proposed approach is just a beginning. In the future, we will continuously to enhance the Multiple-level GFM framework for more complex problems.

