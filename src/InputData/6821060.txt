A Survey on Cloud Accountability

Abstract?Recent advances in cloud computing technology now allow users to access data wherever they are.

However, with these advances come some costs: cloud data is often stored and manipulated by remote machines that users have no access to. Moreover, cloud service providers often claim that their data is safe and secure, but users rarely have ways to make sure. Based on recent academic and industrial research, this paper surveys various approaches cloud service companies can make to ensure proper accountability. The paper focuses on issues such as cloud accountability framework, data confidentiality, and user privacy. More importantly, we also put forth some efficiency advice.

Keywords-cloud computing; accountability; data sharing; logging

I.  BACKGROUND The cloud computing technology of today and the future promises to bring demonstrable benefits to people's lives.

Thanks to the rapid development of techniques related to cloud computing (e.g. heterogeneity access, distributed storage and elastic computation, etc), end users now have the capability to handle complex computation tasks and share and retrieve data over the Internet nearly without restriction [1].

However, the arrival of cloud computing brings with it concerns regarding security breaches and data accountability issues [2]. For cloud service providers, it is technically difficult to manage and distributed data efficiently while also ensuring the user s data is secure and controlled.

In this section we will focus on the service model for cloud computing [3], as seen in Figure 1. According to the service level agreement (SLA), cloud service provides (CSP) differentiated services for customers such as authentication, authorization, virtual machine management, and resource assignment. Although all cloud service providers claim to provide the maximum available security, customers, for various reasons, are still often weary of such claims.  First, even if a user accepts the SLA agreement, the core implementation process (monitoring and management) falls under the jurisdiction of the CSP [4]. Second, it is unavoidable that the CSP will encounter issues such as security breaches, malicious data modification, privacy leaks, inappropriate management, and workflow monitoring. Based on our online research, we ve found seven aspects that need to be taken into consideration [5]:  A.  Abuse and nefarious usage Spammers, Hackers or criminals launch various attacks  after taking advantage of the convenient registration and simple procedures often used to access cloud data.

B. Malicious insiders Customers do not have a clear understanding of provider  policies and procedures; and because of this malicious insiders can gain unauthorized access into organizations and their assets.

C. Shared technology vulnerabilities The Cloud is based on a shared infrastructure; it is not a  multi-tenant architecture. Overlooked flaws have allowed guest operating systems to gain unauthorized levels of control and /or influence on the platform.

D. Data loss or leakages Deleted or altered data without a backup may lead to  data loss or leakages, which significantly increases the possibility that data will be compromised.

E. Unknown risk profile Organizations are not always actively involved with  hardware and software ownership and maintenance.

F. Insecure application programming interfaces Any access to the cloud is through interfaces or APIs. As  such, providers must ensure that they integrate security into into their service models.

G. Account, service and traffic hijacking Stolen credentials may lead to account, service and  traffic hijacking.

Traditional security approaches (encryption /description, authentication/authorization, access control, etc) often fail to properly secure cloud computing technology [6]. As a novel research topic, cloud accountability has recently attracted much attention from both industry and academia.  In this paper, we investigate cloud accountability issues and make a survey on recent proposals and solutions. We consider issues related with cloud accountability such as framework, data confidentiality, and user privacy.

DOI 10.1109/CLOUDCOM-ASIA.2013.29    DOI 10.1109/CLOUDCOM-ASIA.2013.29    DOI 10.1109/CLOUDCOM-ASIA.2013.29     Figure 1. Cloud computing scenario  The rest of the paper is organized as follows: Section 2 contains a list of requirements to properly realize Cloud Computing accountability. In Section 3, we introduce three Cloud Computing accountability frameworks.  Section 4 describes today s urgent and unanswered challenges.

Section 5 offers suggestions and Section 6 puts forth a conclusion.



II. REQUIREMENTS In this section, we briefly describe the technical  requirements of cloud accountability, referring to paper [7, 8, 9]:  A. Availability.

Any cloud accountability solution and approach should  satisfy the basic requirements of stability and efficiency.

B. Access Control.

It is important to ensure terminal legitimacy by  implementing a propert access strategy. This includes authenticating identities and restricting user permissions for data in the cloud.

C. Data Confidentiality and Integrity.

A Cloud accountability handling mechanism should not  compromise the original data confidentiality and integrity.

D. Real-time Data Monitoring and Logging.

Any operation related to a user s data should be logged  and notified in real time.

E. Trust management.

The cloud computing service providers have priority  access to the data stored in the cloud.

F. Auditability.

A Cloud Log should be verifiable and auditable.

G. Management.

As more terminals such as PCs, Notebooks, iPads, and  Smart phones  access the cloud, it is important to ensure the terminal security and identity.

On the one hand, customers (both industrial and consumer) need an efficient way to control their data in the cloud; on the other hand, these customers wish to be informed about how, when and who is operating their cloud resources in the event their data is compromised. Recently, cloud accountability technologies have appeared that aim to ensure proper transparancy.



III. CLOUD ACCOUNTABILITY FRAMEWORK In this section, we describe a few cloud accountability  frameworks and their corresponding approaches; we refer to the recent research literature and a few typical research projects.

A. Cloud Information Accountability Framework In order to implement cloud auditability and accountability, the Cloud Information Accountability (CIA) framework has been proposed [10]. The concept of the CIA is to make sure all data is transparent and traceable under any circumstances. It supports efficient end-to-end accountability such as authentication, access, and control.

There are mainly three components of the CIA:  1) Programmable JAR. The authors of the CIA proposed to extend the programmable capability of Java Archives (JARs) to automatically log the usage of the users  data by any entity in the cloud.

2) Logger. The Logger is defined as a nested Java JAR file that stores a user s data items and the corresponding log files.

3) Log harmonizer. This component is in charge of making copies of the logger components that contain the same data items. The Log harmonizer is implemented as a JAR file which consists of the class files for both a server and a client process. It is responsible for the auditing.

Designers of CIA developed two distinct modes for auditing: push mode and  pull mode [10].

a) push mode. The push mode is an approach wherein the cloud platform periodically sends corresponding logs to the data owner or customer.

b) pull mode.  The pull mode is an alternative approach wherein the customers (or another authorized party) are allowed to retrieve data logs anytime they want.

Figure 2. User identity authentication and data access procedure [10]  Figure 3. Overview of the cloud information accountability framework  The technical specification of the CIA (Figure 3) can be summarized as follows:  1)  JAR Creation w/IBE keys. At the beginning, each user creates a pair of public and private keys based on Identity-Based Encryption [11]. Then, according to the pair of keys, users can create a logger component, which consists of a JAR file, to store a set of simple access control rules that are defined by the data owner.

2) Authentication. The authors use Open SSL-based certifications as a trusted certificate authority to authenticate the JAR in CSP.

3) Encrypted Logging. Whenever and whatever the data is accessed, a log record will automatically be generated by the JAR. Then, these logs will be encrypted ( with the public key of the data owner) and stored.

4) Error correcting information submit. The logger sends some error correction information to the log harmonizer, which will handle the log file to avoid potential abnormalities.

5) Send merged logs to the user. The log harmonizer merges the collected logs into one log and then sends the log to the data owner. During this process, logs will be decrypted by a private key to verify the log s integrity.

B. A4Cloud The A4Cloud project, which is an Integrating Project in  the EU s 7th Framework Programme (FP7) that commenced on October lst 2012, aims to extend accountability across the entire cloud service value chain [12] (Figure 5). After a year of investigation into the cloud security and accountability field, the working team concluded that it is difficult to achieve cloud accountability only through the implementation and optimization of purely technical measure. As such, the working team proposes a cloud accountability model that contains three elements: Layers, Principle, and Mechanism: 1) Accountability Layers:  Accountability consists of three basic layers: workflow, data, and system (Figure 4). The workflow layer is the upper layer, which aims to audit 1) trails and 2) audit - related data found in the cloud s software services. The system layer is the lowest layer which uses performing file - centric logging within the OS, File system and Cloud s internal network; it focuses on tracks data containers. The data layer supports the abstraction of data while also facilitating data - centric logging; it relies on the Provenance logger and consistency logger.

Figure 4. Accountability consist of three basic layers  2) Accountability Principle: The primary idea of the A4cloud project is to perform  auditing functions in the cloud services supply chain (Figure 5); functions that are executed by a trusted 3rd party organization instead of the cloud service provider itself.

Customers are allowed to participate (under proper supervision and regulation) in the process  various accountable functions. This ensures data security.

3) Accountability Mechanisms:     A4cloud provides preventive (mitigating risk), detective (monitoring and identifying risk and policy violation) and corrective (managing incidents and providing redress) mechanisms, with each individual mechanism handling different types of functions in different cases. Taken together, these mechanisms are capable of providing CSPs transparency for the third party control of cloud data.

Figure 5. A chain of accountability  The objective of the A4Cloud project is to realize the following functionality for cloud customers.

1)  Autonomous Control. The users absolute control over data. Likewise, the user is kept abrest of news related to their data.

2)  Self - management rules. Enable owners to make suitable management rules.

3)  Monitor. management rules. The A4Cloud can send notifications to the owner and maintain the monitor information.

4)  Effectively. management rules. The A4Cloud is ethical and effective.

C. Access control enhancement based Cloud Accountability In the literature suggests that Cloud service providers  are responsible for protecting cloud data. They should do so by enhancing data access control mechanisms; likewise, they recommend  an access control framework for cloud accountability [13].  The specific technical specification could be described in the following steps (Figure 6):  1) User data is represented as XML based document.

2) Policy strategy (access rules, limitation  management, etc.) of the XML document should be defined by the data owner.

3) Access strategy relies on access role and corresponding certificate. The data owner or visitor who accesses an XML document must own the corresponding access certificate. In this case, access might mean operations such as read, write, or copy.

4) Certificate could be hierarchical structure. For example, a manager s certificate should have a higher priority, and a capability to access more if not all of the data, when compared to an employee s certificate.

5) Public and private key pair is implemented to guarantee data encryption, decryption and integrity. Data owners encrypt and sign the combinations of the document using his/her private secret key [14]. The visitor is able to  verify the authenticity and integrity of the document via the data owners  public key.

Figure 6. Access control based accountability framework  Then, the owner will send the document and strategy to the release device. After that, the release device will send part of the document to visitors based on the access certificates. When a visitor accesses the document, he/she must request the strategy from the document s owner.



IV. CHALLENGES These solutions can ensure the security and  accountability of the cloud, but they still face many limitations and technical challenges. There are some of those challenges:  A. Log Storage and Merge.

When data operations trigger event logging, there will be  issues about how to store these log files; the size of the log; and how to efficiently merge all the distributed logs into one complete log [15].

B. Log Security issues.

The logger is closely related to the data. Therefore,  access to the log as well as the log s integrity and confidentiality remains an issue. [16].

C. Cloud Service Provider Issues.

Although some have proposed third-party monitoring  and accountability for visitors and providers alike, currently these third-party providers aren t held to the same level of accountability as primary providers.

D. Policy Issues.

The privacy policy and regulation will vary in different  countries. However, the improper application of cloud computing must be limited by a nation s laws. For example, European countries have forbidden that data be removed from their countries.

E. Repeat.

The receiver will intercept and record the information,  and send it repeatedly when necessary.

F. Interception.

The hackers may intercept sensitive information by  intercepting the data on devices. They seek to obtain the data by analyzing the intercepted information.

G. Information Integrity.

Hackers may destroy the data and the log s integrity  with one of the following three methods.

1)  Tamper. Change the order, sequence or direction  of the information flow; Change the content of the information.

2)  Delete. Delete a part of the message or delete the message in its entirety.

3)  Insert. Insert information into the message so that the receiver can no longer understand the message.

From a technical point of view, cloud service providers may bypass accountability measures and access the cloud s virtual machines without a system log generation.  From a implementation point of view, the proposed framework and solutions are based on a theoretical analysis without the benefit of an actual implementation and evaluation.



V. ADVICE ON REALIZATION OF CLOUD ACCOUNTABILITY  A. Advice to Cloud Customers Do not put all your data on the cloud, and ensure that  you control the security of your sensitive data.

1) As much as possible don t put sensitive data in the  cloud.

2) Encrypt your private/sensitive data before uploading it  to the cloud.

3) Don't fully trust the CSPs claims of completely secure  service.

B. Advice to Cloud Service Providers Strengthen access control and authentication.

1) Provide security for enterprise data centers, network and national defense.

2) Use cryptographic techniques to ensure the security of sensitive data.

3) Implement a unified authentication technology around the world.

4) Implement a unified user identity management and authentication, single sign-on, and access management.

C. Accountability frameworks and related control measures.

Extend credibility certifications to professional third-  parties. The third-party certification should have a complete, scientific evaluation system. It must be able to evaluate cloud service providers and do as follows:  1) Multiple audit. Ensure that the cloud environments are being monitored and safety tested in real-time.

2) Dynamic secret key. A dynamic key won t reside in unencrypted, so that hackers can not get the key through the system snapshot.

3) Track the actual usage of the data. The cloud accountability should provide feedback to the user when user s data has been destroyed or accessed without authorization.

4) Log analysis. The cloud accountabilities can divide the log file through the association rules in data mining.

Provide the credibility analysis for all of a user s log files.

Show the level of a visitors  risk.



VI. CONCLUSION In this paper, we listed several requirements, as found in  the literature, for proper cloud accountability. We also presented several related studies such as CIA and A4Cloud.

We offered cloud accountability issues that remain urgent today. Both cloud customers and CSPs need to be concern about the security of data in the cloud. This paper also provided some suggestions for achieving cloud-computing accountability.

