Technology of Information Push Based on Weighted Association Rules Mining

Abstract  Traditional model of association rule mining is  adapted to handle weighted association rule mining problems where each item is allowed to have a weight.

The goal is to steer the mining focus to those significant relationships involving items with significant weights rather than being flooded in the combinatorial explosion of insignificant relationships. We discuss the use of association rules mining algorithm to push information automatically, and proposed mixed weighted association rules mining algorithm that apply to information push.

We identify the related information set and the vertical weight through the analyzing of users? behavior, and use the Google?s PageRank algorithm to define the horizontal weight of information. At last, we evaluate our algorithm against the traditional Apriori algorithm in information push, thereby justifying empirically the strength of our approach.

Keywords: knowledge discovery; information push; association rules mining; weight  1. Introduction   One of the most important functions of the Internet is information retrieval. However, knowledge discovery on the Internet is still frustrating and inefficient when simple keyword searches can convey hundreds of thousands of documents as results. To documents database enterprises, provide high quality service, such as information push, is becoming more important. Some diverse solutions have been proposed so far [1, 2, 3]. However, there are scarcely any well-considered and effective methods in the domain of information push.

In order to enhance the recommendation based on the quantitative computation of information relativity, we apply association rules mining into information push technique, and obtain some meaningful results.

The rest of this paper is organized as follows. Section 2 describes the Improved Weighted Association Rules Mining for Information Push (IWARMIP) algorithm.

Section 3 introduces the important technology in deciding weight. Section 4 is devoted to experimental analysis.

2. The Improved Weighted Association Rules Mining for Information Push   2.1. The Definition of Association Rules   Let I ={I1, I2, ? , Im} be a set of items. Let D, the task- relevant data, be a set of database transactions where each transaction T is a set of items such that T I? . Each transaction is associated with an identifier, called TID. Let A be a set of items. A transaction T is said to contain A if and only if A T? . An association rule is an implication of the form A B? , where A I? , B I? , and A B? = ? . The rule A B? holds in the transaction  set D with support s, where s is the percentage of transactions in D that contain A B? . This is taken to be the probability, ( )P A B? . The rule A B? has confidence c in the transaction set D, where c is the percentage of transactions in D contains A that also contains B. This is taken to be the conditional probability,  ( | )P B A . That is, support(A? B) = P(A? B) confidence (A? B) = P(B|A) Rules that satisfy both a minimum support threshold  (min_sup) and a minimum confidence threshold (min_conf) are called strong. By convention, we write support and confidence values so as to occur between 0% and 100%, rather than 0 to 1.0 [4].

Use association rules mining to push information can accelerate the communication of subjects, and provide a new method of mining relative information. For the limitation of classic association rules mining algorithm in information push, we propose a new method IWARMIP which can compute the relativity of information automatically.

2.2. The Setting of Weight   The information push discussed in this paper is based on users? behavior that preserved in web log. So we take everyone piece of log as a record. Draw lessons from association rules mining, we give each record a vertical weight and give each information a horizontal weight.

Then, we propose a weighted association rules mining algorithm suitable for information push.

2.2.1. Vertical weighted association rules. As different record has different significance, when push information, we should reduce the influence of less significant records   DOI 10.1109/FSKD.2008.158    DOI 10.1109/FSKD.2008.158     in association rules mining. On the contrary, we should enhance the influence of more significant records. Give each record a vertical weight vi (i={1,2,?,n}), vi is set according to the different application. To each itemset X(X?I), if X has vertical weight vi, X has vertical  weighted support )(sup Xv ,  v  n  i ii v N  XCountv X ? == 1 ))(()(sup  Count(Xi) is the amount of itemset X that has vertical weight vi, Nv is the total amount of weighted records.

( )nv i iiN v N==?  Ni is the total amount of records that have vertical weight vi.

To an itemset X, if X has vertical weighted support no smaller than minimum vertical weighted support, X is a vertical frequent itemset. Otherwise, X is a non vertical frequent itemset. If the rule X? Y has vertical weighted support no smaller than minimum vertical weighted support, and has vertical weighted confidence no smaller than minimum vertical weighted confidence, it is a strong rule.

2.2.2. Horizontal weighted association rules. As different information has different significance, we give each information item ij in I={i1, i2,?,im} a horizontal weight hj, hj is also set according to the different application. ip ? X, p={1,2, ? ,m}. The horizontal  weighted support is )(sup Xh ,  )sup()(1)(sup Xh k  X Xi  jh p  ? ?  =  sup(X) is the support of X, k is the amount of items in  X, hx= )( 1 ?  ?Xi j  p  h k  is the horizontal weight.

2.2.3. Mixed weighted association rules. As analyzed above, we can finally get the mixed weighted association rules in information push. In information set T and itemsets I={i1,i2,?,im}, we first give each record a vertical weight vj, j={1,2,?,n}, each item ip a horizontal weight hp, p={1,2,?,m}, h1? h2?? hm, then the mixed weighted support of itemset X is:  sup ( ) sup ( )m x vX h X=  ( ( ))1 ( )  p  n i ii  p i X v  v Count X h  k N =  ?  = ?? Count(Xi) is the amount of itemset X that has vertical  weight vi, Nv is the total amount of weighted records.  hX is the horizontal weight. To an itemset X, if X has mixed  weighted support no smaller than wminsup (minimum weighted support), X is a mixed frequent itemset. If the rule X? Y has mixed weighted support no smaller than minimum weighted support, and has mixed weighted confidence no smaller than minimum weighted confidence, it is strong rule.

2.3. The Improved Weighted Association Rules Mining for Information Push (IWARMIP) Algorithm   The Apriori algorithm proposed in [5] is the most typical one in association rules mining, and almost of all the others are based on it. But they all have a foundation that any subset of the frequent itemset is still frequent, while in weighted association rules mining is untenable.

In order to deal with the weight, the meaning of frequent itemset has been changed, which lead that the subset of the frequent itemset may not be frequent. To resolve this problem, consulted the references [6, 7], we proposed the algorithm of IWARMIP. The pseudo code of algorithm shows in figure 1.

Algorithm IWARMIP  Input: (1)A databases D?in which each record ri has its weight vi and each itemset ij has its weight wj;  (2)Two threshold values wminsup and minconf.

Output: Weighted Association Rules.

size = Scan(D); C1= Generate_C1 (D); L1={c? C1|supm(c)? wminsup}; for (k=2; k? size; k++) Ck= Generate_Ck(Ck-1); Ck=Prune(Ck); Lk={c? Ck|supm(C)? wminsup}; L=? kLk; R=Generate_Rule(L); End  Figure 1. The pseudo code of IWARMIP algorithm Function Scan finds the max length of itemsets that are  possible in D, and returns its value. Function Generate_C1 generates the candidate 1-itemsets, and computes their mixed weighted support, then keeps the mixed frequent itemset into L1. Function Generate_Ck uses candidate (k-1)-itemsets Ck-1 to generate the candidate k-itemsets Ck. Function Prune prunes useless itemsets, then uses Ck to generate Lk. Function Generate_Rule is used to generate association rules.

3. Important Technology Analyses   We mainly exploit the database of CQVIP (Http://www.cqvip.com) to do the information push. So     the meaning of ?information push? in this paper refers to ?document push?. As the existing data in the CQVIP database is not suitable for mining, we first organized the data to fit our mining. The organized data structure is shown in table 1.

Table 1  The organized data structure  ID Initial information Relative  information Item A B   3.1. Determine Vertical Weight   In [8], G. Yan proposed the method of determining the relative web pages. In this paper, we modified and used the method to determine the relative documents set. The analyzed data is get from the web logs, the analysis process is shown in figure 2.

Figure 2.  The Web logs analysis process  Define the users? interest as ?  which reflect the users? attitude to the relative information. Then we get the users? interest matrix like table 2.

Table 2 . The users? interest matrix  Document User D1 D2 D3 ?? Dm  U1 11?  12?  13?  ?? 1m?  U2 21?  22?  23?  ?? 2m?  U3 31?  32?  33?  ?? 3m?  ?? ?? ?? ?? ?? ??  Un 1n?  2n?  3n?  ?? nm?  3.1.1. Judge the users? interest in A. The users? interest in A is analyzed major in the way of accessing and operating to A. Give each accessing and operating a value, the product of them is user Ui?s interest i?  in A.

As different database has different data structure, our research is based on the CQVIP database. The standard to determine value is shown in table 3 and table 4.

Table 3.  The value of interviewing The way of accessing A Value  Direct retrieval and A is in result list. 0.6 A isn?t in result list, access it through other document.

0.4   Table 4.  The value of operating to A  Access depth Value Reading  Value Take a glance to abstract 0.5 Reading online 0.2  Collect abstract  0.1 Download 0.2 Download abstract Print abstract For instance, a user accesses A in the result list, and  then takes a glance to the abstract and reads it online. So the user?s interest in A can be computed as follows:  0.6*(0.5+0.2)=0.42 3.1.2. Judge the users? interest in the relative documents. The user Ui?s interest in Dj is analyzed mainly in the way of operating to Dj. If Ui does nothing on Dj, we consider he/she has no interest in Dj. The standard to determine value is shown in table 5.

Table 5.  The value of operating to Dj  Access depth Reading Follow-up operation  Take a glance to abstract  0.3 Reading online 0.2 Yes 0.1  Collect abstract  0.2  Download 0.2  Download abstract  Print abstract  For instance, a user takes a glance to the abstract of Dj and reads it online, then accesses other document through Dj. So the user?s interest in Dj can be computed as follows:  0.3+0.2+0.1=0.6 3.1.3. Compute the total interest that Dj obtained. The relativity of Dj is determined by users? total interest. Take vector X={ 1? , 2? , ? , n? } for users? interest in A, vector Y={ j1? , j2? , ? , nj? } for users? interest in Dj.

Then the total interest that Dj obtained can be computed by:      ( , ) n  j i ij i  D X Y ? ? =  =?  jD ( , )X Y  is the total interest that Dj obtained which can be used as vertical weight.

3.2. Determine Horizontal Weight   We use Google?s PageRank algorithm, proposed in [9, 10], to determine horizontal weight, which now be used to evaluate web pages. The theoretical source of PageRank is bibliometric analysis [11].

We can describe PageRank simply as follows: PR(A)=(1-d)+d* (PR(Ti)/C(Ti)+?+PR(Tn)/C(Tn)) PR(A)is the PR of page A, T1, T2, ?  , Tn are the  amount of pages click into A; PR(Ti)is the PR of page Ti(i=1, 2, ??n); C(Ti)is the amount of pages click out of Ti(i=1, 2, ??n); d is a decay factor, 0<d<1, usually is 0.85. Use PageRank algorithm can obtain the PR of all the relative information, which can use as horizontal weight.

4. Experiment Analyses   The experiment is aim to compute the relativity of any one document to the initial document, from which we can push information.

4.1. Data Gathering   We random sampling an initial document ?Design of an XML Based Citation Index Model and Its Solution?, and obtain 50 relative documents. The weighted data table shows in table 6.

Table 6.  Weighted data table(part)  ID (vertical weight)  Relative document (horizontal weight)  001(2.67) Chinese Social Science Citation Index (CSSCI) (1.104)  002(1.25) An XML Based Solution to Integrate Web Data Sources (0.861)  003(0.76) Study on Retrieval Details of Three SCI Electronic Version (0.537)  004(2.15) A Method of Forming Database Based on XML (0.183) ?? ??   4.2. Experiment Results   In order to keep the availability and efficiency of the result, we trial repeatedly, and take the wminsup as 0.5%, the minconf as 0.5%, then get the strong association rules, shows in table 7.

Table 7. Strong association rules  ID Relative document Confidence  001 Chinese Social Science Citation Index 0.103  002 Construction and application of Citation Index Based-on Computer 0.048  003 Research on the model of citation analysis based on route 0.036  004 New Development Trends in Computer Citation Analysis 0.025  Research on Citation Analysis System Based on Theory of Data Warehouse  0.024  Research and Application of heterogeneous Data Integration Based  XML  0.024  007 A Method of Forming Database Based on XML 0.022  008 An XML Based Solution to Integrate Web Data Sources 0.02  009 Study on Retrieval Details of Three SCI Electronic Version 0.007   4.3. Experimental Evaluation   To the same data, using the Apriori algorithm to mining, the strong association rules shows in table 8.

Table 8. Comparison result  ID Relative document Confidence  Design and Implementation of Chinese Police Science Citation Index  0.082  002 Chinese Social Science Citation Index 0.081  003 The Technology of XML and It?s Realization 0.063  The Methods and Strategies for the Construction of Citation Index Database Based on Web  0.055  Research on XML-Based Orderform Management System Information Modelling  0.033  Research on Citation Analysis System Based on Theory of Data Warehouse  0.025  007 New Development Trends in Computer Citation Analysis 0.021  008 Construction and application of Citation Index Based-on Computer 0.015  009 Study on Retrieval Details of Three SCI Electronic Version 0.011  When using results of table 7 to push information to other users, 89% of the users? access is in the pushing list, while using results of table 8, only less than 50% of the users? access is in the pushing list. The results show the advantage of IWARMIP algorithm.

5. Conclusions   In this paper, we use typical association rules mining algorithm to propose an improved weighted association rules mining for information push algorithm that available to information push. The IWARMIP overcomes the problem of typical Apriori algorithm that every record and every item have equal importance in information pushing, it can compute relativity quantitatively. Through experiment evaluation, shows the availability in information push of our IWARMIP, and gets some useful results.

Also, there are still some problems need to be resolved, such as the reasonableness test of determining the relative documents set and the method of determining weight. That?s our next work.

