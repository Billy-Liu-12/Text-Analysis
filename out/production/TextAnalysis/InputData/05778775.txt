A Privacy Preserving Algorithm for Mining  Distributed Association Rules

Abstract?For resolving the problem that the existing protocol of secure two-party vector dot product computation has the low efficiency and may disclose the privacy data? a method which is effective to find frequent item sets on vertically distributed data is put forward. The method uses semi-honest third party to participate in the calculation, put the converted data of the parties to a third party to calculate. The results show that compared to the original Vector dot product algorithm, the method can obviously improve the algorithm efficiency and accuracy of the results at the precondition that assured the data privacy of all parties.

Keywords- vector dot product; secure two-party computation; association rules; privacy preserving

I.  INTRODUCTION As the rapid development of computer networks and data  mining, the collection, management and analysis of massive data have become more convenient. In business, science and medical research fields it plays a positive role. However, in reality, an important issue that can not be avoided in data mining is the privacy protection. Mining do not involve the legality of their own problems. But the data mining process often accompanies with the information disclosure, especially when multiple data sources cooperate to mine, will lead to the disclosure of information between data sources. The results often lead to the leakage of sensitive data, such as customer shopping habits, the patient's condition information, the customer transactions of bank cards and others which will lead to the disclosure of personal privacy. These problems give a challenge to the data sharing and traditional data mining.

Therefore, in the data mining process how to solve the privacy issue of data mining has become a hot topic in industry.

Currently, distributed association rule mining privacy protection mainly use privacy protection technology which is based on cryptography. The representative is secure multi-party computation in distributed data mining. Secure multi-party computation is a distributed computing. K sides with secret input wish to use their input common to compute a function.

Calculation requires every party can receive the correct mining results without disclosing their privacy. Secure two-party computation was originally proposed by Yao [1]. Later Goldriech [2] promoted it to multi-party secure computation for the establishment of any functions. Commonly used multi-  party secure computation protocols are: secure sum, secure dot product, secure set union protocol and so on.  Using the secure multi-party computation to maintain the privacy, we need  not only to consider the accuracy of mining results, but to consider the security strength and computation costs, communication costs and other issues.

Many scholars conducted research on privacy protection based on secure multi-party computation. J. Vaidya[3] and others put forward VDC and VDCN of mining association rules privacy protection in the vertical distribution database.

The algorithm VDC is for the database distributed in two sites.

The algorithm VDCN is for a database distributed in n (n> 2) sites. The algorithm through calculating the dot product which represent the sub itemset to get the support count of itemset. It is based on solving a n-linear equations, while the number of equations is less than n, the result is uncertain. By such a way,we achieve the purpose of protecting privacy. The main disadvantage of this method is the production of a large number of random vectors and matrices in the data conversion process, computation and communication cost highly. And the site can derive the exact support count from other sites according to the candidate itemset, leading to the disclosure of private information. Boris Rozenberg and others proposed an efficient solution [4], that by adding false information to the the original transaction database to hide the specific transaction information. The algorithm's security has been improved and the corresponding computation and communication overhead is relatively low, but the accuracy of mining is affected. [5] [6] Two different methods of privacy protection for the horizontal distribution database were proposed. The former used RSA public key encryption [7] and the homomorphic encryption methods to encrypt the original data. Confidentiality is very good, but the time overhead is great. The latter proposed a secure frequent pattern tree to protect the security of privacy, even if all those sites and data miner collude, the private information can not be obtained and the communication time is relatively small. Drawback is that the accuracy of algorithm is affected by mining.

This article focuses on how to effectively protect the privacy of each site and effectively mine the accurate association rules when the database distributed vertically. We put forward a vector product protocol based on semi-honest third party (T-VDC). Experimental results show that the     algorithm ensure the security and computational efficiency while mining the association rules quickly and efficiently.



II. BASIC CONCEPT Association rule mining problem can be described as  follows: I={i1,i2,?, im}is a collection of items. D is the set of transactions, each transaction T is a set of items. Each transaction is a unique symbol, called TID. If X T? , that is transaction T contains X, X is the set of some items in I.

Association rule is expressed as: X?>Y,X ? I,Y ? I and X Y? = ? . The confidence of the rule X =>Y in the  transaction set D is c, that is c% transactions that contain X, also contains Y. If the support of rule X=>Y in the transaction sets is s, that is s% transaction includes X?Y.

Association rule mining is to find the rules that meet the minimum support and confidence .

This paper focuses on the vertical distribution database, the vertical distribution database means that data from different sites come from the same transaction set, but the attribute is located in different sites. Such as people's financial information in the database of the banks, while the tax information in Revenue Department, or in their respective work unit?s database, the insuring project in insurance company?s database.

The mathematical model of Vertical distribution database is as follows: Let k data set located in different sites N1,?,Nk (k- partition) the data sets were DB1,?,DBk, in which DBi?1?i ?k?is a local database, global database are DB= DB1??? DB. If the database DBi have n affairs and mi attributes, then the global database have n affairs and ?k-1 i=0 mi attributes. That is, data sets DBi are n rows and mi column, the global database with n rows and ?k-1 i=0 mi column.

The target of distributed association rule mining is the data come from different cooperated parties. All parties work together to complete global information mining. To protect the privacy of data, all parties are reluctant to share their own data to one another. So a method Which can share data safely is needed.



III. VECTOR-BASED SEMI-HONEST THIRD-PARTY PRODUCT PROTOCOL (T-VDC)  The existing algorithms have some drawbacks, such as the large communication cost and easy to leak privacy. In order to improve it, in this paper we use a pair of random numbers to encrypt the original data and with the help of the third party to calculate. The process does not need a large number of randomly generated vectors and matrices and the communication process only transfer a small amount of vectors and numerical. So compared to the VDC algorithm, computing and communication overheads are very small.

A. Calculation of vector dot product Suppose we have two parties A and B, the database has a  total of n affairs, a total of p + q attributes, Party A has p attributes a1,a2,?,ap, the value of the ith record of these  attributes are ai1,ai2,?,aip; B with q attributes b1,b2,?,bq, the value of the ith record of these attributes are bi1,bi2,?,biq.

Global transaction is consisted of p + q sequence, the value is 1 or 0 (1 means the item appears in the transaction, 0 means the item does not appear in the transaction).

Convenient for discussion, two parties database are denoted by matrix A, B,   1 2   ( , , ) p  p  n np  xx A X X X  x x  ?? ??= = ?? ??? ?  ,   1 2   ( , , ) q  q  n nq  yy Y Y Y  y y  ?? ??= ?? ??? ?  B= .In which X1=(x11,x21, ?  ,xn1), X2=(x12,x22,?,xn2),?,Xp=(x1p,x2p,? ,xnp),Y1=(y11,y21,? ,yn1),Y2=(y12,y22,?,yn2),?,Yq=(y1q,y2q,?,ynq). Namely, Xi is the value of transactions on the attribute ai, Yj is the value of transaction on the attribute bj, 1 ? i ? p?1 ? j ? q.

Theorem 1 the support count of the item denoted by count (item), x is an attribute of party A, the attribute value is denoted by the vector X=(x1,x2,?,xn), y is an attribute of party B, the value of the attribute is denoted by vector  Y=(y1,y2,?,yn). The count(item) =X?Y=  n  i i i  x y =  ?? .

Proof: for X=(x1,x2,?,xn),Y=(y1,y2,?,yn)  X?Y =(x1,x2,?,xn)?(y1,y2,?,yn)=(x1,x2,?,xn-1)?(y1,y2, ?,yn-1)+ xn?yn  =(x1,x2,?,xn-2)?(y1,y2,?,yn-2)+ xn-1?yn-1 + xn?yn =?=x1?y1 + x2?y2+ ?+xn-1?yn-1 + xn?yn.

The count (item) express the number of records that support for the item. It can be known to calculate the support count of the item is to calculate the number of records that contain the item,that is the calculation of the number of records in which the values of items are all 1. If you use the n-dimensional vector X and Y denote the values of item in the data set D, it is not hard to count (item).

Such as the item {a,b} in the vertical distribution database, a, b are respectively the attributes of both the database, a total of seven records. Attribute a produces a seven-dimensional vector a = (1,1,0,1,0,1,1), attribute b generates a seven- dimensional vector b = (0,1,0,1,1,1,0). Support count of item  {a,b} is calculated as follows: count (ab) = ab=  i i  i a b  = ?? = 1 *  0 +1 * 1 +0 * 0 +1 * 1 +0 * 1 +1 * 1 +1 * 0 = 3. The support count of itemset {a, b}is 3.

B. Algorithm Thought Suppose there is a semi-honest third party, converting  the raw data of the two sides and sending it to the third party to compute, and the result is passed to both parties. The    calculation of the support count of the candidate item set may proceed as follows:  (1) Convert X1 with a random number (k, v). X1 be multiplied by the coefficient k and get (kx11, kx21,?, kxn1).

Added with the offset v and get X1?=(kx11+v, kx21+v, ?kxn1+v);  (2) Pass the converted X1? to B side, calculate X1?Y1=(kx11+v, kx21+v, ?,kxn1+v)? ( y11,y21, ?,yn1) =k(x11y11+x21y21+?+ xn1yn1)+v(y11+y21+ ?+yn1), Ysum1= y11+y21+?+ yn1. And pass X1?Y1 together with Ysum1 to the third party;  (3) For X1Y1= (x11y11+x21y21+?+ xn1yn1), the third party gets the final support count of the item set by calculating X1Y1=(X1?Y1-v*Ysum1)/k;  (4) Compare the final result with the minimum support count. If it is larger than the minimum support count of the item set, the item set is frequent and pass the results to the two parties;  (5) Calculate the support count of other candidate item sets.

C. Algorithm Description The improved vector dot product is based on the Apriori  algorithm. With the help of a third party, we use secure two party computation and the Apriori-gen function to generate all the candidate itemsets. And using the vector dot product to calculate the support count of candidate item set.

Algorithm 1 shows the specific description..

Algorithm 1: The dot product protocol T-VDC based on the semi-honest third party.

Input: transaction database D; minimum support threshold min_sup.

Output: The frequent itemsets L in D.

? 1 ? L1 ={large 1-itemsets} ? Apriori(D) // Apriori  algorithm to generate frequent 1 item sets ?2?for(k=2; Lk-1?? ;k++) do begin ?3?Ck=Apriori-gen(Lk-1);    // the frequent K-1 itemsets  generate candidate k itemsets ?4? for all candidates c?Ck do begin ?5?  if all the attributes in c are entirely at A or B//  treat the condition that the attribute in candidate item set located in one site  ?6?    that party independently calculates c.count ?7?  else ?8?    let A have p of the attributes and B have the  remaining q // attribute located in different sites ?9?  construct X on A?s side and Y on B?s side where  X =?p i=1Ai and Y =?q i=1Bi// respectively construct X and Y vector in A and B site  ?10? the third party create a pair of random (k,v)  // Third party produce random numbers (k, v)  ?11? the vector X multiply coefficient k and add offset v?resulting vector X?  ?12? send the vector X'to Y    // sent X to Y '// sent X to Y '  ?13? Y receive X'and compute vector X' Y?send the sum y1q+y2q+?+ynq and X  ' Y to third party  // Y party compute X 'Y, send it and the sum (y1q+y2q+?+ynq) to the third party  ? 14?  the third party compute c.count=X?Y=[X?Y- v(y1q+y2q+?+ynq)]/k // the third party calculate the support count of the candidate item set  ? 15 ?  Lk=Lk ? c|c.count ? minsup// Judge if the candidate itemset is greater than the minimum support count, if it, add it to the set of frequent itemsets  ?16? end ?17? Answer=?kLk  D. Experimental results and the analysis  A. Comparative analysis of the algorithm execution time To test the algorithm's time cost, we do experiment by  using the mushroom database provided by http://archive.ics.uci.edu/ml/datasets/Mushroom. The database has 8124 records, record 22 attributes of mushrooms. Related parameters: | D | is the total data of affairs; min_sup is the minimum support; | I | is the number of items. | D | = 8124, | I | = 22. when min_sup is respectively 0.2,0.3,0.4,0.5,0.6 , compare the time cost of the secure two-party dot product algorithm (VDC) and secure two-party the dot product algorithm based on the third-party ( T-VDC). Fig. 1 shows the results.

0.2 0.3 0.4 0.5 0.6 min-support(%)  Ex ec  ut io  n tim  e( s) T-VDC  VDC   Fig. 1 comparison chart of the algorithm running time In the distributed database environment, the optimal  condition of mining association rule is not to consider privacy. The two sides calculate directly using raw data, eliminating the need for encryption and decryption process, in which case the system overhead is minimal. We can find from the experimental results: because the T-VDC is simplified based on VDC algorithm, there is no need to generate a large number of random matrices and random vectors, so the execution time of T-VDC is less than the VDC. With the minimum support increases, the time cost decreases.

B. Security Analysis Convert X in the party A into X' and sent it to Party B.

Party B obtained the processed data from the Party A.

Therefore, the privacy data of the Party A is not leaked to the Party B. Moreover, the random number is randomly selected, it can better guarantee the security of all data. The calculation of the Support count for each candidate itemset are carried out by the trusted third party. The third party have no collusion with any party.The information of the two sides is exchanged after encrypted, so the two sides can not get the privacy information of the other side. The third party is responsible for processing the received data to calculate the support count of the item set, the third party can not derive from the converted data from A or B side. This method improves data privacy with the assistance of third party, which is the thesis aims to achieve.



IV.  CONCLUSION This paper proposes a vector dot product protocol based  on the third party, making the data distributed in the two sites mining the effective association rules globally in the premise of  protecting the data privacy. The results show that the protocol not only improve the data privacy of any parties, also reduce the time overhead. In the future we will continue to study the protocol and extend it to multi-party (more than two parties) of the distributed association rule mining.

