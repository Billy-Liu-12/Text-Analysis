Improved Fuzzy Space-Intervals Based Sequential Pattern Mining

Abstract?One of the sub areas of the data mining includes sequential pattern mining. This mining algorithm is to find the repeating patterns after mining the sequence databases. These are used to find the relation between the various items in the data for different purposes. As these data keep changing according to the change in time, mining should be done on incremented or updated database to obtain the frequent sequential patterns. The proposed algorithm in this paper uses modified algorithm of sequential pattern mining including concepts of fuzzy space intervals. In this algorithm, frequently occurring sequential patterns in the sequence database are mined using apriori like method. Fuzzy theory is used for mining the space interval between the frequently occurring sequences. The sequentially occurring candidate patterns are found first. After that follows the frequently occurring sequential patterns, which are found by calculating the minimum fuzzy support along with the use of the fuzzy number. Each space cluster is found by fuzzy support computation. The final results comprises the frequently occurring fuzzy space sequentially based patterns. At last the outcome also confirms the excellence of the suggested MISPFSI algorithm.

Keywords?sequential pattern mining; minimum support; minimum support threshold; frequent sequential patterns; fuzzy support; space cluster

I. INTRODUCTION A sequence database is to store sequences of ordered  events. This storage can be maintained with or without notions of time. This mining of sequential pattern is finding out the relativity between the various sequential events and for finding out if there exist any particular order for the happening of those events. We are able to find the patterns that are sequential for particular individual items as well as of the different items too. It is the method of mining out certain sequential patterns of which support crosses an already defined minimal support threshold. So far, various types of sequential pattern mining algorithm?s proposals have been made in [1], [2], [3], [4], [5], [6], [7], and [16].

The proposal by R.Agrawal, AprioriAll algorithm [2] is the first and basic algorithm of sequential pattern mining. This  algorithm find out the patterns which come at certain regularity in a sequence database. This algorithm states its property that ?Any frequent pattern?s sub pattern must be frequent? [2]. Then the sequential database scanning is done to do the support [10] check of every single candidate for finding out the frequently occurring sequential patterns with respect to the minimal support. Several different mining techniques are found to mine the data and their survey and descriptions are in [9], [11], [12], [13], [14], [15], and [17].

In this paper, Modified Integrated Sequential Pattern mining with Fuzzy Space Intervals (MISPFSI) algorithm is proposed. Proposed algorithm?s core idea is to make use of the Apriori like method for mining the large sequential patterns from the sequence database. At the starting, the sequential patterns, which are candidate patterns, are found from the sequence database. These lengthy sequentially occurring patterns are discovered by comparing the support of each sequentially occurring candidate patterns with the minimal support threshold [2]. If the sequential pattern?s length will become equal to or greater than two, each space cluster is allotted with the fuzzy number and then their fuzzy support is calculated. According to the fuzzy space intervals, the sequential patterns are mined. At last, the result of MISPFSI algorithm is inclusive of the actual lengthy sequential patterns.

Evaluation of the performance of MISPFSI algorithm with respect to the ISPFTI algorithm [1] is done.



II. ABBREVIATIONS AND ACRONYMS Several abbreviations and acronyms used in this paper are explained as below:  1) MISPFSI : Modified integrated sequential pattern mining with fuzzy space intervals  2) ISPFTI : Integrated Sequential Pattern mining with Fuzzy Time Intervals  3) Min sup : Minimum support  4) fsup : Fuzzy support

III. DEFINITIONS AND ALGORITHM In this paper, long sequentially occurring patterns are detected using the features like fuzzy set theory [3], [5], [8] and minimum support threshold.

A. Definitions The sequence of data is presented here as the order of item  sets in which each item set is connected to the particular transaction. Frequent item sets will have support equal to or greater than the minimalized support threshold defined by the user. The terms used in the sequential pattern mining algorithm including fuzzy space intervals are keyed out as followed.

? A sequence, denoted as?s? is presented as {(I1), (I2),..., (Im)} where Ij belongs to {s1,.., sn}, Ij and si are item sets.

? A transaction, denoted as ?t?, is {sid,(Ii),(Ij ),...,(Im)} in which sid is the transaction identifier and the corresponding sequence which is Ii, Ij, ... ,Im belongs to {s1,...,sn}.

? Support is calculated as sup(s) =| {(sid, s) | (sid, s) belongs to S} |. If the transaction?s percentage in S which contains s is equal to or greater than the user defined minimum support (min sup) then the item set s is known frequent in sequence database S.

? The space cluster between the two item sets ?a? and ?b? is Sab = {(s1, n1), (s2, n2),...,(sk,nk)},where si is space interval in between the ?a? and ?b? , the count of the sequence (a, b) is ni, si < si+1. When the difference is calculated between the time intervals si and si+1 and is found maximum, then partition of Sab will be into two, set of Sab(s1,si) = {(s1,n1),..,(si, ni)} and set of Sab(si+1,sk) = {(si+1,ni+1),...,(sk,nk)}.

? Let a sequence S= {(I1), (I2)... (Im)} and a fuzzy space-interval sequence be fs=<fs1, ?1, 2... fsr-1, ?r-1, r, fsr>, where n r 1 and fs1,..,fsr are item sets occurred.

? The fuzzy support of space cluster (si, sj ) between item sets ?a? and ?b? is  interval in-between the frequent sequences. Steps of MISPFSI algorithm is as follows.

? Step1: List out all frequent length 1 sequences, L1.

That is all the frequent sequences that have length equal to one are found. Sequence database is build first then the support calculation of all the item sets is done. If the support is equal to or greater than the minimal support, then it is known as a frequently happening item set and also called as frequent 1- sequence. The collection of every 1-sequences is known as L1.

? Step 2: List out L2, the frequently occurring length 2 sequences. C2, Candidate 2-sequences, that is candidate sequences with length equal to 2, are built by combining L1  with L1. If any of the 2-sequence?s support in C2  is equal to or greater than the minimal support, then is called as a frequent 2-sequence. Thus L2 is the set of these frequent 2-sequences.

? Step 3: Discover out the frequently occurring fuzzy space 2-sequences, L2. For each length 2 sequence, sa , sb  of L2, the below operations are done to obtain the space clusters of each L2:  1) Enter and maintain in an increasing manner all the space-intervals along with its frequencies: Sab = {(s1,n1),(s2,n2),...,(sk,nk)} is the space interval where si <si + 1, i= 1,..,(k-1) and ni is the frequency of the occurrence of si.

2) Each space interval of the 2-sequence is divided into clusters having similar space intervals on the following condition:  If the differences between all the successively occurring space intervals is shown equal, then that L2 is a nondivisible cluster and it is preserved.

Else partition the L2 to 2 space clusters.

For instance, Consider a space cluster, Sa,b  = {(s1,n1),..,(si, ni),(si+1,ni+1),...,(sk,nk)}. In this if the time difference is maximum in-between the  fsupa, b (s1, si ) = ( i p=1 ?ab [s1,...,si](sp).np) /N (1) intervals s and s , then S , will be partitionedi i+1 a,b  in which N is the overall count of transactions. When fsupa, b (s1, si) min sup, then Sa, b (s1, si), space cluster is preserved.

B. MISPFSI Algorithm The algorithm suggested in this paper is the MISPFSI. The  algorithm uses modified algorithm of sequential pattern mining including concepts of fuzzy space intervals. The concept of algorithm is mining the frequently occurring sequential patterns within the database of sequences. The concept of Fuzzy theory [5] is used here for mining the space  into two, set of Sa,b(s1,si) = (s1,n1),..,(si, ni) and set of Sa,b(si+1,sk) = (si+1,ni+1),...,(sk,nk).

3) To each of the obtained clusters, assign the trapezoidal fuzzy number.

4) The fuzzy support, fsup, is calculated for every discovered space clusters. If the space cluster?s fuzzy support is equal to or greater than the minimal  support  threshold,   then  that space cluster is took over and set aside.

? Step 4: List out the clusters that has to be reserved. To find out the fuzzy support of space cluster, the function is shown below:     Minim um  Suppo rt  Thresh old (%)  Time Taken (ms)  MISPFSI ISPFTI  0.25 218 281  0.30 207 246  0.35 200 240  0.40 172 199  0.45 163 180  0.50 147 180  fsupa, b (s1, si) = ( ip=1 ?ab [s1... si] (sp).np) /N           (2)  In which N is the overall count of records. When fsupa, b (s1, si) min sup, the Sa, b (s1, si), is reserved. Or else the cluster is removed. Proceed with the steps 3 and 4 for further partition.

? Step 5: For each ?a, b, fuzzy support obtained, of space cluster < a, b > in L2, a frequently occurring fuzzy space 2-sequence < Sa, ?a, b, Sb > is produced by combining the 2-sequences. Collection of all the frequently occurred fuzzy space 2-sequences is known as L?2.

? Step 6: If k is equal to or greater than 2, then discover out the L?k+1. The frequently  occurred fuzzy time based sequential patterns is found in steps as shown below:  ? Step 6.1: Find C?k +1 using the combination L?k with L?k.

? Step 6.2: Calculate fsup for each sequences obtained in C?k+1. The fuzzy support calculation formula for one (k+1)-sequence Sk+1 is:  fsup (Sk+1) =[ Nk=1 min(fsups1,sk , fsups2,sk+1)] /N                                                               (3)  From above, if fsup is greater than or equal to minimum support, that sequence will be considered as frequent. Then L?k is the collection of frequently occurred fuzzy time k-sequences.

? Step  6.3:  Iteratively find the frequently occurring fuzzy time (k+1)-sequences until C?k+1 will be an empty set.

? Step 6.4: Find out the longest fuzzy-time frequent sequences.



IV.    EXPERIMENTAL SETUP AND PERFORMANCE EVALUATION  Here, Evaluation of the performance of MISPFSI algorithm with respect to the ISPFTI algorithm is done. Experiments are performed on an Intel(R) Core(TM) i3-2330M CPU @ 2.20GHz with main memory of 2GB and Windows 7 ultimate running on it. The implementation of the algorithms are with JDK 1.8.0.

The dataset used in the paper is provided by SPMF-An Open-Source Data Mining Library. The dataset can be downloaded from the SPMF website. This webpage provides larger datasets that are often used in the data mining literature for evaluating and comparing algorithm performance.

Performance Comparison is done between the MISPFSI algorithm and the ISPFTI algorithm on the basis of varying  threshold which is user specified minimum support, and on the time taken for execution for the small dataset in SPMF sample input files as well as for real-life dataset BMSWebView1 (Gazelle) ( KDD CUP 2000).

A. Performance comparison of computation time taken  Table 1 shows the recordings of time taken for different minimum support threshold. For the 0.25 percentage minimum support threshold, ISPFTI algorithm takes 281 milli seconds to execute whereas the MISPFSI algorithm requires only 218 milli seconds. Now as the percentage of minimum support threshold increases (say 0.40 percentage), time taken for the ISPFTI to execute increases to 199 milli seconds. MISPFSI algorithm?s execution time at that threshold is about 172 milli seconds only which is less as compared to ISPFTI algorithm?s execution time. Thus as shown in Fig.1, the MISPFSI is about 2-5 times faster than the ISPFTI even at varying minimum support threshold. This means MISPFSI can execute well even in the case of low support threshold.

Fig. 1. Time Comparison graph between MISPFSI and ISPFTI  TABLE I. TABLE SHOWING THE TIME TAKEN AT DIFFERENT MINIMUM SUPPORT THRESHOLDS     Minim um  Suppo rt  Thresh old (%)  Time Taken (ms)  MISPFSI ISPFTI  0.55 113 144  0.60 110 120  0.65 98 110  0.70 90 99  B. Performance comparison of memory usage  Memory usage is almost same for both the existing approach and the proposed approach.



V. CONCLUSION In the area of data mining, sequential pattern mining is  really one among the sub and wide topics. This mining technique is useful in various applications. Various novel, scalable, and efficient sequential mining methods has been discussed. The particular time intervals can be represented by some time-interval based sequential pattern mining algorithm with the linguistically fixed terms. ISPFTI shares an important contribution for supporting the fuzzy ranged time interval of sequence database?s sequential  patterns. There are various order  based  sequential   pattern mining algorithms also.

MISPFSI algorithm is one of the order based algorithm.

Modified ISPFSI uses the space clustering concept by taking the difference of the index positions between two items.

Comparison is done between the MISPFSI algorithm and ISPFTI algorithm. In spite of being the order based algorithm, MISPFSI is about 2-5 times faster than ISPFTI. MISPFSI can execute well even in the case of low support threshold. From the result obtained, MISPFSI finds the longest fuzzy-time frequent sequences and increases the time performance.

