Consideration on a Formal Frame for Data Mining

Abstract?A formal framework for data mining with associa- tion rules is introduced. Its goal is to help to understand better to a data mining process and to be a platform to automate this process. Association rules are understood as general relations of two boolean attributes.

Keywords-formal framework for data mining; logic of discov- ery; association rules, logic of association rules; GUHA method;

I. INTRODUCTION  The goal of this paper is to present considerations on a formal framework covering important steps in a data mining process with association rules. The focus is on including formalized items of domain knowledge ? expressions under- standable to domain experts without experience with data mining. An example is the expression BMI ?? Diastolic which says that if patient?s BMI (Body Mass Index) in- creases, then his/here diastolic blood pressure increases too.

We call this framework FOFRADAR (FOrmal FRAme- work for Data mining with Association Rules). It is inspired by a logic of discovery, see section II-A. Consideration on FOFRADAR was started by results on observational calculi introduced in section II-B and by experience with the LISp-Miner system outlined in section III. Main features of FOFRADAR are introduced in section IV. Detailed descrip- tion of all features is out of the scope of this paper. Thus, several examples of the most important parts of FOFRADAR based on section III are given in section V.

FOFRADAR deals with domain knowledge formally ex- pressed by formulas different from association rules. The correspondence between domain knowledge and association rules is ensured by mapping particular items of domain knowledge to sets of association rules, which can be con- sidered as consequences of these items. This mapping is done in co-operation with a domain expert. Deduction rules concerning association rules play an important role in this approach. No similar approach is known at the best author?s knowledge.



II. LOGIC OF DISCOVERY AND ASSOCIATION RULES  A. Logic of Discovery  Logic of discovery was introduced in the book [2] which starts with two questions: (Q1): Can computers formulate and justify scientific hypotheses? (Q2): Can they compre- hend empirical data and process it rationally, using the  apparatus of modern mathematical logic and statistics to try to produce a rational image of the observed empirical world?

Logic of discovery developed to answer these questions is based on a scheme of inductive inference:  theoretical assumptions, observational statement theoretical statement  ?  This means that if we accept theoretical assumptions and verify a particular statement about the observed data, we accept the conclusion - a theoretical statement.

Observational and theoretical calculi are developed as lan- guages in which observational and theoretical statements are formulated. Formulas of observational calculi correspond to suitable statements on observed data. Formulas of theoretical calculi refer to systems of possible worlds, and probability is understood as a measure on such a system of possible worlds. Observational and theoretical calculi are interrelated by inference rules used in statistical hypothesis testing.

Observational predicate calculi are introduced in [2].

They result from classical predicate calculi by allowing only final data structures in which formulas are interpreted and by adding generalized quantifiers. The most in [2] studied observational predicate calculi are calculi formulas of which correspond to association rules. Several classes of association rules are defined and studied, e.g. classes of implicational or symmetrical rules. Important results about formulas of observational predicate calculi which we can consider as association rules are achieved in [2]. These calculi were further modified, see section II-B.

There usually is a 1:1 correspondence between formulas of an observational calculus and statistically motivated asser- tions on the whole infinite set of objects, we are interested in. Thus, there is also a one-one correspondence between tasks of finding interesting theoretical statements and tasks of finding interesting observational statements. The task of finding interesting observational statements is solved by the GUHA procedures. Input of the GUHA procedure consists of analyzed data and of several parameters defining a large set of relevant observational statements. The output is a rep- resentation of a set of all relevant observational statements true in input data. The most-used GUHA procedure is the ASSOC procedure mining for patterns, which can be seen as a generalization of association rules introduced later in [1]. The procedure 4ft-Miner [5] is probably the most-used       implementation of the ASSOC procedure. It is involved in the system LISp-Miner, see section III.

B. Logical Calculi of Association Rules  The boom of association rules in the 1990s was the start of a new effort in the study of association rules as formulas of observational calculi. A syntax of a predicate observational calculus has been significantly simplified, only calculi with monadic predicates are further studied [3]. Free and bound variables are omitted. Data matrices with a finite set of possible values for each column are used instead of {0, 1}-data matrices and basic boolean attributes are used instead of predicates (see also calculi with qualitative values introduced in [2]). Resulting calculi are called logical calculi of association rules.

We informally outline a definition of a logical calculus LCAR of association rules, for details see [3]. A type of LCAR is a K-tuple ?t1, . . . , tK? of natural numbers ti ? 2, i = 1, . . . ,K. Symbols of a language LAR of LCAR are attributes A1, . . . , AK and 4ft-quantifiers ?1, . . . ?Q.

Possible values of attributes are called categories, attribute Ai has categories 1, . . . , ti, i = 1, . . . ,K. Type of attribute Ai is ti.

Formulas of LAR are interpreted in models of LCAR - i.e. data matrices of type ?t1, . . . , tK?. Data matrix M of type ?t1, . . . , tK? is understood as a structure M = ?M,f1, . . . , fk? where M = {o1, . . . , on} is a finite set of n objects corresponding to rows of M and f1, . . . , fk are functions corresponding to columns of M. The function fi maps the set M to the set {1, . . . , ti} for i = 1, . . . ,K.

We assume that there is a possibly infinite set D called domain of LCAR such that M ? D for each model M = ?M,f1, . . . , fk? of LCAR. Domain D of LCAR corresponds to a set of all objects we are interested in, data matrix M = ?M,f1, . . . , fk? is a result of an observation of a finite subset of D.

If Ai is an attribute of type ti then each expression Ai(?) where ? ? {1, . . . , ti} is a basic boolean attribute. The set ? is a coefficient of Ai(?). The basic boolean attribute Ai(?) is true in a row oj ?M if and only if it is fi(oj) ? ? where i = 1, . . . ,K and j = 1, . . . , n. (More formally, ? in the expression fi(oj) ? ? means a subset of natural numbers and ? in the expression Ai(?) means a list of representations of particular numbers from the set ?.)  Association rule is an expression ? ? ? where ? is a 4ft- quantifier and ? and ? are boolean attributes derived from basic boolean attributes using propositional connectives ?, ? and ? in the usual way. ? is called antecedent and ? is called succedent of ? ? ?.

Association rule ? ? ? is true in data matrix M (we write V al(? ? ?,M) = 1) if the condition given by 4ft- quantifier ? is satisfied in a four-fold contingency table 4ft(?, ?,M) of ? and ? in M, otherwise ? ? ? is false in M (we write V al(? ? ?,M) = 0). 4ft(?, ?,M) of ?  and ? in data matrix M is a quadruple ?a, b, c, d? where a is the number of rows of M satisfying both ? and ?, b is the number of rows satisfying ? and not satisfying ?, etc, see Table I.

Table I 4ft(?,?,M) OF ? AND ? IN M  M ? ?? ? a b  ?? c d  There are various 4ft-quantifiers defined by applications of suitable thresholds to association interestingness measures [4] and additional 4ft-quantifiers corresponding to statistical hypothesis tests [2]. An example is 4ft-quantifier ?p,B of founded implication [2]. It is defined for 0 < p ? 1 and integer B > 0 by the condition aa+b ? p ? a ? B. Please note that usual interestingness measures of association rule i.e. a confidence conf and support supp correspond to a condition aa+b ? conf ? aa+b+c+d ? supp.

New classes of association rules were defined, and new theoretical results were achieved [3]. We use results con- cerning deduction rules ???????? where ?, ?, ?  ?, and ?? are boolean attributes. If this deduction rule is correct, and if the rule ? ? ? is true in data matrix M, then the association rule ?? ? ?? is also true in M. There are relatively simple criteria of correctness of such deduction rules.



III. LISP-MINER SYSTEM ? EXAMPLES OF APPLICATION  The goal of this section is to outline applications of the LISp-Miner system [6], [9]. We introduce here main features of an application of the 4ft-Miner, which is in more details presented in [8]. We solve an analytical question concerning a data set STULONG and related domain knowledge, see section III-A. We use association rules introduced in section II-B and the procedure 4ft-Miner to mine for association rules relevant to our question, see section III-B. A crucial role play atomic consequences of a given item of domain knowledge, see section III-C. They are used to filtering out rules, which can be seen as consequences of a given item of domain knowledge (see section III-D) and also to interpret remaining rules (see section III-E). An additional analytical task is formulated and solved in [7].

A. STULONG Data Set and Analytical Question  Data set STULONG concerns a Longitudinal Study of Atherosclerosis Risk Factors 1. It consists of four data  1 The study (STULONG) was realized at the 2nd Department of Medicine, 1st Faculty of Medicine of Charles University and University Hospital in Prague, under the supervision of Prof. F. Boud??k, MD, DSc., with collaboration of M. Tomec?kova?, MD, PhD and Prof. J. Bultas, MD, PhD. The data were transferred to the electronic form by the European Cen- tre of Medical Informatics, Statistics and Epidemiology of Charles Univer- sity and Academy of Sciences CR (head. Prof. J. Zva?rova?, PhD, DSc.). The data resource is on the web pages http://euromise.vse.cz/challenge2004/.

matrices, we deal with data matrix Entry only. This data matrix concerns 1417 middle-aged men selected from the Prague 2 election lists in year 1975 that have been examined at the beginning of the study. Each row of the data matrix describes one man. Data matrix has 64 columns correspond- ing to particular attributes of men. We use three groups of attributes defined for this paper - Personal, Problems, and Examinations. Categories of particular attributes are given below together with their frequencies. There are missing values and thus a sum of frequencies of all categories of a particular attribute can be less than 1417.

Group Personal has four attributes: Marital Status ? married/1207, divorced/104, single/95, widower/10; Educa- tion ? basic school/151, apprentice school/405, secondary school/444, university/397; Responsibility in a job ? manage- rial worker/286, partly independent worker/435, others/636, pensioner/25; BMI, i.e. Body Mass Index ? (16; 21?/39, (21; 22?/50, (22; 23?/106, . . . , (31; 32?/28, > 32/64 (13 categories).

Group Problems has four attributes with categories yes and no: Diabetes ? yes/30, no/1378; Hypertension ? yes/220, no/1192; Infarction ? yes/34, no/1378; Hyperlipidemia ? yes/54, no/815.

Group Examinations has three attributes: Diastolic blood pressure in mm Hg ? ?50; 70)/74, ?70; 80)/281, . . . , ?110; 120)/43, ?120; 150)/16 (7 categories); Systolic blood pressure in mm Hg ? ?90; 110)/69, ?110; 120)/207, . . . , ?170; 180)/43, ?180; 220)/33 (9 categories); Cholesterol in mg% ? ?100; 160)/45, ?160; 180)/97, . . . , ?300; 320)/57, ?320; 540)/57 (10 categories).

There are various types of domain knowledge related to the STULONG data. Three of them are managed in a formalized form by the LISp-Miner system [6]: groups of attributes, information on the particular attributes and mu- tual influence of attributes. There are several types of mutual influence among attributes. An example is an expression BMI ?? Diastolic saying that if BMI of a man increases, then man?s diastolic blood pressure increases too. We use this item of domain knowledge and the above introduced groups of attributes to formulate an analytical question:  In the data matrix Entry, are there any interesting rela- tions between combinations of personal characteristics and problems of men on one side and results of his examina- tions on the other side? However, we are not interested in consequences of the known fact that if BMI increases, then diastolic blood pressure increases too.

B. Applying 4ft-Miner  We deal with association rules, thus we convert our ques- tion to a question concerning association rules. A converted question can be written as [Entry; ?? (BMI ?? Diastolic): B[Personal] ? B[Problems] ?? B[Examinations].

Here B[Personal] denotes a set of all boolean attributes  derived from attributes of the group Personal we consider relevant to the analytical question, etc. This means that we search rules ?Pe ??Pr ? ?E which are true in data matrix Entry, cannot be understood as consequences of BMI ?? Diastolic, ?Pe ? B[Personal], ?Pr ? B[Problems], and ?E ? B[Examinations]. In addition, ? is a suitable 4ft- quantifier.

Conjunction ?Pe ? ?Pr is an antecedent and ?E is a succedent of rules, we are interested in. A possibility to define a set of relevant antecedents and a set of relevant succedents to solve our analytical question by the 4ft-Miner procedure is outlined in Figure 1.

Figure 1. Definitions of relevant antecedents and succedents  The row Personal Conj, 1-4 and four consecutive rows define set B[Personal]. Each ?Pe is a conjunction of 1 - 4 basic boolean attributes derived from particular attributes of the group Personal.

The row Marital_Status(subset), 1-1 B, pos defines a set of basic boolean attributes derived from attribute Marital Status. It says that all basic boolean attributes Marital Status(?) where ? is a subset of all categories of attribute Marital Status containing 1 - 1 categories are generated: Marital Status(married), Marital Status(divorced), Marital Status(single), and Marital Status(widower). Set of basic boolean attributes derived from attribute Responsibility is defined similarly.

The row Education(int), 1-2 B, pos defines basic boolean attributes derived from attribute Education.

All 7 basic boolean attributes Education(?) where ? is a set of 1 - 2 consecutive categories (i.e. interval of categories) are generated. Attributes Education(basic school) and Edu- cation(basic school, apprentice school) are examples.

The row BMI(int), 1-4 B, pos defines basic boolean attributes for attribute BMI. All boolean attributes BMI(?) where ? is a set of 1-4 consecutive categories are generated. Examples of such boolean attributes are BMI(16; 21? and BMI((21; 22?, (22; 23?) i.e. BMI(21; 23?.

46 basic boolean attributes are defined this way and more than 6 500 conjunctions ?Pe are defined altogether.

The row Problems Disj, 1-4 and four consecutive rows define set B[Problems]. Each ?Pr ? B[Problems] is a disjunction of 1 - 4 boolean attributes Diabetes(yes), Hyperlipidemia(yes), Hypertension(yes), and Infarction(yes).

About 105 antecedents ?Pe??Pr where ?Pe ? B[Personal] and ?Pr ? B[Problems] are defined in the upper part of Figure 1.

Set B[Examinations] of relevant succedents is defined similarly in a bottom part of Figure 1, only basic boolean attributes with coefficients ? intervals are used.

About 2.4 ? 109 association rules are defined by settings in Figure 1. We use 4ft-quantifier ?0.85,30 of founded implication defined by the condition aa+b ? 0.85 ? a ? 30.

The task was solved in 112 minutes (PC with 2GB RAM and Intel T7200 processor at 2 GHz) and 123 true rules were found. For more details see [8] and also [5].

C. Atomic Consequences  We are interested only in such association rules from 123 output association rules which are not consequences of the item BMI ?? Diastolic of domain knowledge. A set AC(BMI ?? Diastolic, ?0.85,30) of very simple association rules BMI(?) ?p,B Diastolic(?) which can be considered as consequences of BMI ?? Diastolic is used. Such simple association rules are called atomic consequences of BMI ?? Diastolic for 4ft-quantifier ?0.85,30.

We define the set AC(BMI ?? Diastolic, ?0.85,30) as a set of all rules BMI(low)?p,B Diastolic(low), BMI(medium)?p,B Diastolic(medium), and BMI(high)?p,B Diastolic(high), where p ? 0.85 and B ? 30. The only problem is to define suitable coefficients low, medium, and high for basic attributes derived from attributes BMI and Diastolic.

There are 13 categories of BMI - (16; 21?, (21; 22?, . . ., (31; 32?, > 32 and 7 categories of Diastolic - ?50; 70), ?70; 80), . . ., ?110; 120), > 120. We can accept that basic boolean attribute BMI(?) will be considered as BMI(low) if ? ? Alow = {(16; 21?, (21; 22?, . . . , (24; 25?}. Similarly, basic boolean attribute Diastolic(?) will be considered as Diastolic(low) if ? ? Slow = {?50; 70), ?70; 80), ?80; 90)}.

We say that rules BMI(low) ?p,B Diastolic(low) are de- fined by a rectangle Rlow = Alow ? Slow.

The LISp-Miner system supports definitions of such sets of atomic consequences. In Figure 2, there is a graphical definition of the rectangle Rlow together with definitions of rectanglesRmedium andRhigh defining coefficients medium and high for attributes BMI and Diastolic.

In figure 2 there are both ?blind? definition and defi- nition with frequencies in data matrix Entry. We can see that there are three men satisfying both BMI(16; 21? and Diastolic?50; 70), etc.

Figure 2. Definition of rectangles Rlow,Rmedium,Rhigh  D. Filtering out Consequences of BMI ?? Diastolic We filter out all output rules ??p,B ? satisfying one of  the conditions (i) ? (iv). AC means an atomic consequence of BMI ?? Diastolic.

(i) ??p,B ? is an AC.

(ii) ??p,B ? logically follows from an AC.

(iii) ? ?p,B ? does not logically follow from any AC, however it says nothing new interesting in addition to a particular AC.

(iv) ? ?p,B ? says nothing new interesting in addition to a rule logically following from a particular AC.

More details follow. Please note, there is a theorem making possible to decide if a rule ?? ?p,B ?? logically follows from an additional rule ??p,B ? [3].

(i): There is no AC among 123 output rules.

(ii): There is no rule among 123 output rules that logically follows from a particular AC.

(iii): There is an output rule (denoted R1) BMI(24; 26? ? HI ?0.875,42 Diastolic?70; 100), HI denotes Hyperlipi- demia(yes) ? Infarction(yes). The atomic consequence BMI(24; 26? ?0.875,42 Diastolic?70; 100) (denoted AC1) is created from the rectangle Amedium?Smedium. It can be easy proved that R1 does not logically follow from AC1 [3].

RuleR1 says nothing new interesting in addition toAC1:R1 concerns men satisfying BMI(24; 26? ? HI (antecedent of R1) i.e. a subset of men satisfying BMI(24; 26? (antecedent of AC1). Thus, we filter the rule R1 out. More rules can be filtered out due to analogous reasons.

(iv): There is an output rule (we denote it R2) BMI(24; 28?? MUH ?0.865,32 Diastolic?80; 110) where MUH means Marital Status(married) ? Education(university) ? Hyper- tension(yes). There is an atomic consequence (we denote it AC2) BMI(24; 28? ?0.865,32 Diastolic?80; 100) created from the rectangle Amedium ? Smedium, see section III-C.

Rule BMI(24; 28? ?0.865,32 Diastolic?80; 110) (we denote it R3) logically follows from AC2. However, rule R2 says nothing new interesting in addition to R3, and thus we filter rule R2 out.

Let us note that the rule R3 logically follows from AC2 because of each man satisfying Diastolic?80; 100) satisfies     also Diastolic?80; 110), for details see [8] or [3]. The 4ft- Miner procedure has tools for filtering out rules according to points (i) - (iv). They were used to filter out 97 rules - consequences of BMI ?? Diastolic for data matrix Entry and 4ft-quantifier ?0.85,30.

E. Interpreting Remaining Rules  There are 26 remaining association rules, 16 of them have a form ? ?p,B Systolic(?). Thus, it is natural to ask if they can be considered as consequences of a possibly new item BMI ?? Systolic of knowledge saying that if BMI increases, then Systolic increases too. (We assume here that BMI ?? Diastolic is the only known item of domain knowledge. This assumption of course is not true.)  We use the approach described in section III-D. We define a set AC(BMI ?? Systolic,?0.85,30) of atomic consequences of BMI ?? Systolic for 4ft-quantifier ?0.85,30 as a set of all rules BMI(low)?p,B Systolic(low), BMI(medium)?p,B Systolic(medium), and BMI(high)?p,B Systolic(high), where p ? 0.85 and Base ? 30.

We use the same definitions of coefficients low, medium, and high for attribute BMI and similar definitions of these co- efficients for attribute Systolic as for Diastolic. Attribute Sys- tolic has 9 categories - ?90; 110), ?110; 120), . . . , ?170; 180), ?180; 220), see section III-A. We define Systolic(low) by condition low ? {?90; 110), . . . , ?130; 140)}, Sys- tolic(medium) by medium ? {?120; 130), . . . , ?150; 160)} and Systolic(high) by high ? {?140; 150), . . . , ?180; 220)}.

Then we use the corresponding rectangles as in section III-C. This way we identify all 16 rules with a form of BMI(?) ?p,Base Systolic(?) as consequences of the item BMI ?? Systolic. This conclusion can lead to start of an ad- ditional research of the (possibly new) item BMI ?? Systolic of domain knowledge. For more details on interpretation of remaining rules see [8].



IV. FOFRADAR FRAMEWORK OVERVIEW  FOFRADAR is intended to be a formal framework sup- porting important steps in data mining with association rules built from basic boolean attributes A(?) where ? is a subset of categories of the attribute A. These subsets are automati- cally generated from particular categories. Subsets consisting of several consecutive categories of ordinal attributes (i.e.

intervals of categories) make possible to deal with variants of basic boolean attributes like A(low), A(medium), A(high).

This opens important possibilities: (1) We can define basic categories as the smallest reason-  able categories for each attribute and then to use suitable basic boolean attributes to build all reasonable granules, we are interested in, see section IV-A.

(2) Items of domain knowledge like BMI ?? Diastolic can be mapped to sets of atomic association rules. Resulting sets  of atomic rules can be used to filter out uninteresting rules or to identify traces of new items of domain knowledge in the output, see section V-D.

(3) We can deal with various exceptions, e.g. the rule BMI(low) ? Diastolic(high) can be understood as an excep- tion from BMI ?? Diastolic when suitable 4ft-quantifier ? is used.

FOFRADAR is developed to be a formal frame covering important steps when applying these possibilities. A core of FOFRADAR is a logical calculus LCAR of association rules, which is enhanced by suitable additional languages and procedures. Particular steps in a data mining process are understood as applications of procedures transforming formulas of one language into formulas of another language.

The step of data mining (i.e. modeling according to the CRISP-DM methodology) is realized by the ASSOC proce- dure. FOFRADAR languages and procedures are introduced in sections IV-B and IV-C respectively.

A. Basic Granularity  Association rules of calculus LCAR are evaluated in data matrices resulting from observation of attributes A1, . . . , AK for a finite number of objects chosen from a given domain D. Language of LCAR depends on categories (i.e. possible values) of attributes in question.

We use data matrix Entry introduced in section III-A as an example. It is a result of an observation of 1417 middle- aged men selected from the Prague 2 election lists in year 1975. Thus, our domain is a set of all middle-aged men listed in election lists. We denote this domain as ST . Values of 64 attributes were observed for chosen men. Some of the attributes are nominal (e.g. Marital status), some of them are ordinal (e.g. Education), and values of additional attributes are real numbers (e.g. BMI with values 18.67, 28.32, etc.).

Set of possible values of a real-valued attribute is usually divided into several intervals, which are then considered as categories of the attribute. We assume that we can get for each real-valued attribute a finite set of intervals of reasonable minimal length. For BMI, such intervals can be (10; 11?, . . . , (49; 50? - it has no sense to con- sider for BMI intervals (10.00; 10.01?, . . . , (49.99; 50.00? etc. Data matrix Entry can be thus considered as a structure ?ME , f1, . . . , f64? where ME ? ST , M = {o1, . . . , o1417} and f1, . . . , f64 are functions with values - natural numbers denoting categories of observed attributes A1, . . . , A64.

Intervals with reasonable minimal length are called cat- egories with a basic granularity, attributes with such cate- gories are called attributes with a basic granularity. Nom- inal and ordinal attributes are also attributes with a basic granularity, and their categories are categories with a basic granularity. Anyway, each real-valued attribute has after transformation only finite number of categories, and it is treated as an ordinal attribute.

If a LCAR concerns only attributes with categories with a basic granularity, then we say that the LCAR is of a basic granularity. However, it can happen that frequencies of particular categories in a given data matrix M are too low, and it is suitable to redefine categories. If each new category of each ordinal attribute is a union of consecutive categories with a basic granularity and if each new category of each nominal attribute is a union of categories with a basic granularity, then we say that the resulting logical calculus of association rules is natural. Please note that following considerations are valid for all LCAR, not only for natural LCAR.

B. FOFRADAR Languages  The aim of FOFRADAR languages is to make possible to talk about inputs and outputs of particular steps of a data mining process. All these languages are related to a given logical calculus LCAR of association rules. We define the following FOFRADAR languages:  ? Language LDK of domain knowledge. An example of its formula is the expression BMI ?? Diastolic concerning mutual dependence of attributes BMI and Diastolic.

? Language LAC of atomic consequences of items of domain knowledge. Formulas of LAC define for a particular formula of language LDK expressing mutual dependence of attributes suitable sets of simple associ- ation rules, which can be considered as atomic conse- quences of the given formula of LDK . An example of a formula of LAC is AC(BMI ?? Diastolic, ?0.85,30), see section III-C.

? Language LDt for description of important features of the domain D. An example of such a feature is information that only male patients are observed in the STULONG domain ST . However, our focus here, is not on this language.

? Language LAQ of analytical questions. In section III-B, there is an example of a formula of language LAQ: [Entry; ?? (BMI ?? Diastolic): B[Personal] ? B[Problems] ?? B[Examinations].

? Language LRAR of sets of relevant association rules.

Formulas of this language define sets of relevant asso- ciation rules to be verified by the ASSOC procedure in a given data matrixM. Various partial formulas of this langure are in Figure 1. These partial formulas define a set of relevant antecedents, a set of relevant succedents, etc.

? Language LConcl of conclusions. Formulas of this language express conclusions concerning given run of the ASSOC procedure.

More details on particular languages are in section V.

Relations of these languages and additional elements of FOFRADAR to the well known CRISP-DM methodology are outlined in Figure 3. Analyzed data are represented by  Figure 3. FOFRADAR and CRISP-DM  data matrix M = ?M,f1, . . . , fk? of type ?t1, . . . , tK?. We use GUHA procedure ASSOC for modeling, its input is given by data matrix M and by an expression of language LRAR which is created from an expression of language LAQ. Expression of language LAQ is created on the basis of expressions of languages LDK and LDt. Expressions of languages LDK and LDt are formulated in co-operation with domain experts, and these expressions represent results of business and data understanding. Results of analysis are formulated in an analytical report, formulas of language LConcl are used. Formulas of language LAC and results of the ASSOC procedure are used to prepare formulas of LConcl.

C. Procedures of FOFRADAR  Process of creation of formulas of a FOFRADAR lan- guage using formulas of another FOFRADAR language can be seen as an application of one of the following proce- dures. These procedures are still realized mostly manually.

However, there are several new modules in the LISp-Miner system which remarkable help to realize some of these procedures. There is a vision that all of these procedures will be automated. Some details are in section V.

A crucial role plays the procedure ASSOC. Its input is a data matrix M and an expression ? of the language LRAR (i.e. definition of a set ?(?) of relevant association rules).

Output of the procedure ASSOC is a set ASSOC(M,?) of all association rules ? ? ? ? ?(?) which are true in M. However, we do not consider ASSOC as a part of FOFRADAR.

We assume to use the following procedures for transfor- mations of formulas of particular languages of FOFRADAR:  ? procedure DK?AQ which transforms formulas of lan- guage LDK to formulas of language LAQ     ? procedure Dt?AQ which transforms formulas of lan- guage LDt to formulas of language LAQ  ? procedure AQ?RAR which transforms formulas of language LAQ to formulas of language LRAR  ? procedure DK?AC which transforms formulas of lan- guage LDK to formulas of language LAC  ? procedure CONCL transforming set ASSOC(M,?) to formulas of LConcl, it uses also formulas of LAC .



V. FOFRADAR - SELECTED DETAILS AND EXAMPLES  Selected details related to FFAR of type ?t1, . . . , tK? are given in this section. Examples from section III are used, see also [7], [8].

A. Language LDK of Domain Knowledge There are three types of domain knowledge ? NO-types  of attributes, groups of attributes, and mutual influence of attributes. NO-types of attributes are given by a K-tuple ??1, . . . , ?K? where ?i ? {N,O}. If ?i = N then attribute Ai is nominal, if ?i = O then attribute Ai is ordinal.

Attributes A1, . . . , AK are divided into R basic groups: A1,. . .,Ag1 , Ag1+1,. . .,Ag2 , . . . , AgR?2+1,. . . ,AgR?1 , AgR?1+1, . . . ,AK by natural numbers g1, g2, . . . , gR?1 satisfying 1 ? g1 < g2 < . . . < gR?1 < K where R?1 < K. The basic groups reflect a structure of observed attributes as understood by a domain expert. It is possible to define additional groups of attributes by suitable lists of attributes.

There are various expressions of LDK language express- ing a mutual influence of attributes. Both ii-expression (i.e.

increases - increases) and id-expression (i.e. increases - decreases) concern two ordinal attributes Ai, Aj , i ?= j.

A simple form of an ii-expression is Ai ?? Aj , it means if Ai increases, then Aj increases too, an example is BMI ?? Diastolic. A simple form of an id-expression is Ai ?? Aj .

It means if Ai increases then Aj decreases. An example is Education ?? BMI.

Each ii-expression and id-expression can also have a conditional form. (A1 ?? A2)/? is an example of ii- expression in a conditional form. Here ? is a boolean attribute of the language LAR of a logical calculus LCAR.

Intuitive meaning of (A1 ?? A2)/? is: If ? is satisfied and if A1 increases, then A2 increases too; etc. An example of an id-expression in a conditional form is (BMI ?? Diastolic) / Disease(X) where Disease(X) is a boolean attribute saying that a patient suffers by a disease X. Additional examples of formulas of LDK are in [6].

B. Domain Knowledge ? Atomic Consequences An important feature of the FOFRADAR is that it makes  possible to deal with items of domain knowledge expressed in a formal way good understandable to domain expert without deeper knowledge of association rules. Formulas of language LDK expressing a mutual relation of attributes are  mapped in a natural way to sets of very simple association rules, which can be considered as consequences of a given item of domain knowledge. A formula ? of language LDK expressing a mutual influence of attributes is transformed into a set AC(?,?) of atomic consequences of ? i.e. very simple association rules ? ? ? which can be considered as consequences of ? where ? is a given 4ft-quantifier.

An example of such a transformation is a transformation of the formula BMI ?? Diastolic of language LDK into a set AC(BMI ?? Diastolic, ?0.85,30) of association rules BMI(?)?p,B Diastolic(?). This transformation is described in section III-C. The resulting set of association rules is de- termined by rectangles ?Rlow, Rmedium, and Rhigh?. Thus, triple ?Rlow,Rmedium,Rhigh? can be seen an example of expression of language LAC of atomic consequences of items of domain knowledge.

C. Domain Knowledge ? Analytical Questions An example of an analytical question built from expres-  sions of language LDK is the question [Entry; ?? (BMI ?? Diastolic): B[Personal] ? B[Problems] ?? B[Examinations]  introduced in section III-B. It can be written in a more general way as [M; ?? (A1 ?? A2)] : B(GA) ? B(GB) ?? B(GC).

An additional example of an analytical question is the question [M] : Exc?(A1 ?? A2) which means ?In data matrixM, are there any exceptions from the item of domain knowledge (A1 ?? A2) ??. A solution of a similar question is outlined in [8].

All questions like that introduced above are solved in three main steps: 1) A set of relevant association rules is defined. This definition can be understood as an expression of language LRAR.

2) Each of relevant association rules is verified in a given data matrix by the GUHA procedure ASSOC.

3) A resulting set of true association rules is interpreted.

A core of interpretation is in identification of sets of true rules, which can be considered as consequences of items of domain knowledge - formulas of LDK . The conclusions are expressed by formulas of language LConcl, see section V-D.

D. Formulating Conclusions  Conclusions of an analysis are statements about output of an application of the procedure ASSOC. Input of ASSOC consists of a data matrix M and an expression ? of the language LRAR (i.e. definition of a set ?(?) of relevant as- sociation rules). Output of ASSOC is a set ASSOC(M,?) of all association rules ? ? ? ? ?(?) which are true in M. We are interested in statements relating expressions of language LDK concerning a mutual influence of particular attributes to the set ASSOC(M,?).

If ? is an expression of language LDK expressing mu- tual dependence of attributes and ? is a 4ft-quantifier then Cons(M,?,?) denotes a set of association rules ? ? ? which can be considered as consequences of ? in M. Two most important conclusions (i.e. formulas of language LConcl) are expressions TooFew(M,?,?) and LotOf(M,?,?).

The intuitive meaning of TooFew(M,?,?) is that in an intersection ASSOC(M,?) ? Cons(M,?,?) there are no or only few of association rules, here ? is the 4ft-quantifier used in ?. Such a conclusion can lead to a modification of ? or to a search for new data.

The intuitive meaning of LotOf(M,?,?) is that in an intersection ASSOC(M,?) ? Cons(M,?,?) there are many of association rules, here ? is the 4ft-quantifier used in ?. Such conclusion can lead to additional analysis to confirm new, yet not known item of knowledge ?. Please note that actions depending on these conclusions are not formalized by the FOFRADAR.

The set Cons(M,?,?) is defined as a union  AC(?,?) ? LgCn(?,?) ? AgCn(M,?,?)  where AC(?,?) is a set of atomic consequences of ? introduced in section V-B, LgCn(?,?) is a set of logical consequences of ? and AgCn(M,?,?) is a set of agreed consequences of ? in M.

LgCn(?,?) is a set of all rules ? ?? ? ?? AC(?,?)  for which there is a Ai(?) ?? Aj(?) ? AC(?,?) such that Ai(?)?  ?Aj(?) ???? is a correct deduction rule i.e. there is  Ai(?) ?? Aj(?) ? AC(?,?) and ? ?? ? logically follows from Ai(?) ?? Aj(?). An example follows:  The set AC(BMI ?? Diastolic, ?0.85,30) is defined in section III-C and BMI(24; 28? ?0.865,32 Diastolic?80; 100) belongs to AC(BMI ?? Diastolic, ?0.85,30). The rule BMI(24; 28? ?0.865,32 Diastolic?80; 110) does not belong to AC(BMI ?? Diastolic, ?0.85,30) and the deduction rule BMI(24;28??0.865,32Diastolic?80;100)BMI(24;28??0.865,32Diastolic?80;110) is correct, thus the rule BMI(24; 28? ?0.865,32 Diastolic?80; 110) belongs to LgCn(BMI ?? Diastolic, ?0.85,30) AgCn(M,?,?) is defined such that the a rule ?? ?? ??  belongs to AgCn(M,?,?) if V al(?? ?? ??,M) = 1, ?? ?? ?? ?? (AC(?) ? LgCn(?,?)) and there is a rule ? ?? ? ? (AC(?) ? LgCn(?,?)) such that ?? ?? ?? does not logically follow from ? ?? ? and it is possible to agree that ?? ?? ?? does not say anything new in addition to ? ?? ? . Examples are rules satisfying conditions (iii) and (iv) introduced in section III-D.

Additional examples are in [7], [8]. Please note that the set Cons(M,?,?) can also be used to decrease remarkably the number of resulting association rules to be interpreted in details. If ?1, . . .?Q are known items of domain knowl- edge, then it is necessary to interpret only the set of rules  ASSOC(M,?)??Ki=1 Cons(M,?i,?) instead of the set ASSOC(M,?), see also [7], [8].



VI. CONCLUSIONS We have introduced several mutually related formal lan-  guages based on logical calculus of association rules and several procedures transforming formulas of one language to formulas of another language. We have shown that the whole system of languages and procedures can serve as a formal frame for data mining with association rules.

We have also pointed out to software tools supporting this formal frame. However, there still are a lot of details to be developed. The ultimate (and still very far) goal is to develop a formal frame for automation of the whole data mining process.

