

226 ?  2013 IEEE International Solid-State Circuits Conference  ISSCC 2013 / SESSION 12 / NON-VOLATILE MEMORY SOLUTIONS / 12.9  12.9 Unified Solid-State-Storage Architecture with NAND Flash Memory and ReRAM that Tolerates 32? Higher BER for Big-Data Applications  Shuhei Tanakamaru1,2, Masafumi Doi1, Ken Takeuchi1  1Chuo University, Tokyo, Japan, 2University of Tokyo, Tokyo, Japan  Unified solid-state storage (USSS) provides high error tolerance with four tech- niques: reverse-mirroring (RM), error-reduction synthesis (ERS), page-RAID, and error-masking (EM). The acceptable raw bit-error rate (ABER) of NAND flash memory is enhanced by 32?, or endurance or data-retention time effectively extends by 4.2 or 34?, respectively. ABER is defined to realize BER after ECC below 10-15.

Big-data enterprise storage is escalating demand for SSD, because of SSD?s high speed, low power and small form factor. A conventional storage system has four basic levels of hierarchy: server, disk array, SSD, and NAND flash. ECC and redundancy provide reliability. For performance, in addition to reliability, stripe and mirror everything (S.A.M.E.) has been proposed [1] in which RAID-1 (mir- roring) is applied to disk arrays. Big-data tends to become copied among differ- ent layers. Since controllers at each level are optimized independently of each other, the resulting system has inefficient duplications and overhead.

The developed unified storage controller integrates all ECCs and redundancy functions (Fig.? 12.9.1). First, the data from the host is encoded by the ECC encoder. Next, the page-RAID sequencer generates parity-bits based on XOR calculation. Then, data is written to both the primary and mirrored NAND by the reverse-mirroring unit. During read, data from the primary and mirrored NAND is transferred to the error-reduction synthesizer. Next, the error-location infor- mation is transferred from the ECC decoder to the error-masking unit, which keeps a record of previous error-location information, and then the corrected data is read out. The ReRAM and NAND hybrid SSD has been previously pro- posed to eliminate the data fragmentation [2]. In this work, ReRAM also improves memory system reliability. ReRAM?s scalability below 50nm, non- volatility, speed, page re-writability, and high endurance are needed for storage of the memory system?s mirroring information, parity and error record [3].

Figure?12.9.2 depicts RM. In program disturb, measured BER in the upper page is smaller than that in the lower page. In data retention, measured BER in the smaller page number (cells close to the source-line) is lower than that in the larger page number. The key idea of RM is that the data stored in a higher BER cell of the primary NAND is stored in a lower BER cell of the mirrored NAND. To minimize errors for both program disturb and data retention, RM unit modifies the write address of both lower/upper pages and page number for the mirrored NAND, to minimize BER within the primary and mirrored data pair. For example, the data is allocated in Lower Page0/Upper Page255, Upper Page1/LowerPage254 of primary/mirrored NAND, respectively (Fig.?12.9.2(a)). Since NAND operation is limited to writing in ascending order from Page0, ReRAM temporarily stores the re-ordered write data, and then the mirrored NAND is written. During read, either the primary or mirrored NAND can be selected, based on whichever is expected to have fewer errors. As a result, the program-disturb and data-reten- tion BER decreases by 69% and 41%, respectively (Fig.?12.9.2(b)).

Figure?12.9.3 describes ERS. Measurement of program-disturb error shows that in the lower page, 1?0 errors dominate with no observable 0?1 errors; and in the upper page, 0?1 errors occur more than 1?0 errors (Fig.?12.9.3(a)) [4].

Figure?12.9.3(b) presents the algorithm of ERS. During write with RM, the lower page data in the primary NAND is stored in the upper page of the mirrored NAND, which means that the dominant error directions (1?0 or 0?1 error) in primary NAND and mirrored NAND are opposite. In order to reduce bit errors and maintain RM compatibility, write data to the mirrored NAND should be bit- flipped. During read, primary NAND and mirrored NAND data are compared. If mismatch, ERS outputs ?1? or ?0? when the lower or upper page of primary NAND is selected, respectively. Based on the trend for error direction in the upper/lower page, the mismatch can be corrected. False decision may also occur, but rarely, as this would require a simultaneous bit error in both the pri- mary and mirrored NAND. As a result, with RM and ERS, the measured BER decreases by 91%, which corresponds to a 100/(100-91)?=?12? ABER improve- ment.

Figure?12.9.4 provides 2X and 1Xnm NAND measurements. Immediately after writing, program disturb error is dominant. In that case, RM w/ ERS achieves 91% and 85% BER reduction in 2X and 1Xnm NAND?s, respectively (Fig.?12.9.4(a)). After retention, RM w/ ERS improves BER by 56% and 30% in 2X and 1Xnm NAND?s, respectively (Fig.?12.9.4(b)).

Page-RAID is explained in Fig.?12.9.5. RAID-4 like protection is realized without performance degradation; data is protected in the bitline direction in addition to conventional ECC (Fig.?12.9.5(a)). Block parity is calculated by XOR-ing the data in a NAND string and storing the result in ReRAM. Only one parity page is need- ed per NAND chip, because the unified storage controller programs blocks in round-robin with page-level logical/physical address translation. When an ECC failure is flagged, the victim page can be recovered by calculating XOR of the other existing pages in the NAND block. The block-parity in ReRAM is updated every time when a page is written in a NAND block. Repeated parity updating is feasible because high endurance, page over-write is available in ReRAM [2].

When the NAND block is almost full, the block-parity data is transferred from the ReRAM to the last page of the NAND block.

During one block NAND write, the block-parity in ReRAM is overwritten (Npage ? 1)-times. Npage is the number of pages in a block. Considering NAND?s endurance (4000 cycles), the required ReRAM endurance is 255???4000?=?106  cycles, which can be realized by using program verification and optimizing the program pulse shapes [5]. If MLC or SLC NAND were to be used for the parity buffer, the write time overhead and required capacity would be unacceptably large (Fig.?12.9.5 (b)). When ReRAM is used as the parity buffer, the required parity buffer capacity is less than 0.1% of the storage (NAND) capacity. With page-RAID, ABER of NAND is increased by 45% (Fig.?12.9.5(c)).

Figure?12.9.6 shows EM. Over time, memory cell VTH decreases, and once an error occurs, it is irrecoverable. In error-recording sequence, the error address is marked as ?1? in the error-location table, then stored to ReRAM with compres- sion. In error-masking sequence, errors are masked by comparing the read-data and pre-recorded error-location table (Fig.?12.9.6(a)). Since BER is below a few percent, the number of error flag ?1??s in the error-location table is small. If the NAND BER is 1%, the error-location table can be efficiently compressed to 16% by run-length encoding (Fig.?12.9.6(b)). With EM, the measured BER decreases by 67%, corresponding to 3? ABER improvement (Fig.?12.9.6(c)).

Figure?12.9.7 depicts the photograph of the measured storage. The USSS with RM, ERS, page-RAID and EM increases ABER by 32? compared with the con- ventional mirroring scheme, which corresponds to an increase in write/erase endurance of 4.2?, or increase in retention time of 34?. ABER of NAND is 6.7%, assuming 40b correction per 1KB ECC. The presented techniques can also be applied with other ECC schemes such as asymmetric coding [4] and LDPC codes [6].

Acknowledgements: This work is partially supported by CREST/JST. The authors appreciate T.O.

Iwasaki, K. Johguchi, S. Hachiya, and K. Miyaji for their support.

