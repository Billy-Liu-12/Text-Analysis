A Dissemination Protocol to Guarantee Data Accessibility within N-hops for  Wireless Sensor Networks

Abstract One of the major challenges of designing a  dissemination protocol for Wireless Sensor Networks (WSNs) is energy efficiency. Flooding and SPIN, which are very well-known proactive methods, spontaneously disseminate the sensed data without a request from an arbitrary sink node. However, these proactive protocols disseminate the data even to some nodes that do not need it, which is energy inefficient. In order to overcome this weakness, we introduce a novel semi- proactive protocol to disseminate only to pertinent nodes instead of all nodes. Thus some nodes, such as arbitrary sink nodes that want the sensed data, are able to obtain the data easily within n  hops. The simulation results show that the proposed protocol has higher average node energy efficiency than that of well-known earlier work, SPIN. If a proactive protocol, such as SPIN, is changed to semi-proactive and has only a 1- hop burden, then the energy efficiency enhancement is up to 83.7% compared with SPIN.

1. Introduction   A Wireless Sensor Network (WSN), which is used to observe changes of environment and/or collect data, is a core technology that makes possible interactions between humans and the environment in applications such as ubiquitous computing, smart homes, and office automation. Recently, despite developments in semiconductors and telecommunication, WSNs still have several problems such as limitations on sensor nodes (computational capacities and memory), communication bandwidth, and more important, battery power [1]. In these WSN environments, the sensor node performs not only transmission of data but also relay of data. If some nodes become energy- exhausted then the whole network lifetime may be reduced. Hence, an efficient low power consumption design is very important not only for the network  protocol, but also for the operating system, middleware, and security [2]. In this paper, we raise a question about this weakness of traditional proactive protocols, and present a new dissemination protocol to guarantee Data Accessibility Within N-hops, called the DAWN protocol, which is semi-proactive.

Data dissemination [3] is a fundamental feature of a WSN, since thousands of sensor nodes may collect, exchange, and transmit data. Flooding and Sensor Protocols for Information via Negotiation (SPIN) [4], two well-known proactive schemes, have been employed for data dissemination. First, in Flooding, each node retransmits the received data from all its neighbors. This is a very simple and primitive protocol.

It rapidly disseminates the data; however, it quickly wastes energy when a data implosion occurs. SPIN solves this issue by exchanging information and negotiating at each node. However, since general proactive protocols spontaneously disseminate data to all nodes without a request from an arbitrary sink node, they still have an inefficient energy problem.

If we can appropriately disseminate the sensed data through only suitable nodes, almost all nodes may save energy. Based on this characteristic, DAWN disseminates only to particular nodes that are called backbone nodes. An arbitrary sink node is able to obtain the sensed data within n  hops through backbone nodes. When DAWN carefully selects backbone nodes to disseminate the data, DAWN simultaneously takes into account three properties.

First, a backbone node may have a high residual energy level, because it has to disseminate the data to its neighboring low-level nodes. Second, the transmission distance between nodes has to guarantee more efficient energy consumption. Finally, the overlapped area of the transmission radius should be small. In this paper, we compare our proposed scheme, DAWN, with SPIN.

Simulation results show that DAWN has higher node energy efficiency and more efficient energy consumption distribution than SPIN.

The remainder of this paper is organized as follows.

Section 2 explains previous work about proactive protocols on WSNs, Section 3 presents details of the proposed protocol, Section 4 evaluates our proposal by employing a simulation, and finally, Section 5 concludes this paper.

2. Previous Work   Traditionally, with proactive dissemination protocols, the source node distributes the sensed data through the entire network without a request from an arbitrary sink node. Flooding and SPIN, two well- known proactive schemes, have been previously employed for data dissemination. In Flooding, this protocol need not have a special scheme to disseminate the sensed data. The data are continuously sent to neighbor nodes until it reaches maximum-hop or destination. Flooding is easy to implement but has some problems [5][6]. One of them is the data duplication problem. As shown in Figure 1(b), since node B and node C transmit the data to D at the same time, node D receives duplicate data from the two nodes. This is very inefficient from the viewpoint of energy consumption.

(a) (b)  Figure 1. The duplication problem for Flooding  Since a node transmits data to its neighbors  irrespective of whether the neighbor already has the data or not in Flooding, SPIN is proposed to solve the data duplication problem. To overcome this problem, nodes negotiate with their neighbors before transmitting the data in SPIN, therefore it guarantees that only needed data will be transmitted. SPIN uses metadata*, which describes the information to negotiate successfully.

SPIN has three phases, which are as follows. The first step, Figure 2(a), is the advertising phase wherein a sensor node with data broadcasts an advertising message including metadata to its neighbor nodes. The second step, Figure 2(b), is the request phase. The neighbor nodes that have received the advertising   * In the reference paper [4], authors refer to the descriptors used in SPIN negotiations as metadata.

message check the metadata to determine whether the data is necessary or not. If the data is necessary, the neighbors send a request message to the sensor node that sent the advertisement. The third step, Figure 2(c), is the data transmission phase. The sensor node that received the request message transmits the data to the neighbors that sent the message. By the repeated use of the three steps, SPIN disseminates data throughout the entire network.

(a) Advertising (b) Request   (c) Data transmission  Figure 2. The main three phases for SPIN  However, the proactive protocol has a limitation  regarding information transmission. Since it only disseminates data to all nodes in the network, it disseminates data even to some nodes that do not need it. That is very inefficient from the viewpoint of energy consumption. Since there is no method to know whether a node wants the data or not, it is impossible to find the most efficient way or only path to disseminate the data in proactive protocols. In contrast, if the only relatively few sink nodes suffer within just 1-hop, then the obtained benefit for energy consumption may be very efficient. In addition, we simulate the performance for n -hops compared with SPIN. In this paper, we refer to this as a semi-proactive method and introduce the proposed protocol in the next section.

3. A Dissemination Protocol to Guarantee Data Accessibility within N-hops  3.1. Preliminaries       Due to weaknesses of traditional proactive protocols as mentioned previously, we present a new dissemination protocol to guarantee Data Accessibility Within N-hops, called the DAWN protocol, which is semi-proactive. Here, we assume that the sensor network is connected and dense. Each sensor node can acquire its residual energy level and maintain neighbor node information [7][8]. DAWN forms backbone nodes and disseminates the sensed data to the whole network through backbone nodes. Only the backbone nodes actually receive the data; the other nodes receive only metadata. The nodes, having received the metadata, record the next hop to access the backbone node in their routing table. Before describing the proposed protocol, we define the following terms.

Type of nodes  Waiting nodes: A node that has received no message up to now, and has no relation with the data.

Backbone node: A node that has data. It can transmit the data to its low level nodes whenever they send a request message.

Low level node ( n ): A node that does not have data and may be in n  hops away from backbone nodes.

Ready node ( n ): A node that is waiting until it becomes a backbone node or low level node. If n  is 1, then the node is the candidate node of the backbone node. If n  is bigger than 1, it refers to the n th low level node.

Type of messages Backbone message: The message that the node,  which became a backbone node, sends to its neighbor nodes. The ready node, which receives this message, may become its low level node and the waiting node may become the ready node in order to become the next backbone node.

Low level message ( n ): The message that the n th low level node sends to make its low level node. If the waiting node receives this message and then becomes the n th level ready node, and after waiting some time, it may become the  1+n st low level node.

Waiting time  When DAWN selects the next backbone node or the low level node of neighbor candidates, this time provides a delay time.

Since the waiting time is calculated by considering  both network lifetime and energy efficiency, we take into account the two attributes as follows. The first attribute is eF = residual energy /  initial energy,  which refers to the remaining energy of a node. The second attribute is dF = ?1 min{ 1, ?? /|| d?  } and it means how close the distance is to ? , which is the most efficient distance. To explain ? , we use the following energy model [9]:  ptx dE 211 ?? +=  (1) 12?=rxE  (2)  where, txE  and rxE  denote the energy consumption for transmitting and receiving a bit over a distance d , respectively. 11?  is the energy / bit  consumed by the transmitter electronics. 2?  is the energy dissipated in the transmit op-amp and 12?  is the energy / bit consumed by the receiver electronics. Since txE increases exponentially with distance when data are transmitted, it may consume less energy when relaying data as opposed to directly transmitting data. However, if the data are relayed too many times, it may consume even more energy. Therefore, determining an ideal distance is important for realizing energy efficient transmission.

??  Figure 3. Data dissemination through relay nodes  Figure 3 shows data dissemination between nodes  0n  and Kn . When data are transmitted, the energy consumption through the path ),( 0 KnnP  is represented as follows.

( ) ( ) =  ?= K  r rrK nnPEnnPE  10 ),(),(  (3)  We define the average distance between each relay node as ? . The optimized number of relay nodes is  ? D , as calculated by ? . Therefore, the energy  consumption between nodes 0n  and Kn  is as follows.

( ) ( )pK DnnPE ????? 212110 ),( ++?  (4) The energy consumption ( )),( 0 KnnPE  is  minimized when it has a minimum value. Therefore,  when ( ) 0),( 0 =? ?  KnnPE? , the value of ?  is  p p )1(2   ? +  ? ??  [10].

The waiting time, ),( de wwT , is set using two attribute eF  and dF  adding weight value ew  and dw .

We have to get the waiting time from =F ddee FwFw +  ( 1=+ de ww ), using the formula  ( ) ??+?= ())1(),( randomFwwT de , where ?  is the maximum waiting time and random( ) is a random function uniformly distributed from 0 to small delay which is near 0. If every node has the same value F , the random function can discriminate between the nodes.

3.2. Operation Overview for DAWN Protocol   Since backbone nodes save and relay the data, we have to select carefully the node to ensure both energy efficiency and long network lifetime. To select the best node among the ready nodes, we should make the waiting time as short as possible. If there are some backbone nodes around the current ready node, the ready node that has received the backbone message becomes the low level node of the backbone node because the ready node need not be a backbone node.

Through this process, backbone nodes are being made while avoiding the overlapping area toward the whole network. The proposed protocol 1DAWN  forms backbone nodes so that an arbitrary sink node can access the data within 1-hop. The detailed 1DAWN  is as follows.

),(1 de wwDAWN  01. Data is generated.

02. The sensing node disseminates the backbone  message to its neighbor nodes, as shown in Figure 4(a), Figure 5(d).

03. A waiting node which has received the backbone message becomes a ready node, as shown in Figure 4(b).

04. Calculate waiting time ),( de wwT  and wait for the time.

05. While There exist ready nodes.

06.  If There is no any message.

07.   The waiting time is expired and the node  becomes the backbone node, as shown in Figure 4(c).

08.   Disseminate the backbone message to its neighbor nodes, as shown in Figure 4(c).

09.   The node receives the actual data from the backbone node, as shown in Figure 4(d).

10.  Else if It receives a backbone message.

11.   If The node is the waiting node.

12.    A waiting node becomes the ready  node, as shown in Figure 4(d).

13.    Calculate the waiting time  ),( de wwT  and wait for the time.

14.   Else if The node is the ready node.

15.    The node becomes the low level  node of the node which it sent the backbone message, as shown in Figure 4(d).

16.    Record the high level node to its routing table.

(a) (b)  (c) (d)  Figure 4. Operation scenario for 1DAWN   ),(1 de wwDAWN  enables an arbitrary sink node to  obtain the sensed data from backbone nodes within 1- hop. If we assume that the distance is more than 1-hop, then the number of backbone nodes decreases, and thus the network lifetime may be increased.

),( den wwDAWN  is proposed by adopting ),(1 de wwDAWN . The detailed description is as  follows.

),( den wwDAWN 01-16. ),(1 de wwDAWN 17.    Disseminate the low level message  to its neighbor nodes after the waiting time ),( de wwT , as shown in Figure 5(a).

18.  Else if It receives the x th low level message.

19.   If The node is the waiting node.

20.    Wait for ),( de wwT , as shown in  Figure 5(b).

21.    The node becomes the 1+x st low level node, as shown in Figure 5(c).

22.    Record the high level node to its routing table, as shown in Figure 5(c).

23.    If nx <+1 24.     Disseminate the low level  message to its neighbor nodes.

(a) (b)    (c) (d)  Figure 5. Operation scenario for nDAWN   4. Performance Evaluation   Table 1. Simulation Variables network size mm 600600 ?  network density 2/003.0 mnodes initial energy mJ1  11? , 12?  bitnJ /90  2?  2/08.0 mbitnJ packet data size bits80  transmission range m50 ?  m43.47   We implemented the protocol DAWN using JAVA  to evaluate its performance. The main parameters are listed in Table 1. Sensor nodes with 50 m transmission range are randomly distributed in a network over an area of 600 m?600 m. The energy model has values of  11? , 12? = 90 nJ/bit and 2? = 0.08 nJ/bit/m2. We set  2=p  in Equation (1) and the calculated ?  from the energy model is 47.43 m. We set the low level n  to 3.

0 1 2 3      Ef fic  ie nc  y fo  r e ne  rg y  co ns  um pt  io n  (% )  n-th low level  DAWN ( 0.0, 1.0 ) DAWN ( 0.5, 0.5 ) DAWN ( 1.0, 0.0 )  Figure 6. Energy efficiency over SPIN  Figure 6 shows that the benefits of using a semi-  proactive instead of a proactive way. Furthermore, if a sink node suffers only one hop, the efficiency of energy consumption for the entire network improves up to 83.7% over SPIN. If DAWN gives weight to ?  which is the ideal distance considering efficient average energy consumption, then the efficiency for average energy consumption is better than for other protocols.

In Figure 7(c), the star means that the energy of the node is exhausted firstly. We continuously generate data until the star occurs. In the present paper, we define the network lifetime as the time from network initialization to the first node failure; in the worst case, failures may result in network disconnection. Therefore, low power consumption and network lifetime are important issues in WSN, and the problem has been studied often [11]. As shown in Figure 7(a), the energy distribution of SPIN is very exhaustive. In order to save energy, the semi-proactive method is superior to a proactive method, such as SPIN.

In addition, Figure 8 shows that an arbitrary node can easily access data, since the backbone nodes are uniformly distributed. The star node is the first sensing node (i.e., source node), then the data is disseminated throughout the entire network. Each node, except for backbone nodes, is able to easily obtain the data within n -hops using its routing table.

5. Conclusion         (a) SPIN (b) 0DAWN  The first energy-exhausted!The first energy-exhausted!

(c) 1DAWN  (d) 2DAWN    (e) 3DAWN  (f) Energy level Figure 7. Distribution for energy consumption        Source NodeSource Node  (a) 1DAWN  Source NodeSource Node  (b) 2DAWN  Source NodeSource Node  (c) 3DAWN 1st low level node  2nd low level node 3rd low level node  Backbone node 1st low level node  2nd low level node 3rd low level node  Backbone node  (d) Explanatory notes Figure 8. Distribution for backbone nodes  This paper describes proactive protocols, such as Flooding and SPIN in WSNs. We proposed a new dissemination protocol to guarantee Data Accessibility Within N-hops, called the DAWN protocol, which is semi-proactive. The performance of the semi-proactive method was evaluated and compared with SPIN.

DAWN simultaneously takes into account three properties, namely high residual energy level, the ideal transmitted distance, and the small overlapped area of the transmission radius, to select backbone nodes for efficient data dissemination. Using the backbone nodes, thus some nodes, such as arbitrary sink nodes, which want the data, are able to easily obtain the data within n -hops. The sink node accesses the data within 1-hop in the previous proactive protocols, however, the energy loss of some nodes, which do not need it, is undoubtedly very high. Contrarily, if the only relatively few sink nodes suffer just within n  hops in the proposed protocol, then the obtained benefit for energy consumption is very efficient.

