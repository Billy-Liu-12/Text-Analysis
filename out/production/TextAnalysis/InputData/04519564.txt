A Framework for Extrusion Detection Using Machine Learning

Abstract   Machine learning deals with the issue of how to  build programs that improve their performance at some task through experience. Machine learning algorithms have proven to be of great practical value in a variety of application domains. They are particularly useful for (a) poorly understood problem domains where little knowledge exists for the humans to develop effective algorithms; (b) domains where there are large databases containing valuable implicit regularities to be discovered; or (c) domains where programs must adapt to changing conditions. Not surprisingly, the field of cyber space turns out to be a fertile ground where many software security problems could  be formulated as learning problems and approached in terms of learning algorithms. This paper deals with the subject of applying machine learning in extraction detection. In the paper, we present our research work on design and implementation of an extrusion detection system for information security of big companies. The result shows a potential in real-world applications.

1. Introduction   Extrusion is the unauthorized transfer of digital assets that are essential to accomplishing a company's mission credit card numbers, customer records, source code, transactional information and other classified information - by trusted insides. Trusted insides can be any of the company?s employees, its suppliers and sometimes indirectly even its customers. An extrusion can be malicious, such as a theft of information, or unintentional, such as the accidental inclusion of an unauthorized recipient on a sensitive e-mail. Malicious or accidental, the consequences of leakages can be dire: regulatory fines, lost business, embarrassment, or lawsuits.

In this paper, we present our research work on design and implementation of an extrusion detection system for information security using machine  learning. Currently, the problem of information security in big companies has become more and more important. The leaking of confidential information and internal attacks cost a lot of money of these companies every year. Therefore an effective and efficient solution is urgently demanded. Extrusion detection system (EDS) is a good choice for solving this problem and protecting confidential information. However, EDS is a new research topic and there is not much research effort focusing on this area. Extrusion detection is a reverse process of intrusion detection.

Intrusion detection system (IDS) is to protect the system from outside attacks, while EDS is to protect the system from inside attacks [1]. Therefore, there are many similar characteristics between EDS and IDS.

Based on this fact, we studied IDS and compare it to EDS.

Currently there are two general categories of intrusion detection techniques, misuse detection and anomaly detection. Misuse detection is also called signature-based detection. In misuse detection, well- known attacks or weak spots of the system are encoded into signatures, which are then used to match evidence from run-time activities to identify intrusions.

Anomaly detection is also called statistical-based detection. In anomaly detection, normal behavior of user and system activities are first modeled into normal profiles, which are then used as baselines so that run- time activities that result in significant deviation are triggered as possible intrusions. These methods can be also applied to extrusion detection. However, misuse detection needs much human effort to find well-known attacks and encode them to a lot of signatures; anomaly detection also needs much human effort to select proper features for modeling normal profiles.

Therefore, we proposed another combination method which integrates both misuse detection and anomaly detection and uses data mining techniques for automatically generating detection rules and selecting proper features.

In this method, both user and system activities are first recorded as raw data, such as keyboard/mouse events, process events, file system events, network connection events, and network traffic events. These  11th IEEE Symposium on Object Oriented Real-Time Distributed Computing (ISORC)  DOI 10.1109/ISORC.2008.70     raw data will then be analyzed by data mining techniques, such as association rule analysis, frequency analysis, link analysis, sequence analysis, and classification analysis.

After these analyses, detection rules and proper features will be automatically generated. Then the detection rules can be used to detect existing extrusions and the proper features can be used to build normal profiles and detect future possible extrusions. Based on this idea, we proposed a framework of EDS for information security of big companies. The framework includes data collection, data analysis, and extrusion detection. At the current stage, we have implemented a prototype system for data collection, which includes four modules, user monitor, process monitor, file system monitor, and network monitor.

We introduce the basic concepts of machine learning first then present system architecture and system components in Section 3. In section 4, we discuss the technical approach.  We present the implementation in section 5 and conclude the paper in section 6.

2. Machine Learning  Machine learning is concerned with the design and development of algorithms and techniques that allow computer systems to autonomously acquire and integrate knowledge to continuously improve them to finish their tasks efficiently and effectively. There are three main learning paradigms according to the available information in the training examples. They are supervised learning, reinforcement learning and unsupervised learning [2].

In supervised learning, the desired output of each input in the training examples is given. The goal of learning is to find a function implied in the training examples that could be used to predict the output for any unseen valid input. The output of the function could be class label (such task is called pattern recognition or classification) or continuous real value (such task is called regression or function approximation).

In reinforcement learning, the machine is usually not given training data, but interacts with its environment by producing a series of actions. Each of action will affect the state of environment. The environment in turn will generate reward or punishment. The aim of reinforcement learning is to discover a policy for selecting actions to maximize the reward or minimize the punishment.

In unsupervised learning, the machine receives the inputs only without outputs or rewards from its environment. The goal of unsupervised learning is to  find the patterns in the inputs and build the representation of the input that can be used to make decision, predict future inputs and so on. Example of unsupervised learning is clustering and data compression.

3. System Architecture  Based on the study of both IDS and EDS, we proposed a combination method which integrates both misuse detection and anomaly detection and applies data mining techniques for automatically generating detection rules and selecting proper features. In this method, both user and system activities are first recorded as raw data, such as keyboard/mouse events, process events, file system events, network connection events, and network traffic events. These raw data will then be analyzed by data mining techniques, such as association rule analysis, frequency analysis, link analysis, sequence analysis, and classification analysis.

After these analyses, detection rules and proper features will be automatically generated. Then the detection rules can be used to detect existing extrusions and the proper features can be used to build normal profiles and detect future possible extrusions.

The framework can be divided into data collection,        data analysis, and extrusion detection as shown in  Figure 1. Next, we will describe the detail of each module.

A. Target system: Target system is the system that is being monitored and protected from extrusions. The target system can be a personal computer, a local network, or event a whole company's computer system.

B. Data collection: Data collection is the main module for collecting the raw data which includes a lot of information or events, such as  (1) User behaviors: keyboard events, mouse events.

(2) System behaviors: process events, file system events, clipboard events.

(3) Network behaviors: connection events, network traffic events.

To capture these different types of events or information, the Data Collection module can be further divided into several sub-modules, User Monitor, Process Monitor, Network Monitor, File System Monitor, and Clipboard Monitor. All these sub-modules are running simultaneously to monitor different types of events and produce the raw data.

C.  Raw data: Raw data is the initial event information that is produced by different sub-module monitors, as discussed above. Although the raw data contains many different types of information or events, the format should be standardized. Because the formatted raw data is easy to be stored and further processed for data analysis.

D. Data analysis: Data analysis is the module that analyzes the raw data to generate detection rules and select proper features. In this module, different data mining techniques will be applied, such as:  (1) Association rule analysis: to mine the possible association rule.

(2)Frequency analysis: to analyze the frequency of different events and features.

(3) Link analysis: to construct the possible link between different events  (4) Sequence analysis: to find the most frequent sequences and analyze their features.

(5) Classification analysis. to classify the different type of events into categories  E. Detection rules: Detection rules are automatically generated by data analysis module and can be used for future extrusion detections.

F. Features: Proper features are automatically selected by data analysis module. The proper features are the most important features that could model the system and user's normal profiles. The normal profiles can be further used to detect abnormal events and the possible extrusions.

G. Database: SQL database is the storage place to store all the information and events which includes the raw data, the detection rules, the proper features and the system and user's normal profiles.

H. Detection engine: Detection engine is the module that interactively loads the detection rules from SQL database and applies these detection rules on the target system for run-time extrusion. The detection engine can also load the system and user's normal profiles from SQL database and monitor the target system. If the system or the user's behavior significantly deviate the baseline of the normal profiles, the alarm of possible extrusions is triggered.

4. Technical Approach   By analyzing these different events and their happening sequences, we can define rules to detect the intrusion or extrusion activities. For example, BINDER [3] simply detects break-in extrusions by determining the network connections are unrelated to user actions. BINDER also uses process information to limit the correlation. Only processes that receive user input are allowed to make connections.

We can use event timestamp as index and sort all the recorded system events. Then we can analyze the intrusion or extrusion activities. Such as:  (1) If an unknown process is created not by the user input, then it is probably an intrusion or extrusion process.

(2) If an unknown network connection is requested not by the user input, then it is probably an intrusion or extrusion activity.

(3) If a confidential file is read and the content is transferred out of the computer, then it is probably an intrusion or extrusion activity.

(4) If the content of a confidential file is copied to the clipboard and pasted to another file, then it is probably an intrusion or extrusion activity.

Currently, we can monitor and record the following system events:  (1) User input events: keyboard click events, mouse click events.

(2) Process events: process create events, process terminate events.

(3) Network connection events: request new connection events.

(4) Network traffic events: network traffic data events.

(5) File system events: file create events, file modify events, file open/close events, file read/write events.

(6) Clipboard events: clipboard data events, copy/paste events.

4.1 Pattern of extrusions   By sorting all the recorded system events by their timestamps, we can obtain a large set of data. Based on these data, we believe we can apply some data mining techniques to analyze them and find some patterns of intrusion or extrusion activities. And also, we can predefine some patterns of intrusion or extrusion activities, and use the pattern recognition techniques to find the possible intrusion or extrusion activities in the large set of data.

Data mining and pattern recognition are useful for finding patterns or abnormal activities in the already recorded data. But they are hard to use for real-time monitoring the system and triggering alarm when the intrusion or extrusion activities happened. The best way is that the system is pre-trained with large datasets by using data mining techniques or the patterns of intrusion and extrusion activities are pre-defined by users. Then the pattern recognition techniques or rule- based detection techniques are used for real-time monitoring the system activities and the alarm will be triggered when some patterns are found or some rules are matched.

4.2 Extrusion forecasting  For forecasting the next intrusion or extrusion activity, the definition of pattern or rule is very important. If we can obtain the accurate and enough patterns of intrusion and extrusion activities, then I think we can forecast the next intrusion or extrusion activity. Or if we can define the detection rules correctly and completely, then it is also easy to forecast the next intrusion or extrusion activity.

On the other hand, forecasting new types of intrusion or extrusion activities is another important but difficult problem. To deal with this problem, I think the possible solution is still to find some proper patterns or rules for detection. But since we try to forecast new (unknown) types of intrusion or extrusion activities, the patterns or rules can not be defined completely. One way is to do the partial pattern recognition or rule matching. That is if the pattern is partially recognized or the rule is partially matched, then we can trigger an alarm for possible extrusion or intrusion activities. The other way is to find abnormal activities in the system. To find abnormal activities, we first need to model the normal activities. Then we monitor all the system activities and if some activities are not belong to normal activities, they could possibly  be intrusion or extrusion activities. But how to model the normal activities is still a difficult problem.

4.3 Dynamic mechanism   Although, we can monitor many system events and user behaviors, how to organize these events information and use them to detect extrusion or guard security is still a very difficult problem.

There are two main directions to organize and use these system events and user behaviors information.

On way is to define some rules and apply these rules to the recorded or the real-time events information. If the rule is matched, then the alarm will be triggered. The other way is to organize these events information as a large dataset or many datasets, and then apply the data mining and the pattern recognition techniques on these datasets to detect extrusion or security threads.

Currently, we are focusing on the first way, rule- based extrusion detection and information security. A dynamic mechanism for adding rules, testing rules, and deleting rules can be done too. That means, we do not hard code the rules into our system, but develop a system that can be easily added rules and delete rules.

So that, when we do the experiments, we can simply add the specific rules to the system and run the experiments. If the result is not very good, we can delete the previous rules and add more new rules. Then we can run another experiments based on new rules. In this way, we can efficiently run many experiments for extrusion detection and information security.

For developing such a system, the most important problem is to define the templates of rules. To accomplish this object, we can first categorize some rules and find the similar rules. Based on these different types of similar rules, we can propose some basic templates for different rules.

For example, a possible template can be a sequence of actions:  (1) Sequence: Action_1  Action_2  Action_3 ?  Action_N  That means the user can specify a sequence of actions as a detection rule. Then the system will examine the recorded system events information to find whether there is a sequence of events that match the detection rule. As an example, based     on the above template, the following is a simple detection rule:  (2) A confidential file is opened  the content is copied to clipboard  the content is pasted to another file  the other file is saved  So in this detection rule, there are four actions and there a specific order that these actions are performed. Then if our detection system found a sequence of events that match this rule, then some alarm will be triggered and some reactions will be done.

For another example, the frequency of some actions can also be a template:  (3) Frequency: Action 1 repeats N times  Then based on this template, we can add a possible detection rule like this:  (4) A connection to the same IP is made more than 10 times  After adding this rule, the system will monitor the network connection events and detect whether there is an IP that has been connected more than 10 times. If yes, the extrusion activities maybe happened and some more investigation and reactions will be performed.

The above is just some very basic idea. There are still many problems should be considered, such as the timing problem. Sometimes the extrusion activities will not follow our detection rule step by step. The order of there activities may be interleaving. So our detection rules should concern the timing information.

For examples, for frequency rules, we can set some timing threshold which means if a specific action repeats more than N time within a timing period, then it will trigger the alarm.

After we have some templates for adding detection rules, we can modify and refine these templates for future defining new rules. After we finish proposing these templates, we can develop such a system which contains these templates and can use these templates to add new rules or delete old rules.

.

5. Implementation   At the current stage, we have implemented a prototype system for data collection, which includes four modules, user monitor, process monitor, file system monitor, and network monitor. To protect the confidential information and prevent leaking out the confidential information, we can use some programs to monitor the events on the computer and network.

Based on some predefined keywords and detection rules, our monitoring system can set alarm when the confidential information is insecure or leaking out. In our prototype system, there are several different modules to monitor the events on the computer and network:  (1) User monitor: to monitor the user's behavior on the computer, such as keyboard events (which key down), mouse events (click, coordinates), on which application, and so on.

(2) Process monitor: to monitor all the processes on the computer and all the process events including creating processes, suspending processes, terminating processes, and so on.

(3) Network monitor: to monitor network connections, especially the abnormal connections, including process id, protocol, remote address, remote port, status, and so on.

(4) Traffic monitor: to monitor traffic packets on the network, including protocol, remote address, remote port, data packet which can be used to filter confidential key words.

(5) File monitor: to monitor the file system including the files that contain the confidential information, such as creating, opening, copying, renaming, reading, writing files.

(6)  Clipboard monitor: to monitor the system clipboard events and the change of contents of the system clipboard.

6. Conclusion   As a conclusion, our research work focuses on design and implementation of an extrusion detection system for information security of big companies. We first studied both IDS and EDS. By comparing them each other, there are many similar characteristics between them. Currently there are two general categories of intrusion detection techniques, misuse detection and anomaly detection. These methods can be also applied to extrusion detection problems. These two main methods have advantages as well as             Figure 1. System Diagram           disadvantages, such as both of them need much human effort. Therefore, we proposed another combination method which integrates both misuse detection and anomaly detection and applies machine learning for automatically generating detection rules and selecting proper features. In this method, both user and system activities are first recorded as raw data. Then the raw data is processed and analyzed by different machine learning techniques. Finally, detection rules and proper features will be automatically generated. And the extrusion detection and confidential information protection can be carried out based on the detection rules and proper features. Currently, we have implemented a prototype system for data collection, which includes four modules, user monitor, process monitor, file system monitor, and network monitor. In the future work, we plan to extend the system to deal with the raw data and to automatically generate detection rules, select proper features, and construct normal profiles.

.

7. Acknowledgements   This work was supported in part by Motorola.

8. References  [1] Z. Yu, J. J.P. Tsai, T. Weigert, ?Automatically System, Man, and Cybernetics, Part B, Vol. 37, No. 2, pp. 373-384, April 2007.

[2] D. Zhang and J. J.P. Tsai, Machine Learning Applications in Software Engineering, (ed.), World Scientific Inc., 2005.

[3] W. Cui, R. H. Katz, and W. Tan, "Binder: An Extrusion-based Break-in Detector for Personal Computers", Proceedings of 2005 USENIX Annual Technical Conference, April 2005.

