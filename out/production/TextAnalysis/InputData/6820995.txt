A Flexible Load-Balancing Traffic Grooming  Algorithm in Service Overlay Network

Abstract?To overcome the unbalanced flow distribution  problem caused by private routing on service overlay network, network service providers usually use load balancing strategy, but traditional methods do not consider making the load balance adapt to the status of the network, neither consider that load balancing may damage performance of some application links. In order to solve the two problems, based on Wardrop equilibrium theory, the paper proposes a flexible load-balancing traffic grooming strategy, which aims to achieve system optimization.

According to the principle of stochastic user equilibrium, a net- work traffic optimization control model is proposed. The path impedance calculation formula is given based on the Logit sto- chastic add-in term, in which the value of the equilibrium para- meter   determines the level and scope of load balancing. Finally, we designed the elastic traffic grooming algorithm ElaGo. The simulation results verified the effectiveness of the proposed algo- rithm.

Keywords?Service Overlay Network; Wardrop equilibrium; Traffic engineering; Load-balancing

I. INTRODUCTION SON (Service Overlay Network) [1] is a kind of virtual  Network constructed on the basic IP network. It makes profit through providing high quality data value-added services to users. Due to the separation of infrastructure control from services, it has become an effective approach to achieve cross- domain QoS guarantee. The optimizing resource management for SON also has caused the attention of researchers and net- work service providers. In order to provide high quality ser- vice, SON usually is configured selfish routing, but selfish routing could reduce the network resource utilization, and increase SON provider?s investment to capacity expansion.

Wang put forward cooperative game approach between the overlay and underlying layer to solve the selfish routing prob- lems [2].However, this solution assumes that information of these two layers is opened to each other. Obviously it is con- flicted with autonomy and independence characteristics of autonomous system. Therefore, this paper proposed a TE (Traffic Engineering) optimization strategy in the overlay layer to optimize the overall performance of the system.

Usually load-balancing method is exploited to minimize the maximum cost of networks. There are many relevant re- search results for the basic IP network. However, the reported load balancing algorithms are mostly executed in a chosen available multipath set. The size of the set is determined with some predefined standard, such as hop count or delay, etc.

However the selection criteria did not adapt dynamically to network traffic and congestion status. Moreover, the level of load-balancing is hardly adapted to user's QoS requirements.

In order to solving these problems, an optimizing traffic grooming strategy for SON is proposed in this paper. It focus- es on the following two questions:  ? making the range of load balancing adaptive with the con- dition of the network;  ? searching a parameter that can coordinate users? demands with the level of load balance, and implement elastic load balancing.



II. RELATED KNOWLEDGE AND WORK  A. Wardrop Equilibrium In 1952, Wardrop proposed the notion of traffic equili-  brium for transportation network [3]. According to his theory, if travelers are rational, have enough cognition about network, and adopt same routing strategy, then the network traffic will eventually reach the user equilibrium. After that, the method is widely used in research of transportation planning. Scholars have proposed a series of extended methodologies forming a complete theoretical system, known as Wardrop equilibrium theory, which includes two basic principles: UE (User Equili- brium) and SO (System Optimization). UE describes the traf- fic equilibrium pattern that each user non-cooperatively seeks to minimize his journey cost. At equilibrium the journey time in every route actually used is equal and less than those which has not been chosen. Beckmann has put forward a convex programming model that describes the relationship between network traffic and the cost at UE status [4]. Another prin- ciple, SO states other traffic pattern that the sum of journey cost is the minimum at equilibrium. It assumes that the all players choose path under a unified coordination command. If   DOI 10.1109/CLOUDCOM-ASIA.2013.19    DOI 10.1109/CLOUDCOM-ASIA.2013.19     the network traffic is not too heave and the transportation is unimpeded, UE and SO have the same solution. While with the increasing of the level of congestion, the solution differ- ence between UE and SO will be larger. However, if the par- ticipants of UE consider the impact to network performance caused by themselves, that is, Agent using marginal cost as their estimated cost considerations, their routing strategy is minimum marginal cost, the network will reach SO when traffic equilibrium. This method turns the centralized optimi- zation problem into a distributed one and omits the control center of SO planning.

However, in the practical application of UE model for network traffic distribution, the conditions of UE model could not be met easily due to the estimation of cost function often exist error. It is more consistent with the actual situation to establish model on the network flow with SUE (Stochastic User Equilibrium) [4]. SUE relaxed the hypothesis that the user must know exactly all paths cost. Each Agent always chooses the best path by estimating, and yet paths with higher utility on the whole are selected in greater probability.

There are two add-in models: Probit and Logit in SUE equilibrium. The Logit SUE model is widely used in traffic distribution study because it is easy to understand. When us- er?s estimation to network impedance estimation is very accu- rate, the SUE will tend to UE. Literature [4] refers to more details about stochastic user equilibrium.

B. Related Work In recent years, Wardrop equilibrium theory is introduced  into research of the communication network traffic engineer- ing and routing optimization. Many meaningful results have been obtained [5-11]. In which, Simon conducted a series of studies on applying Wardrop equilibrium theory in traffic engineering, especially the feasibility and effectiveness in adaptive traffic distribution. Literature [8] exploits Wardrop routing strategy to avoid traffic jitter and theoretically proved the convergence of the strategy. Then on this basis, the author proposed the Replex algorithm [9], which elects route in a multi-next hop route set, and calculates the path cost with the sum of weighted average delay. Replex algorithm was im- proved in literature [11], the paper calculates the path cost with queue length instead of the delay, and develop a training algorithm and a smoothing algorithm reducing the influence on the algorithm caused by multiple parameters in the Replex.

So it was called Non-parametric Regression. Different from Replex, literature [11] aimed at the system optimization. It utilized the relationship between the SO and the UE, which UE with marginal cost equivalents to SO, achieve global sys- tem optimization by distributed algorithm.



III. MATHEMATICAL MODEL  A. System Optimization Model Define the SON network as a directed graph G (N, A),  where N is a set of virtual nodes and A is a set of virtual links, a A. Agent module in each virtual node is responsible for routing decisions. Agents choose routing using impedance as metrics. The path impedance is represented as a single or mul-  tiple weighted combinations of QoS metrics, such as delay, jitter, reliability and congestion degree, etc. OD (Origin- destination) pair rs denotes a pair of nodes of ingress to egress in SON. Prs  is the path set in OD rs . Other variable are as follows:  rs q : traffic demand between OD rs ,  a x : traffic on link a,  a t : average impedance on link a, k  rs f : traffic on the path k of  OD  pair rs , ak  rs ? : if link a  on the path k between rs , ak  rs ?  is 1, otherwise 0.

According to the model proposed by Backmann, solving the mathematical programming problem (P1) can get the traf- fic distribution satisfying UE.

(P1)  min ( ) ( ) a x  a a A  Z x t w dw ?  ? ??                        (1)  . . , rs  k  rs rs k P  s t f q r R s S ?  ? ? ??                    (2)  , rs  k ak  a rs rs r R s S k P  x f a A? ? ? ?  ? ????                      (3)  0, , ,k rs f r R s S k K? ? ? ?                   (4)  The objective function in the mathematical programming has not intuitive economic or physical interpretations. It only shows the mathematical structure of traffic pattern at equili- brium. Constraint (2) indicates that all path traffic on OD pair rs is equal to the traffic demand onrs , and the relationship between link traffic and path traffic is described by (3). How- ever, SO principles are shown as formal mathematical pro- gramming (P2), it has clear economic significance, i.e., the system impedance is the minimum.

(P2)                          ?min ( ) ( ) a a a  a A  Z x x t x ?  ? ?                   (5)  s.t.  (2)~(4)  ( ) ?let ( ) ( ) ,a a a a a a a  a  dt x t x t x x a A  dx ? ? ?              (6)  The link impedance described in Formula (6) is consists of two parts: the first term, ( )  a a t x  is real impedance Agent expe-  rienced, while ( ) a a  a  a  dt x x dx  is the contribution of crowded im-  pedance produced by a unit of new traffic to existing traffic ona , also known as the externalities. So (6) is the marginal impedance. Assuming the link traffic is independent of each other, the marginal contribution is also the system marginal contribution, therefore:     ?? ( ) ( ) / a a a t x Z X x? ? ?  and then   ( ) [ ( ) ] ( )  a x  a  a a a a a A a A  dt w t w w dw x t x  dw? ? ? ?? ??               (7)  Formula (7) explains that if the link impedance is ? ( ) a a t x , then  the corresponding UE problem is turned to SO one. In this paper, we use the SO as flow control target for SON. Agents choose path to transfer packets with the strategy of marginal impedance minimum, therefore the system will tend to SO.

When the network has no congestion, SO and UE have the same result, and the routing strategy of Agent is equivalent to UE, that is, users are presumed to use the selfish routing strategy. While the network congestion aggravates, the ex- ternality of marginal impedance acts. At this time, avoiding congestion will became the main aim of the optimization.

The SON system optimization model is expressed as (P3).

(P3)             ? ?min ( ) ( ) a a a  a A  Z X x t x ?  ? ?                        (8)  . .s t   (2)~(4)  We transform model (P3) to the UE problem by using formula (7). According to the UE principle, if all the Agents choose (6) as their routing strategy, the system will tend to equilibrium and achieve UE state in the sense of marginal impedance.

B. Impedance In this paper, we use delay as impedance. The link imped-  ance a d  is defined as (9):   1 /  a  a  a a  t d  x B  ? ?    (9)  Where, 0 a t  is the impedance of network in the spare time,  called free impedance, a B  is effective bandwidth of link,a  is  coefficient, a x  is the load on the link a . Its marginal imped-  ance is:  a  a a  a a  B  B d  x l ?    (10)  In order to avoid exhaustive all the paths, a recursive weighted path impedance is defined as (11).

j  ( , , ) ( , ) ( , , ) i i j i j  L r s v l r v h L v s v? ??                       (11)  Where r is a virtual node of SON located between OD pair rs . If the set of all possible next hop nodes from r to s is  ( , )N r s . To ( , ) i v N r s? ? , ( , )  i r v  is a virtual link connecting  r to i v , and {( , ) | ( , )}i  i r v v N r s?  expresses the set of the vir-  tual links.

j v  is the again hop of  i v .The impedance on the  path from node r to s via i v , ( , , )  i L r s v is defined as the imped-  ance of ( , ) i  r v adding the weighted impedance of paths from  i v to  j v .

Because latency on the path has large variance, so the dif- ference is used approximately as the derivative of impedance of a path, and so the path impedance of marginal is expressed as (12):  ' ( , )  ( , , ) ( , ) ( , ) ( , )  i  j i  i i  B r v L r s v d r v  B r v x r v ? ?      [ ( , , ) ( , ) ( , , )] j i j i j i j  j  h E v s v x v s h L v s v??               (11)  Where, ( , , ) i j  E v s v is the difference of impedance from i v to  s.

So, we get conclusion 1: To arbitrary node of SON, if each agent calculates the impedance with the formula (12) periodi- cally, and chooses the path with least impedance to transmit packets, then the system will tend to approximate optimiza-  tion.

C. Elastic load balance model According to first principle of Wardrop, if the estimation  to impedance by agent is very accurate, when traffic is small, the load distribution of network will concentrated at some paths with less impedance. Along with the increase of the traffic, impedance will increase gradually; range of load dis- tribution will be enlarged.

If the impedance estimated by agent has some error, accord- ing to SUE, the estimated impedance is expressed the sum of actual impedance and random error term:  , , ,k k k rs rs rs rs C c r R s S k P?? ? ? ? ?                      (12)  Where, k rs C  and k  rs c  is estimated impedance and actual im-  pedance of path k  between OD rs  respectively. k rs  ?  is corres- ponding error term. The probability of the path selected based on Logit model is as formula (14):      [ . ]exp  exp[ . ] n  k  rs k  k  k rs  rs  C  C  p ?  ? ?    ?   ? (13)  Where ?  is a parameter. When ? ?  , the variance of all random items tends to zero, SUE turns into UE, and when 0? ? , the probability of selection every path is the same, equal to 1 n . The traffic on path k  is expressed as (15):  ,k k rs rs rs f q p?  r?R, s?S, k?Prs                    (14)  According to this principle, if controlling the ? , we could control the level of load balance. When we increase the value of ? , the impedance of a path will plays the main role to routing decision, and contrarily, when we reduce the value of ? , the role of impedance for routing decision will be reduced.

Let (16) be the weight of formula (11).

exp[ . ( , , )]  exp[ . ( , , )]  i j  j  i j  k  L v t v h  L v t v  ?  ?    ?   ? (15)  In which, 1 j  j  h ?? . ? is called balance factor. When  0? ? , 1 / j h n? . That is to say, the influence of each  weighted section path exerting on the total path impedance  i r v s? ?  is the same. It is approximate average impedance, thus the traffic will naturally distribute on broader range of paths. When ? ? , the weight of the path m with the min- imum impedance 1  m h ? , while all other paths  0, k  k mh ?? .It shows that impedance of the part- pathm has absolutely influence to the impedance of the whole path. Thus, the traffic will only distribute in the path with the minimum impedance. Obviously, the value ?  can be used as a control factor of the level of traffic distribution, controlling the range of network load balance, and also controlling the influence of impedance on traffic distribution. This method has double meanings: First, let ?  be large enough, UE prin- ciple plays the leading role. At lower traffic, the traffic will focus on some paths with little impedance. Along with traffic increases, the impedance of these paths will increase. The flow will distribute to more paths to reduce impedance until balanced. At that time, the impedance of all paths has little difference, so the adaptability to the status of the network and load balance will be naturally established. Second, we can influence the level of load balance by controlling the ? value: when ?  is very small, the flow will be distributed averagely, and the efficiency of network will be improved. So, we can control the effect and range of load balance by controlling ? .

Conclusion 2. Using (16) as the weight to calculate imped- ance of paths has: (1) the system will tend to stochastic user  equilibrium in the sense of marginal impedance, called ran- dom system optimization, and (2) the ?  can influence the range and level of the load balance. Therefore, we use ?  as parameter of load balance controller.



IV. ALGORITHM We designed DyGo(Elasticity Load balance traffic  Grooming) algorithm running on virtual nodes of SON. As- sume that basic routing algorithms have been already set up in IP level, such as OSPF. DyGo will not intervene in the basic routing algorithm. The main algorithm is described as follows:   ALGORITHM MainLoop of the DyGo in node r  Initialize an empty message table M0,C0 Initialize ( , )A v s '( , )A v s  FOR every destination node d  in the routing table  DO FOR all next-hop nodes ( , )v N r d?  DO  Measure available bandwidth on r v? ( , )B r v Measure rate of r v?  ( , )u r v  ( , )0( , ) 1 ( , )/ ( , ) t r v  d r v u r v B r v ??  ? ?  ( , ) ( , ) (1 ) ( , )d r v d r v d r v? ?+ ?? ( , )( , ) ( , )  ( , ) ( , ) B r vl r v d r v  B r v u r v ?  ?   ( , , ) ( , ) ( , )L r d v l r v A v d+ END FOR  ( , )  exp[ ( , , )] exp[ ( , , )]  j  v j  v N r t  L r d vh L r d v  ? ?  ?  ? ??    ( , )  ( , ) ( , , ) jz  v N r t A r d h L r d v  ? ?  Append ( { } { }, ( , , ) | ( , ) , ( , ), | ( , )vs L r d v v N r d A r d h v N r d? ? ) to 0M Append ( { }( , , ), ( , , ) | ( , )e r d v d r d v v N r d?  to 0C  END FOR Send 0M , 0C  to all  neighbors v  who store it in 1M  and 1C   The algorithm is set in each virtual node and activated at the  end of each information distribution period. The following variables and parameters are also need to be reserved. (( , )r v refers to linkr v? ) : M : Impedance information sheet, including path impedance (.),L h  and weighted sum (.)A , C : Node information sheet, including cost impedance (.)e and delay impedance (.)d ,  ( , ) i d r v? : Link impedance in the period i ,  ( , ) i d r v : Estimated impedance of link in the period i , ( , )x r v : Rate in the link, ( , )l r v : Delay in the link, ( , )B r v : The effective bandwidth of link,  ( , , ) i j  E v t v : Impedance difference of path, ? : 1? ? , 1.12 in the experiment, ? : 0 1?? ? , 0.78 in the experiment;     ? : It is a small real number, in order to avoid algorithm error when the flow is close to capacity.



V.  SIMULATION We use NS2 and Linux 2.6.27 to simulate the DyGo algo-  rithm and obtain the results reported in this paper. The OSPF protocol is set in IP layer with hop count as balance parame- ter. Experimental data is collected from 50s, setting 0t ? as start. Packets are exchanged by UDP among the virtual nodes.

Experiment 1. The experiment tests the influence on load distribution from the increase of traffic. There are 25 virtual nodes in the SON, in which the number of ingress (egress) is 4, and the number of internal node is 21. The nodes are all connected each other. We assume that the capacity of each link is 1M bytes. Two ingresses (egresses) are connected two groups of data resource and user groups respectively. The data resource generates continually random CBR flow to the net- work. When the experiment starts, every ingress node is con- nected to 10 data sources, and after that, in every 50ms, a data source is added to the ingresses. In a control period, the traffic tends to equilibrium. In the experiment we observe the influ- ence of load distribution from the increase of flow. In theory, when ? ?   SUE turns to UE, however in many experi- ments, we find that when 5? ? , the influence of random dis- tribution aroused by error term is very small. It is similar to results of UE, therefore, 5? ?  is taken as selfish routing in the experiment. Similarly, when 0.5? ?  , load tends to aver- age distribution. However, we found that when 1? ? , the average delay of network can significantly increase. On bal- ance, 1? ? is taken as loose routing strategy. The experimen- tal results are shown in figure 1: ?NoControl? indicates no flow control on overlay layer. Four minimal hop paths are chosen by the IP layer routing. The distribution does not change when increasing traffic. When 1? ? , the range of load distributed is the widest. When 5? ? , the load distribu- tion is the most sensitive for increasing flow. The experiments illustrate that DyGo makes load distribution adaptive to traffic changing better.

Fig. 1. Load distribution for traffic increasing  Experiment 2. In the experiment, we test performance of the algorithm by observing the average throughput of network.

The bottom topological structure contains 100 nodes. We choose virtual nodes from the 100 nodes in 15% probability.

All virtual nodes are full connection each other and 5% the connection between the nodes are deleted randomly. The number of ingress (egress) is 4. The ingress nodes import CBR flows continuously. The simulation results are shown in figure 2. The measuring cycle T is 50s. It can be easily seen from fig.2 that when 0.1? ?  and 1? ? , the average through- put of TCP is higher than that without DyGo(No Control).

The experiment also showed that 1? ?  is a more suitable choice when trading off the average delay and throughput.

Fig. 2. Throughputs with different parameter  Experiment 3. The experiment tests the effect of load balance when the changes of demand are beyond expectation. When real-time traffic deviate expected demand, the performance of network could be deteriorated with static traffic engineering algorithm. In order to solve this problem, an improved OSPF- TE, called OSPF-TE-Multi algorithm[12], divides the control periods into the peak, slack period and so on, and distributes load according the weights of every period. For the purpose of testing the dynamic adaptive of the algorithm, we performed the comparative experiment on the response to the change of traffic demand among the algorithm proposed in this paper, the OSPF-TE and OSPF-TE-Multi algorithm. The experiment adopts CAIS[13] topological structure and sliding window flow prediction method to measure flow demand. The result is shown as figure 3. The x axis represents deviation value. For example, the deviation value 1.5 stands for that actual traffic is selected randomly within 50% of the range of the predic- tion. We test the performance of load balance of above three algorithms with deviated traffic demand environment so as to compare the dynamic adaptability of the algorithm. The opti- mization goal is link utilization maximize. There are 44 pe- riods in the experiment. In figure 3, OSPF-TE and OSPF-TE- Multi mean that IP layer was set OSPF-TE and OSPF-TE- Multi protocol respectively with utilization as parameter and no flow controlling in covering level. The DyGo means that physical layer was set OSPF protocol with hop number as parameter, DyGo algorithm in covering layer and 1as equili- brium coefficient. The results show that when the predicted deviation increases, the performance of the covering layer that implemented the algorithm of this paper is the best, the per- formance of OSPF-TE is the lowest, and the performance of OSPF-TE-Multi protocol is better than that of OSPF-TE. It        0 20 40 60 80 100 120 140 160 180  ?=1 NoControl ?=0.1           0 50 100150200250300350400450  N um  be r o  f p at  hs d  is tri  bu te  d   flo w  s  Number  of data source  ?=5 ?=1 NoControl     indicates that DyGo algorithm has better function of load balance as traffic beyond expect demand.

Fig3. The change of maximum link utilization when demand that beyond expectation

VI. CONCLUSION We investigate a promising approach for flexible traffic engi- neering in a changing environment for service overlay net- work. A flow grooming algorithm DyGo is presented. We evaluate the performance of DyGo by simulation. The expe- rimental study shows that DyGo can obtain excellent load balance adaptively with network status. And also, we can control the range and degree of load distribution by control the value of equilibrium coefficient ? .

ACKNOWLEDGEMENTS The paper was supported by national natural science founda-  tion of China (61170038) and Shandong province natural science foundation of China (ZR2012FM013).

Qiao hong(e-mail: qiaohongsd@126.com) and Yang Shou- bao (e-mail: syang@ ustc.edu.cn)  are  corresponding authors.

