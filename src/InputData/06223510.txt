

Abstract?It is the basic way to enhance service ability to predict customer behavior in the process of E-commerce activities.

Through applying temporal description logic (TL-ALCF) in describing the rules of time-dependent customer behavior change, this article puts forward a method in acquiring algorithms through improving the temporal correlated rules of the FP-tree(frequent pattern tree) , and further constructs a model with high reasoning capacity being used in tracking customers? behavior. This model adopts the LFE-method (learning from examples) in obtaining rules dynamically from the sample behavior database, building up the database of behavior rules, and finally designing a reasoning engine functioning under the obtained rule sets.

Keywords-TL-ALCF, characteristic function, reasoning, FP- tree,the minimum support

I.  INTRODUCTION In the late 20th century, with the world-wide rapid develop-  ment of IT industry represented by computer information technology and network technique, e-commerce, as a representative model of new economic forms, has brought about tremendous impacts and changes to the management and administration of businesses, thus human society has entered into the era of e-commerce from that of industry economy.

Under e-commerce environment, the customer?s role has been transformed as a website visitor who performs or will perform purchase behaviors. Consequently, the effective way in improving e-commerce service ability is to conduct a series of data analysis from a large number of customer behaviors, to seek the implicative related patterns of customer behaviors, and then to carry on predication and assessment. However, the unavoidable problem is that, cyberspace cannot offer us a chance to identify the customer, to make a definite orientation, or even to predict the coming transaction behavior. All along, the interactions between the customers and website are always recorded in the log, and the log system cannot be interpreted by the computer, therefore, a tracking mechanism is needed to make sure that the computer can interpret the log record system, then through analyzing the recorded customer behaviors, to make an effective forecast of customers? behavior on the premise of a clear understanding of the conditional factors.

So far, there is not a molded trace mechanism used in describing behaviors of e-commerce. In order to facilitate the computer to understand user behavior trajectory, RDD (Rights Data Dictionary) is implemented into MPEG-21(Moving Pictures Experts Group) to regulate the semantic description of user actions, to provide semantic mapping for the competence of different linguistic forms used in different descriptions of user actions[1]. But a fly in the ointment is that this is only a static description of user actions. Gunteretal[2] thinks that user's behavior should be a series of actions tracing along a time axis, only one action occurs at one time, the action sequence on the time trajectory is represented by program semantics. While the numerous features of description logic can sufficiently represent the actions together with their static inter-relationships in the static region, the temporal relation of user actions can be expressed through the expanded temporal aspect of description logic.

According to the ideas mentioned above, in this article, TL (used to express temporal relation of time intervals) and ALCF (used to express the features of static information) are combined as TL-ALCF (temporal descriptive logic), which can be used to describe the rules of temporal customer action changes, to describe the customer behavior locus in process of e-commerce activities through formalized logical method, meanwhile, the computer is facilitated to interpret customer actions, to analyze and forecast the potential customer actions.



II. TEMPORAL DESCRIPTION LOGIC SYSTEM AND RELATED THEORY  Description Logic (DL)[3] is the object-based formalization of knowledge representation; it is a decidable subset of first- order predicate logic. The difference lies in that the DL system can provide decidable reasoning services?with its significant characteristics of strong decidability and expressive capacities to guarantee reasoning algorithm stopping and returning to the correct result. However, the deficiency of DL lies in that it can only be used in describing the static world but not sufficiently present the time-sequences of user?s behavior. That?s why temporal factors should be imbedded into DL system to describe users? time-dependent behaviors.

Time-based points and intervals should be included to describe concepts in the time-related reasoning process.

Temporal description logic based on time points is usually combined with temporal logic[4] , through which temporal concepts can be expressed by using the operators and semantics of temporal logic. Temporal concept based on time intervals adopts the modal logic of setting temporal interval constraints, such as HS[5]; it is undecidable when used to meet all expressive capacities.

A. Temporal description logic system based on time points The most fundamental capacity in describing time is to  express the past and future. Temporal description logic based on time point always adopts the logical representation of modal logic with the introduction of temporal logic operators to enable the combination of description logic and temporal logic.

Introduce a symbol ?+ (Existential Future) to express an accessible relationship at a certain point of future time, that is, the set of objects satisfying the conditions at a certain future time point. Similarly, for the past time, another symbol ?-  (Existential Past) can be introduced.

Introduce a  symbol ?+ (Universal  Future) ,  defined  as ??+ ? , that is, the set of objects satisfying the conditions at any future time point. Similarly, there is ?-  (Universal Past).

To express a more accurate concept of time, U (until) and S (since) is introduced. C U D means satisfying C till satisfying D. Similarly, introducing S to stand for the past similar operators, C S D to stand for satisfying D from a certain point of time in the past till satisfying C at present.

B. Temporal description logic system based on time intervals In most expression modes based on time points, time is  supposed to be discrete. The expression is interpreted at each point of time, but what happened between the time points can not be expressed. However, temporal description logic system based on time intervals can help to fulfill the task through regarding time intervals as the study object.

This can be interpreted as the expansion of temporal description logic system based on time points, just replacing the time point t  with the time interval >< ts, , here >< ts, stands for a closed interval, including all the points between s and t . There?s only one hypothesis to time point in such a temporal logic: the subset of time points between every two points of time is in good order, thus time-related events can be described by temporal description logic system based on time intervals, whether it is linear or bifurcate, continuous or discrete, bounded or unbounded.

The relationship between two time points is very simple, only before and after. When considering time intervals, things become more complex, the relationship between two intervals can be described by expressions such as before, meets, during, overlaps, starts, finishes, equal, after, met-by, contains, overlapped-by, started-by, finished-by, etc., generally being summarized as 12 types except for similar ones. Six modal operators are introduced with ><starts  >< finishes >< meets and their transposes >?< bystarted >?< byfinished >?< bymeet .

Operator semantics: >< start ?  is true in the interval >< ts, , if the interval?  is true in )(, '' ttts <>< , the expression is interpreted as the collection of all intervals which makes sure that the expression is true.

The true value of an expression in one interval and its relationship with the true value at a certain part of this interval can be described as follows: If at the beginning it is true, then it is true in the whole interval; only if it is true at every sub- interval, it is can be true in the whole interval.

The decidable temporal descriptive logic TL-ALCF (the combination of TL and ALCF) is applied to describe time- related concepts. This concept expression is interpreted as the dual group >< ai, composed by the time interval and the individual, the relationship is interpreted as >< bai ,, .



III. THE CUSTOMER?S BEHAVIOR DESCRIPTION MODEL BASED ON TEMPORAL DESCRIPTION LOGIC  Activities of E-commerce customer?s behavior not only include the basic properties of their behavior and the in- between static constraints, but also involve the temporal relationships between these activities in the process of consumption. Therefore, both the static features and temporal sequence association should be included in describing customer?s behaviors. In addition, in order to track the transaction process to predict the possible behavior and judge its rationality, the semantics of customer?s behavior in the consuming activities must be precisely described.

The sequence of customer behavior mainly refers to the series of activities performed by e-commerce customers in purchasing process, while the description of the behavioral sequence is composed of two parts: the internal characteristics of the activity itself and the static relationship between activities which are combined as the static characteristics; the temporal characteristics between activities which is called temporal relations, assuming that activities in the behavior sequence function on the same timeline and being associated by temporal relations. Therefore, the user behavior describing model we established is composed by the static model of user behavior as well as the temporal model of user behavior.

A. The static model and temporal model of customer behaviors The static model of customer behavior is based on DL  (description logic). DL is a decidable subset of the first-order logic, with its basic idea focused on static concepts and relations. The advantage of DL is its strong decidable expressive capacity which can always guarantee a suitable inference algorithm, conducing to describe the static characteristics of behaviors, to deduce the static relations between activities in polynomial time. Therefore, DL is the most suitable method which can be used in portraying the static characteristics of customer behavior including the concepts and relations of customer behavior.

In examining the consumption process, with the most fundamental description logic ALC[6] as its base, we introduce Feature function ALCF[7] to describe the static characteristics of customer behavior, resorting to the logical operator used to describe atomic concepts and relationships to describe the complex structures and relationships.

The static model of customer behavior is to reflect the static characteristics of customer behavior in process e-commerce activities. This model is based on Action (behavior) as the core concept, and Action, with the three concepts Principal (main), Object (object), and Act (action) involved together to describe the static information. Here Principal is the concept of executive subject, Object is the concept of action object, Act is the concept of action performed, each concept can be derived separately by subClassOf relationship. Performing one act includes the main action and the role of its corresponding subject and object. Therefore, Action is associated with the concepts Principal?Act?Object respectively through the following relations as hasPrincipal ? hasAct ? hasObject.

Figure 1 shows an example of the static model: there are three attribute relations in the individual C of the concept Action including Principal, hasAct and hasObject, each of which correlated with concepts Principal ? Act and Object respectively. P stands for the individual of Principal, O stands for the individual of 0bject, Business is the sub-class of Act and X is the individual of Act, so C can be described by the three attribute values P, X, O respectively.

Figure 1.  Application of static model (Examples)  The introduction of the temporal model of behavior is primarily intended to track the temporal relations between customer behaviors, as for the temporal description of customer behaviors, the temporal relation between activities is expressed through the expansion of time sequence based on time intervals combined with the application of DL, and the temporal relation between activities is, in fact, the temporal relation between time intervals on which the behavior in based, even more, the time constraints between time intervals can help to precisely describe the time relations between time intervals. On this basis, the temporal relations between user?s activities can be described by temporal-related concepts, and then the multiple users? activities can be constructed as a sequence of user behaviors.

According to the description of customer behaviors in the E-commerce process, the time-consuming customer?s behavior must be described through introducing concepts of time intervals; as for the construction of time intervals, time points can be regarded as the basic elements to construct time intervals.

Thus, in Figure 2 the time series model of customer behavior, for each Action, the time factors of the Action are expressed by the concept of Interval: Interval is expressed by  ],[ 21 tt . One Action always occurs in a specific time interval, expressed as <Action,Interval>. TR stands for the temporal relation between time intervals, meet?start? finish?equal etc. are used here to embody the temporal relation between Actions. Such a temporal model can definitely explain the temporal characteristics of customer behavior as the combination by the time information Interval and the temporal relation R.

Figure 2.  the time sequence model of customer behaviors  B. The constructive rules of customer behavior sequence Based on the above model, the user behavior  sequence ? can be constructed in accordance with the following rules:  1) A pair <Action, Interval> stands for one user behavior sequence;  2) 1? , 2?  is a sequence of user behavior, then 1? 2? ( 1? , 2? be the orderly connection) is a sequence of  user actions; 3) If ?  is a sequence of user behavior, then i?  (the ith  connection of the of ? ) is the sequence of user behavior, which provides >=<? Interval,:0? ? ??? ii =+ :1 ? One ?  means zero act, and zero act contains an empty action,  Ni ? ;

IV. THE CUSTOMER BEHAVIOR TRACKING MODEL Behavior samples may continuously be generated in the  process of e-commerce transaction, and these samples are actually a set of special knowledge, with each behavior sample expressing the knowledge only applied to itself. Therefore, we should not only describe the knowledge expressed by each sample behavior, but also attempt to bring out a wider range of general knowledge from the knowledge gained from each sample behavior, and such knowledge is what we need which can be summarized as the rules of conduct, it should express as much as possible the habit of consumers in the e-commerce transaction process.

Under normal circumstances, the task of tracking customer behavior is fulfilled through the voucher of activities provided by the behavior track record. User activities are recorded by the tracking mechanism, here user activities refer to the user?s repeated interactive conversations in the transaction process, and tracks of user behavior are recorded in the log file or database. The customer behavior reasoning engine will  Action  Interval Interval  Action  TR  hasInterval hasInterval  1 1   * *  TR?Temporal Relation  Do Action Act Business  Principal  Object  Sale  Buy  P  O  C  X  instanceOf  instanceOf  instanceOf  instanceOf    subClassOf  subClassOf  subClassOf subClassOf  hasAct hasObject  hasPrincipal     recommend users reasonably using specific resources to achieve their goals.

Customer behavior inference is realized through inductively studying the behavior rules to acquire strategies. Such strategies function through using the inductive learning approach to summarize the rules of customer behavior from a historical record of user activities, then designing a reasoning mechanism to match the activities of the current actual customers and the established customer behavior rules, and deducing out the most likely behavior that would occur next. In deducing and predicting the customer behavior, dynamic adjustment is fulfilled by the reasoning engine according to the constantly occurring activities of the customers.

A. The Acquisition of temporal association rules based on IFP-tree The FP-tree is the abbreviated form of Frequent Pattern  tree, is a typical algorithm to calculate association rules based on DFS(Depth-First-Search) method, with its superior performance and good expansibility. The basic idea of FP-tree algorithm is: decomposing the data and mining the task as small ones. First the database which provides frequent item sets will be compacted into a FP-tree, but still retaining the associated information of the item sets; then one of the compressed database will be divided into a set of databases of conditions, each associated with a frequent item; and then mining the databases one by one. This can highly condense the compressed database, and at the same time to ensure the complete mining of frequent sets, avoiding the costly database scanning. The only fly in the ointment is when min_sup(the minimum support) changes, the FP-tree will meet with problems in updating the time association rules of the current behavior sample library, consequently a highly-updated efficient algorithm based on FP Tree is needed, which is named as IFP(Improved FP tree).

The basic idea of IFP algorithm is: if the previous min_sup is s , the new min_sup is 's , when min_sup changes, there will be two situations as follows:  1) ss >' , some of the original sequences of frequent behaviors can not meet the new min_sup 's , thus have to be deleted.

2) ss <' , some of the original sequences of non-frequent behaviors can meet the new min_sup 's , thus should be added to the set of frequent behaviors.

Firstly, the temporal association rules of FP tree are used to calculate the degree of support of each behavior (Action ID) in the sample library, behaviors which can not meet min_sup s will be put into the Non-Frequent Action Set( NFASL ), while behaviors which can meet min_sup s  will be put into Maximum Frequent Action Set( MFASL ).Secondly, build IFP trees for all behaviors in the database to meet min_sup s , the node path of which is all the demanded association rules called Frequent Action Association Rule. However, when min_sup changes, changes may occur to NFASL  and MFASL , that is, the  original non-frequent behavior sequence may become frequent behavior sequence, and vice versa.

From the analysis above, the current frequent behavior sequence A may become a non-frequent behavior sequence due to the changes of s , and the current non-frequent behavior sequence A may also become a frequent behavior sequence.

Therefore, we can not remove A completely just because support (A) < s . To solve this problem?we can add a delete flag to the original FP tree to indicate whether the node is a frequent behavior sequence.

Based on mining temporal association rules, with trade- space-for-time as the dominant idea, data-mining FP-tree algorithm as its base, the IFP algorithm can help to select from the acquired information according the changes of min_sup.

Property 1: If X  is a set of frequent behaviors, then any subset of X  is a frequent behavior set, and any frequent behavior set is a subset of MFASL .

Property 2: If Behavioral sequence set  >=< ? mm xxxxX ,,...,, 121 , if ji xx ,? , and ji < , that is,  ix  happens before jx , then ix  in the corresponding path to the sequence X  in the ITP is the child node of jx , and  )()( ji xSupportxSupport ? .

Property 3: If the behavior NFASL?? , then ?  can not be a behavior in the temporal relation, if the behavior MFASL?? , then ?  may become a behavior in the temporal relation.

Suppose D  is a candidate for any acts of the most maximum frequent association rule sets, X  is the number of actions to support library D , and D  contains the number of X 's behavior sequences. From the constructive theory of FP-  tree, the rules in X  can be mapped onto only one definite path of the FP-tree, thus the support number of X  in  D  can be interpreted as the number of paths containing X  in the FP- tree.

B. The customer behavior tracking model with the reasoning capacities The learning-based customer behavior tracking model in e-  commerce is based on the static and temporal description of customer behaviors, resorting to the learning-from-example method to acquire rules from the behavior example library to form the behavior rule data, and then designing out a reasoning engine which is capable to perform reasoning according the rules. The significant role of it is to specify what rules can be followed in predicting the coming behavior, that is, how to use rules. Generally, three steps are followed from selecting rules to predicting behaviors:  Step1. Match the dynamically increased behavior samples in the sample library with the rules in the rule library;     Step2. When there is more than one rule that matches the current behavior, deal with the conflicts;  Step3. Conduct forecast according to the behavior sequence of the rules, and dynamically modify the rule base.

Figure 3.  Customer behavior tracking model with reasoning capacities  In Figure 3, the arrow indicates the direction of the information flow; the part of a is the information source of the behavior sample database, which can provide information of customer behavior for systematic study:  The reasoning engine together with the rule acquiring process are in fact categorized as the learning institution of the tracking system, the user?s usage information is acquired through scanning the behavior sample database, then mining the rules and further documenting these rules into the rule base.

While the rule base is used to store the knowledge gained from study, the reasoning engine is responsible for regulating the rule base to make it easy to perform the task of both reasoning and maintaining. To get newly-added behavior examples from the behavior sample base, and finally to get the predicting results through actions of rule matching and conflict solving, all this makes it necessary for the reasoning engine to perform timely incremental updates to the rule base.



V. CONCLUSION In E-commerce activities, it is very important to analyze  and predict customer?s behaviors especially in formulating business policy and making operating decisions. The immediate problem for current E-business is how to explore  and search for the potential consuming habits, to do intelligent reasoning to customer behaviors through the utilization information technology. Due to the virtual space of internet, it is difficult to indentify and analyze the customer?s behavior, thus we need a tracking engine to enable the computer to interpret the record of behaviors, through studying the record to fulfill conditional inference and prediction.

In this paper, through the use of TL-ALCF to describe the customer behavior rules conditioned by temporal changes, the author tries to construct both the static model and the temporal model of customer behavior sequences, with this as the basis, puts forward the constructive rules of the customer behavior sequence, and further designing out the customer behavior tracking model with its strong reasoning capacities. This model utilizes the customer behavior rules obtained from inductive learning approach (that is, the temporal association rules of IFP tree), obtaining customer behavior rules from the historical record of user behaviors, matching and reasoning these rules, and finally performing dynamic adjustment to the reasoning engine according to the changes in customer behaviors.

