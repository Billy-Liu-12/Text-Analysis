Using Divide-and-Conquer GA Strategy in Fuzzy Data Mining

Abstract to derive a predefined number of membership functions for getting a maximum profit within an interval of user specified minimum support values.

induce association rules from transaction data. In [4], we proposed a mining approach that Transactions in real-world applications, however, . integrated fuzzy-set concepts with the apriori mining usually consist of quantitative values. This paper thus algorithm [l] to find interesting itemsets and fuzzy proposes a fuzzy data-mining algorithm for fxtracting association rules in transaction data with quantitative both association rules and membership functions from values. In that paper, the membership functions were quantitative transactions. A GA-based framework for assumed to be known in advance. The given finding membership functions suitable for mining membership functions may, however, have a critical problems i s  proposed. The fitness of each set of influence on the final mining results. This paper thus membership functions is evaluated using the fuzzy- modifies the previous algorithm and proposes a new supports of the linguistic terms in the large I-itemsets fuzzy data-mining algorithm for extracting both and the suitability of the derived membership functions. association rules and membership functions from The proposed framework .thus maintains multiple quantitative transactions. The proposed algorithm can populations of membership functions, with one dynamically adapt membership functions by genetic population for one item's membership functions. The algorithms and uses them to fizzify the quantitative final best set of membership functions gathered from transactions. Our previous fuzzy mining approach [5] all the populations is used to effectively mine fuzzy can thus be easily used to find fuzzy association rules.

association rules.

Data mining is most commonly used in attempts to  . 1  2. A GA-based mining framework 1. Introduction  In this section, the fuzzy and CA concepts are used Data mining is most commonly used in attempts to to discover both useful association rules and suitable  induce association rules from transaction data. Most membership functions from quantitative values. A GA- previous studies focused on binary valued transaction based framework for achieving this Purpose is data. Transaction data in real-world applications, proposed in Figure 1.

however, usually consist of quantitative values. The proposed framework is divided into two phases: Designing a sophisticated data-mining algorithm able mining membership functions and mining fuzzy to deal with various types of data presents a challenge association rules. Assume the number Of items is m. In to workers in this research field. the phase of mining membership functions, it  Srikant and Agrawal then proposed a mining maintainS m POpUlatiOnS Of membership fimctions, method [7] to handle quantitative transactions by with each Population for an item 4 (1 5 i 5 m>. Each partitioning the possible values of each attribute. Hong ChrOmosome in a Population represents a Possible set et al. proposed a fuzzy mining algorithm to mine fuzzy of membership functions for that item. The proposed rules from quantitative data [4]. Wang et al. used GAS shema then fmcodes the C h r O m m m m  in the Same to tune membership fUnctions for intrusion detection population into fixed-length real strings. It then systems based on similarity of association rules [ 101. Chooses appropriate strings for "mating", gradually Kaya et al. [6]  proposed a GA-based clustering method creating good offspring sets of membership fUnctions.

0-7803-8623-W04/$20.00 02004 I EEE 116  mailto:tphong@nuk.edu   I ............................ .... ..................

Minht Membrmhip Fvnclloni  ...

! .................

MhindFurWAsrorio  8.. .................................

Figure 1: The proposed GA-based framework for fuzzy mining  The offspring sets of membership functions then undergo recursive ?evolution? until a good set of membership functions has been obtained. Next, in the phase of mining fuzzy association rules, the sets of membership function for all the items are gathered together and used to mine the interesting rules from the given quantitative database. Our fuzzy mining algorithm proposed in [5] is adopted to achieve this purpose.

3 Chromosome representation  It is important to encode membership functions as string representation for GAS to be applied. Several possible encoding approaches have been described in [2, 8, 91. In this paper, each set of membership functions for an item is encoded as a chromosome and handled as an individual with real-number schema.

Assume the membership functions are triangular.

Three parameters are thus used to represent a  , membership function. Figure 2 shows an example for item 4, where Rjk denotes the membership function of the k-th linguistic term and r&, indicates the p-th parameter of fuzzy region R,k. . Membersh@h value 1 *  ...

?Ill ?112 ?121 ?IlJ ?122 ?111 ?]2J ? j 2  Quantiry  Figure 2: The set of membership functions for item 4  Each fuzzy region R.k has three parameters. The membership functions o#item ?j can be represented as  rj,, = m. Thus, a chromosome is encoded as a real- number string rather than a bit string. All the chromosomes in the same population have the same string length. Below, an example is given to demonstrate the process of encoding membership functions.

a string of rjllrj12rj13rj21rj22rj23 ... rj11r,12rj13, where  Example I :  Assume there are four items in a transaction database: milk, bread, cookies and beverage. Also assume a possible set of membership functions for Item milk is given as shown in Figure 3.

milk  Figure 3: An example of a possible set of membership functions for Item milk  There are three linguistic terms, Low, Middle, and High, for this item. According to the proposed encoding scheme, the chromosome for representing the set of membership functions in Figure 3 is encoded as shown in Figure 4.

/ M^F,ilk - 0, 5 ,  10, 7, 13, 16, 15, 18, CO  ? I l l  ?112? I I I  ? I 1 3  ?I22 ?121 ?I33 ? I32 ?I33 --- RI I RI 2 R I ,  Low Middle High Figure 4: The chromosome representation for the set of  membership functions in Figure 3  The membership function of Low for milk is encoded as (0, 5 ,  10) according to Figure 3. Similarly, the membership functions for Middle and High are respectively encoded as (7, 13, 16) and (15, 18, CO).

The chromosome is then the catenation of the three tuples.

According to the proposed representation, each chromosome will consist of 3*14l real numbers for Item 4, where 141 is the number of linguistic terms for 4.

Since the length is short, when compared with the     other approaches in witch each chromosome consists of the membership functions for all the items, the convergence of the solutions can be easily obtained.

This representation thus allows genetic operators to search for appropriate solutions quickly.

4. Mining membership functions and fuzzy association rules  4.1. Initial population  A genetic algorithm requires a population of feasible solutions to be initialized and updated during the evolution process. As mentioned above, each individual within the population is a set of triangular membership functions for a certain item. Each membership function corresponds to a linguistic term in the item. The initial set of chromosomes is randomly generated with some constraints of forming feasible membership functions.

4.2. Fitness and selection  In order to develop a good set of membership functions from an initial population, the genetic algorithm selects parent sets of membership functions with high fitness values for mating. An evaluation function is defined to qualify the derived sets of membership functions. The performance of membership function sets is then fed back to the genetic algorithm to control how the solution space is searched to promote the quality of the membership function sets. Before the fitness of each set of membership functions is formally described, several related terms are first explained below.

The overlap ratio of two membership functions Rjk and Rji (k < j )  is defined as the overlap length divided by the minimum of the right span of Rjk and the left span of Rji. That is,  overlap (R jk ,  R j i ) overlap-ra tio( Rjk , Rji ) =  min(cjk3-cjk2,cji2 - c j i l ) '  .

where overlap(Rjb RjJ is the overlap length of Rjk and  If the overlap length is larger than the minimum of the above two half spans, then these two membership functions are thought of as a little redundant.

Appropriate punishment must then be considered in this case. Thus, the overlap factor of the membership functions for an item Ij in the chromosome Cq is defined as:  Rji.

overlupfhctor(C,) =  The coverage ratio of membership functions for an item 4 is defined as the coverage range of the functions divided by the maximum quantity of that item in the transactions. The more the coverage ratio is, the better the derived membership functions are. Thus, the coverage factor of the membership functions for an item 4 in the chromosome Ci is defined as:  runge(Rj1, ..., R J )  '  m 4 I j )  coverage fuc tor (Cq)  =  where runge(Rj,, Rj2, ..., Rj,) is the coverage range of the membership functions, 1 is the number of membership functions for 4, and mux(Ij) is the maximum quantity of 4 in the transactions.

The suitability of the set of membership functions in a chromosome C, is thus defined as:  suitubility(C,) = overlap- fuctor(C,) + coverage-fuctor(C,) .

The fitness value of a chromosome C, is then  defined as:  Cfuzzy - s u p p o r w  where LI is the set of large I-itemsets obtained by using the set of membership fbnctions in C,, and fuzzy-support(l is the fuzzy support of the 1-itemset X from the given transaction database.

The suitability factor used in the fitness function can reduce the occurrence of the two bad kinds of membership functions shown in Figure 5, where the first one is too redundant, and the second one is too separate.

(a) Redundant membership functions (b) Separate membership functions  Figure 5:  Two bad sets of membership functions     The overlap factor in suitable(C4 is designed for avoiding the first bad case, and the coverage factor is for the second one. Below, an example is given to illustrate the above idea.

Example 2: Continuing from Example 1, assume max(I,) = 13. The suitability of the chromosome C1 for item milk is calculated as follows:  Suitability(CI) =  max(Ij)  = 0 + 0 + 0 + 1 = 1.

Besides, using the fuzzy-supports of the linguistic terms in the large 1-itemsets can achieve a trade-off between execution time and rule interestingness.

Usually, a linguistic term of an item with a larger  where the parameter d is either a constant or a variable whose value depends on the age of the population. The best two chromosomes of the four candidates are then chosen as the offspring.

The one-point mutation operator will create a new fuzzy membership function by adding a random value E (may be negative) to one parameter of an existing linguistic term, say Rjk. Assume that rjkp represents a parameter of Rjk. The parameter of the newly derived membership function may be changed to rjkp + E by the mutation operation. Mutation at a parameter of a fuzzy membership function may, however, disrupt the order of the resulting fuzzy membership functions. These fuzzy membership functions then need rearrangement according to their values. An example is given below to demonstrate the mutation operation.

fuzzy-support 2 the 1-itemsets will usually result in-& . 6 .

Example 3: Continuing from Example 1, assume the mutation point is set at c122 and the random value E is set at 4. The mutation process is shown in Figure  appearance in itemsets of more items with a higher probability, which will thus usually imply more interesting association rules. The evaluatiod by the fuzzy supports in 1-itemsets is, however, faster than that by considering all itemsets or interesting association fules.

4.3. Genetic operators  Genetic operators are very important to the success of specific GA applications. Two genetic operators, the ma-min-arithmetical (MMA) crossover proposed in [3] and the one-point mutation, are used in the genetic fuzzy mining framework. Assume there are two parent c h m t " n e s  c: = (c,,, ......) C h ,  ......, cz) and c; = <c;, ......, c;, ......) cz) . The mm-min- arithmetical (MMA) crossover operator will generate the following four candidate chromosomes from them.

I+l I+l 1. c;+I = (c;;', ..., Clh , ..., CIZ ),  2. cy = (c;, , ..., c;+hl, ..., CZZ ),  3. c;+l = (c:;', ..., c3, , ..., qz ) ,  where c:h+' = dc, + (1 - d)c), ,  where c:+hl = dc; + (1 - d)c, ,  where c::' = min {c, , c i  ] ,  f + l  I+l I + 1  / + I  I+I  f + l  4. cy' = ( c4 l  7 a . . )  C4h , ..., c 4 Z )  9  MFmi/k A  I - C, 0,5,10, 7,13,16, 15,18,m  Middle High  I  New 0,5, 10, 14, 17,16, 15, 18,m out of sequence  Rearrange i -  M F , i / k  1 New 0,5, 10, 14, 16,17, 15, 18,m  Figure 6: A mutation operation  5. The proposed mining algorithm  According to the above description, the proposed algorithm for mining both membership functions and fuzzy association rules is described below.

The proposed mining algorithm: INPUT: A body of n quantitative transaction data, a set  of m items, each with a number of predefined linguistic terms, a support threshold a, a confidence threshold h, and a population size P.

OUTPUT: A set of fuzzy association rules with its  STEP 1: Randomly generate rn populations, each for an item; Each individual in a population  associated set of membership functions.

represents a possible set of membership functions for that items.

STEP 2: Encode each set of membership functions into a string representation.

STEP 3: Calculate the fitness value of each chromosome in each population by the following substeps:  STEP 3.1 : For each transaction datum Di, i=l to n, and for each item b , j= l  to rn, transfer the quantitative value v?? into a fuzzy set f ; i )  represented as:  TI D  TI T2 T3  T4 T5 T6  using the corresponding membership functions represented by the chromosome, where R, is the k-th fuzzy region (term) of item 4, fjsi? is V? , s fuzzy membership value in region Rjk , and Z (= 141) is the number of linguistic terms for 4.

STEP 3.2: For each item region Rjk, calculate its scalar cardinality on the transactions as follows:  Items  (milk, 5); (bread, IO); (cookies, 7); (beverage, 7).

(milk, 7); (bread, 14); (cookies, 12).

(bread, 15); (cookies, 12); (beverage, IO).

(milk, 2); (bread, 5); (cookies, 5).

(bread, 9).

(milk, 13); (beverage, 12).

n  countjk = Cf;;) .

i=l  STEP 3.3: For each Rjk, 1 I j _< rn and 12 k I I I j  1, check whether its coun$kis larger than or equal to the minimum support threshold a. If Rjk satisfies the above condition, put it in the set of large 1-itemsets (L,). That is:  L, = {Rjk I counGk 2 a, 1 < i s m  and 1 < k < 141 ).

STEP 3.4: Set the fitness value of the chromosome  as the sum of the fuzzy supports (the scalar cardinalities / n )  of the fuzzy regions in L ,  divided by suitubiZity(C,).

That is:  Cfuzzy- suppor4X)  STEP 4: Execute crossover operations on each population.

STEP 5: Execute mutation operations on each population.

STEP 6:  Using the selection criteria to choose individuals in each population for the next generation.

STEP 7: If the termination criterion is not satisfied, go to Step 3; otherwise, do the next step.

STEP 8: Gather the sets of membership functions, each of which has the highest fitness value in its population.

The sets of the best membership functions gathered from each population are then used to mine fuzzy association rules from the given quantitative database.

Our fuzzy mining algorithm proposed in [5 ]  is then adopted to achieve this purpose.

6. An example  In this section, an example is given to illustrate the proposed mining algorithm. This is a simple example to show how the proposed algorithm can be used to mine membership functions and fuzzy association rules from quantitative data. Assume there are four items in a transaction database: milk, bread, cookies and beverage. The data set includes the six transactions shown in Table 1 .

Figure 7: The final set of membership functions     After the membership functions are derived, the fwzymining method proposed in [5] is then used to mine fuzzy association rules from the quantitative database.

7. Conclusion and future works  In this paper, we have proposed a GA-based fuzzy data-mining algorithm for extracting both association rules and membership functions from quantitative transactions. Since the fitness of each set of membership functions is evaluated by the fuzzy- supports of the linguistic terms in the large I-itemsets and the suitability of the derived membership functions, the derivation process can easily be done by the divide-and-conquer strategy. Our approach can reduce human experts? intervention during the mining process, thus saving much acquisition time. In the future, we will continuously attempt to enhance the GA-based mining framework for more complex problems.

