<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">SECOND IEEE

abstraction. Thus, we reduce the minimum support threshold through the lower level nodes because using a single support threshold may lead to many less interesting rules extracted together with the highly interesting ones if the threshold is rather low. However, keeping the threshold high will significantly reduce the number of rules classified as interesting.

Since dealing with multi-cross-level mining requires large itemsets to include nodes from more than one level and since each level has different minimum support threshold, the computation of support thresholds of such    threshold, the computation of support thresholds of such itemsets is more complex than those of non-cross-level itemsets. The support thresholds of cross-level itemsets are computed according to the following proposition.

Proposition 1: Let A ( A l , A z ,  ... A q )  be an itemset; by definition, items in an itemset cannot be ancestors or descendants of each other. The support threshold of itemset A is: din[FMinSup(A, ) ] ,  where FMinSup(Aj) is the minimum fuzzy support value of the level where A, is present.

1 4 111. FUZZY REPRESENTATION OF ITEM IMPORTANCE, MINIMUM SUPPORT AND MINIMUM CONFIDENCE The importance of an item is not only a vital measure of interestingness, but also a way to permit users to control the mining results by taking specific actions. So, it is more natural and intuitive for humans to deal with linguistic terms than discrete values. In other words, it is more flexible anp more understandable for human beings to handle the measures showing the importance of an item as linguistic terms. Motivated by this, we represent weights of items using fuzzy sets.

Shown in Figure 2 are membership functions of the fuzzy sets used to represent the weight of a given item.

According to Figure 2, membership hnctions have uniform structure and the weight of an item can take 5 different linguistic terms.

We also used linguistic terms to express? minimum support and minimum confidence, based on the same justification raised above about utilizing linguistic terms for the importance of items. Shown in Figure 3 are the membership functions used for minimum support; note that also membership functions for minimum confidence have the same trend shown in Figure 3.



IV. FUZZY WEIGHTING OF ITEMS AT MULTIPLE CONCEPT LEVELS For the approach proposed in this paper, we also realized the importance of assigning weights to items at multiple cross levels. Actually, the algorithms developed ear!ier to mine weighted association rules handle the single-concept level, i.e., only items appearing in transactions are weighted to find more specific knowledge. However, we argue that the need for specifying weight values may occur for classes or concepts at higher levels instead of actual items present in transactions. This is true because sometimes weighting internal nodes on a tree may be more meaninghl and enough, while another time it may be necessary to weight both an ancestor and descendant, As a result, we handle weighting at multiple levels based to the next proposition.

Proposition 2: Consider ni+l items, say x, and its descendants y,, y2, .... y,. While weighting nodes at multiple concept levels, three cases may be observed: I .  If only x is weighted, then all its descendants get the same weight as x.

2. If the weights of all descendants of x are prespecified, then the weight of x is computed as:  , where TotalCoun$, =cyy, , here ~ r o r a l c o u n t ? ,  .IV&gt;, /:I ws = 1-1 ToralCounr, n is the number oftransactions and vjV, is the amount of values from domain Di specified for descendant y,.

3. Ifthe weights ofx and ??I-1 of its descendants are given, then the weight of descendant y ,  is computed with respect to the given weights as: m-!

TolalCounl,.W, -c W,, ,.l w = Y. TolalCounl, Shown in Figure 4 is an example weighted taxonomy with 3-levels to illustrate how the proposed method weights relevant nodes. Weights of the nodes denoted by bold    relevant nodes. Weights of the nodes denoted by bold letters are prespecified, and weights of the others are computed. For instance, the weight of A is given as IV,, descendants C and D of A get its weights (Case I). Also, if weights o f E  and F are prespecified as W, and WF, then the weight of B is determined as W, (Case 2). Finally, afler weights of C and G are found as W, and W, , the weight of H i s  computed as W, (Case 3).

G FW, H'W, Fig. 4. An example of weightedtaxonomic smcture,

V. THE PROPOSED MULTI-CROSS-LEVEL FUZZY WEIGHTED The basics idea of the proposed approach is combining the advantages of fuzziness, multi-level taxonomy and weighted mining in order to extract more specific multi- cross level fuzzy weighted association rules. The algorithm developed for this purpose requires the following functions at different stages of the process.

Function Fin~ssociationRules( )( For each large witemset s with regions (sI,s2, .... s w ) , w 2 2 : Find weighted fuzzy association rules as follows { ASSOCIATION RULES MINING APPROACH - Form all possible association rules as; s , ~  ... s j . , ~ s j i l . . . s w ~ s j , j = l t o w .

- Compute the weighted confidence value FwConfn of each possible association rule R as; and w, = w,, (4 - If ( FWCorf8 2 FWMinConf) then keep rule R in the interesting rules set.

} IEndFor } 11 EndFunction Function Fir~~eig/ztedSupport(level number k)( For each item 1; (represents node j at level k) { - The fuzzy weight of 1: is either given beforehand or computed according to Proposition 2.

- All these fuzzy weights are transformed into a fuzzy set @': of weights using item importance membership hnctions given in Figure 2.

be the amount from 0, for the j-th group at level k, and for each encoded group name I: : transform the quantitative value V: into a fuzzy set f; - Let - Compute the fuzzy weighted support FWS,,~;~ of each and 1; is the fuzzy membership value of v$ in region $1 - For each region R;,: if (FWSup~,~FFK44inSup'), where is the fuzzy weighted set of the minimum support, then put R; in Lf , large I-itemsets at level k.

} /I EndFor  } I1 EndFunction Function CandidateSets(leve1 number k){ 1. Generate candidate set C,* from the itemsets Lf ,G ... L: to extract cross-level large itemsets. At least one region of each itemset in C: must be present in Lf and the other region may not be its ancestor in the taxonomy.

Also, two regions should not have the same item name.

All possible 2-itemsets are stored as C,* .

2. For each newly formed candidate 2-itemset s with region ( s , , s , ) i n  c,* ( - Find the weighted fuzzy set wf;, o f s  in each transaction datum 0, as; w/, = Min(WI, .J.,, ) -Compute the fuzzy weighted support FWSup, of j = l 2 w,, itemset s as; ~ m j , ~ ,  = L, where n is the number of transactions.

- If FWSup, ZMi?!(FrnjnSup' ) ,  where FWinSiip' is the fuzzy weighted set of minimum support of the level where si is present, then puts  in I,:.

level where si is present, then puts  in I,:.

E,=$ ) I1 EndFor } //EndFunction Algorithm FuzzyWeightedAssociationRules( ) Input: a set of n quantitative transaction data; four sets of membership functions: for item quantities, item importance, minimum support and minimum confidence, respectively; predefined taxonomy; a predefined set of linguistic minimum support threshold FFFMinStrp', which represents the fuzzy weighted set of minimum support at level k; and a predefined fuzzy minimum confidence threshold FWMinConf.

Output: a set of multi-cross-level fuzzy weighted association rules.

Steps: 1. Encode the predefined taxonomy using a sequence of numbers and the symbol "*", by following the method proposed by Han and Fu as desceibed in [17].

)) Group items with the same first k digits in each )) Execute R i q  Weig/ileds~rp~ort(k); )) If (e is null) then { k=k+ I ; CONTINUE; } )) Execute CandidoteSet(k); n -2; )) while ( ~1 # null) { 2. For k-1 to maximum nuniber of levels in taxonomy ( transaction datum 0,.

. Generate candidate set c;+] from L: as in Apriori; the only difference is that the different regions of the considered items must not have a hierarchical relationship in the taxonomy.

, For each constructed (r+l)-itemset s with regions - Find the weighted fuzzy set WAS ofs in each transaction datum Dj as; W/* = F ( W , ,  .f*,) (s13s2, ...A+ 1 )  in c;+] { l i l - Compute the fuzzy weighted support ~mup I of itemset s as; FFKS!,~, = (_I, where n is the number of transactions.

2 wf.

- If Fmup, 2 Min(FWMinSup'), then puts in &amp;.

} //EndFor . r=r+ 1 ; ] / /Endmile ,,e&gt; )) k=k+l; } l/EndFor 3. Execute Find4ssociationRules(); TABLEI FIVE EXAMPLE TRANSACTIONS TID Items I 5 (0, Q ( D . 5 ) (G. 4). W. 2). (0.4) (F, 5 ) (G. 31, (H. 4). m 5 ) .  F. 2) w. 51, (D, 7). (E, 1) (G, 2). @, 41, (E, 3). (F, 5 ) TABLE III GROUPED TRANSACTION DATA FOR LEVEL 1 TID 1temn 1 (I**, 10),(2", 5 ) 2 (I". 7). (2". 7) 3 (I**, 12). (Z", I ) 4 (1". 6). (2". 8) 5 (I**, 13) TABLE IV FUZZY WEIGHTS OF ALL ITEMS I1ems Fuzzy Weights A ~0.5.0.75. II    B ~o.z8.0.53.b.78).

c (0.5.0.75, I j D (0.5,0.75,1)' E (0. 0.25. 0.5) F i0:5,0. i5.  i j G (0.75, I ,  I ) H (0.11.0.36, 1).

TABLE V COUNTS OF FilZZY REGIONS OF ITEMS AT LEVEL I Items Counts I * * .LOW o+o+o+o+o=a I**.Middle 0+0.5+0+0.75+0=1.25 1 **.High 1+0.5+1+0.25+1=3.75 Z".LOW O+O+I+0+0=l.O 2**.Middle 1+0.5+0+0.25+0=1.75 2**.High 0+0.5+0+0.75+0=1.25 Tanl .~V1  ~ FUZZY WEIGHTED SUPPORTS OF ITEMS AT LEVEL I Items Funy Weighted Supports 1 .* T _.. m " m , ."".. I". ", ", 1 **.Middle (0.125,0.187. 0.25) ]**.High (0.375.0.562,0.750) 2*..LOW (0.056,0.106, 0.156) 2**.Middle (0.098.0.l8SS, 0.273) 2**.High (0.07,0.1325,0.195) P 4 IOW middle In the remainder of this section, we give a simple example to illustrate the weighted fuzzy association rules mining process described in this algorithm. Consider the predefined taxonomy shown in Figure 4 and the data set with the five transactions shown in Table I ,  where each item is represented as an ordered pair (item name, its quantitative value).

First, the items given in Table I are encoded as shown in Table 11. For instance, the terminal node G at Level 3 is represented by 1 1  1 ,  and the terminal node E at level 2 is encoded as 2 1.

Second, the counts of the items in the transactions are grouped level by level. For instance, as the items in transaction 1 are concerned, items (1 11, 4), (112, 2) and (12, 4) are'grouped into (I**, IO). Table 111 gives the results for all the items in Table I.

Third, the function Fuzzy WeighfedSupport is executed, where the fuzzy weight of each item at level kl to 3 is either given beforehand or found based on one of the given three cases enumerated in Section 4. For instance, known fuzzy weights of items A ,  E ,  F and G in Figure 4 are used to determine the fuzzy weights of the remaining items in the taxonomy structure; the results are reported in Table IV.

In this example, we assume that the fuzzy membership functions for item quantities are the same for all the levels.

These membership functions are shown in Figure V. Also, the scalar cardinality of each fuzzy region in the transactions is computed ,as the count value. For instance, for the fuzzy region ]**.high, the scalar cardinality is computed as (1+0.5+1+0.25+1)=3.75. The values computed for the other items are shown in Table V. Then, the fuzzy weighted support of each hzzy  region is calculated; and the results are shown in Table VI.

As mentioned before, we use a different fuzzy weighted set of minimum support for each level. This set is calculated as: FWiuSup' = FMinSup'.(Ihe graviw of I:"&lt;) where =A, here U is the total number of membership functions for item importance at level k and I , is the t-th membership function. Thus, If, represents the fuzzy average weight of all possible linguistic terms of importance.

In this example, we use (0.15,'0.18, 0.21) as the fuzzy sets of support threshold for level 1. The gravity of 1 6  for item weights shown in Figure 3 is calculated as 0.5. Thus, the fuzzy weighted sd of the minimum support is    the fuzzy weighted sd of the minimum support is computed as (0.15,0.18,0.21)~0.5=(0.075,0.090,0.10S0).

Finally, the fuzzy weighted support of each item in Table VI is compared with the fuzzy weighted minimum support by fuzzy ranking. For this example, we adapted the gravity ranking approach. So, we extract the large weighted fuzzy 1-itemsets: l**.Middle, l**.High and 2**. Middle.

Since L; is not null, we continue by executing the function CandidateSet, and candidate set C; is extracted from L; as (l1*.MiddIe)(2**.Middle) and (l**.High) (2**.Middle).

The following processes are implemented for the candidate set c;. First, the weighted fuzzy sets of (I*'.Middle)(2*'.Middle) and (1 **.High)(2**.Middle) in each transaction are computed as shown in Table VI1. The 2 1, U Fig. 5 .  Membership functions representing quantitative values fuzzy weighted supports of (l**.Middle)(2**.Middle) and (l**.High)(Z**.Middle) are given in Table VIII, from which it can be easily seen that the fuzzy weighted support of (I**.High) (2**.Middle) is larger than RtUinSup ' , which is (0.098, 0.1855, 0.273).

TABLEVII WEIGHTED COUNTS OF THE LARGE ITEMS AT LEVEL 1 I (0. n . m  10.5. 0.75. I )  mz8.0.53.0.78) TID I**.Middle I**.Hixh 2+*.Mlddle z in.zs,o.375.n.s) io.Zs,n.375:n.5) in.14:n.z6s,n.G) 3 (0, o, n) (n.s,n.75, I )  (0.0,o) 4 (0.37s,n.56zs.n.75) (n.iz5,n.1875,n.z5) (n.07,0.13~5,n.195) 5 (o,o. 0) (0.5,0.75, I )  (n.0, n) TABLE VI11 FUZZY WEIGHTED SUPPORTS Of THE 2-ITEMSETS AT LEVEL 1 Itemsets F m y  Weixhted Supports I**.Middle, Z**.Middle (n.042,0.n795,0.117) I**.High. 2**.Middle (0.098.0.1855,0.273) We skip the while loop in the algorithm as its process is similar to the above described process. At the end, we move into generating association rules by executing the function FindAssociationRules. The rules finding process is demonstrated next.

RI:  Ifl**=High, then 2**=Middle RI: IfZ**.Middle, then I**=High association tules are calculated as follows: For R I :  FSup, = 1 + O S +  O+ 0.25+ O =  1.75 The weighted confidence values of these two possible FSup,,, =1+0.5+1+0.25+1=3.75 W, =(0.28, 0.53, 0.78) FWCorf ---.(0.28, 0.53, 0.78)=(0.1288, 0.2438, 0.35881 - 3.75 1.75 ForRI: FSup, =1.75; FSup,-,, = I  +0.5+0.25=1.75 1.75 1.75 FWC~II&amp;~ =-.(0.28, 0.53, 0.78)=(0.28, 0.53, 0.78) If we assume FMinCorrf =(0.2,0.4,0.6), then we find that RI is an interesting rule.



VI. EXPERIMENTAL RESULTS We assessed the applicability and effectiveness of our approach by conducting some experiments using a synthetic transaction database. All of the experiments were conducted on Pentium 111, 1.4 GHz CPU with 512 MB of memory and running Windows 2000. We set the number of levels ns 3; and there are 64 terminal nodes at level 3, 16 generalized items at level 2, and 4 generalized items at level 1.  So, each internal node has four branches. The proposed approach is tested on IOOK transactions with an average of 100 items. We conducted three different sets of experiments. The first set of experiments is dedicated to show the relationship between the number of tules mined and fuzzy minimum support sets along with average weight    and fuzzy minimum support sets along with average weight intervals. For this purpose, we have used three linguistic intervals for which random linguistic weights have been generated, namely very-Unimportant, Ordinary], [Ordinary, Very-Important] and very-Unimportant, Very- Important], denoted W-0,O-VI and W-VI, respectively.

Figure 6 gives the number of rules with respect to the minimum support threshold at level 1. In this experiment, the minimum supports at the other levels are adjusted to middle-below whose set is different for both level 2 and level 3 as shown in Figure 7. In a similar way, Figure 8 and Figure 9 show the correlation between minimum support in linguistic terms for two different levels and the number of rules produced. From the two figures, it can be easily seen that the number of rules mined decreases along with the increase in linguistic minimum support thresholds. Also, more rules are generated for the linguistic weights of the higher fuzzy set. For example, the curve having [0-VI] linguistic weights has generated more rules than the others, especially [W-01 ones.

K C y b W  I O W  mdme- mdmr- t"@ -hi# Minimum Suppans at Level I trl0.S .*a= Fig. 6. Number of tules for various linguistic minimum suppart values M l r u n ~ P W . N h L e 3 1 ( X , Fig. 7. Fuzzy Sets of minimum support tisod for different levek 1wo - 2 3000 b *cm E i 1000 W y l O W  IOW md*- mac- hlgh UnjY# MinimumSupponsat Level 2 t r l O r x  *Ma Fig. 8. Number of mles far various linguistic minimum support values lam 6Mo :: 3 a a I 2000 velylow IOW middle- middle- high vely below above high Minimum Suppofs SI Level 3 Fig. 9. Number of wi.5 for various linguistic minimum suppolr values In the second set of the experiments, the runtimes of the first experiments are compared. The achieved results are reported in Figures 10, 11, and 12, which do meet our expectations, i.e., the runtime decreases as the minimum support thresholds increase.

V l o r  ,ow d d m C b . b V d d , n ~ ~  b.$h V ~ * Minimum Suppans at Love1 1 Fig. I O .  Runtimes for various linguistic minimum supports at level I ? a i l o w  I O U  ?iddie- ?iddie- ugh rnyw **ow above Minimum Suppons at Level 2 Fig. 11. Runtimes for various linguistic minimum mpportr at level 2 SenI 4 \  I .- E a  2 Y O y l O U  IOW ??Mle- rmddlr- hgh ?nyhgh Minimum Suppolts 81 Love1 3 below .bow Fig. 12. Runtimes for various linguistic minimum supports at level 3 vrrylov IOW riddle. Mddlr high v q h i g h r l o w  nbmr Minimum Confidence Fig. 13. Number ofrules for various linguistic minimum confidence In the last experiment, the minimum support has been fixed at the linguistic value middle-below and we tested, for    fixed at the linguistic value middle-below and we tested, for three fuzzy regions, the effect of using linguistic terms to express confidence in similar way to the membership functions of minimum support used for level 1 shown in Figure 4, on the number of generated association rules. The results plotted in Figure 13 reveal two important features.

One of them is that the number of rules decreases, for all cases, as the linguistic confidence threshold increases. The

VII. CONCLUSIONS In this paper, we proposed a mining approach for extracting interesting multi-cross-level fuzzy weighted rules in a given taxonomy. A top-down progressive deepening technique has been used while mining multi-cross-levels weighted association rules. Also, three important criteria, minimum support, minimum confidence and item importance used in determining the interestingness of the rules have been represented by fuzzy sets. So, we obtained more meaningfid rules that are more understandable for human beings. As apart from the studies described in the literature, we defined the concept of weighting internal nodes in a given taxonomy. The experiments conducted on a synthetic database showed that the proposed approach produces consistent and encouraging meaningful results.

Currently, we are investigating the possibility of combining  the approach proposed in this paper with the concept of adjacency lattice for online mining.

