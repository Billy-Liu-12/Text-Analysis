Length Identification of Unknown Data Frame

Abstract?Unknown protocol identification is widely used in the field of network and information security. Most previous researches focus on known protocol identification and analysis of network layer and above. However, the research on unknown protocol is an essential part for ensuring the safety of information system. In this work, a length identification method of unknown data frame is proposed based on characteristic searching of bit stream of unknown protocol, which can analyzes and researches protocols unknown from physical layer to application layer and determines the length of frame effectively. This method can adapt to the identification of unknown communication protocol and is significant to network and information security.

Keywords- frequent item; association rule; unknown protocol analysis; length identification

I.  INTRODUCTION With the rapid development of network technology,  especially with the popularization of the Internet, the information security and countermeasure of the network have become extremely important issues of the information times. In network countermeasure, we should confirm the protocol type used by target network at first, analyze the protocol type, and then we can acquire the network characteristics, such as the structure of message transmitted on network and the network topology, route algorithm, IP address distribution, finally detecting and obtaining the protocol vulnerability or acquiring upper-layer information.

Therefore, the technology of network protocol identification is the foundational technology and precondition of network security and countermeasure.

The researches on protocol identification concentrate on the application layer protocol identification algorithm in recent years[1]. However, in network countermeasure, after demodulating and decoding intercepted signal, we can?t obtain the link layer protocol type directly from the intercept equipment and further analyze it. At present few studies at home and abroad have focused on identifying and analyzing bit stream demodulated and decoded from physical layer.

There are only few researches on Ethernet protocol identification algorithm based on pattern matching[2], protocol identification algorithm based on decision tree[3], as well as the distribution model of bit error, and these researches are limited to the identification of known link layer protocol.

The identification of unknown data link protocol based on bit stream is important in network countermeasure, and the first thing is to identify the length of data frame in order to estimate the position of frame header. In this paper, we focus on the method of length identification of unknown data frame.

The remainder of the paper is structured as follows. In section 2 we summarize application layer protocol identification algorithms and describe our bit stream-based protocol identification technique. Section 3 briefly discusses the related work. Its application is shown in Section 4. In section 5 we describe our future work.



II. RELATIVE RESEARCH WORKS  A. Overview of Application Layer Protocol Identification Algorithm Application layer protocol identification is used to  determine the intrinsic protocol of traffic in the unit of packet or flow. It is an important technology to provide informative characteristics of network traffic, which is indispensable in various occasions, e.g., effective network planning and design; QoS enforcement such as traffic shaping and device differentiation.

Currently, there are roughly four approaches to classify network traffic according to application protocols.

Traditionally, traffic was classified with sufficient precision by simply looking at TCP/UDP port numbers. With the advent of P2P file sharing systems and their legal implication due to copyright concerns, more and more applications started to use unpredictable dynamic port ranges or reused well-known ports of other applications, which yields poor results for port classification methods on modern network data.

This development led to a wide use of deep packet inspection (DPI) for classification, which means inspection of packet payloads for known string patterns. DPI is currently the most reliable way to classify traffic, which explains its popularity in commercial tools. However, examination of (user) application layer data causes substantial legal and privacy concerns. Furthermore, DPI with static signature is rather resource-expensive and does not work on encrypted traffic, which is becoming common as a reaction to illegal threats.

As a result, the research community began to work on classification techniques independent from payload   DOI 10.1109/CIS.2012.155     inspection. One such approach is to classify traffic based on social behavior of hosts by looking at their connection patterns. While some of these methods are quite successful, they are only able to classify traffic in rough categories, such as mail, web or P2P traffic.

Another recent, payload independent approach is classification based on statistical flow properties such as duration, packet order and size, inter-arrival times, etc.

B. Unknown Protocol Identification Algorithm Almost all existing researches focus on application layer  protocol identification, few on protocol identification of data link layer and network layer. The existing researches of protocol identification have a common characteristic to research known protocols, which limit the application in wireless network countermeasure, because in real circumstance, the parameters in each layer are hard to acquire. At present, the researches of protocol identification which are unknown from physical layer to application layer are few. The work of this paper mostly based on unknown protocol identification based on bit stream data in wireless network countermeasure, and the data stream is an unusual stream based on bit in data link layer with unknown frame header.



III. METHODOLOGY  A. The characteristic of bit stream Bit is the basic unit of information transmitted in  network, and bit stream data has two characteristics: 1) the elements involved in bit stream are only 1 and 0, which makes the data mining become easy. 2) the sequence of elements in bit stream is fixed and important. Therefore, we can see from the above characteristic that the mining on bit stream data is to find frequent pattern, but we should also pay attention to element sequence.

Based on the above characteristics, there are some definitions on bit stream.

Let S  be a random bit stream with n bits, PS  be a bit pattern sequence.

? If PS  contains p bits, the length of it is p; ? If the length of pattern sequence 1P  and 2P is a  and b  respectively, a b? , 1[1... ] 2[1... ]P a P a? , then 1P  is the subsequence of 2P .

? If PS  contains s pattern sequences with length of m, where pattern sequence PS  appeared r  times, then  the support degree of PS  is ( ) rSupp PS s  ? .

B. Frequent sequence mining on bit stream Based on the characteristics of bit stream, we use  improved AC algorithm in order to mine frequent sequence on bit stream. Therefore, we can find all frequent sequences and count them through scanning source data only once [4].

Because the elements involved in bit stream are only ?1? and ?0?, the pattern sequence PS  only has two kinds of parent sequences 0Q  and 1Q  with the length of p+1, where  0 1[1... ] [1... ] [1... ]PS p Q p Q p? ? , 1[ 1] 1Q p ? ? . Therefore, we can construct a complete binary tree connected by parent-child relationship. If we treat every node as a state and number it, we can get the state diagram of complete binary tree.

Therefore, we can use the method above to make the statistic process of bit stream data become easier. Taking the statistics of pattern sequence with 1-3 bits as an example, the pseudo code of statistic process is as follows:  Therefore, we can obtain the statistic characteristic of pattern sequences of various length through scanning source data only once.

C. The identification of the length of data frame 1) The length of data frame is fixed  After mining frequent sequence on bit stream based on improved AC algorithm, the evaluation of the length of data frame is needed. When the length of data frame is fixed, we can determine the length based on the minimum position difference of the same sequence. The specific steps involved are as follows:  Step 1: Assume that the frequent sequence set mined from bit stream is { , , ...}S X Y Z? , where , ,X Y Z are frequent sequences of bit stream, 0 1 2{ , , ...}X X X X? .

( )ipos X is the position of frequent characteristic sequence  (1) create buffer[3]?  (2) create count[8]?  (3) for i = 1:3  buffer[i] = '#'?  (4) for i = 1:8  count[i] = 0?  (5) char *str = read(file)?  (6) n = getlength(file)?  (7) for i = 1:n  if(i-1<0||i-2<0)  buffer[1]=str[i]?  index = buffer[1]?  count[i]++?  (8) if(i-2<0)  buffer[1]=str[i-1]?  buffer[2]=str[i]?  index = buffer[2]*2+buffer[1]?  count[index]++?  (9) else  buffer[1]=str[i-2]?  buffer[2]=str[i-1]?  buffer[3]=str[i]?  index=buffer[3]*4+buffer[2]*2+buffer[1]?  count[index]++?     X in bit stream data. For the two characteristic sequences iX  and 1iX ? , based on the sequence of their position in bit  stream, the position difference is computed as 1( ) ( )i ipos X pos X? ? (Assume 1( ) ( )i ipos X pos X? ? ). Computing  the position difference of all the elements in X with each other, 1min( ( ) ( ))i i irepeate pos X pos X?? ? , the occurrence number icount of irepeate is counted.

Step 2: We repeat the same operation to all the elements in S and obtain iP , where  {( , ) | , }i i iP x y x repeate y count? ? ? , where 0i ? .

Step 3: The y in iP in Step 1 and 2 is sorted, and the  sorted result is selected. Therefore, the reference range of the length of data frame is determined based on the selected result.

2) The length of data frame is variable In this situation, the identification of length is difficult,  and we can?t determine it through computing the minimum position difference of the same sequence. After plenty of analysis on known protocols, we find that data frame will be added by a preamble on its header for signal synchronization and channel estimation before the process of encoding and modulation. The preamble is usually a fixed bit string with relatively long length, by which every data frame will be added, so we can search the preamble in order to find the frame boundary.

Because each frame contains a preamble, we can assume that the preamble is the one with relatively long length appear most frequently in bit stream. Therefore, this bit string appears most frequently can be treated as the preamble we are looking for, through which we can also find the frame boundary as well as variable frame length.



IV. EXPERIMENT RESULTS  A. The identification of fixed length of data frame The data captured by Wireshark has the common  characteristic of Ethernet packets, and some fixed field existed in the header of frame. In order to verify the correctness and effectiveness of the algorithm for data frame with fixed length, the algorithm is programmed with VC++6.0, the testing data is captured in local area network environment with address of 192.168.1.1.X, the local IP is192.168.1.117, and the router IP is 192.168.1.1. The data is captured by Wireshark 1.4.9. The testing environment is Windows XP SP3, Intel(R) Core (TM) 2 Duo CPU T8100, 2.10GHz.

1) ARP data frame experiment 400 ARP packets are captured, and the frequent items  are extracted with threshold value set as 0.5, 0.6 and 0.7 respectively. The statistical result is as follows:  When the threshold is set to 0.5, 0x0?0x1?0x2?0x4 appear frequently, and are 44112, 9470, 9306 and 8103 times respectively. The number of extracted frequent items of 8 bits is 62; When the threshold is set to 0.5, 0x0?0x1, 0x2?0x4 appear frequently, and are 44112, 9470, 9306 and 8103 times respectively. The number of extracted frequent  items of 8 bits is 54; When the threshold is set to 0.7, 0x0? 0x1?0x2?0x4 appear frequently, and are 44112, 9470, 9306 and 8103 times respectively. The number of extracted frequent items of 8 bits is 34. Figure 1 shows the number of extracted frequent items under different threshold (screening rate in the brackets). As shown in this figure, it is very important to choose an appropriate threshold. Finally, we choose 0.6 as the threshold.

Figure 1.  The number of extracted frequent items of ARP under different  threshold  We extracted frequent sequence with length between 24 and 88 based on the improved algorithm. The position difference of adjacent frequent items is computed, and the position difference of position difference is also counted.

The one appear most frequently is treated as the reference set of the frame length. The length value of frame was experimentally determined as 336, using the results presented in figure 2, which is accordance with the length analyzed through Wireshark.

Figure 2.  The length value of ARP data frame  2) ICMP data frame experiment 200 ICMP packets are captured, and the frequent items  are extracted with threshold value set as 0.5, 0.6 and 0.7 respectively. The statistical result is as follows:  When the threshold is set to 0.5, 0x0?0x1?0x8?0x2 appear frequently, and are 21669, 5216, 5215 and 4667 times respectively. The number of extracted frequent items of 8 bits is 127; When the threshold is set to 0.6, 0x0?0x1     ?0x8?0x2 appear frequently, and are 21669, 5216, 5215 and 4667 times respectively. The number of extracted frequent items of 8 bits is 104; When the threshold is set to 0.7, 0x0 ? 0x1 ? 0x8 ? 0x2 appear frequently, and are 21669, 5216, 5215 and 4667 times respectively. The number of extracted frequent items of 8 bits is 56.

Like ARP data frame, the selection of threshold value is greatly related to the extraction of frequent set of ICMP packets as shown in figure 3. We choose 0.7 as the threshold value.

Figure 3.  The number of extracted frequent items of ICMP under different  threshold  We extracted frequent items of ICMP packets with length between 24 and 88 based on the improved algorithm.

The position difference of adjacent frequent items is computed, and the occurrence number of position difference is also counted. The length value of frame was experimentally determined as 376, using the results presented in figure 4, which is accordance with the length analyzed through Wireshark.

Figure 4.  The length value of ICMP data frame  B. The identification of variable length of data frame In order to verify the correctness and effectiveness of the  algorithm for data frame with variable length, 802.11b data frame under multi-computer communication environment is captured for source date by USRP2 based on GNU Radio 3.2.2. Some experimental results obtained are shown in Table 1.

TABLE I.  SOME MINED FREQUENT ITEMS  Bit String Times of occurrence  The minimal interval  The occurrence times of minimal  interval 0xffffff 82 1 33  0xffffffffffffffffff82 38 305 2 0xffffffffffffffffff05 37 305 2 0xfffffffffffffffe0b 36 305 2  0xffe0b9 34 305 2 0xb9e140 22 307 1 0xc00001 16 927 1  Therefore, we can search the preamble we are looking for through setting experimental threshold and limiting the string length, in order to find the frame boundary. This method is suitable for length identification of unknown data frame with various length as well as the identification of frame boundary.



V. SUMMARY AND FUTURE WORK In this paper, we present an approach for length  identification for unknown data frame based on improved AC algorithm. The effectiveness of this approach for data frame with fixed and various length is verified by experiments respectively based on packets captured under real communication circumstance. Our results indicate that the length value of unknown data frame can be effectively determined by this method. Future work will focus on the association rule of these mined frequent items.

