AN ILPAPPROACH TO MINE THE ASSOCIATION RULES ON LOG ONTOLOGY

Abstract: Building rules on top of ontology is the main task of  mining the logical layer of the Semantic Web. In order to find the user-access patterns in the Web usage records, an ILP approach to mine the log ontology based on AL-log is illustrated in this paper. At first this paper gives the definition of event and log ontology, and then discusses the semantics of AL-log. Compared with traditional web log files, log ontology has more expressive semantic information, and AL-log is a powerful hybrid knowledge representation and reasoning system by integrating Description Logics and Horn clause rule.

Therefore applying AL-log to build the knowledge base of the log ontology can discover more effective and useful access patterns. For overcoming the "value restriction" of ALC, our ILP framework adopts a defined Datalog atom to express the part-whole relation between atom events and complex events, and then it makes use of ALC propagation rules and constrained SLD-reputation to learn the frequent association rules on log ontology. The experimental results show that this method can help site owners to create access rules effectively and it is quite feasible to solve practical problems.

Keywords: Semantic web usage mining; inductive logic  programming; log ontology; AL-log; hybrid reasoning  1. Introduction  Adopting log ontology to express the interaction between the users and the Web sites can be more clear and useful than using traditional web logs. When mining the semantic Web, most methods use OWL to express the ontology. Indeed, the design ofOWL has been based on the very expressive Description Logics [1]. Proposals like ORL [2] extend OWL with constructs inspired from Horn Clausal Logic in order to meet the primary requirement of the logical layer. Thus, integrating Description Logics and Horn Clausal Logic is intended to bridge the notorious expressiveness gap between knowledge representation and knowledge reasoning. Generally speaking, hybrid reasoning systems are KR&R systems which are constituted by two or more subsystems dealing with distinct portions of a single  knowledge base by performing specific reasoning procedures. In particular, AL-log [3] integrates ALC and Datalog by using ALC concept assertions essentially as type constraints on variables. It has been very recently mentioned as the blueprint for well-founded Semantic Web rule mark-up languages.

When mining the ontology, we could take benefit from the application of Inductive Logic Programming (ILP) [4].

ILP has been historically concerned with concept learning from background knowledge and observations within the representation framework of Horn clausal logic and with the aim of prediction. Therefore we propose an ILP approach to learn rules from log ontology and discover web users access patterns, such as frequent association rules.

The paper is organized as follows. Section 2 defines the notions of Event, Relations of Events and Log ontology.

Section 3 introduces the knowledge representation and reasoning rules based on AL-log. Section 4 analyzes the part-whole relation between atom events and complex events and illustrates the framework of ILP approach to learn from log ontology, and then gives some examples.

Section 5 concludes the paper with final remarks.

2. Events and log ontology  Log ontology is based on the users' requests and requested resource, which implicates the underlying semantic behavior of the uses' visiting the web sites. Log ontology reflects the actions and interests of the web users.

Compared with traditional web log files, log ontology has better efficiency and quality.

2.1. Events and the relations between events  Log ontology describes the web user's action with a core concept "event".

Definition 1 Event is theformalized model which describes all the access tasks to the business mode ofa web site.

We divide events into Atom Events and Complex     Events for the difference of the goals, the interests and the semantics of users' visiting action. Atom Events (EA) is used to describe a concrete request, including Content Events (EC) that describe semantic action user visiting the page, and Service Events (ES) that describe the using of the service. Complex Events (EX) is an ordered sequence composed of EC and ES, which can be thought as a semantic visiting path in event hierarchical architecture.

From the aspects of system, events consist of a sequence sorted by the visiting order, as the follows: previousOf(Ei, Ej) Ei happens before Ej . The relation between events may constitute user semantic path.

partOf (Ei,Ej) Ei is a part of Ej It describes the part-whole relation between atom events and complex events.

From the aspects of users, what we should do is analyzing the user semantic action in giving fields: subClassOf(Ei, Ej) : Ei is a sub type ofEj. It describes the hierarchy of events.

R(Ei, Ej) : It describes the abstract application relation between events in an application field.

ins tanceOf(Ei,Ej): Ei is an instance ofEj.

2.2. Log ontology  Event defines user's semantic action. We can mine the web log files to generate log ontology after importing the reasoning rules.

Definition 2 Log ontology is a tuple:  LO = {E, R, <E, <R,EVENT,A} Consisting of: - EVENT is the root concept oflog ontology, - two disjoint sets E andR whose elements are called  event identifiers and relation identifiers respectively, - a partial order < E on E C, called event hierarchy, - a partial order < R on R C, called relation hierarchy; - a set A oflogical axioms A in a logical language L  Combining definition by the experts and ontology learning, we can create the log ontology from the web log system, and then used for later access rules mining.

3. Representation log ontology based on AL-log  AL-log integrates two sub-systems: structural part E and relational part n .

3.1. The structural subsystem  The structural subsystem of AL-log is based on ALC and used to define the concepts, roles and individuals of ontology system. From the viewpoint of expressiveness  ALC is seemed to be the subset of SHIQ and it can be divided into two components to descript the background knowledge: intension and extension. The intentional component consists of concept hierarchies, namely inclusion statements. The extensional component specifies instance-of relations, including concept assertions and role assertions. The semantics ofALC is shown in Table 1.

Table 1 the semantics ofALC ALC Semantic OWL syntax element  <owl:Class rdf:ID="C">  C D CI DI <owl:sameAs rdf:resource="#D" />  < owl:Class > <owl:Class rdf:ID="C">  C c D C' D' <owl:subClassOf rdf:resource="#D" >  < owl:Class > a: C a' E CI <C rdf:ID="a"> < a, b >: _R (a,b) E RI <C rdf:ID="a">  <R rdf:resource="#b" />  The main reasoning rule ofALC is satisfiability check, including subsumption check and instance check. The test starts with the tableau branch S T U M and adds assertions to s by propagation rules until either a contradiction is generated or an interpretation satisfying s can be obtained from it. The propagation rules include s -* , s - , s -> and s -> i . More details please reference [5].

3.2. The rational subsystem  The rational subsystem of AL-log is based on constraint Datalog program. It consists of a set of constraint Datalog clauses which are extended by adding constrains on Datalog clauses. Concepts, variables and constants in the clauses come from ALC knowledge base. A constraint is defined as the form s: c, where s is either a constant or a variable, and C is an ALC concept.

Definition 3 Constrained Datalog Clause. A constrained Datalog clause is an implication oftheform: a <-l,...a. &r,...,r .where m 2O,n20m+n , a(O.i.m) are  Datalog atoms and r (0 < j < n) are constraints.

A clause is called constrained Datalog fact if there no  variables in atoms and constrains of the clause. A clause is called empty constrained Datalog clause if there are only constrains in the clause.

3.3. Semantics of AL-log knowledge base  In AL-log, the knowledge base is defined as a pair K =< E>, where E is an ALC knowledge base and rn is a constrained Datalog program. In order to reason on AL-log, E and ni must satisfy the conditions of OWA and CWA [6]. Reasoning for AL-log knowledge base is based on query-answering. A query Q is a constrained Datalog clause without head: - ql1,..., qm &rl,...,tr , where m>0, n>0, m+n>0, qi are Datalog atoms and rj are constrains. An answer to the query Q is a ground substitution 0 for variables in Q . The answer 0 is correct w.r.t. an AL-log knowledge base K if K ' QO .The answer set of Q w.r.t. K contains all the correct answer about Q in K , that is o(Q,K) ={O K' QO} . Query answering is based on constrained SLD-reputation which extends SLD-reputation by to deal with constrains.

4. Extending AL-log to mine the log ontology  Inductive Logic Programming improves the description ability of propositional rule and the overcome the restriction of making use of the background knowledge.

It is one of the most important methods to mine the semantic web.

4.1. The part-whole relation between events  The inclusion statements and the assertion defined in ALC only descript the "is-a" relation between concepts and the instance relation between concepts and individuals, but they can't express the part-whole relation between atom events and complex events in log ontology. From the semantics of Web system, a complex event is composed of different kind of atom events, the relation between them is component-complex which is a sub-relation of part-whole.

If an atom event t is a component of a complex event s, weusetheform:t? s,where seD,teC,DcEX, C=ECUES, CcV?ED.

Reasoning on ALC knowledge is based on the propagation rules, but these rules can't be applied to learn the part-whole relation between atom events and complex events. ALC is a subset of description logics and the role has what is called a "value restriction", which expresses a limitation on the range of types of objects that can fill that role. In fact a complex event of log ontology can be composed of different kinds of atom events and an atom event can belong to different kinds of complex events.

Therefore the part-whole relation between two actual events  doesn't always fit the "value restriction". In order to reason on the part-whole relation between atom events and complex events, we should extend the ALC propagation rules or the expressions of Datalog clause. How to extend the ALC propagation rules we will discuss in another paper, here we should illustrate the way how to mine the part-whole relationship in Datalog clause logic.

4.2. An ILP approach to mine the log ontology  The goal of our ILP approach of learning in log ontology is to discover the use access patternP with which the background knowledge can covers the observation set 0, that is B U P ' 0 . The ILP learning framework is defined as the fallows:  - The Langrage L based on AL-log; - The log ontology as the knowledge base K = B U 0, whereBUP' (;  - The pattern P represented by constrained Datalog clauses;  - The partial order ofL <.

For a giving mining problem, discovering the pattern  P from the background and the observations is to generate  new rules about the reference concept C by query-answering. P is defined as a unary conjunctive queries, which is called E - query and the answer set of the  queries contains the individuals of the reference concept C.

We can discover the relations from the individuals of the reference concept to the individuals of task-related concept.

Definition 4 E - query For a giving reference concept C, A E - query is a constrained Datalog clause oftheform.

Q = q(x) - ql,..., qm &X:C,r2.... , where X is the distinguished variable and the remaining variables occurring in the body of Q are the existential variables.

A E - query Qt = q(X) *- &X: C is called trivial E- query.

An observation o e0 is a ground constrained Datalog clause: q(a ) <- ql,.., q & rl, r2 ...,In ,where head(o ) = q(a ) is ground atom and a, is a triple of constants.

Definition 5 Let P e L be a pattern, B a background knowledge and o e 0 an observation. We say that P covers oi under interpretations w. r. t. B if BUPUbody(o)' q(a,) Lemma 1[7] Let Q be a ground query to an AL-log knowledge base K. It holds that K Q iffK ' Q.

Theorem 1 Let Pe L be a pattern, B a background     knowledge and o, e 0 an observation. We say that P covers oi under interpretations w. r. t. B if BUPUbody(o)' q(a) Proof P covers o, under interpretations w. r. t. B  > BUP' o, (definition 5) r BUP' q(a,)<- body(o,) (o, definition) > B UP U body(o1)' q(a) (deduction theorem) > BUPUbody(o) q(a) (Lemma 1)  4.3. The association rules between log ontology events  The main goal of reasoning on the part-whole relation between atom events and complex events is to discover the frequency access pattern in log ontology. We resort to a special Datalog atom to express the part-whole relationship s t as the fallow form: hasAtom(s, t), where s:C, t:D, C(V0ED, DcEX,C=ECUES.

Definition 6 p - query. For two giving concepts. reference  concept C and task-related concept D, A p -query is a constrained Datalog clause oftheform.

Qx y = q(X, Y) v- hasAtom(X, Z), hasAtom(Y, Z) & X: C, Y: D  A p- query Qx=q(X)*-hasAtom(X,Z)&X:C is called trivial p - query.

Definition 7 A support of the association rule P with respect to the knowledge base B is defined as the ratio between the number of instances of the reference concept C and the task-related concept D that satisfy the query fxy and the total number of instances of the reference concept C that satisfy Qx  suuport(C, D, B) =1 anwserset(QX,y B) / anwserset(QX, B) ,where X:C and Y:D.

The association rule of two atom events describes the frequency of the two events appearing in one complex event. Giving a threshold minsup, a support of the association rule is frequent ifsupport . minsup.

4.4. An Example to mine the log ontology  In order to test the ILP approach of mining log ontology, an example is given as the follows. The knowledge base KOMS is built on the log ontology, which is generated by Ming the log files of a online mobile phone shop through OntoLoger [8]. The structural part and the rational part are listed as the follows:  Table 2 the structural part of KOMS Intension Product c EC ChangeInfo c ES ConfirmInfo c ES  search c ES addToCart c ES OnlineShop c EX MobilePhone c Product Accessory c Product FlashCard c Accessory Nokia c MobilePhone Accessory c V' OnlineShop MobilePhone c V ? OnlineShop  Extension 'N95': Nokia' N81': Nokia 'Kingston - TF - IG': FlashCard 'Kingston - TF - 2G': FlashCard  Table 3 the rational part of KOMS Intension int erest(MobilephoneID, FlashcardID) <-  hasAtom(MobilephoneID, ShoppingID), hasAtom(FlashcardID, ShoppingID) & MobilephoneID: Mobilephonel, FlashcardID: Flashcard  Extension hasAtom('N95 ', 's080417021') hasAtom('N81','s080417022') hasAtom('Kingston - TF - IG','sO80417021') hasAtom('Kingston - TF - 2G','sO80417023')  Observations are portion o, of K / B .Each observation contains facts related to one and only one individual a, of the reference concept for the task at hand. Here we use the extension of rational part to express the observations.

First we want to check whether the pattern E covers the observation AN95 w.r.t. BOMS This is equivalent to answer the query Q(O) =, q('N95') about BOMS U AN95 U E. A constrained SLD-refutation can be constructed as the following.Let E(1) = q(X) e- hasAtom(X, Z) &X: Mobilephone A resolvent for Q(O) and E(') with substitution 0(') = {X / 'N95'} is the query Q(l) e hasAtom('N95', Z) & 'N95': Mobilephone .

Let E(2) = hasAtom('N95','s080407021') . A resolvent for Q(1) and E(2) with substitution 0(2) ={Z/'s080407021'} is the constrained empty clause Q(2) e &' N95': Mobilephone .

Now we need to check the satisfiability ofL' = ZU{'N95': Mobilephone} . The check operates on the initial tableau S(?) = YU{' N95': -,Mobilephone} . By applying propagation rule S -*o w.r.t Nokia cMobilephone, returns     SI" = 2 U{' N95': -Mobilephone, 'N95': -,Nokia U Mobilephone}.

We get S(2) = 2,U{'N95': -1Mobilephone, 'N95': Mobilephone} by applying S -6 to S'I" w.r.t. Mobilephone . Finally applying S -*, yields the final tableau S(3) = {'N95' :I .So the result proves that L' is satisfiable, thus the pattern E covers AN95 w.r.t. BOMS .

Second we want to check whether the association rule is frequent. For a giving threshold minsup=120o6, we need to find the answer sets of QX Y and QX I QX Y = q(X, Y) *- hasAtom(X, Z), hasAtom(Y, Z) &  X: Mobilephone, Y: FlashCard QX = q(X) <- hasAtom(X, Z) & X: Mobilephone Now we should compute a correct answer to QX Y w.r.t.

KOMS . Let us try with 0 = {X /'N95',Y I'Kingston - TF - IG'} .

For 0 to be a correct answer to QX , we need to find at least one correct answer to Q(O) =<- body(Qx Y)0  v- hasAtom('N95', Z), hasAtom(Kingston - TF - 1G', Z) & 'N95': Mobilephone, Kingston - TF - 1G': FlashCard  A constrained SLD-refutation can be constructed as the following. Let E(1) = hasAtom('N95','sO80407021') and E(2) = hasAtom('Kingston - TF - IG', 's080407021') . A resolvent for Q(O) and E(1) , E(2) with substitution u= {Z /'sO80407021'} is t the constrained empty clause Q(l) e &'N95': Mobilephone,'Kingston - TF - IG': FlashCard.

Here we need to check the satisfiability of E'= E Ut'N95': Mobilephone,'Kingston - TF - IG': FlashCard} By applying S -* w.r.t. 'Kingston - TF - IG': FlashCard to S'? yields the final tableau S2') = ZU{'Kingston - TF - IG' :l Therefore the results prove that L' is satisfiable. Compute a correct answer to fx w.r.t. KOMS is the same as above.

Now we use SPADA [9] to compute all the correct answers of fx y and fx respectively: anwserset(Qx,B) J= 31 , anwserset(Qx,B) = 186 .Then the suuport(Mobilephone, FlashCard, BOMs) = 16.67% which is greater than minsup. Therefore the association rule Qx y between mobile phone can flash card is frequent.

5. Conclusions  Building rules on top of ontology is a task that can be automated by applying Machine Learning algorithms and hybrid reasoning system. The log ontology implicates more  semantics to users' access behaviors than traditional web logs. The main contribution of this paper is to provide an ILP approach based AL-log to learn from log ontology. The ALC propagation rules can't apply to reason the part-whole relation between atom events and complex events because it doesn't fit the role "value restriction". Adopting a defined Datalog fact to express the part-whole relationship can make use of the constrained SLD-refutation and ALC propagation rules directly to learn association rules from the events in log ontology, and then checking whether the rules is frequent becomes more easy. For the future we plan to extend the approach dealing with the part-whole relation between events towards more expressive hybrid languages in order to make it closer to ORL, which will provide more effective knowledge base to build the business web sites.

