A Data Structure for Dynamic Data Mining

Abstract  A new data structure for online data mining using binary tree is proposed. Two experiments using syn- thetic data show efffectiveness of the method of data mining based on the proposed data structure.

1 Introduction  The recent progress of computer technology pro- vides a method of analyzing a massive number of transaction data in database systems. Such direc- tion has provoked various ways of KDD (Knowl- edge Discovery and Data mining) and, among them, a mining of the so-called association ruZes[l] obtains the wide-spread recognition as one of most active themes of data mining and several algo- rithms like AIS[l] and the Apriori[2].

However, these algorithms do not serve for the recent requirement of online mining of associa- tion rules where a set of transactions is frequently updated.For the purpose, Aggarwal et a1.[3] pro- posed a method based on the adjacency lattice.

The purpose of this paper is to show that fur- ther improvement of the adjacency lattice to bi- nary tree structure enables us to perform more effective online mining of rules with two experi- ments using synthetic data.

* Mr. Kitada's current address: Solutions Devel- opment COE Systems Headquarters, NTT DATA CORPORATION, Kayabacho Tower Bidg., 21-2, Shinkawa 1-chome, Chuo-ku, Tokyo 104-0033, JAPAN, quitada@mua.biglobe.ne.jp  2 Association Rules Let Z be a finite set of items. A subset in Z is called an i temset.  Any itemset can be a (possible) transaction. A database V is defined as a set of transactions. For an itemset X(S I), its degree of support s ( X )  is defined by  where I . I is a size of a set.

Definition 1 (Agrawal et al.[2])  (1) An association rule i s  a n  implication of the f o rm X + Y, where X and Y are i temsets with X n Y = 0.

(2) An association rule X 3 Y holds in V with confidence c (0  5 c 5 1) i f l c  = w.

(3) A n  association rule X + Y has a degree of support s (0 5 s 5 1) in V i f s  = s(X U Y).

Mining of association rules is actually performed by generating all rules that have certain minimum support (minsup)  and minimum confidence (min- c o n f )  that a user specifies.

The problem of finding all association rules that satisfy user-specified minimum support and confi- dence consists of the following two-steps :  Step 1: Find all itemsets X such that  s ( X )  2 minsup.

Such itemsets are called large itemsets. Let C.D be the set of large itemsets given V.

0-7803-5578-4l99/$10.0001999 IEEE  53 0  mailto:ysato}@main.eng.hokudai.ad.jp mailto:quitada@mua.biglobe.ne.jp    Step 2: For each itemset L E Lv, find a pair  such that  as a rule X * L \ X  for any X L.

Step 1 requires much time when the size of 'D is massive. So the central problem of mining associ- ation rules is to make rapid algorithms of finding all itemsets.

3 Previous Works  3.1 Apriori  Agrawal et a1.[2] proposed the Apriori algorithm for finding large itemsets. The first step in Apriori is to count the number of occurrences of each item and to find all large-1-itemsets whose degree of support is above minsup.

The kth step consists of the following two parts:  1. Generate the candidate itemsets c k  ushg the large itemsets in .&-I found in the (k - 1)th step.

2.  Calculate s ( X )  for each candidate itemset in c k .

3. The set Lk of large itemsets in the Kth step is defined as the set of candidate itemsets X whose degree of support s ( X )  is at least min- sup.

Finally the set L of large itemsets is defined by  Figure 1 shows an example of the Apriori d g e rithm.

I% 20% ' 7%  Figure 1: An example of the Apriori algorithm, where minsup=0.02 .

Figure 2: An example of adjacency lattice  3.2 Adjacency Lattice We can easily understand that the Apriori algo- rithm actually constitutes a structure of lattice. In fact, Aggarwal et al.[3] revealed the effectiveness of using the so-called adjacency lattice for online- generation of association rules by referring degrees of support for each large itemsets on the lattice structure, where each node represent a candidate large itemset.

4 The Proposed Data Struc- ture  In Aggrawal's method, in general, there are plural passes to reach a node (large itemset) when refer-      Pointer for the next node when  Pointer for the next node when  Item name  . the current one is considered  . the current node is skipped  , Degree of support .I  9'" T"  thetic Data ___-_____ + The following two experiments were performed to  compare the proposed method with the Apriori.

Static database: First we consider a static  i * O  f t  NULL  Figure 5:  Binary tree structure  Figure 4: Data structure of nodes  ring its degree of support. So, it would be easier to deal with the structure if there is a unique pass to reach each node. For example, by introducing an order relation between nodes, the adjacency lat- tice in Figure 2 is reduced to the tree structure shown in Figure 3.

More precisely, when we introduce the data structure of nodes shown in Figure 4, the ad& cency lattice in Figure 2 can be represented as the binary tree structure in Figure 5.

By the binary tree structure, we do not have to retain all relationship between nodes, saving memory capacity. For example, in order to refer ABCD, we can take the pass  N U L L  f A t  B t Ct D.

Similarly, to refer BCD, we can take  N U L L  f A +  B f C f D.

Figure 6, the running time of the Airport in- creases inversely proportional to degrees of support, while that of the proposed method is almost constant. So we can conclude the proposed method is effective in cases of lower degrees of support.

Dynamic database: Secondly we consider a dynamic database case where a set of transac- tions is updated. As shown in Figure 7, the running time of the Apriori is directly propor- tional to the size of a set of transactions since it must recompute from the beginning when- ever updating. On the other hand, the run- ning time of the proposed method is almost constant because it has only to make a small change on a part of its binary tree structure with respect to updated transactions.

6 Concluding Remarks In this paper, we showed that the effectiveness of  The running time of referring nodes is bounded binary tree structure in online association rules      The proposed method ' * 'Aprioni +  14-  12.

h  $ 8  . J I  I' t  c *! ..

4 -4 2 e -  _ _ - - - - - - -  n  20 15 10 5  Degrees of support (%)  Figure 6: Static database  Size of a set of transactions  Figure 7: Dynamic database  in data mining by two experiments with synthetic data. The size of memory in the proposed method is reduced compared with the method using the adjacency lattice. Nevertheless, the proposed method requires 2max(lTI) nodes for the maximum size of transactions max(lTI), so further improve- ment should be done in future task.

