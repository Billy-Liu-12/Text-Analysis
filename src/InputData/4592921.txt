

The Realization of Distributed Sampling Association Rule Mining Algorithm in Tourism  Du Junping  Zuo Min and Tu Xuyan Beijing Key laboratory of Intelligent Telecommunications  Software and Multimedia School of Information Science  Beijing University of Posts and Telecommunications, Beijing, 100876,China  University of Science and Technology Beijing, 100083, Beijing, China  junpingdu@126.com tuxuyan@126.com    Abstract - In this paper, we introduce the concept of the holiday tourism information data mining, improve a distributed sampling association rule mining algorithm: DS-ARM, define the realization process of the algorithm and test the capability of the algorithm and use the algorithm in the analysis of the holiday traveler destination traveling behavior.

Index Terms - Holiday Tourism; Data Mining; Association Rules

I. INTRODUCTION  Recently, holiday tourism has developed rapidly and become a new economic growth-point of national economy.

The rise of holiday tourism provides us new developing opportunity, yet, many problems remains due to the wideness and uncertain factors of holiday tourism. For instance, the reception status of tourism sites is strongly imbalanced, some hot sites being overloaded received, while few visitors in some new exploited ones; the quality and security of tourism service is getting increasingly severe, and a large rise of tourism complaints, because of no macroscopic hold and monitor of the receiving ability of hotels and tourism sites, holiday tourist flow volume and passenger traffic flow, etc.

While tourists encounter enormous information from the internet, they are laboring under severe shortage of the needed knowledge and information. Thus, it is necessary to mine network mass data in knowledge discovery.

In traditional network computing mode, the mining task is executed by the client, and the network volume is very large between the client and the server, which restricts the mining efficiency of network mass data seriously. At the same time, the mobility and robustness of the system decreases, because of the computing mode requests the connect remains keeping of the client and the server. With the development of the internet, distributed computing mode is popular used. We can combine artificial intelligence, modeling, intelligent information pressing and other theory and technology effectively, collect, mine and analyze holiday tourism information by advanced information and technology and approaches, finish the improvement of distributed sampling association rule mining algorithm, and apply it in the holiday ----------------------- This work was supported by the National Natural Science Foundation under grant no.60773112 and Beijing Natural Science foundation (4082021).

tourism data mining. Thereby, we can sort and analyze the national holiday tourism information comprehensively and systematically, steer tourist holiday consumption behavior, and further promote the healthy and ordered development of holiday tourism [1].



II. ASSOCIATION RULE DATA MINING TECHNOLOGY  A. Basic concept of Data Mining Data Mining is extraction of interesting knowledge from  data in large databases or data set. The knowledge is implicit, unknown and potential useful information and the extracted knowledge is expressed as conception, rule, law, mode and other types. Besides data mining, there are other main names: Knowledge Extraction, Information Discovery, Intelligent Data Analysis, Information Acquisition, and Knowledge Discovery in Database, etc [2].

B. Association Rule Mining Algorithm Association Rules reflects the reliance and association of an incident and other incidents, and the data association in database is the represent of the relevancy of things in real world. As a structural data organization form, database portrays the association of the data by its adherent data mode likelihood [3]. Association rule mining is the mast common used method of association knowledge discovery, with Apriori and its improved algorithm presented by Agrawal as the most famous one. Two threshold value: minimum support and minimum confidence should be given in order to find more meaningful association rules. The mined association rule must meet the minimum support prescribed by the client, which shows the lowest association degree of the association of a group of items. And the association rule also has to meet the minimum support prescribed by the client, which reflects the lowest confidence of an association rule.

With the rapid development and mature of relational database, especially the development of data warehouse technology, a large number of data storage in the relational database or data warehouse. The types of relational database and data warehouse are various, and numerical attribute is the most popular type of attribute in data relations, yet, association rule is an important knowledge concealed in attribute of database relations. Therefore, a research on association rule mining algorithm applicable to relational   Proceedings of the 7th World Congress on Intelligent Control and Automation  June 25 - 27, 2008, Chongqing, China    database, i.e. Quantitative Association Rules, QAR, has practical significance. For example, in a travel agency database, the age and vocation temporal of tourists are numerical attributes, which classic association rules can not deal with. Consider rules: (Age [v1,v2] [v1,v2] vocation temporal [n1,n2]?, shows when the age of the tourist is in the rang of [v1,v2], he may have a tour in a period of [n1,n2].

This rule reflects the probability of different ages travel at a certain time. Obviously, it is important to the marketing strategy of a travel agency. Therefore, association rules just can resolve problems that All Boolean Association Rules can not.



III.  DISTRIBUTED SAMPLING ASSOCIATION RULE MINING  ALGORITHM (DS-ARM)  A.  Specification of problem  Set { }m21 i,,i,iI ?=  as an item of specified domain. A subset of I is an item set. Every Transaction has a unique identifier TID. Database DB is a set of transactions. Divide  DB into n parts, set { }n21 DB,,DB,DBDB ?=  as one of them.

Set S as a set of transactions sampled from DB, { }n21 S,,S,SS ?= as one part of S which is included in DB . For specified item set X and Transaction group A, support degree function  )A,X(Support  is number of all items of X in A. And frequent  degree function A )A,X(Support)A,X(Freq =  . )DB,X(Freq i  is called the local frequent degree of  X in I, )DB,X(Freq  i the  global  frequent degree. In a similar way, )S,X(Freq i  is called the local Estimation frequent degree, and )S,X(Freq  the global Estimation frequent degree.

For specified threshold 1MinFreq0 ?? , if MinFreq)A,X(Freq ? , item set X is considered frequent in A, On  the contrary, is infrequent.. If A is a sampling, X is estimation frequent or estimation infrequent. If A is a part, X is local frequent; if A is the database, X is global frequent. So a item set may be evaluated as local frequent in k parts, while infrequent in global scope. Collect all items which frequent degrees are above or equal to rf  as a set, calls [ ]AFfr . Items which are not in [ ]vAFfr  but all of its subsets are in [ ]AFfr constitutes a set which is called the negative boundary.

Most of distributed association rules algorithms are based on Apriori algorithm, which needs to scan database multiple times. Sampling algorithm has no form of distribution because distributed algorithm would greatly increase the complexity of communication. Communication complexity highly depends on number of candidate item sets and noise grades of database segmentation. And when sampling algorithm makes a process of sampling and reduces threshold MinFreq, it also increases number of candidate item sets and noise grades, which makes normal distributed algorithm mean less [5].

To solve the problem mentioned above, we bring forward DDM algorithm which makes a mining of distributed sample data, and fr_low  takes place of MinFreq  as threshold.

When [ ]SF fr_low  is specified, make a scan of every part of database to find actual frequent set and negative boundary  of [ ]SF fr_low . Finally, integrate every distributed frequent set and make a rule of threshold MinFreq .

The algorithm has been improved in followed ways: (1) DDM algorithm is a progressive Refinement  algorithm to deal with data stored in memory. To decrease the disk I/O overhead, we improve the algorithm to generate all item sets when it starts, load them in memory just one time.

As every part of database is small, it will not need to read from disk when calculate the estimation frequent degree of these item sets.

(2) We propose a new way to get fr_low . The method does not need heuristic function, and can produce less candidate item sets. After the database is scanned, there is no use to integrate all candidate frequent item sets, as few of sets may be frequent in MinFreq . DDM algorithm is used again to confirm which sets are frequent or infrequent.

B.  Description of algorithm  Firstly DS-ARM algorithm loads sample data to memory.

Sample data are stored in trie tree. Trie tree is main data structure of DS-ARM algorithm which can be accessed by all subroutines. Every node in trie tree stores structure information (parent pointer, son node pointer est.) and list of transactions TTD of item set related to this node. During the process of initiation, nodes of first layer are generated firstly.

When new trie nodes and Corresponding item sets are produced, make TTD list of two direct parent nodes orthogonal, then get a TTD list of new node. The first step of algorithm is to run improved DDM algorithm to mine distributed samples, next, algorithm goes to next loop to  specify fr_low ;every loop calls routine derived from another DDM algorithm to mine next M frequent degree Estimation  item sets. M is an adjustable reference, default value is 100. When the additional sets have been found, algorithm decreases value of fr_low  and evaluates frequent degree of the minimal number item sets, reappraises the error probability. If the error probability is within acceptable scope,  loop stops. By negative boundary of [ ]SF fr_low  , algorithm acquires final candidate item sets.

Input: MinFreq , MinConf , iDB ,s,M, ? Output: association rule of global frequent items.

Main: Set 1error_p ? , MinFreqfr_low ? Load sample data iS  from iDB  to memory, which  capacity is s.

Initialize trie tree with all frequency 1 items and  calculate TID list of every node.

Acquire [ ] )MinFreq(MDDMSF fr_low ?  from data mining algorithm.

while ( )?>error_p {  1. [ ] [ ] )M(Max_MSFSF fr_lowfr_low ?? .

2. set fr_low  as minimized frequent degree of [ ]SF fr_low .

3. get error_p  from MinFreq? fr_low  and [ ]SF fr_low .

}  Set [ ] [ ])SF(Border_NegativeSFC fr_lowfr_low ?= , scan database and calculate )DB,c(Freq  i for every Cc? .Update frequent  degree of new trie tree and run )MinFreq(MDDM  algorithm to  calculate [ ]DBFMinFreq   with the actual frequent degree.

If [ ]DBFc MinFreq?  exists and [ ]SFc fr_low? , equal to c within  negative boundary, return error information, [ ] )MinConf,DBF(Rules_Gen MinFreq , algorithm is over.

When candidate item sets are created, scan every part of the database parallelly; calculate actual frequent degree of every candidate item set. To calculate the frequent degrees, DS-ARM algorithm needs to run MDDM algorithm again with original MinFreq .Except error occurs, the mining process will not produce candidate item sets beyond the negative boundary. If no error exists, all frequent item sets will be evaluated based on actual frequent degree acquired from database scanning. So which item sets in C are global frequent  item sets can be acquired. Rules generated from [ ]DBFMinFreq have global frequent attribute.

If an item set belongs to negative boundary of [ ]SF fr_low can be proved as frequent set, DS-ARM has mistake: A superset of candidate set may be a frequent set, but not take into account. When the matter happens, a solution put forward by Toivonen can solve the problem [6]: Create a group of candidate sets which compose all expected and unexpected frequent set, do another additional search. Capacity of additional candidate set should less than the composition of expected item sets and unexpected item sets product .Due to few mistake may occur, the possibility of multi-mistake decreases in exponential level. So the system cost of additional search is at the same level of first search.

C. DS-ARM algorithm Performance test  There are two Clusters are deployed: the first and the second experiments are operated on Cluster A. Cluster A has 15 computers which have P4 1.7G CPU and 1G memory. The computers constitute 100M Ethernet network. Cluster B runs the third algorithm extension experiment, which has 32 computers. The computer has AMD Duron600 CPU and 256M memory. Computers constitute 100M Ethernet network.

Data used to experiment comes from http://www.almaden.ibm.com/cs, the web site provides a tool  which can produce standard test database. Database capacity is 18G, which is specified by T5.I2.D600M. The database has 600M transactions, every transaction has 5 items with average, length of mode is 2.Use n%TID  method to deal database with random segmentation.

(1)Acceleration test The purpose designing the acceleration text is to check  the parallel ability of DS-ARM. First, run DS-ARM on n=1 computer. The algorithm declines to normal Sampling algorithm at this time. Then distribute database to n computers to check the influence to the algorithm performance. As Fig.1 shows, when MinFreq  is small?the acceleration of DS-ARM algorithm is basically linear. With the increase of candidate sets, the acceleration gradually develops linearly. This is because with the increase of computing nodes, the global sampling is added which results in the increase of fr_low .

s  ? Fig. 1  Test for DS-ARM acceleration   (2) MinFreq dependency test The second experiment is the test of DS-ARM algorithm  performance dependency to MinFreq , the same to test of dependency to number and capacity of candidate item sets.

Make a comparison of FDM,DDM and DS-ARM, DS-ARM is insensitive to the decrease of MinFreq , which means DS-ARM algorithm only scan database for single time and is better than any progressive Refinement distributed algorithm based on Apriori algorithm.

Fig.2  Test for performance comparison  (3) Extension test The third test is to check extension of DS-ARM  algorithm. When database segments are fixed, a strong extension algorithm which runs on different number computers may cost about the same time, and its performance and efficiency is better than operation on single computer.

Fig. 3 Test for DS-ARM Extension   When DS-ARM runs, communication burden produced  by every candidate set almost the same as DDM algorithm.

DS-ARM produces more candidate sets, the more communication it needs. From Fig.3, DS-ARM has extension attribute in two tests. For middle scale computer cluster, the speed of DS-ARM operation is faster than single computer due to super linear acceleration. T5.I2.D1200M triangle illustration presents a bad extension because candidate sets of T5.I2.D1200M are small and average mode is short. The more candidate sets, the more advantage they brings as calculate nodes grows. If the scale of mode is big enough, it can compensate the additional burden caused by communication.

D. Analysis of Algorism Test  The individual attribute information of the tourists and tourism products information booked by them are distributed in many data servers. In accordance with the database produced by distributed association rule mining, DS-ARM  Algorithm predicts on the tourism sites preferred by the tourists. Data have been used are as follows: the tourists? information table includes: tourists ID, age, gender, profession, income, education, and workload, totally seven attributes; product table includes product ID and quality; product passing sites table includes product ID, and tourism sites; tourism sites table includes the sites ID, name, locus and quality; and tourists passing sites table includes tourists ID, product ID, and travel temporal. To divide the tourists into different categories, age and income of the tourists should be discretized. First, divide tourists into different categories according to their age, gender, profession, income, education and workload. Then, compute different preferences of each category. Finally, we can get traveling routes of different kind of tourists by using DS-ARM Algorithm. The structure of knowledge base is as table 1 and table 2 showed:   TABLE I  TOURISTS INFORLMATION TABLE Group Start  Age Gender Profession  1 21 Male Sales person 2 21 Female Teacher 3 31 Male Civil servant 4 31 Female Teacher  Income Upper  Income Lower  Workload Education  3000 2000 Medium Bachelor 3000 2000 Medium Postgraduate 3000 2000 Medium Academic 3000 2000 Medium Bachelor   TABEL ?  TOURISTS INFORMATION TABLE Group Tourism Nature Tourism Route  1 Landscape Tour Zhan Bridge?Qingdao Bathing Beach Laoshan Mount Tai?Twin Peaks Mount?Qian Mountain?Wufengshan?Yunmenshan ?Laoshan   Cultural Relics Tour  Tomb of the King of the Sulu State?Hall Immolated Horses of the Eastern Zh Dynasty, the Lion Chamber? Tomb Dongfang shuo Taiqing Palace?Cave of Morning Mist and Sunset Glow?Lingyan Temple  3 Folk Custom Tour Zhou Cun?Kite Workshop?The Pu SongLing Museum?Tianheng Island   Landscape Tour  Huanglong?Jiuzaigou?Leshan?Muni Valley Confucius Temple?Lingyan Temple? Mencius Temple?Mount Tai   With the association rules the tourists? behavior in their  destination and the tourists preferences can be predicted, thereby, hot tourism sites and peak period can be forecasted based on the tourists? information. Through China tourism destination marketing system developed by our group, one can make journey layout before the trip of the tourists, arrange     and recommend the journey properly, and make positive effects on discharging tourists in their tourism destination.

?

IV.  CONCLUSION This paper presents an improved distributed association  rule mining algorithm, DS-ARM Algorithm, which is a collateral sampling algorithm. Through testing, it proved that this algorithm has ultralinear acceleration, and outperform the FDM Algorithm and DDM Algorithm. This algorithm uses single database scan, and is much superior to those level wise and multiple-scan, like FDM and DDM. The result of the test shows that DS-ARM Algorithm has preferable expansion performance. Mining tourism parameters and its development and changes concealed in mass holiday tourism information, and helping tourism manager establish macroscopic concept of dynamic holiday tourism can provide important decision-making basis for managers to predict holiday tourism status accurately, discharging tourist source properly and ensure the healthy and ordered development of holiday tourism.

REFERENCE [1]  Du junping, Analysis of China holiday travel phenomenon, China  travel greenbook-Analysis and expectation of China travel situation, Dept  of travel research of Chinese Academy of social sciences, 2001 [2]  Shi zhongzhi, Knowledge Discovery, Tsinghua University Press, 2002 [3]  R. Srikant and R. Agrawal. Mining generalized rules.In Proc. 1995  Int.  Conf.Very Large Databases. 407-419.

[4] Quinlan. programs for machine learning. Morgan Kaufmann..C4.5. San  Mateo. CA.1993.

[5]  Lin jiebing, Liu mingde, Chen xiang, Data mining and OLAP Theory  and  practice, Tsinghua University Press, 2002 [6] M.J. Zaki. SPADE. An efficient algorithm for mining frequent  sequences.  Machine learning. 40:31-60, 2001.

