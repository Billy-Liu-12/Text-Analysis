Encryption and Decryption with Space  Transformation for Bi-directional Association

Abstract  Most algorithms developed for encryption and decryption on network information security are focused on logic analysis. However, they are complicated to implement as a system and are difficult to be applied in a widespread manner. Recently, biomimetic-based architecture of artificial neural network was proposed to improve the reliability and performance of encryption methods such as back- propagation and overloaded Hopfield Neural Network.

But the limitations of encryption capacity, complexity and data integrity after decryption as well as reliability are still unsolved items.

This paper proposes a new algorithm to improve the reliability and efficiency of encryption and decryption with reformed Bi-directional Association Memory (BAM) model to reduce spurious states and data separation caused by former local minima information analysis based on the Hebbian learning rule. The space transformation was used to escape crosstalk and noise vector caused by spurious states, to maintain the completeness of processed information in addition to enhancing its security. A MATLAB simulation model was used to testify the performance of reformed BAM cryptosystem.

Keywords: neural network; Bi-directional Association Memory (BAM); Cryptosystem; space transformation; information completeness; information security.

1. Introduction   The emergence of biomimetic neural network has attracted many researchers to apply human features to engineering designs. Along with this trend, a neural network based cryptosystem has also been developed.

Among them, a BAM-based neural network architecture as given in the Fig.1 was selected to develop the cryptosystem in this research. Since a BAM-based neural network is a hetero-association double layer network with the following features: [1-3] (1) It can save N pairs of IN/OUT data.

(2) It can propagate data forward and backward.

(3) It can reach bi-stable state by adjusting the value  of weight matrix to minimum capacity iteratively.

(4) It will be converged to bi-stable state both for  synchronization and a synchronization work modes.

(5) It can be used for filtering noise and collecting data.

(6) The memory capacity is estimated as min( , )r p .

(7) It is not only for static vector memory but also for  dynamic state transition memory.

Therefore a BAM-based cryptosystem can be a  high performance system that is simple and features full data retrievial. The forward propagation of BAM work for encryption and the backward propagation work for decryption, along with the function of weight matrix, is similar to the key of general cryptosystem.

Figure 1. Architecture of BAM Neural Network   2. Mathematics of Cryptosystem and BAM 2.1 Mathematics of Cryptosystem   Generally speaking, a cryptosystem includes plaintext(P), ciphertext(C), encryption(E), decryption(D) and key(K). The basic mathematical relationship of cryptosystem can be shown as:  (1) ( )KC E P= ( )KP D C=                            (2)  Where, : Plaintext, C : Ciphertext, P KE : Encryption function, KD : Decryption function, : Key. K  A key is used for both encryption and decryption to produce ciphertext and plaintext separately. Assuming that X layer is the input layer and Y layer is the output   DOI 10.1109/EUC.2008.136    DOI 10.1109/EUC.2008.136    DOI 10.1109/EUC.2008.136     layer in the cryptosystem, the input/output pair can be defined as ( ),i ix y  ? ? , [1-2],  where  1, 2, ,i = ? N  ix with p dimension and with dimension. In other words, we have X layer with  iy r p neurons and Y  layer with r  neurons. Then, the fundamental mathematics of BAM can be depicted as the following:  1) Network Learning Weight Matrix adjustment: According to the Hebbian learning rule,  ( 1) ( )ji ji jk kiw t w t y x?+ = +                 (3) where : Weight matrix after adjustment,  : Weight matrix before adjustment, ( 1)jiw t +  ( )jiw t ? : learning rate 1 2[ ,k k , , ]  T k kpx x x= x?  ?  and . 1 2ky[ , , , ] T  k k kry y y= ?  ?  Suppose that 1? = , then the Weight matrix can be found as:  11 1   p N T  jk ik k  r rp  w w W y  w w =  ? ? ? ?= =? ? ? ?? ?  ? ?  ? ? ?  ?  x (4)  2) Network reminiscence: Suppose the input is kx  ? , then the output ky ?  will be  as: T  k k k k k k k i k  T ky W x y x x y x x  ?  = ? = ? + ??? ? ? ? ? ? ?  ? ? ?  ?          (5)  Where : noise vector or crosstalk. Tk k k i k  y x x ?  ?? 3) Bidirectional memory and reminiscence:  Suppose the neurons of Y layer output  at time t, then  will be taken as the input of X layer. The renewed output of X layer will be as:  ( )ky t ?  ( )ky t ?  ( 1) ( ( ) )k kx t W y t? ?+ = ? ? ?? ?                   (6)  Then,  will be taken as the input of Y layer.

Its renewed output of Y layer can be as:  ( 1)kx t + ?  ( 2) ( ( 1) ), 1, ,  p T T  k ji i j i  y t w x t j r? ? =  + = ? + ? =?? ? ?  (7)  Where, is the threshold value of neural. ?     r  i j  w? =  = ? ij                               (8)     r T T j ji  j w?  =  = ?                               (9) It works iteratively until and  as shown in the Table 1.

( ) ( 2)x t x t= +? ?  ( 1) ( 3)y t y t+ = +? ?  Table 1 Summary of the BAM process Association Algorithm 1st backward (1) ( (0) )x W y? ?= ? ?  ?? ?   1st forward (2) ( (1) )T Ty W x? ?= ? ? ?? ?  2nd backward (3) ( (2) )x W y? ?= ? ? ?? ?    2nd forward (4) ( (3) )T Ty W x? ?= ? ? ?? ?  ?  ? n/2th backward ( 1) ( ( 2) )x t W y t? ?? = ? ? ?  ?? ?   n/2th forward ( ) ( ( 1) )T Ty t W x t? ?= ? ? ? ?? ?    ?  ?   4) Lyapunov function (Energy function): If the0Ti j? ? =  = n  1 1( , ) 2 2  T T T TE x y x W y y Wx y Wx= ? ? = ?? ? ? ? ? ?  A  (10)   3. BAM Encryption Structure and  lgorithm 3.1 BAM Encryption Structure   BAM encryption and decryption flow chart can be seen as in the Fig.2. Its encryption process includes the following steps: 1) encode plaintext into binary code, 2) transfer the binary code into bipolar vector. 3) perform BAM Encryption, 4) produce bipolar vector randomly, 5) transfer bipolar vector into binary vector, and 6) decode the binary vector into ciphertext. The I/O pair vector ( , )A B  of BAM can be used to create Key KM .

And its decryption includes: 1) encode the ciphertext into binary code. 2) transfer the binary code into bipolar vector. 3) perform BAM decryption iteratively with KM until convergent state, 4) transfer bipolar convergent state into binary code and decode it into plaintext.

It is clear that the energy point of ciphertext is randomly distributed among all energy space as shown in the Fig.3.

3.2 BAM encryption mathematical model  Suppose the input of BAM X layer is plaintext matrix A and the output of BAM Y layer is ciphertext matrix B. The Key KM can be defined as in (13).

1 2i i ipA A A A? ?= ? ?? ??               (11)  1 2j jB Ran B B Bjr? ?= ? ??             (12)   N T T  K pi rj r  M AB A B =  = = ?                  (13) Where  and i . It means A, B with the same dimensions.

p r= j=  Suppose the encoded ciphertext matrix ( )B t ( 1A t +  input to Y layer of BAM at time t  and output  to X layer of BAM through recall of decryption Key  )  KM  at time . It will operate iteratively until convergent 1t +     point is reached as defined in the equations of and . Then the bipolar  type of output ( 1) ( 3)A t A t+ = + ( ) ( 2)B t B t= +  ( )2  ( 1) KA t M+ = ( 2) TKM+ =  ( , ) T  n+  ) )  A t  will be transferred into binary  type and decoded as plaintext. The procedure is shown as:  (B t                 (14) (15) ( 1B t A t +  Energy expression obtained from (10) as:  KE A B B= ? M A                 (16)?  (a) Encryption  (b)Decryption Figure 2. BAM (a)Encryption and (b)Decryption flow chart   (a) Encryption energy state space   (b) Decryption energy state space  Figure 3. BAM (a)encryption/(b)decryption energy state space 3.3 Energy distribution of State space and its  problems on decryption BAM energy distribution of state space can be  depicted in (16). It is clear that the energy distribution of encrypted ciphertext is randomly distributed among ciphertext as in Fig.3(a). The encryption key  KM reserves the relationship matrix between plaintext and ciphertext energy spaces, i.e, the memory matrix.

And the decryption of BAM converges the space energy into local minimum area through decryption key KM as in the Fig.3(b). The local minimum area is the plaintext energy space.

There is no problem in the BAM encryption operation, but some serious problems will be encountered in the decryption operation. Among them, the biggest problem is the incompleteness of the decoded data. It may be caused by the following reasons: 1) BAM uses local minima to store processed data and  learning with the Hebbian learning rule, thus producing the amount of local minima, which is more than the original data, as spurious states shown in Fig.3(b). The results of Hamming distances make data loss.

2) The repeated association of memory in the process of decryption to reach convergent point will require much time.

3) The spontaneous spurious states may reduce the stability of decryption.

4) The low stability of decryption will lessen the application of BAM.

In order to deal with the above problems, we  develop a mathematic space transform for BAM Encryption/Decryption.

4. Space Transformation on BAM  ncryption/DecryptionE 4.1 Space transform BAM conception   Because of the high probability of linear dependence in BAM Decryption as in Fig.2(b), the energy will be easily converged to spurious states and cause erroneous decryption results. If the BAM Decryption space is transformed into an orthonormal space, all information vectors will be linearly independent and will nullify all spurious states. It does not need to perform association of memory repeatedly in this case. Only one time memory association can gain the decryption results, and the performance of decryption will be improved efficiently. Its encryption and decryption architecture can be shown as in the Fig.4.

(a)Transformed encryption   (b)Transformed decryption  Figure 4. Space Transformed (a)Encryption/(b)Decryption for BAM  4.2 Definitions for Space Transformed BAM Encryption/Decryption  By the Gram-Schmidt orthonormalization process, (11) and.(12) can be redefined with QR decomposition and make all information vectors linearly independent as:  [ ] [ ]A i i A i pA Q R?= ?                     (17)  { }[ ] [ ]B j j B j rB Ran Q R? ?=                (18) Where  and AQ BQ  are orthonormal matrices (plaintext and ciphertext of new space),  and AR BR  are upper triangular matrices. Then the transformed encryption key space KW  will be:  T K AW Q Q= B                          (19)  Where 1TK K KW W W ?= = . The first decryption key is  KW  and the second key is . The process of decryption will be as the followings:  AR  1[( ) ]A K BB A R W R ?=                     (20)  1{ [( ) ]}K B AA W B R R ?=                   (21)  From (10), energy E can be found as: ( , ) TA B B K AE Q Q Q W Q I= ? = ? ?             (22)  Where  is identity matrix.   I 4.3 Energy Distribution of State Space  In the (22), the first decryption key KW  enforces all energy vectors to be independent and convergent at fixed state without producing any spurious state as shown in the Fig.5. Then the second key  will transform convergent energy state into plaintext energy space. If and  happen in (11) and (12)  operation and makes (19) stop working for different dimension. The (19) must be transformed as:  AR  p r= i ?  [ ] [ ] [ ] [ ]TK i j A i i i j B j jW Q I Q? ? ?= ?                 (23) Where  is unity matrix with i dimensions. The (20) and (21) can be corrected as:  I j?  1[[ ] ( )[ ] [ ] ][ ]j i A i p K i j BB I A R W R ?  ? ? ?= j r?           (24) 1{[ ] [( )[ ] [ ] ]}[ ]K i j B j r j i A i pA W B R I R  ? ? ? ?= ?  ?  (25) And the energy relationship transformed as:  ( , ) [ ] [ ] [ ] [ ]TA B A i i K i j B j j i jE Q Q Q W Q I? ? ?= ? = ?    (27)   Figure 5. Keeping away from spurious states on decryption   5. Experimental Results   Take the plaintext ?Communication? for experiment. And the required experimental environment is listed in the Table 2.

Table 2 Experimental Environment Equipment Specification  CPU Intel ? CoreTM Duo processor T2300E(1.66 GHz, 67 MHz,  2 MB L2 cache) RAM 1.5 GB  HD 120 GB / 5600 rpm / 8 MB  OS Windows XP SD2  Software MATLAB 7  5.1 Results of original BAM Encryption/ Decryption  The results of original BAM encryption and decryption can be seen in the Table 3. Its decrypted plaintexts are quite different from the original plaintext because of the spurious states caused by more local minima.

Table 3 Results of Original BAM Encryption/ Decryption  order Plaintext Encryption  time second  Ciphertext Decryption  time second  Decrypted Plaintext  1st Communi cation 0.0010 7=o!A*(E+p8 0.188 CommUniCATio  n  2nd Communi cation 0.0006 ',EzkCF.a% 0.150 Cciianicaticn  3rd Communi cation 0.0010 -$=`?#0\{2oF 0.176 Comm}oica ioo  5.2 Results of Space Transformed BAM Encryption / Decryption  The results of space transformed BAM Encryption/ Decryption with different string length can be seen in Table 4. Its plaintext, ciphertext, and key energy  j     spaces are shown as in Fig.6. If the length of string increases, the results can be as in the Table 5. And its related energy space can be seen in the Fig.7.

Table 4 Results of Space transformed BAM Encryption/Decryption  Table 5 Processing time for longer plaintext string  Plaintext Length  Encryption time  second  Decryption time  second Length of string  215 0.020 0.50000 Lm=Lc=215 0.022 0.01600 Lm(=215)>Lc(=7)  0.042 12.7030 Lm=Lc=1389  0.040 0.09400 Lm(=1389)>Lc(=1000)  4093 0.050 316.282 Lm=Lc=4093 0.047 0.81200 Lm(= 4093)>Lc(=7)    Figure 6. Energy space of Plaintext, Ciphertext and key (a) original plaintext (b) ciphertext of space transformed BAM (c)  comparison between plaintext and ciphertext (d) key1 energy distribution (e) key2 energy distribution (f) encryption energy contour map (g) magnified encryption energy contour map (h) encryption energy color temperature contour (i) decryption convergent distribution  Figure 7. Energy space of Plaintext, Ciphertext when Lp=Lc (a) original plaintext (b) ciphertext of space transformed BAM (c)  comparison between plaintext and ciphertext (d) key1 energy distribution (e) key2 energy distribution (f) encryption energy  contour map (g) magnified encryption energy contour map (h) encryption energy color temperature contour (i) decryption convergent distribution  6. Security test   The security of proposed algorithm has been tested with the following criterion: (1) Degree of Security when attacked by Brute-Force  Attack (exhaustive attack) strategy (2)  Length of Key (3)  Complexity of Encryption/Decryption algorithm (4)  Expended Plaintext  According to Claude Shannon?s concept of perfect secrecy, the probability of obtaining the plaintext of a corresponding and given ciphertext, is the same as obtaining the plaintext without any ciphertext to observe. In other words, the probability that the attacker finds the plaintext after observing the ciphertext, is the same as the probability or difficulty of getting the plaintext before observing the ciphertext.

In the case of a BAM-based encryption-decryption system, every randomly generated ciphertext is different even though their plaintext is the same. In addition to this, the length of ciphertext will be equal or shorter than the source plaintext. It works as a One- Time Pad model, generating different ciphertexts to the same plaintext. Therefore, the secrecy of the purposed encryption-decryption method can be maintained.

Since the character of ASCII code is 128, and its corresponding probability of sample space is  1( ) 128Mp m = . The probability of randomly generated  ciphertext is 1( ) 128Cp c =  , and its corresponding  probability of key space is 1( ) 128Kp k = . Suppose the  string length of plaintext and ciphertext are Lm and Lc separately, all space of plaintext #M , ciphertext  #C and key space #K are defined as: 7# 128 2m mL LM = =                      (28)  7# 128 2c cL LC = =                        (29) max( , ) 7 max( , )# 128 2m c m cL L LK = =  order Plaintext Encryption  time second  Ciphertext Decryption  time second  Length of string  1st Communication 0.00160 Q;]\|dD}OlM  V\ 0.0570 = =13  2nd Communication 0.00157 \ B&AMf 0.0041 = 13)>  =7)  3rd Communication 0.001600 k*A2<Bd"{T  5|Cg\ 0.082000 = 13)< =16)  L               ??(30) If the string length of plaintext is 13 (13?7 bits), its  correspondent randomly generated ciphertext will require 0.0015sec according to the experiment, and the  time to generate a correspondent key of # 7 13  2K p ?=  is  0.0015sec. On average, it will take 5x1016 years to find 30% of the key and 5.9x1016 years to find 50% of the key. If we expands the length of string to 215  13x215 bits , the time to generate ciphertext is about 0.02sec, and the correspondent key will spend 0.02sec for randomly generated key with probability of     # 7 215  2K  p ?= . It means that the time for finding  1% key will be 0.02sec, 7 2152 30% 0.02  60 60 24 365  ? ? ? ? ? ?  years for  30% of the key, and 7 2152 50% 0.02 60 60 24 365  ? ? ? ? ? ?  years for 50% of  the key as depicted in Table 6 and Fig. 8.

Table 6 Required time to decipher the ciphertext with exhaustive  method Length of  key bits  time to hunt for x% gold key  1% 30% 50%  7x13 0.0015 sec 3.5x1016 years 5.9x1016 years  7x215 0.0200 sec  7 2152 30% 0.02 60 60 24 365  ? ? ? ? ? ?    years  7 2152 50% 0.02 60 60 24 365  ? ? ? ? ? ?  years  7x668 0.0300 sec  7 6682 30% 0.03 60 60 24 365  ? ? ? ? ? ?    years  7 6682 50% 0.03 60 60 24 365  ? ? ? ? ? ?    years  7x1389 0.0400 sec  7 13892 30% 0.04 60 60 24 365  ? ? ? ? ? ?    years  7 13892 50% 0.04 60 60 24 365  ? ? ? ? ? ?  years  7x4093 0.0500 sec  7 40932 30% 0.05 60 60 24 365  ? ? ? ? ? ?    years  7 40932 50% 0.05 60 60 24 365  ? ? ? ? ? ?    years    7 40932 30% 0.05 60 60 24 365  ( )years  ? ? ? ? ? ?  7 40932 50% 0.05 60 60 24 365  ( )years  ? ? ? ? ? ?  Figure 8. Required time to decipher the ciphertext with exhaustive method    7. Conclusion   The purposed space transformed algorithm has been tested for several thousand times to deal with spurious state caused by the traditional BAM method.

It is found that the ortho-normalization-based space transformation can reduce about half the time spent for iterative associate memory and without any error after  decryption. The number of neuron used in this modified BAM corresponds to the plaintext string.

And the decryption key AR  can be decided by the interactive relation-ship between neuron energy and message energy. Therefore, it simplifies the decryption processing and maintains the integrity of the decrypted plaintext. Moreover, the randomly generated ciphertext in this space transformed BAM system is different in every encryption process and its corresponding key is also different in every encryption process. No attacker can break into a computer protected with space transformed BAM to steal information. The security of this purposed system can be called ?Unconditionally Secure? or ?One-Time Pad?. It is available for protecting the security of neural networks.

8. References  [1] Satish Kumar, ?Neural Networks - A Classroom  Approach?, McGraw-Hill Inc. 2005.

[2] Muchung Su & Shiaoder Chang, ?Machine  Learning: Neural Network, Fuzzy System and Genetic Algorithms, 2nd ed?, ChuanHua Technology Bookstore, March 2006.

[3] Bart Kosko, ?Bidirectional Associative Memories?, Cybernetics, Vol. 18, No. 1, January/February 1988.

[4] Shanguang Chen, Jinhe Wei, Yongjum Zhang, Yong Bao, ?A New Model for Bidirectional Associative Memories?, Neural Networks, 1996., June 1996 Page(s):594 - 599 vol. 1.

[5] Miao Zhenjiang, Yuan Baozong, ?An Extended BAM Neural Network Model?, Neural Networks, 1993. IJCNN '93-Nagoya. Proceedings of 1993 International Joint Conference on Volume 3,  25- 29 Oct. 1993 Page(s):2682 - 2685 vol. 3.

[6] C. S. Leung, ?Encoding Method for Bidirectional Associative Memory Using Projection on Convex Volume 4,  Issue 5,  Sept. 1993 Page(s):879 ? 881.

[7] Niansheng Liu and Doinghui Guo, ?Security Analysis of Public-key Encryption Scheme Based on Neural Networks and Its Implementing?, Computational Intelligence and Volume 2,  3-6 Nov. 2006 Page(s):1327 ? 1330.

[8] Duan Suoli, Wang Shuzhao and Yang Xiaokuo, ?Research on Signal?s Encryption and Decryption Using Nonlinear System and its Inversion?, Electronic Measurement and Instruments, 2007.  ICEMI '07. 8th International Conference on Aug. 16 2007-July 18 2007 Page(s):3-870 - 3-873.

