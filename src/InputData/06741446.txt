Router Design for DDS: architecture and performance evaluation

Abstract?The current Data Distribution Service for Real-Time Systems (DDS) is mainly designed for transmission in a single local network domain. However, when DDS applications com- municate with other applications in different network domains over WAN, the DDS could face severe problems, because most ISPs in WAN do not allow multicast and UDP flows. In this paper, we propose a router design for DDS. While keeping the semantics of the DDS, the proposed DDS router provides an efficient data distribution over WAN using the local recovery and overlay multicast. Through the NS-3 simulations, we show that the system with the DDS routers outperforms the legacy unicast based communication method in terms of the scalability and robustness.



I. INTRODUCTION  Recently, Cyber Physical Systems (CPS) are spreading over the world with the growing needs of real-time applications such as environment monitoring, air traffic control and man- agement, financial trading and military communications. The DDS is an Object Management Group (OMG) standard for Publish and Subscribe (Pub/Sub) that addresses the needs of such applications. It is an abstraction for one-to-many commu- nication providing anonymous, decoupled and asynchronous communication between a publisher and its subscribers [1].

While the DDS API standard defines many profiles to ensure on the wire interoperability and source code portability across different vendor implementations, there still are no specific definition for a DDS router. That is because the current DDS is designed for transmission in a single local network domain: all DDS participants can communicate with each other via UDP/IP by default over the extended LAN. But, when DDS applications communicate with the other DDS applications in different network domains, the DDS could face severe problems. These problems are caused by the following reasons.

First, most ISPs in WAN do not allow UDP flows and multicast due to profit issues. Second, since most outbound traffic flows are forwarded by TCP ports, there could be numerous TCP connections between publishers and subscribers.

In this paper, we propose a router design for DDS, which can overcome such limitations and provide an efficient data distribution over WAN. In particular, the proposed DDS router boosts the system performance using two schemes, local recovery and overlay multicast, while keeping the semantics of the DDS. The local recovery of the DDS router reduces  the number of messages and prevents the waste of network resources. Also, it performs the overlay multicast based on the link cost so that the system obtains latency gain and provides QoS.

To evaluate the performance of the DDS router, we imple- ment them on the NS-3 simulator. Through the simulations, we demonstrate that the system with the DDS router obtains the significant performance gain in terms of the scalability and robustness.

We summarize our contributions of this paper as follows.

First, we propose a DDS router design, which provides an efficient data distribution over WAN using the local recovery and overlay multicast while keeping the semantics of the DDS. Second, through the NS-3 simulations, we show that the system with the DDS router outperforms the legacy unicast based scheme in terms of the scalability and robustness.

The remainder of the paper is organized as follows. We give the motivation of this paper in Section II. We next describe in detail the DDS router design in Section III. Section IV shows the performance evaluation via NS-3 simulations. Section V provides the related work and we finally conclude our paper in Section VI.



II. MOTIVATION  A. Why do we need a DDS router?

As we mentioned before, the current DDS is designed for transmission in a single local network domain. All DDS participants in the same network domain are connected over the extended LAN so that they can communicate with each other via UDP/IP by default. Since there could be more than one DDS domain in one network domain, all participants should share the topic information (i.e., topic type) via the dis- covery protocols (i.e., Participant Discovery Protocol (PDP), Endpoint Discovery Protocol (EDP)) before the actual Pub/Sub transmission. However, when DDS applications communicate with the other DDS applications in different network domains, the current system may fail to provide service.

By taking the example in Fig. 1, we show the related problems. In this figure, there are two network domains connected over WAN. The publisher in domain1 tries to send its topic instances to subscribers not only in the same network domain but also in the other network domain (i.e., domain2).

WAN  Network Domain 1 Network Domain 2  Publisher  Subscriber  Subscriber  Subscriber  Subscriber  SubscriberDDS Router DDS Router  Fig. 1. Network model. Current DDS system cannot support an efficient transmission over WAN because (1) most ISPs in WAN do not allow UDP flows and multicast, and (2) most outbound traffic flows are forwarded by TCP ports.

Networking Module  Topic Manager Discovery Module  QoS Provisioning Manager  Overlay Multicast  UDPv4 TCPv4  Reliable Communication via Local Recovery  Fig. 2. Protocol stack of the DDS router. To keep the semantics of the DDS, the DDS router uses the same topic manager and discovery module with the typical DDS participants. Two additional functionalities, local recovery and overlay multicast, can boost the system performance significantly.

For the same network domain, DDS can use a broadcast or multicast, but the flows over WAN should be transmitted by an unicast based mechanism, and thus inefficient.

Our DDS router design mainly overcomes such problems so that it provides an efficient transmission over WAN. We give more details of our DDS router design in the following section.



III. DDS ROUTER DESIGN  A. Overview  In this section we explain the overall architecture of the DDS router. As mentioned before, the main purpose of the DDS router is to provide an efficient data distribution over WAN. We provide main functionalities of the DDS router in Fig. 2. First, the DDS router works like typical DDS participants, and hence it has its topic managers and discovery modules for PDP and EDP. Second, to meet the QoS require- ment of topics passing through the WAN, we introduce QoS provisioning managers into our router design. In particular, the managers perform the local recovery so that they can provide the time-related QoS and guarantee the reliable communica- tion. Third, the overlay multicast performed between DDS routers enhances the transmission efficiency significantly.

Now, we elaborate the DDS router design in more detail in the next section.

B. Topic Manager  As its name suggests, the topic manager of the DDS router handles topics of its local network domain and remote domains. In other words, a DDS router should know what topics are available in the remote network as well as its local network. For the management, the DDS router uses a discovery module, as we will explain in the next section. We note that the DDS router may require more resources, such as memory spaces, power and CPUs, than typical DDS entities such as low-power sensor nodes.

C. Discovery Module  To publish and subscribe instances of topics, all DDS participants should share their topics before transmission. One of strong points of our router design is that routers keep the semantics of the DDS. To do so, the DDS router should work like other DDS participants, with the key difference that it manages all topics of different network domains as well as the local domain.

The discovery module of the DDS router is not different to that of typical DDS participants. To communicate with each other, a DDS router generates domain participants, writers and receivers according to its topics. All DDS routers and other DDS participants exchange the advertisement messages with each other so that they can share the topic information. In particular, the messages between DDS routers make it possible to publish and subscribe topics over WAN. By doing this, the DDS subscribers can send the publishers in different LANs topics they want to subscribe, and the DDS publishers can recognize other subscribers? needs for their topics.

D. QoS Provisioning Manager  Various QoS policies are used to control relevant properties of DDS entities. The current DDS specification already defines about 20 QoS policies [1], and hence the DDS router should provide a QoS support. One of the key QoS requirements is a reliable communication. Basically, the DDS uses a best-effort data transmission by default. However, most applications need the reliable communication that requires their instances of topics to be delivered in order. For the reliable communication, DDS defines ACKNACK and HeartBeat messages. Upon receiving the HeartBeat messages from a publisher, receivers send ACKNACKs of previously received topic instances back to the publisher. After that, the publisher retransmits the topic instances, if needed.

The most important thing in reliable communication is to balance between time-determinism and data-delivery reliabil- ity. However, if we adopt the current reliable communication into the our network environment, where publishers try to send their topic instances to subscribers distributed in different LANs over WAN, could introduce the following problems.

First, the ACKNACK implosion problem can occur. When many subscribers simultaneously send their ACKNACKs to their publisher, the publisher cannot handle the all incoming messages due to its limited queue size. As a result, the ACKNACK implosion delays retransmissions and incurs high     latency. Second, since the most ISPs in WAN do not allow the multicast functionality as well as UDP flows, tremendous TCP flows can be generated. This prevents the system from providing a real-time communication.

To address such problems, the DDS router employs a local recovery scheme. In particular, each router plays a role of virtual publisher of topics; it publishes topic instances to subscribers in its network domain (Fig. 3 (a)), receives ACKNACKs from them (Fig. 3 (b)), retransmits the topic instances to subscribers according to the ACKNACKs (Fig.

3 (c)), makes the aggregate ACKNACK, and sends it back to the original publisher (Fig. 3 (d)).

Router 1 Router 2  LAN 2  ? LAN 1  publisher  (a) Forwarding topic instances  Router 1 Router 2  LAN 2  ? LAN 1  publisher  (b) Receiving ACKNACKs  Router 1 Router 2  LAN 2  ? LAN 1  publisher  (c) Retransmitting topic instances  Router 1 Router 2  LAN 2  ? LAN 1  publisher  (d) Sending an aggregate ACKNACK  Fig. 3. An example of the local recovery. (a) Router2 forwards topic instances of the publisher to the subscribers in LAN2. (b) Subscribers in LAN2 send ACKNACKs to Router2. (c) According to the ACKNACKs, Router2 retransmits the topic instances to some subscribers. (d) Router2 sends an aggregate ACKNACK to the original publisher.

E. Overlay Multicast  The UDP/IP multicast supported by DDS cannot be utilized for transmission over WAN. Suppose a publisher wants to transmit its topic instances to NM subscribers distributed in different N LANs. Then, it requires at least NM TCP connections and related TCP session messages. This may result in high latency, and hence it is not appropriate for real- time applications which are targeted by most DDS.

To overcome this limitation, we adopt an overlay multicast.

The idea is very intuitive. When a DDS router transmits topic instances to subscribers across the WAN, it computes an overlay multicast tree and shares it with other routers. To  do this, routers exchange link costs with each other during the discovery phase. After building the tree, the publisher sends the topic instances along the tree. Since topics may have different destinations, the multicast trees should be constructed for each topic.

Now, we take an example in Fig. 4 to show how the DDS router performs the overlay multicast. Let?s say that there are four network domains, and four routers are connecting to each network domain and the WAN (i.e., cloud in the figure). Using link cost between routers given in the Fig. 4 (a) we can make a link cost graph as shown in the Fig. 4 (b). We assume that in R1?s domain there is a publisher and the objective is to minimize the sum latency. The multicast tree can be built as shown in Fig. 4 (d) and the topic may flow along the paths in Fig. 4 (c). Though the routers are connected via full-mesh, R3 does not receive the topic instances from R1 directly.

Instead, R3 may receive the instances being forwarded from R2. We note that the object function and definitions of link costs for constructing multicast tree can be varied according to the network environment and QoS requirements.

R1  R4  R2  R3      (a) Network topology with given link costs  R1  R4  R2  R3      (b) Graph representation  R1  R4  R2  R3       (c) Actual transmission path  R1  R4  R2  R3      (d) Overlay multicast tree  Fig. 4. An example of the overlay multicast. The DDS router constructs an overlay multicast tree using the link costs. After building the tree, routers share the result and transmit the topic instances along the tree.



IV. PERFORMANCE EVALUATION  A. Setting  We implement two systems with and without the proposed DDS router on the NS-3 simulator to analyze and compare the performance. Fig. 5 shows the network topology used in the simulation. We set four network domains with routers and assume that one publisher in the network domain1 publishes topic instances to all other nodes in the network. We mea- sure following two metrics as our performance metrics and summarize the parameters used in the simulation in table I.

? latency: average time from the publisher sending a mes- sage to the subscribers receiving it.

? the number of messages: the number of messages gen- erated during the simulation. The messages include both TCP and DDS related messages such as topic instances, HeartBeat, ACKNACK and aggregate ACKNACK.

Router 1 Router 2  Router 3Router 4  LAN 2  ?  LAN 3  ? LAN 4  ?  LAN 1  publisher  Fig. 5. Network topology used in the simulation. There are four network domains with routers, and one publisher in the network domain1 publishes a topic to all other nodes.

Parameter Value Link bandwidth of LAN 100Mbps Link bandwidth of WAN 1Gbps  Traffic type CBR Topic size 1024 (B)  ACKNACK size 40 (B) HeartBeat size 50 (B)  HeartBeat interval sample interval sample interval 1 (s)  Simulation duration 11 (s) sample generation from 1 to 10 (s)  TABLE I NS-3 SIMULATION PARAMETERS  B. Scalability  In the first simulation, we vary the size of subscribers per network domain from 20 to 100 and measure the latency. We assume that all links are error-free. Fig. 6 shows the result.

We can see that the latency of each system increases with the number of subscribers. In particular, the legacy system suffers from the high latency due to the many one-to-one TCP connections between publisher and subscribers. Meanwhile, in the proposed system, the DDS router can reduce the number of TCP connections (e.g., for the case of 100 subscribers, the publisher requires 300 TCP connections in the legacy system, while only three TCP connections in the proposed one.), and it delivers much faster via the overlay multicast. As a result, the proposed system can obtain the latency gain of average 1ms over the legacy system without DDS router.

In the second simulation, we measure the number of mes- sages of two systems and illustrate the result in Fig. 7. Similar to the result of the first simulation, the proposed system outperforms the legacy system in term of the number of total generated messages due to the overlay multicast and local recovery of DDS routers.

Through two simulation results, we summarize that the proposed system can provide an efficient data distribution service in terms of the scalability.

C. Robustness  To evaluate how well the local recovery of the DDS router can handle the link failure, we conduct a simulation with        20 40 60 80 100  L at  en cy  (m s)  # of subscribers per network domain  Proposed Legacy  Fig. 6. Latency result according to the number of subscribers per network domains. The proposed system can obtain the latency gain of average 1ms over the legacy system without DDS router.

20 40 60 80 100  # of  m es  sa ge  s ( x  1,  0)  # of subscribers per network domain  Proposed Legacy  Fig. 7. The number of messages according to the number of subscribers per network domains. The overlay multicast and local recovery of DDS routers can reduce the number of messages.

different link failure probabilities. Fig. 8 shows the latency result according to the link error probabilities. Because the latency is mainly affected by the link status and retransmission, in all cases the latency gets worse with the link error. However, the curve of the proposed system increases smoothly than the legacy system in spite of the high link error. In the legacy system, retransmissions are delayed because the link error causes the loss of ACKNACKs and HeartBeats. On the other hand, the proposed system obtains the latency gain via faster retransmissions based on the local recovery. When the link error changes from 0.8 to 0.9, the performances of two systems           0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9  L at  en cy  (m s)  Link error prob.

Proposed Legacy  Fig. 8. Latency result according to link error probabilities. The proposed system obtains the latency gain via faster retransmissions based on the local recovery.

get worse significantly. We figure it out that this is just due to the random characteristics of the simulation, not including any important meaning.



V. RELATED WORK  A lot of vendors are working on developing DDS [2]?[7].

While the DDS API standard defines many profiles there still are no specific definition of the DDS router. Some vendors provide routing services over WAN as an option, but their strategies are not optimized very well. The key difference of our design is that it can boost the system performance using the local recovery and overlay multicast while keeping the semantics of the DDS.

The reliable multicast is a well-investigated research area.

Many proposals try to enhance the scalability of the system via addressing the message implosion problem and exploiting the local recovery. Among them, the tree based protocols are known for their high efficiency [8]?[14]. However, its cost to manage a multicast group is also high. SRM [15] is robust to link failure and provides more scalable multicast than other protocols. But it may incur great overhead due to the unnecessary messages. Since all aforementioned protocols need supports from multicast enabled routers and work on UDP/IP, we cannot adopt them into our network environment.

Recently, the overlay multicast protocols also have been received much interest, because they can overcome the limi- tation of topology-specific constraints (e.g., multicast-enabled routers) [16], [17]. But the nature of end-to-end transmission of overlay multicast requires many modifications in the current DDS system. In contrast, we appropriately apply the overlay multicast for the transmission between routers so that the other DDS entities need not any changes.



VI. CONCLUSION  In this paper, we propose a router design for DDS, which provides an efficient data distribution over WAN. The pro- posed DDS router boosts the system performance using the local recovery and overlay multicast, while keeping the se- mantics of the DDS. Through the NS-3 simulations, we show that the system with the DDS router obtains the significant performance gain in terms of the scalability and robustness.

ACKNOWLEDGEMENT  This work was supported by the IT R&D Program of MSIP/KEIT [10035708, ?The Development of CPS (Cyber- Physical Systems) Core Technologies for High Confidential Autonomic Control Software?].

