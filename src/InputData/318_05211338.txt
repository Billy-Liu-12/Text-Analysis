

Abstract? Protein sequence motifs information is crucial  to the analysis of biologically significant regions.  The conserved regions have the potential to determine the role of the proteins.  Many algorithms or techniques to discover motifs require a predefined fixed window size in advance.

Due to the fixed size, these approaches often deliver a number of similar motifs simply shifted by some bases or including mismatches.  To confront the shifted motifs problem, we cooperate the Super-Rule-Tree (SRT) concept, which is designed for solving the mismatched motifs problem, and propose a new Positional Association Rules algorithm.  In Positional Association Rules algorithm, a new parameter named distance assurance is created to search frequent distances appearing in association rules.  By analyzing the motifs results generated by our approach on our dataset, we provide the optimal minimum support, confidence, and distance assurance.  We believe the Positional Association Super- Rules algorithm can play an important role in similar researches which requires predefined fixed window size.

Index Terms? Positional Association Rules, Super-rules, protein sequence motif.



I. INTRODUCTION rotein sequence motifs are gathering more and more  attention in the field of sequence analysis.  These recurring patterns have the potential to determine a protein?s  conformation, function, and activities.  In order to identify these motifs, most of the enumerative algorithms in Bioinformatics research area need to specify the size of the motif in advance.  Because of the fixed size, they often deliver a number of similar motifs (1)including mismatches or (2)shifted by one base [1], which is problematic.  The first problem implies that some group motifs may be similar to one another.  The second problem probably can be more easily seen in this way: If there exists a biological sequence motif with length of 12 and we set the window size to 9, it is highly possible that we discovered two similar sequence motifs where one motif covers the front part of the biological sequence motif and the other one covers the rear part.  We dealt with the first problem in [2] and then we manage the second one by proposing Positional Association Super-Rules algorithm in this paper.  To solve the second problem, Jensen et al [3] proposed a clique enumeration approach to link up the clusters they found.  Since clique enumeration is a NP-  complete [4] problem, while dealing with large number of clusters, the computational cost will be high.  We introduce a new algorithm called Positional Association Rule, with Apriori concept, to confront the second problem caused by fixed window size.

The notion of the association rule was proposed to capture the cooccurrence of items in transactions [5].  There are many improvements or advanced association rules algorithms [6- 10].  An interesting extension to the association rule in the Bioinformatics area is regarding each DNA/protein sequence as a transaction and sequence motifs as items which appear in the transactions.  A couple of papers apply association rules in this manner [11, 12].  One special property occurs if we treat DNA/protein sequence as a transaction: the transaction itself exist an ordering relation.  Therefore, if we try to map the protein sequence motifs (items) onto the protein sequences (transactions), we may obtain the order of the occurring motifs.  Icev et al[11] had successfully incorporated this idea into their Distance-Enhanced association rules algorithm.

They use the coefficient of variation of distances (cvd) [13] concept to determine whether similar distances occur among pair of motifs.  The cvd of a pair of motifs with respect to a collection of motifs is the ratio between the standard deviation and the mean of the distances between the motifs in those promoter regions that contain all the motifs [11].  However, to the best of our knowledge, there is no association rule algorithm that has the ability to tell what the exact distance among frequent itemsets is.  For example, if motif A occurs, after 3 positions, motif B occurs.  In this paper, we propose a new Positional Association Rules algorithm to search not only the frequent itemsets but also the distance between them.

In our previous work [14], we identified 343 high quality protein sequence motifs which transcend protein family boundaries.  Based on the fact that some motifs maybe similar to one another, we try to further discover the relation between these motifs.  Therefore, the Positional Association Rules Algorithm is applied to discover the association between motifs and motifs as well as the distances among those.

The rest of the paper is organized as follows.  Section 2 proposes the Positional Association Rules algorithm.  Section 3 discusses how we setup the experiment with the new algorithm. Results and conclusions are given in section 4 and section 5.

Mining Positional Association Super-Rules on Fixed-Size Protein Sequence Motifs  Bernard Chen1 and Sinan Kockara1 1 University of Central Arkansas, Computer Science Department, USA  Email: bchen3@cs.gsu.edu  P   DOI 10.1109/BIBE.2009.11

II. POSITIONAL ASSOCIATION RULE ALGORITHM The basic association rule gives the information of A => B.

However, under the circumstances of the ?order? involved with the appearance of items, the basic association rule is not powerful enough.  For example, in our research, the information we need is not only limited in ?If motif A appears in a protein sequence, then motif B also appears? but also considers ?the information of the distance between motif A and B in the sequence.?  Therefore, the conventional support and confidence is not enough.  In this paper, we introduce another parameter called ?distance assurance? to help identify frequent item with frequent distance, and it is applied after the strong association rules are obtained, rules that pass the check of minimum support and confidence.

To define the Positional Association Rule formally, I = {Ii, i=1,?, m} be a set of items.  A transaction database T is a set of transactions, where each transaction t is a set of items that t ? I. A positional association rule is an implication of the form YX ? and YX  d ? , where X and Y both belong to I,  and X ? Y equals empty.  The support and confidence for an association rule YX ?  are defined as follows:    ( )YXSupport ?  = T  YX ? (1)  )( YXConfidence ? = X  YX ? (2)   Where |T| is the total number of transactions, |X| is the  number of transactions in T that contains at least one X, |X ? Y| is the number of the transactions in T that contain both X and Y.  The newly proposed ?distance assurance? is defined as:    =? )(. YXAssuranceDis d  X  YX d  ? (3)   Where ||X|| is the total number of times that X appears in T,  d indicates the distance, -? < d < ?. Where X d ? Y denotes  ?if X appears, then after the distance of d, Y appears,? ||X d  ? Y|| is the total number of times in T that when X occurs and after the distance of d, Y occurs.  The problem of mining positional association rules lies in searching all positional association rules that have their value of support, confidence and distance assurance higher than pre-defined minimum support, minimum confidence and minimum distance assurance.

To compute the Positional Association Rule, we need to search frequent itemsets first.  Thus, we need to compute support and confidence by the traditional association rule.

After we identify strong frequent itemsets, we work on looking for frequent distances between two frequent itemsets.

We may consider each protein sequence as a transaction and each sequence motif as an item.  Figure 1 shows the pseudocode for the Positional Association Rule with the Apriori concept.

Figure 1 The Pseudocode of Positional Association Rule with the  Apriori concept   Step 1 of the Positional Association Rule algorithm finds all of the frequent itemset, L, from the whole database.  Step 2 discovers all strong association rules, S, which indicates the rules that pass both the minimum support and the minimum confidence check.  Since the Apriori algorithm to find strong association rules is well developed [5, 6], we have skipped the details of how to find strong association rules in the Figure 2 to save the space.  In step 3 to 16, for each strong association rule, it tries to find if there exists a fixed distance between the antecedent and the consequent of the rules.  The algorithm begins searching the strong association rules with two itemsets, S2, to the maximum number of itemsets, Sk (Step 3).

The idea is that we start exploring the specific distance in the strong association rules with a lower number of itemsets, then we search on the association rules with a higher number of itemsets, we may use the obtained information to facilitate the search process.  For each association rule, r, in all Sk (step 4), the rules are in the form of antecedent_itemset => consequent_itemset.  We use r_ant and r_con to represent those, respectively.  The Apriori_Motif_Construct procedure is used for constructing new motifs if necessary and possible.

It takes either r_ant or r_con as parameter.  If the input contains only one item (step 1), it indicates it is not necessary to generate a new motif information since it is already existed; therefore, it returns input itself (step 2).  If the input contains more than one item, it is necessary to construct a new motif (step 3) if possible.  The program needs to search all positional association rules that the sum of antecedent and consequent items equal to the number of input items (step 4).  If there is a match (step 5), the procedure returns the new motif information based on the found positional association rule (step 6).  Otherwise, the procedure returns NULL in the end of the search.

Step 5 to 8 of the main program is where Apriori concept implemented.  Step 5 and 6 call the Apriori_Motif_Construct procedure to obtain the motif information for r_ant and r_con.  If either Apriori_Motif_Construct(r_ant) or Apriori_Motif_Construct(r_con) returns Null (step 7),  it indicates that the positional association rule of either antecedent or consequent of the rule can not be found; therefore, we may not treat either one of those as ?one? single larger motif.  Thus, we cannot find any specific distance for the rule we are working on, so we may test the next strong association rule (step 7).  If both antecedent_motif and consequent_motif can be contracted, we search every position of all protein sequences (step 9 and 10).  Once we find that the antecedent_motif appears starting on the protein sequence position that we are looking at, we increase the count of antecedent appearing by one (step 11 and 12).  And then we search for the appearance of consequent motif on every position of the same protein sequence that we found antecedent motif (step 13).  If the consequent occurs, we calculate the distance between antecedent and consequent of the rule and increase one count of the distance (step 14 ? 16).

After the scan of all protein sequences, if some distance counts are greater than the threshold, which is the minimum distance assurance multiply the number of time the antecedent occurs, we may include the distance to the strong association rule and form the Positional Association Rule (step 17).  In order to give a clear explanation of the pseudocode, we include the following example.



III. EXPERIMENT SETUP  A. Dataset The original dataset used in this work includes 2710 protein  sequences obtained from Protein Sequence Culling Server (PISCES) [15]. It is the dataset that we used in [14, 16-18] to generate protein sequence motifs.  No sequence in this database shares more than 25% sequence identity. The frequency profile from the HSSP [19] is constructed based on the alignment of each protein sequence from the protein data bank (PDB) where all the sequences are considered homologous in the sequence database. For the frequency profiles (HSSP) representation for sequence segments, each position of the matrix represents the frequency for a specified amino acid residue in a sequence position for the multiple sequence alignment.  We also obtained secondary structure from DSSP [20], which is a database of secondary structure assignments for all protein entries in the Protein Data Bank.

DSSP originally assigns the secondary structure to eight different classes. In this paper, we convert those eight classes into three based on the following method: H, G and I to H (Helices); B and E to E (Sheets); all others to C (Coils).

343 different sequence motifs with window size of nine generated from original dataset [14] are included in this paper.

Each window corresponds to a sequence segment, which is represented by a 9 ? 20 matrix plus additional nine corresponding representative secondary structure information.

Twenty rows represent 20 amino acids and 9 columns represent each position of the sliding window.

B. Dissimilarity Measure According to [21], the city block metric is more suitable for  this field of study since it will consider every position of the frequency profile equally. The following formula is used to calculate the dissimilarity between two sequence segments:  Dissimilarity= ( ) ( )?? = =  ? L  i  N  j ck jiFjiF  1 1 ,,  Where L is the window size and N is 20 which represent 20 different amino acids. Fk(i,j) is the value of the matrix at row i and column j used to represent the sequence segment. Fc(i,j) is the value of the matrix at row i and column j used to represent the centroid of a give sequence cluster.  The lower dissimilarity value is, the higher similarity two segments have.

C. Structural Similarity Measure Cluster?s average structure is calculated using the following  formula:   ws  ppp ws  i CiEiHi?  =1 ,,, ),,max(    Where ws is the window size and Pi,H shows the frequency of occurrence of helix among the segments for the cluster in position i. Pi,E and Pi,C are defined in a similar way. If the structural homology for a cluster exceeds 70%, the cluster can be considered structurally identical [19]. If the structural homology for the cluster exceeds 60% and lower than 70%, the cluster can be considered weakly structurally homologous [21].

D. Mapping the Motifs (Items) onto the Protein Sequences (Transactions)  In order to identify the motif appearance in protein sequences, we use the sliding window technique with window size nine on each protein sequence to match with the motifs.

If the dissimilarity is lower than some thresholds, we indicate the motif appears on the position.  The threshold we setup includes two criteria: 1. the value of dissimilarity should be no more than 540 after the computation of the equation (4); 2.

The sliding window segment on the protein sequence should have more than 6 positions that match with the motif?s representative secondary structure.

E. HSSP-BLOSUM62 Measure BLOSUM62 is a scoring matrix based on known  alignments of diverse sequences.  By using this matrix, we may tell the consistency of the amino acids appearing in the same position of the motif information generated by our method. Because different amino acids appearing in the same position should be close to each other, the corresponding value in the BLOSUM62 matrix will give a positive value.  For       example, if the rule indicates amino acid A1 and A2 are two elements frequently appear in some specific position; A1 and A2 should have similar biochemical property.  Hence, the measure is defined as the following:   If k = 0:          HSSP-BLOSUM62 measure = 0 Else If k = 1:  HSSP-BLOSUM62 measure = BLOSUM62 ij Else:           HSSP-BLOSUM62 measure =  ? ?  ? ? ?  = +=  ?  = +=  ?  ??   1 1   1 1   k  i  k  ij ji  k  i  k  ij ijji  HSSPHSSP  BLOSUMHSSPHSSP   k is the number of amino acids with frequency higher than a  certain threshold in the same position ( in this paper, 8% is the threshold).  HSSPi indicates the percent of amino acid i appearing.  BLOSUM62ij denotes the value of BLOSUM62 on amino acid i and j.  The higher HSSP-BLOSUM62 value indicates more significant motif information.  When k equals zero, it indicates that there is no amino acids appearing in the specific position, so the value for this measure is assigned zero.  While k equals one, it indicates that there is only one amino acid appearing in the position.  In this case, we assign the corresponding amino acid?s diagonal value in BLOSUM62.

F. HSSP-BLOSUM62 Gain In order to evaluate the cluster results, we proposed an  evaluation method called ?HSSP-BLOSUM62 GAIN? in [2].

The idea comes from the fact that when we use Positional Association Rule algorithm to link two or more motifs, we cannot gain or lose any secondary structure similarity on each position of the new motif.  This is because the computation of secondary structure similarity on each position considers all participated members; therefore, the value simply equals the average value.  Under the circumstance of not sacrificing secondary structure similarity, we use the Positional Association Rules algorithm to expand fixed window size  motifs and try to maximize the increase of HSSP-BLOSUM62 value.  Thus, the ?HSSP-BLOSUM62 GAIN? is calculated by the increase of new motif?s overall HSSP-BLOSUM62 value minus the average of all participated motifs? overall HSSP- BLOSUM62 value.



IV. RESULTS  A. Mining Positional Association Super-Rules on Fixed-Size Protein Sequence Motifs  In order to obtain the DNA/protein sequence motifs information, fixing the length of sequence segments is usually necessary.  However, two major problems may occur: several motifs may look alike to each other with some mismatches, or similar motifs may have shifted some residues.  In [2], we dealt with the first problem by constructing a Super-Rule-Tree structure, and we confront the second one in this subsection.

Since the average size of Helixes is 10 [21], we believe the situation of the second problem will likely to happen in our dataset. This problem is the motivation for us to create and apply the Positional Association Rules algorithm.

We fade all 343 motifs into Positional Association Rules algorithm as items and match those onto 2710 sequences.

However, the rules we obtained are mostly BA  ? .  This result  can be easily understood by look at Figure 2, the SRT structure showed in our previous work [2].  Many rules are similar to one another, while matching the motifs onto the sequences, motifs that are alike will all be marked on the same position.  So when we try to find the positional association rules, the rules like ?when motif A appears, motif B also appears on the same position? occur in majority.  Another difficulty with association rules algorithm is notorious in generating redundant rules.  As a result, we came up with an idea that instead of mining positional association rules on all motifs, we fade in level-1 super-rules instead.  It is like a pre- process step before running the algorithm to reduce the number of redundant rules and this may also solve the 0- distance problem.

Figure 2 The Super-Rule-Tree (SRT) of 343 different sequence motifs showed in [2]              Table 1 The relation between the parameters setup and HSSP-BLOSUM62 GAIN   Support Confidence Distance Confidence  number of 2-itemset Rules  Total HSSP- BLOSUM62 GAIN  Ave. HSSP- BLOSUM62 GAIN  number of 3-itemset Rules  Total HSSP- BLOSUM62 GAIN  Ave. HSSP- BLOSUM62 GAIN  7.5% 60% 40% 158 -16.32 -0.103 1258 -374.01 -0.297 50% 81 -4.05 -0.05 383 -102.86 -0.269 60% 38 4.86 0.128 79 -10.17 -0.129 70% 19 5.96 0.314 33 -1.24 -0.038 80% 8 4.47 0.559 6 0.62 0.103 90% 2 3.39 1.695 0 0 0 70% 40% 114 -9.32 -0.08 713 -213.56 -0.300 50% 66 -0.87 -0.013 256 -71.47 -0.279 60% 37 5.26 0.142 73 -7.44 -0.101 70% 19 5.96 0.313 33 -1.24 -0.038 80% 8 4.47 0.559 6 0.61 0.102 90% 2 3.39 1.695 0 0 0 80% 40% 47 1.01 0.02 162 -40.93 -0.253 50% 38 3.7 0.097 98 -22.85 -0.233 60% 28 5.84 0.209 52 -8.82 -0.170 70% 18 6.1 0.339 28 -2.94 -0.105 80% 8 4.47 0.559 6 0.62 0.103 90% 2 3.39 1.695 0 0 0 10% 60% 40% 122 -21.56 -0.177 85 -285.22 -0.334 50% 61 -6.75 -0.110 237 -75.45 -0.318 60% 25 3.79 0.152 32 -2.82 -0.088 70% 12 4.76 0.397 10 2.56 0.256 80% 7 4.49 0.641 3 1.77 0.59 90% 2 3.39 1.695 0 0 0 70% 40% 91 -12.94 -0.142 505 -160.87 -0.319 50% 49 -3.35 -0.068 149 -44.01 -0.295 60% 25 3.79 0.152 30 -1.24 -0.041 70% 12 4.76 0.397 10 2.56 0.256 80% 7 4.49 0.641 3 1.77 0.59 90% 2 3.39 1.695 0 0 0 80% 40% 37 -0.63 -0.017 99 -23.76 -0.24 50% 30 2.08 0.069 52 -11.09 -0.213 60% 20 4.21 0.211 17 -0.47 -0.028 70% 12 4.76 0.397 7 1.86 0.266 80% 7 4.49 0.641 3 1.77 0.59 90% 2 3.39 1.695 0 0 0 12.5% 60% 40% 99 -19.96 -0.202 491 -174.8 -0.356 50% 48 -5.08 -0.106 157 -51.26 -0.327 60% 20 3.4 0.17 25 -2.07 -0.083 70% 9 4.12 0.458 8 1.51 0.189 80% 6 4.49 0.748 3 1.77 0.59 90% 2 3.39 1.695 0 0 0 70% 40% 73 -10.82 -0.148 257 -78.71 -0.306 50% 38 -1.374 -0.036 91 -20.35 -0.224 60% 20 3.4 0.17 23 -0.49 -0.021 70% 9 4.12 0.458 8 1.51 0.189 80% 6 4.49 0.748 3 1.77 0.59 90% 2 3.39 1.695 0 0 0 80% 40% 29 -0.37 -0.013 48 -9.39 -0.196 50% 23 2.52 0.110 35 -6.94 -0.198 60% 16 3.98 0.249 14 0.13 0.009 70% 9 4.12 0.458 7 1.86 0.266 80% 6 4.49 0.748 3 1.77 0.59 90% 2 3.39 1.695 0 0 0                     The first, second, and third column of Table 1 indicate the  setup parameters of the minimum support, minimum confidence and minimum distance confidence, respectively.

The fourth column shows the number of 2-item positional association rules that are generated based on the parameters.

The fifth column gives the total HSSP-BLOSUM62 GAIN of all generated rules.  The sixth column presents the average HSSP BLOSUM62 GAIN for each rule.  Column Seventh through ninth shows similar trends to column fourth through sixth for 3-item positional association rules.  Analyzing the data given in Table 1, we realize that if we setup a higher threshold, the number of generated rules decrease and the quality of the rules increase.  More importantly, under the same minimum support and confidence, if we give a more strict minimum distance confidence, the situation follows the same trend.

Since we do not wish for either situation (1) the whole process generates only one or two top most quality rules or (2) the whole process generates hundreds of meaningless rules.

The value of ?Total HSSP-BLOSUM62 GAIN? is designed to find a trade-off between the numbers of generated positional association rules and the quality improvement.  The higher Total HSSP-BLOSUM62 GAIN, the more meaningful positional association rules is generated.  Figures 3 to 8 are the interpretation of Table 1 in terms of total HSSP-BLOSUM62 GAIN and different parameter values.  By analyzing the figures, we made note that the highest Total HSSP-BLOSUM GAIN always happens when minimum distance assurance equals 70%.

-20  -15  -10  -5     40% 50% 60% 70% 80% 90%  Minimum Distance Confidence (%)  H SS  P- B  LO SU  M  G A  IN  Conf idence=60% Conf idence=70% Conf idence=80% Figure 3 The relation between Total HSSP-BLOSUM62 GAIN and  different parameter setup (minimum confidence and minimum distance confidence) when minimum support equals 7.5% on 2-  itemset positional association rules results.

-400 -350 -300 -250 -200 -150 -100  -50   40% 50% 60% 70% 80% 90%  Minimum Distance Confidence  H SS  P- B  LO SU  M  G A  IN  Conf idence=60% Confidence=70% Confidence=80% Figure 4 The relation between Total HSSP-BLOSUM62 GAIN and  different parameter setup (minimum confidence and minimum distance confidence) when minimum support equals 7.5% on 3-  itemset positional association rules results.

-25  -20  -15  -10  -5     40% 50% 60% 70% 80% 90%  Minimum Distance Confidence (%)  H SS  P- B  LO SU  M  G A  IN  Confidence=60% Conf idence=70% Confidence=80%   Figure 5 The relation between Total HSSP-BLOSUM62 GAIN and different parameter setup (minimum confidence and minimum distance confidence) when minimum support equals 10% on 2-  itemset positional association rules results.

-400 -350 -300 -250 -200 -150 -100 -50   40% 50% 60% 70% 80% 90%  Minimum Distance Confidence  H SS  P- B  LO SU  M  G A  IN  Confidence=60% Confidence=70% Confidence=80%   Figure 6 The relation between Total HSSP-BLOSUM62 GAIN and different parameter setup (minimum confidence and minimum distance confidence) when minimum support equals 10% on 3-  itemset positional association rules results.

-25  -20  -15  -10  -5     40% 50% 60% 70% 80% 90%  Minimum Distance Confidence (%)  H SS  P- B  LO SU  M  G A  IN  Confidence=60% Confidence=70% Confidence=80%   Figure 7 The relation between Total HSSP-BLOSUM62 GAIN and different parameter setup (minimum confidence and minimum  distance confidence) when minimum support equals 12.5% on 2- itemset positional association rules results.

-200  -150  -100  -50    40% 50% 60% 70% 80% 90%  Minimum Distance Confidence  H SS  P- B  LO SU  M  G A  IN  Confidence=60% Confidence=70% Confidence=80% Figure 8 The relation between Total HSSP-BLOSUM62 GAIN and  different parameter setup (minimum confidence and minimum distance confidence) when minimum support equals 12.5% on 3-  itemset positional association rules results.

Table 2 The relation between the different minimum support setup and HSSP-BLOSUM62 GAIN Support Confidence Distance  Confidence number of 2-itemset Rules  Total HSSP- BLOSUM62 GAIN  Ave. HSSP- BLOSUM62 GAIN  number of 3-itemset Rules  Total HSSP- BLOSUM62 GAIN  Ave. HSSP- BLOSUM62 GAIN  5% 60% 70% 24 6.79 0.283 37 0.43 0.012 6%   22 6.75 0.307 33 -1.24 -0.038 7%   19 5.96 0.313 33 -1.24 -0.038 8%   19 5.96 0.313 28 -1.41 -0.052 9%   17 5.91 0.348 17 1.79 0.105 10%   12 4.76 0.397 10 2.56 0.256 11%   10 4.03 0.403 9 2.87 0.319 12%   10 4.03 0.403 8 1.51 0.189 13%   9 4.12 0.458 8 1.51 0.189 14%   9 4.12 0.458 7 1.60 0.229 15%   7 3.99 0.570 0 0 0     0.1  0.2  0.3  0.4  0.5  0.6  5% 6% 7% 8% 9% 10% 11% 12% 13% 14% 15%  Support  A ve  ra ge  H SS  P- B  LO SU  M  G A  IN   Figure 9 The relation between Average HSSP-BLOSUM62  GAIN and different minimum support setup on 2-itemset position association rules    -0.1  -0.05   0.05  0.1  0.15  0.2  0.25  0.3  0.35  5% 6% 7% 8% 9% 10% 11% 12% 13% 14% 15%  S uppor t   Figure 10 The relation between Average HSSP-BLOSUM62  GAIN and different minimum support setup on 3-itemset position association rules   After 69 level-1 super-rules are generated, since the  number of super-rules is still large, we perform another HHK clustering on it.  Figure 3 is the analysis of when to stop the Hierarchical clustering.  Based on Figure 3, we run Hierarchical clustering algorithm for 61.19% and it generates 11 clusters.  In the end, we construct a SRT as shown in Figure 4.

In order to understand the effect on the minimum support setup, we fix the minimum confidence and distance confidence and change minimum support from 5% to 15%.

Table 7.2 gives the experimental results of this change and figure 9, 10 is the interpretation of table 2.  We can realize that for 2-itemset rules, higher support generates fewer  numbers of rules with higher Average HSSP-BLOSUM62 GAIN.  Nevertheless, since 3-itemset rules link three different motifs which is a more complicated situation, it shows a peak on the Average HSSP-BLOSUM62 GAIN while minimum support equals 11%.

B. Sequence Motifs linked by Positional Associational Super-Rules Based on our experimental results, we show some  positional association rules in this section.  The following format is used in the 2-itemset example:   ? The first row shows the positional association rule ? The second row gives the Support, Confidence, and  Distance Assurance of the rule.

? The third row illustrates the antecedent motif of the  positional association rule.

? The fourth row illustrates the consequent motif of the  positional association rule.

? The last row gives a picture of positional association  rule?s final product.

Figure 11 Positional Association Rule 946  ?            The following format is used in the 3-itemset example:  ? The first row shows the positional association rule ? The second row gives the Support, Confidence, and  Distance Assurance of the rule.

? The third and fourth row illustrates the antecedent  motif of the positional association rule.

? The fifth row illustrates the consequent motif of the  positional association rule.

? The last row gives a picture of positional association  rule?s final product.

Figure 13 Positional Association Rule 2)421(  12 ? ??

V. CONCLUSION In this paper, we propose some novel ideas: (1) we  propose a novel association rules scheme named Positional Association Rules Algorithm.  Distance assurance is created for searching frequent distance among frequent itemsets.

(2) We combine Positional Association Rule algorithm with super-rule concept by feeding level one super-rules as the input to confront the problems caused by fixed window sizes.  (3) The ?HSSP-BLOSUM62 GAIN? measurement is applied to evaluate the optimal parameters setup.   After a series of experiments, we give a detailed analysis of data and conclude the optimal parameters setup.  Although the works described in this paper are merely based on protein primary structure computation, the results are also meaningful to protein secondary structure as well as biochemical point of view.  We believe many further researches can be derived from this work.



VI. REFERENCES 1.  Ohler, U. & Niemann, H. (2001) Identification and analysis of eukaryotic promoters: recent computational approaches, Trends in Genetics. 17, 56-60.

2.  Chen, B., He, J., Pellicer, S. & Pan, Y. (2008) Protein Sequence Motif Super-Rule-Tree (SRT) Structure Constructed by Hybrid Hierarchical K- Means Clustering Algorithm, Bioinformatics and Biomedicine, 2008.

3.  Jensen, K. L., Styczynski, M. P., Rigoutsos, I. & Stephanopoulos, G. N.

(2006) A generic motif discovery algorithm for sequential data, Bioinformatics. 22, 21-28.

4.  Garey, M. R. & Johnson, D. S. (1979) Computers and Intractability: A Guide to the Theory of NP-Completeness, WH Freeman & Co. New York, NY, USA.

5.  Agrawal, R., Imielinski, T. & Swami, A. (1993) Mining association rules between sets of items in large databases, ACM SIGMOD Record. 22, 207-216.

6.  Agrawal, R. & Srikant, R. (1994) Fast algorithms for mining association rules, Proc. 20th Int. Conf. Very Large Data Bases, VLDB.

1215, 487499.

7.  Han, J. & Fu, Y. (1999) Mining multiple-level association rules in large 798-805.

8.  Kuok, C. M., Fu, A. & Wong, M. H. (1998) Mining fuzzy association rules in databases, ACM SIGMOD Record. 27, 41-46.

9.  Srikant, R. & Agrawal, R. (1996) Mining Sequential Patterns: Generalizations and Performance Improvements, Advances in Database Database Technology, Avignon, France, March 25-29, 1996: Proceedings.

10.  Zaki, M. J. (2000) Sequence mining in categorical domains: incorporating constraints, Proceedings of the ninth international conference on Information and knowledge management, 422-429.

11.  Icev, A., Ruiz, C. & Ryder, E. F. (2003) Distance-Enhanced Association Rules for Gene Expression, 3rd ACM SIGKDD workshop on Data Mining in Bioinformatics, 34-40.

12.  Kam, H. J., Lee, D. & Lee, K. H. (2003) Mining and interpretation of association rules among protein sequence motifs, Engineering in Medicine and Biology Society. Proceedings of the 25th Annual International Conference of the IEEE, 3551-3554.

13. Zar, J. H. Biostatistical analysis. 1999, Upper Saddle River, NJ 14.  Chen, B., Tai, P. C., Harrison, R. & Pan, Y. (2006) FGK Model: An Efficient Granular Computing Model for Protein Sequence Motifs Computational and Systems Biology (CASB), Dallas.

15.  Wang, G. & Dunbrack, R. L. (2003) PISCES: a protein sequence culling server in Bioinformatics pp. 1589-1591, Oxford Univ Press, 16.  Chen, B., Pellicer, S., Tai, P. C., Harrison, R. & Pan, Y. (2007) Super Granular SVM Feature Elimination (Super GSVM-FE) Model for Protein Sequence Motif Informnation Extraction, Computational Intelligence and Bioinformatics and Computational Biology, 2007. CIBCB'07. IEEE Symposium on, 317-322.

17.  Chen, B., Pellicer, S., Tai, P. C., Harrison, R. & Pan, Y. (2007) Super Granular Shrink-SVM Feature Elimination (Super GS-SVM-FE) Model for Protein Sequence Motif Information Extraction, Bioinformatics and Bioengineering, 2007. BIBE 2007. Proceedings of the 7th IEEE 18.  Chen, B., Tai, P. C., Harrison, R. & Pan, Y. (2006) FIK Model: Novel Efficient Granular Computing Model for Protein Sequence Motifs and Structure Information Discovery, BioInformatics and BioEngineering, 2006. BIBE 2006. Sixth IEEE Symposium on, 20-26.

19.  Sander, C. & Schneider, R. (1991) Database of homology-derived protein structures and the structural meaning of sequence alignment, Proteins: Structure, Function & Genetics. 9, 56-68.

20.  Kabsch, W. & Sander, C. (1983) Dictionary of protein secondary structure: Pattern recognition of hydrogen-bonded and geometrical features, Biopolymers. 22, 2577-2637.

