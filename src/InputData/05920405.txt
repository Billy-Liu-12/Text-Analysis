An Improved Algorithm with Key Attributes  Constraints for Mining Interesting Association Rules

Abstract?Computer logs are generated by application activities, network accesses and system audit, which are important data sources for user pattern mining, computer forensic analysis, in- trusion detection analysis and outlier detection. Algorithms for mining association rule are useful methods to find interesting rules implied in large computer log data. But existing algorithms which based on confidence and support are unfit for mining computer log data, many uninteresting rules will be generated and useful rules will be shadowed. To solve this problem, the concept of key attributes of network log data is introduced, and an algorithm with key attributes constraints for mining interest- ing association rules in network log data is designed. Experimen- tal result shows that the number of uninteresting rules can be reduced effectively and the validity of rules which mined are im- proved.

Keywords- key attribute; association rule; network log; data mining

I.  INTRODUCTION With the rapidly development of computer technologies and  widely applying of network technologies, tremendous amount of data is accumulated in computer applications, such as scien- tific data, marketing data, financial data and network log. How to efficiently analyze these data and extract patterns represent- ing knowledge implicitly stored in data source becomes more and more important. Although simple statistical techniques and machine learning for data analysis were developed long ago, advance techniques for intelligent data analysis are not yet ma- ture. Data mining is a new generation of information process- ing technology, which is the process of extracting previously unknown and useful information from a large data source. It has been extensively applied to a wide variety of applications like sales analysis, healthcare, manufacturing, financial analysis, etc. A number of studies have been made on efficient data min- ing methods and the relevant applications.

Computer log, which includes records related to whatever activities occurring on an information system. It is a greatly important data source for finding intrusion activities, computer forensic, reporting usage statuses of system resources[1]. But computer log usually is tremendous and hard to analyze by  traditional methods to find useful information implied. The methods of data mining can extract interesting (nontrivial, im- plicit, previously unknown and potentially useful) patterns or knowledge from huge amount of data. So the methods of data mining are fit for analyzing log data to extract implicit informa- tion automatically.

Association rules mining can be used to find correlativity of different log records, and sequence pattern analyzing can be used to find time sequence relationship between different log records. Outlier analyzing can be used to find outlier which different from normal patterns.



II. PROBLEM STATEMENTS  A. Association Rule Mining Among the data mining methods, association rules discov-  ery might be the most studied one. It was introduced by R.

Agrawal and his partners[2-4]. Given a set of transactions, where each transaction is a set of items, an association rule is ex- pressed as:  X Y? , where X and Y are sets of items. The intuitive meaning of such a rule is that transactions of the data source which contain X tend to contain Y. An example of an association rule is: ?25% of transactions that contain beer also contain diapers; 5% of all transactions contain both items?. Here, 25% is called the con- fidence of the rule, and 5% is the support of the rule.

The procedure of mining association rules can be decom- posed into two sub steps:  First, find all combination of items whose support is greater than minimum_support. Call these combination frequent item sets.

Second, use the frequent item sets to generate the desired rules. The general idea is that, if ABCD and AB are frequent item sets, then we can determine whether the rule  AB CD? holds by computing the ratio  ( ) / ( )r support ABCD support AB?            (1)  The rule holds only if ___________________________________     _r minimum confidence??                   (2) Most existing works focus on finding the association rules  among all items in the database that satisfy user-specified minimum_confidence and support. To reduce the number of frequent item sets and times of database scanning, some algo- rithms[5-8] are also proposed, such as AIS, SETM, PARTITION, FUP, Max-Miner, FUFIA, etc. But to the first sub step, Apri- ori[2] is still used to generate candidate item sets.

B. Drawback of Apriori in Network Log Mining In practice, people are often interested in finding associa-  tion rules include only some specified items rather than all items in a query. Meanwhile, based on the search results in former queries, we need to change the minimum confidence and support to obtain suitable number of rules. So we tend to make several consecutive queries with different interested items, minimum confidence and support for potential rules.

After the rules set is generated, people have to identify the interesting rules from the large rules include many uninterest- ing rules.

In network log mining, because records of log may has many different items and the original data source is very large, using the existing association rule mining algorithms will have the following drawbacks:  First, many irrelevant or uninteresting rules will be gener- ated. For example, we choice network log data as the data source to mining association rules. In a log record, some fields such as protocol, source destination, src_port, dest_port, src_bytes, dest_bytes, state and flag are included, shown as in Table I. When using Aproiri to mine association rules, we find some rules such as _ 200src bytes flag SF? ? ?  in the re- sults. But as we know, the number of bytes of a host send to the destination is irrelevant to network connection flag, so it is an uninteresting rule. In this scenario, we get a lot of association rules for all item sets in only partial of which we are really in- terested. These uninteresting rules will puzzle log analyzers.

Second, for generating the candidate frequent item sets, the whole log database and all items of log records need to be scanned several times. It?s very inefficient in considering the big overhead of reading the large database even though only partial items are interesting. In practice, the weight of different fields of log record is different, it?s not necessary to scan all fields several times.

TABLE I.   NETWORK LOG RECORD  field value protocol ftp-data source 18  destination 129.7.1.9 src_port 22 dest_port 45213 src_bytes 212 dest_bytes 0  state SF flag L  Considering these drawbacks described above, we present an improved association rule mining algorithm that can effi- ciently discover the more interesting association rules involv- ing specified fields of record.



III. THE DEFINITION OF KEY ATTRIBUTE  Records of log usually are composed with some different fields. These fields, such as time stamp, source and destination IP address, port number and other information, express the different information about computer system status or network connection. The weight of different field in record is different.

Some fields are key attributes of log records, and other fields are auxiliary. In the network log, every record represents a network connection, which includes some fields shown as in Table I. But as we know, not all the fields are important to describe a network connection activity. In fact, we can de- scribe a network connection by five-tuples, denote as  ?? destPortsrcPortdestIPsrcIPtimestamp ,,,, ,  We call these fields included in five-tuples as key attributes[9].

Definition 1: let },...,,{ 21 nuuuU ?  be a set of attributes which included in a log record, F is the set of functional de- pendency between different fields. For any subset UK? , if U is completely functional dependent on K, we call K is the set of key attribute, for any Kk ? , k is a key attribute.

So, we can use the key attribute to estimate whether an as- sociation rule is interesting or not. The estimation expressed as:  A( ) ( ( ),  ( ),  ( ))I r f I r s r c r?                  (3)  In this expression, s(r) is the minimum support of associa- tion rule r, c(r) is the minimum confidence,  1,   if  rule  includes key attributes 0,  otherwiseA  r I ??    (4)  When a generated rule satisfies s(r), c(r) and IA(r), it?s IA = 1, we regard it as an interesting rule. Otherwise it will be dis- carded.



IV. ALGORITHM WITH KEY ATTRIBUTES CONSTRAINTS  According to the definition of key attribute, an Improved Algorithm with Key attribute Constraints (IAKC) is designed for mining interesting rules in log data. This algorithm tends to mine association rules not only constrained with mini- mum_confidence and support, but also constrained with the set of key attributes. It means when a new rule is generated, it will contain at least one key attribute, those rules without any key attribute, which usually is an uninteresting rule, will be ex- cluded from the result.

Algorithm: IAKC  Input: log database D, the set of key attribute K, mini- mum_confidence c, minimum_support s  Output: the set of rules include key attribute.

1: {large 1 } 1 2:  for( 2; ; ) 3:      apriori_gen( ); 4:      for each transaction include in database 5:          subset( , );  k  k k  T k  L itemset  k L k C L  T D C C T  ?? ?  ? ?  ?  ??  ?  ? ?  6:          for every item of 7:              . ; 8:      { | . }; 9:   end 10:  for every frequent k-itemsets , , then generate subset 11:  for every    T  k K  k  c C ccount  L c C ccount s  l if l K  if ? ? ?  ? ??  ? ? ?  ?  support_count( )        then support_count( )  12:  generate a rule as  ( - ), , 13:  insert the new rule into results R 14:  return R  l c  l c  s ? ? ?  ?  ?

V. PERFORMANCE EVALUATIONS For evaluate the performance of this improved algorithm in  log mining, we compare it with the algorithm of Aproiri. The data source[10] is log data that activities of network connections between Lawrence Berkeley Laboratory and Internet during thirty days are recorded.

We choice protocol, local host , remote host, src_port and dest_port as the set of key attribute, then running two algo- rithms with minimum confidence as 95% and minimum sup- port as 1%, 5% and10%. The result is shown as Figure 1:  Under the fixed minimum_confidence, with the decline of minimum_support, the number of rules generated by Aproiri is increased fast, but the number of rules generated by the im- proved algorithm with key attribute constraints is increased smoothly. In log mining, the source data is so large and every log record is in same format, many rules will be generated in association rule mining. But in the work of log analysis, inter- esting key information is what we needed, not a large rules set.

Figure 1.  Performance Evaluation of Rule Number    On the contrary, more rules will submerge the useful infor- mation. When mining association rules with key attribute con- straints, every rule generated by IAKC will include at least one key attribute, it will help worker analyze log more efficiently.

Analyzing the rule set, we find that many rules are gener- ated by Apriori, but there are many uninteresting rule with the items of state, flag, and bytes send, such as  , 12state SF source flag L? ? ? ? .

These rules are helpless to log analyzing. In rule set gener-  ated by IAKC, the total number of rule is less than Apriori.

But we find every rule includes key attribute, it indicates the relevance between the different attribute. For example, an in- teresting rule is shown as below:  protocol=telnet,destination=192.35.222.222 source=12 It shows that between host 12 and remote host, which IP  address is 192.35.222.222, telnet service occurs frequently. In the original data, we find there are many log records about the telnet service between these two hosts.

The result of performance evaluation shows that the im- proved algorithm with key attribute constraints can find more interesting association rules in log data and can help researcher analyze log more efficiently.

Because with the key attributes constraints, the number of frequent item sets are reduced, and times to scan database also decreased. The result of performance evaluation is shown as Figure 2. The time consumption of algorithm with key attrib- utes constraints is less than Aproiri. This is very important when the algorithm applied to network log analysis, because the data source is very large.



VI. CONCLUSION The purpose of network log mining is to find interesting in-  formation implied in the tremendous number of log data. The validity of rule and time consumption are two important factor to algorithm when it is applied in network log analysis. In this paper, we analyze methods of association rule mining in log data, define key attributes set of network log, then we present an improved algorithm with key attribute constraints to mine more interesting rules. The result of performance evaluation shows the efficiency of this algorithm, not only the number of rules is reduced and the validity of rules is improved, but also time consumption is decreased.

