

Data Visualization for Supporting Query-Based Data Mining  Kentarou Kichiyoshi, Hidehiko Iwasa, Haruo Takemura and Naokazu  Yokoya  Graduate School of In fo rma t ion  Science, Nara Institute of Science and Technology 8916-5 Takayama, Ikoma, Nara, 630-0101 Japan  {kentar-k, iwasa, takemura, yokoya)Qis.aist-nara.ac.jp  A B S T R A C T  This paper proposes a methodology for supporting the process of a query-based data  mining by using visu- alization techniques, The query-based data  mining is one of the important tasks of Knowledge Discovery in Databases (KDD). In the process of a query-based data mining, users hypothesize about patterns in a database and make a query to  confirm the hypothesis. The pro- posed method supports the two aspects of the process, i.e., proposing an initial hypothesis as a query and modifying the hypothesis based on the query result.

In the method, an instance in a database which has several attributes with numerical or nominal values is visualized as a color bar with several color parts which correspond to attribute values. Values of a function which evaluates the utility of a hypothesis are also vi- sualized by using colors. These visualization technique helps users find an initial hypothesis and modify the hypothesis in order to increase the usefulness of it inter- actively. Experimental results show that the proposed method really helps a user find interesting rules in real world databases.

1 I N T R O D U C T I O N  An informal definition of Knowledge Discovery in Databases (KDD) is to find useful and interesting pat- terns in data. Data mining is one of the tasks of KDD and is defined as a method to find a part of data which has interesting common features and to  ac- quire the description of the characteristics of the data [5 ,  6, 8, 19, 251.

Most of data  mining methods that have been pro- posed to achieve the task try to  find interesting pat- terns in databases automatically. In these methods, several functions that evaluate the usefulness score of patterns are employed and the results of the methods strongly depend on such evaluation functions.

To design appropriate evaluation functions is not an easy task. In [l], two functions called support and confidence are used to  find association rules. SupporB represents the wideness of a rule; the percentage of instances that satisfy the rule in a database. Con- fidence indicates the strength of a rule; the percent- age of instances that satisfy the rule within the in- stances that satisfy the condition part of the associa- tion rule. Since these functions are not domain spe- cific, they are widely used in many data mining tools  0-7803-5731-0/99/$10.00 01999 IEEE  [4, 9, 10, 11, 12, 18, 21, 22, 241.

However, these general purpose evaluation func-  tions are not always useful in the scene of the data mining. Data mining systems using these functions often discover trivial patterns in databases that are not interesting for users of the system, simply because users of the database have already known these rules that widely and strongly appear, especially when users are specialist of the contents of the database.

To avoid the problem above, query-based data mining systems have been proposed[2]. Users of a query-based data mining system give a query to the database system as a hypothesis of useful patterns in the database. The database system returns a data  set which satisfies the given query conditions to  users, and users confirm that how strongly and widely the hypo- thetical pattern exists in the database. If the strength or generality of an initial hypothesis is not sufficient, users modify the query and give it t o  the database sys- tem again.

In the query-based data  mining, it is important to support users t o  have a good inspiration of initial queries and to modify a query adequately so as to in- crease the utility of the hypothesis based on the replied data set. To make an initial query as a candidate of a useful pattern, users have to know-which part of the given data  is dense, or which of attributes are cor- relate closely with each other. If users can grasp the distribution of data  at a glance, users can find interest- ing patterns with taking into account the background knowledge such as the meaning of attributes. How- ever, most of user interfaces of existing database sys- tems are character-based, it is almost impossible for users to grasp the distribution of data  at a glance.

This paper proposes a methodology for support- ing the process of the query-based data  mining[2] by using visualization techniques[3, 13, 17, 20, 261. In the method, an instance in a database is represented as a bar with multiple colors and each color repre- sents the value of a corresponding attribute defined in a database. Users can grasp the distribution of data at a glance by using this visualization method.

Modifications of the generated hypothesis are carried out in two ways by changing ranges of attribute val- ues in the query and by adding a new attribute to the query. Therefore, i t  becomes important to grasp the distribution of data  in a multi-dimensional data space. The color bar representation is also used to help users understand how the utility score of the descrip-  v -8888  http://yokoya)Qis.aist-nara.ac.jp   tion changes by relaxing or strengthening conditions which represent the present query. Histograms of at- tribute values are also used to find attributes which have strong correlation with other attributes included in the query.

This paper is structured as follows. In the next section, details of the visualization techniques are de- scribed. In Section 3, demonstration of the proposed method with a real world data set is shown and the usefulness of the proposed method is confirmed. Sec- tion 4 will conclude the paper with discussions about current problems of the system and future works.

2 VISUALIZATION METHODS FOR SUPPORTING QUERY-BASED DATA  MINING  2.1 Query Representation  In this paper, we treat databases which have pre- defined attributes that take nominal or numerical val- ues. For nominal attributes, possible values for the attribute are also given. To make the system sim- ple, we employ a simple query representation, so called range query[7]. In the range query, users of database system specify the possible range for a nu- merical attributes and specify the value for a nom- inal attribute. If a user want to get a set of data which have values between 100 and 150 for an at- tribute A I ,  the user gives an query (100<A1<150) to the database. Users can make complex range queries by using AND and OR operators and nested queries are permitted such as (GENDER = MALE)AND( (160<HEIGHT<18O)OR( 185AGE)).

2.2 Visualization of Database for Finding Ini- tial Queries  In the first stage of query-base data mining, users want to have an inspiration of useful patterns in a database.

To have a good inspiration, i t  is important to under- stand distributions of data. Since users of database know the meaning of attributes, they can easily find candidates of useful patterns if they can grasp correla- tions among values of attributes at a glance.

To help users grasp distributions of values, values of attributes are transformed into colors in our visualiza- tion method. The Munsell color system[23] is employed for the transformation. Numerical values are normal- ized and mapped to the corresponding colors on the color wheel from puqde(value=O) to blue (value=l) as shown in Fig. 1. In the case of nominal attributes, the color wheel is divided into arcs and colors at the bor- der between arcs are assigned to each value. After the transformation, an instance in the database is visual- ized as a color bar with multiple colors that  represent the values of attributes. Figure 2 illustrates the trans- formation of a database which has four attributes. In this case, an instance of the database becomes a colum-   Figure 1: Transformation of values into colors using Munsell color system.

Datal Data2 Data3 Date4  Figure 2: Visualization of a database with transform- ing numerical values into colors.

nar bar with four colors.

With this visualized database, users can grasp the  distribution of values interactively by sorting the values of each attribute. In Fig. 3, data are sorted based on the values of the attribute A l .  As can be seen, there exists a region with similar colors in the middle part of the attribute A2, i.e., two attributes A1 and A2 may have correlation in the region. If the range of A1 where the colors of A2 are similar is [ a l , ~ ,  a1,2], the query can be specified by ( a l , l I A ~  Ia1,2)AND(az,l IA2<a2,2), where a2,1 and a2,2 are the maximum and minimum values for attribute A2 in the range of data.

A culster of similar colors  Figure 3: Finding a similar color region with the visu- alized database.

V -889    2.3 Finding Additional Attributes with His- tograms of Attribute Values  Another promising way of finding attributes which have correlations with other attributes is t o  investigate distributions of values directly using histograms of val- ues. Users can grasp the distribution of values of an -attribute. Especially, histograms are useful as a sup- plemental tool of visualized databases. When a user find a color cluster in the visualized database, the den- sity of instances can be confirmed using the histogram of them.

In our method, two histograms of an attribute are superimposed, one is a histogram of all data and the ohter is that  of data in the specified range. If there exists a mountain in the first histogram and the second histogram is flat, user can confirm that a cluster of instances exists in the specified region of the attribute and can add the attribute to  the current query.

Figure 4: Superimposed two histograms of several at- tributes.

2.4 Visualization of Values of Evaluation Function for Modifying Query-Ranges  After users find an initial query by browsing the visual- ized database and histograms, the next step is to refine the query. The region of the initial query is roughly determined by directly specifying the area which has similar colors. Therefore, the range of specified area  may be too wide or too narrow to  appropriately cap- ture the group of data which have similar values in the attributes. These mis-specifications of ranges decrease the strength or generality of the pattern. To increase the strength and generality of the patterns represented by a query, users have to  narrow the range of the query as much as possible without decreasing the number of instances included in the query.

In order t o  navigate users t o  refine a query to sat- isfy the requirement, we employ two functions called distance and relevance[l4, 15, 161.

Distance is a simple distance function between a specified range [al ,a2) and a value z of an attribute defined as follows:  z -a2 (z > a2)  z - a 1  (z < a l ) distance(%, [q, Q]) = (a1 5 2  I a2)  Relevance is a function that represents the distance between an instance and a query and is calculated by using dinsance values of attributes that appears in the query. Two distance values are integrated into relevance in the following manner according to  the connection operators:  d l  + d2 dl x d2  in the case of AND in the case of OR relevance(d1, d e )  =  In order to support users t o  change ranges of at- tributes to  increase the strength and generality of the query, values of distance and relevance are trans- formed into colors in the same manner as values of data are transformed. Values of distance and relevance are normalized to [ - I ,  11. In the Munsell color wheel, purple, yellow and blue are assigned to -1, 0 and 1 ,  respectively. Figure 5 shows an example of vi- sualized relevance and distance values with a query ( ~ I J  SA1 <a1,2)AND(a2,1 IAz<a2,2).

With the visualized relevance and distance values, users can understand how the strength and general- ity of the query change by modifying the ranges. In Fig. 5 ,  instances are sorted based on relevance Val- ues. There exist instances whose values for A1 are in the range of the query (yellow) but values for A2 are not. The color of distance values of these instances in A2 are yellow-green, i.e., the distance between the specified range and the attribute value of each instance is short. This means that the generality of the query, i.e., the number of instances in the query ranges, will increase by slightly moving the upper limit of A2 to widen the range. On the other hand, if there exist in- stances whose disntance colors of A1 are yellow and colors of A2 are not close to  yellow, the range for A1 may too wide. Users have to investigate the appro- priate range for A1 by sorting data based on distance values of A l .

V -890    /Instances that satisfy the current query ..-. - ..--,  Attribute name CFUM ZN  INDUS  NOX  RM  AGE  PTRATIO LSTAT  relevance  CRIM  Meaning per capita crime rate by town proportion of residential land zoned for lots over 25,000 sq.ft.

proportion of non-retail business acres per town nitric oxides concentration (parts per 10 million) average number of rooms per dwelling proportion of owner-occupied units built prior to 1940 pupil-teacher ratio by town % lower status of the population  Specified range for ZN  H  Figure 5: Visualization of distance and relevance val- ues.

3 DEMONSTRATION OF QUERY-BASED DATA MINING WITH THE PROPOSED  VISUALIZATION METHODS  3.1 Data specification  To demonstrate the proposed visualization meth- ods in the process of the query-based data min- ing, a real world dataset called boston which con- tains information collected by the U.S Census Ser- vice concerning housing in the area of Boston Mass. It was obtained from the StatLib archive (http://lib.stat.cmu.edu/datasets/boston). The dataset includes 506 instances and has 14 attributes.

We use eight of them as shown in Table 1 to reduce the size of figures in this paper. The following demon- strates the proposed method with a sequence of exam- ple queries.

3.2 Demonstration of Query-Based Data Min- ing with boston dataset  In the demonstration, it is assumed that a user want to know the property of exclusive residential districts.

Therefore, the user firstly sets the range for the at- tribute ZN. In our visualization method, the user can set the range by sorting instances with ZN values and select a region in which instances have relatively high ZN values as shown in Fig. 6. In this case, the user  ZN  INDUS  NOX  RM  AGE  PTRATIO  LSTAT  Figure 6: Visualized database with eight attributes sorted by ZN.

set the range as (12.25ZN5100).

In regions of other attributes corresponding to  (125ZN5100), the user can find clusters of colors in attributes CRIM, INDUS, NOX and LSTAT.

The user can easily set the ranges for these at- tributes by using their histograms. On the other hand, in attributes RM, AGE and PTRATIO, the user can not find any color clusters. Figure 7 shows histograms of these attributes. From these his- tograms, the user can confirm that the distribution of values in then specified range is not different from that of all instances. In this case, user can make a query: (12.2<ZN5100) AND(0.05CRIM50.006) A N D  (0.46 < I N D U S  5 6.88) A N D  (0.39 5 N OX 5 0.47) AND(1.87<LSTAT<9.40). The percentage of in- stances that satisfy the query within all instances, i.e., support of the query, are 18, and the percentage of in- stances that satisfy the query within instances that are included in the range (12.25ZN5100), i.e., confidence of the query, are 69.

To increase the values of support and confidence  V -891  http://lib.stat.cmu.edu/datasets/boston   Figure 7: Histograms of RM, AGE and PTRATIO.

without losing the strength of the pattern, the user modified the range of the query by using visualized relevance and distance values. The user can find two yellow-green regions easily as shown in Fig.8(a). Figure 8(b) illustrates the way of widening the range of NOX as the range includes the yellow-green region.

After the refinement, the query became (12.2~ZN~100)AND(0.0~CRIM~0.006)AND(0.46 1INDUS<6.88)AND(0.39<NOX<0.49)AND( 1.87 ILSTAT19.62).  As a result, support and confi- dence became 20 and 70, respectively. As demon- strated above, the user can find a strong pattern in the database only with his/her perceptual capability.

4 CONCLUSION  Data mining in very large databases is one of the most important challenges in the research area of databases.

The task is to  efficiently find interesting data sets, i.e., clusters of similar data or correlations between several parameters. Our approach to support the data mining process enhances the capability of traditional database querying by visualizing database itself and giving users visual feedbacks of queries. Since our method is inde- pendent of any specific domain area and requires no knowledge of statistics such as cluster analysis, users with perceptual capabilities and general knowledge are responsible for doing the analysis and interpretation.

As we demonstrated the proposed method in Section 3, users of the system can explore databases by incremen- tally refining queries guided by the visualized database and visual feedbacks of previous queries. We will im- prove the method by extending the capability of the query language. The visualization techniques for  relevance  CRIM  ZN  INDUS  NOX  RM  AGE  PTRATIO  LSTAT  (b) Modification of the range of NOX  Figure 8: Modification of ranges based on visualized relevance and distance values.

displaying a numbers of attributes and data should be further investigated.

