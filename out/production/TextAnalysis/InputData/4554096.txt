The Development and Application of Quick Search Engine Based on Special  Fields

Abstract   This paper analyzed some problems existing in the business search engine when it searched the special fields, and then put forward a set of search engine scheme about data warehouse design based on data mining. It applied the improved association rules algorithm to text clustering algorithm. At the same time in combination with the advantages of J2EE architecture in system development, this paper described how to apply J2EE platform to form an exact and efficient intelligent search engine system by the technologies such as JSP, Servlets, EJB, JDBC and so on.

1. Introduction  Along with the development of Internet and the increase of all kinds of network information, it becomes more and more difficult for people to find out the useful information which is really needed by them. So we have to do our research by dint of search engine. Now there are some existent search engines, such as Google, Baidu etc.

The technologies of them have become mature, but they can?t meet the need of users? search in special fields.

There are many existing problems. For example, the veracity is low, the information returned back is too much, the classification to information is too general, some results returned back is in disorder and so on. So an intelligent search engine based on special fields is demanded urgently.

At present, there are mainly two information search methods in the search engine: catalog search and full-text search. The former searches the information by manual work. It is correct comparatively, but it usually leads to some problems. Such as information in background database can?t update in time and so on. The latter processes the text by full-text searching technology.

Users search the documents or web pages by keywords and it could return back all information which contains these keywords, so it usually leads to such problem as  that the information returned back is too many [1]. Upon that, this paper put forward a set of search engine scheme about data warehouse design based on data mining and it applied the improved association rules algorithm to text clustering algorithm. By this way the system could draw out information intelligently and update the database automatically. At the same time, J2EE technology is used to develop the system to make up the defects of current the business search engine when it is used to search the special fields.

2. Relevant algorithm and key technology  The performance of intelligent search engine is mainly evaluated by its accuracy and speed. The tolerable time of users waiting in front of the browser is generally limited, so the speed of the system responding to the users should be fast. On the other hand, users are usually anxious to receive the accurate information, so the accuracy of system should be high.

2.1. The improvement and application of association rule algorithm  Along with the increase and accumulation of vast data, association rule has become an important aspect to the field of data mining. Apriori association rule mining algorithm is one of the classical algorithms, but it has some defects [8]. According to these defects, the paper puts forward an improved association rule algorithm. The details are described as follows:  Input: Database D of transaction; minimum support threshold min-sup.

Output: the frequent sets L of D.

L1=find_frequent_l-itemsets(D)     k=1 do while(Lk-1 ?? )    k++ find_frequent_itemsets(min_sup) move record from D where itemnum=k-1 loop   end  2008 International Symposiums on Information Processing  DOI 10.1109/ISIP.2008.13   2008 International Symposiums on Information Processing  DOI 10.1109/ISIP.2008.13     In order to compress Ck, the Apriori algorithm uses the prune step. The prune codes are described as follows:  Procedure has_infrequent_subset(c:candidatekitemset;  Lk-1:frequent(k-1)_itemset); for each (k-1)-subset s of c if s?Lk-1  then  return true;   else  return false;  2.2. Text clustering  As the text clustering here is the classical short document clustering, the paper puts forward an improved k-means clustering algorithm. The detailed process of this algorithm is shown as Figure1.

Figure 1. Flow chart of clustering  Firstly, the documents should be processed by the Chinese word segmentation technology, which is used in the paper is Maximum Matching Method. Chinese word segmentation technology belongs to the category of natural language processing technology [9]. The flow of the thought is described as follows: calculate the length of the document firstly, choose n characters from the left to right within the range of the document?s length. Here n should be determined by the length of the longest word in the background words database. Then it matches the n characters with the words in database, judging it matches successfully whether or not. If it dose, segment a word and cut the word from the documents; if not, subtract a character from the right of the n characters, continue matching. If it doesn?t match successfully until there is only one character left in the n characters, it implies that this word isn?t contained in database. Next, begin from the second character of the document, choose n characters again, and then continue matching with the words in database. If it matches successfully, the next step should begin from the character after the last character of the word. The word segmentation algorithm is applied to every document and the results are saved in a table.

The following step is separated into two parts: on the one hand, weight calculation is applied to every word of the document. Considering the effect of the length of the document to weight, the paper uses TFC calculation  method which is normalizable. The formula is shown as (1).

[ ]  i j i  k j k   T F *lo g (D /D F )w e ig h t( i) T F * lo g (D /D F )  M  K =  =  ?  (1)  In the formula, TFij is the frequency of the key word i in document j. D is the number of all documents. DFi is the number of documents that have the key word i. Then use the Vector Space Model to denote the text eigenvector by weight.

On the other hand, all documents are regarded as transaction database, each document is regarded as a transaction and the key words in documents are regarded as a group of items. In this way, the problem of association analyzing between the key words in text database turns to the association mining between the items in transaction database. At the same time, the problem of similarity analyzing between the questions turns to be the problem of association rule between the items in transaction database. It calculates the correlation value between key words in documents to form the association matrix. Here, when calculating the correlation between key words, the association front and rear are all written in the association table, the format of the association table is described as (no, front, rear, S, C).

The meaning of it is (the serial number of association rule, association front, association rear, support, confidence).

2.3. Similarity computation  The paper computes the similarity degree based on association rule. It assumes that one document in the database is composed by m words (W1 ? W2?Wm), another one is composed by n words (W1'?W2'?Wn'), then the relationship matrix between the two documents can be expressed as follows:  . . .

. . .

. . . . . . . . . . . . . . .

. . .

1 1 1 2 1 3 1 m  2 1 2 2 2 3 2 m  n 1 n 2 n 3 n m  R R R R R R R R  R R R R  ,  Rnm is the correlation value between the keywords Wn and Wm. The detailed algorithm is described as following:  if Wm=Wn'   then Rnm=1 else for each record of association table if W1 and W2 ?  record  then i++; Rnm=(i-a)/(i +a) // a is a default parameter else Rnm=b // b is a default parameter The value of a (or b) lies on the numbers of databases.

They are generated randomly at first and finally determined through testing repeatedly.

After calculating the correlation value between key words, the similarity degree between sentences can be computed. The weight of document 1 (W1 , W2?Wm) can     be described as (T1, T2?Tm), and the weight of document 2 (W1,W2?Wm) can be described as T'=(T1',T2'?Tn'). The algorithm of similarity degrees calculation between the two documents shows as follows:  Si=Si'=sum1=sum2=0; For (i=1; i<=n; i++) {For (j=1; j<=m; j++)  {Si= Si +Ti'* R[i][j];// Si is the correlation value of Wi' and the document 1  Si'= Si' + Ti* R[i][j];// Si' is the correlation value of Wi and the document 2}  sum1=sum1+Si; sum2=sum2+ Si';} //end i sim=(sum1+sum2)/2;//sim is the similarity degree //between the document 1 and the document 2  After computing the similarity degree, the clustering algorithm can be executed to gain some cluster of subsets, then the association rule algorithm is executed on every subset, viz. the clustering algorithm is used as the pretreatment of association rule. This step can be executed for n times to improve the veracity of clustering [2].

3. Structure design of system data warehouse  The process of the data warehouse mainly includes three steps: marshal all kinds of original data, manage the data and obtain the information which is needed [3]. The original database is composed of the relative stable text information on the network connected with special fields and their URL. The original format of the information is the description of out-of-order and no classified text information, the description of keywords and the description of its URL. As it is a search engine based on special fields, every field should have its special words database. Here, the special words database is the aggregate of all keywords in the fields and it should update with the change of the information. In order to improve the recall ratio, the thesaurus database is needed.

It organizes the database by k-means text clustering algorithm to classify these information. When users raising a question, there are two methods can be chosen.

One method is as follows: the user should input the nature language description of the question or the keywords of the question, and the user should fix the question to a certain field or more than one field to help the system to search the question in some certain fields fleetly by similarity computing, and then users could get the best information or the reference information from this certain field. In this way the speed of information searching can be advanced consumedly. Another method is that the users don?t choose the fields that questions belong to, then the system will traversing all special words databases of fields to search.

As most of questions raised by users are similar, if the information warehouse is designed successfully enough  at the beginning, lots of questions can be included in. The system could return the correlative information in time.

After the system used for period of time, the background data warehouse will be extended and updated automatically due to the new information on the web site.

The practicality of the system will be better and better.

The flow chart of the data warehouse formation is as figure2.

Figure 2. The formation of data warehouse  4. Implementation of system J2EE four tiers  The system?s main function structure is as figure 3:   Figure 3. System function structure  The main purpose of the system setting to save users information is to track and record the information interested by them. It can be considered as a referenced modulus to help the system to return the information which users really need as exactly as possible, and to filtrate the irrelevant information as much as possible.

The classical J2EE application structure includes four tiers: Client tier, Web tier, Business tier and Enterprise information system tier (EIS tier). The second tier and the     third tier here are called by a joint name Middle tier [4].

The J2EE structure figure of this system is as Figure 4.

Figure 4. J2EE structure of search engine  Client tier applied to this system is composed of two parts: one is the Client based on browser, it orients the numerous users who are dispersive and change frequently.

The function of this part is difficult to deploy by the conventional Client. Besides, the privilege of users is limited to raising a question or submitting the information which is not included in database. It doesn?t relate to the matter such as modifying the system information directly, so it affects the system security little by network. The flow is described as follows: users start up the browser at Client, connect with web server which could create the dynamic HTML information by networking, then transmit the service required by users to Business tier to do some interrelated analysis, finally get the correlative information by querying the database in EIS tier. The system will return the information in the format of web pages to users, i.e. users input the question at Client, the question will be processed by search engine server, the correlative information can be returned by querying the system database at last. The other one is the special Client based on C/S pattern, it orients the administrators.

Applying the special Client to system maintenance and management is mainly for the sake of system security.

The design of Presentation layer based on Web Client mainly includes the register JSP and login JSP. The paper applies the MVC pattern which is popular in web applications to develop this part of the system. Here MVC is Model-View-Controller. In this pattern, View is the interface used to communicate among users [5]. The application of it in this system is some dynamic JSP pages, such as the interface used to login, the interface used to raise a question and so on. These interfaces are deployed in Web Server. Model is the main body of the application, it is used to express business data and  business logic. The application of it in this system is the EJB groupware (the primary groupware is Entity Bean) running in EJB container, including users entity, administrator entity etc. In addition, all kinds of data manipulation limited in these entities could be regarded as a part of Model; Just as its name implies, Controller is used to control. It receives the user?s input and responds the user?s requests by transferring Model and View.

When users submit the form, Controller doesn?t do any process or output, what it done is only to receive the diversified requests of all users. Then the system processes these requests by transferring Model groupware, such as browsing the userinfo, querying database etc. Finally it displays the data processed by Model through transferring View. The application of View in this system is the Servlet designed by relevant JSP .When users give the request, JSP will transfer the request to Servlet, and then Servlet could help to accomplish the functions such as raising a question or querying database by transferring the data processing through the relevant EJB groupware found by JNDI.

The following describes the system processing flow through the request of user raising a question. The user should choose the function of raising a question firstly, then the system will return the correlative information to JSP by transferring the Servlet in background database according to the information of user?s question. The detailed flow is described as following: when users submit the question to system by network randomly, the system should comprehend this question firstly, and then matches the question to the information in database by computing the similarity between the question described in nature language and the information in background database. If matching successfully, the correlative information will be returned to users, ending the information extracting process; if matching unsuccessfully, it means there is no correlative information in database, and then the question will be submitted to the database as an unsolved question, waiting the information on web site updates later. Here, the system intercalates a prohibitive words database used to save the key words which is forbidden to be discussed in this system. The flow chart is as Figure 5.

The purpose of Presentation layer development is to provide users with dynamic Web pages when they visit the system. Meanwhile it is in charge of communicating with EJB in Business, so that the user?s request can be responded. EJB groupware is the architecture of J2EE platform [6]. Session Bean in J2EE application is applied to do some processes which are in server, for example, accessing the database, transferring other EJB module [4].

It is mainly used to communicate with fore-end Presentation layer, such as saving the user?s login information, recording the data that user?s operation to system (information such as writing the question into     unsolved question database etc.), transferring Entity Bean to respond the user?s request to Information layer and so on. Entity Bean represents the data that preserved permanently, the typical type is the data saved in database. It can meet the user?s demands by accessing those data, and it defines a series of data operation to fulfill all functions that system demand. The kind of entity is mainly determined by the condition of information table in background database, for example, this system includes the user information table, information table, words table and so on; Message-Driven Bean is just like an asynchronous information receiver who has realized some business logic, it is mainly used to process the asynchronous information. When JMS (Java information queue) receives a message, Message-Driven bean is transferred by EJB container. Message-Driven bean in this system is mainly in charge of sending important information to each function module entities, for example opening the individual information of users, amending the individual information and so on.

Figure 5. Flow chart of search engine  The last step is the design of Information layer. The J2EE application groupware often need to access the EIS tier to obtain the required data information [7]. The data information of this system includes fundamental information of users, information of keywords, information of the background information database and information of the unsolved questions etc.

In the system exploitation and deployment, WebLogic Server in BEA Company is used as the J2EE application server. It can not only provide the application function of managing the J2EE application and other unattached application in the way of local mode and long-distance mode, but also can provide the application function of simplifying the structure of these applications.

5. Conclusion  The architecture of J2EE is core when designing and developing this search engine. It uses JSP, Servlets, EJB and JDBC database connectivity technologies. Compared with others, the most obvious advantage of this intelligent quick search engine is that it can return accurate correlative information to users timely. In the other words, it can extract the optimal information in the shortest time from the background database and it embodies the intelligence of extracting information well.

