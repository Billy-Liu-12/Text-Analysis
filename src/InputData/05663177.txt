

This work was supported by Aerospace Support Fund #41701160303, Postdoctoral Science Fund # 20090460955 and National Science Fund #60972081 of P. R. China   An Image-sequence Compressing Algorithm based on Homography Transformation for Unmanned  Aerial Vehicle  Junbin Gong, Chenlin Zheng, Jinwen Tian Institute for Pattern Recognition and Artificial  Intelligence, National key laboratory of science  and technology on multi-spectral information processing  Huazhong University of Science and Technology, Wuhan 430074, China  gongjunbin@foxmail.com  Dingxue Wu College of Computer Science and Technology,  Huanggang Normal University Huanggang, 438000, China  jsjwdx@hgnu.edu.cn  Abstract?Focus on the image compressing problem of unmanned aerial vehicle with high compression ratio, fixed compressing ratio and low computational complexity requirement, a low-complexity image-sequence compressing algorithm based on homography transformation was proposed.

The image sequences were dynamically divided into frame- groups according the data from airborne inertial navigation systems, and the intermediate frames in the same frame-group was b i-directionally predicted by the first-frame and the end- frame with homography transformation. The homography matrix was got approximately by the airborne inertial navigation systems firstly and then was accurately computed by fast multiple sub-areas template matching. At the end the first frame and the residual images of the intermediate frames of the same frame-group was merged into a big image and coded by JPEG2000 to generate fixed-size code streams. The experiment results show that the proposed algorithm was with high compression performance, low computational complexity and excellent capacity for code-size control and will has good prospect in engineer.

Keywords-unmanned aerial vehicle; image compression; homo- graphy transformation;JPEG2000; H.264; low complexity

I. INTRODUCTION Unmanned aerial vehicle (UAV) has wide applications in  military and civilian affairs. It usually carries a variety of imaging devices for investigation and can acquire a large amount of image data. Limited by the communication bandwidth, an image compression algorithm with high fidelity, high image compression ratio, and fixed compression ratio must be used to reduce the code-bit rate.

In view of the payload limitation of UAV in terms of volume, weight and power consumption, this image compression algorithm is also required to have low computation complexity[1][2]. For UAV, the camera is mounted on a high-flying motion platform to capture the ground scene, so the image sequence obtained in this way has significantly different temporal and spatial characteristics from common images or video sequences. Therefore, the  commonly used compression algorithms, such as jpeg200 and H.264, which are optimized for still images or motion videos, (like digital camera, digital video, film or TV) are no longer applicable for the compression of images acquired by UAV[3][4].  In this paper, an image sequence compression algorithm based on homography transformation for UAV was proposed. This algorithm blended the advantages of JPEG 2000 and H.264, and highlighted the advantages of low complexity, high compression ratio, fixed code bandwidth and strong anti-noise capability.



II. THE FEATURES OF IMAGE SEQUENCE Assume the flying height of UAV was h, flying velocity  was v, the field of view (FOV) in heading direction was ?, the frame frequency was f. Then the geometrical relation between adjacent frames was shown in Fig.1. Substituting commonly used flight parameters of UAV into the figure 1, it could be found that there was about 80%-95% overlap, which suggested high redundancy in sequence images [5].

/ 2?/ 2?   Figure 1.  The geometrical relation between adjacent frames  In the images obtained by a high-flying UAV, there were some separated moving objects (cars, pedestrians, etc), but they were so small and slow in proportion to the whole image that they could only bring negligible variation to the overlap area between the adjacent frames. Thus, the variation between adjacent frames was mainly caused by the changes of camera?s position and attitude due to the movements of UAV, and the imaging process between the adjacent frames of high-flying UAV could be approximately viewed as a homography transformation induced by a plane [6].

2010 International Symposium on Intelligence Information Processing and Trusted Computing  DOI 10.1109/IPTC.2010.178     According to above analysis, there was a large overlap between the adjacent frames got by UAV and these overlapped areas had a strong global temporal relativity. For a group of images acquired within a short time-slice, the temporal relativity among these images could be effectively eliminated by global motion estimation and compensation.

The process could be described by a homography transformation. In this way, an image compression algorithm with high compression ratio and low computation complexity could be achieved, which was based on global homograph motion compensation and frame-group coding.



III. THE GEOMETRIC MODEL FOR IMAGING For a high-flying UAV, each frame could be  approximately viewed as the projection of a target scene plane ?   on the image plane of airborne camera. The correlation between point X in the scene and its corresponding image point m could be expressed as,  m=HX                                               (1) Where H was the homography matrix from ?  to m, and  the rank was 3.

As mentioned above, the overlap region of two adjacent  images could be viewed as photographing the same region by two cameras from two positions at the same time. Let X be a point in the target scene, the image captured by the two cameras be m and m?, and the homography matrixes between?  and two image planes be H1?H2, then we got,  m = H1X?m?=H2X.

Obviously, ? didn?t pass the optical center of two  cameras and H1?H2 were full-rank matrixes. Therefore, a two-dimensional transformation also existed between m and m?, which made the following formula hold,  m?=Hm                                      (2) where 12 1H H H  ?= . With the matrix H, we could achieve the pixel registration and compensation in the overlap area.

Assume that the intrinsic parameters matrix of camera was K and the position and attitude of the second camera to the first one was (R? t). Let the coordinate of the first camera be world coordinate, then the imaging matrixes of the two cameras could be respectively denoted as P=K(I|0),P?=K(R,t).

Take a point in ? randomly, X=( X ,1)T, and saw its projection on two cameras. It was obvious that the projection of X on the first camera was,   X m p KX= =? ?? ?  ? ? (3)  Therefore, the homography matrix of ? to the first image plane was H1=K.

The projection of point X on the second camera was,  ' ' ( , ) ( ) 1 1  X X m P K R t K RX t= = = +  ? ? ? ? ? ? ? ? ? ? ? ?  (4)  If n was the normal vector of ? in the coordinate defined by the first camera, d was the distance from the origin of coordinate to ?, then the equation of ? was nT X =d  ? i.e. ndT X =1?among which nd=n/d. Hence t=tndT X .

Thus it could be derived that the projection of point X on the second camera was,  ' ( ) ( )Tdm K RX t K R tn X= + = +                      (5) The homography matrix from ? to the second image  plane was H2= K(R+tndT), and then the homography matrix between two images could be expressed as [7],  1 1  2 1 ( ) T  dH H H K R tn K ? ?= = +                          (6)  Where K was the intrinsic parameter matrix of the camera, which could be obtained by the camera calibration; R and t denoted the rotation matrix and translation vector of m to m?, which could be easily got by by the inertial navigation system (INS) of UAV. and the detailed computing process is presented in the next part.



IV. IMAGING COMPRESSION METHOD According to the aforementioned characteristics of the  image sequence acquired by UAV, a novel high-performance image-sequence compression algorithm was proposed in this section. The flowchart of the algorithm was shown in Fig.3.

Figure 2.  the image sequences compressing flowchart  For UAV, the following parameters could be provided by INS and the other airborne electronic systems : flying height h, FOV ax?ay, frame frequency f, and the instantaneous velocity in heading direction vi. These parameters could help to determine whether there image frames overlap, and if they do, the overlapping frames would be bound into one frame- group. In each frame-group, the intermediate frames Fc could be bi-directionally predicted by the first-frame and the end- frame. The prediction matrix had been given in equation (4) and (9).

As shown in Fig. 1, we assumed that the first-frame Fs was captured at point m, and the end-frame Fc was captured at point m?. With the information got by the airborne INS and the imaging parameters of the camera, the position and attitude information of airborne cameras could be obtained, which can be signed as ( , , , , , )xm ym zm xm ym zmX X X ? ? ?  and  ' ' ' ' ' '( , , , , , )xm ym zm xm ym zmX X X ? ? ?  respectively. Then the rotation matrix R from m to m? for the camera could be expressed by the following equation,  cos cos cos cos sin sin sin sin sin cos sin cos  cos sin cos cos sin sin sin sin cos cos sin sin  sin sin cos cos cos  R  ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ? ? ? ? ? ? ? ?  ? ? ? ? ?  + ?  ? ? +  ?  = ? ? ? ? ? ? ? ?? ?  (7)  Where, (?,?,?)=( ?xm?- ?xm??ym?- ?ym??zm?- ?zm)? The displacement vector from m to m? was,  C=[Xxm?- Xxm?Xym? -Xym?Xzm? -Xzm]T?            (8) For equation (9),     t=-RC.                                             (9) Using equation (6)-(9) and the data from INS, the initial  predicted matrix from first-frame to current frame Hsc0, and the initial predicted matrix from end-frame to current frame,Hec0, could be easily derived. Then the predicted position in the first-frame and end-frame of the sub-blocks in the current frame image could also be obtained.

Considering the possible errors caused by INS the distortion  caused by topographic of landform, and the other unexpected issues, a fast multi-sub-region template matching algorithm should be used to get accurate homography matrix H, after the acquisition of initially Hsc0 and Hec0,. The flowchart for the image matching was shown in Fig.3.

Figure 3.  The flowchart of fast multiple sub-areas template image  matching method  Since H has 8 degrees of freedom, at least 4 accurately matched point-pairs must be acquired to solve the equation sets. Taking into account both computation reliability and computation complexity, 9 evenly distributed sub blocks were selected to implement fast template matching to get the initial point-pairs. Then through hypothesis-testing approach, false matching points were eliminated, leaving 4 point-pairs with minimum residual errors to exactly compute H. The value of H  was got by sloving linear equation groups defined by the matched point-pairs.With H, the overlap area in the current frame could be accurately predicted by equation (2). Then the overlap area of the inter-frames in one group could be precisely compensated by the reference frame (first-frame and end-frame). Since the predicted result was very close to the inter-frame, the residual error would be very small. In this way, a high compression ratio could be achieved [8] [9].

To achieve high compression ratio and accurate bandwidth control, the first frame and the residual images of the inter-frames in the same frame-group were merged into a big image and coded by JPEG2000. The PCRD-OPT algorithm was used for global optimal code-bit truncation, which could reduce the distortion to minimum and realize a global optimal code bit distribution. A typical merged image was shown in Fig 6. Finally, the information about the code stream of JPEG 2000, the predicted matrix H, and frame- groups were packed and produced the ultimate code stream.

Figure 4.  the merger of frame-groups  When decoding, the merged image was restored with JPEG 2000 firstly, and then the first-frame could be extracted from the big image according to the frame-group information. The first-frame of the next frame-group was  also restored to serve as the end-frame of current frame- group. Finally, all images in the group could be restored with Hsc0, Hec0 and the restored residual frames.



V. EXPERIMENT AND ANALYSIS In this section, the performance of the proposed  algorithm (UAV Codec) was tested. Image sequences captured under different flight states of UAV were used for test. H.264 and JPEG2000 were used for comparison. For H.264, the famous reference model software JM10.2 [10] was adopted with following parameters: one I frame for per 15 frames; the search range for motion estimation was 16; the max number of reference images was 5; and the motion estimation algorithm adopted was Simplified Hexagon Search. For JPEG2000, KaKadu 6.0 [11] was adopted with following parameters: the transformation kernel was 9-7 wavelet; the wavelet order was 5; the size of coding block was 64?64; and the output order was LRCP.

A. The visual quality of the decompression images Several groups of simulate images got by UAV were put  to test and each group consisted of 25 frames. The size of the images was 1024?1024. The frame frequency was 25 fps.

Experiment results were shown in Fig.5 and Tab. 1.

Figure 5.  The comparison of images restored by UAVcodec?JPEG2000  and H.264  with  compression ratio 200:1  A comparison of images restored by the three algorithms at 200:1 was provided in Fig. 5. The statistics of PSNR under different flight states and with different compression ratio was presented in Table 1. From Fig. 5 and Tab. 1, it could be found that in all cases, the dynamic video compression methods, represented by UAVcodec and H.264, had clearly superior performance to the still compression methods, represented by JEPG 2000. With the increase of compression ratio, this superiority became more and more notable. The difference between the images restored by the three algorithms could be easily seen out in the images in Fig. 7. In Tab. 1, the PSNR of UAVcodec and H.264 was higher than that of JPEG2000 by 6-10dB.

It could also be found that though the PSNR of the proposed algorithm was approximately equal to that of H.264, UAV Codec could reserve more detailed visual information. This merit was mainly brought by the global code-bit distribution strategy and the global multi-sub- regions template matching algorithms. The advantage could be easily revealed by the visual quality of restored images.

Look at the first and the second row in Fig.5 and you may find that some marginal and structural details which appear     quite blurred in the images restored by H.264 could be well reserved in images restored by the proposed algorithm.

TABLE I.   THE AVERAGE  PSNR OF THE THREE ALGORITHMS  Compre ssion ratio  Tested algorith  m  Horizontal advance  Vertical ascent  Horizo ntal  turning  Rolling    64:1  UAV codec 36.895 39.616 32.787 29.463  H.264 36.341 38.609 32.875 29.701 JPEG 2000 26.222 25.062 25.254 21.754    200:1  UAV codec 29.985 31.893 28.797 24.882  H.264 26.911 27.071 25.059 22.572 JPEG 2000 19.624 18.779 19.144 18.713  Moreover, since H.264 algorithm could merely control the compression ratio by adjusting the quantization step within each frame, it was unavoidable that with high compression ratio, its output code-bit size and SNR would fluctuate dramatically, making it unable to fully make use of the communications bandwidth and even causing the loss of code stream. On the contrary, the proposed algorithm, which realized an accurate compression ratio control by coding with frame-groups and PCRD-OPT, could accurately implement compression ratio controlling and take full advantage of channel bandwidth, enabling it to exhibit much more reliable performance.

B. The image compression speed In this part, the compression speed of the three  algorithms was tested. The test environment was like this: CPU P4 2.8G, memory 1024M?operating system Windows XP. The proposed algorithm was programmed in VC 6.0 with standard C language. The software for comparison and the image sequences for test were the same as those in Section 4.1. The average time for compressing 25 frames was given in Table 2.

TABLE II.  COMPUTIONAL TIME OF THE THREE ALOGORITHMS  Compression Ratio  Time spent compressing 25 frames(s) 16:1 64:1 200:1  JPEG2000 0.72 0.44 0.40 H.264 276.00 271.60 259.04  UAVcodec 1.34 1.08 1.02  It could be found in Table 2 that the average time taken by the proposed algorithm was only a little longer than that of JPEG 2000, while much less than H.264. The reason for this was that the motion prediction of the proposed algorithm was much more effective than H.264, partly because that only 9 sub blocks were involved in the computation of the homogrphy matrix for motion prediction, the computational cost of which was far below the complicated motion estimation algorithm adopted by H.264, and partly because that the data of airborne navigation system was employed to estimate the initial value of homography matrix and predict  the initial position of matching blocks, which reduced the size of searching window for image matching and thus enhanced the searching efficiency.

To sum up, based on the characteristics of the image sequence of UAV, with a computational cost similar to still image compression algorithms, the proposed algorithm achieves a compression performance as good as that of the famous dynamic video compression algorithm H.264. All these combine to prove that the proposed algorithm can be well applied to the image compressing for UAV.



VI. CONCLUSION  AND DISCUSSION The special imaging process and application environment  determined that the commonly used image or video compression algorithms fall short of the image compression requirements of UAV. Focusing on this issue, the paper proposed a novel high-efficiency image-sequence com- pression algorithm based on homography transformation.

Experiment results shown that the proposed algorithm well adapted to the motion and imaging characteristics of high- flying UAV and blends the advantages of JPEG 2000 and H.264. With high coding efficiency, low computation complexity and a good ability to control the code-bit bandwidth, the proposed algorithm would promise wide applications in engineering.

