Time Related Association Rule Mining with

Abstract-Genetic Network Programming(GNP) based time  related association rules mining method provides an useful mean  to investigate future traffic volumes of road networks and hence  helps to develop traffic navigation systems. Further improvements  have been proposed in this paper about the time related associa  tion rule mining using generalized GNP with Accuracy Validation.

For better adapting to the real-time traffic situations of the large  scale simulator, the mechanism of Accuracy Validation is studied.

The aim of this algorithm is to better handle association rule  extraction using prediction accuracy as criteria and guide the  whole evolution process. The generalized algorithm which can  find the important time related association rules is described and  experimental results are presented considering a traffic prediction  problem using the database provided by a large scale simulator  SOUND/4U.

Index Terms-Time Related Data Mining, Association Rule  Mining, Genetic Network Programming(GNP), Traffic Volume  Prediction

I. INTRODUCTION  The increasing demand for traffic systems in the modern  metropolis requires the accurate prediction of traffic situations,  especially, real-time traffic volumes in the city traffic network.

Vast amount of traffic data are currently available using var  ious components of the intelligent transportation system(ITS)  [1]. Satellite-based automatic vehicle location technologies  such as Global Positioning System (GPS) and cellular phones  can determine vehicle positions at frequent time intervals.

These equipments collect information about the vehicle po  sitions and speeds, which are archived in large amount of  databases, enabling further analyses of the data about the traffic  situations such as traffic volume patterns.

Soft Computing based method such as Neural Net  works(NN) [2] have been used to traffic congestion prediction.

NN depends on the self-evolved parameters and the recurrent  calculation under the teacher signal is more than the compli  cated mathematical analysis, thus NNs show better robustness  under the noisy environments [3] and show good adaptive  ability since the parameters can be adjusted automatically as  the aD changes in the environments.

Dynamic Traffic Assignment(DTA) [4] has also attracted  attention, since it is capable of processing time-varying prop  erties of the traffic flow. However, the complex formulations  978-1-4244-6588-0/10/$25.00 201 0 IEEE  of it generally lead to extremely complicated solutions and its  another issue is the requirement of time-dependent aD( original  and destination) data in the prediction process.

Unlike those methods, the proposed method applies the as  sociation rule data mining mechanism using Genetic Network  Programming(GNP) to find the traffic volume related rules,  which are used to predict the future traffic volume.

Searching for the pattern is a process for obtaining as  sociations where the occurrence of one event is related to  other events. The association rule mining method, i.e., one of  the most popular data mining methods with a wide range of  applications is used in the proposed mechanism aiming at dis  covering association relations or correlations among attributes  encoded within a database [5]. The obtained relations between  data will be represented by association rules as X =} Y, where  X is the antecedent part and Y is the consequent part.

A conventional association rule is like the following: "If  Section X on the traffic map has high traffic volume, then  the Section Y also has high traffic volume." But in real  time systems, conventional association rules are not enough  to predict the future traffic situation, so the time related  association rules are proposed as follows: "If Section X on  the traffic map has high traffic volume at time t = -10 (10  time points before), then Section Y will also has high traffic  volume at t = 0 (current time)."  The rule extraction process does not need the pre  knowledge of time-dependent aD pairs like DTA method and  has the good adaptive ability to the noises and changes in the  environments as Neural Networks.

Generalized Genetic Network Programming(GNP)-based  data mining has already been proposed using simulations of a  simple grid-like traffic simulator[6], and it uses the randomly    determined node transition path to decide the possible com  bination of the attributes in the database, where, GNP is a  newly developed evolutionary method whose gene is composed  of directed graphs [7], [8], [9]. The above method does not  use a fully developed paths which might be obtained by GNP  individual.

In this paper, a method of time-related association rule  mining using Genetic Network Programming (GNP) with   Accuracy Validation has been proposed and applied to the  traffic volume prediction system.

The basic features of the proposed mechanism are like the  following:  The database is time-related considering the real-time  factor. Thus, the same attribute has different meanings  at different time points.

In order to extract more general association rules in the  varying real-time traffic situation, an Accuracy Validation  mechanism is proposed, which uses the prediction accu  racy of the extracted rules for the validation database as  an evolution influence factor.

The validated prediction accuracy will also be used in the  partial matching classifier and help to predict the future  traffic volume.

The proposed method can predict not only the traffic jam  of a specific section on the road networks, but also can  predict the low, middle and high traffic volumes of all  of the interesting sections on the road networks, which  might be useful in real applications.

This paper is organized as follows: In Section 2, the basic  structure of Genetic Network Programming(GNP) is reviewed.

Section 3 is devoted to the explanation of the algorithm of the  time related class association rule mining and classification  using GNP with Accuracy Validation. Section 4 shows the  simulation environments, conditions and several experimental  results. Finally, Section 5 is devoted to conclusions.



II. GENETIC NETWORK PROGRAMMING(GNP)  The basic structure of Genetic Network Programming(GNP)  is briefly introduced in this section. GNP is an extended  method of Genetic Algorithm (GA) [10][11], and it uses  directed graph structures as solutions [7][8][9]. The GNP  individual can also have compact structures because the nodes    can be reused. Additionally, GNP can find solutions of the  problems without bloating compared with Genetic Program  ming (GP) [12][13], due to the fixed number of nodes in GNP.

GNP node expression is shown in Fig.I. It describes the  gene of node i, then the set of these genes represents the  genotype of GNP individuals. NTi describes the node type,  NTi = 0 means node i is the start node, NTi = 1 represents  node i is the judgment node and NTi = 2 represents node i  is the processing node. I Di is an identification number, for  example, NTi = I and 1Di = I means node i is Jl(Judgment  node with I D 1) and NTj = 2 and I Dj = 2 means node  j is P2(Processing node with I D 2). Gil, Gi2, ... , denote the  nodes connected from node i. dij is the delay times required  to execute the transition from node i to node Gij.



III. TIME RELATED CLASS ASSOCIATION RULE  MINING USING GENERALIZED GNP  A. Outline of the Proposed Method  The whole procedure of the proposed algorithm is shown  in Fig.2. The first step is the time related rule extraction step.

In the rule extraction procedure, two kinds of iterations are  node i  Nodeo , ?

Node l ' ?

Node2 1 1,2 13,1Iu l  Node 3 1 1 ,3 14,311,11  Node4 1 1,4 12,113,11  ncx:ie connection  <J-gene--c> <l--- gene -----c>  I NT i I lD i I C il I dil I ...... I C ij I dij  D ,StartNode O,JUdgmentNode  o ,p rocessing Node  Fig. I. Basic structure of GNP  included, i.e., the outer iteration represents the class associ  ation rule mining, which means to extract the time related  class association rules of all the consequents with Attribute  Accumulation Mechanism(AAM) and Extraction Mechanism  at Stages(EM S)[14], while the inner iteration represents the  basic procedure of the time related data mining, which uses  Generalized GNP individuals to generate the possible candi  date rules, then checks the counts of measures for evaluating  the possible candidate rules, thus can calculate the correspond  ing support, confidence and Chi-squared criteria of the rules,    as a result, only the interesting enough rules will be finally  recorded in the rule pool.

...-----jT:ranilg Database  l<I--==--{>{Valrlatng database  Accu:racy:rat::e  Fig. 2. Basic structure of the proposed algorithm  Secondly, each extracted interesting rule will be vali  dated according to its prediction accuracy using the valida  tion database, the corresponding prediction accuracy will be  recorded and the following evolution process will be influenced  by it as shown in Fig. 2.

The final step is to use the extracted rules to predict the  future events using the matching degree between the traffic  data and antecedent part of the rules in each class, and the  class with the highest matching degree and validation accuracy   will be assigned to the traffic data. If the classification result is  the same as the actual situation, then the prediction is correct,  otherwise incorrect, as a result, the accuracy of the prediction  can be obtained in this way.

B. Structure of Database  When dealing with the traffic system, the traffic volumes  in each section will change continuously as time goes on. In  order to better predict the traffic flow of the roads in the future,  the database should represent at what time the events in the  road sections occur or how long the events last.

The database is time series-based, i.e., the tuples in the  time series database represent the time point instead of the  transaction as shown in Table I. Time! D in Table I represents  the time point, it can be one second, one minute, one hour  or even one episode of one procedure and so on, and its  concrete meaning is related to the concrete problem to solve.

For example, attribute Ai and A2 correspond to the sections  named Ai and A2 respectively on the road networks, and one  time point can represent half an hour during a day in the time  related database, thus each data represents how many vehicles  there are on each section at every half an hour.

TABLE I  DATABASE BEFORE DISCRETIZATION  I Time ID I Al A2 A3 I  0001 10 4 9  0002 5 4 5    0003 8 I 5  0004 2 9 2  According to the range of the continuous values of sec  tion attribute Ai, we divide the continuous values to three  categories, i.e., Low, Middle and High. Supposing that the  data is within the range of [0,10], and Middle threshold is 4  and High threshold is 7, then, section Ai = 5 is ranked as  Ai - Middle, i.e., the data of Ai is now M. The L, M and  H represent the Low, Middle and High values, respectively,  thus Table I can be converted to Table II.

TABLE II  DATABASE AFTER DISCRETIZATION  I Time ID I Al A2 A3 I  0001 H M H  0002 M M M  0003 H L M  0004 L H L  Range: [0, lOJ; Middle threshold=4; High threshold=7;  C. Basic Generalized GNP for Time Related Class Association  Rules Mining  The proposed method extracts important time related associ  ation rules using GNP supposing that the connections of nodes  are represented as candidate association rules. The generalized  GNP has a proper number of branches in the judgement nodes  in stead of simple "Yes-side" or "No-side" transition in the  previous method [14].

The basic structure of the generalized GNP network struc  ture for class association rule mining is shown in Fig.3. Each  judgement node of GNP is in charge of checking whether the  corresponding attribute satisfies Low, Middle or High. For  example, given a "Ai - High" condition, then it moves to the  High-side of the connection from node Ai, and "a, band c"  are the counts of the transitions moving to the corresponding  judgement result(Low / M iddle/ High) of attribute Ai.

The time delay for Low, Middle or High connection is the  same value in each judgement node and evolves in the same  way as other parameters and structures of GNP.

P,  N  T.,  b  ?5 .? - . A, U    Jr.u T  u .' ,- JIT. v  j . .-  Al.Low  Al "  ,H igh connection - ? :i:ld:e connection  ------? : Low connection T:TineDe.lay  N ,Tetalnum beref attnbutes  o ,JudgementNode ,Proressng Node  Current  Consequent  Fig. 3. Basic structure of class association rule mining using Generalized  GNP  A route with the fixed number of n attributes(user-defined)  starting from the processing node is used as the possible an  tecedent parts, and it is combined with the current consequent  class to generate the candidate rules.

All the items of the consequent part are placed in Conse  quent Table(CT)[14] as shown in Fig.3. This means that GNP  individuals are evolved to extract the class association rules for  each class of the attributes, respectively, i.e., for each traffic  volume level of each section of the road networks, and this  procedure is repeated for all the consequent items.

When extracting the rules, the basic procedure is like the  following: firstly, the processing node randomly moves to the  connecting another judgement node from the current judge  ment node one after another. Then, a candidate rule of length  neuser-defined) can be obtained. After that, the criteria of this  candidate rule will be checked according to the database.

The basic checking process is shown in Fig.4, it starts from  database tuple 0000, check whether attribute Ai is Middle at  0000 and whether attribute A2 is Low at 0002, . . .  , likewise,  if the condition is satisfied, increase the corresponding count,  otherwise, start the same checking process from the next time  point 0001 checking whether attribute Ai is Middle at 0001  and whether attribute A2 is Low at 0003, . . .  , likewise, and get  the final counts after studying all the records of the database,  which is the one turn of checking for the candidate rules.

In Fig.4, N is the total number of the searches, and a, band   c are the number of searches moving to AI(Mid), A2(Low)  and A3(Mid) at each judgment node of AI, A2 and A3. While  the count c corresponds to the count for the whole candidate    rule, the count a and b can be used for the sub candidate rules.

The measurements of candidate rules are calculated by these  numbers.

After one turn of the database searching, the support,  confidence and chi-squared value can be calculated for the  candidate rules and sub candidate rules. If the criteria are  higher than their thresholds, then the time transitions and its  sub time transitions become association rules and will be stored  in a rule pool during the generations.

r          (Ml  M\ --  :1!"1 ..... .

_   ,Low  ? __ ,M Idle  '?b &/c  .. ,H:gh  .? AJ CurrentConseguent:  T= 2  T= 2 A c Middle  ?

,  -  I  H L M  L M L  L L M  lMj..

.. HI M L  L r-- L ""'(M1. H M \LJ. L ......... M  M M M --CM  H H L : .... ?) o ,satisfffi, :increase count T: Tine D eby  C) : not satisfffi , start from tile next tin epont  Fig. 4. Two dimensional searching method    D. Extraction of Rules  Using the counts obtained by searching mechanisms, the  support, confidence and chi-squared value can be calculated  considering both the antecedent and consequent part of the  candidate rules. Now, the important association rules are  defined as the ones which satisfy the minimum chi-squared,  support and confidence value, i.e., X;'in' sUPmin and con!min,  respectively. Only the important association rules can be con  sidered as interesting and stored in the rule pool.

The rules which contain more than Nthre kinds of attributes  are the so called mUltiple rules, where Nthre is a user  defined threshold. This is added to increase the diversity of the  evolution process and the proposed method regards the rules  containing many different kinds of attributes as important ones  in addition to the conventional interests.

The interesting rules will not only be stored in the rule  pool together but also be validated according to a different  database, which is the validating database. As a result, both the  conventional criteria of the association rules and the validation  accuracy rates will be considered in the rule extraction phase,  thus the evolution concentrates on extracting more general  rules which adapt to real-time traffic databases and avoid the  over-fitting to training database during the evolution process.

For each interesting rule r, the validation accuracy is  defined as follows:  where,  Da(r): the number of validation data which satisfy the an  tecedent part of rule r.

D(r): the number of validation data which satisfy rule r.

After the validation of the interesting rules generated by a  GNP individual, their validation accuracies will be taken into  the fitness value, hence can guide the evolution to generate  GNP individuals which can extract more general rules adapt  able to real-time databases.

Therefore, the fitness function of the GNP individual is now  defined as:  F = L {x2(r) x V(r) + lO(nante(r) - 1)  rER  +anew(r) + amult(r)}.

The symbols are as follows:  R : set of suffixes of important associatIOn rules which  satisfy the importance requirements of chi-squared,    support and confidence value.

X2 (r) : chi-squared value of rule r.

nante (r) : the number of attributes in the antecedent of  rule r.

anew (r) : constant defined by  (r) { anew, if r  ule r is new  anew = 0, otherwise  amult (r): constant defined by  { amult, if rule r has more than  amult(r) = Nthre kinds of attributes  0, otherwise  x2(r), V(r), nante(r), anew(r) and amult(r) are con  cerned with the importance, accuracy, complexity, novelty and  diversity of rule r, respectively.

From the fitness function, it can be seen that GNP indi  viduals are defined as a tool to pick up candidate rules, and  the proposed method does not aim at obtaining the optimal  individuals, but extracting rules as many as possible. So, the  individuals which can obtain many new rules with multiple  attributes will have high fitness values.

In each generation, GNP individuals are replaced with the  new ones by the selection policy and other genetic opera  tions. Four kinds of genetic operators are used, i.e., uniform  crossover, mutation for functions, mutation for connections and  time delays of judgement nodes, respectively.

. Classification  Firstly, classify the extracted association rules in the pool  into consequent classes. Every attribute has three consequent  classes, i.e., attribute Ai is classified into the following conse  quent classes, Ai(Low), Ai(Mid) , Ai(High) .

Then, the association rules in each class are used to study  whether the testing data satisfy the antecedent items. The  testing data are called satisfied if they satisfy the antecedent  items of the rules.

Unlike the validation process, the following partial match  ing strategy is carried out for calculating the matching of rule  r and testing data.

where,  Nk(d, r): the number of matched attributes with testing data d  in the antecedent part of rule r in class k    Nk(r): the number of attributes in the antecendent part of rule  r in class k.

The ratio of the number of satisfied rules to the total number  of rules for every class is calculated considering confidence  matching degree and validation accuracy, and the testing data is  classified into the class whose ratio is the highest. The concrete  process is like the following:  (1) Calculate Rk: Calculate the set Rk of suffixes of rules  in class k.

(2) Calculate Creditk for every class:  Creditk = L confidence(r) x (Mk(r) + aV(r)),  rERk  where, a is weight of the prediction accuracy.

(3) Calculate Scorek for every class:  Creditk  Scorek =  T l  '  ota k  where, Totalk is the total number of rules in class k,  that is, the fixed number of Nf in this paper.

(4) Compare the Scorek and the class with the highest value  becomes the winner for the consequent attribute Ac, e.g.,  if Ac (Low) has the highest score, then Ac is classified  into Low.



IV. S IMULAT ION  In this section, the effectiveness and efficiency of the  proposed methods are studied by traffic simulations. Unlike  other methods in the traffic prediction of recent years, the  proposed methods not only aim at predicting the traffic jam on  a specific section of the road networks, but also interested in  providing the whole traffic prediction for all of the interesting  sections on the road networks so that the navigation system  can refer to this kind of information for the calculation of the  optimal route of the road networks.

A. Simulator  Real-time simulator SOUND/4U, which is a fully  customizable macroscopic free-flow traffic simulator aiming  at providing efficient traffic control and management of the  urban-level large scale traffic network, has been used. The  SOUND/4U simulates the real-time traffic volume and trav  eling speed of vehicles on the VICS[15] systems based on    input OD(Origin/Destination) values.

The simulation is carried out using the traffic network of  Kurosaki in Kitakyusyu, Japan. As shown in Fig.5, the road  model is based on the real traffic network and there are a  TABLE J IJ  PARAMETER SETTING FOR SIMULATION  Items Values  Number of sections 7941  N umber of intersections 4243  Number of traffic lights 142  Data collection interval I (minute)  Total execution time 2(hr)  Number of 00 points 20  Number of 00 pairs 100  Routing algorithm Logit Route Choice  Logit parameter 1.0  Fig. 5. Road model used in simulations  huge number of sections on the traffic network. The traffic  conditions are shown in the Table III:  The real-time traffic volume of section s, represents as T( s),  at the current time point is calculated like:  T(s) =  Nr(s) + Nin(s) - Nout(s)  Cs x Ls  The symbols are as follows:  Ls: The length of section s.

Cs: The capacity of section s, e.g., for sections with one lane  Cs = 1, for sections with two lanes section Cs = 2,  likewise.

Nr(s): The number of cars that remain on section s from  the last time point.

Nin (s): The number of cars traveled to section s from other  sections at the current time point.

Nout(s): The number of cars traveled from section s to other  sections at the current time point.

After the calculation of real-time traffic volume T( s) for  each section, Nin(user-defined) number of sections will be  chosen as the interesting section, here in the simulation,  Nin = 500 sections with heavier traffic volumes were selected  and their corresponding traffic volume at every time point were  discretized to LowlMiddle/High.

Judging by common sense, the High threshold is defined as  follows: for sections with one lane , if there exist 2 or more cars  in 10 meters, then it is a High volume situation. On the other  hand, the middle threshold is defined as follows: for sections  with one lane, if there exist more than 1, and less than 2 cars  in 10 meters, it is a Middle volume situation. The remains will  be discretized to Low traffic volume situation.

The cars are randomly generated based on the values of the  pre-defined OD(OringinJDestination) pairs, and the OD value  for every OD pair is changing during the execution as shown  in Fig.6.

.lY  ;:::l  Jl .? 15  co ? 10  >.Xl 5  Q .?

O .r:: 0  ? o 50 100  150  T:in e 4n ilutes)  Fig. 6. Change of OriginiDestination values in simulations  B. Simulation Result  The parameter setting of the proposed data mining during  the evolution is shown in Table IV. The total number of rules  stored in the rule pool is shown in Fig.7. Each round has the  same number of generations of 50 and the chosen set size for  AAM is 100[14].

TABLE IV  PARAMETER SETTING FOR EVOLUTION  Items Values  Number of judgment nodes 100  Number of processing nodes 10  N umber of attributes 500  Number of consequents 1500  Number of time points 120  Minimum confidence value 0.9  Minimum chi-squared value 6.63  Minimum support value 0.05   Ul 35000 !Il " 30000 '" .... "0 25000 ? ?

? ? 20000 ? '" 15000  j9 10000 0 5000 E--<    ,..---  .r-'  r  ?

r  r'""'  .,..--l  o 100 200 300 400 500  ROlU1ds  Fig. 7. Total number of rules extracted.

In order to check the effectiveness of the extracted rules,  we tested the classification accuracy of the proposed method  using the classifier with competition.

The average prediction accuracy is shown in Table V. The  accuracy is defined in the following: if the traffic prediction  result of the section at time t is "Low" and the real traffic  of this section at time t is exactly "Low", then the accuracy  is 100%. The low/middle/high accuracy means the accuracy  when the real traffic is low/middle/high, respectively.

Table V shows that the method with Accuracy Validation  can improve the overall accuracy than the method without  Accuracy Validation. The Middle volume of the traffic network  can not be predicted accurately because the middle situations  do not appear frequently enough to generate an enough number  of association rules.

TABLE V  AVERAGE PREDICTION ACCURACY FOR TESTING DATABASE  Method Prediction Accuracy  Overall Low Middle High  With Accuracy Validation 84.82 85.84 57.71 89.71  Without Accuracy Validation 82.64 83.57 56.57 87.13  Longer step prediction is explored by studying the 2-step, 3-  step and 4-step prediction, where n-step means the prediction  of the traffic volume at n time points later. It's results are  shown in Fig. 8. It is shown from Fig.8 that the prediction  accuracy decreases as the number of prediction step increases,  but the increase of the number of steps does not affect the  overall accuracy so much, so the proposed method can do  relative stable prediction even if the number of prediction steps  Increases.

The ratio of the usable rules to the total number of rules  in each prediction step is shown in Fig.9, which describes that    how the number of the usable rules for prediction decreases by  the increase of the prediction steps, considering the condition  that the time delay between the antecedent part and consequent  part should be bigger or equal to the prediction step. In another  word, as the prediction step increases, the number of the usable  rules decreases.

- 86 ,--------------------,  if.

G 84  ? 82  80 f-------?-""":__---------1  ..: ? 0:: 78 r-------------">.-======---1 :? 76 -------------------j  ? 74  '" 72   n-6tep  I?w ihAcCUlacyValiiarnn -w ihoutAcCUlacyValiiarnn I  Fig. 8. Overall accuracy for 2-step, 3-step and 4-step prediction  The proposed method cannot extract all the rules meeting  the given definition of importance since it uses the fixed    !II 100 ?

"'- 80 "'<Ie o "'  60 ?? ? 0: 40  ? '" 20  0.

N Step  Fig. 9. Average percentage of usable rules for each prediction step  number of rules for each class of the consequent attributes,  but the result shows that the ability to extract important  rules is sufficient enough for the purposes. The mechanism  of Accuracy Validation shows more stable performances as  shown in Fig. 8.



V. CONCLUSION  In this paper, an association rule mining method using GNP  with Accuracy Validation mechanism has been proposed. It is  clarified from simulations that the proposed method can extract  important time-related association rules for each class of the  consequent attributes efficiently. What's more important is that  these rules can be used to decide to which class the time  related data belong accurately. From simulations, we have also    found that the proposed method can be used in traffic volume  prediction problems. Further improvements of the proposed  method is studied in terms of applying the proposed method  to real world navigation systems.

