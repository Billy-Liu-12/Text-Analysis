Group Based Epidemic Routing for Delay and  Tolerant networks

Abstract?Delay and Tolerant Networks (DTNs) have been proposed to address data communication challenges in network scenarios, where no instantaneous end-to-end path is guaranteed because of frequent and long duration network partitions.

Typical protocols forward a message to multiple nodes to improve message delivery rate. However, a large number of replications consume many system resources that are quite limited in such scenarios. Group Based Epidemic Routing (G- Epidemic) is proposed in this paper to reduce the number of replications by limiting the range of message ?infection? of Epidemic. Nodes are divided into different groups, and the ?epidemic? only happens within certain groups. Simulation results show that G-Epidemic performs better than both Epidemic and PROPHET in the community scenario. It is able to deliver more messages, but the amount of replications drops in a big degree.

Keywords: DTN; Group based routing; probabilistic routing

I.  INTRODUCTION Delay and Tolerant Networks (DTNs) [1] is a kind of  network focused on architectures and protocols that can operate in challenging network environments. There are often extremely limited resources including buffer size, network capacity, and power in such environments. Specifically there is no guarantee of instantaneous end-to-end path between the source and destination. Finding a path from a source to some destinations is one of the core functions in DTNs. However, traditional protocols assume that there exits an end-to-end path between communicating nodes. When disconnections are detected, the protocols try to find an alternate path to replace the previous one. Thus, traditional techniques, including MANET routing protocols such as AODV [2] and DSR [3], are not fit for handling frequent and arbitrarily long-period connectivity disruptions.

In DTNs, routing is performed over time to achieve final delivery by employing a store-and-forward strategy at intermediate nodes. Most protocols replicate the messages to several paths to increase the probabilities of successful delivery. That is, a node stores messages in its buffer, and replicates them to other nodes when it encounters them. The routing protocols are mainly classified into three classes [4] [5]: 1) flooding-based, 2) history-based, and 3) direct delivery protocols.

Flooding based routing protocols, such as Epidemic [6] [7], are the first proposed to reliably deliver messages in intermittently connected networks. Each node forwards replications of the messages in its buffer whenever it meets with other nodes. History based protocols, such as PROPHET [8], try to reduce the number of replications. They only forward the replications to the nodes with higher probabilities to encounter the destinations. In direct delivery routing protocols [9], no replication is performed, and the source node only delivers the messages to the destination nodes directly.

Hence, there is no replication in the network, but it is not guaranteed that a source node encounters the destinations.

Due to node mobility, it is necessary to keep proper amount of message replications to increase the probabilities of successful deliver. But too many replications will compete for the limited resources with the valid messages. In this proposal Group Based Epidemic Routing (G-Epidemic) is developed to reduce the number of message replications by limiting the range of message exchanging.

The rest of this paper is organized as follows: Section II reviews some related work. Our proposed G-Epidemic protocol is described in Section III. Section IV presents the evaluation environment, followed by performance evaluation results in Section V. Finally some concluding remarks with future work are given in Section VI.



II. RELATED WORK We are interested in Epidemic routing protocol, which can  operate in various environments with different node mobility models. Generally, Epidemic can achieve better delivery ratio and shorter delay than other protocols, but with a heavy system overload because of redundant replications of original messages. In order to avoid the shortcomings of Epidemic, PROPHET was proposed to select the next hop nodes using the history of encounters. In this paper, we use Epidemic and PROPHET routing protocols for performance comparison with G-Epidemic.

A. Epidemic Routing Epidemic routing extends the concept of flooding. Each  node buffers messages and maintains a summary vector of them. When two nodes meet, they exchange the summary vectors. After the exchange, each node can determine whether     the other node has some messages it hasn?t seen previously. In that case, it will send a request for the messages. In such a way, the message will spread through the network like an epidemic.

If there are enough buffers, each node will finally have a copy of the original message.

To limit the utilization of resources, a hop-count field is set in each message. The hop-count will decrease by one at each forward. A message with a hop-count of one can only be delivered to the destination node. For example, node A has a message with a hop-count of n. when A encounters B, A will forward a copy of the message with a hop-count of n-1 to B.

The authors have shown that by selecting a proper maximum hop-count, Epidemic can achieve a high delivery ratio with lower resource utilization in the scenarios used in their evaluation [6].

B. PROPHET Routing The concept of PROPEHT is that if two nodes encountered  frequently in the past, there is a high probability for them to meet again in the future. Contact history is used to calculate the predictability of the encounter between two nodes. The predictability is defined as follows (A and B represents two nodes):  P(A,B) = P(A,B)old + (1- P(A,B)old)?Pinit ?1?  Where Pinit is a initialization constant between 0 and 1, and P(A,B)old is the value of P(A,B) before the current update. We can learn from (1) that the more frequently A and B encounters, the higher the predictability will be. Beside the direct contact, the transitivity principle is used to calculate the predictability of a relay node.

P(A,C) = P(A,C)old + (1- P(A,C)old)?P(A,B) ?P(B,C) ?? ?2?  ? is a non-zero constant between 0 and 1 that represents the prediction weight. The credibility will drop due to iterative calculations without relay nodes information. Hence, aging procedure is adopted to adjust the predictability.

P(A,B) = P(A,B)old ??k (3)  Where ? is aging constant between 0 and 1, and k is the number of time units that have elapsed since last aging time.



III. GROUP BASED EPIDEMIC ROUTING It is quite often difficult to acquire the mobility pattern of  DTN environment. Although Random Waypoint mobility model is commonly used for evaluating ad hoc and DTN protocols, it is not likely that nodes move in a completely random way in realistic scenarios. There are so many cases that the mobility of nodes has some potential regularity. Some nodes contact with each other more often than others just like the circle of friends. One can easily get in touch with anyone of the circle with the help of other members. We would like to  make use of the power of the ?circle? for routing in DTNs. We use the following definitions:  ? Friend: If node A encounters node B frequently, A and B are friends. If nodes A and B are friends, B and C are friends, and then A and C are also friends.

? Group: Given a set of nodes Z, Z is a group if and only if any two nodes of Z are friends.

We can learn from above that, in a group there is a high probability for a node to deliver a message to another one with the aid of relay of their friends. Fig. 1 shows three groups of nodes, represented by Region I, II and III. Nodes within the same group connect with one another through dashed line.

Node A wants to send a message m to F. In Epidemic protocol, m will be forwarded to B and C soon after its creation, and when B, carrying m, meets with D and H, it will forward m to both of them. Then, m will be delivered to F within Region II in the near future, but m will still be propagating in Region III.

Thus, the copies of m in Region III will consume extra system resources. The situation will be better in PROPHET. A will forward m to the nodes that have higher probabilities to deliver the message. So D, E and F are candidates for the next hop.

However, perhaps it will take a long period of time for A to meet with those nodes, if B does not have a higher probability than A for the delivery.

We propose Group Based Epidemic Routing (G-Epidemic) to take advantage of the group information. If a node has a message to deliver, it will get help from all its friends. Copies of the message will propagate to all the nodes of the same group by the means of ?Epidemic?. If anyone of them encounters a node that is in the same group with the destination of the message, it will forward the message to that node. Then the message will be delivered to the destination within that group by the way of Epidemic.

From above, the forwarding strategy of G-Epidemic is as follows: when two nodes meet they exchange the summary vectors and group information. After this exchange, each node can determine whether there are some messages that the other node doesn?t keep in its buffer. If the two nodes are in the same group, they exchange all the messages that the other node doesn?t have at the movement. Otherwise, they check the messages and forward the ones, the destinations of which are in the same group with the other node.

Regi on I I I  Regi on I A  C  B  E  F  H  G  I  D Regi on I I m  Fig. 1 Three groups of nodes    The operation of G-Epidemic relies on the group information. We can initialize the groups when distributing the DTN nodes, the groups can also be set up dynamically at runtime. For example, we can use the PROPHET protocol to calculate the probabilities of contacts. Nodes with high probabilities to encounter in the future will be set in the same group. In the evaluations in this paper, we have chosen a rather simple grouping strategy-if two nodes have high probabilities to appear in the same area, they are in the same group.



IV. SIMULATION  SETUP It is vital that the models used in evaluation are realistic,  since the protocols choose the next hop depending on the mobility of nodes. Random Waypoint mobility model (RW) [10] has been commonly used for evaluating ad hoc and DTN routing protocols. In this model, nodes randomly choose a speed and a destination, move there, wait for a random period of time, and then continue the cycle. RW is an ideal model. In realistic scenarios, nodes do not move completely randomly.

Thus, we adopt a scenario, which is similar to the one used in PROPHET, called ?community model? to better reflect the reality.

The scenario consists of a 3000 * 1500 m area as shown in Fig. 2. The area is divided into 12 subareas C1-C12, standing for 12 communities. Each node has one home community that is more likely to visit than other places. There are five nodes randomly placed in each community. The mobility in this scenario is that nodes select a destination and a speed between 5 and 20 m/s, move there, wait for a period time of 0?120 seconds, and then select next destination. The destination selection strategy is that there is always a high probability for a node to choose a destination at its home community. Table 1 shows the probabilities of different destinations being chosen depending on the current location of a node.

The traffic in this scenario is that every 25-35 seconds two nodes are randomly selected, and one of them create a message with another as destination. The whole simulation lasts for 12 hours. At the start of the simulation before message generation, there is a warm up period of 1000 seconds to initialize the environment.

TABLE 1. Destination selection probabilities  FROM \ TO HOME ELSEWHERE HOME 0.7 0.3  ELSEWHERE 0.9 0.1  To investigate the performance improvement of G- Epidemic, a simulation environment is developed using Opportunistic Network Environment simulator. In our evaluation of G-Epidemic, we have focused on the following metrics: First of all, we are interested in message delivery ratio, i.e. how many messages the protocol is able to deliver to their destinations. Secondly, average delivery delay is introduced to measure how long the protocol will take to deliver a message.

That is the average time from creation of a message to its successful delivery. Finally, it is still of interest to consider the utilization of limited resource in DTN environment. Overhead ratio (y) is taken to reflect this respect, which is expressed as:  y = (Nr ? Nd) / Nd (4)  Where Nr is the total number of relayed messages in the simulation, and Nd is the number of delivered messages.



V. RESULTS In this section, we demonstrate the advantage of G-  Epidemic by simulations.  The parameters in each run of the simulations are the same except for the buffer size of the nodes.

The maximum hop-count of the message is set to 11. Such a bigger value will help to broadcast messages widely within the group. The communication rang is 20 m and 50 m. Each graph below contains three curves for G-Epidemic, Epidemic and PROPHET. On the x-axis is the buffer size of the nodes.

Fig. 3 shows the message delivery rate over different buffer sizes. It is easy to see that as the buffer size increases, so does the number of messages delivered to the destinations for all the three protocols. That is because bigger buffer size means more messages can be buffered, and the risk of dropping messages decreases. It is intuitive that G-Epidemic is able to deliver more messages than the other two.

Looking at the average delivery delay graph in Fig. 4, increasing the buffer size, also increases the delay in both Epidemic and PROPHET. Interesting to note is that there is a slight decrease of the delay in G-Epidemic when the buffer size is big enough.  With a smaller buffer size, PROPHET has a shorter average delay. While as the increase of the buffer size, the delay in G-Epidemic will be much shorter than both Epidemic and PROPHET. From Fig. 3 and Fig. 4 we can see that with a bigger buffer size, G-Epidemic is able to achieve a high delivery ratio, while the average delay of delivery doesn?t increase.

Finally, we are interested to investigate the overhead of the network in different protocols. It is desirable that the limited resources are utilized properly. Fig. 5 demonstrates the overhead ratio for the three protocols. It seems like that as the buffer size increases, the number of message replications will increase. However, there will also be more messages that are successfully delivered due to less risk of dropping buffered messages. Thus, the overhead ratio decreases in all of the three protocols as the increase of buffer size. Looking at the graph in Fig. 5, It is obvious that the overhead ratio in G-Epidemic is much less than the other two.

m  3000 m  C1 C2 C3 C4  C5 C6 C7 C8  C9 C10 C11 C12  Fig. 2 Community model    When the maximum hop-count is 3, the simulation results show that G-Epidemic and PROPHET is able to deliver a slightly more messages than G-Epidemic. But the average delay and overhead ratio of G-Epidemic are still much less than those of both Epidemic and PROPHET.



VI. CONCLUSIONS  AND FUTURE WORK We proposed Group Based Epidemic Routing protocol (G-  Epidemic) in this paper, and have achieved two main goals: 1) reducing unnecessary message replications, and 2) preserving high message delivery ratio and short delivery delay in Epidemic routing. In G-Epidemic, a node relies on all its friends, a group of frequently encountered nodes, in message delivery. Simulations performed have shown that in a community based scenario, G-Epidemic gives rather better performance than both Epidemic and PROPHET.

Our work to date has revealed that some additional questions remain to be answered. As mentioned above, G- Epidemic relies on group information for routing. However, sometimes group information may not be easily acquired before the distribution of system. In addition, it is sure that the group size affects the performance of G-Epidemic. If the size of all the groups is one, G-Epidemic will operate in the way of direct delivery; and if all the nodes are in the same group, G- Epidemic will become the same with Epidemic. Therefore, it is important to select proper parameters to define groups. We are interested in making use of history contact information to set up groups dynamically at runtime, and some research has already been underway.

