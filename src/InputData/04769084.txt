A Cross-layer Scheduling Scheme for Wireless Multimedia Transmissions with Adaptive

Abstract-It is a big challenge to design an effective scheduling algorithm for multimedia transmissions over a wireless channel that employs adaptive modulation and coding (AMC). On one hand, the scheduling algorithm needs to schedule user trans- missions by taking advantages of the channel diversity so that the overall system performance can be improved. On the other hand, the algorithm also needs to maintain fairness among users and to provide QoS guarantee based on user requirements. In this paper, we propose a novel scheduling algorithm called QoS- based cross-layer scheduling algorithm (QoS-CLS) to address the aforementioned issues. To maximize the system throughput, the algorithm takes into consideration both the physical layer and data link layer information to schedule user transmissions. Using the cross-layer information, the scheduling problem is formulated into a Markov Decision Process (MDP) and the optimum decision policy (based on the channel status, traffic state and butter status of each traffic flow) is pre-calculated by linear programming and stored in the system for scheduling in real-time. Results show that QoS-CLS can greatly enhance the channel throughput compared to the opportunistic scheduling algorithm because of its cross-layer QoS consideration and the optimization method.

Moreover, it can provide QoS guarantee and facilitate resource sharing among different traffic flows.



I. INTRODUCTION  Adaptive modulation and coding (AMC) is widely used in today's wireless communication systems. It has been adopted at the physical layer of several important standards, including 3GPP, 3GPP2, HIPERLAN/2, IEEE 802.11a, IEEE 802.15.3 and IEEE 802.16 because of its capability to maximize sys- tem efficiency over the varying mobile channel. Scheduling methods operating in AMC-based systems can improve overall channel throughput by selecting the user with the best channel status to transmit, such a strategy may result in unfairness and quality of service (QoS) degradation problems, particularly for real-time traffic. Hence there is a strong need to design a fair and efficient scheduling algorithm to support multimedia communications over AMC-based systems.

In recent years, many scheduling algorithms have been proposed for AMC-based systems. In the proportional fairness [1] and score-based [2], a weight is calculated for each user based on present or historical statistics of the channel quality and average throughput. By doing so, these algorithms seek to prevent any user from hogging the channel. However, these algorithms cannot provide a good service to real-time traffic because they do not consider the delay requirements of traffic flows. In the modified proportional fairness [3], [4], max  carrier-to-interface ratio with early delay notification [5] and channel quality-based minimum throughput assurance [6] al- gorithms, the delay requirements or current delays experienced by users are used to prioritize the traffic flows for scheduling purposes. However, they cannot precisely control the delay experienced by each packet. Moreover, they operate at the ex- pense of sacrifying system efficiency. In [7], the fundamental scheduling algorithm and the advanced scheduling algorithm (ASA) were proposed for non-realtime and realtime traffic, re- spectively. However, the performance of ASA depends heavily on the effectiveness of a heuristic algorithm. In [8], a weighted round-robin scheduling algorithm was proposed to distribute the average delay among different traffic flows by studying the queue dynamics. Both [7] and [8] cannot provide precise QoS guarantee for realtime traffic flows. In [9], the required QoS can be guaranteed. However, it must be used in conjunction with a very conservative admission control with which the system can satisfy the bandwidth requirement of all real-time traffic flows when all these users experience the worst channel status simultaneously. Also, it requires a large scheduling cycle which can be precisely shared proportionally among the traffic flows.

In this paper, we propose a novel scheduling algorithm called QoS-based cross-layer scheduling (QoS-CLS) for serv- ing multimedia traffic flows in wireless networks with AMC.

Unlike other algorithms, it is based on cross-layer considera- tions of QoS. The modulation and coding pair (we also call it mode in this paper) is not selected based on the physical layer frame error ratio (FER) requirements only. Instead, it is selected to achieve the best frame loss ratio (FLR) or channel throughput using cross-layer information. Here FLR is the total frame losses caused by frame drops at both the physical and data link layers. Note that FLR is a key QoS parameter for the user application. We present results to show that this cross layer consideration of QoS can greatly improve the channel throughput. Another distinctive characteristic of QoS-CLS is that it can support QoS guarantee and maintain fairness while maximizing the channel throughput. By analyz- ing the dynamics of the system, we formulate the scheduling problem and the selection of AMC mode into a Markov Decision Process (MDP) with the aim of maximizing the channel throughput. Then, by transforming the MDP to a linear programming optimization problem, we can add the required    QoS constraints to guarantee the FLR of some specific traffic flows, and/or to proportionally sharing the FLR among other traffic flows according to a fairness requirement. To facilitate implementation, the scheduling policy can be pre-calculated and applied later in real-time.

The remainder of the paper is organized as follows. Section II presents the cross-layer consideration and the QoS provision method of QoS-CLS. Section III introduces the system models used in this paper. Section IV studies the basic dynamics of the system. Section V illustrates the MOP model and the linear programming model for QoS-CLS. Section VI presents the results and discussion. Section VII concludes the paper.



II. QUALITY OF SERVICE  Multimedia traffic is usually delay sensitive. In QoS-CLS, a deadline-based buffering approach is used to serve the multimedia traffic. Each multimedia data frame has a certain delivery deadline, and the frame is dropped from the buffer if it cannot be sent when the specified deadline expires. For other non delay sensitive traffic, although the frames do not have any deadline, they may also be dropped due to buffer overflow. We define the fraction of frames dropped at the data link layer as the frame drop ratio (FOR), which is a key data link layer QoS measure.

In this paper, we consider a system with data link retrans- mission capability. In this case, an error frame will always be returned to the buffer for retransmission, if possible. That means, a frame is only dropped due to deadline expiration or buffer overflow. In such system, the total frame error or drop ratio experienced by upper layers, which is defined as frame loss ratio (FLR), is effectively equivalent to FOR. Note that if the FER of the physical channel becomes worse due to poor channel quality, the FOR may also be increased because more retransmissions will effectively reduce the available bandwidth for normal transmissions thus increasing the chance of buffer overflow or deadline expiration. On the other hand, in a system without data link retransmission capability, FLR is contributed by both FER and FDR. Note that, in such a system, if the FER is getting worse because of the poor channel quality, the FDR is not influenced but the total FLR is increased. For multimedia traffic, a QoS requirement can be specified by providing the desired FLR and maximum delay (i.e., the deadline).

In most AMC-based systems, the physical layer QoS, i.e., FER, and the data link layer QoS, i.e., FOR, are handled separately. Typically, an AMC mode is chosen to keep the physical layer FER below the required threshold of the traffic flow. Note that this is done without considering the FDR.

However, this approach may not work effectively under certain situations. For example, if there are too many outstanding frames at the link layer, it may be better to select the AMC mode with a higher transmission rate to clear the outstanding frames as quickly as possible. Although the selection may cause the FER to increase, the FDR may be greatly reduced to give a better overall system performance. In QoS-CLR, the AMC mode is not selected just to meet the FER threshold.

Instead, it is decided by optimizing the total FLR of all traffic   flows while providing fairness. As a result, the overall channel throughput or system performance can be greatly enhanced.

Some other work also investigated ways to improve system performance by jointly considering FER and FDR. In [10] and [11], the upper and lower signal-to-interference-plus-noise ratio (SINR) bounds for each AMC mode were designed by studying the maximum retransmission time or the queue and channel dynamics of the system, respectively. However, neither of these schemes make decisions based on the current buffer state. Also, they do not consider the scheduling problem. In [12], a scheduling algorithm has been proposed for multi- code code division multiple access systems. The current buffer status is utilized to determine the number of packets from each user to be transmitted in one TDMA frame, so as to minimize an overall FLR. However, the decision depends only on the current buffer state and does not consider the traffic models or statistics. Compared with the above algorithms, QoS-CLS takes into account the dynamics of the channel state, traffic state and buffer state of the system in order to implement an optimal decision policy.

Last but not least, maintaining fairness is another important issue in a multi-user system. QoS-CLS can operate based on different definitions of fairness. First, for some multimedia traffic which is not only delay sensitive but also FLR sensitive, QoS-CLS can guarantee the FLR of such traffic flows below some preset thresholds. Second, for traffic flows without hard FLR guarantee requirements, QoS-CLS adopts the propor- tional sharing of FLR, which was also used in previous work [13] (Note that [13] did not consider possible cross-layer optimization between FER and FOR).



III. SYSTEM DESCRIPTION  We consider the downlink scheduling in a wireless network employing AMC. The system consists of a base station at the centralized cell site broadcasting to a number of mobile terminals in the cell. Like in high speed downlink packet access (HSDPA), code division multiple access - high data rate (COMA-HOR) or other third generation wireless networks employing AMC, we assume that the downlink data channel is organized in fixed size transmission time intervals (TIl) with length Wo. At the beginning of each TTl, the system determines the traffic flow to be served and the AMC mode to be used for the TTL We also assume that an error-free feedback channel exists from each mobile terminal to the base station to convey the channel state information (CSI) and acknowledge successful transmissions. To ensure the effective operation of the system, we also consider that the system is provided with an appropriate admission control algorithm for admitting traffic flows and an effective traffic policing mechanism to shape the traffic flows. We assume that there are J traffic flows in the system. We also define the traffic flow scheduled for transmission in TTl t as d(t) E {l ... J}.

We assume that there are K possible modulation and coding pairs (modes) in the system. For mode i E {l ... K}, the transmission rate is Ri and at most Qi frames can be transmitted in one TTL Without loss of generality, we assume    TABLE I PARAMETERS FOR MODULATION AND CODING PAIRS IN AMC  the channel quality can be described by a single parameter of received SNIR ? for each TTL So, the general Nakagami-m model, which represents a large class of fading channels, is used to model the channel [16]. The received SNIR ? of a traffic flow is a random variable with the density function  Modulation BPSK QPSK QPSK 16-QAM 64-QAM  Coding rate 1/2 1/2 3/4 3/4 3/4  Rate 0.50 1.00 1.50 3.00 4.50  Pk 274.7229 90.2514 67.6181 53.3987 35.3508  Xk 7.9932 3.4998 1.6883 0.3756 0.0900  Lk (db) -1.5331 1.0942 3.9722 10.2488 15.9784  mm?m-l m? p,(E) = f() exp(--=-) (1)  f'Tt m ?  Here E == E { ?} is the average received SNIR, r (m ) == Jooo tm-ldt is the Gamma function and m is the Nakagami fading parameter (m 2: 1/2). Since each AMC mode has different capability to resist noise and interference, we define the function Ii mapping the SNIR ? to the FER for AMC mode i, Le., if the SNIR is ?, the FER under mode i is Ii (?).

Generally, the function Ii (?) can be found by experiments. In [10], an approximation of the FER in the presence of additive white Gaussian noise (AWGN) is proposed as  f () { I, if 0 < ? < ti, (2)  i ? == Pi exp(-Xi?) if ? 2: ti  where Pi, Xi and ti are mode-dependent parameters. Table I provides these parameters for some popular AMC modes for data frames with the length of 1080 bits. Their accuracy has been verified in [10]. To analyze the channel dynamics and apply it in the QoS-CLS, the Finite-State Markov Channel (FSMC) [17] model, which has been widely used in today's research on wireless channels, is employed in this paper.

Generally, the channel state is modeled as L levels. There are a upper bound ?i and a lower bound ?i-l of SNIR for level i. So, for each TTl, the channel state is one of the L levels and it may tum to an adjacent level or retain the same level in the next TTl [17]. Defining the transition probability that the state turns from i to j after a TIl to be f}i,j, we can get the transition matrix 8 == {f}i,j}. Also, we define the average FER for level i in AMC mode j as Fj,i. The determination of 8 and Fj,i from the Nakagami-m model can be found in [11].

We denote the channel state of traffic flow i at TIl t as Ci(t).

In this paper, we assume that perfect CSI can be available at the receiver using a training-based estimation method and is conveyed to the center station through the feedback channel.



IV. BASIC SYSTEM DYNAMICS  Based on the description above, we can get the dynamics of the channel state and the traffic state from 8 and <Pi (i E {I ... J}) easily. The buffer state dynamics is more   that Ri < Rj Vi < j. So we also have ai < aj. We define the mode selected for TTl t is k(t) E {I ... K}.

For contemporary multimedia communications, the Markov Modulated Poisson Process (MMPP) [14] is widely used to model different kinds of traffic, such as video, voice and best effort data. In this paper, we assume that traffic flow i has Mi different states and data packets arrive according to a Poisson process with a distinct rate Di,j per TTl at each state j. To simplify the analysis, we assume in this paper that the size of each packet can be exactly encapsulated into 1 data frame. By discretizing the model with the TTl, we can get the transition matrix <Pi == {cPi,j,j'}, where cPi,j,j' is the probability that the traffic state of traffic flow i turns to jf in the next TTl given that the traffic state is j in the current TTL Also, from the Di,j and <Pi, it is easy to get the average data frame arrival rate D i for traffic flow i. We denote the traffic state of traffic flow i at TTl t as gi(t) E {Di,l ... Di,Mi }.

We consider two different buffering mechanisms in this paper. Class one (Cl) buffering mechanism is suitable for real-time traffic flows. The delay of each frame must be strictly bounded. A fixed initial expiration counter E Pi is associated with each frame of traffic flow i upon arriving and it will decrease by 1 after each TTl. Traffic flow d(t) is selected to transmit its frames by AMC mode k(t) in TTl t. It will transmit ak(t) frames (or all the frames in the buffer, whichever is less). Among them, those frames received with uncorrectable errors are returned to the buffer for retransmissions. If a frame's expiration counter is 1 and it is not sent out or received correctly in the current TTl, it is dropped from the buffer. The expiration counters of all frames left in the buffers are decreased by 1 after the TTl. Also, some new frames may arrive to the buffers during the TTL In practice, the buffer size is finite. So, we assume that all traffic flows are buffered separately and for traffic flow i, at most EBi frames which have a same expiration time can be stored in the buffer. There is no specific delay guarantee for the class two (C2) buffering mechanism. Instead, there is a buffer of size E Ni for traffic flow i. During TTl t, some frames sent out may be returned to the buffer for retransmission because of uncorrectable errors. If the buffer is full, new frames will be dropped directly. This class of buffering mechanism is suitable for non realtime traffic or realtime traffic without a strict delay requirement. We assume that there are J 1 and J 2 (J1 + J2 == J) traffic flows employing C1 and C2 buffering mechanisms, respectively. Generally, the buffer state of traffic flow i E {I ... J1 } at the beginning of TTl t is defined as bi(t) == [bi,l (t), bi,2(t), ... ,bi,EPi (t)], where bi,j (t) is the number of frames with expiration counter as j in the buffer.

And the buffer state of traffic flow if E {J1 + I ... J} at the beginning of TTl t is described by ni' (t), the number of frames in the buffer. We assume that the buffer state of all traffic flows is known by the system.

In this paper, we assume that the channel of each user is a frequency flat fading channel, which remains unchanged in a TTL It corresponds to a block fading mode, which is suitable for slowly varying wireless channels [15]. For such channels,     pbu/2(ni(t + 1), ni(t), Ci(t), 9i(t), d(t), k(t)) ~ P{ni(t + l)lni(t), Ci(t), 9i(t), d(t), k(t)} min{li(t),Vi(t)}  L BN(li(t),j, Fk(t),Ci(t))AR(Vi(t) - j, Di,9i(t)) ni(t) -li(t) ::; ni(t + 1) < ENi j=O  li(t) 00 L L BN(li(t),j, Fk(t),Ci(t))AR(p, Di,9i(t)) j=O P=Vi(t)-j o otherwise  (15)  (8)  (9)  (12)  (10)  ?i -j AR(. 0) ==~'t,J or  't.

lo (t) == { min{Q:k(t) ,ni (t)} i == d(t) 't 0 i i= d(t)  pbu/l(bi(t + 1), bi(t), Ci(t), 9i(t), d(t), k(t)) ~P{bi(t + 1)lbi(t), Ci(t), 9i(t), d(t), k(t)} ==Wi(t) x qi(t)  qi(t)==P{bi,EPi(t + 1)19i(t)} =={Af!J,bi'EPi (t ~ 1), Di,9i(t)) ~i,EPi (t + 1)! E~i  Ej=EBi AR(J, Di,9i(t)) b~,EPi (t + 1) - EB~ where  We also analyze the frame losses in TIl t for traffic flow i given bi(t), Ci(t), 9i(t), d(t) and k(t). First, Fk(t),Ci(t) XUi,l(t) data frames are expected to be dropped because they are transmitted with errors and do not have a chance to be retransmitted. Second, bi ,1( t) - hi (t) data frames will be dropped too after the TIl because of the deadline expiration if bi,l (t) > hi(t). Third, j data frames may be dropped with probability AR(j+EBi,Di,9i(t)) because of too many frames arrive during the TIL Taking into account the three cases, the expected number of data frame losses for traffic flow i in TIl t is  is the Poisson probability function.

Combining (6) and (9) together, we get the buffer dynamics  as follows:  On the other hand, some new frames will arrive to the buffer of traffic flow i with an initial expiration counter of E Pi.

So the probability that there are bi,EPi(t + 1) frames with expiration counter E Pi in the buffer of traffic flow i is  Next we consider the buffer dynamics for C2 buffering (6) mechanism. We want to work out the transition probability  from ni(t) to ni(t + 1) for each traffic flow i given Ci(t), 9i(t) d(t) and k(t). If traffic flow i uses the C2 buffering mechanism, the number of transmitted data frames of traffic flow i in TTl t is  (5)  (3)  (4)  EPi ==IT BN(Ui,j(t), Zi,j(t), Fk(t),Ci(t))  j=2  Z? ?(t) == b? "-l(t + 1) - b? -(t) + u- ?(t) VJ? > 2~,J 't,J 't,J ~,J -  BN(i,j,p) =fG O )pi(1 - p)i-j O~j ~i and O~p~ 1 (7)  1. otherwise  where  Note that the transmitted frames with uncorrectable errors will return to the buffer. From the Ui,j (t) transmitted frames, we define that Zi,j (t) of them will return to the buffer. Then we must have  Note that Ui,j(t) can be determined from bi,j(t), Ci(t), d(t) and k(t). So given bi,j(t), Ci(t) and d(t) k(t), the probability that there are bi,j-l (t+ 1) frames with expiration counter j-l in the buffer of traffic flow i in TIl t + 1 is the probability that there are Zi,j (t) frames errors from the Ui,j (t) frame transmissions. So, we have the probability  is the binomial probability function.

For the bi,j (t) frames with expiration counter j from traffic flow i, we define that Ui,j (t) frames of them will be transmitted in TIl t. Therefore, we have  {  bi,j(t) E~'=l bi,j'(t) < hi(t) Ui,j(t) == 0 E;;-~l bi,j'(t) ? hi(t)  hi(t) - E;;-:lbi,j' (t) otherwise  complicated. It depends on not only the buffering mechanism but also the current channel state, traffic state, scheduled traffic flow and selected AMC mode.

We first study the buffer dynamics for the C1 buffering mechanism, i.e., the transition probability from bi (t) to bi (t + 1) for traffic flow i given that the corresponding channel state is Ci(t), the traffic state is 9i(t) and the traffic flow d(t) is chosen to apply AMC mode k(t) to send its frames in TIl t.

The number of frames transmitted in the TTl from traffic flow i is given as follows:  h.(t) == { min {Q:k(t) ,E::; bi,j (t)} i == d(t) ~ 0 i i= d(t)  1/i(bi(t) ,Ci(t), 9i(t), d(t), k(t)) == Fk(t),Ci(t) x Ui,l (t)  { ( ( )1 () () () ( )} + (bi,l(t) - hi(t))+ +" j x AR(j +EBi,Di,9i(t)) (11)Wi(t)==P bi,l t+ 1), ... ,bi,EPi-l t+ 1 bi t ,Ci t ,d t ,k t L.Jj=l ==P{Zi,2 (t), . . . , Zi, E Pi (t) Ibi(t), Ci (t), d(t), k(t)}    S=={s == [c, 9, b, n] : c== [Cb ... ,CJ] E {1,2, ... ,L}J  9 == [91,??? ,9J] E nf=l{I, 2, ... ,Mj }  b == [bl,b ... ,bJl,EPJ1] E nf=1 {I, 2, ,EBJ1 }EP j  n == [nJ1+1, ... ,nJ] E nf=Jl +1 {I, 2, ,ENj }} (20)  We assume that j of the Ii (t) data frames are transmitted with uncorrectable errors and p new data frames arrive to the buffer in TTl t. It is clear that if ni (t + 1) < ENi  j + p == ni(t + 1) - (ni(t) -li(t)) (13) and if ni(t + 1) == ENi  j + P ~ ni(t + 1) - (ni(t) -li(t)) (14) Note that the probability of having j data frame errors from Ii(t) transmissions is BN(li(t), j, Fk(t),Ci(t)). Furthermore, the probability that p data frames arrive during the TTl is AR(p, Di,9i(t)). So, by considering every possible j and p, we can obtain (15) where  Note that in this buffering mechanism frames are only dropped due to buffer overflow (i.e., j + p > ENi - (ni(t) -li(t))).

So, given ni(t), Ci(t), 9i(t), d(t) and k(t), (ni(t) -li(t) + j + p - ENi )+ data frames are dropped with probability  B(li(t), j, Fk(t),Ci(t))AR(p, Di,9i(t)) (17)  So considering every possibility of j and p, the expected number of data frame losses for traffic flow i in TTl t is  li(t) 00  1li(ni(t), Ci(t), 9i(t), d(t), k(t)) == L:L: AR(p, Di,9i(t)) j=Op=O  BN(li(t),j, Fk(t),cdt))(ni(t) -li(t) + j + P-ENi)+ (18)

V. MARKOV DECISION PROCESS FOR SCHEDULING AND  AMC MODE SELECTION  With the analysis above, now we construct an MDP to determine the optimal decision policy for scheduling traffic flows and selecting the AMC mode. We will show how QoS- CLS maximizes the channel throughout while supporting FLR guarantee and FLR sharing. Following the notations in [18], we describe the MDP as follows:  A. State space  A system state is defined as the row vector of channel states, traffic states and buffer states of all traffic flows sharing the channel. The system state at the beginning of TTl t is  s(t) ==[Cl (t), ,CJ(t), 91 (t), ... ,9J(t), bl,l (t), ,"bl,EP1(t), b2,1 (t), ... , bJl,EPJl (t), nJl +1 (t), ,nJ(t)]. (19)  The state space S comprises all possible state vectors, where a state vector has a certain traffic state, channel state and buffer state for each of J traffic flows. So the state space is defined as  Vi (t) == ni (t + 1) - (ni (t) - Ii (t)) (16)  B. Decision epochs and actions  The decision epoch are the beginning of the TTls. An action for TTl t is described as a(t) == [d(t), k(t)], i.e., in TTl t, traffic flow d(t) will be chosen to transmit with AMC mode k(t). The action space is the set of all possible actions, which can be defined as:  A == {a == [d, k] : dEl ... J, k E 1 ... K} (21)  C. State dynamics  Since the probability of state s (t +1) only depends on state s(t) and action a(t) as discussed in Section IV, the dynamics of the system state is a MDP, where the state transition probabilities are:  Ps(t)s(t+l) (d(t), k(t)) == P{s(t + l)ls(t), d(t), k(t)} Jl  == II pbuf1 (bj(t + 1), bj(t), Cj(t),9j(t), d(t), k(t)) j=1  J  II pbuf2(nj(t + 1), nj(t), Cj(t), 9j(t), d(t), k(t)) j=J1+l  J  II (}Cj(t),cj(t+l)?j,gj(t),gj(t+l) (22) j=1  D. Policy, performance criterion and cost function  The system must decide the action for any TTl based on the system state at the TTl. For deterministic decisions, an action a E As is chosen for each given state s E S according to a decision policy 'l/J E \lJ where W is defined as  W == {'l/J: S ~ AI'l/Js E As,Vs E S} (23)  To optimize the QoS of the system, we define the cost criterion as follows. For any deterministic policy 'l/J E \lJ and an initial state s(to), the average cost is  ~",(s(to)) =}~ ~E{ to(s(t),a(t))} (24)  where E{?} denotes the expected value and 8(s(t), a(t)) is the expected cost for a TTl given that the state at the beginning of the TTl is s(t) and the action is a(t). The aim here is to choose an optimum policy to minimizes Ll-y (s (to)) for any initial state s(to). As stated in Section II, the aim of CLS-QoS is to optimize the channel throughput subject to certain QoS constraints or requirements. Note that, given the traffic source rates of the traffic flows, if less frames are lost, the channel throughput will be higher. So here we choose the following cost function to minimize the total data frame losses:  Jl 8(s(t), a(t)) == L: 'fJj(bj(t), Cj(t), 9j(t), d(t), k(t))  j=l  J  + L: 17j(nj(t), Cj(t), 9j(t), d(t), k(t)) (25) j=J1+1  It is clear that the embedded chain considered in this paper is a unichain. So the optimal policy can be obtained by means of the linear programming method [18].

E. Constraints  To achieve specific QoS requirements, we need to set up constraints to address the FLR guarantee and proportional sharing requirements. Without loss of generality, we assume that traffic flows {31, {32," ., {3, need FLR guarantee Yf3l' Yf32' ... , Yf3" and left traffic flows ~l, ~2, ??? ,e,.,. need to share the FLR proportionally with weight wel' we2' ... , weI-'. Then for a traffic flow T E {31 ... (3" we have  Tr == lim -T  E{17r(br(t), c,.(t), gr(t), d(t), a(t? }:SDrYr (26) T~oo  Also, for any two traffic flows Tl, T2 E el ... ~,.,., we have (27)  F. Linear programming, solution to the MDP  Based on the above discussion, the optimal policy of the MDP can be acquired by solving the following linear program.

min LLxsa8(s,a) X sa ~O,sES,aEAs  s a  subject to  L Xsa - L L Xs'aPs's(a) == 0 'Is E S, (28) aEAs s'ES aEAs'  L L X sa == 1, (29) sES aEAs  L L X sa1Jr(s,a) ~ Dr X Yr 'IT E {31 ... {3, (30) sES aEAs  EsES,aEAs Xsa1Jrl (s, a) _ EsESaEAs xsa1Jr2 (s, a) == 0 'CUrl Drl W r2 Dr2  VTl, T2 E el ... ~,.,. (31) xsa/L X sa' == XS'a/L Xs'a' if C == c', b == b', n == n'. (32)  a'EAs a'EAs ,  Here if traffic flow T uses the C1 buffering mechanism, we have 1Jr(s, a) == T(br , Cr, 9r, d, k), otherwise we have 1Jr(s, a) == r(nr , cr ,9r, d, k). Note that Xsa is the optimization variable, which is is the probability that the system state is s and the action is a. Specifically, the action a will be chosen with probability XSa / Ea'EAs Xsa' when the system state is s.

Note that the above optimization objective makes sure that the number of data frame losses in the system is minimized subject to the QoS constraints. So the throughput of the system is effectively optimized. Also, the constraint (31) ensures that the FLR of specific traffic flows are guaranteed under their required thresholds. The constraint (32) ensures that other traffic flows are served with FLR proportionally distributed.

Since the system cannot distinguish two system states which have the same buffer and channel states (i.e., even though they have different traffic states), the actions mapped from such two system states should be the same. (33) provides the constraint to address this practical requirement.

G. Implementation issues  Due to the complexity of the MDP, there are implementation challenges for QoS-CLS. In practice, the scheduling decisions must be made quickly. In QoS-CLS, the scheduling of every TIl can be based on a simple table lookup. When a traffic flow arrives or departs, the system updates the look-up table by a precalculated scheduling policy and also prepares scheduling policies for situations where any traffic flow departs or another new traffic flow arrives, which will be used upon next arrival or departure.

Also, the state space of the MDP for QoS-CLS may become extremely large if some traffic flows have big buffers.

To reduce complexity, we can represent their buffer states by a few levels instead of the accurate lengths, and then construct the MDP accordingly. This approach can greatly reduce the complexity by lightly sacrificing the accuracy of the optimization. Furthermore, advanced techniques like Q- learning can also be employed to solve the MDP to greatly save the calculation time. However, both these techniques are outside the scope of this paper.



VI. RESULTS AND DISCUSSION  In this section, we study the performance of the proposed QoS-CLS algorithm. For the channel of each traffic flow, we assume that the average SNIR of the channel is 15db.

The channel is discretized into 5 levels with SNIR bounds [-00,2,5,10,20,00] db. We assume that the AMC modes employed in the system are the same as those listed in Table I.

The frame size is 1080 bits and the length of a TIl is 0.02 s.

Each TIl can hold [1, 2, 3,6, 9] frames for modes 1 to 5. This setting provides a channel with a transmission rate ranging from 54kbps to 486kbps.

First, we study a system where there is only one traffic flow.

In this case, the QoS-CLS optimizes the channel throughput only by selecting the most appropriate AMC mode for each TIL The initial expiration counter for the C1 buffering mecha- nism is 2 and the buffer size for frames with the same deadline is 5. The buffer size for the C2 buffering mechanism is 10.

The traffic flow has only one traffic state, i.e., it follows a Poisson arrival process. As a comparison, we also present the result for a scheme where the AMC mode is simply chosen  10-3 '-----'-------l._--'------'-_....I.....---L.._..l....-----'------' 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8  Traffic load (frameslITl)  Fig. 1. FLR comparison for single traffic flow (el buffering mechanism).

1.

1.8  1.6  1.4  1.2  ----*""- QoS-CLS without guarantee  -+-QoS-CLS  ~ Opportunistic scheduling  1 L.----'--_...l....------'-_...J...--.i._---'--------I._--L.-.------' 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8  Traffic load (framesITTI)  Fig. 2. Throughput comparison for single traffic flow (C 1 buffering mechanism).

to guarantee the FER. Figure 1 shows the FLR of the traffic flows with the C1 buffering mechanism. It is clear that the FLR achieved by QoS-CLR is much less than that achieved by the traditional FER guaranteed scheme. In the figure, the FLRs for the three different FER guarantee are in fact very close. It is because for most channel statuses, the AMC mode selected by the three schemes are the same, i.e., the selected AMC mode will give a FER below 0.0001 and any better AMC modes will give FERs higher than 0.01. Figure 2 shows the corresponding channel throughput of QoS-CLS and the FER guaranteed scheme. It is clear that with the increase of traffic load, QoS-CLS can outperform the FER guaranteed scheme even more. For example, if the FLR target is 0.01, QoS-CLS can achieve a throughput of 1.84 frame/TTI (with a traffic load of about 1.85) while the FER guaranteed scheme can only achieve 1.4 framelTTI (with a traffic load of about 1.4). This represents a large improvement of 32%. Due to the limitation of space, we do not show the performance of QoS-CLS for one C2 buffering mechanism traffic flow here. But it is similar to the former case.

Next we consider a system with two traffic flows sharing the channel. The first traffic flow is represented by a two- state MMPP. It has an average arrival rate of 0 frame/TTl in state 1 and 1 frameffTI in state 2. The average durations of  0.8 L----I.----I_......L...-------L_-l----i-_....L....-----L....._-'--------' 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8  Frame arrival rate of traffic flow 2 (framesrrTI)  Fig. 4. Throughput comparison for the system with two traffic flows and FLR guarantee.

state 1 and state 2 are 1.5s and Is, respectively. The average traffic load of the traffic flow is 0.4 framelTTI. Actually, it represents typical VolP traffic. This traffic flow employs the C I buffering mechanism with an initial expiration counter of 1 TTl, i.e., a frame must be sent out before the next frame arrives. The buffer size for frames with the same deadline is 6. Also, this traffic flow has a FLR guarantee requirement of FORI <0.01. Another traffic flow is represented by a Poisson process. It employs the C2 buffering mechanism with a buffer size of 6. Figures 3 and 4 show the FLR and throughput with the frame arrival rate of traffic flow 2 varying from 0.8 to 1.8 frameffTi. We compare three sets of results here: (i) QoS-CLR without implementing FLR guarantee and sharing (i.e., this scheme purely optimizes the channel throughput); (ii) regular QoS-CLR with a FOR target of 0.01 for traffic flow 1; (iii) an opportunistic scheduling scheme (i.e., in each TTl, the system chooses a traffic flow so that the throughput of the current TTl is maximized and the AMC mode is selected to achieve FER~O.Ol). Figure 3 shows that the FLR of traffic flow 1 under QoS-CLR can always be kept below 0.01. This demonstrates the correct operation of the scheduling algorithm.

The result for opportunistic scheduling shows that the traffic flow 1 has a much greater FLR for traffic flow 1 since the  _?9  _ . 1If1' - ? -v- .- .

_.~ _. -v - .- "V"  _ . ..q-  -v- .-'~ .------+---FL-R,-,Qo-S--C-LS-W1-?tho-ut-gu-ara-ntee--'  ~ FLR,. QoS-CLS  ---e-- FLR" opportunistic scheduling ? -l(_. FLRz' QoS-CLS without guarantee  ?-+- . FLRz, QoS-CLS ?-v- . FLR  , opportunistic scheduling  -l(-' _ . ...c. -. -')f-' _. _  -v- .- .~. - .- .~ . - ~ 10-3 _v_'-'''''-'-''f;I'''-  -' _.~. -' _.~. - ---+- FLR" QoS-CLS withoutfaimess  ~ FLR" QoS-CLS  ---e-- FLR" opportunistic schedUling ? -l(- . FLR  , QoS-CLS without faimess  ?-+- .FLR2, QoS-CLS ?-v- . FLR  , opportunistic scheduling  10-6 L...------'-----'~___"__-.L_-'-----'-_-'--__'__""---------' 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8  Frame arrival rate of traffic flow 2 (framesITTI)  Fig. 3. FLR comparison for the system with two traffic flows and FLR guarantee.

10-6 l----L.._--I.---_1....-----L..._---'--_l.-....-----L....._-l----I 0.6 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5  Frame arrival rate of state 2 of traffic flow 1 (framesrrTl)  Fig. 5. FLR comparison for the system with two traffic flows and FLR sharing.

1.2

VII. CONCLUSION  In this paper, we have proposed a novel scheduling algo- rithm called QoS-CLS for multimedia transmissions over wire- less channels with adaptive modulation and coding. To satisfy user QoS requirements while maintaining fairness, a cross- layer framework is used for scheduling user transmissions and selecting the appropriate AMC mode. The scheduling problem is formulated into a MDP and solved by means of linear programming. As a result, the optimal scheduling policy can be pre-determined and stored in the system for scheduling in real-time. Results show that QoS-CLS can achieve significant improvement in channel throughput as compared to the oppor- tunistic scheduling algorithm. Furthermore, it can effectively guarantee QoS (i.e., FLR) and maintain fairness.

