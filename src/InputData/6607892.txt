Inconsistencies of Connection for Heterogeneity and a New Relation Discovery Method that Solved them

Abstract?We represent the inconsistencies of the past research on the connections among such heterogeneous fields as Linked Data, Semantic Web, Bridge Ontology, and Schema Mapping as well as our own past researches. Graph structures are commonly represented as links in relationships. For the same domain, the relationships agree with each other in the domain, because the transitive and order relations are defined. However, in most heterogeneous domains, we have to define the new order relation to link heterogeneous sets. This limit exists when we consider the relation among heterogeneous fields in set theory. Three inconsistencies of linking heterogeneous resources exist: 1) the inconsistency that shows that the relation does not guarantee the future; 2) the inconsistency where no transitive relation is true, when anyone connects links for heterogeneous fields; and 3) the inconsistency where no relation in heterogeneous fields can be discovered in set theory. Closed assumption systems have already reached their limit. In the big data era, we must consider a new framework for the Three Opened Assumption?s Evil. As one solution, we present a map transformation method from set theory to the Cartesian system of coordinates to interconnect these heterogeneous sets and the Three Opened Assumption?s Evil by two easy mathematical proofs of transitive and order relations to interconnect the heterogeneous resources. In addition, we define a new functional predicate as an example of a map transformation from set theory to a Cartesian system of coordinates to interconnect the heterogeneous resources for our solution. We also define a ?dependOn? function as an example of this framework.



I. INTRODUCTION  The World Wide Web has radically altered our common knowledge space by publishing and accessing media contents as a confused space where various fields are mixed. Some media contents have a link structure that we can access freely using web browsers, and search engines index media contents to infer potential relevance to user search queries.

In most cases, we unknowingly forget what we want to learn when we access and publish web pages and their links, which are spidered through which each person is stretched by each thought. We stray into the chaos of the Internet?s enormity enormity unless the concepts with the person who spidered the link are in harmony. Even though the chances of acquiring information have increased, users continue to experience difficulty retrieving widely distributed information resources based on their purposes, tasks, or interests.

On the other hand, the exponential growth in the amount of field data means that revolutionary measures are needed for data management, analysis, and accessibility. Online databases  have become crucial to access and publish various data depending on the user?s purpose, task, or interest. Science and sensor data, including such human sensors as Twitter, are increasing rapidly with keywords and phrases like ?data intensive science? in the big data era. This difficulty arises because information resources are not well organized. In fact, currently, information resources either exist independently or are connected by static links that do not describe the significance of the connections. Most search engines still rely on keywords from users as queries and provide retrieval results by keyword matching and a long list of fragmentary information topics. Users still need to input keywords and repeatedly browse retrieval results for understanding.

However, this situation explains the failure of the system realization of the integration and the representation of various data on the web where the information on various fields is stored and accessed is based on user demands. Three inconsistencies of linking heterogeneous resources exist: 1) an inconsistency that shows that the relation does not guarantee the future; 2) an inconsistency where no transitive relation is true, when anyone connects links for heterogeneous fields; and 3) an inconsistency where no relation in heterogeneous fields can be discovered in set theory. Closed assumption systems have already reached their limits. We call this problem the Three Opened Assumption?s Evils, which is the limit through which we consider the relation between heterogeneous fields in set theory. We must change the direction of our field?fs research.

In this paper, we present one solution to this issue by considering a new mathematical paradigm shift of map trans- formation from set theory to the Cartesian system of coordi- nates for the interconnection of heterogeneous resources. We represent the Three Opened Assumption?s Evils in two easy mathematical proofs of transitive and order relations for the interconnection of heterogeneous resources and define the new functional predicate as an example of the map transformation from set theory to the Cartesian system of coordinates for the interconnection of heterogeneous resources. We also represent a dependOn function as an example.

In this paper, we briefly introduce related work in Section 2 and define the problem in Section 3. We represent the Three Opened Assumption?s Evils with two easy mathematical proofs in Section 4 and describe one solution for the limitation in Section 5, where we represent the Incomplete Mutual Map     Transportation Framework and define a new predicate function as its example: dependOn. We conclude this paper in Section 6.



II. RELATED WORK  The following section reviews previous and related cur- rent work. First, we introduce Linked Data [1]. The Linked Data community [2] advocates a set of the best principles for collaboratively publishing and interlinking structured data over the web [3]. Linked Data guidelines facilitate ad hoc re-use and the integration of conferment structured data ? across the web ? by consumer applications; however, thus far, systems have failed to emerge that convincingly demonstrate the potential applications for consuming the currently available Linked Data, which can be seen as a bottom-up approach to Semantic Web [4] adoption. The Linking Open Data [5] project began publishing legacy web corpora under the Linked Data principles. After that, such datasets were connected to each other: DBpedia [6], such corporate entities as BBC [7], Thompson Reuters [8], and the New York Times [9], and such governmental agencies as US [10] and UK [11].

Ontology mapping represents the semantic associations among each different ontology (see the survey in [12]). This method was realized by such techniques as information access- ing technology [13], machine learning [14], linguistics [15], structure graph [16], [17], [18], and similarity [19].

Schema mapping, which is one of the topics for the interconnection of heterogeneous fields (see the survey in [20]), is realized by such techniques as ontology mapping.

It creates relationships among different attributes. Therefore, we sometimes use the linked data and ontology mapping techniques in schema mapping. Gonzales et al. realized large- scale association rule generation from heterogeneous databases with missing values [21].

We continue to research other methods of heterogeneous data resources [22], [23], [24], [25]. Our proposed method dynamically computes the correlations between concepts in heterogeneous fields by interconnecting each knowledge base arranged on a knowledge grid. For the web, this method provides a framework of infinitely evolving knowledge repos- itories. The system dynamically creates a semantic associative network that connects user interests and concepts, provides correlation views that represent various relationships, and creates a semantic associative network depending on the user?s context from collective knowledge, which is created by a collaborative working environment. Therefore, this method realizes a new browsing style. We employ a link-free browsing system called correlation browsing, which represents semantic associations that utilize the collective knowledge on a collabo- rative working environment by connecting various knowledge bases.



III. PROBLEM DEFINITION  Previous methods (Section 2, including our methods) gen- erally represent relationships as links or graph structure. We  !"#$%&&'()*+! ,-#$%&&'()*+!

./!

.0!

1/2!

13!.4!.3!

.5!

.6!

.7!.8!

.9!

14!

16!

15!

18!

17!

10!

19!

1/!

:%&;%(;#.<<=#>;?.@%(=A)B=#1;*C;;(#.9#.(<#18!

Fig. 1. Relationships among persons in communities AI and DB. ai, bj are researchers. When someone adds symmetric and transitive relationships between a3 and b4, it is true that a1 is related to b5 because a1 is related to a3, a3 is related to b4, and b4 is related to b5.

!"#$%&'()!

*+,-(./"00+1-23!

'4!

'5!

647!

68!'9!'8!

':!

';!

'<!'=!

'>!

69!

6;!

6:!6=!

6<!

65!

6>!

64!

?"0)"1).'@@,.

#)&'A"1,B-%,.

6)2!))1.'>.'1@.6=!

Fig. 2. Relationships among persons in workplace and music communities.

ai are co-workers, and bj are musicians. When someone adds symmetric and transitive relationships between a3 and b4, it is actually not true that a1 is related to b5. In graph structure, it is true that a1 is related to b5.

However, realistically, a1 and b5 do not share ground without other definitions or analysis.

show examples to define our problem. We focus on human re- lationships. Actually, many researchers address social network analysis ([26]). We show two examples of human relationships in Figs. 1 and 2.

First, in Fig.1, we show an example of a human relationship between the AI and DB communities. These are actually common fields in these communities. ai, bj are researchers.

The edges mean relationships that represent the similarity of the research and the symmetric and transitive relationships.

When someone adds symmetric and transitive relationships to a3 and b4, a1 is related to b5 because a1 is related to a3, a3 is related to b4, and b4 is related to b5. Realistically, perhaps a1 is related to b5.

Next, in Fig. 2, we show another example of a person relationship between workplace and music communities by assuming no common fields in them. The edges represent the relationships of friendships and co-workers or co-session members; the edges represent the symmetric and transitive relationships. For example, a3 met b4 at a party and they became friends. In this case, we can add symmetric and transitive relationships between a3 and b4. Is it true that a1 is related to b5 when we add symmetric and transitive    relationships between a3 and b4 in the graph structure? Here, a1 is related to b5. However, realistically, a1 and b5 do not share ground without other definitions or analysis. In this case, inconsistencies occur from the previous methods (Section 2).

The difference between the first and second examples is community positioning. Here, we consider a community to be a set and the persons are its elements. For the first example, AI community is considered set A and DB community is considered set B. The following is the relation of sets A and B:  A ? B ?= ?.

For the second example, the workplace community is con-  sidered set A and the music community is considered set B.

The following is the relation of sets A and B:  A ? B = ?.

We represented the inconsistencies of these examples in a  previous method and applied it to various fields. However, we used what succeeded from these methods for cooperation within cases where the near fields are linking or are in the same fields. They do not completely apply to linking heterogeneous fields. The second example may also be applicable with the previous method. In this case, any relation between sets only exists implicitly. When elements are added to heterogeneous sets, their elements have the same order relation. In this case, it is implicitly true that A ? B, B ? A, or A?B ?= ?. When it is true that A?B ?= ?, we use the previous methods shown in Section 2. However, we do not infer the same as in the real world for A ? B = ?.

This is the limits of set theory. In set theory, we have to define the transitive and order relationships in each attribute based on the relationships in each new scene. Such old computer systems as database systems and rule-based systems were designed by the closed assumption. New scenes do not appear. However, current systems interconnect heterogeneous systems or the data for heterogeneous fields. This is not a closed assumption.

In the big data era, we must discover the relations for A ? B = ?. We believe that discoveries lead to knowledge.

Computers are discovering new relations on opened assump- tions overlooked by humans. Note that we must realize a system that discovers relationships when A ? B = ?.

We focus on the case of A ? B = ?. In this condition, we have the Three Opened Assumption?s Evils with two mathematical proofs. In the next section, we represent this in detail.



IV. THREE OPENED ASSUMPTION?S EVILS WITH TWO EASY MATHEMATICAL PROOFS  In the previous section, we showed related work and pre- sented the problem. This section shows the limitations of set theory. That is, we describe the Three Opened Assumption?s Evil in detail.

First, we show two easy mathematical proofs to represent the Three Opened Assumption?s Evil in Sections IV-A and IV-B. After that, in Section IV-C, we represent it using these two proofs.

A. Proof of inconsistency of order relation between two cer- tain sets  The preconditions of the proofs are shown. There are two sets, A = {a1, a2, ? ? ? , an} and B = {b1, b2, ? ? ? , bm}, where A ? B = ?. Both sets A and B define the order relations differently.

We prove that we cannot discover the relationship between sets A and B or other relationships when we get relationship f between a1 ? A and b1 ? B.

Proof: we prove that it is satisfied when bi = f(ai) is not true by induction.

b1 = f(a1) is true by the above condition when i = 1.

We assume that bk = f(ak) is true when i = k.

When i = k + 1, bk+1 = f(ak+1) is not true.

This is because set A has an order relation. However, set B has another order relation. bk ? bk+1 may not be true, if ak ? ak+1 is true and vice versa. Furthermore, both ak ? ak+1 and bk ? bk+1 may not be true.

Although b1 = f(a1) is true, bi = f(ai) is not.

We cannot discover the relation between each heterogeneous set when we discover or link between heterogeneous elements.

It is also hard to discover other relations with clue b1 = f(a1).

B. Proof of inconsistency of the transitive relation between two certain sets  Sets A and B are the same as in the former case. Set B has order relation b1 ? b2 ? b3 ? b4 ? ? ?. Furthermore, set B has a transitive relation; if b1 ? b2 and b2 ? b3 is true, then b1 ? b3 is true. Set A has its own order relation.

Proof: We prove that a1 ? b3 is true when we get relation a1 ? b1.

To reveal the conclusion first, a1 ? b3 may not satisfy.

We show a counter example. Assume a1 = (1, 5), b1 = (2, 1), b2 = (3, 2), b3 = (4, 3).

The relationship of a1 and b1 focuses on each first element.

Then a1 ? b1 is true.

The order relation of set B focuses on more values of each second element. Then b1 ? b2 ? b3, and if b1 ? b2 and b2 ? b3 is true, then b1 ? b3 is true.

However, a1 ? b3 is not true in the order set of set B.

Like the relation of a1 and b1, an inconsistency occurs whose order and transitive relations of set B are not guaranteed.

Although we strictly define own order and transitive relation in a certain set, an inconsistency occurs with a relation with the element outside of the set.

C. What are the Three Opened Assumption?s Evils?

In this section, we scrutinize the Three Opened Assump- tion?s Evils using the two proofs shown in Sections IV-A and IV-B.

1) Inconsistency is shown whose relation does not guar- antee the future : For example, we can identify some rela- tionships between each set by data mining technology. Note that the results only represent relationships of the present data.

These relationships are not guaranteed if the system adds new records. Occasionally, some researchers and users anticipate an uncertain value of a new record using extracted relationships.

However, such usage is incorrect. We show the proof from Section IV-A. This proof shows the non-meaning of predicting uncertain values by data mining, because we assume that sets A and B are attributes in the relational database and that ai and bi are the attribute values of each set. The data mining result is guaranteed if no updates occur. However, most tables have many updates. We assume k records in the database and that the number of each attribute value is k. The system performs data mining and extracts bi = f(ai). This relation f is only guaranteed when there are k records in the database. If the number of records is k + 1, relation f is not guaranteed.

Indexing relations, which are extracted by some methods, is meaningless for predicting uncertain or missing values.

2) Inconsistency where any transitive relation is not true, when anyone connects links for heterogeneous fields: In the closed assumption, we create or extract relationships in a set.

In this case, the transitive and order relations are true. How- ever, they are not true when we create or extract relationships over the sets shown in Section IV-B. This phenomenon occurs when we use bridge ontology, semantic web, linked data, etc.

Each ontology in specific fields is unconsciously created in closed assumptions. These techniques connect ontologies in specific fields, which are changed from a closed to an open assumption. Therefore, it may become possible to use these ontologies only by connecting each element of each set. On the contrary, is the determinant possible when trying for the author of bridge ontology? Such determination is difficult.

3) Inconsistency where any relation in heterogeneous fields cannot be discovered in set theory: Should such relationships be indexed or aggregated? We might semantically discover new relationships. However, how to discover new relationships is not true, because the two proofs shown in Section IV-A and IV-B are represented. By the proof shown in Section IV-A, even if part of the relations of each element of the sets is known, the relations of all of the sets are not guaranteed.

Moreover, the relation is not guaranteed when a new record is entered, even if the relation of the sets was guaranteed (IV-C1).

By the proof shown in Section IV-B, the transitive and order relations are not true when we create or extract relationships over the sets shown in Section IV-B. We previously described it IV-C2.

From these results, even if we can retrieve the relationships, their discovery is impossible by inference and reasoning, because only the relationships that we have discovered are effective; however, transitive and order relationships are not guaranteed. Its fact is non-trivial by IV-A and IV-B. It is disappointed at this result. However, it represents a paradigm shift from closed to opened assumption systems.

Note that it is changed from a closed to an open assumption.

Therefore, by connecting each element of each set, it may become impossible to use these ontologies. Computing some systems is very dangerous with bridge ontology and linked data. On the contrary, is the determinant in the case of tying possible for the author of bridge ontology? Determining this is very difficult. Of course, schema mapping has the same problem, since RDB has relation ?. Discovering new relations by inference and reasoning is difficult.

We need a paradigm shift since the current theory cannot discover any new relationships, as shown in Sections IV-A and IV-B.

One solution is our framework called: ?Incomplete mu- tual map transformation framework between set theory and Cartesian system of coordinates.? This method approximates and maps from the world of modern function theory to the world of classic function theory or vice versa. By mapping the Cartesian system of coordinates, the order relation is automatically decided. In addition, in the big data era, there are much continuous multi-value data. Such computation is easier in the Cartesian system of coordinates than in set theory.

Until now, in Description Logics (e.g., see [27]), their systems calculate the inconsistencies in models with strong theoretical support, e.g., analyses of computational complexity.

Giving relations to such works could increase reader under- standing of our proposed idea. In addition, in recent OAEI, some groups have used a kind of background knowledge (e.g., a strong ontology that can be mapped to both target ontologies) to consider such inconsistencies as hints to generate better ontology mappings. For details, see LogMap [28] and some other works.

Our model maps between set theory and the Cartesian system of coordinates by defining the functional predicate.

We can detect various differences and relative relationships by comparisons. It is important to use the old function family on databases designed on set theory to realize mutual mapping.

By realizing this framework, we can discover new relation- ships in the Cartesian system of coordinates and retrieve current relationships in set theory.



V. INCOMPLETE MUTUAL MAP TRANSFORMATION FRAMEWORK BETWEEN SET THEORY AND CARTESIAN  SYSTEM OF COORDINATES  In this section, we show the Incomplete Mutual Map Trans- formation Framework between set theory and the Cartesian system of coordinates. The point is ?incomplete?. The map transformation is the approximate values because the concept of set theory is wider than the Cartesian system of coordinates.

In this method, we users define the functional predicates. Each functional predicate has features in both set theory and the Cartesian system of coordinates. We also define the features of function predicates in both set theory and the Cartesian system of coordinates. By this definition, we can mutually map between set theory and the Cartesian system of coordinates.

For the case of discovery, we calculate in the Cartesian system of coordinates, and for retrieval and any other set operation, we calculate in set theory. If we calculate in real-time, the    Functional Predicate!

Set Theory!Cartesian System of  Coordinates!

?? commutative property  ?? associative property  ?? distributive property  ?? reflexive relation  ?? antisymmetric relation  ?? transitive relation!

?? axis adaptability evaluation  ?? uniqueness evaluation  ?? certainty evaluation  ?? predicate satisfaction evaluation!

Fig. 3. Overview of Incomplete Mutual Map Transformation Framework between set theory and Cartesian system of coordinates. This framework defines the features in both set theory and Cartesian system of coordinates.

With this definition, we can mutually map between set theory and Cartesian system of coordinates.

framework can clean up the Three Opened Assumption?s Evils shown in IV-C. The overall view of this framework is shown in Fig. 3.

We next define a functional predicate in the Incomplete Mutual Map Transformation Framework. In Section VI-A, we describe the features of functional predicates in the Cartesian system of coordinates. In Section V-B, we describe the features of functional predicates in set theory.

A. Features of Functional Predicate in the Cartesian system of coordinates  Generally, data in computer systems exist as sets or frag- mentally as elements; the data in computer systems are subject to set theory. However, since the set theory concept is wider than the Cartesian system of coordinates, it is impossible to completely map from set theory to the Cartesian system. Our framework prepares three evaluation indexes to estimate pre- cision: axis adaptability, uniqueness, and certainty evaluations.

We also define the behavior of the values on the defined axis in the Cartesian system of coordinates to represent a predicate.

The framework has an evaluation index for the predicate. The four evaluation values estimate the probability of the predicate in the Cartesian system of coordinates.

1) Axis Adaptability Evaluation: To construct a Cartesian system of coordinates, we must select the axis from the sets.

However, not all sets satisfy the axis. The following are the conditions under which a certain set is chosen as an axis:  1) A candidate set has the order relation to the elements in the set.

2) Each element in a candidate set is narrow with equal intervals.

We must fulfill item 1). There should be item 2) as possible.

A better condition is where each element in a candidate set is narrower and more equal intervals. For example, time, latitude, longitude, atmosphere, temperature, and seismic intensity are available. Moreover, not only numerical values but also words are available. For example, terms are also available that are ordered by the alphabet, names, and symbols that determine the order relation.

2) Uniqueness Evaluation: The elements of other sets are mapped on the axes selected in the former process. Of course, the elements of the set cannot be mapped in the selected axes.

Furthermore, each value on the axis should only be one value by one element of the set. However, such cases are few. If two or more elements of the sets are mapped on the same value on an axis, we do the following:  1) When two or more elements in the set are mapped by the same value on an axis, let the average of the elements be the value of the set to the value on the axis.

2) Uniqueness is evaluated by calculating the variances.

In item 2), when the variance is low, its uniqueness is high, because most of the elements are centered on the average value. Conversely, when the variance is high, its uniqueness is low, because each element greatly varies from the average value. If some of the elements in the set can be mapped into the axis, we should map on the axis. If there are some missing or uncertain values, we assign a value to the maximum and minimum values and calculate the average and the variance.

3) Certainty Evaluation: Some uncertain or missing values might exist when we map from set theory to the Cartesian system of coordinates. In this case, we calculate the certainty evaluation by driving the rate of an uncertain value from among the numbers of the elements of the set to the map.

4) Behavior of values for representing predicates: This process is crucial. We must identify the behavior of the values that are mapped in the axis for representing predicates because it is important to coordinate between the behaviors of the value and the predicate on an axis. We define such functions as disjoint, meet, overlap, coveredBy, covers, equal, contain, inside, correlate, moreThan, lessThan, alongWith, join, domainDependedCorrelate on the axis if we coordinate between the behavior of the value and the predicate on an axis. Since these functions operate on the Cartesian system of coordinates, each function might be clarified based on its norm, distance, and inner product, if it is not special. We can create functions more viscerally and freely than the set theory?s function. Here, we calculated the mapped elements using the function defined above.

B. Features of Functional Predicates in Set Theory  Even though we discovered some relations with the former process, we still have to resolve the results into set theory to use the old functions that are created in such set theory as SQL operations. This creation is not difficult. We only have to define whether our defined function satisfies such binary relations as reflexive, antisymmetric, transitive relation, and commutative. For a relation between two sets, we should also verify such binary operations as commutative, associative, and distributive properties. We operate on set theory using the discovered relations in these processes.

1) Reflexive/Irreflexive/Coreflexive Relations: We predict that the reflexive relation is almost true on the Cartesian system of coordinates, where we can also verify it.

2) Symmetric/Antisymmetric/Asymmetric Relations: The symmetric relation may be equivalent to the problem whether any inverse function exists on the Cartesian system of coor- dinates depending on the case. We must calculate the inverse function on the Cartesian system of coordinates.

3) Transitive Relation: The transitive relation is defined by the behavior of the values to represent the predicates on the Cartesian system of coordinates because we can verify it.

4) Commutative Property: The commutative property is also defined by the behavior of the values to represent the predicates on the Cartesian system of coordinates because we can verify it.

5) Associative Property: The associative property is also defined by the behavior of the values to represent the predi- cates on the Cartesian system of coordinates because we can verify it.

6) Distributive Property: The distributive property is also defined by the behavior of the values for representing the predicates on the Cartesian system of coordinates because we can verify it.



VI. EXAMPLE OF FUNCTIONAL PREDICATE DEFINITION AND PRELIMINARY EVALUATION  In this section, we define a functional predicate called ?de- pendOn? in our framework by such functions as disjoint, meet, overlap, coveredBy, covers, equal, contain, inside, correlate, moreThan, lessThan, alongWith, join, and domainDepended- Correlate on the same axis as this process.

?DependOn? means that set A relies on set X . The value of element ai of set A should only change with the variation of the value of element xj of set X . Note that for simplicity, ?dependOn? is represented in {A}(X), when set A depends on set X .

Table I shows the feature definition of ?dependOn?: one example of a functional predicate.

A. Preliminary Evaluation ? dependOn  In this section, we represent a preliminary evaluation of a predicate function called ?dependOn? with two actual datasets shown in Tables II and III.

Table II shows the monthly average temperatures down- loaded from Japan?fs Meteorological Agency?fs web site.

Table III shows the annual averages of the price (yen) of cucumbers (5 kg) and cabbages (10 kg) from the Ministry of Agriculture, Forestry and Fisheries of Japan?fs web site.

For example, we can learn how the temperature in a particular month affected their prices with predicate function ?depen- dOn? in the incomplete mutual map transformation framework between set theory and the Cartesian system of coordinates.

Each attribute seems to be sets. If the temperature can be an axis, the prices are mapped and ?dependOn? is verified by the evaluation indexes shown in .

The temperatures can be placed on an axis because they are continuous values. The average prices are also continuous values. We can map the average prices into the temper- ature axis using annual attributes. Generally, we can map  TABLE I ?DEPENDON?: EXAMPLE OF FUNCTIONAL PREDICATE FEATURE  DEFINITION  Definitions in Cartesian System of  Coordinates!

Definition in set theory!

Axis  Adaptability  Evaluation!

Axis Adaptability  Evaluation AAE of set X as  follow;      where average (X) is interval  average of each element of X in  order, variance (X) is interval  variance of each element of X  and t is any value from 0 to 1.!

Reflexive/  Irreflexive/  Coreflexive  Relation!

The reflexive relation is  satisfied.!

Symmetric/  Antisymmetric/  Asymmetric  Relation!

{A}(X)?{X}(A)  (Except for xj = f ?1(a?x).)    {A, B}(X)={B, A}(X)!

Uniqueness  Evaluation!

Uniqueness Evaluation (UE) in  the linear approximation as  follows;      where R2 is the coefficient of  determination using a linear  approximation.

Transitive  Relation!

{A,B}(X) and {B,C}  (X) can be represented  in {A,B,C}(X)!{A,C}  (X)!

Certainty  Evaluation!

Certainty  Evaluation (CE) as follows:      where uncertaintyData is the  amount of uncertainty or  missing values in elements of  set X, and N is the number of  elements of set X.!

Commutative  Property!

The commutative  property is not satisfied. !

Behavior of  values to  represent  predicate!

The linear approximation  approximates plots mapped to  axis (constructed from set X) by  y = ?x + ?, where y is  approximated plots value  (approximated element values  of the set A), ? is a slope, x is  each element value in set X and  ? is invariable.

Representing predicate (BV)  defined as follows:  BV=??0!

Associative  Property!

The associative  property is not satisfied.!

Distributive  Property!

{A, B}(X) = {A}(X) ?  {B}(X).!

AEE = t(average(x))+ (1? t)(variance(X))   UE = R  CE = 1?uncertaintyDataen) OF CUCUMBERS (5kg) AND CABBAGE  (10kg)  !" !"!"#$%&" !'$$'(%"  #$$%" &&'(" '$)"  #$$(" &##'" *+)"  #$$+" &&$#" ''#"  #$&$" &#,&" %,+"  #$&&" &&%+" *%,"  with common attributes, thesauruses, and concept dictionaries (with certain and static relations.) For example, Fig. 4 shows mapping averages of price for cabbage into axis of January average of temperature. If you can do it, you get relationships    !"#"$%&'()*"+"%,,&$,"  -."#"/&0%$0)!

/"  (//"  0//"  $//"  %//"  1//"  '//"  )//"  2//"  /" (" 0" $" %" 1" '"  !

" # $% & # '( $) *# '+ ,' *% - - # & # !

.%/0%$1'!"#$%&#'+,'!23+4(5#$#'6#3(#$%20$#!

Fig. 4. Mapping Averages of Price for Cabbage into Axis of January Average of Temperature.

?dependOn?.

Table IV shows each value of the definition of ?dependOn?  in the Cartesian system of coordinates: axis adaptability evalu- ation AAE, uniqueness evaluation (UE), certainty evaluation (CE), and the behavior of the values for representing a predicate (BV ). The monthly temperature average and average annual prices are continuous values. Therefore, AAE is always ?1?. The monthly temperature and the annual price averages are not uncertain or missing values. Therefore, CE is always ?1?. That is, we decide the ?dependOn? predicate by UE and BV . UE is especially important.

For cucumbers, the UEs are higher in May and October.

Cucumbers are a summer vegetable in Japan. May is also an important season for them, since their price in winter is higher as the extreme heat continues into autumn. Therefore, we can see the dependence between cucumbers and October.

For cabbages, UE is higher in December. Since Japanese often eat ?spring cabbage? in spring, the vegetable must be planted in the winter. We can see the dependence between cabbages and December.

This result not only verifies predicate function ?dependOn? but also the discovery of linking heterogeneous databases by a predicate function. Our method discovers them without knowledge, descriptions or relations with their predicates from numerical value data. The system discovers the relationships with their various predicates by defining the predicate func- tions from various data when we define such functions as disjoint, meet, overlap, coveredBy, covers, equal, contain, inside, correlate, moreThan, lessThan, alongWith, join, and domainDependedCorrelate. With these relationships, we can operate in set theory, because we can also define the feature of the predicate function in set theory. However, note that we should re-verify predicate function ?dependOn? when the data are updated.



VII. CONCLUSION  We represented the inconsistencies of past researches that contributed to the interconnection of such heterogeneous fields  as Linked Data, Semantic Web, and our past researches. We show the Three Opened Assumption?s Evils using two easy mathematical proofs of transitive and order relations for the interconnection of heterogeneous resources. We also represent the ?dependOn? function as an example of map transformation from set theory to the Cartesian system of coordinates for the interconnection of heterogeneous things.

In our method, we can define such functions as disjoint, meet, overlap, coveredBy, covers, equal, contain, inside, cor- relate, moreThan, lessThan, alongWith, join, and domainDe- pendedCorrelate if we coordinate the behavior of the value and the predicate on an axis.

We also show a preliminary evaluation of predicate function ?dependOn?. This result not only verifies predicate function ?dependOn? but also links heterogeneous databases by predi- cate function. Our method discovers them without knowledge or a person?s description from numerical value data. The system discovers the relationships by defining the predicate function. With the relationships, we can operate in set theory, because we also define the features of the predicate function in it. However, note that we must re-verify predicate function ?dependOn? when the data are updated.

In the big data era, we must design systems in opened assumptions. We cannot satisfy user?s needs with past de- signing systems in closed assumptions. Their extensions are also the same. Since we cannot describe the relationships of all the data, we must construct a system that discovers the relations from various data. However, there are Three Opened Assumption?s Evils. Our framework discovers links to heterogeneous databases by predicate functions. In this preliminary evaluation, our framework is efficient in the big data era. In this paper, we show proofs where heterogeneous field integration is realized by bridging existing relationships, linking existing resources, etc. Users require new systems. We must design an on-demand relation discovery system like our framework.

