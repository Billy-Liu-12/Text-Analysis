THREE DIFFERENT KG VERSION FOR

Abstract - The need for an efficient technique for  compression of Images ever increasing because the original  images need large amounts of disk space seems to be a big  disadvantage during transmission & storage. Even though there are so many compression technique already present a  better technique which is faster, memory efficient and  simple which surely suits the requirements of the user. This  paper have three version of KG technique which named as KGI, KG2 and KG3. These technique are very useful in image compression but all have different way to compress  image. Compression ratio of image are also different in these  three version and better to each other which depends upon  what types of image chosen for compression.

For version I: This technique named KGI version. The technique used here, is much more helpful in reducing the bandwidth of an  image and to speed up of its availability, reliability, and  transmission rates.

For version 2: This technique named KG2 version. The technique used here is extremely helpful in reducing data storage and  transformation without any loss in an image. In this  technique, an image compression domain algorithm aims at  high performance in terms of image effectiveness.

For version 3: This technique named KG3 version. In this paper we proposed the Lossless method of image compression and  decompression. This technique is simple in implementation  and utilizes less memory. A software algorithm has been developed and implemented to compress and decompress the  image.

KEYWORDS- KG Technique, KG1, KG2, KG3, Compression,  Decompression, RGB, Bit, Image, Lossless.

1. INTRODUCTION  Image compression is the application of Data compression. So now image compression becomes the important issue to study. The objective is to reduce redundancy of the image data in order to store or transmit   data in an efficient form. It helps in reducing the no. of bytes without making any changes in its original image, so that it will take less time, and less hard disk space to send a data from one place to another. There are several standards for image compression and decompression such as Joint Photographic Experts Group (JPEG), JPEG2000, Graphic Interchange Format (GIF), Portable Network Graphics (PNG), and Tagged Image File Format (TIFF).

JPEG compression is the most widely used form of lossy For version I: According to KG 1 image compression technique, it depicts the colors with all of the possible combinations of Red, Green and Blue. Here the presence of any color is represented by I and absence will be shown by 0 bit. The intensity of the color present lies in between the range 0 to 255.

Due to the presence of only one of the 8 bits the possible combinations are- ? If there is the presence of only red color pixels in the image i.e. (100) then there is no need to represent green and blue bits. So there are 8 possible combinations of red color be made. So it shows the high intensity of red color in the image.

? If there is the presence of only blue color pixels in the image i.e. (001) then there is no need to represent red and green bits. So there are 8 possible combinations of blue color be made. So it shows the high intensity of blue color.

? Also, if there is the presence of only green color pixels in the image i.e. (010) then there is no need to represent red and blue bits. So there are 8 possible combinations of green color be made. So it shows the high intensity of green color.

Due to the presence of two of the 8 bits the possible combinations are-  ? When green and blue color pixels present in the image i.e. (011) then there is no need to represent red color. So there are 8 possible combinations of green    color and 8 possible combinations of blue color be made.

So it reflects the high intensity of green and blue color but not red.

? When red and blue color pixels present in the image i.e. (101) then there is no need to represent green color.

So there are 8 possible combinations of red color and 8 possible combinations of blue color be made. So it reflects the high intensity of red and blue color but not green.

? When red and green color pixels present in the image i.e. (110) then there is no need to represent blue color. So there are 8 possible combinations of red color and 8 possible combinations of green color be made. So it reflects the high intensity of red and green color but not blue.

When all the bits are absent then- ? In this case the possible combinations are (000), here is no need to represent any color among red green and blue.

So it reflects the low color intensity.

When all the bits are present then- ? In this case the possible combinations are (111), it represent all 8 bit possible color combinations among red green and blue. So it reflects the highest color intensity.

Redundancy - Redundancy is the number of bits used to transmit a message minus the number of bits of actual information in the message.

r ..... -.-. ...0- ..... .. -... __ 1 .-- ?? ? -  For version 2: According to KG2 image compression technique, it compresses the image either vertically, horizontally or diagonally.

Due to the repetition of pixels in three direction but 1 at a time not simultaneously then it perform one of the three  operations -  ? If pixel repeated from previous pixel is minimal horizontally than replace with 01 bits & apply the operations which are as follows  1. Calculate the number of bits in binary conversion of number of pixel difference.

11. Then add 3 bits from binary conversion of calculated number of bits  111. Then add binary conversion of length of selected minimal pixel difference  ? If pixel repeated from previous pixel is minimal vertically than replace with 01 bits & apply the operations which are as follows  1. Calculate the number of bits in binary conversion of number of pixel difference.

11. Then add 3 bits from binary converSIOn of calculated number of bits  iii. Then add binary conversion of length of selected minimal pixel difference  ? If pixel repeated from previous pixel is minimal diagonally than replace with 01 bits & apply the operations which are as follows  i. Calculate the number of bits in binary conversion of number of pixel difference.

11. Then add 3 bits from binary conversion of calculated number of bits  111. Then add binary conversion of length of selected minimal pixel difference  For version 3: According to KG3 image compression technique, it compresses the image in any manner by selecting the pixels. According to this technique, if pixel is repeat from previous scan pixel then add 1 otherwise add O. If it adds the zero then select the next pixel.

The basic flow diagram of image compression -  Bitstream  Encoder .. De<:oder '--_---..J  2. HISTORY  Compression techniques have played an important role in the world of telecommunication and multimedia systems where bandwidth is still a valuable commodity. Hence, Image compression techniques are of prime importance for reducing the amount of information needed for picture sequence without losing much of its quality. The history of compression begins in the 1960s. Interest increased with improvements in picture quality and digital coding.

In lossy compression scheme, the reconstructed image contains degradation relative to the original. Lossy technique causes image quality degradation in each compression or decompression step. In general, lossy techniques provide for greater compression ratios than loss less techniques. So the loss less technique is much more suitable than lossy technique. After that the international standard organization and international telecommunication established the concept of jpeg (joint photographic experts group) .but it does not provide the high contrast screenshots. In the early 1990s, the Motion Picture Experts Group (MPEG) started investigating coding techniques for storage of video, such as CD? ROMs. The basic framework of the H.261 generation of MPEG, called the MPEG-1 standard, was capable of accomplishing this task at 1.5 Mbit/s. Since for the storage of video, encoding and decoding delays are not a major constraint, one can trade delay for compression efficiency .. These days, MPEG-1 decoders/players are becoming commonplace for multimedia on computers.

MPEG-l decoder plug-in hardware boads (e.g. MPEG magic cards) have been around for a while, and now software MPEG-l decoders are available with the release of operating systems or multimedia extensions for PC.

Exa:n"l.ple: (bin.ary code .. sY:l:"l."'l.bols: 0 .. 1. lel:l.gt:h.: 3)  JPEG  0: 000 1: 001 2: 010 3: 011  4-: 100 5: 101  7: 111  JPEG Stands for Joint Photographic Experts Group. It is used to build the standards for continuous tone image coding. JPEG is a lossy compression technique used for full-color or gray-scale images, by exploiting the fact that the human will not notice small color  Redundancy - Redundancy is the number of bits used to transmit a message minus the number of bits of actual information in the message.

Types of Data Redundancy (1) Coding (2) Interpixel  Compression attempts to reduce one or more of these redundancy types.

Coding Redundancy - Code: a list of symbols (letters, numbers, bits etc.) Code word: a sequence of symbols used to represent a piece of information or an event (e.g., gray levels).

Code word length,;, number of symbols in each code word.

3. PROPOSED COMPRESSION PROCEDURE  For version 1: In the KG 1 technique there are three color combinations of red, green and blue lies within the range 0 to 255. The color that it highlights here has the highest intensity and at that time it ignores the color that reflects low intensity.

For example, in case of 00 I it highlights only blue color here. So there is no need to reflect red and green colors.

So, it only depicts only the 256 possible combinations of blue color only. In this way our image has been compressed easily.

'"  pixel  range  tromOtO  Blue ciiltl!gory  pixel within  range fromOtO   SClInlngdplxel hJrlrontaily  from green pixel to another green pixel  Compression of Image by KGVersionl Technique by redudlllbits of same category of COlorln specific  range Oto 255 for every c:olorout of fed green blue  comblnatl(l'1  of different  cateilorypixel  witfljnrangoe  fromOt025S  forevel)'  color  For version 2: In the KG2 technique repetItIOn of pixels in three direction but 1 at a time not simultaneously. If repetition occurred then calculate the minimum number of pixel difference from current pixel to any previous pixel horizontally, vertically and diagonally . .  For example, If selected pixel repeated from previous pixel is minimal horizontally than replace with 01 bits it calculate the number of bits in binary conversion of number of pixel difference, then add 3 bits from binary conversion of calculated number of bits, then add binary conversion of length of selected minimal pixel difference. In this way our image has been compressed easily. As shown in fig4 image will compress horizontal, vertically and diagonally when ever pixel will repeat in any of these three directions.

Scanlng  of pixel  vertically  Scaningct pixel oorizontally pixel  Scaning ct Pixel  daigonally  Pixel which  is repeated  All the pixel inthisdrcle can comefor  repeated pixel and can compress easily  by KGVersion2Technique  compressi on im age by KG Versi on2 Techniqueby reduce bits of repeated pi xel in specific  For version 3: In the KG3 technique, the repetItIOn of pixels in any direction. Here any direction means not only in horizontally or vertically or diagonally but also in anywhere in the image. As image are made of pixel hare pixel means representation of different color in image which can be repeated anywhere in image. KG3 technique is very power full technique to compress images of highly repeated ration of same pixel in whole image. If pixel is repeat from previous scan pixel then add 1 otherwise add O. If it adds the zero then select the next pixel. If it adds I then add 1 more bit which will specify adding of next number of bits. Add 00 for horizontally repeated pixel and store its relative position within two bit if relati ve position is less than 4 and so on.

Scaning  of pixel  vertically  Seeming r:J pixel hJrizontaily aixel  from green ?xel to another green ?xel  repeated pixel and can compress easily  by KG Version3Tedlnlque  Relative  positloois  land 2 means  COmpression of image by KG Version3Tedlnique by reducing bits of repeated pixel in specific range in all     4. KG COMPRESSION ALGORITHM  For version 1: 1. Firstly scan the image file in BMP format and  then  2. Take a pointer for image to denotes pixel 3. Point to first pixel 4. Check bits of pixel and apply the following  operations - >- If its first 8 bits are zero then add 000 in this and  remove the first 8bits.

>- If its middle 8 bits are zero then add 001 in this and remove the middle 8 bits.

>- If its last 8 bits are zero then add 010 in this and remove last 8 bits.

>- If its first 16 bits are zero then add 011 in this and remove first 16 bits.

>- If its last 16 bits are zero then add 100 in this and last 16 bits.

>- If its first 8 bit and last 8 bits are zero then add 101 in this and remove first and last 8 bits.

>- If neither of above condition occurs then add 110.

>- Else add III and position of that pixel in 12 bits which come earlier as same Point to next pixel  if it have and then go to step (4)  5. End  For version 2:

I. Firstly select an appropriate image for  Compression in BMP or JPEG format.

2. Then select its first pixel and add two bits 00 in starting of its bits  3. Then select next pixel 4. Then check the repetition of pixel from its  previous pixels.

5. If repetition occurred then calculate the minimum number of pixel difference from current pixel to any previous pixel horizontally,  vertically and diagonally  6. If selected pixel repeated from previous pixel is minimal horizontally than replace with 01 bits then apply operation  >- Calculate the number of bits in binary conversion of number of pixel difference.

>- Then add 3 bits from binary conversion of calculated number of bits  >- Then add binary conversion of length of selected minimal pixel difference  7. Else if selected pixel repeat from previous pixel is minimal vertically than replace with 01 bits Than repeat sub step A. from step 6  8. Else if selected pixel repeat from previous pixel  is minimal diagonally than replace with 0 I bits Than repeat sub step A. from step 6  9. Go to step 3 if there are more pixel left.

10. End  For version 3:

I. First of select image for Compression 2. Than select its first pixel and add bit 0 in  Starting of its bits  3. If it have more pixel then select next pixel.

4. Then check is pixel repeat from previous scan  Pixel  5. If repeat than add l other wise add 0 A. If add 0 then go to step 3.

B. If add I then add I more bit which will specify  adding of next number of bits as:

I. Add 0 if next adding number of bit is 2 or 4 a) Add 00 for horizontally repeated pixel and  store its relative position within two bit if  relative position is less than 4 and then go to step  3.

b) Add 0 I for vertically repeated pixel and store its relative position within two bit if relative  position is less than 4 and then go to step 3.

c) Add 10 for diagonally repeated pixel and store its relative position within two bit if relative  position is less than 4 and then go to step 3.

d) Add II for other repeated pixel and store its relative position within four bit two bits for  horizontally and two bits for vertically position if  relative position is less than 4 and then go to step  3.



II. Add I if next adding number of bit is 4 Or 8  a) Add 00 for horizontally repeated pixel and store its relative position within two bit if  relative position is less than 16 and then go to step 3.

b) Add 0 I for vertically repeated pixel and store  its relative position within four bit if relative position  is less than 16 and then go to step 3.

c) Add 10 for diagonally repeated pixel and store  its relative position within four bit if relative position  is less than 16 and then go to step 3.

d) Add II for other repeated pixel and store its  relative position within Eight bit four bits for  horizontally and four bits for vertically position if  relative position is less than 16 and then go to step 3.

6. End.

5. KG DECOMPRESSION ALGORITHM  For version I:

I. First of all select compressed date for de compression 2. takes a pointer to point bit and initially point to  before first bit  3. Then check >- If next three bit 000 then remove these three 000  bits then add 8 times 0 bits. Remaining 16 bits will be same.

? Else if next 3 bit is 001 then remove these three 001 bits then further 8 bit remain same then add 8 time 0, then further 8 bit remain same.

? Else if next 3 bit is 010 then remove these three 010 bits then further 16 bit remains same then adds 8 times O.

? Else if next 3 bit is 011 then remove these three 011 bits then add 16 time 0 then further 8 bit remains same.

? Else if next 3 bit is 100 then remove these three 100 bits then further 8 bit remains same and then adds 16 times O.

? Else if next 3 bit is 101 then remove these three 000 bits then add 8 times 0 then further 8 bit remains same then add 8 time O.

? Else if next 3 bit is 110 then remove these three 010 bits then further 24 bit remains same.

? Else if 111 then remove these three 111 and next 12 bits then copy that pixel bits whose position is mentioned here.

? Then point to next pixel after 24 pixel then go to step 3 if bits remain in compressed data  4. End  7.

simply converting these bits in to decimal number 2  D. Then by finding number of pixel equal to that decimal number2 repetition of pixel found  E. Copy these pixel bits in place of these 10 plus decimal numberl and plus decimal number2 bits.

Else if bits are 11 then A. Check Next three bits and convert into  decimal number 1 B. then according to decimal numberl next  number of bits will be equal to decimal number!

C. Then from these bits after decimal number!

position of repeated pixel calculated by simply convert these bits in to decimal number 2  D. Then by leaving number of pixel equal to that decimal number2 repeated pixel found  E. Copy these pixel bits in place of these 11 plus decimal number! and plus decimal number2 bits.

8. Move to next bit after 24 bits For version 2: 9. Go to step 3 if there are more bits  10. End. 1. Firstly select the compressed Image for Decompression.

2. Then select its binary data and point to its initial position or point to before first pixel.

3. Check next two bits.

4. If bits are 00 then copy as it is next 24 bits in  place of 00 plus these 24 bits 5. Else if bits are 01 then  A. Check Next three bits and convert into decimal number I  B. then according to decimal number I next number of bits will be equal to decimal number 1  C. after finding decimal number! position of repeated pixel , then it is calculated by simply convert these bits in to decimal number 2  D. by finding number of pixel equal to that decimal number2, repetition of pixel found  E. Copy these pixel bits in place of these 01 plus decimal number! and plus decimal number2 bits.

6. Else if bits are 10 then A. Check Next three bits and convert into  decimal number 1 B. then according to decimal number! next  number of bits will be equal to decimal number 1  C. from these bits, after decimal number!

position of repeated pixel calculated, then  F or version 3: 1. First of select Compressed data for  Decompression 2. Then select its binary data and point to its initial  position 3. Check next bit.

A. If bit is 0 then copy as it is next 24 bits in place of 0 and these 24 bits  B. Else if bit is 1 then check next three bits

I. If 000 then check next two bits and convert  it in to decimal number and then find the pixel relatively far away horizontally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1000 plus decimal number. Then go to step 3.



II. Else If 00 I then check next two bits and convert it in to decimal number and then find the pixel relatively far away vertically from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1001 plus decimal number. Then go to step 3.



III. Else If 010 then check next two bits and convert it in to decimal number and then find the pixel relatively far away diagonally from current pixel here relative position is equal to decimal number. And  20J4 Internationai Conference on Issues and Challenges in Intelligent Computing Techniques (ICICT) 835    then copy repeated pixel in place of 1010 plus decimal number. Then go to step 3.



IV. If 011 then check next four bits and convert it in to decimal numberl and decimal number 2 by two bits and then find the pixel relatively far away horizontally and vertically from current pixel here relative position is equal to decimal numberl as horizontally and decimal number 2 for vertically. And then copy repeated pixel in place of 1011 plus decimal numberl plus decimal number2.



V. If 100 then check next four bits and convert  it in to decimal number and then find the pixel relatively far away horizontally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1100 plus decimal number. Then go to step 3.



VI. Else If 101 then check next four bits and convert it in to decimal number and then find the pixel relatively far away vertically from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1101 plus decimal number. Then go to step 3.



VII. Else If 110 then check next four bits and convert it in to decimal number and then find the pixel relatively far away diagonally from current pixel here relative position is equal to decimal number. And then copy repeated pixel in place of 1110 plus decimal number. Then go to step 3.



VIII. If I I I  then check next eight bits and convert it in to decimal numberl and decimal number 2 by four bits and then find the pixel relatively far away horizontally and vertically from current pixel here relative position is equal to decimal numberl as horizontally and decimal number 2 for vertically. And then copy repeated pixel in place of 1111 plus decimal numberl plus decimal number2.

Then go to step 3.

4. End  6. RESULT F or version 1: This technique will depend only on image because how pixel are repeated not say exactly for any image because image can be of any type. Some image is come in only red intensity then it can be compressed 60 % and not only in red intensity it can compressed the images of blue color or green color intensity in same percentage. If image come in any two color combination out of red, green, blue then it can  compressed 20% and if some pixels repeat in an image then it can compressed by adding 12 bit in place of 24 bit which will be required to represent a pixel. This technique will depend only on image from our data.

So due to this, it reduces our memory space which is needed to store our data and will also increases data transmission rate.

Image SIze before Image size Percentage  compression after reduce compression  6 kb(Intensity(O to 255 of 2.5kb 60  any one color out of (red,  green, blue)  6 kb(Intensity(O to 255 of 4.8 kb 20  any two color combination  out of (red, green, blue)  6 kb(Intensity(O to 255 of 3.7kb 40  any two or one color  combination with equal  ratio out of (red, green,  blue)  6 kb(Intensity(O to 255 of 4.7 20  any two or one three color  combination with equal  ratio out of (red, green,  blue)  For version 2: KG2 technique will compress the image by repeating the pixel's either horizontally, vertically or diagonally. This technique will depend only on image because how pixel are repeated not say exactly for any image because image can be of any type. Hence by KG2 technique whole image will be compress mostly 50 to 80 easily. Because always found that pixel are repeated alias in out of these three form (horizontally, vertically or diagonally). Here repetition of pixel not in sequence but may be repetition horizontally, vertically or diagonally. The advantage of such a technique is that it can compress the image more as compared to other techniques.

For version 3: KG3 technique will compress the image by repeating the pixel's either not only horizontally, vertically or diagonally. So due to this, it reduces our memory space which is needed to store our data and will also increases data transmission rate. At last all these processes also     helps us to secure our data. In this paper we will remove  such type of problems. Experimental results of this  technique clearly show that the used compression  technique results in higher quality reconstructed images compared to that of other techniques at similar bit rates  for the class of images.

7. CONCLUSION  F or version 1:  This technique is a very strong technique. And also it will be very fast executable compression or decompression  because its design of algorithm is well managed. Benefit  of this technique over other techniques is it will compress  maximum.

For version 2:  The advantage of such a technique is that it can compress  the image more as compared to other techniques. The  drawback behind it is that if pixel of an image repeat  rather than its specified position then this technique is not much suitable. Hence KG2 technique will compress the  pixels when they will be repeated in three direction either  horizontally, vertically or diagonally.

For version 3:  KG3 technique can be used for compress data which will be not only repeated horizontally or vertically or  diagonally but also repeated anywhere in the image. But it  will compress only those pixel which will be repeated  with relative position rang of 16 horizontally and 16  vertically and also 16 diagonally. That's its disadvantages. And also it will very fast executable  compression or decompression because its design of  algorithm is well managed.

8. FUTURE PROSPECTS  F or version 1:  For the future point of view, image compression is a great  boon to humanity that is used in various fields of science  and technology. By sending image at resolution higher  than 2.5 times the line screen of any image, degrades the image quality but due to the technique prescribed here,  there is an ease of sending images at very high resolution  i.e. greater than 2.5 times the line screen of an image.

For version 2:  According to our technique results, in future it provide us  higher compression ratio. It provides a potential cost savings related to sending less data over switched  telephone networks. It will reduces probability of  transmission errors since fewer bits are transferred and  will also provides level of security against  unauthenticated users in future.

For version 3:  This compression technique, will extract extra no. of bits  which are not as much important from our data. So due to this, it reduces our memory space which is needed to store  our data and will also increases data transmission rate. At  last all these processes also helps us to secure our data it  is more important that our image will be lossless or lossy after compression in image compression technique. In this  paper we will remove such type of problems.

Experimental results of this technique clearly show that the used compression technique results in higher quality  reconstructed images compared to that of other techniques  at similar bit rates for the class of images.

9. REFERENCES  1. Bilgin and B.W. Marcellin, "JPEG2000: Highly  scalable image compression,"in Lossless Compression Handbook, K. Sayood, Ed. San Diego, CA: Elsevier, 2003, ch. 18, pp. 351-369.

2. M. Burrows and D. J. Wheeler, "A block-sorting lossless data compression algorithm," Digital  Syst. Res. Center, Palo Alto, CA, SRC Res.

Rep. 124, 1994.

3. C. R. Cabrera-Mercader, "Robust compression  of multispectral remote sensing data," Ph.D.

thesis, Dept. Elect. Eng. Comput. Sci.,  Massachusetts Inst. Technol., Cambridge, MA,  Sep. 1999.

4. (4. A. Olyaei and R. Genov, "Mixed-Signal Haar  Wavelet Compression Image Architecture,"  MIWSCAS'05,Cincinnati, Ohio, 2005 5. Kawahito et aI., "CMOS Image Sensor with  Analog 2-D DCT-Based Compression Circuits," JSSC, Vo1.32, No.12, pp.2029-2039, Dec. 1997  6. R. C. Gonzalez & R. E. Woods, " Digital Image Processing", Addison Wesley 1992.

7. A. N. Netravali and B. G. Haskell, " Digital Pictures- - Representation, Compression, and  Standards ", 2nd ed., Plenum Press, 1995.

8. Subhasis Saha, "Image Compression - from DCT  to Wavelets  9. N. Netravali and B. G. Haskell, " Digital Pictures -- Representation, Compression, and Standards ",  2nd ed., Plenum Press, 1995.

10. Subhasis Saha, "Image Compression - from DCT  to Wavelets  11. R. Cabrera-Mercader, "Robust compression of  multispectral remote sensing data," Ph.D. thesis, Dept. Elect. Eng. Comput. Sci., Massachusetts  Inst. Technol., Cambridge, MA, Sep. 1999.

