Discovering Multiple-Level Association Rules from Transactional Databases  with Consideration of Temporal Characteristics of Products' Discounts Rates

Abstract   Due to the development of information systems and  technology, businesses increasingly have the capability to accumulate huge amounts of retail data in large databases. In the recent marketing research, products' discounts have rarely been considered as an important decision variable. Although few researches have analyzed the effect of discount on sales, they ignore its temporal characteristics. That is, in real world, each product may appear with different discounts rates in different time periods. Moreover, they have considered discount at single concept level. Therefore, the discovered knowledge is less concrete and implementation of the results of analyses become difficult. The problem addressed in this paper is the consideration of products' discounts in discovering multiple-level association rules in different time intervals that a specific discount appears on a specific product. The proposed algorithm makes it possible to acquire more concrete and specific knowledge corresponding to association between products and their discounts as well as implementation of its results.

1. Introduction   With the enormous amount of data stored in databases and other repositories, using data mining techniques [5, 9] to extract implicit, previously unknown and potentially useful information from data in data storages has become increasingly important.

One of the most popular data mining approaches is "association rules", which is commonly used for market basket analysis and originally presented in Agrawal et al. [1]. It studies the frequency of items occurring together in transactional database based on two thresholds called support and confidence which identifies the frequent itemsets and association rules,  respectively. An association rule is expressed as the form A B, where A and B are sets of items, such that the presence of A in a transaction will imply the presence of B in the same transaction. An example of an association rule is: "40% of transactions that contain bottled juice also contain cold remedies; and 5% of all transactions contain both of these items". The problem of discovering association rules progressively followed by refinements, generalizations, improvements and extensions, including generalized association rules and multi-level patterns [8, 11, 13, 18]; finding association rules with categorical  and numeric attributes [4, 10, 15, 16, 17]; qualified association rules [12]; temporal association rules [3, 7, 14]; spatial association rules [19].

Standard association rules algorithm [2] applied in market basket analysis mainly determines what products customers purchase together in a static fashion. In fact, dynamic changes in discounts rates on products and their effects on sales have been disregarded. Previous work [6], which discovers patterns with discount information, has some shortages. First, they assume that each product may have different discounts over different time periods, but the periods are fixed for all products. That is, if our pre-specified period is 2 weeks, the discount rate on items A and B will not be changed in corresponding period. But, in practical situations, the period in which item A has a fixed discount rate could differ from item B. For example, in first week, item A could be sold with 10% discount and in the next week, with 20% discount. On the other hand, item B could be sold with 30% discount in the entire 2 weeks. Second, it has focused on discovering the effect of discount rates on sale at a single concept level. For the purpose of enhancing the applicability of the approach, besides finding patterns in high concept level which generally expresses the relationships, it could be also informative to show the association relationships at a lower concept   DOI 10.1109/ICACTE.2008.163    DOI 10.1109/ICACTE.2008.163     level which is more concrete and specific. Moreover, finding association between items at different levels could be useful in market policy. For example, if maximum discount on milk category is 30% and discount on Wonder wheat bread is 20%, 80% of costumers that purchase one of the items in milk category also purchase Wonder wheat beard. Third, the approach proposed in Chen et al. [6] has focused on patterns which increase or decrease sales and did not discover the assosiation rules between items.

In this paper, a more sophisticated algorithm is developed that overcomes the disadvantages of the prior studies. Thus, our approach needs a differently formatted data warehouse that must have discount information and temporal content. Such information is available, since transactions not only record purchased items, but also their discounts and the time of purchase.

This approach could help reveal reasons behind purchasing certain items together frequently. It may be due to the discount rate on each item or other customer behavior. As mentioned in Chen et al. [6], we cannot view discount as a numerical attribute and use algorithms for mining quantitative association rules.

Quantitative methods compare the occurrence of an item with a specific discount rate in the whole mining period whereas such item may appear with that specific discount rate just in a short period of time. With the help of temporal association rules methods [3], we deal with this problem effectively.

The rest of the paper is organized as follows. In section 2, we define the problem. In section 3, an algorithm called Apriori-TdMl based on multiple level concepts is proposed. Finally, in section 4 we draw conclusions.

2. The problem and definitions   Let  , , ? ,  denote the set of items. Each item  must be encoded, so we have a transactional database  ? 1 , which consists of a set of transactions , , , where  is a transaction identifier,  is a set of  encoded items appearing in a transaction, and  is a time epoch expressing the time that occurs (see Table 1).

Definition2.1: In our approach we partition the discount rate into intervals and denote each discount rate included in th interval by . For example, assume that we have five discount intervals as follows: [0%, 10%], (10%, 20%], (20%, 30%], (30%, 40%], (40%, 50%] and (50%, 100%]. The discount rates included in first interval, [0%, 10%], are called .

Therefore, we have a set of discounts rates denoted by , , ? , . Also, if  then  .

The discount list of products is recorded in ? , which consists of , , , , and expresses the period   in which item  has  discount (see Table 2).

Table 1: Encoded transaction table  Tid Items Time 1 111, 112, 122, 211 3 2 111, 112, 221 5 3 111, 222, 322 8 4 423,511,321 10 5 111, 121,221 13 6 122,211 16 7 111,122 20   Definition2.2: Let X be an itemset which is a subset  of . A set of transactions in  containing X indicated by ( , ? | ? . If | | , we call it  -itemset.

Definition2.3: Let ? , , ? ,  be  transaction database  incorporated with discount information of discount table ? . In fact, it replaces each item in  with a pair , , where  and  .

Table 2: Discount table  Item Discount rate Time 111  [0,8] 111  [9,20] 112  [0,9] 112  [10,20] 121  [0,12] 121  [13,20] 122  [0,8] 122  [9,20] 211  [0,9] 211  [10,20] 212  [0,7] 212  [8,20] 221  [0,20] 222  [0,20] 322  [0,13] 322  [14,20] 423  [0,20] 511  [0,20]   Let d-itemset  be an itemset carrying discount  information and denoted by a set of pairs , . If | | , we call it k-d-itemset. We can define two separate sets: | ,  and     | , . The set of transactions in containing d-itemset  indicated by ( , ?| ?  .

Definition2.4: As we mentioned in definition 2.1, the time interval in which item  has  discount, denoted by , . It is simply an interval , , where  . Therefore, we can express the lifespan of k-d- itemset , where 1, by  and define it as follows; suppose   is an interval indicated by , , where  max{ | ,  is the time period of an item  in } and min{ | ,  is the time period of an item  in }. It shows the period that  may occur. If , means items in do not have time intersection and this itemset is not feasible. We also should define ? { | ? the time of  is in time interval } as a set of transaction in  where  may occur.

Definition2.5: The global support of itemset  in database , denoted by ( , ? , is the fraction of transactions in  that contains . Hence, we have ( , ? =| ( , ? |/| |. Given a global support threshold 0,1 ,  is a frequent itemset if ( , ?  .

Definition2.6: The local support of extended itemset , denoted by ( , ? , is the fraction of extended  transactions in  that contains . Thus, we have ( , ? | ( , ? |/| |. Given a local support threshold 0,1 ,  is frequent d-itemset if ( , ?   .

Definition2.7: The real support of extended itemset ,denoted by ( , ? , is the fraction of extended  transactions in  ?  that contains . Hence, we have ( , ? | , ? |/| ? |. In order to determine the effect of discounts on sales we use  ( _ , / ( , . If this fraction results in a value which is greater than the threshold , it means this discount combination encourages sales. On the other hand, if  is smaller than the threshold , it implies that this discount combination decrease sales.

Note that  and  specified by users or experts.

Definition2.8: In this paper we need to remove d- itemsets   with very short . Since a set of items may appear with a specific discount combination in a very short period of time, it is not reasonable to consider such itemset. Therefore, we need a temporal support, denoted by ( , and represented by ( =| |. Given a temporal support threshold ,  is big enough to judge about the real support of if ts( ) .

Definition2.9: If  is a large-d-itemset and , , The confidence of a rule  , where  and  are set of pairs , , is computed as follows: ( , , ? , , ? ,  Where , , ?  and , , ? computed in time intervals  which is an intersection of periods of every pairs in  that they could possibly occur. We call a rule an interesting one if (  .

3. The Apriori-TdMl algorithm   The algorithm proposed in this paper differs from Apriori-like [6] algorithm for mining frequent itemsets with price information. It, however, takes advantage of such approach and makes changes in algorithm in such a way that temporal characteristics in multiple level concept is taken into account.

Given a concept hierarchy shown in Figure 1, we need to determine maximum discount levels for each item in higher levels of the hierarchy.

Food     Milk               ...               Bread    Skim milk  ...  2% milk     white bread  ...whole wheat    Lucern      ...        Daily Land          Wonder ...   Safeway    Figure 1:  A concept hierarchy  For the purpose of finding maximum discount on a category or subcategory in a specific period, we need to construct a tree. From the next level of each category or subcategory, we can simply determine their maximum discount. The complexity of the problem is finding a period in which such maximum discount level is appeared.  This algorithm execution is based on one of the algorithms proposed in Han and Fu [11], which highly depends on the application. In this work, we make use of ML-T2L1, while with some refinement we can also adapt other algorithm to our approach.

Our input data includes transaction database? 1 , discount list ? ,  (maximum level of the hierarchy), , , where 1, ? , , ,  and . So, this method needs more input data than Apriori-like algorithm.

We present the framework of the algorithm in Figure 2. In the first step, we find large 1-itemsets, that exceed the global support threshold , labeled . In     contrast with Apriori-like algorithm, In each level of the concept hierarchy, only 1-itemsets are found and we skip other k-itemsets, where 1.

In next step the discount tree is constructed for each frequent category as well as for those subcategories whose parents are frequent. In fact, the intersections of each node's off-springs are recognized and at the same time maximum discount in each interval is determined.

Note that two intervals with a similar discount level are merged.

Function Apriori-TdMl algorithm   1) =get-large-1-itemset(? 1 , l) 2) For( ( 1; 0; ) 3) Construct Discount-tree for each item which  either its parent or itself is in .

4) For( 1;  & ; { 5) If ( 1){ 6) ? 2 =get-filtered-table(? 1 , ) 7) =get-local-candidate-1-d-  itemset( ,discount-tree) 8) =get-large-k-d-itemset( ) } 9) Else { 10) GL get-large-k-itemset(? 2 , , ) 11) =get-local-candidate-1-d-  itemsets( ,discount-tree) 12) =get-large-k-d-itemset( ) } 13) For ( 2; ; ){ 14) If( 2& 1 15) =get-local-candidate-k-d-itemsets ( ,  ,..., ) 16) Else =get-local-candidate-k-d-  itemsets( ) 17) =get-large-k-d-itemset( )  } 18)    Figure 2: Function of Apriori-TdMl algorithm  Then in line 7 we join discount information and its  period to frequent items by the use of discount list .

Interesting discount patterns, , are discovered  by applying Function get-large-local-k-d-itemset. In order to find a period in which k-d-itemset could possibly occur, we compute T (see definition 2.4). All d- itemsets which do not satisfy temporal condition T ?  and local threshold (X , P?  ?  are eliminated. Then, the number of transactions in corresponding period is determined and the computation of real support X  and  is done to find out the effect of such pattern on sales.

In line 16, we generate candidate of k-d-itemset from large ( 1 -d-itemset, . The method is similar to Apriori algorithm, but it has some extra  conditions. Inasmuch as our itemsets carrying extra information about their discount combination, when two (k-1)-d-itemset join, we have to consider whether this combination has actually happened.  If  , it means   and  can occur simultaneously, so they can join to each other.

Moreover, the set of first components of pairs , in  and  should not be equal. In addition to joining two (k-1)-d-itemsets, we also join frequent 1-d- itemsets in previous levels to find relationships across levels. Adding  to  only when 2, helps ensure that items  will be in other   ,where 2, if the constructed combinations are frequent. It is necessary to mention that no d-itemset can join with its ancestor, since they have the same support and any transaction contains such item also must contain its ancestor [11].

After finding large k-d-itemsets, the set of association rules can be derived from  by the use of definition 2.9. Results obtained from this approach are more complete than previous work because time information has been included.

Example 3.1: Assume we have input data as follows: transaction database ? 1  in Table 1, discount list ?  in Table 2, =3, 0.3,0.2, 0.15, =0.4, =0.3, =0.2, =0.5,  =1.3, =0.7 and =3. Having executed the algorithm which is shown in Figure 2, {1**,2**} are recognized as two large 1-categorical itemsets in the first phase. Then, the discount trees are constructed for categories 1** and 2** as well as the subcategories whose parent is 1** or 2**. After constructing discount-tree, for instance, we can determine that in two intervals [0, 8] and [9, 20], category 1** has, respectively, at most  and  discount, or in the whole period [0, 20], subcategory 22* has at most  discount.

Then, {(1**, max ),(1**,max ),(2**,max )}  is obtained as  large 1-d-categorical itemsets. Function get-large-k-d-items(  results in ={(1**, max ;2**,max )}, but (1**, max ;2**,max ) in  is not inserted in , due to not satisfying T ? . By considering  0.3 in second level, we are going to have ={12*,11*,22*} with global supports 0.57, 0.71, and 0.42, respectively. So, we have ={(12*,max ),(12*,max ),(11*,max ), (11*,max ),(22*,max )} as candidates which all except (12*,max ) satisfy local thresholds , and add to . As a result, subcategory 11* with  discount may increase sales, yet with  discount may decrease sales.

={(12*,max ;11*,max ),(11*,max ;22*, max ),(11*,max ,2**,max ),(22*,max ;1**,  )} is derived from . Last three patterns have great influence on sales.

In the third level of the hierarchy, from ={122,111,112,221} we derive =  {(122, ),(111, ),(111, ),(112, ),(221, )} which (111, ) and (112, ) encourage customer to purchase these items. Then, = (111, ; 112, , (111, ; 22 ?  , (111, ; 2 ??,  4,(112, 2;2??,  4)} is extracted and it reveals that all discovered patterns in this phase may increase sales. Finally we have  ={(112, ;111, ;2**,max )} that also may encourage sales.

One of the association rules is (112, ; 2**,max ) (111, ) that has 100% confidence.

4. Conclusions and future Work  We have presented an algorithm for discovery multiple-level association rules in market baskets with consideration of discount information and their temporal characteristics. In previous studies, this problem is not viewed as a temporal association rules mining. In real world, the discount rates on a product could, however, change with different periods and these periods differ from product to product. The proposed algorithm deals with temporal characteristics of discount rates and finds interesting rules with discount information. It, also, is an extension of the previous algorithms to multiple concept level, for the purpose of increasing applicability.

In the future, we plan to improve the pruning conditions. Also, we are going to adapt object-oriented approach [8] to our algorithm.

5. References  [1] R. Agrawal, T. Imielinski, and A. Swami, ?Mining association rules between sets of items in large databases?, in Management of Data, Washington DC, USA, 1993, pp. 207- 216.

[2] R. Agrawal and R. Srikant, ?Fast algorithm for mining very large data bases, Santiago, Chile, 1994, 487-499.

[3] J.M. Ale and G.H. Rossi, (2000): ?An approach to discovering temporal association rules?, in Proc. ACM Symposium on Applied Computing, Como, Italy, 2000, pp.

294-300.

[4] R.J. Bayardo and R. Agrawal, ?Mining the most interesting rules?, in  Proc. 15th ACM  SIGKDD International  Conference on Knowledge Discovery and Data Mining, 1999, pp.145-154.

[5] M.-S. Chen, J. Han, and P.S. Yu, ?Data mining: an Knowledge and Data Engineering, 1996, pp. 866-883.

[6] Y.-L. Chen, T.C.-K. Huang, and S.-K. Chang, ?A novel approach for discovering retail knowledge with price information from transaction databases?, Journal of Expert Systems with applications, 2008, pp.2350-2359.

[7] X. Chen, I. Petrounias, ?Mining temporal features in association rules?, in Proc. 3th European conference on Principles and Practice on Knowledge Discovery in Databases, 1999, pp. 295-300.

[8] S. Fortin  and L. Liu, ?An object-oriented approach to multi-level association rule mining?, in Proc. 15th Management, Rockville, USA,1996, pp. 65-72.

[9] W.J. Frawley, G. Piatetsky-Shapiro, and C.J. Matheus, ?Knowledge discovery in databases: an overview?, AI Magazine, MIT Press, 1992, pp. 57-70.

[10] T. Fukuda, Y. Morimoto, S. Morishita, and T.

Tokuyama, ?Mining optimized association rules for numeric attributes?, in Proc. 15th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, Canada, 1996, pp. 182-191.

[11] J. Han and Y. Fu, ?Discovery of multiple-level association rules from large databases?, in Proc. 21st bases(VLDB'95), Zurich, Switzerland, 1995, pp. 420-431.

[12] N. Jukic and S. Nestorov, ?Comprehensive data warehouse exploration with qualified association-rule mining?, Journal of Decision Support Systems, 2006, pp.

859-878.

[13] Y.-C. Lee, T.-P. Hong, and T.-C. Wang, ?Multi-level fuzzy mining with multiple minimum supports?, Journal of Expert Systems with Applications, 2008, pp. 459-468.

[14] Y. Li, P. Ning, X.S. Wang, and S. Jajodia, ?Discovering calendar-based temporal association rules?, Data & Knowledge Engineering , 2003, pp. 193-214.

[15] J.S. Park, M.-S. Chen, and P.S. Yu, ?An effective hash- based algorithm for mining association rules?, in Proc. ACM San Jose, CA, 1995.

[16] R. Rastogi, and K. Shim, ?Mining optimized association rules with categorical and numeric attributes?, in Proc. IEEE Transactions on Knowledge and Data Engineering, 1998, pp.

503-512.

[17] R. Srikant and R. Agrawal, ?Mining quantitative association rules in large relational tables?, in Proc. ACM ACM Press, Montreal, Canada, 1996, pp. 1-12.

[18] S. Tsur, J. Ullman, S. Abiteboul, C. Clifton, R.

Motwani, S. Nestorov, and A. Rosenthal, ?Query flocks: a generalization of association-rule mining?, in Proc. ACM SIGMOD Conference, Seattle, Washington, USA, 1998, pp.

1-12.

[19] L. Wang, K. Xie, T. Chen, and X. Ma, ?Efficient discovery of multilevel spatial association rules using partitions?, Journal of Information and Software Technology, 2005, pp. 829-840.

