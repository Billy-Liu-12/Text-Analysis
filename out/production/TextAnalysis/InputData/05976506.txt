2011 3rd Conference on Data Mining and Optimization (DMO)  28-29 June 2011, Selangor, Malaysia

Abstract?In order to evaluate the quality of UKM?s NIDS, this paper presents the process of analyzing network traffic captured by Pusat Teknologi Maklumat (PTM) to detect whether it has any anomalies or not and to produce corresponding anomaly rules to be included in an update of UKM?s NIDS. The network traffic data was collected using WireShark for three days, using the six most common network attributes. The experiment used three association rule data mining techniques known as Appriori, Fuzzy Appriori and FP- Growth based on two, five and ten second window slicing.  Out of the four data-sets, data-sets one and two were detected to have anomalies. The results show that the Fuzzy Appriori algorithm presented the best quality result, while FP-Growth presented a faster time to reach a solution. The data-sets, which was pre-processed in the form of two second window slicing displayed better results. This research outlines the steps that can be utilized by an organization to capture and detect anomalies using association rule data mining techniques to enhance the quality their of NIDS.

Keywords: network intrusion detection system (NIDS); Data Mining; Association Rules Techniques

I. INTRODUCTION  Nowadays the number of computer network keeps growing in parallel with transactions, especially on the internet while streaming, video conferencing, chatting, searching, etc. These various types of transactions introduce many intrusions and anomalies to the network. This situation is occurring at UKM. The PTM is responsible for network security at UKM.

Network traffic is often seen to display sudden deviations from normal behaviour. Some of these aberrations are caused by malicious network attacks such as Denial-Of- Service or viruses, whereas others are the result of equipment failures and accidental outages [1]. Many methods have been developed by organizations and play very important roles to secure network infrastructures and communications via the internet such as firewalls, anti-virus software packages and intrusion detection systems. Current firewalls cannot defend against every category of intrusion, in which some intrusions take advantages of computer system vulnerabilities [2]. An intrusion detection system  (IDS) provides around-the-clock network observation and is an additional wall to secure the network.

The intrusion detection system is a process of determining an intrusion into a system through the observation of available information concerning the state of the system, monitoring user activities and reporting to a management station.

Intrusion detection refers to the detection of cruel activity (break-ins, penetrations, and other forms of computer abuse) in a computer related system [3]. Therefore, the ID techniques are classified into host-based and network-based depending on the type and source of information used to identify security breaches [4][5][6]. Depending on the method of intrusion detection, IDS are classified into two main categories; signature based intrusion detection and anomaly based intrusion detection. The signature detection systems approach assumes that an intrusion can be detected by matching the current activity with a set of intrusive using patterns considered as misuse; Anomaly detection systems assume that an intrusion should deviate system behaviour from its normal pattern [7][23]. Signature detection has a major drawback with the failure to detect novel attacks and requires constant updating and modification of new attack signatures by domain experts.

This paper aims to present the steps to identify anomaly pattern using association rules for UKM network traffic. The remainder of this paper is organized as follows: section two discusses related work concerning association rules, association rules for NIDS and the association rule techniques that were used in this research. Section three describes the experiment setup, which includes data collection, pre-processing and mining. The experiment results are discussed in section four. Finally, presents the conclusions.



II. RELATED WORKS  One of the popular methods used for mining data in KDD (Knowledge Discovery in Database) to discover patterns is association rule mining. It has attracted the attention of many current data-mining researchers because of its capability to discover useful and interesting patterns from         large, noisy, fuzzy, stochastic data [8]. The related work is organized as follows:  A. Basic Concept Of Association Rules: Association rule mining discovers frequent patterns,  associations, correlations, or causal structures among huge groups of items or objects in transaction databases, relational databases, and other information repositories [8]. It has been developed by Agrawal [9] in order to study customers purchasing behaviour in supermarkets where goods are often purchased together by customers. The brief of the basic concept of association rules in transactional and relational databases is presented as follows:  I= {i1,i2,i3,?,in} is a set of items, Let DB be a set of database transactions where every transaction T is a set of items such that T?I. Each transaction is associated with a unique, transaction identifier (TID).

Let X, Y be a set of items, an association rule is an inference of the form X Y, where X?I, Y?I, and X?Y=?. X is called the antecedent of the rule, and Y is called the consequent of the rule. An itemset containing i itemset called an i-itemset. The rule X Y holds in the transaction set D with Support S, which is the percentage of transactions that contain both an itemset X and Y appearing in the same transaction. For an itemset to be interesting, its support must be higher than a user-specified minimum. Such itemsets are said to be frequent. We have the Support of the rule X Y as in Equation (1)   Support(X Y)=P(X?Y).                                      (1)   There is another measure called Confidence C, where C is the ratio of the number of transactions in D that containing X and Y to the number of transactions that contain only X as Equation (2)  Confidence(X Y)=P(Y/X)=Support(X?Y)/ Support(X).  (2)  Association rule mining is the process of finding all the association rules that pass the condition of min support and min confidence. In order to mine these rules, first the support and confidence values have to be computed for all of the rules and then compare them with the threshold values to prune the rules with low values of either support or confidence. In general association rule can be summarized in two steps [8]:   ? Find the large itemsets, i.e., the sets of items that  have transaction support above a predetermined minimum threshold.

? Use the large itemsets to produce the association rules for the database that has confidence above a predetermined minimum threshold.

B. Association Rule For Network Intrusion Detection Association rules based on the IDS attempt to classify all  the traffic as either normal or malicious. The table 1 below  lists the most popular techniques for the association rule method within the network anomaly detection domain.

TABLE.1 THE LIST OF TECHNIQUES IN THE ASSOCIATION RULE METHOD FOR NIDS.

Apart from the aforementioned analysis, Wang [10] also find that Apriori, fuzzy Apriori and FP-growth can be the most representative algorithms for association rule mining.

C. Association Rule  Techniques.

In association rules there are many techniques. In this  research we chose the most popular techniques that are utilized in NIDS as follows:   a) Apriori algorithm Introduced by Agrawal [9], Apriori is the most important algorithm for mining frequent itemsets for Boolean association rules in a given database. It uses the property: all nonempty subsets of a frequent itemset must also be frequent [8].

The key idea of Apriori algorithm is to make multiple passes over the database. It employs an iterative approach known as a breadth-first search (level-wise search) through the search space, where k-itemsets are used to explore (k+1)- itemsets. In the beginning, the set of frequent 1-itemsets is found. The set contains one item, satisfying the support  Author DM algorithms Type of data Finding  [5] Apriori, Fuzzy Apriori DARAP? 99  Association rule can be for intrusion detection, combines association with a complementary decision tree scheme that helps to identify attributes of relevance.

[10] Apriori, FP-growth  wired and wireless  network data  Reviews the new development of association rule mining technologies for ID in wired and wireless network.

[11] Apriori, Fuzzy Apriori Real-life database  They present FARM algorithm which employs linguistic terms. FARM has unique features that are able to find positive and negative association.

[12]  Apriori, Fuzzy Apriori, Classification  algorithm  KDD 99 dataset  New classification approach that uses fuzzy association rulesets as descriptive modles of different classes.

[13]  Apriori, Fuzzy Association  Rule based on prefix trees.

DARAP? 99  They improved a genetic algorithm to optimize the fuzzy association rules.

[14]  Apriori, Fuzzy Apriori,  Genetic Algorithms  Network traffic data  Fuzzy association rules can be mined to find the abstract correlation among different security features.

[15]  Apriori, Fuzzy  Association Rule  Network traffic data  Detecting intrusion is effective by using Fuzzy Association Rule and the accuracy has improved.

threshold and, is denoted by L1. In each subsequent pass, we begin with a seed set of itemsets found to be large in the previous pass. This seed set is used to develop new potentially large itemsets, called candidate itemsets, and to count the actual support for these candidate itemsets during the pass over the data. At the end of the pass, we decide which of the candidate itemsets are actually large (frequent), and they become the seed for the next pass.

Therefore, L1 is used to find L2, the set of frequent 2- itemsets, which is used to find L3, and so on, until no more frequent k-itemsets can be found. Then, a very significant property called Apriori property is employed to reduce the search space. Expressly, the Apriori algorithm consists of join and prune steps [8]:  Join step: This step generates new candidate k-itemsets based on joining Lk-1 with itself which is found in the previous iteration.

Prune step: This step eliminates some of the candidate k- itemsets using the Apriori property.

b) Fuzzy Apriori Srikant & Agrawal [16] have proposed mining quantitative association rules in large relational tables. The algorithm extracts the association rules by partitioning the attribute domain and combining adjacent partitions, and then transforms the problem into a binary one. Even though this method can solve problems introduced by infinite domains, it generates the sharp boundary problem. We either overlook or overemphasize the elements near the boundaries in the mining process. As a result we may miss some interesting rules because of the excluding of elements near the sharp boundaries. To address this deficiency, Fuzzy association rules mining was studied by many researchers [17][18][15][5]. The algorithm discusses as follow:  Assume T = {t1,t2,...,tn} to be the database, and each transaction ti represent the i-th tuple in T.  In addition, I = {i1, i2,..., im} is employed to represent all items appearing in T.

Each quantitative item ik, 1?k? m, is coupled with some fuzzy variables, say v1,v2,...,vj. Each fuzzy variable is represented by a membership function. For easy representation in the following, Fik.vj uniquely denote the j-th membership function of item ik .

In fuzzy association rule mining, a fuzzy item set contains two parts: items and fuzzy variables, represented as <X,V>, where X = (x1, x2,..., xi), ? I is a group of items (or features), and V = (v1, v2,..., vi) is the group of corresponding fuzzy variables to X, in order. Sup(<X,V>) is the sum of votes satisfying <X,V> divided by the number of records in T as Equation (3). The support of <X,V> is calculated as [17][19].

Where, ti[xj] represents the value of feature xj of the ith  record, and |T| denotes the total number of records. as a replacement for ??If X, then Y?? in association rule, a fuzzy association rule now has the form of ??If <X,V>, then <X?,V?>??. Here, <X,V> and <X?,V?> are two itemsets X?I,  X??I and X?X?=?. The first part <X,V> is called an antecedent, and the second part <X?,V?> is called a consequent. Likewise, support S and Confidence C of the fuzzy association rule <X,V> <X?,V?> are calculated as:  S= Sup(<Y,U>), and  C= Sup(<Y,U>)/Sup(<X,V>).

Where,  <Y,U> is the joining itemset of <X,V> and <X?,V?>.

c) FP-Growth algorithm FP-growth algorithm is an efficient method of mining all frequent itemsets without candidate generation. FP-growth utilizes a combination of vertical and horizontal database layouts to store the database in main memory. Instead of storing the cover for every item in the database, it stores the actual transactions from the database in a tree structure and every item has a linked list going through all transactions that contain that item. This new data structure is denoted by FP-tree(Frequent-Pattern tree)[8]. Essentially, all transactions are stored in a tree data structure. Every node additionally stores a counter, which keeps track of the number of transactions that share the branch through that node. In addition, a link is stored, pointing to the next occurrence of the respective item in the FP-tree, such that all occurrences of an item in the FP-tree are linked together.

Furthermore, a header table is stored containing each separate item together with its support and a link to the first occurrence of the item in the FP-tree. In the FP-tree, all items are ordered in support descending order, as it is hoped that this representation of the database is kept as small as possible since all of the more frequently occurring items are arranged closer to the root of the FP-tree and thus are more likely to be shared.



III. EXPERIMENT SETUP   1. The experiment setup is a flow of standard data mining  processes proposed by Han & Kamber [8]. Figure 1 shows the experiment steps of this research. It consists of five steps: data collection, data preparation, feature selection and preprocessing, mining and experiment results.

Figure 1. The experiment steps for this research.

2. Data Collection   We are using the Pusat Teknologi Maklumat (PTM), Universiti Kebangsaan Malaysia (UKM) real network traffic dataset, the captured results contain 3 days of network traffic, starting from July, 13th 2009 17:30:39 until July, 15th 2009 13:29:59, with 27,918,524 records in 348 files. The data was captured using Wireshark tools. Since the data captured is saved as raw data in binary format, it is not easy to further the process directly. In order to convert the dataset from raw data into plain text data, the Windump tools were employed, allowing the user to intercept and display TCP/IP packets.

3. Data Preparation  Prior to data preprocessing, the data set will be divided into two dataset categories, normal category and tested category. The normal category dataset is reference data, which does not have intrusions, and the tested category contains data, which has intrusions; the normal category dataset has been analyzed using CACE Pilot tools and proved by an expert. In this stage, the dataset is divided by time slot according to when the data was captured. Table 2 shows the specification of normal and tested category data sets.

The CACE Pilot is a latest commercial visualization, charting, reporting, and "drill-down" tool used to analyze networks [22]. It works with Wireshark, complements Wireshark?s prodigious dissector, and displays filter capabilities. CACE Pilot offers an intuitive and easy-to-use user interface designed to increase network analysis and troubleshooting effectiveness. Based on the CACE Pilot visualization and charting features, the normal category data set was analyzed and intrusions data was isolated and removed. As an illustration, a port scanning attack isolated by CACE Pilot tool will be described. Using several  statistical visualization tools in the CACE Pilot, the data that has one source destination IP address with SYN TCP Flag access to our server IP address for several different port numbers will be considered as a port scanning attack.

Furthermore, this data should be removed from our normal data.

TABLE 2. THE SPECIFICATION OF NORMAL AND TESTED DATA SETS    4. Feature Selection and Preprocessing:  Several network features were extracted for the PTM?s datasets based on our analysis [5][14] and expert advice, SYN, FIN and RST types of TCP flags, number of source IP addresses, number of destination IP addresses, and the total size of packets were utilized, to perform statistical calculations on the features based on 2, 5 and 10 second windowing and to create and divide datasets into several categories based on time slots.

The statistical calculation processing results are continuous data; continuous data needs to be converted to categorical data. In order to do that, the maximum-minimum normalization approach is used for Apriori and FP-growth.

Fuzzy Apriori uses fuzzy set to describe the linguistics for all variables with domains [0,1], a standard membership function for the fuzzy variable is used [5][20]. In this experiment, there are three groups of data sets based on different timeslot statistical calculation processes, 2, 5 and 10 second and for each group there is a normal category dataset and four tested categories datasets that are categorized. This signifies that this experiment has 15 different data sets and for each dataset there are three AR algorithms, namely the Appriori, Fuzzy Appriori and FP- Growth which will be performed.

5. Mining Process  Each dataset is then mining using three association rule algorithms to establish the association rules pattern.

Anomaly detection is calculated by comparing the rules of normal category dataset with the rules of tested category datasets based on similarity measurements. If the similarity result is higher than the user threshold, it means that the dataset has no intrusions, and vice versa.

Category Time slots when data sets  are collected 13/07 14/07 15/07  Normal 00:00:00 ? 06:00:00 20:00:01 ? 24:00:00  - ?  ? ?  ? -  Tested-1 06:00:01 ? 09:00:00 - ? ?  Tested-2 09:00:01 ? 13:00:00 - ? ?  Tested-3 13:00:01 ? 17:00:00 - ? ?  Tested-4 17:00:01 ? 20:00:00 ? ? -  PTM Network Dataset  Data Preparation using on time windowing  Features Selection  Discretization and Normalization  Mining  Evaluate         6. Experiment Results  Three types of result present in this paper: shows which association rules techniques and pre-processing techniques for producing the best model, the PTM?s datasets which have anomaly, and shows a sample of rules of the best model.

The experiment results of the ID for PTM?s data evaluation were based on similarity between the rules using three techniques. These rules were acquired by applying association rule techniques for network traffic data called anomaly association rules that were used to determine whether there was an intrusion or not in the data, through a similarity measurement based on user threshold [21].

The results are displayed in Table 3 and Figure 2 for 2- second datasets, three approaches in association rules were performed to obtain the similarity measurement between normal category dataset and the four tested datasets.

Table 3 displays that Fuzzy Appriori obtained results lower than Appriori and FP-Growth for Tested-1 and Tested- 2, which contains values lower than the predefined user threshold value. Thus, Tested-1 and Tested-2 will be considered as intrusion datasets. Subsequently, for Tested-3 and Tested-4, the Fuzzy Appriori displays results higher than Appriori and FP-Growth. Since the values for Tested-3 and Tested-4 are higher than the predefined user threshold value, that dataset is considered to have no intrusion.

TABLE 3. RESULTS FOR 2-SECOND WINDOWING DATASETS.

Approaches Tested-1 Tested-2 Tested-3 Tested-4 Appriori 0.156 0.421 0.856 0.863 Fuzzy Appriori 0.000 0.366 0.903 0.895 FP-Growth 0.172 0.404 0.853 0.862     Figure 2. Graphical results for 2-second windowing datasets   From three comparison results of 2, 5 and 10-second, the  results from Fuzzy Appriori always registered higher values than Appriori and FP-Growth for the non-intrusion dataset, and vice versa. Thus, the Fuzzy Appriori approach has the ability to differentiate between intrusion dataset and non- intrusion datasets better than the Appriori and FP-Growth approaches. For furthers analysis, comparison within each of these approaches for three groups of datasets were made. The results are shown in Table 4, Figure 3, Figure 4, and Figure 5 for Appriori, Fuzzy Appriori and FP-Growth approaches, respectively.

Figure 3. Graphical comparison results within Appriori?s group datasets.

Figure 4. Graphical comparison results within Fuzzy Appriori?s group  datasets.

Figure 5. Graphical comparison results within FP-Growth?s group datasets.

TABLE 4. COMPARISON RESULTS WITHIN THE THREE GROUP?S DATASETS.

Data sets Appriori Fuzzy Appriori FP-Growth 2 sec 5 sec 10 sec 2 sec 5 sec 10 sec 2 sec 5sec 10sec  Tested-1 0.156 0.204 0.245 0.000 0.000 0.002 0.172 0.193 0.263 Tested-2 0.421 0.453 0.502 0.366 0.395 0.467 0.404 0.433 0.532 Tested-3 0.856 0.832 0.793 0.903 0.892 0.855 0.853 0.820 0.800 Tested-4 0.863 0.834 0.802 0.895 0.876 0.822 0.862 0.821 0.790   Figure 3, Figure 4, and Figure 5 results displayed one  trend. The result from 2-second datasets offers the lower values than 5-second and 10-second if the values are lower than the predefined user threshold and vice versa. Thus, 2- second windowing offers better ability to differentiate  between intrusion dataset with non-intrusion datasets. Table 5 and Figure 6 bellow shows the results obtained from experiments in term of computational time.

TABLE 5. COMPARISON RESULTS IN TERM OF COMPUTATIONAL TIMES.

Approaches Datasets (second) 2-second 5-second 10-second  Appriori 206s 114s 46s Fuzzy Appriori 439s 148s 53s FP-Growth 77s 43s 16s     Figure  6. Graphical Comparison results in computational times  (in seconds).

The FP-Growth required less time to process the dataset than Appriori and Fuzzy Appriori for all groups. Appriori required less time than the Fuzzy Appriori. Thus, FP-Growth offers the fastest approach since FP-Growth no need to create candidate generations. Appriori offers a faster approach than Fuzzy Appriori, since the Fuzzy set requires the more complex computation than the Fixed set.

Figure 7 displays a part of sample of the best model (rules) generated from the 2- second of Tested-1 dataset.

Figure 7.The sample of the best model for anomaly rules.

Based on the result above, Table 6 shows which datasets have intrusion. The result shows the dataset Tested-1 and Tested-2 has intrusion, while Tested-3 and Tested-4 has no intrusion.

TABLE 6. RESULTS FOR DATASETS.

Time windowing  Dataset ( ? ) has anomaly Tested-1 Tested-2 Tested-3 Tested-4  2 sec ? ? ? ? 5 sec ? ? ? ?  10 sec ? ? ? ?

V. CONCLUSIONS  This paper presents the anomaly detection process for PTM, UKM using the association rule techniques: Apriori, Fuzzy Apriori and FP-growth. The experiment was conducted based on UKM network traffic. The experiment has shown which datasets have anomaly,  has produced the anomaly detection patterns (rules) which can be used to update the signature rules for UKM?s IDS in order to filter network traffic better. The research has show that the Fuzzy Appriori approach offers the best results. The research also found that pre-processing in a form 2-second has shown the best method  to detect intrusion.

ACKNOWLEDGEMENT   This work has been supported by 01-01-02-SF0598.

