Using association rules to discover search engines related queries

Abstract  This work presents a method for automatic generate sug- gestions of related queries submitted to Web search engines.

The method extracts information from the log of past sub- mitted queries to search engines using algorithms for min- ing association rules. Experimental results were performed on a log containing more than 2.3 million queries submit- ted to a commercial searching engine giving correct sugges- tions in 90.5% of the top 5 suggestions presented for com- mon queries extracted from a real log.

1. Introduction  The Web has become an essential source of up-to-date information that covers almost all the topics a human could be interested in. However, the task of finding relevant infor- mation related to a given topic on the Web is difficult. The information available on the Web is not structured, there- fore the useful material related to any searched topic is al- ways mixed with billions of Web pages with little or no in- terest. Under this scenario, Web search engines became one of the most popular service available on the Web.

Despite the recent advances on the technology of the search engines there are still many situations where the user is contemplated with non-relevant answers. One of the great challenges faced by search engines is the difficulty in un- covering an exact description of the user need, since users usually submit very short and imprecise query[9].

A popular solution to help the users in the task of spec- ifying their information needs is to use relevance feedback techniques [3]. These techniques improve the interactivity of the system by allowing users to inform about the rele- vance of answers given to their initial query. The feedback  information is used to refine the initial query and get a bet- ter specification of the user needs.

A form of relevance feedback that has recently become popular in many search engines is to show a list of related queries to the user initial query. For instance, if the user searches for ?Madonna? in All the Web search engine1 the following related queries are presented : ?madonna lyrics?, ?madonna music?, ?madonna mp3? and ?madonna wed- ding?. The presentation of a list of related queries is an interesting feedback alternative because user can explicitly reformulates the query, removing possible ambiguities, or turning its query more specific, or just redirecting its query to another topic which is related to the initial query and that. Despite of its raising popularity among search engines, there is a lack of related work in the literature on how to get query suggestions automatically.

The objective of this paper is to present a method for automatically generate lists of related queries. The method uses an algorithm for mining association rules from the log of past submitted queries to a search engine. In our ex- periments we used a log containing more than 2.3 million queries submitted to Farejador2, a popular brazilian search engine. Experimental results show that our method is both precise and useful. It usually generates correct suggestions that retrieve relevant documents to the user. Also, we show that the same approach can be used to provide terms to the classic problem of query expansion.

This paper is organized as follows. Section 2 presents re- lated work. Section 3 discuss the proposed method . Exper- imental results are presented in Section 4. Finally, Section 5 presents the conclusions.

1 http://www.alltheweb.com 2 http://farejador.ig.com.br  Proceedings of the First Latin American Web Congress (LA-WEB 2003)    2. Related Work  Association rules are widely used to develop high quality recommendation systems in e-commerce applications avail- able in the Web [6, 10]. In these applications the systems take user sessions stored at system logs to obtain informa- tion about the user behavior and recommend services and products.

Our work makes the assumption that the same idea can be applied to help search engine users in the task of find- ing relevant information available in the Web. The idea is to find a previous search pattern that matches the current query and use this information to suggest related queries that may be useful to users.

The idea of using information available from query logs was already exploited in previous work. In [7] it is proposed a method to study the relationship between queries analyz- ing the relationship between terms. The method takes the top 10 answers given by a search engine for each query and use this information to study the relationship among query terms and document terms. This relation is mapped in a graph which may be navigated by users to refine their queries.

Another technique that uses search engine logs is pro- posed in [5]. In this technique, the authors suggest a method for finding relations between queries and phrases of docu- ments. This work uses the hypothesis that the click through information available on search engine logs represents an evidence of relation between queries and documents chosen to be visited by users. Based on this evidence, the authors establish relationships between queries and phrases that oc- curs in the documents chosen. These relationships are then used to expand the initial query or to give query sugges- tions.

The two works presented above are based on the idea that there is relation between queries and the textual con- tent of documents selected for these queries. This assump- tion is not always true when we are dealing with the Web, where many documents may contain noisily or non textual information. Moreover new search engine are using alterna- tive sources of information to rank documents [4].

Furthermore, in both cases the information extracted from logs about queries relationship depends also on the search engine results, which is costly and makes the meth- ods highly dependent on the quality of the search engine used in the experiments. An example of this problem is pre- sented in [7], where experiments show that their method give different performances when applied to differ- ent search engines.

Our method avoids this dependence because information on queries relationship is extracted exclusively from query logs. We do not read any information from the search en- gine or document contents. Instead we use association rules  to extract information from logs.

Another way to guide users in the task of finding relevant  information is to develop query expansion techniques [3, 8].

Some query expansion methods can be adapted to give sug- gestions of new queries. This strategy is different from find- ing related queries because the expansion methods construct artificial queries, while in our case we give actual related queries formulated by other users that had the same in- formation need in the past. On the other hand, the related queries can also be used like a query expansion method.

In [5] is suggested a method that uses the relationships ex- tracted from search engine log files for query expansion.

We will present some experiments showing how to use our method to derive an useful expansion method.

3. Identifying Related Queries  Our method for identifying related queries is divided in two phases, as shown in Figure 1. In phase 1, search en- gine logs are analyzed and user sessions are extracted. On the second phase, association rules are mined from the set of user sessions and related queries are identified. We now de- scribe each phase in details.

Figure 1. Identifying related queries  3.1. Extracting user sessions  We call a user session ? all the queries made by a user in a pre-defined time interval ?3. The set of user sessions can be extracted directly from search engine web server logs.

3 In our experiments, we used ? ? ?? minutes  Proceedings of the First Latin American Web Congress (LA-WEB 2003)    The server used in our experiments is the Squid Proxy. Fig- ure 2 presents a typical log format as generated by the Squid Proxy and Figure 3 presents a real example. Although this format is specific to Squid, all web servers generate simi- lar log files.

time elapsed remote-host code/status bytes method URL rfc931 peerstatus/peerhost type  Figure 2. Squid log format.

1042078585.991 3713 200.226.211.142 TCP MISS/200 25368 GET http://cluster.igbusca- cluster/query.cgi?query=+origem+da+familia+marques - DIRECT/192.168.2.12 text/html  Figure 3. Example of an entry in the query log.

Based on the log information, the user session is de- fined as follows. Each user is identified by the remote host field (its IP address) and the session is defined by the set of queries (extracted from the URL field ) each user submitted, divided in ? minutes intervals according to the time field. To avoid queries from different users with the same IP address we only use sessions with a low number of queries (in ex- periments we use session with only 10 queries).

Once the set of user sessions ? is characterized, we can now start the phase 2 of our method, as described in next section.

3.2. Mining Association Rules and Identifying Re- lated Queries  Before introducing our method to discover related queries, we now briefly describe the problem of min- ing association rules. We use an example formalized in [1] to revise the needed concepts. The example is based on the problem of mining sales data, called bas- ket data. Let ? ? ???? ??? ???? ??? be a set o literals called items. Let ? be a database of transactions. Each trans- action ? can be represented by a binary vector, with ???? ? ? if ? bought the item ??, and ???? ? ? other- wise. Let ? be a subset of ? . A transaction ? satisfies ? if for all items ?? in ? , ???? ? ?.

This statement can be redefined for the problem of find- ing related queries. Here, the set ? ? ???? ??? ???? ??? is a set of queries from log files and ? is the the set of user ses- sions ?. For each ? there is a binary vector ???? such that ???? ? ? if session ? searched for query ?? , and ???? ? ?  otherwise. A transaction ? satisfies ? exactly as described in last paragraph.

By an association rule we mean the implication ? ? ? , where ? ? ? , ? ? ? , and ??? ? ?. The rule? ? ? has a confidence factor of 	 if 	? of the transactions in ? that contains ? also contains ? . We will use the classical nota- tion ? ? ? ?	 to specify that the rule ? ? ? has a confi- dence factor of c. The rule ? ? ? has a support factor of ? if ?? of the transactions in ? contain ?  ? ? . The prob-  lem of mining association rules is to generate all associa- tion rules that have a support greater than an specified min- imum support (also called minsup) [2].

In the problem of finding related queries, we are only in- terested in associations like ? ? ? , where ? ? ? , ? ? ? , ? ? ? ? ? and X and Y have only one element. We say that a query ?? is related to ?? if the transaction ? ? ? has at least a minsup, where ? ? ?? and ? ? ?? . The intu- ition behind our method is as follows. During a session, the user defines (roughly) his information need submitting a set of queries. If distinct queries occur simultaneously in many user sessions, these queries may be related.

Now for each query ?? we have a set of transactions (???? ? ????? ???? ? ????? ???? ? ????? ???? ???? ? ????) sorted by its confidence. Then, ?? related queries is the set ???? ??? ??? ???? ???, where ???? ? ????? ???? ? ????? ???? ? ????? ??? ???? ? ?????	. It can be easily sorted by the frequency that each query appears in the same session of ??. This procedure is justified by the defini- tion of confidence and because our set of association rules has only one element for each transaction. This is a very simplified form of using association rules, however, it pro- vides us a formal framework for analyzing the query logs, its implementation is efficient enough to process huge log databases and, as shown at the experiments presented here, it produces good results.

This simple definition allows our method to compute the relation between queries in an extremely fast way, which means new association rules can be updated periodically to identify new groups of related queries. This feature is im- portant since the topics searched on the Web are dynamic and new relations may arise every day.

4. Experimental Results  We present in this section experiments to evaluate the quality of our method. All experiments were performed us- ing a log with 2,312,586 queries from a popular search en- gine in Brazil (Farejador IG). For these experiments we have implemented our method using ????? ? ?.

Table 1 shows related queries found by our method for the top 5 most popular queries in this period. The transla- tion of non English words are presented in parenthesis to make results clearer. For instance, ?jogos? means ?games?,  Proceedings of the First Latin American Web Congress (LA-WEB 2003)    Query Suggestions  jogos (games) games (games), sexo (sex), games jogos (games and games in portuguese), gratis jogos (free games), jogo (game)  horoscopo (horo- scope)  signos (signs), astrologia (as- trology), signo (sign), sexo (sex), horoscopos (horo- scopes)  papel de parede (wallpaper)  de protecao de tela (screen protection), ?papel de parede? (?wall paper?), de protetor de tela (screen pro- tector), baixaki(an website about wallpapers), wallpa- per  musicas (musics) musica (music), mp3, de le- tras musicas (musics lyrics), radio (radio), gratis musica (free music)  concursos (concur- rence)  concursos publicos (public concurrence), dirigida folha (a famous Brazilian website about public concurrence), concurso (concurrence), con- curso do jornal (concurrence newspaper), concurso pub- lico (public concurrence)  receita federal imposto de renda (in- come tax), ?receita fed- eral?(Brazilian govern- ment agency responsible for tax collection), receitafed- eral, receita(abbreviation of the original query), ministe- rio da fazenda (Department of Treasury)  Table 1. Related queries examples.

?jogos gratis? means ?free games?, and so on. The results for the top 5 queries where quite good, despite of the wrong suggestions of ?sexo? related to the query ?games?. This occurred probably because ?sexo? is a very common query submitted by users that also searched for ?games?.

Table 2 shows the results for an experiment using the top 95 most popular queries. For each query we evaluated the first 5, 10, 15 and 20 first suggestions given by our sys- tem. Considering the first 5 suggestions, more than 90% of the results suggested by our system where correct. The judgment about the relationship between queries was per-  Suggestions per query  Correct sug- gestions  Wrong sug- gestions  5 90.5% 9.5% 10 89.5% 10.5% 15 86.9% 16.1% 20 81.4% 18.6%  Table 2. Top 95 queries suggestions.

formed by five people from our laboratory. They analised each query and the suggestion provided by the program, as- signing as related the suggestions they believed could be in- teresting for users who formulated the original query.

Another possible ways of checking the degree of rela- tion between two queries is to evaluate the precision-recall curve of the original query, compared against the curve for the related queries. The relevance judgment in this case is always performed considering the user needs in the origi- nal query.

0 2 4 6 8 10  P re  ci si  o n (  % )  Result number  Expansion precision  ?query? ?related?  Figure 4. Precision for the related query  Figure 4 shows a graph comparing the top 10 precision of the related queries and of the original queries. In this ex- periment we submitted the 20 most popular original queries to the search engine Google. For each query we also sub- mitted the top 5 related queries obtained by our method.

The answers were given to the user as results for the orig- inal query and they have assigned each item as relevant or non relevant for the original query. The results show that the related queries bring a high concentration of relevant docu- ments, with a result close to the original query. Therefore, the related queries can be use to find new documents which are relevant for the user who formulated the original query.

Proceedings of the First Latin American Web Congress (LA-WEB 2003)    Total of suggestions Correct sug- gestions  Wrong sug- gestions  214 93.45% 6.55%  Table 3. Percentage of correct related queries obtained when giving suggestions for 100 randomly selected queries.

Table 3 shows results with queries randomly selected from the logs. This experiment was performed to check the overall performance of our method against the whole set of queries, and not only over common queries. The table shows we got only about 2 suggestions per query on the average, which was expected since we have many low fre- quency queries in the log. However, the quality of the sug- gestions presented indicates that our method is still useful even for the general case, obtainning 93.45% of succesful suggestions.

4.1. Query Expansion  We also experimented the possibility of using our method as part of a simple query expansion technique.

Query expansion methods are used to avoid the neces- sity of textual matches between the user query and the Web pages searched. The idea of any expansion method is to pre- process the user query in order to find new terms that are related to the user needs and then submit a query ex- panded with these new terms.

We have implemented and experimented a simple query expansion method which uses the related queries as the ex- pansion for the initial query. In this first experiment, we got 20 queries randomly chosen from log, and expanded each query with the top related queries, performing an OR op- eration between the original query and all suggestions ob- tained. This simple strategy produced an interesting result, indicating that we should study this possibility more care- fully in the future.

Figure 5 shows the precision rates at the top 10 for the original and expanded queries. The superior results achieved by the expanded query indicates that our proposed method may be an useful source of information for query expansion techniques.

5. Conclusions and Future Work  We have shown a method for proposing related queries based on the application of association rules over search engine query logs. The method proposed is simple, has low computational cost and presents good results. The ex- periments presented show the practical usefullness of the        0 2 4 6 8 10  P re  ci si  o n (  % )  Result number  Random expansion precision  ?query? ?expansion?  Figure 5. Precision for the expanded query  method. We have also experimented our method as an in- put to a simple query expansion technique. An initial ex- periment has shown that using just an OR operator between the original and the related queries we can obtain an im- provement in the precision. As future work, we are plan- ning to study the idea of expanding queries with our method by performing more detailed experiments and by studying the possibility of new combinations among original and re- lated queries. We are also studying the possibility of com- bining the information extracted form the logs with infor- mation extracted from the Web documents to derive new suggestion methods.

Acknowledgements  The authors acknowledge the support by Akwan Infor- mation Technologies in providing the log files for this re- search.

This work was supported in part by the GERINDO project?grant MCT/CNPq/CT-INFO 552.087/02-5, the SIAM project?grant MCT/FINEP/CNPq/PRONEX 76.97.1016.00, and by CNPq grant 520.916/94-8 (Nivio Ziviani).

