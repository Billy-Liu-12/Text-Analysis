Genetic Network Programming based data mining method for extracting fuzzy association rules

Abstract? In this paper, a new data mining algorithm is proposed to enhance the capability of exploring interesting knowledge from databases with continuous values. The al- gorithm integrates Fuzzy Set Theory and ?Genetic Network Programming (GNP)? to find interesting fuzzy association rules from given transaction data. GNP is a novel evolutionary optimization technique, which uses directed graph structures as gene instead of strings (Genetic Algorithms) or trees (Ge- netic Programming), contributing to creating quite compact programs and implicitly memorizing past action sequences. We adopt the Fuzzy Set Theory to mine associate rules that can be expressed in linguistic terms, which are more natural and understandable for human beings. The proposed method can measure the significance of the extracted association rules using support, confidence and ?2 test, and obtains a sufficient number of important association rules in a short time. Experiments conducted on real world databases are also made to verify the performances of the proposed method.



I. INTRODUCTION  ASSOCIATION RULE MINING is one of the mostimportant issues in data mining field. Most of the previous researches can, however, only handle transaction data with binary values since they are based on Agrawal?s proposed approach [1], [2]. In real-world applications, sci- entific and statistical databases are usually composed of continuous values. Therefore, for dealing with continuous values, existing algorithms usually involve discretization of the continuous attributes into several intervals as a prepro- cesing step. However, in some situations, human knowledge does not exactly corresponds to such discretization. For instance, in the following knowledge: ?small cars make tall people feel unconfortable?, the linguistic term ?tall? can not be appropiately represented by an interval. Designing a sophisticated association rule mining algorithm to deal with different types of data becomes a challenge in this research topic.

Fuzzy set Theory that provides the framework for dealing with linguistic terms has been more frequently used in intelligent systems, because of its simplicity and similar- ity to human reasoning. The theory has been successfully applied to many fields such as engineering, manufacturing, economics, and others [3], [4].

In this paper, we propose an association rule mining algorithm that can deal with databases with continuous  Authors are with the Graduate School of Information, Production and Systems, Waseda University. Hibikino 2-7, Wakamatsu-ku, Kitakyushu- shi, Fukuoka 808-0135, Japan. (phone: +81 93 692-5261; fax: +81 93 692-5261; email: {egonzale, karla taboada}@asagi.waseda.jp, {k.shimada, mabu}@aoni.waseda.jp, hirasawa@waseda.jp).

values. Our method, integrates Fuzzy Set Theory and Genetic Network Programming (GNP) in order to obtain association rules that can be expressed in linguistic terms, which are more natural and understandable for human beings; this type of knowledge makes the discovered rules more useful.

GNP is one of the evolutionary optimization techniques [5], [6], [7], which uses directed graph structures as genes instead of strings (Genetic Algorithms) or trees (Genetic Programming). GNP is composed of three types of nodes in a network: a start node, judgment nodes and processing nodes are linked together on the graph. The features of GNP are described as follows. First, because it is possible to reuse the nodes, the structure is compact. Second, GNP can find solutions of problems without bloat, which can be sometimes found in Genetic Programming (GP), because of the fixed number of nodes in GNP. Third, the nodes that are not used at the current program executions would be used for future evolution. Fourth, GNP is able to cope with partially observable Markov processes.

We have already proposed association rules mining al- gorithms based on GNP that can deal with discrete and continuous values [8], [9]. In this paper, we extend and improve the previous research and propose a method that is capable of transforming continuous values in transactions into linguistic terms and finding fuzzy association rules by using GNP. In addition to that, the parameters of the fuzzy membership functions are evolved by using non uniform mutation in order to obtain as many association rules as possible.

The characteristics of the proposed method compared to other methods are as follows:  ? Extracts rules without identifying frequent itemsets used in Apriori-like mining methods.

? Stores extracted important association rules in a pool all together through generations.

? Measures the significance of associations by using sup- port, confidence and ?2.

? Uses extracted important rules in the pool as acquired information for genetic operations.

? Discover fuzzy association rules by using GNP.

? Parameters of the membership functions are evolved by  using non uniform mutation in every generation in order to obtain new association rules.

? The pool is updated in every generation exchanging an association rule with lower ?2 value for an association rules with higher ?2 value.

? Extracts important rules enough for user?s purpose in a      Fig. 1. The basic structure of GNP individual  short time.



II. GENETIC NETWORK PROGRAMMING  Genetic Algorithm (GA), Genetic Programming (GP) and Evolutionary Programming (EP) are the typical methods of the evolutionary algorithm. GA evolves strings as individuals and it is mainly applied to optimization problems. GP was formulated later in order to expand the expression ability of GA by using tree structures, therefore, GP is applicable to more complex problems. Genetic Network Programming (GNP) is an extension of GA and GP which uses directed graph structures as genes instead of strings and trees. The aim of developing GNP is to deal with dynamic environments efficiently by using the higher expression ability of graph structures.

A. Basic Structure of GNP  GNP is composed of three kinds of nodes that are con- nected each other in a network: start node, judgment node and processing node. Fig. 1 shows the basic structure of GNP.

Judgment nodes are the set of J1, J2, . . . , Jp, which work as if-then type conditional branch decision functions, they return judgment results for assigned inputs and determine the next node. Processing nodes are the set of P1, P2, . . . , Pq, which work as action/processing functions. Contrary to judgment nodes, processing nodes have no conditional branches. Start node has no functions and no conditional branches. The only role of the start node is to determine the next node, i.e., the first node to be executed. Once GNP is booted up, firstly the execution starts from the start node, secondly the next node to be executed is determined according to the current judgment result and connection from the current activated node.

The genotype expression of GNP node is shown in Fig. 2.

NTi describes the node type, NTi = 0 when node i is start node, NTi = 1 when node i is judgment node and NTi = 2 when node i is processing node. IDi is an identification number, for example, NTi = 1 and IDi = 1 mean node i is J1. Ci1, Ci2, . . . , denote the nodes which are connected from node i firstly, secondly, . . . , and so on depending on the arguments of node i.

Fig. 2. Gene structure of node i of GNP  Fig. 3. Crossover  B. Genetic Operations of GNP  Selection, crossover and mutation of GNP are reviewed as follows.

? The individuals preserved to the next generation are selected according to the fitness of each individual.

Roulette, tournament and elite selection are established in GNP.

? The crossover of GNP is the genetic operation that generates two new offspring by exchanging the genetic information between two parents [see Fig. 3]. Crossover operator affects two parent individuals. All the connec- tions of the uniformly selected corresponding nodes in two parents are swapped each other by crossover rate Pc. One point crossover, several points crossover and uniform crossover are established in GNP.

? The mutation is executed in one individual and a new one is generated [see Fig. 4]. Each node branch (Ci1, Ci2, . . . ) is selected with the probability of Pm1 and the selected branch is reconected to another node. Each node function (IDi) is selected with the probability of Pm2 and the selected function is changed to another one.



III. ASSOCIATION RULES  Association rules show attributes that occur frequently to- gether in a given dataset. A typical and widely used example of association rule mining is Market Basket Analysis. In brief, an association rule has the form (X ? Y ) where X (antecedent) and Y (consequent) are disjoint conjunctions of item subset (e.g. ?Diapers ? Beer?). To evaluate the  2008 IEEE Congress on Evolutionary Computation (CEC 2008) 1757    Fig. 4. Mutation  significance of the extracted association rules, the support- confidence framework is commonly used. The support of the rule is defined as the percentage of the records having both attributes X and Y and the confidence is defined as the percentage of the records having Y given that they also have X .

The following is a formal statement of the problem of mining association rules [10]. Let I = {A1, A2, . . . , Al} be a set of literals, called items or attributes. Let G be a set of transactions, where each transaction T is a set of items such that T ? I . Associated with each transaction is a unique identifier whose set is called TID. A transaction T contains X , a set of some items in I , if X ? T . An association rule is an implication of the form of X ? Y , where X ? I , Y ? I , and X ? Y = ?. X is called antecedent and Y is called consequent of the rule. In general, a set of items is called an itemset. Each itemset has an associated measure of statistical significance called support. If the fraction of transactions containing X in G equals t, then support(X) = t. The rule X ? Y has a measure of its strength called confidence defined as the ratio of support(X ? Y )/support(X).

A. Calculation of ?2 Value of the Rule X?Y  In our research, we have extended the traditional support- confidence framework and proposed the measurement of the significance of an association rule by calculating ?2 for correlation used in classical statistics [11].

The ?2 statistic is defined as follows. Let support(X) = x, support(Y ) = y, support(X?Y ) = z and the number of database tuples equal N . If events X and Y are independent then support(X ? Y ) = xy. Table 1 is the contingency of X and Y : the upper parts are the expectation values under the assumption of their independence, and the lower parts are observational.

Now, let E denote the value of the expectation under the assumption of independence and O the value of the  TABLE I  THE CONTINGENCY OF X AND Y .

Y ?Y ?  row  X Nxy N(x ? xy) Nz N(x ? z) Nx  ?X N(y ? xy) N(1 ? x ? y + xy) N(1 ? x) N(y ? z) N(1 ? x ? y + z)?  col Ny N(1 ? y) N  ( N : the number of tuples (= |TID|) )  observation. Then the ?2 statistic is defined as:  ?2 = ?  AllCells  (O ? E)2  E .

(1)  We can calculate ?2 using x, y, z and N of Table 1 as follows:  ?2 = N(z ? xy)2  xy(1 ? x)(1 ? y) .

(2)  This has 1 degree of freedom. If it is higher than a cutoff value (3.84 at the 95% significance level, or 6.63 at the 99% significance level), we should reject the independence assumption.



IV. REVIEW OF RELATED WORKS  Recently, some research works have been done on the use of Fuzzy Set Theory in discovering association rules for dealing continuous attributes. Miller and Yang proposed a distance-based association rules mining process, which improves the semantics of the intervals [12]. Hirota and Pedrycz proposed a context sensitive fuzzy clustering method based on fuzzy C-means to construct rule-based models [13].

Au and Chan proposed the F-APACS method in order to solve the qualitative knowledge discovery problem [14], [15].

Ishibuchi et al. and E. Hullermeier illustrated fuzzy versions of confidence and support [16], [17]. Gyenesei presented two different methods for mining fuzzy continuous association rules, namely without normalization and with normalization [18], [19]. The experiments of Gyenesei showed that the numbers of large itemsets and interesting rules found by the fuzzy method are larger than the discrete method defined by Srikant and Agrawal [20].

Evolutionary algorithms such us Genetic algorithms (GAs) and Genetic Programming (GP) have also been used in the field of data mining since they are powerful search techniques in solving difficult problems. M. Kaya proposed a GA-based clustering method to derive a predefined num- ber of membership functions for getting a maximum profit [21]. Hong et. al. proposed a GA-based fuzzy data-mining method for extracting both association rules and membership functions from quantitative transactions [22]. R. Mendez et. al. proposed a co-evolutionary system for discovering fuzzy classification rules. The system uses two evolutionary algorithms: a GP algorithm evolving a population of fuzzy rule sets and a simple evolutionary algorithm evolving a population of fuzzy membership functions definitions. The two populations co-evolve, so that the final result is a fuzzy rule set and a set of membership functions definitions that are well adapted to each other [23]. Lyman et. al. present a  1758 2008 IEEE Congress on Evolutionary Computation (CEC 2008)    GP approach for mining disjunctive association rules applied to the problem of analyzing card sorting data. [24].

In most of the described algorithms, the objective is to expand the techniques presented for the binary form, however, the problems existing in the fuzzy form remain unsolved in cases of large datasets. That is, they are often inefficient in both computation and description terms and generally they have space and time complexity problems compared to traditional models.



V. GNP BASED DATA MINING ALGORITHM FOR CONTINUOUS VALUES  In this section, the proposed GNP based algorithm for mining fuzzy association rules is described.

A. Fuzzy Association Rules  Compared with traditional association rules, fuzzy associ- ation rules provide good linguistic explanation and can deal with both discrete and continuous attributes. It provides an alternative approach in the applications of association rules by reducing the complexity of association rules and covering more important attributes in the rules.

The proposed method extracts the fuzzy association rules as follows. Let Ai be a fuzzy attribute (item) with a contin- uous value in a database.

If (Ai is Fiq(Ai)) ? ? ? ? ? (Aj is Fjq(Aj)) ? (Am is Fnq(Am)) ? ? ? ? ? (An is Fnq(An))  where, Fiq(Ai), ..., Fjq(Aj), Fmq(Am), ..., Fnq(An) are qth membership functions of Ai, ..., Aj , Am, ..., An, respec- tively.

For instance, If A1 is High ?A2 is Low ?A5 is Medium ? A7 is High.

B. Fuzzy Membership Functions  The proposed algorithm first transforms each continuous value of the database into a fuzzy set with linguistic terms using the combination of trapezoidal and triangular fuzzy membership functions spaced symmetrically and equally as shown in Fig 5.

Fig. 5. Definition of the fuzzy membership functions  Fig. 6. shows an example of the fuzzy membership functions for age and salary attributes. Table III shows the calculated membership values using Table II.

Once a GNP individual starts the searching for association rules (described in section D), the membership value is employed to determine the transition from one judgment node to another, that is, a random number is generated and  TABLE II  A SAMPLE DATABASE  TID Age Salary  1 24 2500 2 30 4000 3 35 3500 4 50 5000  (a) Age Attribute (b) Salary Attribute  Fig. 6. Membership functions of age and salary attributes.

compared to the membership value of the fuzzy attribute, which is used as a probability for determining the Yes-side or No-side of the judgment node of the fuzzy attribute.

C. Evolution of the Fuzzy Membership Functions using Non- Uniform Mutation  The fuzzy parameters are used to define the membership functions. For instance, if the triangular membership function is used, then the fuzzy parameters would be the center and width of the triangle. In this paper, the parameters of the fuzzy membership functions are ?, ? and ? according to Fig.

5 and are evolved by using non uniform mutation proposed by Michalewicz [25]. This new operator, that reduces the disadvantages of random mutation, is defined as follows.

For each individual Xtp in a population of t-th generation, create the following offspring Xt+1p through non-uniform mutation.

if Xtp = {x1, x2, . . . , xl} is a chromosome, then the offspring Xt+1p = {x  ?  1, x ?  2, . . . , x ?  l} becomes as follows:  x?k =  { xk + ?(t, UB ? xk), if a random ? is 0;  xk ? ?(t, xk ? LB), if a random ? is 1.

(3)  xk is selected for the mutation, LB and UB are the lower and upper bounds of the variable xk. The function ?(t, y) returns a value in the range [0, y] such that ?(t, y) approaches to zero as t increases. This property causes this operator to search the space uniformly initially (when t is small), and very locally at later generations. This strategy increases the probability of generating a new number closer to its predecessor than a random choice at later generations.

We use the following function:  ?(t, y) = y.(1 ? r(1? t T  )? ), (4)  where, r is a uniform random number from [0, 1], T is the maximal generation number, and ? is a system param-  2008 IEEE Congress on Evolutionary Computation (CEC 2008) 1759    TABLE III  DATABASE WITH MEMBERSHIP VALUES  TID Age Salary Y oung Middle Old Low Medium High  1 0.8 0.2 0 0.75 0.25 0 2 0.5 0.5 0 0 1 0 3 0.25 0.75 0 0.25 0.75 0 4 0 0.5 0.5 0 0.5 0.5  eter determining the degree of dependency on the iteration number. In this paper, ?= 5.

D. GNP Structure for Association Rule Mining  GNP examines the attribute values of database tuples using judgment nodes and calculates the measurements of associa- tion rules using processing nodes [8], [9]. Attributes and their values correspond to judgment nodes and their judgments in GNP, respectively. Therefore, the connections of judgment nodes are represented as association rules. The measurements include support, confidence and ?2 value (described in the next section). Fig. 7 shows an example of the connection of nodes in GNP for association rule mining. P1 is a processing node and is a starting point for calculating association rules.

Each processing node has an inherent numeric order (P1,P2,.

. . ,Ps) and is connected to a judgment node. Yes-side of the judgment node is connected to another judgment node.

Judgment nodes can be reused and shared with some other association rules because of GNP?s features. No-side of the judgment node is connected to the next numbered processing node.

Fig. 7. A connection of nodes in GNP for association rule mining.

In Fig. 7, N is the number of total tuples, and a, b, c and d are the numbers of tuples moving to Yes-side at each judgment node. Once a GNP individual starts the searching for association rules, the membership values are employed to determine the transition from one judgment node to another, that is, according to the membership value of the attribute Ai(described in section B), the probability of selecting the judgment result (Yes/No) is calculated.

E. Finding Association Rules using GNP  The number of kinds of the judgment node functions are equal to the number of attributes multiplied by the number  of kinds of linguistic terms in a database. For example, supposing that we examine tuple 1 ? TID, in the judgment node of ?Ai is Fiq(Ai)?, a random number from the interval [0,1] is compared with the value calculated by Fiq(Ai). Then, if the random number is smaller that the value, the transition moves to Yes-side, otherwise, it moves to No-side. If the examination of the connection from the starting point Ps ends, then GNP examines tuple 2 ? TID likewise. Thus, all tuples in the database will be examined. The total number of tuples moving to Yes-side at each judgment node is calculated for every processing node, which is a starting point for calculating association rules. All GNP individuals are searched in parallel at the same time. If Yes-side connection of judgment nodes continues and the number of the judgment nodes becomes a cutoff value (maximum number of attributes in extracted association rules), then Yes-side connection is transferred to the next processing node obligatorily.

F. Measurements of the Association Rules using GNP  Table IV shows the measurements such as support and confidence of the association rules.

In Fig. 7 and Table IV, A1 High, A2 Low, A3 Mid and A4 High are example of ?Ai is Fiq(Ai)?, where the mem- bership functions have three kinds of linguistic terms such us Low, Medium and High, i.e., Fi1=Low, Fi2=Medium and Fi3=High, and Ai is the fuzzy variable corresponding to attribute Ai.

The proposed method measures the significance of associa- tions via the ?2 test for correlation used in classical statistics.

For example, we are able to calculate the support of A3 Mid and A3 Mid?A4 High, if we change the connection of P1 node from A1 High node to A3 Mid node in Fig. 7. We can repeat this like a chain operation in each generation. Now, we define important association rules by the ones which satisfy the following:  ?2 > ?2min, (5)  support ? supmin. (6)  Where, ?2min and supmin are the minimum ? 2 and support  values given by supervisors. In this definition, if the rule ?X ? Y ? is important, then X ? ?Y,?X ? Y,?X ? ?Y, Y ? X,Y ? ?X,?Y ? X and ?Y ? ?X are also important rules. If required, we can also add confidence to the definition. The extracted association rules are stored in a pool all together through generations. When an important rule is extracted by GNP, the overlap of the attributes is checked and it is also checked whether an important rule is new or not, i.e., whether it is already in the pool or not. If the rule is new, it is stored in the pool with its support, confidence and ?2. If the association rule is not new because the linguistic terms that describe the attributes are different from the ones of the association rule in the pool, the association rule with higher ?2value is stored, then, the pool is updated in every generation and only important association rules with higher ?2 values are stored [See Fig. 8].

1760 2008 IEEE Congress on Evolutionary Computation (CEC 2008)    TABLE IV  SUPPORT AND CONFIDENCE OF ASSOCIATION RULES.

association rules support confidence  A1 High ? A2 Low b/N b/a A1 High ? A2 Low ? A3 Mid c/N c/a  A1 High ? A2 Low ? A3 Mid ? A4 High d/N d/a A1 High ? A2 Low ? A3 Mid c/N c/b  A1 High ? A2 Low ? A3 Mid ? A4 High d/N d/b A1 High ? A2 Low ? A3 Mid ? A4 High d/N d/c  Fig. 8. The pool is updated generation by generation.

G. Fitness of GNP  Fitness of GNP is defined by,  F = ? r?R  {?2(r)+10(nante(r)?1)+10(ncon(r)?1)+?new(r)}  (7) The items are as follows: R: set of suffixes of extracted important association rules  satisfying (5) and (6) in a GNP individual ?2(r): ?2 value of the rule r.

nante(r): the number of attributes in the antecedent  of the rule r.

ncon(r): the number of attributes in the consequent  of the rule r.

?new(r): additional constant defined by  ?new(r) =  { ?new (the rule r is new)  0 (the rule r has been already extracted) (8)  ?2(r), nante(r), ncon(r) and ?new(r) are concerned with the importance, complexity and novelty of the rule r, respec- tively.

H. Genetic Operators of GNP  The following genetic operators are executed to GNP individuals:  ? Crossover: Operator producing offspring from parents.

Uniform crossover is used. Judgment nodes are selected as crossover nodes with the probability of Pc. Two par- ents exchange the gene of the corresponding crossover nodes.

? Mutation-1: Operator that affects one individual. The connection of the judgement nodes is changed by mu- tation rate of Pm1.

? Mutation-2: Operator that also affects one individual.

The function of the judgment nodes is changed by mutation rate Pm2.

All GNP individuals in a population have the same number of judgment and processing nodes, however the node with the same node number does not have the same function. All the connections of the processing nodes are changed randomly in order to extract rules efficiently.



I. Use of Acquired Information  We can use the frequency of the attributes of all extracted rules, or rules extracted in some of the latest generations when doing Mutation-2. We define the probability of se- lecting the attribute Fiq(Ai) for judgment nodes by the following:  P giq = ng(Fiq(Ai)) + C?  k?K  ? q(n  g(Fkq(Ak)) + C).

(9)  Where, P giq is the probability of selecting Fiq(Ai) using the information on the association rules extracted in the latest g generations. ng(Fiq(Ai)) is the frequency of the attribute Fiq(Ai) in the rules extracted in the latest g generations. K is the set of suffixes of attributes. If no rules are extracted in the recent g generations, then P giq is equal to the inverse of the number of attributes. C is a constant given by the supervisor.

Fig. 9 shows the flowchart of our proposed method.



VI. SIMULATION RESULTS  The performance of the proposed method was evaluated by doing two simulations. In simulation 1, the extraction of association rules is done by using fixed parameters of the fuzzy membership functions, that is, they remain fixed for all generations. In simulation 2, the parameters of the fuzzy membership functions evolve by non uniform mutation in  2008 IEEE Congress on Evolutionary Computation (CEC 2008) 1761    Fig. 9. Flowchart of the GNP based data mining method.

order to get suitable parameters and increase the number of association rules stored in the pool. All experiments were run on a real database that contains continuous attributes about VOCs (Volatile Organic Compounds). It consists of 10 at- tributes (Ai , i = 1, 2, . . . , 10) and 825 tuples. In simulations, the population size of GNP individuals is 120. The number of processing nodes and judgment nodes are 10 and 78, respectively. We use (5) (?2min = 6.63), (6) (supmin = 0.1), and (8) (?new = 150). In addition, the detailed conditions of extracting association rules in the simulations are as follows: nante(r) + ncon(r) ? 6, nante(r) ? 5, ncon(r) ? 5.

The probability of crossover and mutation are Pc = 15/78, Pm1 = 1/3 and Pm2 = 1/5 (78 corresponds to the number of judgment nodes). The number of changing the connections of the processing nodes at each generation is 5. The simulations were executed for 500 generations and 20 trials are studied here for all the experiments changing the random sequences.

All algorithms were coded in Java. Experiments were done on a 1.50GHz Pentium M with 504MB RAM.

A. Simulation 1  In this simulation, when transforming each continuous attribute of the database into a fuzzy attribute, the parameters ?, ? and ? of the trapezoidal and triangular membership functions remain fixed for all generations, it means that for the transition from one judgment node to another in GNP individuals, the fixed membership functions are used for all generations. As an illustration, the original membership func- tion for one attribute is shown in Fig. 10. Fig. 11 shows the number of association rules extracted in the pool. It is shown from this figure that the number of rules increases gradually as the generation goes on. However, the performance is not so good compared with Simulation 2, where the membership functions are also evolved. Fig. 12 shows the average fitness values of the GNP individuals. They remain almost at the same level during all generations.

B. Simulation 2  In this simulation, the parameters ?, ? and ? of the mem- bership functions are evolved using non uniform mutation,  Fig. 10. An example of the original fuzzy membership function.

Fig. 11. Association rules stored in the pool when membership functions are fixed.

Fig. 12. Average fitness value of GNP individuals when membership functions are fixed.

it means that for the transition from one judgment node to another in GNP individuals, evolved membership functions are used in every generation. Fig. 13 shows the number of association rules extracted in the pool, while Fig. 14 shows the average fitness values of the GNP individuals. It is found that both the number of rules extracted and the average fitness value increased compared to Simulation 1. It shows that the evolution of the membership functions generation by generation is helpful for extracting many rules and for improving the performance of the GNP individuals?s fitness value. Fig. 15 shows the evolved membership function of Fig. 10. In this simulation, the pool of the association rules is updated in every generation exchanging an association rule with lower ?2 value for the same association rule with higher ?2 value, as a result, association rules are stored with the parameters of the evolved membership functions.

1762 2008 IEEE Congress on Evolutionary Computation (CEC 2008)    Fig. 13. Association rules stored in the pool when membership functions are evolved.

Fig. 14. Average fitness value of the GNP individuals when membership functions are evolved.

Fig. 15. An example of the evolved fuzzy membership function.



VII. CONCLUSIONS AND FUTURE WORK  In this paper, we have proposed an association rule min- ing algorithm based on Genetic Network Programming and Fuzzy Sets Theory to extract association rules from databases with continuous values. Extracted association rules are stored in a pool all together through generations in order to find new important rules. The pool is also updated in every generation exchanging the same association rule with lower ?2 value for higher ?2 value. These rules are reflected in genetic operators as acquired information. Our method measures the significance of association rules using confidence, support and ?2 test. We have performed experiments and estimated the performances of the proposed algorithm. The results have shown that the proposed method extracts important association rules effectively in short time. Adjusting the membership functions according to the frequency of the attributes stored in the pool in order to find the most suitable  parameters is our future work.

