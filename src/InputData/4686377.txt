Hiding Sensitive Association Rules Efficiently By Introducing New Variable Hiding counter

Abstract-we know that large database contain certain information that must be protected against unauthorized access. One known fact which is very important in data mining is discovering the association rules from database of transactions where each transaction consists of set of items. In this paper we discuss confidentiality issues of a broad category of association rules. Two important terms support and confidence are associated with each of the association rule. Actually any rule is called as sensitive if its disclosure risk is above a certain privacy threshold. Sometimes we do not want to disclose sensitive rules to the public because of confidentiality purposes. There are many approaches to hide certain association rules which take the support and confidence as a base for algorithms ([1, 2, 6] and many more).

Our approach is a modification of ISL (increase support of LHS) and DSR (decrease support of RHS) and has some modifications so that it hides any desired association rule as previous work sometimes can not.

Our work has the basis of reduction of support and confidence of sensitive rules but in our work we are not editing or disturbing the given database of transactions directly(as it is generally done in? previous works) rather we are performing the same task indirectly bye modifying the some new introduced terms associated with database transactions and association rules. These new terms are Mconfidence (modified confidence), Msupport (modified support) and Hiding counter. Our algorithm use some modified definition of support and confidence so that it would hide any desired sensitive association rule without any side effect.

Actually we are using the same method (as previously used method) of getting association rules but we are modifying the definitions of support and confidence.

Keywords-Association rule hiding, hiding counter, modified confidence, modifiedsupport.

Securing information against unauthorized access is an important goal of database security and privacy communities. As we know that data mining is a process of discovering the useful and hidden information from large database. Privacy is a term which is associated with this data mining task so that we are able to hide some sensitive information which we don't want to disclose to the public.

So the concept privacy preserving data mining is the process of preserving personal information from data mining algorithms. Actually for any given specific rules to be hidden, many approaches for hiding association, classification and clustering rules have been proposed.

However, to specify hidden rules, entire data mining process needs to be executed. For some applications, we are only interested in hiding certain sensitive predicative rules that contain given items. In our work, we assume that we have given only sensitive items and propose our algorithms to modify data (by introducing some additional terms) in database so that sensitive predicative rules containing sensitive items on the left hand side of rule cannot be inferred through association rule mining.

In our work we are only in concern of hiding certain  association rules which contain some sensitive information on the left hand side of the rule, so that rules containing sensitive items can't be disclosed. Our approach is based on modifying the database in a way that confidence of the association rule (which contain sensitive data item) can be reduced. As the confidence of the sensitive rule is reduced below a specified threshold, it is hidden or we can say it will not be disclosed. It is shown that our approach required less number of databases scanning and is comparatively simpler then other approaches. But main thing in our approach is that we are introducing slight     Let I = {I}, 12, 13, ??? ,Im} be a set of literals, called items. Given a set of transactions D , where each  transaction T is a set of items such that T ~ I, an association rule is an expression X-7Y , where X ~ I , Y~ I and XnY = 0.

New modified support for the rule X-7Y is As below  IXuYI Msupport (X-7Y) = ------------------ (4)  N+hiding counter of rule X-7Y.

New modified confidence for the rule X-7Y is As below  IXuYI Mconfidence(X-7Y) = ---------------- (3)  IX I+hiding counter of rule X-7Y.

In our work we are introducing some new terms also. First one is Rhc (set of hiding counters) and second is Mconfidence (modified confidence) and third is Msupport (modified support).Let Rhc= (R1hc, R2hc, ...Rmhc), where Rhc is a set of hiding counters for all rules. Another important terms which are being used in our algorithm is that we are slightly modifying the definition of support and confidence as hiding counter is being associated with the support and confidence. These modified terms are as below  (1) IXuYI  Confidence = -------------  IXI  The problem of mining association rule is to find all rules that have support and confidence greater then user specified minimum support threshold (MST) and minimum confidence threshold (MCT).As an example[l], for a given database in following table, a minimum support of 33% and a minimum confidence of 70%, nine association rules can be found as follows: B=>A(66%, 100%), C=>A (66%, 100%), B=>C (50%, 75%),C=>B (50%, 75%), AB=>C (50%, 75%), AC=>B (50%,75%), BC=>A (50%, 100~~), C=>AB (50%, 75%),B=>AC (50%, 75%).

IXuYI Support = -------------- (N is number of transactions) (2)  N In other words, the confidence of a rule measures the  degree of the correlation between item sets,while the support of a rule measures the significance of the correlation between item sets. The problem of mining association rules is to find all rules that have support and confidence greater than the user-specified minimum support and minimum confidence.

1: Increase the support of the item which is in the left hand side of rule.

2: Decrease the support of the item which is in the right hand side of the rule.

Our method is based on previous one Le. ISL (increase the support of the item which is in the left hand side of rule) method. Rest of the work is organized as follow. Section 2 presents the backgrounds and related work. Section 3 presents the problem statements. Section 4 presents our algorithm and example. Section 5 presents the analysis and conclusion part.



II. BACKGROUND AND RELATED WORK  There is a large amount of work related to association rule hiding. Maximum researchers have worked on the basis of reducing the support and confidence of sensitive association rules ([1, 2, 6]). ISL and DSR are the common approaches used to hide the sensitive rules. Actually any given specific rules to be hidden, many approaches for hiding association, classification and clustering rules have been proposed. Some of the researchers have used data perturbation techniques ([5]) to modify the confidential data values in such a way that the approximate data mining results could be obtained from the modified version of the database. Some researchers also recognize the necessity of analyzing the various data mining algorithms in order to increase the efficiency of any adopted strategy that deals with disclosure limitation of sensitive data and knowledge.

Also disclosure limitation of sensitive knowledge by data mining algorithms, based on the retrieval of association rules, has been recently investigated. Our work also has the basis of reduction of support and confidence of sensitive rules but in our method we are using some modified terms and some new variable to do the job. Also our work specifies that we can hide any given association rule, as some of the previous work can not.

In our discussion database modification term relates our concept in which we are not directly disturbing or editing the given database of transactions, rather we are introducing some new terms with the help of which we are able to hide the association rule which contain sensitive elements on the left hand side. In order to hide association rules there are two strategies which are used till now.

These two strategies are following.

modified definition of support and confidence which we explain in later section.



III. PROBLEM STATEMENT Table: 1     TID Items T1 ABC T2 ABC T3 ABC T4 AB T5 A T6 AC  The objective of privacy preserving data mining is to hide certain sensitive information so that sensitive information can not be discovered through data mining techniques.

Given a transaction database, a minimum support threshold and minimum confidence threshold and set of sensitive items X, the objective is to modify database in such a way that no predictive association rule containing X on the left hand side will be discovered. So if in above example element A is sensitive then rules AB=>C (50%, 75%), AC=>B (50%, 75%) should not be discovered by data mining algorithm.



IV. PROPOSED ALGORITHM  To hide any specified association rule X-7Your algorithm works on the basis of Mconfidence (X-7Y) and Msupport (X-7Y).To hide the rule X-7Y(containing sensitive element X on LHS),our algorithm repeatedly increases the hiding counter of the rule X-7Y until Mconfidence (X-7Y) goes below a minimum specified threshold confidence (MCT).As the Mconfidence (X-7Y) goes below MCT(minimum specified confidence threshold),rule X-7Y is hidden Le. it will not be discovered through data mining algorithm.

IXuYI Mconfidence(X-7Y)= ----------------  IX I+hiding counter of rule X-7Y.

IXuYI Msupport (X-7Y) = ------------------  N+hiding counter of rule X-7Y  Algorithm  Input: 1: A source database D.

2: MST (Minimum Support Threshold).

3: MCT (Minimum Confidence Threshold).

4: A set of sensitive items X.

5: A set of hiding counters for all rules(which are initially set to zero).

6: New modified terms Mconfidence (X-7Y) and Msupport (X-7Y).

Output: A transformed database D' with  modified confidence where rules containing X on LHS will be hidden.

Procedure: Initially set the hiding counters of all the rules equal to o.

Ilcheck for all sensitive elements.

for each x in X where x E X { I/Now check all the rules containing Iisensitive element x.

for each rule R which contain x on LHS { IICheck whether Mconfidence of the rule Ilgoes below MCT or not.

while (Mconfidence (R?=MCT) II increase the hiding counter of II rule R by 1 { Hiding_counter(R)=Hiding_counter(R)+1 } } }  End of procedure.

Output the rules which do not contain sensitive elements on the left hand side.

Example  Suppose we have given a database of transactions [7] as below  Table: 2  TID Items TI ABD T2 B T3 ACD T4 AB T5 ABD  We have also given a MST of 60% and a MeT of 70% .We can see four association rules can be found as below  A-7B (60%, 75%) B~A (60%,75%) A7D (60%, 75%) D7A (60%,100%)  Now we have to hide D and B.

By previous methods: We can see that simple by     First we hide B  simple ISL algorithm if we want to hide D and B, we check it by modifying the transaction T2 from B to BD (Le. from 0100 to 0101) we can not hide the rule D7A.

T1 ABD 1101 T2 B 0100 T3 ACD 1011 T4 AB 1100 T5 ABD 1101  Msupport Mconfidence  A-7B (60% 75% B-7A(60% 75% A7D (60% 75% D7A (60% 100%  Hiding Counter o ) o ) o ) o )  T1 ABD T2 B T3 ACD T4 AB T5 ABD  T1 ABD 1101 T2 B 0100 T3 ACD 1011 T4 AB 1100 T5 ABD 1101  We see bye DSL approach rule D~A is hidden as its support and confidence is now 40% and 66% respectively, but as a side effect the rule A-7D is also hidden. Similarly we can check same is the condition for B7A.

Our Approach:.

So by above explanation we can see that rule D7A can not be hidden by ISL approach because by modifying T2 from B to BD (Le. from 0100 to 0101) rule D7A will have support and confidence 60% and 75% respectively. Now we will check it by DSR approach....

ABD B ACD AB ABD  T1 T2 T3 T4 T5  As from our example we see that our approach is better in the way that it hides any rule which can not be hidden by some of the previous works. We see in the example that proposed method is hiding the given association rules (with sensitive items on the left hand side of the rule) without any side effect.

Our algorithm is also simpler in the sense that we have to do only one step of modification as we are only incrementing the hiding counter each time (to decrease the confidence of sensitive rule) rather then checking all transactions again and again and ordering them in increasing or decreasing order as we had to do in some of the previous works (which work on the basis of reducing the support and confidence of the sensitive association  v. ANALYSIS AND CONCLUSION  Msupport Mconfidence Hiding Counter A-7B (60% ,75% 0 ) B7A (50% ,60% 1 ) A7D (60% ,75% 0 ) D7A (43% ,60% 2 )~ rule is hidden  ~ Now we hide D  T1 ABD T2 B T3 ACD T4 AB T5 ABD  So we clearly see that our approach is hiding all the given sensitive rules successfully without any side effect.

Msupport Mconfidence Hiding Counter A7B (60% 75%, 0) B~A (50% ,60%, 1) ~ rule is hidden A7D (60% ,75%, 0) D7A (60% ,100%, 0)  0101 ~   T1 ABD T2 B T3 ACD T4 AB T5 ABD  T1 ABD T2 B T3 ACD T4 AB T5 ABD  ~ (Hiding D7A by ISL approach)  ~  ~ (Hiding D-7A by DSR approach)  ~     rules).

