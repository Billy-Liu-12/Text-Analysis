Software Development for Cloud: An Experiential Study

Abstract? Most of the enterprises are using web application for communicating with their customers, partners, shareholders and others. Additionally the web applications are used to carry out commercial activities and business transactions. As web applications are extensively used, its operating environment plays an important role which determines its efficiency. Nowadays cloud has proved to be one of the best operating environments for deploying web applications because of its features like automatic load balancing, scalability, maintenance and cost. As the demand is increasing for cloud computing, many organizations are looking for cloud based software to reduce their deployment cost and server maintenance overhead. The existing web application like individual/corporate websites, CRM/ERP applications, E-Publishing, E-Government, E-Commerce and E-Learning are slowly migrating to cloud. On the other hand managing the content of such web applications is a tedious task. The Content Management Systems (CMS) has already proved to be a good choice for developing web applications which ensures rapid application development and ease of use.

CMS allows even a non-technical user to create, edit, manage and publish the content easily. When CMS is coupled with cloud the resultant application is highly efficient and easily manageable. In this paper we have proposed a new technique to develop cloud based software using content management systems.

Keywords- Cloud Computing; SaaS; Content Management Systems; Drupal

I.  INTRODUCTION Cloud computing is a recent advancement in computing  field that moves computing and data to large data centers which can be accessed through internet. Before the advent of cloud computing all the enterprises used their own servers to deploy their web applications. This resulted in high cost and additional overhead in maintaining the servers.

Cloud computing can address this problem very well by peak time load balancing, pay per use model and increased scalability. Hence almost all the enterprises are migrating to cloud. Cloud computing refers to applications delivered as services in the form of software, platform and infrastructure [8][9]. In Software as a Service (SaaS), the vendors host applications on the internet and provide them via a browser to store the user?s data online. Users thus don?t have to worry about developing, hosting, updating, or maintaining applications [1][8]. The popular examples are Google Docs  and Microsoft Office 365. In Platform as a Service (PaaS), the vendor will provide web-based application development platform such as operating system, the APIs, the programming language and management capabilities to users. The users can develop their applications with development platform provided by the vendor [1][8]. Google App Engine, Windows Azure and salesforce.com are some of the well-known PaaS vendors. In Infrastructure as a Service (IaaS) the required infrastructure such as processors, storage elements, load balancers and network are deployed in provider?s data centers. Here, the computing and storage capabilities are managed by the vendors [1][9]. Some of the IaaS providers are Amazon EC2, OpenStack and Google Compute Engine.

Instead of maintaining their own servers for hosting the web applications, the enterprises are migrating to cloud because of its cost effective nature. The deployment of web application is facilitated by different cloud deployment models. The enterprises/organizations have to choose any one of the deployment models based on their needs. The public cloud deployment models suits smaller organizations which cannot invest more on infrastructure. The organizations which have a capability of investing more on infrastructure, but are more concerned about security of data can go for private cloud. On the other hand, the community cloud favors the organizations which are looking for less investment with considerable amount of security. The community cloud is created and maintained by group of organizations having same goals.

Even though the deployment of web application is easier in cloud environment, the content management of such web application is a little bit difficult because it needs more technical proficiency. CMS overcomes this problem and allows even a non-technical user to create, edit, manage and publish the content. There are several types of content management systems namely Web Content Management System (WCMS), Enterprise Content Management System (ECMS), Transactional Content Management System (TCMS), Learning Content Management System (LCMS), etc. to satisfy different business needs [12].

In this paper, we have used OpenStack to provide required cloud infrastructure which is an open source cloud operating system [7]. Here we have used popular Web CMS called Drupal to develop web application [10] and the development platform is provided by LAMP stack. LAMP refers to Linux, Apache, MySQL and PHP.

DOI 10.1109/CLOUDCOM-ASIA.2013.98    DOI 10.1109/CLOUDCOM-ASIA.2013.98     The rest of this paper is organized as follows: Section II describes about how CMS can be used for developing SaaS, Section III gives a brief description about Drupal, Section IV elaborates on how Drupal can be deployed on cloud, Section V presents the experimental study and analysis, and Section VI provides conclusions and future work.



II. CMS FOR DEVELOPING SAAS Web content is difficult to manage as it includes simple  texts, multimedia contents like image, video, audio and so on. The process of creating, storing, modifying and retrieving of such content is called as content management.

A Content Management System (CMS) is a program that enables a variety of technical and non-technical users to create, edit, manage and publish content within a single organization or across multiple organizations [12]. Whereas, the SaaS is the one of the software delivery model, that helps the consumer to use the applications which is running on service providers cloud infrastructure. Here, the consumers need not control or manage the underlying infrastructure and platform [1]. Even though SaaS is better than the traditional software; the development of SaaS imposes many challenges for the developers and providers. Some of the challenges include multi-tenant support, security and privacy, customization and integration [3][4]. These challenges can be addressed by built-in features of CMS. This section describes about how the CMS can be used for developing SaaS by mapping CMS characteristics to SaaS characteristics.

A. Addressing the  SaaS Challenges with built-in CMS features  There are several features of CMS such as Multi-site support, security, Template driven responsive UI and integration [13]. This sub section describes how to address the challenges in developing SaaS by built-in CMS features as shown in table 1.

TABLE I.  SAAS CHALLENGES AND CMS FEATURES  SaaS Challenges CMS Features Multi-Tenancy Multi-site Support Security Isolating the users data Easy Customization Updating via web browser Better Access Responsive UI Centralized Management Admin Integration Integration with other services   1) Multi-tenancy through Multi-site support: Multi-  tenancy is an important characteristic of typical SaaS. In Multi-tenant architecture the service provider allows the users and applications to use same infrastructure and code base. This property of SaaS can be achieved through Multi- site support of CMS. The Multi-site support of CMS allows the different users to run their website on same code base which is hosted by site administrator. The site administrator can update the code in central code base which will reflect  in all the users applications. The CMS that supports multi- site architecture will supports multi-tenancy architecture of SaaS also.

2) Security:  The SaaS providers secure the users data by isolating the data from other users. This can be achieved by storing the data in different databases or different tables.

The CMS also allows the developers to store the users data in different databases and different tables. Additionally, CMS allows the site administrator to define different roles like content writer, content editor and content publisher for managing the content in efficient way. Thus the contents of website will always be secured and easier to manage.

3) Easy Customization through web browser: In SaaS each user is allowed to customize their application as per their needs. The updation or changes from service provider will not affect the custom settings of users. In the same way the CMS allows the users to customize the application through simple web form based user interface.The customization made by the CMS user will not affect the other shared users site. Even if there is any update in the code base by site administrator, the customization of the each user will be retained.

4) Better Access through Responsive UI: The SaaS provides access to data through internet from any networked device. This property can be achieved by CMS through the responsive UI. The CMS provides responsive and web form based user interface to update the content where in which the content can be updated easily by administrator through web browser. The content updated by administrator can be immediately viewed by the end user through any device.

The site administrator will design separate templates for different end user devices which is called as responsive templates. Here the site administrator need not use different content for different devices. The template engine will use the same content for different devices accordingly when user accesses the page from different devices.

5) Centralized Management through Admin: The service provider is responsible for updating the application in the case of  SaaS. Whereas the customers can only use application. Web CMS provides different levels of priviledge for site administrator and viewers of the content.

For example, the site administrator has the privilege to create and modify the content, but the normal users can only view and use the content. Additionally it allows only the administrator to update the code base and to add additional modules. Here, only the admininistrator has full control over the application as there in the SaaS applications.

6) Integration with legacy applications and web services: The SaaS providers should allow the application to integrate with existing enterprise applications or web services. Most of the CMSs have this feature which enables the user to integrate their services with other legacy applications and web services.

B. Mapping SaaS Services to CMS Variants Initially CMS was intended for simple dynamic web  based applications but now it is used to develop complex applications like E-Commerce applications. There are several kinds of business needs, each one of them is different from others like E-commerce is different from E- learning. Thus simple CMS alone cannot satisfy all these kinds of business needs. So there are several other CMS variants proposed dedicatedly to satisfy different business requirements. The different SaaS services are E-mail and office productivity, sales, financials, Billing, social networks, ERP, CRM and document management [2]. Most of the SaaS services match with the CMS variants as shown in table 2.

TABLE II.  CMS VARIANTS AND SAAS SERVICES  SaaS Services CMS Variant Examples  Content Management WCMS Drupal Joomla Wordpress  Enterprise Applications ECMS  IBM Enterprise CMS Microsoft SharePoint ECM  Document Management DCMS  LogicalDOC IBM Connections  Sales , Financials, Billing TCMS  Open Market Broadvision  Publication Applications PCMS  eZ Publish OpenPublish  Collaborative learning LCMS Moodle schooloop   1) Content Management SaaS and Web Content  Management Systems (WCMS): The simple corporate web sites or personal websites usually look for the content management SaaS services. This simple content management Saas services can be developed by WCMS.

WCMS is used to create personal and corporate websites, multi user blogs, social networking sites and so on [12].

Drupal, Joomla, DotNetNuke and wordpress are the popular examples of WCMS.

2) Enterprise SaaS and Enterprise Content Management Systems (ECMS): The enterprise applications are intended for E-mail, office productivity and ERP. The ECMS is also mainly intended for enterprise level applications which offer technologies involved in the management, storage, safeguarding and sharing of content and supporting documents [12]. IBM Enterprise CMS and Microsoft SharePoint ECM are the popular examples of ECMS.

3) Document Management SaaS and Document Content Management Systems (DCMS): The Document management SaaS can be developed using DCMS. The DCMS is mainly  intended for different kinds of document related operations such as collection, sharing, and retrieval. Additionally, it supports document search based on metadata or content of the document [15]. LogicalDOC, IBM Connections and Microsoft SharePoint Services are the popular examples of DCMS.

4) Sales, Financial SaaS and Transactional Content Management System (TCMS): Most of the small super markets are looking for some SaaS to automate their sales, billing and finance transaction process. These kinds of needs can be fulfilled by TCMS. TCMS are mostly used for online shopping and electronic customer relationship management.

It is also used in commercial stores to facilitate the transaction process [12]. Vignette, Broadvision and Open Market are the popular examples of TCMS.

5) Publication SaaS and Publications Content Management System (PCMS): The journal and publishers are using the SaaS which makes their publication work easier. The PCMS is also used for same purpose and it can be used to develop publication SaaS. The PCMS is developed for online publishing of books, articles, magazines, news etc. PCMS is widely used by individuals/group of people, institution/organizations which use web portals as a publishing platform [12]. The popular PCMS are eZ Publish, OpenPublish and Eroom.

6) Clollaborative Learning SaaS and Learning Content Management Systems (LCMS): The Smaller institutions which do not have sufficient infrastructure can use the education SaaS which enables the collaborative learning between the students and teachers. The LCMS supports the construction of pages with content and educational processes such as online courses, online assessment, learning tools etc [12]. It is mostly used in educational institutions to facilitate learning. So these LCMS can be used to develop the educational SaaS applications. Moodle and schooloop are widely used LCMSs.



III. DRUPAL AN OPEN SOURCE WCMS Drupal is an open source web content management  system and web application development framework which is licensed under GNU General Public License (GPL).

Drupal is developed and maintained by a group of developers and it allows group of users to collaboratively create, edit, manage and publish content of a website. It is widely used by individuals and organizations because it provides a powerful, scalable, low cost, high value solution to manage their websites [14]. Drupal can be easily customized to create internet portal; a personal, departmental, or corporate web site; an e-commerce site; a resource directory; an online newspaper; a social networking site; an image gallery; an intranet; and virtually any other type of customized web application [5]. In addition to built-in functionalities there are several other add-ons which provide features like blogs, collaborative        Figure 1. Simplified overview of a Drupal site [adapted from (17)]  authoring environments, forums, peer-to-peer networking, newsletters, podcasting, picture galleries, file uploads and downloads, etc. [11][14]. This section describes about the basic components, technology stack and benefits of Drupal.

A. Components of Drupal The basic components used to provide web development  framework by Drupal is shown in fig. 1.

1) Drupal Core: ?Drupal Core? is developed and released by Drupal developers? community. It consist of ?core modules? and ?core themes?. Core modules provide basic content management facility and core themes are responsible for look and feel of the website.

2) Contrib/Custom Modules: Drupal?s basic functionalities can be enhanced using contrib/custom modules. The Drupal?s developer community has already contributed several ?contrib modules? and users can freely download and use the modules. In addition to this, Drupal also supports the ?custom modules? developed by any individual without modifying Drupal core.

3) Pre-built Contrib / Pre-built Commercial / Custom Themes: The look and feel of a Drupal website depends on ?core theme?. The appearance of a Drupal website can be altered by pre-built contrib themes, pre-built commercial themes and Custom themes. The pre-built contrib themes are contributed by Drupal developers which are freely available. The Pre-built commercial themes are provided by commercial theme vendors which are commercially available and a unique custom theme can be developed by any individual.

4) Configuration & Site Building: As Drupal core provides only basic functionalities, the successful  development of customized web application depends on the selection of appropriate modules and configuration of components. Drupal provides easy to use site building components like blocks, nodes, views and more for successful web development.

5) Text/Multimedia Content: The Drupal website supports text content which can be easily searched by built- in search engine provided by Drupal. Drupal also allows developers/users to upload files such as images, PDFs and multimedia contents.

B. Drupal Technology Stack Drupal can run on any platform that supports PHP  programming language; a supported web server; and a supported database. One of the famous development environment which supports Drupal is LAMP (Linux, Apache, MySQL and PHP). But Drupal will run on any combination of operating system, web server, database and programming language as shown in fig. 2.

1) Operating System: Drupal will run on the operating system which supports PHP. The examples include UNIX, Linux, BSD, OS X and Microsoft Windows. Linux is one of the mostly used operating system for running the Drupal site.

2) Web Server: Drupal supports variety of web servers for serving the web page requests. The examples include Apache, Microsoft IIS, nginx and lighttpd. Even though Drupal supports variety of web servers, Apache is the most preferred web server for deploying Drupal site.

3) Database Server: Drupal can use any kind of relational database to store contents, templates, graphics and site configuration settings. The examples include MySQL, PostgreSQL and SQLite. Sometimes the large media files like audio and video files are stored in file systems.

Figure 2. Drupal Technology Stack [adapted from (5)]        Figure 3. Drupal Architecture on Cloud Environment  4) Programming Language: Drupal is written in open source web scripting language PHP. PHP allows the Drupal developers to create dynamic content and enables interaction with databases. The Drupal will run on any web server which supports PHP.

C. Benefits of Drupal Drupal has all the features of WCMS as mentioned in  section II. The following additional features make Drupal a better choice for developing web applications.

1) Modular and extensible: Drupal provides lightweight and powerful core that can be further extended by custom modules and themes as per the users? needs.

2) Quality Coding: Drupal provides high quality coding platform which results in efficient application.

3) Standards Based: Drupal supports most of the emerging standards of web applications such as XHTML and CSS.

4) Low Resource Demands: Drupal provides high performance and interoperability by using fewer resources.

It also ensures low-profile coding and minimal server-side software requirements.

5) Open Source: Drupal is an open source WCMS which is licensed under GPL. According to GPL license anyone can use, modify and re-distribute Drupal core.

Moreover Drupal itself is developed on an open source project PHP programming language.

6) Ease of Use: Drupal provides high standard of usability for developers, administrators, and users as per their needs.

7) Collaboration: Drupal allows technical as well as non-technical users to collaboratively manage the content of a web application.



IV. DRUPAL ON CLOUD ENVIRONMENT Deploying Drupal site on a conventional server is straight  forward.  When we think of deploying Drupal on cloud we need to consider the cloud providers and their support to Drupal. In this section we have listed some of the Drupal supported cloud providers. Fig. 3 illustrates the architecture of Drupal on cloud environment.

A. Drupal Architecture on Cloud Environment 1) Infrastructure:  The required infrastructure can be  accessed as a service from any public/private cloud providers in the form of computing, networking and storage services. The public cloud providers typically cost the consumers as per their use. If we have our own private cloud, the required infrastructures can be accessed from our own Data centers. Amazon EC2, Microsoft Azure, Google Compute Engine, Rackspace cloudServers and OpenStack are the popular IaaS providers who supports Drupal.

2) Development Platform: There are many PaaS providers like Microsoft Windows Azure who supports Drupal [16]. We can use their services, but it is  recommended to use our own development platform for deploying Drupal for intranet applications.

The development environment can be created by installing any of the supported operating system images (E.g. Linux), a supported web server (E.g. Apache), a supported database server (E.g. MySQL) and programming language PHP as shown in fig. 3 on the cloud infrastructure.

3) Cloud Based Application: Finally Drupal can be customized to serve different business needs by installing custom modules and themes on top of the Drupal core.

B. Providing Multi-tenancy with Drupal multi-site configuration Multiple websites can run on a single instance of Drupal  as it is a multi-site content management system [18]. The multi-site support of Drupal gives the following advantages to the developers: (1) Sharing a single code base for multiple web sites, (2) Leveraging shared hosting, (3) Running secure (HTTPS) and standard (HTTP) sites on the same server, (4) Building an efficient development environment, and (5) Easing server administration. Multi- tenancy is an important requirement of any cloud based SaaS applications. This sub section describes the different ways of providing multi-tenancy with Drupal multi-site configuration.

1) Multi-Tenancy with Shared Database: The Web application developed by Drupal can be delivered to different users with shared database. In this type of model, all the users?/tenants? data will be stored in the same database with different table extensions. The general idea of multi-tenancy with shared database is described in fig. 4(a).

2) Multi-Tenancy with Different Databases: Drupal also supports multi-tenancy with different databases for different tenants. The database read/write request from the tenants is redirected to the particular database. The fig. 4(b) depicts the idea of providing multi-tenancy with different databases.



V. EXPERIMENTAL STUDY AND ANALYSIS For experimental purpose we have developed and  deployed Student Information Management System (SIMS) on a private web server and also on private cloud server. The SIMS facilitates the process of managing the student information online. Here the popular Web CMS Drupal is used to develop the SIMS application. Here, LAMP stack is used as a development environment. Drupal 7.21 is installed on top of the LAMP stack and the SIMS is developed by customizing the Drupal 7.21 core. The fig. 5(a) shows the architecture of SIMS on private web server and fig. 5(b) shows the architecture of SIMS on private cloud server used in our experiment. The performance of SIMS is analyzed based on number of database queries and page execution time. SIMS performance is analyzed on cloud server to check whether it is giving same performance as in normal web server using a Drupal module Devel. This section explains about the experimental study and performance analysis of SIMS on normal web server and cloud server.

A. SIMS on Private Web Server The SIMS is deployed on private network with one  server and many client machines. The specification of the server is i7 processor, 8192 MB of RAM and 1 TB of hard disk with Ubuntu server 12.04 installed. The specification of clients is i5 processor, 4096 MB of RAM and 500 GB of hard disk with Ubuntu Desktop 12.04 installed.

1) LAMP Stack: The LAMP refers to Linux, Apache, MySQL and PHP. The development environment for SIMS is created by installing Ubuntu server 12.04 LTS on the server machine. The IP address of the server is 172.16.0.2 as shown in fig. 5(a). Then web server Apache 2.2.11, Database server MySQL 5.0.51a and programming language PHP 5.2.9 is installed on the server.

2) Drupal 7.21: The Drupal 7.21 core is downloaded and installed on the server machine. The Drupal site is connected with MySQL database and apache web server.

Now, the installed Drupal site can be accessed from any of the client machines by the address http://172.16.0.2/sims/index.php.

3) Student Information Management System (SIMS): Finally, the SIMS can be developed by customizing the Drupal core. The Drupal core can be customized in two ways. One is for providing functionalities like insert/delete/update student details by installing contrib modules like webform. The second way is by customizing the appearance by installing themes.

B. SIMS on Private Cloud The same SIMS that is deployed on private web server is  deployed on private cloud server with multi-tenant features added to it. The specification of the server and the client machines are same as the private web server mentioned in sub section A.

1) OpenStack Essex: OpenStack Essex is installed on Ubuntu server 12.04 which is acting as a cloud server in the private network connected with client machines. The IP address of the server used in our experiment is 172.16.0.1.

The OpenStack Compute, Image, Object Store, Identity and Dashboard is installed and configured to provide massively scalable and redundant private cloud infrastructure [7].

OpenStack Compute (Nova) provides multiple instances of virtual machines, Image (Glance) provides image of any operating system, Object Storage (Swift) allows to store and retrieve large data, Identity (Keystone) provides authentication and authorization to all OpenStack services, Dashboard (Horizon) provides a web based user interface to use all OpenStack services [6]. In our example the OpenStack dashboard can be accessed by the address http://172.16.0.1 from any client machines web browser.

2) LAMP Stack: The SIMS development environment is created by launching two instances of Ubuntu server 12.04 LTS on OpenStack cloud infrastructure. The first instance will act as web server by installing Apache 2.2.11 and PHP 5.2.9 and its address is 172.16.1.1 as shown in fig. 5(b). The other instance will act as a database server by installing MySQL 5.0.51a and its address is 172.16.1.2. These two instances communicate with each other to serve web and database requests from the clients.

(a)                 (b)   Figure 4. Multi-tenancy with (a) shared database (b) different databases     3) Drupal 7.21: The Drupal 7.21 core is installed on the instance which is acting as a web server with Apache and PHP installed. In our example it is installed on an instance which is having address 172.16.1.1. The back end MySQL database is created on the database server (172.16.1.2).

4) Multi- Tenant Student Information management System: Now, The SIMS is providing student information management functionality to different clients by using the same instances of SIMS which is deployed on cloud server 172.16.1.1. All the database requests are sent to the database server and all the web server requests are sent to the web server to increase the efficiency of the SIMS application. In our example the SIMS can be accessed by the address http://172.16.1.1/tenant_name/index.php.

C. Performance Analysis The student information management system is  deployed on the normal web server and cloud server as mentioned in previous sub sections A and B. The performance of SIMS running on different environment is analyzed by Drupal module devel on basis of number of database queries, query execution time and page execution time. The pages considered for analysis are home page, page with simple text (about us), page with web form (inserting student details) and pages with multimedia contents (gallery). The performance analysis results are shown in table 3 and table 4.

1) Number of Database Queries: The number of database queries and query execution time of home page, about us page, gallery page and insertion of student details page is calculated for normal server and cloud server. The home page and about us page contains simple texts; the gallery page contains multimedia contents; and insertion of  student details page contains web forms. The results are tabulated in the following table.

TABLE III.  PERFORMANCE ANALYSIS ON NUMBER OF DATABASE QUERIES  Page request type  Total Number of Queries  Execution time (ms)  Normal Server  Cloud server  Normal server  Cloud server  Home page  54 53 21.72 49.09 About us page 55 51 35.21 57.29  Inserting student details 60 47 39.92 63.20 Gallery page 74 73 43.64 65.93   2) Page Execution  Time: The next performance  analysis parameter is page execution time of home page, about us page, gallery page and insertion of student details page. The page execution time of different pages is analyzed and results are tabulated as follows.

TABLE IV.  PERFORMANCE ANALYSIS ON PAGE EXECUTION TIME  Page request type Page Execution time (ms) Normal server Cloud server Home page 204.88 235.77  About us page 282.76 326.08 Insertion of student details  297.79 340.49  Gallery page 333.67 363.20   The experimental results show that the performance of  SIMS deployed on cloud server is not as expected. This is because we are using a small and single node cloud environment for our experiment. If this application is deployed on huge data center it will give expected better performance.

(a)            (b)   Figure 5. SIMS architecture on (a) Private web server (b) Private cloud server     D. Fullfilling the requirements of Cloud Application The following basic requirements of cloud based SaaS  application taken for analyzing the SIMS application: (1) Multi-tenancy, (2) Security and compliance, and (3) Continuous updates. This sub section describes whether the SIMS application is able to fulfill the basic requirements of SaaS application or not.

1) Multi-tenancy: The SIMS deployed on the private cloud server is multi-tenant web application as Drupal supports multiple sites running on single code base.

2) Security and compliance: Drupal provides Security by Role Based Access Control and IP address blocking.

Using this functionality the site admin can define different roles and corresponding permissions to protect the content of the website. The Drupal core always notifies the site administrator about the malicious activity. The admin can block that particular IP address to protect the web site from some malicious users.

3) Continuous updates: The instances of different users of the SIMS application use the same code base. Hence any updation in the the source code will affect all the instances of the SIMS application.



VI. CONCLUSIONS AND FUTURE WORK We have used a new technique to develop cloud software  by combining the advantages of cloud computing and content management systems. The cloud software users are expecting easy to use application from the providers. When the cloud software provider wants to develop a cloud based software, the developer has to make sure that the software is easy to use for the end users. The content management systems facilitate the rapid development and usability of cloud based applications. The software developed by content management system can be delivered as a service to many users on pay per use basis. On the other hand, if any enterprise/community of organizations is not interested to host their data in others place; they can use this technique to develop cloud based intranet applications which is hosted on private/community cloud environment. In our ongoing work, we are going to develop new customized content management system for developing cloud based software with dynamic billing capability.  The already available content management systems don?t have a built in usage- based billing and subscription plan features. We are going to consider automated billing of content management systems based on usage/subscription.

