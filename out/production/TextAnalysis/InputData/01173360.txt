

Mining Weighted Browsing Patterns with Linguistic Minimum Supports  TzunpPei Hong', Ming-Jer Chiang' and Shyue-Liang Wang' 'Deparment of Electrical Engineering, National University of Kaohsiung  *institute of Infoonnation Engineering, IShou University Kaohsiung, Taiwan, R.O.C.

tphong@nuk.edu. tw, ndmc893009@yahoo.com.tw, slwang@isu. edu. tw  Absrrrrer-All the wtb pages are usually assumed to have the same importance in web mining. Different web pages in a web site may, however, have different importance to usera in red applications.

Besides, the mining parameten in most conventional data-mining algorithmr are numerical. This paper tbun attempts to propose a weighted webmining technique to discover linguistic browsing patterns from log data in web sewers. Web pages are first evaluated by managers as linguistic terms to reflect their importance, which are then transformed as fuzzy rets of weights. Linguistic minimum supports are assigned by users, showing a more natural way of human reasoning. Fuvy operations including fuzzy ranking are then used to find linguistic weighted large sequences, An example is also given to clearly illustrate the proposed approach.

Keywords: Browsing pattern, fuzzy set, web mining, weght.



I. INTRODUCTION Recently, world-wide-web applications have grown very rapidly and have made a significant impact on computer systems. Among them, web browsing for useful information may be most commonly seen. Due to its tremendous amounts of use, efficient and effective web retrieval has thus become a very important research topic in this field. Techniques ofweb mining have thus been requested and developed to achieve this purpose. Cooley et. al. divided web mining into two classes: webcontent mining and webusage mining [8].

Web-content mining focuses on information discovery from sources across the world-wide-web. On the other hand, webusage mining emphasizes on the automatic discovery of user access patterns fiom web servers [9]. In the past, smra l webmining approaches for finding sequential patterns and interesting user information from the world-wide-web were proposed [5-81.

The fuzzy set theory has been used more and more frequently in intelligent systems because of its simplicity and similarity to human reasoning. The theory has been applied in fields such as manufacturing, engineering, diagnosis, and economics, among others. Several filay learning algorithms for inducing rules from given sets of data have been designed and used to good effect with specific domains [2,4, 10- 151.

In the past, all the web pages were usually assumed to have the same importance in web minimg. Different web pages in a web site may, however, have different importance to users in real applications. For example, a web page with merchandise items on it may be more important than that with general introduction. Also, a web page with expensive merchandise items may be more important than that with cheap ones.

Different importance for web pages should then be considered in web mining. Besides, the minimum support and  minimum confidence values in most conventional data-mining algorithms were set numerical. In [14], we proposed a weighted mining algorithm for association rules using linguistic minimum support and +nirmtn confidence.

In this paper, we further extend it to mining weighted sequential browsing patterns from log data on web servers.

The linguistic minimum support values are given, which are more natural and understandable for human beings. The browsing sequences of users on web pages are used to analyze the overall retrieval behaviors of a web site. Web pages may have different importance, which is evaluated by managers or experts as linguistic terms. The proposed approach transforms linguistic importance of web pages and minimum supports into fuzzy sets, then filters out weighted large browsing patterns with linguistic supports using fuzzy operations.

11. REVIEW OF RELATED MININGAPPROACHES Agrawal and Srikant proposed a mining algorithm to discover sequential ptterns from a set of transactions [I]. Five phases are included in their approach. In the first phase, the transactions are sorted first by customer ID as the major key and then by transaction time as the minor key. This phase thus convexts the original transactions into customer sequences. In the second phase, the set of all large itemsets are found fiom the customer sequences by comparing their counts with a predefmed support parameter a. This phase is similar to the process of mining association rules. Note that when an itemset occus more than one time in a customer sequence, it is counted once for this customer sequence. In the third phase, each large itemset is mapped to a contiguous integer and the original customer sequences are transformed into the mapped integer sequences. In the hurth phase, the set of transformed integer sequences are used to find large sequences among them In the fifth phase, the maximaly large sequences are then derived and output to users.

Besides, Cai er al. proposed weighted mining to reflect different importance to different items (31. Each item was attached a numerical weight given by users. Weighted supports and weighted confidences were then defined to determine interesting association rules. Yue er al. then extended their concepts to filzzy item vectors [ 181.

111. REVIEW OF RELATED FUZZY SET CONCEPTS Fuzzy set theory was first proposed by Zadeh and Goguen in 1965 @9][20]. Fuzy set theory is primarily concerned with quantifying and reasoning using natural language n which words can have ambiguous meanings. This can be thought of as an extension of traditional crisp sets, in which each element must either be in or not in a set.

0 2002 IEEE SMC TPlF7  mailto:tphong@nuk.edu   Triangular membership functions are commonly used and can be denoted by A=@, b, c), where C . The abscissa b represents the variable value with the maximal grade of membcrship value, i.e. j@)=l; a and c are the lower and upper bounds of the available area. They are used to reflect the fuzziness of the data.

5 b  Besides, h z y  ranking is usually used to determine the order of fuzzy sets and is thus quite important to actual applications.

Several filzzy ranking methods have been proposed in the literatwe. The ranking method using gravities is introduced here. Note that other ranking methods can also be used in our f i l jm algorithm.

The abscissa of the gravity of a triangular membership function (U. b, c) is (u+b+c)/3. Let A and B be two triangular fuzzy sets. A and B can then be represented as follows: -  A = (UA, bA, CA), B = (UB, bB, CBI.

Let g(A) = @A + bA + C A ) / ~ ,  and g(B) = (aB bB 4- cg)D.

Using the gravity ranking method, we say A > E ifg(A) > m.



IV. NOTATION The notation used in this paper is defined as follows.

n: the total number of log records; n ?: the total number of browsing sequences; m: the total number of web pages; A,: the i-th web page, 1 Si S m; k: the total number of managers; w : the transformed fuzzy weight for importance of Page Ai , w,aw : the filav average weight for importance of Page A, ; w, : the fuzzy weight for importance of sequential sequence connt,: the count of Page A ,  ; a: the predefined linguistic minimum support value; 4 thej-th membership function of importance; ZaW:  the filzzy average weight of all possible linguistic  wsup,: the fuzzy weighted support of Page Ah minsup: the tmnsformed fuzzy set from the linguistic  minimum support value a; wminsup: the fuzzy weighted set of minimum supports; C,: the set of candidate sequences with r web pages; ~5,: the set of large sequences with r web pages.

?? evaluated by thej-th manager;  s;  terms of importance;  v. THE PROPOSED ALGORITHM FOR LINGUISTIC WEIGHTED WEB MINING  Log data in a web site are used to analyze the browsing pattems on that site. Many fields exist in a log schema.

h o n g  them, the fields date, time, client-ip andfife nume are used in the mining process. Only the log data with .asp, htm, . h a ,  .jva and .cgi are considered web pages and used to analyze the mining behavior. The other files such as .jpg and .gif m thought of as inclusion in the pages and are omitted. The number of files to be analyzed is thus reduced. The log data to be analyzed are sorted first in the  order of client-ip and then in the order of date and time. The web pages browsed by a client can thus be easily found. The importance of web pages are considered and represented as linguistic terms. Linguistic minimum support value is assigned in the mining process.

The proposed webmining algorithm then uses the set of membership functions for importance to transform managers? linguistic evaluations of the importance of web pages into fuzzy weights. The fuzzy weights of web pages from different mangers are then averaged. The algorithm then calculates the weighted counts of web pages from browsing sequences according to the average fuzzy weights of web pages. The given linguistic minimum support value is also transformed into a fizzy weighted set. All weighted large I-sequences can thus be found by ranking the fuzzy weighted support of each web page with filzzy weighted minimum support. After that, candidate 3sequences are formed from weighted large 1-sequences and the same procedure is used to find all weighted large 2-sequences. This procedure is repeated until all weighted large sequences have been found.

Details of the proposed mining algorithm are described below.

The weighted webmining algorithm: INPUT: A set of n web-log records, a set of m web pages with  their importance evaluated by k managers, two sets of membership functions respectively for importance and minimum support, and a pre-defmed linguistic minimum support value a.

OUTPUT: A set of weighted linguistic browsing patterns.

STEP 1: Select the records with file names including .asp,  htm, .html, Jva, .cgi and closing connection from the log data; keep only the fields date, time, client-ip and file-nume.

STEP 2: Transform the client-ips into contiguous integers (called encoded client ID) for convenience, according to their first browsing time. Note that the same client-ip with two closing connections is given two integers.

STEP 3: Sort the resulting log data first ty encoded client ID and then by date and time.

STEP 4: Form a browsing sequence for each client ID by sequentially listing the web pages.

STEP 5 :  Transform each linguistic term of importance for web page A ,  I S i  I m, which is evaluated by the j-th manager into a fuzzy set 4 ,  of weights, using the given membership funkions of the importance of web pages.

STEP 6: Calculate the filzzy average weight wicM of each web page Ai by f k y  addition as:  I k k p j  wy = -*  K , j .

STEP 7: Count the occurrences (counti) of each web page A,  appearing in the set of browsing sequences; f Ai appears more than one time in a browsing sequence, its count addition is still one; set the support (support,) of A, as counij / n  ?, where n ? is the m b e r of browsing sequences from STEP 4.

STEP 8: Calculate the filzzy weighted support wsup, of each web page Ai as:    counq x ~ ' " n'  wsup, =  A  B  W, xcount, n'  wsup, =  MANAGER1 MANAGER2 MANAoER3  1-1 ordinsrv ordinuy V u y l m p o r t r  lmponani Imponnnt  STEP 9: Transform the given linguistic minimum support value o into a fuzzy set minsup, using the given membership functions of minimum supports.

STEP 10: Calculate the fuzzy weighted set (wminsup)o f the given minimum support value as:  wminsup = minsup X (the gravity of I""),  where  C OrdiWY  D Unimporuat  m  with I /  being the j-th membership function of importance. I m  represents the fuzzv average weight of all possible linguistic tenns of importance.

STEP 11: Check whether the weighted support +supi) of each web page Ai is larger than or equal to the filzzy weighted minimum support (wminsup) by fuzzy ranking. Any fuzzy ranking approach can be applied here as long as it can generate a crisp rank.

If wsup, is equal to or greater than wminsup, put A, in the set of large 1-sequences LI.

STEP 12: Set r = 1, where r is used to represent the number of web pages kept in the current large sequences.

STEP 13: Generate the candidate set Cr+] from L, in a way similar to that in the aprioriafl algorithm [l].

Restated, the algorithm first joins L, and L,, under the condition that r-1 web pages in the two sequences are the same and with the same orders.

Different permutations represent different candidates. The algorithm then keeps in C,+/ the sequences which have all their subsequences of length r existing in &.

STEP 14: Do the following substeps for each newly formed (el)-sequence s with web browsing pattern  (a) Calculate the fizzy weight W, of sequence s (st + SI 3 ... +&,) m c*,: as:  Imponant imponant  Unimportant Very Unimponant  w, = w,? A w,Y A . . . A w ~ ~ , where W,? is the filzzy average weight of web page s, , calculated in STEP 6. If the minimm operation is used for the intersection, then:  r+l  i = I w, = Min wsy.

(b) Count the occurrences (count,) of sequence s appearing in the set of browsing sequences; f s appears more than one time in a browsing sequence, its count addition is still one; set the support (rupporrr,) of s as counh/ n', whm n ' is the number of browsing sequences.

(c) Calculate the weighted support wsup, of sequence s as:  (d) Check whether the weigh:c.d support wsup, of sequence s is greater t h z  c:r equal to the fuzzy weighted minimum support wminsup by fuzzy ranking. If wsup, is greater than or equal to wminsup, put s in the set of large (r+I)-sequences .

STEP 15: If&, is null, then do the next step; otherwise, set r = r  + 1 and repeat Steps 13-15.

STEP 16: For each large r-sequence s (r>l) with weighted support wsup,, find the linguistic minimum support region S, with wminsup, S wsup, wminsupi+l by fuzzy ranking, where:  wminsup, = rninsupi X (the gravity of I - ) ,  minsup, is the given membership function for S,.

Output sequence s with linguistic support value S,.

The linguistic sequential browsing patterns output after Step 16 can serve as meta-knowledge concerning the given log data.



VI. AN EXAMPLE In this section, iin example is given to illusnate the proposed webmining algorithm. This is a simple example to show how the proposed algorithm can be used to generate weighted linguistic browsing sequential patterns for clients' browsing behavior according to the log data on a web server. Assume the browsing sequences from a log data after Step 4 is shown in Table 1.

I I  Also assume the membership functions for importance of the web pages are given in Figure 1.

unimportant Important  veryunimportant very Impomt  ~~~~ 0 0 0.25 0.5 0.75 1 Weight  Figure 1 : The membership functions of hportance  The linguistic terms for the importance of the web pages given in Table 2 are transformed into fuzzy sets by the membership functions in Figure 1. The average weight of each w b  page is calculated by fuzzy addition. The average fkzy weights of all the web pages are shown in Table 3.

Table 3: The average fuzzy weights of all the web pages WEB PAGE AVERAGE FUZZY WEIGHT  0.333 0.583 0.833 0.583, 0.833, 1  0.417 0.667 0.917 0, 0.167, 0.417  E 0.5 0.75 1  The appearing number of each web page is counted from the browsing sequences in Table 1. If a web page occurs more than one time in a sequence, it is counted once for this sequence. The weighted support of each web page is calculated, with results shown in Table 4.

Table 4 The weighted supports of all the web pages WEB PAGE WEIGHTED SUPPORT  0.056, 0.097. 0.139 0.486 0.694 0.833 0.278, 0.444, 0.61 1  0.25,0.375,0.

The given linguistic minimum support value is transformed into a fuzzy set of minimum supports. Assume the membership functions for minimum supports are given in Figure 2.

Verypw Low Middle High VeryHigh  The gravity of P? is calculated as 0.5. The fuzzy weighted set of minimum supports for ?Middle? is then (025,0.5,0.75) x 0.5, which is (0.125, 025, 0.375). The weighted support of each web page is then compared with the filzzy weighted minimum support by fuzzy ranking. hy fuzzy ranking approach can be applied here as long as it can generate a crisp rank. Assume the gravity ranking approach is adopted in this example. B, C and E are large weighted I-sequences.

C, is then first generated from L, as follows: (B. B). (B, C), (B. E),  (C, 4, (C, 0, (C, E ) ,  (E. 4, (E. C) and (E. E).

Among them, (B, C), (B, E )  and (E, B) are found to be large weighted 2-sequences in Step 14. There are no large 3-sequences in the example.

The linguistic support value is found for each large r-sequence s (r > 1). Take the sequential browsing pttern (E, B) as an example. Its weighted support is (0.167, 0.25, 0.333).

Since the membership function for linguistic minimum support region ?Middle? is (0.25, 0.5, 0.75) and for ?High? is (0.5, 0.75, 1). The weighted fuzzy set for these two regions are (0.125, 0.25, 0.375) and (0.25, 0.375, 0.5). Since (0.125, 0.25, 0.375) I(0.167, 0.25, 0.333) < (0.25, 0.375, 0.5) by fizzy ranking, the linguistic support value for sequence (E, B) is then ?Middle?. The linguistic supports of the other two large 2-sequences can be similarly derived.



VII. CONCLUSION In this paper, we have proposed a new weighted webmining algorithm, which can process webserver logs to discover useful sequential browsing patterns with linguistic supports.

The web pages are evaluated by managers as linguistic terms, which are then transformed and averaged as fuzzy sets of weights. Fuzy operations including filzzy ranking are used to find weighted sequential browsing patterns. Compared to previous mining approaches, the proposed one has linguistic inputs and outputs, which are more natural and understandable for human beings.

Although the proposed method works well in weighted web mining from log data, and can effectively manage linguistic minimum supports, it is just a beginning. There is still much work to be done in this field. Our method assumes that the membership functions are known in advance. In 112.13, 151, we proposed some fizzy learning methods to automatically derive the membership functions. In the future, we will attempt to dynamically adjust the membership hct ions in the proposed webmining algorithm to avoid the bottleneck of membership function acquisition.

0 0.25 0.5 0.75 1 M i n i  Figure 2: The membership functiom of minimum supports  Also assume the given linguistic minimum support value is ?Middle?. It is then traxuformcd into a fuzzy set of minimum supports, (0.25, 0.5, 0.75), according to the given membership functions in F i p  2.

