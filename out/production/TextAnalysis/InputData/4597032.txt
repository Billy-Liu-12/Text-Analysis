A new approach for detecting anonymity of patterns

Abstract  Information sharing becomes more frequently and eas- ily than before. However, it also brings serious threats to- wards individual?s privacy. It is no doubt that sharing per- sonal data can cause privacy breaches. Moreover, shar- ing the knowledge discovered by data mining may also pose threats to personal privacy. In this paper, we consider the anonymity of patterns derived from the result of frequent itemset mining. A new projection-based approach for de- tecting anonymity of patterns is presented. We prove that the approach can detect all the maximal inference channels for non-k-anonymous patterns. The experimental results show that our approach is more efficient than previous work es- pecially when the number of closed frequent itemsets in the mining result is close to or larger than the number of trans- actions in a database.

1 Introduction  Data mining can help to discover useful knowledge from large amount of data. In many applications, we need to share the discovered knowledge by data mining with oth- ers. Generally, people believe that the output of data mining represents a statistical result over a large population, and it will not violate personal privacy.

However, the recent research result shows that the re- sult of data mining may still pose threats to personal pri- vacy, because an attacker can derive from the result of data mining some knowledge with respect to a very small group of individuals [2]. Taking frequent itemset mining [1, 8] as an example. Given a transaction database D, where each transaction in D corresponds to a person, and items in the transactions corresponds to the person?s characteris- tics (e.g., the medical examination results). Suppose that after performing frequent itemset mining on D, two fre- quent itemsets S1 = ab and S2 = abc are discovered, where supD(ab) = 51 and supD(abc) = 50. Then, an at-  tacker can easily derive by inclusion-exclusion principle [9] that the support of pattern a ? b ? ?c is 1. This means that there is exactly one person having characteristics both a and b, but not c. By linking the pattern with data from other sources, the attacker may identify a specific individual with such characteristics accurately. Therefore, sharing the above result of frequent itemset mining will cause threats to anonymity. For tackling such threats, Atzori etc. [2, 3] shifted the concept of k-anonymity [12, 13] from data to the result of data mining, and proposed the concept of k- anonymous pattern. That is, the result of data mining is k-anonymous if no pattern derived from the mining result can be related to a group with cardinality less than k.

In this paper, we extend the work in [2, 3], and address the problem of detecting anonymity of patterns. The sce- nario that we consider is under frequent itemset mining.

Given a minimum support threshold ?, the result of frequent itemset mining is the collection of all the itemsets whose supports are larger than ?. Frequent itemset mining are very useful in many areas, e.g., association rule discovery, fea- ture extraction, classification, and clustering [7]. Given the result of frequent itemset mining, and an anonymity thresh- old k(k ? N), the problem of detecting anonymity of pat- terns is to discover the collection of all the maximal infer- ence channels for non-k-anonymous patterns. We have pre- sented a novel projection-based approach, and shown that it can discover all the maximal inference channels for non-k- anonymous patterns. The experimental results have shown that our approach is more efficient than previous work es- pecially when the number of closed frequent itemsets in the mining result is close to or larger than the number of trans- actions in a database.

The rest of this paper is organized as follows. In the next section, we review the related work in literature. In Section 3, we brief the related notations and concepts, and define our problem of detecting anonymity of pattern before sharing the result of frequent itemset mining. In Section 4, we present a projection-based approach for detecting max- imal inference channels, and show that our approach can   DOI 10.1109/WAIM.2008.81    DOI 10.1109/WAIM.2008.81     exactly discover all the maximal inference channels. We evaluate the performance of our approach in Section 5. Fi- nally, we conclude our work in Section 6.

2 Related work  The concept of k-anonymity was first proposed in [12, 13], which aimed to eliminate the threats to individual?s anonymity arising in data sharing. Because of the exis- tence of some quasi-identifiers, the original database has to be transformed before sharing such that there are at least k tuples with a same quasi-identifier value. Many efforts have been focused on this direction [5, 6, 10, 17]. The difference between their work and ours is that what we consider are the threats to anonymity arising in knowledge sharing, that is, sharing the result of data mining. Although the result will not pose threats to individual?s anonymity by mining on a k-anonymized database, such result may not be interesting due to the information loss caused by k-anonymization [3].

Atzori etc. [2, 3] shifted the concept of k-anonymity from data to the result of data mining, and proposed the concept of k-anonymous pattern. Especially, they consid- ered that given the result of frequent itemset mining for sharing, and an anonymity threshold k(k ? N), if it can be inferred from the mining result that there exists a pattern p, and the support of p is less than k, then sharing the min- ing result may pose threats to individual?s anonymity. We extend their work by presenting a new projection-based ap- proach for detecting all the maximal inference channels for non-k-anonymous patterns.

There are also other work to address privacy preserva- tion when sharing the result of data mining [11, 15, 16].

They assumed that some of the discovered itemsets or pat- terns themselves are known to be private in advance, then transformed the mining result such that those private knowl- edge is hidden before sharing. The scenario we consid- ered is completely different from their studies. We consider that sharing the result of frequent itemset mining may pose threats to anonymity, which may not be known without de- tection in advance.

3 Problem statement  3.1 Basic concepts and notations  For facilitating our discussion, we first introduce some basic concepts and notations. Let I = {x1, x2, ? ? ? , xn} be a set of literals, called items. A transaction T is a subset of I, i.e., T ? 2I , and a transaction database D is a set of transactions.

An itemset S is a set of items from I, i.e., S ? I. If there are l items in S, we say that the length of S is l, denoted  by |S| = l. For brevity, sometimes we write an itemset S = {xj , xj+1, . . . , xk} in the form of S = xjxj+1 . . . xk.

Particularly, we use the symbol {} to represent an empty itemset, whose length is 0. Notice that the empty itemset is a subset of any itemset.

Definition 1. A transaction T contains itemset S iff S ? T .

In a transaction database D, the support (or support count, sometimes called in literature) of itemset S is the number of transactions in D that contain S, denoted by supD(S).

Definition 2. Given transaction database D and minimum support threshold ?(? ? N), we say that S is a ?-frequent itemset of D if supD(S) ? ? in D. Particularly, if |S| = 1, we also say that S is a ?-frequent item.

Tid T 1 a b c d 2 b c e f 3 a b c 4 c d e f 5 b e f 6 a c d 7 b c d f 8 a b c d e f 9 b c d e f 10 a b c d e  Figure 1. An example of transaction database  Length Frequent Itemsets 0 ({}, 10) 1 (a, 5), (b, 8), (c, 9), (d, 7), (e, 6), (f, 6) 2 (ad, 4), (ab, 4), (ac, 5), (ef, 5), (df, 4),  (bf, 5), (cf, 5), (de, 4), (be, 5), (ce, 5), (bd, 5), (cd, 7), (bc, 7)  3 (abc, 4), (acd, 4), (bef, 4), (cef, 4), (cdf, 4), (bcf, 4), (cde, 4), (bce, 4), (bcd, 5)  Figure 2. An example of the result of frequent itemset mining (? = 4)  For brevity, we sometimes call ?-frequent itemset fre- quent itemset, and ?-frequent item frequent item if the con- text is clear. Given a transaction database D, and minimum support threshold ?, the task of frequent itemset mining is to find the collection of all ?-frequent itemsets with their sup- ports in D. There are many typical approaches for frequent itemset mining, e.g., Apriori [1], FP-growth [8], etc. We denote the result of frequent itemset mining with F(D, ?) (or F in short if the context is clear), where F(D, ?) = {(S, supD(S))|supD(S) ? ?}.

Example 1. A transaction database D is given in Figure 1.

Let minimum support threshold ? = 4. Figure 2 shows all ?-frequent itemsets in D, where, for example, (abc, 4) means supD(abc) = 4, and the length of itemset abc is 3.

Notice that the support of empty itemset {} is actually the number of transactions in the database.

Definition 3. A frequent itemset S ? F(D, ?) is said to be a closed frequent itemset iff ?S? ? F(D, ?) such that S ? S? and supD(S?) = supD(S).

Given a database D, and minimum support threshold ?, the collection of all the closed frequent itemsets is denoted by C(D, ?). There exist approaches (e.g., CLOSET+ [14], etc.) that can mine directly the collection of all the closed frequent itemsets on a database.

Definition 4. A frequent itemset S ? F(D, ?) is said to be an maximal frequent itemset iff ?S? ? F(D, ?) such that S ? S?.

Given a database D, and minimum support threshold ?, the collection of all the maximal frequent itemsets is denoted by M(D, ?). There exist approaches (e.g., MAFIA [4], etc.) that can mine directly the collection of all the maximal frequent itemsets on a database.

Following the notation of [3], we now brief the defini- tions related to ?-vulnerable pattern as follows.

Definition 5. Given transaction database D, and minimum support threshold ?, a general pattern is a propositional sentence, where variables are items, and logical connec- tives are AND(?), OR(?), and NOT(?). Without loss of generality, a general pattern p can be converted equiva- lently into its disjunctive normal form p = p1 ? ? ? ? ? pw.

If for each pi(1 ? i ? w), the itemset formed by all the items in pi is a ?-frequent itemset, then we say that p is a ?- vulnerable pattern. The domain of all possible ?-vulnerable patterns is denoted by Pat(D, ?).

Example 2. Given the result of frequent itemset mining in Figure 2, (a??b)?(a?c) is a ?-vulnerable pattern, because both ab and ac are ?-frequent itemsets.

We can see that a ?-frequent itemset is a special form of ?-vulnerable pattern. That is, it is a ?-vulnerable pattern built only by the logical connective AND(?). For example, frequent itemset abc in Figure 2 can be expressed in the form of a ? b ? c.

As in [3], we will focus our discussion on the ?- vulnerable pattern in this paper. For brevity, we sometimes call ?-vulnerable pattern pattern if the context is clear.

Definition 6. Given a pattern p and a transaction T , for each item x ? p, if x ? T , we substitute x with true, other- wise with false. If the value of p is true under such substi- tution, we say that T can satisfy p, denoted by p(T ); other- wise, we say that T cannot satisfy p, denoted by ?p(T ).

Definition 7. Given a transaction database D, the support of pattern p in D is the number of transactions in D that can satisfy p, denoted by supD(p) = |{T |T ? D ? p(T )}|.

Example 3. Given pattern p = b ? c ? ?f , transac- tions T1, T3, T10 in Figure 1 can satisfy pattern p, and supD(p) = 3.

3.2 The problem  Before getting into the details of our problem, we first brief the result related to anonymity of patterns in [3].

Definition 8. Given a transaction database D and an anonymity threshold k, a pattern p is said to be a k- anonymous pattern in D iff supD(p) ? k or supD(p) = 0.

Definition 9. Given anonymity threshold k, and C ? F(D, ?), if it can be derived from C that ?p ? Pat(D, ?) : 0 < supD(p) < k, then C is an inference channel of non-k- anonymous pattern p, denoted by C |= 0 < supD(p) < k.

Example 4. Given the result of frequent itemset mining F(D, ?) shown in Figure 2, and anonymity threshold k = 3, the set {(bcd, 5), (bc, 7)} constitutes an inference chan- nel of pattern b? c??d, because it can be derived from the set that 0 < supD(b ? c ? ?d) = 2 < 3.

Atzori etc. [3] shows that, given anonymity threshold k, and two frequent itemsets X = {a1, ? ? ? , au}, Y = {a1, ? ? ? , au, b1, ? ? ? , bv} in F(D, ?) (notice that X ? Y , and (Y \X) = {b1, ? ? ? , bv}), let p = a1 ? ? ? ? ? au ??b1 ? ? ? ? ? ?bv , if 0 < supD(p) < k, then {(S, supD(S))|X ? S ? Y } forms an inference channel of pattern p. Such an inference channel is denoted by (CYX , f  Y X ), where C  Y X =  {(S, supD(S))|X ? S ? Y }, and fYX = supD(p). The collection of all CYX in F(D, ?) with the corresponding fYX is denoted by Ch(k,D, ?).

Definition 10. Given (CYX , f  Y X ) ? Ch(k,D, ?), if  ?(CLH , f L H) ? Ch(k,D, ?) such that X ? H and (Y \X) ?  (L\H), then CYX is an maximal inference channel. The col- lection of all the maximal inference channels is denoted by MCh(k,D, ?).

It has been showed in [3] that if ?C ? MCh(k,D, ?) (i.e., MCh(k,D, ?) = ?), then ?p ? Pat(D, ?) is k- anonymous. This means, if all the maximal inference chan- nels in MCh(k,D, ?) are blocked, consequently no pattern in Pat(D, ?) can be derived non-k-anonymous. Therefore, given the result F(D, ?) of frequent itemset mining, how to correctly and efficiently detect the collection MCh(k,D, ?) of all the maximal inference channels is a key component for eliminating threats to anonymity.

In this paper, we focus on the problem of detecting anonymity of patterns. That is, detecting all the maximal     inference channels for a given anonymity threshold. More formally, our problem can be stated as follows: given a transaction database D, the result F(D, ?) of frequent item- set mining, and an anonymity threshold k, our problem con- sists in detecting the collection MCh(k,D, ?) of all the maximal inference channels, which may be used by an at- tacker to derive non-k-anonymous patterns in Pat(D, ?).

Here ? and k are two parameters defined by the data owner. The former is for frequent itemset mining, while the latter is for anonymity control. We assume ? > k. This is consistent with the practice. Generally speaking, the mini- mum support threshold ? is at least in the order of hundreds for frequent itemset mining, while the threshold k in the order of tens will be enough to preserve anonymity.

4 Detecting maximal inference channels of threats to anonymity  The previous work [2, 3] detected maximal inference channels by calculating the supports of patterns based on Theorem 1 below. We call them the calculation-based ap- proaches. The proof of Theorem 1 was given in [3].

Theorem 1. Given a pattern p = a1?? ? ??au??b1?? ? ?? ?bv in D, then supD(p) =  ? X?S?Y (?1)|S\X|supD(S),  where X = {a1, ? ? ? , au}, Y = {a1, ? ? ? , au, b1, ? ? ? , bv}, and |S\X| = |{si|si ? S ? si ?? X}|.

Especially, an optimized calculation-based approach (Algorithm 2 in [3], denoted by OICD in this paper) com- putes supD(p) for all Y ? M(D, ?), and X ? C(D, ?) ? X ? Y . If 0 < supD(p) < k, then (CYX , supD(p)) is an maximal inference channel. The time complexity of OICD is O(mc2|lm?lc|), where m is the number of maximal fre- quent itemsets, lm is the average length of maximal fre- quent itemsets, and c the number of closed frequent item- sets, lc the average length of closed frequent itemsets.

Next, we will present a novel projection-based approach for detecting maximal inference channels.

4.1 The projection-based approach  Before getting into the details of our approach, we first give the definition of projection on transaction and database.

Definition 11. Given an itemset S and a transaction T , the projection of T based on S is denoted by ?S(T ) = {x|x ? S ? x ? T}. For brevity, we call ?S(T ) the projected transaction if the context is clear.

Example 5. Given an itemset S = bcd, and a transaction T = {b, c, e, f}, then ?S(T ) = {b, c}.

Definition 12. Given an itemset S, a transaction database D, the projection of D based on S is denoted by ?S(D) =  {?S(T )|T ? D}. For brevity, we call ?S(D) the projected database if the context is clear.

Algorithm: PMICD Input: F(D, ?), D, k Output: MCh(k,D, ?) Method:  M(D, ?) = {(S, supD(S)) ? F(D, ?)|S is maximal}; MCh(k,D, ?) = ?; for each (M, supD(M)) ? M(D, ?) do begin D? = ?M (D); sort transactions of D? in lexicographic order; ct = 1;n = 1; for i = 2 to |D?| do begin  if T ?n == T ? i then ct + +; /* T  ? n, T  ? i ? D? */  else begin if ct < k then add (CMT ?n , ct) into MCh(k,D, ?); ct = 1;n = i;  end end  end  Figure 3. Projection-based maximal inference channel detector (PMICD)  Our approach for detecting maximal inference chan- nels is called PMICD (Projection-based Maximal Inference Channel Detector). Its details are given in Figure 3. The main idea is as follows: for each maximal frequent item- set M ? M(D, ?), PMICD first computes the projected database D? based on M . Then, it sorts the transactions of the projected database D? in lexicographic order. The sort- ing operation clusters the transactions with same values in D?, and will facilitate the later operations. At the following steps, PMICD scans the projected database D? once. Dur- ing scanning, it counts the number of appearances of current transaction T ?n in D?. If the number of appearances of T ?n in D? is less than anonymity threshold k but larger than 0, then it means that the set of itemsets CMT ?n = {S|T ?n ? S ? M} forms an maximal inference channel. Therefore, (CMT ?n , ct) is added into Mch(k,D, ?), where ct is the number of ap- pearances of transaction T ?n in D?. The above procedure is repeated until all the maximal frequent itemsets in M(D, ?) have been considered.

Suppose the number of maximal frequent itemsets is m, and the number of transactions in database D is n, then for each maximal frequent itemset M , the time of computing the projected database D? based on M is O(n) (because it needs one scan of D); the time of sorting the transactions in D? is O(n log n), if a quick-sort is used; the following steps of PMICD scans D? once to discover the set of maxi- mal inference channels like CMT ?n , and thus the time spent at     these steps is O(n). In summary, the total time of PMICD is O(mn log n).

T ?id T ? = ?S(T ) Tid  1 b 5 2 b c 2 3 b c 3 4 b c d 1 5 b c d 7 6 b c d 8 7 b c d 9 8 b c d 10 9 c d 4 10 c d 6  Figure 4. An example of the projected trans- action database after being sorted in lexico- graphic order  Example 6. Given transaction database D in Figure 1, and minimum threshold ? = 4, we can know that S = bcd is an maximal frequent itemset. Figure 4 gives the trans- actions in ?S(D) after being sorted in lexicographic order, where the last column is the Tid of a projected transaction in original database D. Suppose anonymity threshold k = 3, the set of maximal inference channels with respect to S is {(Cbcdb , 1), (Cbcdbc , 2), (Cbcdcd , 2)}.

4.2 Correctness and completeness of the projection-based approach  Lemma 1. If CYX is an inference channel detected by PMICD, then Y is an maximal frequent itemset.

According to the procedure of PMICD, obviously we can know that Lemma 1 is true.

Theorem 2. Any inference channel detected by PMICD is an maximal inference channel.

Proof. (By contradiction). Suppose the inference channel CYX detected by PMICD is not maximal. Then, there ex- ists an inference channel CLH(C  L H ?= CYX) such that 0 <  fLH < k, where X ? H and (Y \X) ? (L\H). That means Y ? L, which conflicts with the fact that Y is an maximal frequent itemset (by Lemma 1).

Lemma 2. If CYX is an maximal inference channel, then Y is an maximal frequent itemset.

The correctness of Lemma 2 was shown in [3].

Theorem 3. Given database D, the collection of all the maximal frequent itemsets M(D, ?), and anonymity thresh- old k, PMICD can detect all the maximal inference chan- nels.

Proof. Without loss of generality, assume CYX ? MCh(k,D, ?), where X = {a1, ? ? ? , au}, and Y = {a1, ? ? ? , au, b1, ? ? ? , bv}. Since CYX ? MCh(k,D, ?), we can derive that the pattern p = a1?? ? ??au??b1 ? ? ???bv is non-k-anonymous. This means the number of transactions in ?Y (D) exactly containing itemset {a1, ? ? ? , au} is larger than 0 but less than k. From Lemma 2, we know that Y is an maximal frequent itemset. Because PMICD computes ?M (D) for each maximal frequent itemset M , and adds all (CMT ?n , ct) into MCh(k,D, ?), where 0 < ct = |{T ?|T ? = T ?n?T ? ? ?M (D)}| < k, we know that CYX can be detected by PMICD. Therefore, PMICD can detect all the maximal inference channels.

5 Experiments  In this section, we evaluate the performance of our ap- proach PMICD, and compare it with the approach proposed in previous work (Algorithm 2 in [3], denoted by OICD in this paper). In our experiments, both PMICD and OICD are implemented with C++.

5.1 Experimental settings  We use two real datasets, MUSHROOM and CHESS, from the FIMI repository (http://fimi.cs.helsinki.fi/data/). In MUSHROOM, there are 119 items, 8124 transactions, and the average length of transactions is 23. In CHESS, there are 75 items, 3196 transactions, and the average length of transactions is 37.

The methodology of our experiments is as follows.

Given minimum support threshold ?, we first perform fre- quent itemset mining on the test datasets by Apriori [1].

Then, we detect the collection of maximal inference chan- nels for non-k-anonymous patterns with PMICD and OICD, respectively. We plot each result in the following figures with an average over the results of 10 trials. Besides in the results, we do not include the time for computing max- imal frequent itemsets and closed frequent itemsets from the result of frequent itemset mining in OICD, and also do not include the time for computing maximal frequent item- sets from the result of frequent itemset mining in PMICD, since for a given minimum support threshold, there exist approaches that can mine directly closed frequent itemsets (e.g., CLOSET+ [14], etc.)or maximal frequent itemsets (e.g., MAFIA [4], etc.) on a database.

All our experiments are performed on a 2.8GHz Intel Pentium IV PC with 512MB main memory, running Mi- crosoft Window XP operating system.

10 15 20 25            ?/N (%)  T im  e (s  ec on  d)  MUSHROOM  OICD PMICD  Figure 5. Time for detecting maximal infer- ence channels  75 80 85 90          ?/N (%)  T im  e (s  ec on  d)  CHESS  OICD PMICD  Figure 6. Time for detecting maximal infer- ence channels  5.2 The effect of minimum support threshold  In the first set of experiments, we first vary the value of minimum support threshold ? to get different sets of ?- frequent itemsets. Then, we fix the anonymity threshold k = 30, and run PMICD and OICD on the mining results, respectively.

The time for detecting all the maximal inference chan- nels in MUSHROOM and CHESS is given in Figure 5 and Figure 6, respectively. In the figures, the x-axis is ?/N , where N is the number of transactions in database(notice that the number of transactions in a database is fixed in our experiments); and the y-axis is the time measured in sec- onds. It can been seen that when ? is small, PMICD is much faster than OICD. The reason is that when ? becomes small, the number of closed frequent itemsets increases dramati- cally. Especially, when ?/N = 10% for MUSHROOM, the  number of closed frequent itemsets is 4885, which is close to the number of transactions in MUSHROOM; and when ?/N = 75% for CHESS, the number of closed frequent itemsets is 11525, which is even much larger than the num- ber of transactions in CHESS. Since OICD is a calculation- based approach, it need scan the set of closed frequent item- sets for each maximal frequent itemsets, and calculates the supports of patterns based on Theorem 1. Therefore, the execution time of OICD will increase dramatically when ? becomes small.

10 15 20 25        ?/N (%) N  um be  r of  M ax  im al  In fe  re nc  e C  ha nn  el s  MUSHROOM  Figure 7. Number of maximal inference chan- nels vs. minimum support threshold ?  75 80 85 90          ?/N (%)  N um  be r  of M  ax im  al In  fe re  nc e  C ha  nn el  s  CHESS  Figure 8. Number of maximal inference chan- nels vs. minimum support threshold ?  Figure 7 and Figure 8 show the number of maximal infer- ence channels in MUSHROOM and CHESS, respectively, when we vary the value of minimal support threshold ?. Be- cause in all these experiments, the maximal inference chan- nels discovered by PMICD are the same as those by OICD, which also demonstrates the correctness and completeness of PMICD. We only plot the result of PMICD.

Obviously in both figures, the number of maximal in- ference channels is reduced when the value of ? is in- creased. The underlying reason is that increasing the value of ? reduces the number of ?-frequent itemsets. For ex- ample, when ?/N increases from 10% to 25% in Figure 7, the number of ?-frequent itemsets shrinks from 574431 to 5545. This means that the amount of information exposed to attackers is reduced. Consequently, the number of maxi- mal inference channels is also reduced.

5.3 The effect of anonymity threshold  10 15 20 25 30 35 40 45 50        k  T im  e (s  ec on  d)  MUSHROOM  OICD PMICD  Figure 9. Time for detecting maximal infer- ence channels  10 15 20 25 30 35 40 45 50            k  T im  e (s  ec on  d)  CHESS  OICD PMICD  Figure 10. Time for detecting maximal infer- ence channels  In the second set of experiments, we first fix the value of minimum support threshold ? to perform frequent itemset mining on the datasets. Then, we run PMICD and OICD on the mining results with different values of anonymity threshold k, respectively.

The time for detecting all the maximal inference chan- nels in MUSHROOM is shown in Figure 9, where we fix ?/N = 15%, the number of closed frequent itemsets is 2261, and the number of maximal frequent itemsets is 321. We can see that the execution time of both PMICD and OICD is almost unchanged when varying the value of anonymity threshold k. The reason is that in both PMICD and OICD, the anonymity threshold k only acts as a condi- tion for judging if a set of frequent items forms an maximal inference channel or not, it does not affect the execution time of both approaches. In Figure 10, we mine CHESS with ?/N = 80%. There are 5083 closed frequent item- sets and 226 maximal frequent itemsets in the mining result.

When detecting maximal inference channels under differ- ent values of anonymity threshold k, we find the same phe- nomenon as that in Figure 9. That is, the execution time of both PMICD and OICD is almost unchanged. We also observe that PMICD is more efficient than OICD in both Figure 9 and Figure 10. The reason is again that the number of closed frequent itemsets is close to or even larger than the number of transactions in MUSHROOM or CHESS.

10 15 20 25 30 35 40 45 50            k  N um  be r  of M  ax im  al In  fe re  nc e  C ha  nn el  s  MUSHROOM  Figure 11. Number of maximal inference channels vs. anonymity threshold k  In Figure 11 and Figure 12, we plot the number of maximal inference channels when varying the value of anonymity threshold k. Because in all these experiments, the maximal inference channels discovered by PMICD are the same as those by OICD, which again demonstrates the correctness and completeness of PMICD. We only plot the result of PMICD.

The results in Figure 11 and Figure 12 show that the number of maximal inference channels increases for both MUSHROOM and CHESS, when we enlarge the value of anonymity threshold k. This phenomenon is easily under- stood from the definition of inference channel. When en- larging the value of k, the number of pattern p ? P(D, ?) s.t. 0 < supD(p) < k are increased. Consequently, the     10 15 20 25 30 35 40 45 50          k  N um  be r  of M  ax im  al In  fe re  nc e  C ha  nn el  s  CHESS  Figure 12. Number of maximal inference channels vs. anonymity threshold k  number of maximal inference channels will also increase.

6 Conclusions  Sharing the knowledge discovered by data mining without discrimination may pose threats to individual?s anonymity. In this paper, we present a new projection- based approach for detecting the anonymity of patterns be- fore sharing the result of frequent itemset mining. In our approach, maximal inference channels are detected by pro- jecting the original database based on each maximal fre- quent itemset, without the actual calculation on the supports of frequent itemsets. We prove that our approach can dis- cover the collection of all the maximal inference channels for non-k-anonymous patterns. The experimental results show that our projection-based approach is more efficient than previous work especially when the number of closed frequent itemsets in the mining result is close to or larger than the number of transactions in a database.

For future research, we will investigate the possibility of developing more effective and efficient approaches for detecting anonymity of patterns, and we will also extend our research to other forms of knowledge representation.

