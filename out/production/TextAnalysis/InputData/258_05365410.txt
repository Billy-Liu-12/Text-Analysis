An Improved Algorithm for Mining Association  Rules Based Complete Sub-graph

Abstract?This paper introduces the concept of data mining, basic idea of the improved algorithm based on graph-based for mining association rules,  its algorithm, and the improved algorithm based on fully sub-graph to find frequent item sets, from which compared the improved algorithm with the original one. The improved algorithm can take lots of help to look for the association.

Keywords- data mining, association rules, complete sub-graph, frequent  itemsets

I. INTRODUCTION With the rapid development of computers and network  technology, people have the ability to collect data and the rapid increase in the data storage industry is growing rapidly, data has entered every aspect of people's lives. Because so much data, it is the urgent need for new technologies and automated tools to change this wealth of data resources into useful information, so as to supply help to people's lives, learning, working. With the development of related technologies, such as the huge database and the actual needs and the development of, data mining technology has gradually developed[4].

Data mining is to extract the unknown, potentially useful model or rule from large amount of data. Data Mining started in the late 80's, developed  by leaps and bounds in 90's, it is still very active one in the forefront areas at present. As an cross-database subject, data mining contains database technology, artificial intelligence, machine learning and neural networks, statistics, pattern recognition, high-performance computing and data visualization, and many other disciplines.

Association rules is to find relationship in the database, it is the first study and the main research directions of data mining problems. In fact, the articles of data mining, especially some of the early area of research papers and applications, focused mainly on the different types of association rules mining algorithm definition and design. It can even be said, when referring to data mining, people first think of mining association rules. Graph-based algorithm for mining association rules is proposed by the Show Jane Yen[2].

The algorithm is to structure incidence graph according to frequent 2-itemsets, and then to find the item frequent sets from the incidence graph. In this paper, the algorithm is  improved appropriately. The following graph is the basic model of mining association rule[1].

Figure1. The basic model of mining association rules

II. BASIC IDEA OF IMPROVED ALGORITHM BASED ON GRAPH-BASED FOR MINING ASSOCIATION RULES  In a correlation graph of a database, any frequent k-item set always has a k-complete sub-graph corresponding. If there is a frequent k-item set, the k-items corresponding to the k nodes of the sub-picture derived a k-complete sub-graph. Therefore, as long as all complete sub-graphs were found in the associated graph, all the frequent item sets were got.

Although the frequent k- item set is always associated with k-complete sub-graph, but for a k-complete sub-graph, it is not necessarily that a frequent k-item set corresponds to it.

Therefore, after getting a complete sub-graph, we can not directly seem item set corresponding to it as a frequent item set, the frequent item set needs to judge.

When searching for k-complete sub-graph based on k- 1complete sub-graph, if  degree of the incidence graph is less than k-1 node in the k-1 complete sub-graph, k-complete sub- graph based on k-1 sub-graph cannot be found; When k-1 complete sub-graph ,in which  degree of all nodes are more than adds a node, but the node does not belong to the complete sub-graph, and degree of it in the incidence graph is less than k-1, then k-complete sub-graph also cannot be able to get.

If G is k-complete sub-graph, any k-1 nodes composed all the sub-graphs that are k-1 complete sub-graph. The node set ( )1 2 1 1 1, , , , , ,i i k kA A A A A A? + ?  of k-1 complete sub- graph on which the node A which degree is k or more than k, was increased, then k-complete sub-graph G1 was got, the node set ( )1 2 1, , , kA A A ?  induced sub-graph is also     complete k-1 sub-graph, A with degree greater than or equal to k-1 based on the node set ( )1 2 1, , , kA A A ?  was increased, after complete k sub-graph G2 was induced, while G1 = G2. In order to avoid the  repeated judgement in the same sub-graph, which costs a great deal of time and space, we set up a different size of the code (that is, order is M, order the best value is set to positive integer) for all nodes Mi which belong to the node set { }1 2 3, , , , nM M M M M= of the association graph.

For any k-1 complete sub-graph each set ( )1 2 1, , , kA A A ? ( )A M? the various elements order by value of the corresponding order, which can be in ascending or descending order may be used. In this paper used the order of ascending, that is 1 2 1( ) ( ) ( )korder A order A order A ?< < < , when to find complete k sub-graph in the K-1 complete sub-graph, it is required that the node nA added always satisfy  1( ) ( )n korder A order A ?> [3].

Therefore, when to find complete k sub-graph in the K-1 complete sub-graph, the first thing is to test the k-1 nodes ( )1 2 1 1 1, , , , ,i i kA A A A A? + ?  to check if the degree of the k-1 nodes  is more than k-1 (condition 1), if condition 1 is satisfied, to test node set { }1 2 3, , , , nM M M M M= , in which the degree should be more than k-1, and the node  iM with value of order  more than 1( )korder A ? should be adjacent with every node of the node set A (condition 2)[5], if condition 2 is satisfied, which indicates that k nodes induced complete k sub-graph. As long as any of conditions 1 and 2 is not satisfied, the complete k-1sub-graph can not be got according to the complete k sub-graph.



III. CONCRETE REALIZATION OF ALGORITHM Assumed that there are n nodes in the association graph:  ? It is necessary to calculate the degree (as deg( iM ))of each node M  in the  association graph[6].

? For n nodes in the association graph, every node iM have to set up a different positive integer as the serial number of all the nodes (that is ( )iorder M ), and  1 2( ) ( ) ( )norder M order M order M< < < .

? To establish a dynamic array P that can be used to store node set of the complete sub-graph corresponding to frequent item sets, in which each of  the element is a node set of complete sub-graph and it is required that nodes should sort by ascending order value. Because the association graph is built according to frequent 2- itemset, the nodes of frequent 1-itemset and frequent 2- itemset can be directly added to the array by the steps which had be introduced before building the association graph. Then it begins to search complete k+1 sub-graph corresponds to the frequent k+1-itemset  from complete k (k = 2) sub-graph. If a complete k+1 sub-graph based on the complete k sub-graph were found, it is necessary to judge whether the item set of complete k+1 sub-graph is a frequent k+1-itemset. If all the conditions are satisfied, the complete k+1 sub- graph will be added to dynamic arrays P. The condition to determine whether the item set of complete k+1 sub- graph is a frequent k+1-itemset, is just to and computing the code of every project in the k+1- itemset. It does not repeat this process of search until k arrived a value m, in this case, all the complete m+1 sub-graph of a frequent k+1-itemset can not be found according to the complete m+1 sub-graph. Put all nodes of complete sub-graph are set into the dynamic array P[7].

? These item sets of the nodes sets are all the frequent item sets in the dynamic array P.

Algorithm described as follows:  /* Assume that minimum support degree of the project is minsup */  /* The improvement of association rule mining algorithm based on complete sub-graph*/  /* Assume that the length of the database is N*/  /* Generation of the frequent 1-itemset*/  for all items i do  set all bits of  iBV  to 0  for  (j=1; j<=N; j++) do begin  for all items i in jth transaction do begin  i .count++  set the jth  bit of iBV   to  0  end  end  iL = ?  for all items i in database D do begin  if  i.count >=minsup then do begin  { }1 1L L i= ? establish node i in association graph  end  end  /*Generation of the frequent 2-itemset and establishment of association graph */  2L = ?  for every two items i, j(i<j) in 1L  do begin    if (the number of  1 is in i j BV BV?  ) >= minsup then do begin  { }{ }2 2 ,L L i j= ? bulid  a side between the node i and j in the association graph  add node j in adjacent set of  node i  add node i in adjacent set of  node j  i .deg++  j .deg++  end  end  /*generation of the frequent k- item sets ( )3k ? */ k=3  while ( 1L ? ? ) do begin  for each large item set 1kS ? in 1kL ?  do begin  kS = ?  if (all the item i.deg>=k-1(I in 1kS ? )) then do begin  for  each item j in 1L  do begin  if  j.deg>=k-1 and j>max( 1kS ? ) then do begin  { }1k kS S j?= ? end  end  end  k++  end

IV. TO FIND THE FREQUENT ITEMSETS BASED ON THE IMPROVED  ALGORITHM OF COMPLETE SUBGRAPH  First of all, to calculate the degree of every node according to association graph which had been established:  deg ( 1M ) = 2, deg ( 2M ) = 2, deg ( 3M ) = 4, deg ( 4M ) = 2, deg ( 5M ) = 2. And then for each node to set up a different number (value of order), and meet the sort: order ( 1M ) <order ( 2M ) <order ( 3M ) <order ( 4M ) <order ( 5M ). Here we can set: order ( 1M ) = 1, order ( 2M ) = 2, order ( 3M ) = 3, order ( 4M ) = 4, order ( 5M ) = 5. From frequent 2 - item set, node sets of  complete 2-order sub-graph can be known: that is {{ 1 3,M M }, { 1 4,M M }, { 2 3,M M }, { 2 5,M M }, { 3 4,M M }, { 3 5,M M }}.

Search for frequent 3-item sets. Firstly, looking for complete 3-sub-graph: complete 2-sub-graph, which is got from the nodes 1M  and 2M , only need to arrive the degree of satisfaction and order value of  the nodes 4M  and 5M [8]. In these two nodes, only node 4M  had connected with 1M and  3M , so { }1 3 4, ,M M M can get a complete 3-sub-graph. It is necessary to and computing among the nodes of  frequent 3- item set, if the determine is right,  { }1,3, 4  was seen as the frequent item sets, in which the complete 3- sub-graph must be saved. The complete 2-sub-graph, which is got from the nodes  1M  and 4M , only need to arrive the degree of satisfaction and order value of  the nodes 5M . In these two nodes, only node 5M did not have connected with 1M and 4M , so { }1 4 5, ,M M M can not get a complete 3-sub-graph.

Similarly, there can be the same thinking about the other four complete 2 sub-graphs. Finally, all the complete 3 sub-graphs can be got, at the same time, all the frequent 3- item sets can be got: { }1,3, 4 , { }2,3,5 . After getting all frequent 3-item sets, the next step is to examine whether there is  frequent 4-item sets: For the frequent 3-item set { }1,3, 4 had complete 3 sub- graph, which is got from the { }1 3 4, ,M M M . Because of deg ( 1M ) = 2 < 3,  complete 4 sub-graph can not be got from the complete 3-sub-graph, hence, the frequent 3-item sets can not be got on the basis of frequent 4-item sets. Similarly, frequent 4-item sets can not be got from the frequent 3- item set { }2,3,5 . Because the frequent 4-item set is empty, it is not possible to get non-empty frequent k-item sets (k> = 5). At this point,  all the frequent item sets can be got.

