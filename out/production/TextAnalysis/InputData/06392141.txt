A recommendation-based web usage mining model for a university community

Abstract?In this paper a recommendation model based on web usage mining applied to the navigation data from a community college is proposed. The model is composed by an offline and an online module. In the offline module, the web sessions are preprocessed and represented in a vector space model using the frequency of the URLs, and after are grouped based on similarity measure using the Bisecting K- Means clustering algorithm. In the online module, each cluster found is represented by association rules, and the clusters are used for recommending web pages to the users. The article presents the procedures of selection and removal of entries in the web log, preprocessing of web sessions, and the strategies used for the web page recommendation. Supervised validation was applied to the model, selecting a group of web sessions as queries to the system, and asking users to answer a survey on the output.

Keywords-Web usage mining, recommendation systems, clus- tering

I. INTRODUCTION  User activity in the cyberspace has become a major source of information for webmasters and online suppliers of pro- ducts and services, in order to deliver content based on their interests and needs. However, the concern over the privacy rights and anonymous surfing on the net, led researchers to seek alternatives to generate automatic processes to avoid human intervention for identifying patterns, and also to analyze the vast amount of data available in an effective and efficient way.

A web recommendation system is an interactive website software, which tries to predict users preferences to facilitate and customize their online experience, creating a list of suggested items. These items can be products or online resources [1] such as Urls. Recommendation systems are different from information retrieval systems by the semantics used to interact: an outcome in a web recommendation system is understood as an option to be considered, while a result of an information retrieval system is a match with the search string. Recommendation systems adjust their results to a particular user. A classification of recommendation systems is based on the type of strategy used: collaborative, content-based, demographics and knowledge [2].

Data mining is a computer research area that encapsulates a set of methodologies and algorithms useful for revealing hidden knowledge in huge amounts of data. Web mining is a subset of data mining techniques applied to reveal hidden  and useful information on different kind of Internet data.

The web mining approaches are classified as usage, content and structure mining. The different web mining approaches are defined according to the data source used for extracting the knowledge [13]: usage mining employs the history of navigation using the log navigation (information about users, and urls), content mining focuses on the text content of web pages, and structure mining extracts patterns from the graph structure of the web. Content mining techniques extract data content models of web objects including plain text, semi- structured documents (HTML, XML), structured documents (digital libraries), documents dynamic and multimedia. The extracted models are used to classify web objects, to rec- ommend urls or documents; to extract keywords for use in information retrieval and to infer the structure of objects semi-structured or unstructured [4].

A web recommender system can be based on usage, con- tent or structure web mining. If the problem is tackled using the content mining perspective, it is possible to recommend to the user related content of what is reading; if usage mining is employed, the user can receive recommendations about related web pages, according to what other users visited (like a collaborative method), and if structure mining is used, the recommendation is based on the structure of the web site.

If different data mining approaches are used in the same recommender, then it is known as a hybrid recommendation system based on web mining.

One of the techniques of data mining and web mining is clustering, which is used in a cross to the three disciplines of web mining: usage, content and structure mining. Maintly, clustering algorithms are used to find session profiles and groups of web documents (topics of the documents). In [9] a CARD algorithm used to analyze server access logs and obtain typical session profiles of users is proposed, the algorithm is an agglomerative clustering algorithm. The profiles can allow infer user demographics and it can be used for market segmentation, provide personalized content to the web users, and be used in the recommendations systems.

Other data mining task widly used for recommender systems is association rules. Maintly, it is used to find the specific patterns in each cluster, describing the clustering model.

Related works of recommender systems based on usage mining are: a product personalized recommender system in an Internet shopping mall, using navigation history, de-  2012 Eighth Latin American Web Congress  DOI 10.1109/LA-WEB.2012.23   2012 Eighth Latin American Web Congress  DOI 10.1109/LA-WEB.2012.23      cision tree induction, and association rules [5]; extraction of sequence patterns and association rules using Apriori algorithm [6]; the use of K-Means algorithm and euclidean distance to group web sessions, and then this information is employed with content, using the N-grams definition [7].

In this paper, a web recommendation model to improve navigation of Internet users in an university community based on web usage mining is proposed. Web mining techniques are applied to web sessions in order to find useful patterns that are employed for recommendations in the navigation. The model is composed of an offline and online modules. The offline module analyzes the log to extract and preprocess the web sessions browsed by users, using a vector space model for representing web sessions, and then uses a clustering algorithm to find groups of similar sessions, and after, finds association rules for each found group. Finally, the online module uses the clusters and rules to recommend similar web pages based on what the user navigates.

The rest of the paper is structured as follows. In section II the outline of the model is presented. Section III shows the preprocessing of the web sessions including the vector representation used. Section IV presents the way clustering algorithms were used: methods and parameters for extracting clusters and their representative association rules from the data. Then, section V presents the online strategy of rec- ommendation, and section VI shows the model validation.

Finally, section VII presents conclussions and future work.



II. OUTLINE OF THE MODEL  The proposed recommendation model is presented in Figure 1. The model is composed of an offline module and an online module. The offline module does the preprocessing and data mining tasks to build a descriptive model for web sessions. This module contains a web log preprocessor that extracts the URL field and detects web sessions using the user id field. With the web sessions, a vector space model is created using the URL frequency of the data collection, similar to tf ? idf [8], and then this is processed using a clustering technique in order to obtain groups of web sessions; the web sessions are processed for obtaining asso- ciation rules that describes each one of the found clusters in the clustering phase. These steps are presented in the upper box of Figure 1.

The online module does the URL?s recommendation to the web user navigation from the current web session. This module generates recommendations based on the session?s groups and association rules generated in the offline module.

This module extracts the URL from the current web session, who is processed to convert it to the tf ? idf format according to the generated models in the offline phase; this information is then delivered to a recommendation machine that proposes web sites according to the clusters and the association rules found in the offline module. This steps are presented in the lower box of Fig. 1.

Log  Initial Preprocessing  Session  matrix Clustering  Session  clusters  Association  rules  Association rules  groups  Offline module  Online module  time  Navigation session  WWW WWW WWW  PreprocessingURLs Recommendations  Recommendation Machine  Figure 1. General scheme of preprocessing and web usage recommender model.



III. PREPROCESSING  A. Cleanning, transformation and selection of URLs  The first step towards preprocessing the web log was to select records with the following conditions: the IP an user id must exist, the type of request must be GET, proxy response code must be of type 200 (sucessfull resource acquired) or 304 (resource not modified, retrieve from cache), and the URL must link to a file with text content extension (htm, html, text document like doc and dinamically?generated web pages, like php and asp).

As part of the dataset exploration, the histogram of the URLs was analized, fig. 2 shows a logarithmic graphic with 1?692.830 distinct URL and its frequency. According to the distinct URL in the web log, those entries with a frequency lower or equal to 1000 (589 distinct URL, 45% of the original records) were discarded.

lo g  (F  re q  u e  n c y )  log10(Rank)  Figure 2. Rank vs. Frequency of university community web pages.

Entries considered noise, such as URL from web sites who are implicitly requested when the user sends a request to the proxy server (mainly advertising web sites), adult websites, as well as web sites that generates constant requests to the      server (like on-line radio stations or instant web messenger), were discarded. The identification of these web sites was done comparing each URL with 2.751 advertising web sites published in a list of a web site who collects this information1, observing the frequency of these sites on the navigation log and the information on the text of the URL (12% of the original records were discarded).

In order to reduce dimensionality, to find similar web ses- sions based on the main domain, and to find association rules with a minimun support, it was necessary to reduce them to their first level. For example, if a web log?s entry contains an URL like www.unal.edu.co/imagenes/granlogo.gif, the information is stored in the database as www.unal.edu.co.

Also, if there exists websites with different languages but offering the same information, like Wikipedia (it?s URL is found with different languages, easily recognizable for it?s Top-Level Domain - TDL) like www.wikipedia.es for spanish or www.wikipedia.fr for french), those URL are stored as one.

B. User identification and session extraction  The presence of UID in the proxy log allows to locate the user identification, finding 20.827 different users. Taking into account that an user session is a temporally compact sequence of web accesses by a user [9], a threshold approach for session extraction was used. This threshold (? ) is the maximum time that determines which log entries bounds a user session, using the time stamp. This approach is employed in [9], [10], [11]. A session lenght of ? = 30 was chosen [12], [13]. A total of 287.256 user sessions were detected.

Web sessions were organized in a vector space model, where sessions are vectors with their dimensions as URLs.

Therefore, a session vector is composed by the frequency of each URL in the session, using the same dynamics of a tf?idf matrix used on document clustering and information retrieval [8]. First, a uf matrix was built taking web sessions as documents and URLs as terms, where the values of the matrix represent the frequency an URL u was visited in a session s. Then, for each URL a uf ? isf normalization was made. Based on the original expressions, we calculate the uf ? isf matrix with the expression 2 where: N is the number of sessions; sfu is the frequency of an URL; ufu,s is the frequency of a u URL in a web session s; isfu is the URL frequency of u scaled with N (expression 1); and ufisfu,s is the uf?isf weight for the URL u in the session s. This approach is useful because uf ? isfu,s assigns high weight to the URL u if it has high frequency in few session s (adding relevance for these URL), low weight when the frequency of u is low in s or occurs in many of these, and lower when u occurs in practically all s. This weighting scheme was used on [14], [15] for web sessions.

1http://pgl.yoyo.org/adservers  isfu = log N  sfu (1)  uf ? isfu,s = ufu,s ? isfu (2)

IV. WEB SESSION CLUSTERING AND ASSOCIATION RULES  For finding sessions profiles (groups of web sessions), a clustering process was applyed on the matrix representation of Urls. As a first approach, the algorithm Bisecting K- Means was chosen for clustering because its proven good performance with tf ? idf document matrix [16]. The Bisecting K-Means algorithm, proposed by Steinbach, is an extension of the classical K-Means algorithm. It divides the data set as follows: start separating the two objects, then select the largest subset and iteratively repeating the process on the data, to obtain k groups. There are several criteria for selecting the cluster to split, and choose the one with the highest sum of squared errors (SSE) or use a function based on the size and the SSE. Algorithm 1 presents the Bisecting K-Means algorithm.

The Bisecting K-means algorithm, for this work, uses val- idation measures H1 (maxH1 = I1E1 ) and H2 (maxH2 = I2 E1 ) because they involve both intra cluster and inter cluster measures. These hybrid validation measures are based on two intra cluster measures, I1 that maximizes the sum of the similarity of the point assigned at each cluster weighted to its size, and I2 that finds the best solution that maximizes the cluster similarity between its centroid and each one of the points assigned to it. It also uses E1 that minimizes the distance between the centroid of each cluster and the centroid of the collection [17].

The k parameter, or number of clusters, was chosen based on the comparison of the slope of each one of the performance measures, and the Davies-Bouldin validity index [18] for 100 ? k ? 2. For the performance measure, on Fig. 4 can be observed an elbow near k = 30, and that H2 outperforms H1. Also, observing the Davies-Bouldin validity index on Fig. 3, near k = 30 the lower ratio is shown for H2, meaning that this solution offers a better  Algorithm 1 Bisecting K-Means Algorithm.

1: initialize listclusters // one group with all the objects 2: while size(listclusters) == K do 3: cluster ? SelectCluster(listclusters) 4: remove cluster from listclusters 5: for i = 1 until attemps do 6: Bisecting the cluster using K-means 7: end for 8: c1, c2 ? select two cluster whith minimum SSE 9: Add c1 and c2 to listclusters  10: end while       0.5   1.5   2.5   3.5  0 10 20 30 40 50 60 70 80 90 100  ?n di ce  D av ie s? B ou ld in  N?mero de grupos  ?ndice Davies?Bouldin: H1 vs. H2  D?B H1 D?B H2  Groups  Da vi  es -B  ou ld  in In  de x  Figure 3. Comparison of the Davies-Bouldin index for H1 and H2 performance measures vs. number of clusters for web sessions.

0.2  0.4  0.6  0.8   1.2  0 10 20 30 40 50 60 70 80 90 100  P er  fo rm  an ce  Groups  H1 vs. H2  H1 H2  Figure 4. H1 and H2 performance measures vs. number of clusters for web sessions.

clustering solution in terms of compactness and separation than H1 for this k parameter. Therefore for the model the number of cluster used was the 30.

The more frecuent urls en each clusters, allowed to identify some categories: 1. entertainment, 2. electronic mail, 3. news, 4. software, 5. banking, 6. education 7. ads, 8.

adults, and 9. government. Figure I shows some cluster with the more frequent urls.

In order to describe more the clusters and use this de- scription on the recommendation model, a extraction process of association rules was done for each cluster. The Apriori algorithm was employed [19], [20] because its impact in the research community [21], [22], [23].

The association rule model was generated using as input the clustering model created; it was configured to extract association rules with a minimun support of 0.1%, a confi- dence of 80% and a minimun rule length of two items. This  Convert  tf-idf information  Cluster Centroids  Cluster List  Select cluster  Calculate similarity  Choose best similarities  time  Navigation session  WWW WWW WWW  Offline module information  Online Module  URL  WWW  Rules lists  Figure 5. Web usage recommendation process.

values are chosen because of the high number of web pages distributed among web sessions, makes common groups of URL between them hard to find, so even a rule with three sessions as support is valuable for describing a cluster.



V. ONLINE RECOMMENDER A. Recommender using session clustering  In Fig. 5, the model of the recommender strategy is shown. This model takes the URLs of an ongoing navigation session as a navigation vector using the vector space model, according to the tf ? idf model generated in the offline module; then the closest cluster (from the web session clustering proccess) is found using the similarity between the navigation vector and each cluster centroid. Finally, the best representative sessions inside the chosen group are selected for the recommendation, for this the cosine similarity is calculated between the navigation vector and all the group sessions, and to the antecedents of the rules found in the association process. The algorithm 2 presents the details of the recommendation strategy, where P was defined as a group of web pages extracted from the log, and pn as a subset of web pages (exp. 3), and N = ?P? is the number of web pages in the dataset; S was defined as the set of usage web sessions extracted from the navigation log, and sm as a web session belonging to this set (exp.

4); C the set of cluster Cn of web sessions, where each one is a subset of sessions defined and identified with a prototype cn compound by web pages (exp. 5). In order to generate recommendations, the algorithm takes the query URL sequence and the number of results that will be shown as input; it is also required the matrix of sessions in the vector space model format generated for the offline module for the function convert session(?) and the clusters C.

P = {p1, p2, . . . , pn} (3)  S = {s1, s2, . . . , sm} | sm ? P (4)      cid (size) Urls Category 0 (1516) rcn.tutopia.com 99.9 % 1 1 (18498) facebook.com 99.7 %, mail.live.com 0.1 % 1,2 2 (1356) music.yahoo.com 99.7 %, messenger.yahoo.com 0.1 %, insider.msg.yahoo.com 0.1 % 1 3 (2231) wradio.com.co 99.7 %, caracol.com.co 0.1 %, eltiempo.com 0.1 % 3 4 (2733) caracol.com.co 99.5 %, eltiempo.com 0.3 % 4 5 (31019) mail.google.com 99.8 %, facebook.com 0.1 % 1,2 6 (2498) noticias.es.msn.com 99.5 %, facebook.com 0.2 %, mail.live.com 0.1 %, runonce.msn.com 0.1 % 1,3,4 7 (7335) ebuddy.com 99.0 %, facebook.com 0.5 %, mail.live.com 0.2 % 1,2 8 (15971) mail.live.com 99.4 %, facebook.com 0.5 % 1,2 9 (2255) grupobancolombia.com 99.2 %, facebook.com 0.2 %, eltiempo.com 0.2 % 1,3,5 10 (2978) elmundo.es 96.1 %, elmundo.reverso.net 3.4 %, facebook.com 0.2 % 1,3 11 (16905) eltiempo.com 99.6 %, facebook.com 0.1 %, vive.in 0.1 % 1,3 12 (9978) agenciadenoticias.unal.edu.co 58.0 %, unal.edu.co 40.0 %, unwebmail.unal.edu.co 1.2 % 2,3 14 (8704) facebook.com 97.8 %, 9b8442e2.fb.joyent.us 0.3 %, messengerfx.com 0.2 %, mail.yahoo.com 0.2 % 1,2  Table I CLUSTERING RESULTS  C = {C1, C2, . . . , Cn},?Cn?cn | Cn ? S ? cn ? P (5)  Algorithm 2 Web usage recommender using clustering.

1: procedure SELECTCLUSTER(url: List) 2: sq ? convert session(url) | sq = {p1, p2, ? ? ? , pn}, pn ? P  3: best centroid? none 4: score? 0 5: for ci ? C do 6: if Jaccard(sq, ci) > score then 7: score? Jaccard(sq, ci) 8: best centroid? ci 9: end if  10: end for 11: return best centroid 12: end procedure  13: procedure RECOMMENDSESSIONS(url: List, n) 14: Ci ? Cluster(SelectCluster(url)) 15: x: dictionary 16: for sj ? Ci do 17: x[Cosine(sj , sq)]? sj 18: end for 19: z = SortResults(n, x) 20: return z 21: end procedure  For this recommender, the preprocessing of the web session query consist on taking the current user navigation session, to extract the URL of the web pages the user is browsing, to reduce the URL to its first level and to transform them to a term vector. For this, the algorithm 2 on line 2 uses the procedure convert session(?).

For selecting the closest cluster to the navigation session, the Jaccard similarity for each representative cluster ci and  the navigation session vector is calculated. The cluster with the best score is selected (lines 4-9). The best group found and its similarity are stored in the variables best centroid and score.

B. Web session recommender with association rules  The recommender with association rules is based on the antecedent of the rules drawn from the groups of web sessions to find the best candidates to recommend.

In the algorithm 3, the concepts P , pn, N , S, sm, C, Cn y SelectCluster(?) are employed. It is also defined: rm = {ram, rcm} ? Rn | ram, rcm ? P as an association rule belonging to the association rules Rn extracted from the cluster Cn; rm is also compound for two parts: the tail or the antecedent of an association rule ram, and the consequent or head rcm. The algorithm works as follows: on line 2 the cluster is selected according to the Jaccard similarity with its prototype, as defined on SelectCluster(?) (see algorithm 2); on line 3 a dictionary x is defined to store as a key the cosine similarity between the URL of the current session and the URL of the antecedent rai , of each one of the rules ri belonging to the session group rules Ri extracted from the cluster Ci selected in the last step. Then the closest antecedent rai are chosen, and with them the subsequence r  c i ;  on lines 4-6 the cosine similarity between the antecedent for the association rules and the session query is made, and each one of those values is stored in the dictionary x defined on line 3; finally, on lines 7-11 the similarity values are sorted and the best scores are chosen, that is, the consequent of the association rules that will be recommendations to the session query sq given the group it was assigned to.

C. Recommendation selection  Web sessions are compound of a group of web pages, whose lenght depends of the parameter ? fixed to generate them. If a number m of recommended sessions is choosen, each one with a size tm, the number of recommended web pages will be m? tm. With this simple operation we want      Algorithm 3 Extended recommender with association rules that describes the clusters.

1: procedure RECOMMENDSESSIONS(url: List, number results)  2: Ci ? Cluster(SelectCluster(url,number results)) 3: x: dictionary 4: for raij ? Ri do 5: x[Cosine(raij , sq)]? rcij 6: end for 7: z :List 8: y ? sort(x.values()) 9: for yj ? y do  10: z[j]? x[yj ] 11: end for 12: return z 13: end procedure  to make clear that the number of elements n the user will have to choose go beyond the ability to process information, so it is necessary to limit these results to the number 7? 2 [24]. With this in mind, the selection of web pages takes the following strategy: candidate web pages Pc are picked up according to the cosine similarity criteria between the web session query sq and the elements of the selected cluster sj ? Ci and the cosine similitarity between the session query sq and the subsequent ram ? Rm from the best cluster; the groups of the candidate web pages are merged in order to delete repeated elements; web pages Qc ? Pc are selected such that the URL has the best lexicographic simliarity respect of sq; for random, a switching between Qc and Pc is done and one element is chosen at the time, until the recommendation set is of size n. With this procedure is guaranteed that: the recommendation has elements whose URL has similarity with the text that appears there, because its domains in general has words that make reference to the content of the web page; also, there exists the possibility to recommend web pages whose content might be interesting for the user but not described in the web page.



VI. VALIDATION  The validation of recommender systems is a hard task due that depends on the interest of the user. Therefore the model was validated using supervised validation, selecting a group of web sessions as queries to the system, and asking users to answer a survey on the output. The chosen web sessions to evaluate the system were extracted from the dataset, selecting at random 2000 web sessions, separated from the original data set before clustering. This sessions were then used to make the system generate recommendations, 5 of those were selected and presented to the responders together with questions to evaluate the relevance of the recommendations. The questions and its purpose (objective) were:  Score Relationship of URL Relationship of content x? ? % x? ? %  Excellent 1.67 5.38 2.17 2.17 2.14 6.99 Good 10.17 5.95 32.8 11.17 4.54 36.02  Average 12 4 38.71 10 3.35 32.26 Poor 5.5 3.62 17.74 5.83 5.04 18.82  The worst 1.67 1.37 5.38 1.83 1.17 5.91  Table IV AVERAGE OF THE USERS SCORES OF THE RELATIONSHIP OF THE URL  AND THE CONTENT OF WEB SESSION QUERIES.

? Objective 1. To evaluate the relationship between the text of the URL of the session query.

? Question. How do you rate the relationship of the URL between the web pages of the session queries?

? Objective 2. To evaluate the relationship between the URL of the recommended web pages.

? Question. How do you rate the relationship between the URL of the recommended web pages?

? Objective 3. To evaluate the relationship between the URL of the session query and the recommended web pages.

? Question. Taking into account the web pages of the query and the recommendation, How do you rate the relationship between the URL of the query web pages and the recommended web pages?

The respondent were asked about web pages to refer to the URL of query and recommendation. Respondents could answer the survey using a scale of 1-5, which is assigned the following values: 5 Excellent, 4 Good, 3 Fair, 2 Poor, 1 for the worst. As with the recommender of content, with the recommender questions were published online using Google Docs2 and Amazon Mechanical Turk3.

A total of 76 surveys were answered, and from them 31 were selected for been fully answered and with the verification question correctly answered (this question was included in order to discard surveys answered at random), with an acceptance rate of 40.7%. Of those polled, 80.65% were male and 19.35% were female, with an average age of 30 (? = 7.48). More details can be observed on tables II and III.

For survey questions concerning the validation of the model, shown in tables IV, V and VI, we have:  ? Regarding the degree of relationship of the URL of the consultation sessions, 13% consider it is excellent, 49% consider it good, 30% consider it average and 6% bad.

Positive results for this question (excellent and good) exceeds the 50% the opinion of the respondents.

? For the question regarding the relationship of the text of the URL of the recommended websites, more than  2An online tool that offers a form publishing service http://docs.google.

com.

3A croudsourcing tool that allows people to work on assigned tasks http: //www.mturk.com.

Genre Education level Main activity Method for defining the topic of a text Male 80.65% High school 19.35% Employed 61.29% Read first sentence 0%  Female 19.35% Technician 32.26% Freelance 22.58% Read first paragraph 29.03% Other 0% Professional 41.94% Unemployed 0% Read full text 45.16%  Other 6.45 Home 0% Search for common words 25.81% Student 16.13% Other 0%  Table II GENRE, LEVEL OF EDUCATION, MAIN ACTIVITY AND METHOD FOR DEFINING THE TOPIC OF A TEXT OF THOSE POLLED.

Internet daily usage Navigation purposes Ability to browse the web No lo usa 0% Search for information 77.42% Excellent 74.19%  0 - 3 h 17.24% News 87.10% Good 25.80% 4 - 6 h 31.03% Entertainment 90.32 Average 0% 6 - 9 h 41.38% Work 93.55% Poor 0%  10 - 12 h 10.34% Study 41.94% The worst 0%  Table III INTERNET DAILY USAGE, NAVIGATION PURPOSES AND ABILITY TO BROWSE THE WEB OF THOSE POLLED.

Score Relationship of URL Relationship of content x? ? % x? ? %  Excellent 0.83 0.98 3.27 1 0.63 3.23 Good 5.67 3.83 22.22 8.17 7.14 26.34  Average 10.83 6.43 42.48 12 4.82 38.71 Poor 6.33 4.72 24.84 6.83 3.92 22.04  The worst 1.83 2.23 7.19 3 2.28 9.68  Table V AVERAGE OF THE USERS SCORES OF THE RELATIONSHIP OF THE URL  AND THE CONTENT OF RECOMMENDED WEB SESSIONS.

Score Relationship of URL Relationship of content x? ? % x? ? %  Excellent 0.33 0.52 1.08 1 1.1 3.23 Good 8.5 3.73 27.42 7 5.83 22.58  Average 13 4.69 41.94 13 4.98 41.94 Poor 7.5 4.46 24.19 7.83 3.54 25.27  The worst 1.67 1.97 5.38 2.17 2.64 6.99  Table VI AVERAGE OF THE USERS SCORES OF THE RELATIONSHIP OF THE URL  AND THE CONTENT OF WEB SESSION QUERIES WITH THE RECOMMENDATIONS.

60% answer it in a positive way (6% excellent, 55% good), while 25% thinks this relationship is average and 11.6% that is bad.

? For the question about the relationship between the text of the URL of the query and the recommended web pages, the opinion of respondents is as follows: excellent 13.3%, good 46.6%, average 28.33%, bad 10%.



VII. CONCLUSIONS AND FUTURE WORK  In this paper, a web session recommender was proposed, using the navigation data of an university community.

Preprocessing steps are shown towards representing web sessions in a vector space model, that is employed for  extracting clusters and association rules and to create a recommendation model for future users.

The navigation dataset is varied and complex as it is formed from the online activity of a heterogeneous academic community, so an analysis of these data is complicated, as well as to find groups and association rules in sessions. It was verified experimentally that the best Bisecting K-Means clustering?s criterion function was H2 and the number of clusters was 30.

The supervised validation suggest that users generally find it satisfactory the relationship between the text of the URL for the query and recommendation sessions. More than 50% of respondents believe that the query URL are related, then the session has some sort of consistency with the data that was exploring the user at the time that this was generated. Regarding the recommendations, more than 60% of respondents believe that there is a relationship between the URL of the content of the recommendation.

Finally, about 60% of respondents have a favorable opinion regarding the relationship of the URLs of the query with the recommendation.

The quality of the recommender can be improved testing other clustering algorithms, including content analysis using web content mining, or using a hybridization alternative using content, usage and structure web mining. The model can be extended in order to be adaptive on time using an unsupervised clustering algorithm on the number of clusters.

Also, the validation method can be improved asking to a higher number of users and selecting more evaluation topics.

