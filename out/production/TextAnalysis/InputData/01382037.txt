

Proceedings of the Third Intemational Conference on Machine Laming and Cybemetics, Shanghai, 26-29 August 2004  A NEW ALGORITHM FOR MINING FUZZY ASSOCIATION RULES  YA GAO?, JUN MA: LIN MA)  School of Comp. and CO?. Eng., Southwest Jiaotong University, Chengdu, Sichuan 610031, China School of Electrical Engineering, Southwest Jiaotong University, Chengdu, Sichuan 610031, China  Noah China Pharmaceutical Group Corporation, Shijiazhuang, Hebei 050051, China E-MAIL. ygao7411 @sina.com  I    Abstrad: In this paper, we introduce a new algorithm for mining  Puzy association rules by removing redundant fuzzy assofiation (RFA) rules. Firstly, we analyze some properties of  association NIS and give the definition ut RFA rules.

Secondly, using degree of implication on fuzzy implication operator, we introduce a new algorithm to mine fuzzy association rules from frequent itemsets. Finally, an example is given to illustrate our idea.

Keywords: Data mining; association rule; fumy implication operator  1. Introduction  Data mining, known as knowledge discovery in database (KDD), is regarded as a non-trivial process of identifying valid, novel, potentially useful, and ultimately understandable knowledge in large scale data [91.

Association rules mining has become a focal point of research and applications in data mining since Agrawal er al. proposed an approach to discover Boolean association rules for the so-called ?market-basked problem? [l].

Formally, as defined in [Z] the problem is stated as follows: Let I = ( i , , i  =..., i m )  be a set of literals, called items, D be a set of transactions, where each transaction T is a set of items such that Td. A unique identifier TID is given to each transaction. A transaction Tis  said to contain A,  a set of items in I, if A c  T. An association rule is an implication of the form ? A a B ,  where A d ,  ELI, and AnEJ =@ .

Usually, an association rule A J B  can be obtained if its degree of support and confidence is greater than or equal to the pre-specified threshold respectively, i.e. Dsupp(AaB) = IABMDI 3 Minsupp,  and DconflA3B) = IABMAl 3 Min-conf, where IAl is the number of transactions that contain A, and IDI is the total number of transactions in database D.

In recent years, there have been many attempts to improve the classical approach [2,15, 171. Since real world  applications usually consist of quantitative values, mining quantitative association rules have been carried out by partitioning amibute domains and then transforming the quantitative values into binary ones to apply the classical mining algorithm [IS]. However, using the classical approach for partitioned intervals may lead to the problem of sharp boundaries for intervals [lo].

In dealing with the ?sharp boundary problem? in partitioning, fuzzy sets, which can deal with the boundary problem naturally, have been used in the association rules mining domains [3,&S, 141. Thus, a fuzzy association rule is understood as a rule of the form A-B where A and B are now fuzzy subsets rather than crisp subsets. The standard approach to evaluate the significance of fuzzy association rules is to extend the definition of well-known support and confidence measures to fuzzy association rules: Dsupp(AaB)=( E A(x)@BCy)ylDI, DconflA*B)=( E A(x)@B(y)yEA(x), where A(x) and BCy) denotes the degree of membership of the element x and y with respect to the fuzzy set A and B respectively, 8 is a t-norm [lll.

However, as proved in [ll], these two extended evaluations entail properties that might appear questionable. For example, we consider a rule ? A - B  , where A is perfectly associated with B, which means that A(x) = B ~ J )  for all tuples(x, y ) e D .  Of come,  we would expect this rule to have: DconflA-B) = 1. However, since a 8 U c (I if ?8 is not idempotent (i.e. C3 is not min), we usually have DconflAaB) = (ZA(x)@BCy)YEA(x) < 1.

As an alternative, Chen et al. [7] has introduced the measure of degee of implication (Dimp), in which fuzzy implication operators are used, to evaluate the strength of association rules from a more logic-oriented viewpoint.

Compared with Dconf, the discovered rules carry more information of datahase because Dimp considers every transaction of the database to get the Dimps. However, this leads to plenty of computation caused by scanning the database. In [7], to improve the performance, the t-norm and FIO are confmed to satisfy:  &7803-8403-2/04/520.00 GI22004 IEEE  mailto:sina.com   I+T(a,b)- a = FlO(a, b) (1)  . where FIO is the abbreviation offiuy implication operator which is extensively studied in [4,5, 12, 13, 161.

In this paper, we will tackle the problem of mining fuzzy association rules by FIOs and generalize t-norms from a more general viewpoint, which means we can select generalized t-norms and FIOs more freely without the restriction of (1). The remainder of this paper is organized as follows:  In section 2,. we give the definition of redundantfizzy association (RFA) rules, and introduce a new algorithm of mining fuzzy association rules from frequent itemsets. In section 3, experimental results are gived to show the performance of the proposed algorithm. Section 4 is the conclusion.

2. Fuzzy Association Rules and A New Algorithm  2.1. Problem statements  Let I = (I&, ..., IJ be the item set where each Zj(1Gj <m)  is an attribute of the original quantitative dataset D with domain A and several fuzzy sets on. A associated with Zj . If each Zj is extended by its fuzzy set, we can get the extended attribute set If from I. Using the corresponding membership functions defmed with each fuzzy set, the original quantitative dataset D is changed into a fuzzy dataset Df. Given fuzzy dataset DJ =/I <, t2 , .  ..,t./ with 0, the discovered rules are of the form: A-B, where t , ( l<i<n) is a transaction in Df, A d / ,  B ~ J  A n B  = 0, and AWE do not contain any two items that are associated with the same attribute(for instance, AuB will not contain ?Age young and Age old?). Like Boolean association rules mining, A is called the antecedent of the rule and B is called the consequent of the rule. An example of such rules is: ?age young* monthly-income high?.

Now, the measures of Dsupp and Dimp are defined as follows: For any itemset A = (aJ,a2, ..., a p ) c  If, the degree of support for A with respect to the i-th transaction, Dsuppi(A), can be obtained as:  Dsuppi(A) = T(alvalb _. .,api) (2) where ajiis the fuzzy value of ajfor the i-th transaction,  aji E [0,1], I G i G n ,  I C j G p ,  and T represents a generalized t-norm [ 1 11. When p = 2, T can take the normal forms such as T(a,b) = min(a,b), T(a,b) = a x b and so on.

The generalized t-norms is researched in [16].

The degree of support of A for the whole Dfis defined as:  Proceedings of the Third Intemational Conference on Machine Laming and Cybemetics, Shanghai, 26-29 August 2004   where I Df I is the total number of transactions in Df,which is equal to n, the number of transactions in the quantitative database D.

The degree of support of the rule A=+B for the whole Dfis defmed as:  lD,l  where U is the union operator for fuzzy sets. Dimp is used to measure the logic strength of an association rule.

Specifically, given the rule of A*B, Dimpi(A*B) is the degree of implication of A*B for the i-th transaction.

Dimp(A*B) is the degree of implication of A*B for the whole Dj.

Dimpi(A* E )  = FlO(Dsuppi(A),Dsuppi(B)),  2 Dimp , ( A  =) E ) ID,  I  (5) Dimp ( A  E )  = I=?  Based upon the notions of Dsupp and Dimp, a rule A* B is strong fuzzy association rule if 1. Dsupp(A=~B) > Min-supp; 2.  Dimp(A*B)3Min_imp;  where Min-supp and Min-imp are the thresholds defmed by users. Since the rules in consideration are those whose degrees of support and implication are greater than or equal to the pre-specified Min-supp and Min-imp, straightforward mining algorithm could be obtained easily.

It is basically composed of two phases: generating ail frequent itemsets from Dfbased on Apriori algorithm, then generating all rules from frequent itemsets by scanning and calculating Dimp for each other.

This straightforward algorithm is easy to understand and implement, hut the disadvantages g e  also obvious: in the rule-generation step, the algorithm need to scan many times, which is very time-consuming. Furthermore, the number of all candidate rules could be too large due to the fact that given a frequent k-itemset, which includes k items, we will have 2?2 candidate association rules. Our effort is focused on the reducing of the number of candidate rules and thus improves the whole computing efficiency.

For this purpose, redundant f i zzy  association( RFA) rules are defined and an new algorithm are put forward in next    Proceedings of the Tbird Intemational Conference on Macbme Learning and Cybemetics, Shanghai, 26-29 August 2004  subsections.

2.2. Redundant Fuzzy Assuciatiun(RFA)Rules  Theorem 1: Given Min-supp and Min-imp, if A a B u C  is strong fuzzy association rule, then A*B and A-C will be strong fuzzy association rules.

Proof: Because A ~ B u C  is strong fuzzy association rule, we have Dsupp(AJBuC) 3 Min-supp and Dimp(A*BuC) 2 M i n  imp. Then, Because  t-norm [16]: T(x,,x,  ,..., x,) 5 T(xI,x2 ...., xn.k) (n > k 3  0), (1) According to one of the properties of generalized  3 2 Dsvpp , I A v B )  2 T 1 A . B )  we have: Dsupp(A*B) = ji, ,-, I D ,  I I D ,  I  2 T ( A , B , C )  2 Dsupp , ( A  U B U C ) < i l  , = I  I D ,  I I D ,  I  = D s u p p ( A - B m  3 Minsupp, and  Vu, b, CE [O, I], b 3 c (2) According to one of the properties of FIO 1131:  FlO(a, b )  2 FIO(u,c), we have:  2 FIO (DSUPP i ( A ) . T ( D s u ~ ~  i ( B ) , D s u ~ ~  i (C) ) ) ,> t i l  =Dimp(AJBuC)  >Min imp.

From (1),(2), we can prove that A a B  is strong fuzzy association rule, and A*C can be proved the same way. W  Therefore, if the association rule of A=SuC has been obtained to be strong rule, we will obtain the association rules of A a B ,  and A-C as well, and not have to compute the Dsupp and Dimp of them. We call this kind of rules redundantfuzzy association(~A) rules as formally defined bellow:  Definition 1 Given the set of extended fuzzy attributes A,B,C, and user defined threshold Min-supp and Min-imp.

FEZ;, a,mriitinl? rules A+B and A a C  are called redundant fuzzy association(RFA) rules if there exists a strong fuzzy association rule of AqBuC.

Using Theorem 1, if a fuzzy association rule has been measured to be strong rule, all of its RFA rules are strong rules as well, which means we will not have to check the Dsupp and Dimp of them. Therefore, we can reduce the searching space of candidate rules accordingly.

Concretely, provided we have obtained the frequent itemsets L = /L,,&, ...,L,J. where Lk(l<k<m) means that LA contains k-items. m is the maximum value of k. The  I D f  I  algorithm will be executed as follows: First, we begin to scan the database to calculate the Dimps of the candidate association rules in L, and obtained the strong rules in Ln.

Then, after removing the RFA rules from the candidate rules in L-i according to the strong rules obtained, the database is scanned the second time to calculate the Dimps of candidate rules in L-I and thus the strong rules in L-I are obtained. This procedure will be executed iteratively until the strong fuzzy association rules in Lz are obtained.

The algorithm proposed in next subsection will use this method of removing RFA rules to reduce the searching space and thus improve the computing efficiency. The main function of the algorithm is to generate all strong fuzzy association rules from frequent itemsets, and there will occur m-1 database scans. The details of the algorithm will be given in next subsection.

23. A New Algorithm  The whole procedure of finding fuzzy association rules consists of two steps, namely, finding all frequent itemsets in @and generating all strong fuzzy association rules, the latter of which is the main part of the algorithm proposed.

The details of the algorithm are shown in Algorithm I.

Algorithm 1: generating all strong fuzzy association rules based on frequent itemsets Input: L frequent itemsets in Of, FIO some fuzzy implication operator, m: the maximal possible value of "k" in the frequent k-itemsets which is not null, Min-imp: minimum implication threshold.

Output: n :sets of strong fuzzy association rules.

Note: &denotes the frequent k-itemsets.

Method:  fur (k =m; k >= 2; k--) fur each candidate fuzzy association rule f i n  Lk  if(f is RFA rule) then remuve f from Lk  else if(Dimp(f) 3 MinJmp) theninsertfinto n  end if end for each  end for  2.4. An Example  Given a quantitative dataset and some proper membership functions, we can get the extended fuzzy dataset Dfshowed in Table 1. T(u, b )  = min(a, b), FlO(u,b) = I- a + axb, Min-supp = 0.3, and Min-Dimp = 0.8 will be used. (In the following, AY = Age Young, AO= Age old, MbMonthly-income low, MM=Monthly-income high,     Proceedings of the Thitd Intemational Conference on Machine Learning and Cybemetics, Shanghai, 26-29 August 2004  AY nMMaCLH  CLMredit-limit low, CLMSredit-limit medium, CLHSredit-limit high.)  0.92  Suppose that we have got the frequent itemsets L listed in Table 2 and Table 3. The maximum value of k in this example is 3.(Frequent itemsets can be obtained by means of Apriori algorithm or any other proper algorithm.)  AY~CLH~MIK  AOu MLHu CLH 0.35  0.85  Generating strong fuzzy association rules from h: For all the frequent itemsets in h, the Dmps of all  potential rules will be calculated according to Eq.(5). For example, Dimp(Age ypung-monthly-income highucredit-limit high) = ((1-0.5 + 0.S~in(l,1))+(1-l+lxmin(0,0.25)+(1-0.3+0.3~ min(1, 1)+(1-0.5+0.5xmin(O.25,0.75)+(1-0.7+0.7~ min(0.75, 0S)p = 0.655. All the strong rules found in hare Listed in Table 4.

A 0  3 M I H n  CLH 0.89 AO&&CLHC  Finding Strong Fuzzy Association rules From h: The candidate rules in h will be checked to prune the RFA rules accordimg to our algorithm. For example, the Dimps of Age old=xnonthly-income high and Age oldacredit-limit high will not he computed as the rule of Age oldsmonthly-income highncredit-limit high has already been obtained as strong rule. The remainder of the strong association rules from h are Listed in Table 5.

0.96  C L h A Y MMaCLH CLH*MM  AOnCLH3MIH  3. Experiments  To illustrate the effect of ignoring RFA rules, we will compare the performance of our new algorithm with that of the other method Algorithm 2. The only difference between our new algorithm and Algorithm 2 is that the latter do not delete RFA rules before scanning the database when generating association rules. In order to evaluate the effectiveness of our new algorithm. we applied it as well as Algorithm 2 to three real life databases. The first one is ?BcdyFat.txt? having 15 quantitative attributes and 252 transactions [19]. The second one is ?Computer Activity databases? having 13 quantitative attributes and 8192 transactions [20]. m e  third one is ?pyrim.arff? having 28 quantitative attributes and 74 transachons [ZO]. These two algorithms were implemented on PC with CPU PIII 866, RAM 384M. Windows 98, and Visual C++ 6.0.

From Figure 1,  the experimental results show that the number of rules in our new algorithm is much less than those of Algorithm 2, which means, with the increasing of the number of attributes, the number of RFA rules is growing sharply. What we must emphasize is that, in our new algorithm, we can get the same number of rules as Algorithm 2 does, just by means of recovering all the RFA rules from the strong rules obtained.

From Figure 2, we can observe that the executing time of our new algorithm is much less than that of Algorithm 2.

Especially, the algorithm proposed in this paper will have remarkable advantages over Algorithm 2 as soon as the number of attributes gets to a certain amount. This is because the percentage of RFA rules in the whole strong rules will become more and more as the number of attributes increases, thus removing RFA rules will save plenty of time as well as memory.

0.91      m ,  02 0.25 0.3 0.35 0.4  M"a-0fS"f.F.m  Figure 1 .  Rules Generated, where ... is for the new algorithm, and -XIS for Algorithm 2  4. Conclusions and Future work  In this paper, we give the definition of RFA rules and analyze some properties of them. Then, using the method of deleting RFA rules, we presente a new algorithm to deal with the problems of generating fuzzy association rules f" quantitative databases. The experiments have shown that the algorithm proposed has good performances.

Our future work is focused on two points: 1. Further research on RFA rules to reduce the  computing time, and applying the new algorithm to quantitative databases with fuzzy taxonomies.

2. As there are many kinds of fuzzy implication operators, the task of researching the differences among FlOs, when used to defme the Dimp, is to be done. We will investigate and classify the Flus for improving the efficiency and correctness of measuring the significance of fuzzy association rules.

