Re-projection of Terabyte-Sized Images

Abstract?This work addresses the problem of re-projecting a terabyte-sized 3D data set represented as a set of 2D Deep Zoom pyramids. In general, a re-projection for small 3D data sets is executed directly in RAM. However, RAM becomes a limiting factor for terabyte-sized 3D volumes formed by a stack of hundreds of megapixel to gigapixel 2D frames. We have benchmarked three methods to perform the re-projection computation in order to overcome the RAM limitation.

Keywords-terabyte-sized images; re-projection; Deep Zoom

I.  INTRODUCTION With the current limitations of desktop computers in terms of RAM, storage and computation power, the Deep Zoom 1 paradigm [1] has been frequently adopted for visualization of large 2D image data sets.  In this work, we address the problem of re-projecting 3D data sets to deliver multiple 2D views using the Deep Zoom paradigm.

The Deep Zoom paradigm is based on the multi- resolution pyramid representation of 2D images with large pixel counts (e.g., gigapixels and more) for efficient transmission and viewing [1]. Extensions to the Deep Zoom paradigm include visualizations of 3D medical image volumes and other types of spatial and temporal information. We extended the past research by designing efficient pyramid-to-pyramid re-projection algorithms in order to overcome RAM limitations and to enable viewing terabyte sized 3D images from multiple viewpoints.



II. RE-PROJECTION Figure 1 illustrates the two main re-projection approaches  of going from viewpoint #1 to viewpoint #2 (see the green arrows). We compared three implementations to generate pyramids of re-projections. The first one is a re-projection in RAM where the input 3D volume is in RAM and the output 2D frames are generated one after another. The second one is a re-projection based on accessing disk and RAM holding one 2D frame of the input 3D volume and one of the output 3D volume. The re-projection uses file I/O to read-in input 2D frames incrementally and to copy one column/row from input to output. The third one is a re-projection based on copying values from input pyramid tiles to output pyramid tiles where RAM holds only one row of input tiles and one   1Any mention of commercial products or reference to commercial  organizations is for information only; it does not imply recommendation or endorsement by NIST nor does it imply that the products mentioned are  necessarily the best available for the purpose.

row of re-projected tiles at the highest resolution. It takes advantage of the fact that pyramid tiles with the same index across multiple 2D pyramids contribute to one output pyramid tile along the perpendicular projection. After the highest resolution tiles have been obtained, tiles can be stitched and the image progressively down-sampled to generate coarser level pyramid tiles. An example projection is illustrated in Figure 2 as we applied the algorithm to a 3D volume acquired by Scanning Electron Microscopy (SEM- EDS). The volume consists of 4,890,627 input and 4,976,641 output pyramid files in 32,768 and 184,320 folders.

Figure 1.  Viewing 3D image volumes from multiple viewpoints using the  Deep Zoom pyramids of 2D image cross sections,   Figure 2.  Spatial XY view (left) and spatio-spectral XS view (right) of a historical artifact called Moche imaged by electron microscopy. The 3D XYS volume contains 2048 spectral frames with spatial dimensions of  11,520 x 9,984 pixels per frame.



III. SUMMARY We compared the RAM and CPU requirements of the  three re-projection methods applied to 2048 frames of 500x500, 1000x1000 and 2000x2000 pixel sizes. Our time benchmarks document that the pyramid-to-pyramid (a) achieves a compromise between the RAM and speed tradeoffs of the other two methods and (b) enables handling terabyte sized images on a variety of hardware platforms.

