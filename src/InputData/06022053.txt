

Abstract?Association rules may exist in many transaction datasets. It is valuable if those rules can be extracted. During the extraction process, efficiency and effectiveness are the main concerns. This paper proposed the concept of association rule discovery from dataset containing predetermined decision itemset (PDI) and rare transaction. PDI is a set of items that users are interested in, while rare transaction is a subset from a transaction set where items in the subset contains association rules with very high confidence and very low support, and that the rest transactions show zero confidence for the same association rules. Such association rules, due to their low support value, can be easily ignored by traditional association rule mining approaches. We analyzed those two scenarios and presented the corresponding mining algorithm, i.e., ARM-PCI-RT through an application in optimizing producing environment as an example.

An optimized producing environment is a key decision-making process in bio-chemical industry production. Due to the complex mechanism of bio-chemical production, understanding the favorable production environment is very difficult. On the other hand, a great amount of data has been accumulated through industry production over years. It is possible to find out valuable association rules that may contribute to the improvement of production efficiency and quality through data mining and knowledge discovery.

Keywords- association rule, data mining, predetermined item, rare transaction

I.  INTRODUCTION Traditionally, association rule mining is to find out  association rules that satisfy the predefined minimum support and confidence level from a given database [1, 2]. Formally, let I={i1, i2, ?, im}and I is an itemset, and T is a transaction set which has an itemset I. Each transaction in T is a record identified by TID. For any given transaction set T, association rule is usually presented in the form of X=>Y, here X ?I, Y ?I, and X ?Y??. X is called the antecedent of the rule while Y is the consequent of X. The confidence level for the rule X =>Y on the base of set D is defined as c% which means that out of all transactions in D there are c% records include both X and Y, while the support level of rule X => Y is defined as s% that means there are c% out of all transaction records include X?Y.

Confidence reflects intensity of the rule and support reflects frequency of the rule. Rules whose support level is higher than the predefined support level are called frequent rules and both confidence level and support level are high than predefined ones are called intensive rules. Generally, the task of mining association rules is usually decomposed into two parts: to find  frequent itemsets whose occurrences exceed a predefined threshold in the database, and to generate strong association rules from those frequent itemsets decided by a minimal confidence.

Because many classic association rule mining algorithms, including, Apriori, need to scan whole database many times, the algorithm efficiency is negatively affected, which makes them impractical to dataset where large data volume is present [3, 4]. Therefore, recent researches on association rule mining try to improve this situation through various ways, including data preprocessing, item pruning, etc.. This paper introduces association rule mining from database with predetermined decision itemset and rare transaction. The corresponding algorithm and application is illustrated.



II. PROBLEM FORMULATION  A. Association Rule Mining with Predetermined Decision Itemset (PDI) There are two scenarios that specific attention should be  given when mining association rules from dataset. The first one is what we call Association Rule Mining with Predetermined Decision Items, or ARMPDI. In ARMPDI, let I = {i1, i2, ?, im} and T = {t1, t2, ?, tn}, where I and T are itemset and transaction (record) set respectively. For any given rule R mined in the form of X=>Y, the antecedent of the rule R (i.e., first part of the rule, X) or the consequent part of R (i.e., Y) must contain an predetermined decision itemset or items Ip, namely, one of the following Ip ?X or Ip ?Y must hold. Here X?I, Y?I, and X?Y??.

Practically, many applications requiring decision-making are only interested with a few items while put little attention to others because the latter are valueless in terms of decisions made. Therefore, those items can be pruned to speed up the process of association rule discovery.

For association rules mined by ARMPDI, support and confidence thresholds also need to be satisfied to derive strong and valid ones. Namely, for any rule Ri that is strong and valid, it must satisfy the minimum support (mini_sup) and minimum confidence (mini_conf) requirement, where  mini_sup (X=>Y)= C(X?Y)/n mini_conf = C(X?Y) / C(X) where C(X) and C(Y) is the count of transactions (records) happened in T and n is the size of the transactions.

B. Association Rule Mining for Rare Transaction Rare transaction set is an extracted subset of transactions  (records) from the original universal transaction set T. The approach proposed here for mining association rules from rare transaction is referred to as Association Rule Mining for Rare Transaction, or ARMRT. In ARMRT, let I = {i1, i2, ?, im} and T = {t1, t2, ?, tn}, where I and T are itemset and universal transaction set, respectively. Each item in I can have binary value 1 or 0 indicating the corresponding transaction happens or not. An extracted subset Te from T can be obtained where, in the context of this study, Te also needs include a predetermined itemset (ITe) from itemset I and ITe = {ie1, ie2, ?, iek}. Let T?e be the complementary set of Te, and I?Te be the complementary itemset of I, the following formulae hold,  Te ? T?e = T, Te ? T?e = ? ITe? I?Te = I, ITe ? I?Te = ?  Rare transaction set extracted from T has the following characteristics, 1. For each transaction in Te, the value of each item in ITe is the interesting one (0 or 1); 2. For the rule having items ITe in its condition part or result part, each of the rest items for each transaction in Te has value 1 or 0.

3. For the rule having items ITe in its condition part or result part, each of the rest items for each transaction in T?e has value 0 or 1.

4. The transaction count of Te (CTe) is usually much less than that of the universal transaction T (CT), that is CTe << CT.

Therefore, the extracted records of Te are rare compared with the original universal records in T.

The above definition formally presents a transaction set from which association rules with very low support value and very high confidence value can be mined while traditionally those rules can be easily ignored due to their low support value.

In other words, ARMRT is intended to mine association rules which have very low support value and very high confidence.

TABLE I.  TRANSACTION DATA IN TABLE FORMAT  id A B C D 1 1 1 0 1 2 0 0 1 1 3 0 1 1 1 4 0 0 1 1 5 1 1 1 1 6 0 0 0 0 7 0 1 1 1 8 0 0 0 1 9 0 0 0 0  10 1 0 1 1   In TABLE I, the support for rule ??B?>?? is 0.2 (2 out of 10) and its confidence is 100%. When the minimum support is set to 0.25, such a rule can be easily filtered out. When further analyzing the data, we find that it is most likely that Item D happens if A and B happen. Therefore the rule ??B? >?? most likely holds, though its support value is not high.



III. ALGORITHM Both ARMPDI and ARMRT take the advantage of item  pruning in the process of mining association rules. For a given transaction T and the itemset I, the algorithm is intended to find ?reason and result? association rules from T in the form of ?reason->result?.

A. ARMPDI ARMPDI extends Apriori to obtain association rules by  pruning frequent items without predetermined item(s).

Therefore, the computing efficiency can be much improved.

Let I be the itemset to be mined and I includes m predetermined items, the following steps are involved in the association rule mining,  1) The m predetermined items can be merged into one item if m>1. For example, our predetermined items include A and B, and that both A and B appear is our interested topic. A new one called decision item ZA+B can be derived based on the value of A and B items in transaction T  (with n items) based on the following rule: the value of ZA+B = 1 if that of A and B is 1 and ZA+B = 0 otherwise. Therefore the target transaction can always be processed to get a new transaction set (T?) with item size equal to or less than that of T; 2) Calculate 1-frequent item from T?. If the support of item it (t=1, 2, ?, n-m+1) from T? does not satisfy the minimum support threshold, then goto 5); else goto the next step; 3) Calculate k-frequent items (k?2) from T? by self- connection approach based on previous k-1 frequent items.

Note that all k-frequent items must contain decision item Z, by which most items can be pruned to save computing time and space in the higher frequent item processing.

4) Calculate confidence support for k-frequent items; 5) End  B. ARMRT 1) Same as that in ARMPDI; 2) Calculate 1-frequent item from T?. If the support of item it (t=1, 2, ?, n-m+1) from T? satisfies the minimum support threshold, then process the data through ARMPDI; else if the support of item it (t=1, 2, ?, n-m+1) from T? satisfies the second minimum support, goto 3); else goto 6); 3) Calculate relative support (supr) value for 1-items. If supr satisfies the threshold, goto 3); else goto 6); 4) Calculate relatively k-frequent items (k?2) from T? by self-connection approach based on previous relatively k-1 frequent items.

5) Calculate confidence support for relatively k-frequent items; 6) End  As noted in the above ARMRT description, a second minimum support threshold is defined to filter those association rules that have too low support. Those itemsets that do not satisfy minimum support threshold but still satisfy the second minimum support threshold can be obtained through ARMRT.

In addition, relative support (supr) value is introduced to reflect the support canopy for itemsets. Relative support is defined as the maximum value among the the occurrence of all the items     to the occurrence of any single item. For the data presented in Table 1, the relative support (supr) of Itemset ?ABD? has value of 0.66 (2/3) because the occurrence of each single item (A, B and D) is 3, 4, 7 while the occurrence of ?ABD? is 2. Under such a condition, the rule ?AB->D? can be mined if the minimum support is set to 0.25 and the second minimum support is set to 0.2 while the relative support is set to 0.6.

This paper presents an approach of combining ARMRT and ARMPDI which is referred to as ARM-PDI-RT algorithm. All mined association rules mined by ARM-PDI-RT algorithm must contain an predetermined decision item set Z. In the following implementation, we suppose that Z is in the second part.

C. Algorithm implementation Based on the previous analysis, the following code defines  the algorithm implementation of ARM-PDI-RT which is capable of discovering association rules from dataset where predetermined items and rare transactions may exist.

part (a) L={?} //define a frequent itemset L with original value  set to ? L1 = find_frequent_1-itemsets(T?Z); //get 1-frequent  itemset if  (L1 = ? and second_sup(L1)>second_sup) goto part (b)  //if L1 does not satisfy the minimum support requirement //the following will generate candidate k-frequent itemset  (k?2) Ck for (k=2; Lk-1 ?? and k?n; k++) { // the following function apriori_gen for computing Ck  must include item Z and thus the size of higher-frequent itemset through self-connection can be greatly decreased. This also significantly decreases database scanning time as well.

Ck = apriori_gen(Lk-1, s%, Z); for each transaction t ? T {//scan T getting the  happening count of Itemset Ct Ct = subset(Ck,t); for each candidate c ? Ct count[c]++; } Lk ={C?Ck |count[c]/n?s%} // Lk satisfies the  minimum support requirement if  (Lk != ?)  // Lk has frequent itemset  L= L ? Lk else goto part (b) //if Lk does not satisfy the minimum  support requirement } return L // the returned interesting frequent itemset  part (b)  Lr={?} //define a rare transaction itemset Lr with original value set to ?  //the following will generate candidate relative k-frequent itemset (k?2) Ck  Ck = apriori_gen(Lrk-1, s2%, Z); for each transaction t ? T {//scan T getting the  happening count of Itemset Ct Ct = subset(Ck,t); for each candidate c ? Ct count[c]++; Lk ={C?Ck |count[c]/n?s%} // Lk satisfies the  minimum support requirement if  (Lk != ?)  // Lk has frequent itemset  L= L ? Lk else goto part (b) //if Lk does not satisfy the minimum  support requirement } return L // the returned interesting frequent itemset  Note that candidate k-frequent itemset is processed from k- 1 frequent itemset and predetermined item (Z) filtered by the support threshold value s%. Only those candidate k-frequent itemsets (Ck) that satisfy minimum support value (i.e., count[c]/n?s%) can be returned as k-frequent itemset.

When Z does not satisfy the second minimum support requirement or relative minimum support requirement, the computing complexity is O(0) because no itemset will be returned and the computation stops. Since Z is always included in each returned itemsets, as it is a predetermined item, those itemsets that do not include it can be discarded to avoid higher itemset calculation. Classical Apriori computing candidate 2- frequent itemsets has a computation complexity of O(n2) (namely,?n-1?*n/2) while the above method only has O(n).

The following example shows a bio-chemical manufacturing data. A particular product is manufactured under such environmental conditions, as controlled by item A, B, C, D, and E. Item E is a decision item. Suppose the minimum support value (s%) is set to 0.5. The process for computing association rules with predetermined item Z is illustrated here.

In Figure 1(a), the original dataset has a predertermined decision item Z which has support value 0.75. Since it is larger than the minimum support (0.5), the candidate 1-itemsets can be processed as shown in Figure 1(b). When applying the minimum support, the 1-frequent itemsets which include itemset A, B, C and E. For candidate 2-itemsets, only 3 itemsets can be derived as those must include item E (Figure 1 (c)). A candidate 3-itemset can be obtained by self-connection from the 2-frequent itemsets, which only has a single element.

In the end a 3-frequent itemset can be obtained.

(a) Original data  (b)candidate 1-itemset  (c) 1-freqent itemset  id items  itemset support  itemset support 100 A, C, D  {A} 2 (0.5)  {A} 2 200 B, C, E  {B} 3 (0.75)  {B} 3 300 A, B, C, E  {C} 3 (0.75)  {C} 3 400 B, E  {D} 1 (0.25)  {E} 3  {E} 3 (0.75)   (d)candidate 2-itemset  (e) candidate 3-itemset  (f) 3-freqent itemset itemset support  itemset support  itemset support {A, E} 1 (0.25)  {B, C, E} 2 (0.5)  {B, C, E} 2 {B, E} 3 (0.75) {C, E} 2 (0.5)  Figure 1.  Generation of frequent itemset

IV. APPLICATION  The above mentioned algorithm has been applied to practical applications. For example, we adopted it in the software of production data analysis module (in Chinese version) for a bio-chemical manufacturing company, Anhui Feiyuan Bio-Chemical Limited Corporation. Usually, bio- chemical manufacturing companies accumulate large data from their production lines. The data may contain valuable information. For example, one of chemical products, citric acid (CA), can be fermented in bio-chemical companies. To make CA, various factors such as environmental conditions and raw material processing requirement need to be well decided to satisfy the maximum output from CA production line. For a particular bio-chemical manufacturing company, it is a good practice to analyze existing dataset collected from production monitoring system and thus to extract favorable knowledge to help design production environment (e.g., temperature, pH, etc.) and appropriate raw material input. In such an application, the objective is clear: higher citric acid thickness (CAT) and converting rate from input material (CRIM) from CA production line. In other words, such a production line needs to design a condition that results in higher CAT and CRIM.

Therefore, the decision goal, high CAT and CRIM, can be taken as predetermined items in CA production dataset.

Another possibility of the dataset is that there exists rare transaction that can be mined to find valuable knowledge. This section presents a software tool that implements the proposed algorithm to find association rules.

The original dataset from CA production line is in the form of table as shown in Figure 2. There are dozens of factors that may affect the decision items. For example, pH (the third column in Table 1) is an important factor that must be considered. The type of production container (TPC) (the fifth column in Table 1) also affects the decision items. There are two categories of factors. The first one is numerical type (e.g., pH) which has continuous data value; the other is categorical type (e.g., TPC) that can have a few categories. We first apply discretization to numerical type based on domain expert and divide categorical type into binary items for each category [5].

The factors in the original dataset can be broken down to produce many more binary items. For example, the numerical factor OD can be grouped by the value line 0.5, meaning that  OD greater than o.5 will be an item (OD_1) and that smaller than 0.5 will be another item (OD_2) (Figure 3). For each transaction (record) in the original data, two items can be derived for OD factor. Since there are two factors to consider in the production, they can be merged to produce a single decision item (Z) with similar process of factor break-down. For example, the decision item (Z) can be made by a merging process from the break-down result of CA convert rate and CA thickness (TABLE II). Decision factors, CAT and CRIM, have numerical value and thus broken down to produce two items for each which are then merged to make a decision item Z.

The processed output of factor break-down and item merging is followed to undertake ARM-PDI-RT algorithm, which is integrated in our software tool. The result from the algorithm outputs association rule mining setting parameters and rules discovered. The rules output from the tool are organized in the order of itemset size. For example, the last but one line in Figure 4 indicates that CA sour production using juice maize_20 and material maize_5 can result in the decision item (high CAT and CRIM). The output rules can be examined by domain experts and used in production systems.

Figure 2.  Data format and data import      Figure 3.  factor break-down  TABLE II.  FACTOR BREAK-DOWN AND DECISION ITEM MERGING PROCESS  (a)                           (b)                   (c) Convert  Rate CA  Thickness  ?  High rate  Low rate  High CA  Low CA  ?  Decision Z  54.5 42.5 0 1 0 1 0 55.1 41.7 0 1 0 1 0 58.6 45.8 1 0 1 0 1 53.2 44.9 0 1 1 0 0 57.4 45.0 1 0 1 0 1  ?a?Original Data; ?b?Discretization result; ?c?Merged item   Figure 4.  Association rules found from dataset

V. CONCLUSION  An optimized producing environment is a key issue in bio- chemical industry production [6, 7]. Due to the complex mechanism of bio-chemical production, understanding the favorable environment is very difficult. A great amount of data  has been accumulated through industry production over years.

It is possible to find out valuable rules that may contribute to the improvement of production efficiency and quality through data mining and association rule mining. Attempts have been made to improve the efficiency and effectiveness of association rule discovery [8]. We adopted a different one which is suitable for particular dataset. By analyzing the feature of biochemical production dataset, this paper introduced the approach of preprocessing dataset by separating and merging environmental indexes and decision indexes. Based on the processed dataset, an algorithm called ARM-PDI-RT is presented with the intention to extract strong association rules. The proposed algorithm aims at mining association rules with predetermined determined itemset and rare transactions, thus the computation complexity is greatly increased.

We applied the proposed algorithm in practical use. By integrating the algorithm in bio-chemical data analysis module, it is possible to extract important association rules which can be easily ignored by traditional approaches. The discovered rules can be applied to help condition control during production process by bio-chemical enterprises and other similar areas.

