Bioinspired Algorithms Applied to Association Rule Mining  in Electronic Commerce Databases

Abstract ? Electronic commerce (e-commerce) has grown rapidly over the past years. Products, services and information of different types are offered daily for many Internet users.

Finding out an appropriate strategy to offer a product to each customer in a personalized fashion is the goal of a recommend- er system. This association between items is a task that falls under the umbrella of data mining, more specifically the area of association rule mining, or simply, association rules. This paper investigates the use of evolutionary algorithms and arti- ficial immune systems to build associations of items in real- world e-commerce databases. The performances of the evolu- tionary and immune algorithms for rule mining are compared to each other. A discussion is made in terms of a group of in- terest measures of associations and computational time neces- sary to learn the rules.

Association Rules; Evolutionary Algorithms; Data Mining; Artificial Immune System; Electronic Commerce; Recommender Systems.



I. INTRODUCTION It is surprising the increase in the amount of information,  products and services available nowadays. With increased bandwidth, the growth in the number of Internet access and new websites for small, medium and large companies has become an everyday reality. This results in a very competi- tive and more attentive market to customer needs, without forgetting to offer convenience and ease when it comes to closing a deal. As examples, one can mention a huge number and variety of travel packages (cruises, tours, ecotourism, etc.), cell phones, books, videos, DVDs, CDs, lab products, service providers, clothing, computers, shoes, etc.

Recommender systems are software tools designed to help Internet users taking decisions and choices, whether for products in an e-commerce, content in information portals, and content or people in social networks. For a recommenda- tion system to operate, it needs information about these items, e.g., products, services, people, etc., plus some knowledge about the users. After collecting all these data, intelligent algorithms capable of selecting from a portfolio of items, are used to choose those that are most relevant for each user at each situation.

There are different types of recommendation systems available commercially and scientifically [1]. For example, there are recommendations based only on the items and their description, known as content-based recommendation, there are recommendations based on scores given by users to  items, known as collaborative filtering, and there are rec- ommendations that aim to associate items based on con- sumption patterns, known as associative recommendations.

In the latter case to be investigated in this paper, the goal is to find, out of a set of transactions, those items normally sold together, for example, "those who buy bread also buy milk".

To solve such problems, it is necessary to employ an al- gorithm capable of mining such rules; that is, of finding the associations between the products bought by customers. The approach chosen in this paper is based on two different, but related, bioinspired algorithms [2], [3], [4]: an evolutionary algorithm, and an artificial immune system. Both types of algorithms are heuristic search methods, in the sense that some candidate solutions are initialized and manipulated iteratively until a satisfactory solution, according to a pre- specified quality measure, is found.

The paper is organized as follows. Section II briefly re- views recommender systems, and Section III reviews associ- ation rule mining. The proposed algorithms are presented in Section IV, and the results in Section V. The paper is con- cluded in Section VI with a general discussion and perspec- tives for future research.



II. RECOMMENDER SYSTEMS AND THEIR TYPES Given the current market scenario, recommendation sys-  tems are no longer a novelty and became part of several businesses, especially those that perform sales through the Internet, also known as electronic commerce or e-commerce [5], [6]. Recommender systems can improve the results of a business in various ways, such as converting browsers into buyers, increasing cross-sell, gaining consumer loyalty and increasing the average ticket [6].

The main problem a recommender systems (RS) solves is the match between a users? needs and the products and ser- vices to be recommended to him/her [1]. To this end, RS use one or more of the following techniques:  a) Content-based Recommendation: This technique performs a selection based on a content analysis of items in the user profile and crosses this description with the interests of users to establish whether or not an item should be recommended [7], [8];  b) Collaborative Filtering: This approach was developed to meet the open points of content-based approaches [7], [8]. It differs from content-based recommendation because it does not require an  1st BRICS Countries Congress on Computational Intelligence  DOI 10.1109/BRICS-CCI.&.CBIC.2013.36   1st BRICS Countries Congress on Computational Intelligence  DOI 10.1109/BRICS-CCI.&.CBIC.2013.36   2013 BRICS Congress on Computational Intelligence & 11th Brazilian Congress on Computational Intelligence  DOI 10.1109/BRICS-CCI-CBIC.2013.40     understanding or knowledge of the contents of the items, it uses mainly a set of evaluation grades the users attribute to the items;  c) Associative Recommendation: This approach takes into account a user rating matrix as transaction sets, while every transaction is a user?s rating set. It then generates frequent item sets using a frequent item sets generation algorithm, places the frequent item sets into a series of associative sets according to a user?s rating record, and performs collaborative filtering among associative sets so as to improve the accuracy and scalability of the algorithm [9].



III. ASSOCIATION RULE MINING Association Rules were originally proposed to assist the  strategic decision making of market managers. Their main objectives were to help deciding which items should be sold, to design sales strategies, and to organize advertisements, always aiming at maximizing sales and profit [10], [11].

Association rule mining, originally known as market-basket analysis, is one of the main data mining tasks [12]. It is a descriptive task that uses unsupervised learning and focuses on the identification of associations of items that occur to- gether in a given data set [13].

A set of items that occur together is defined as a transac- tion. In the scenario described in the original market-basket analysis, items in a transaction are those that were purchased together. An association rule is a rule of the form:  A ? C,  (1) where A and C are itemsets of products.

A is called the body (or antecedent part) and C is called the head (or consequent part) of the association: A ? C = ?, because it would be redundant for an item to imply itself.

The rule means that the presence of (all items in) A in a transaction implies the presence of (all items in) C in the same transaction with some associated probability [10].

Given a set of transactions T, it is interesting to generate all rules that satisfy two constraints:  ? Syntactic constraints: the number of items that ap- pear in a rule is limited; and  ? Support constraints: involve limitations in the num- ber of transactions in T that support the rule, with support being defined as the number of transactions in T that contain A and C simultaneously.

The problem with the previous definition is that the num- ber N of possible association rules, given a number d of items, grows with an exponential ratio, thus placing the prob- lem within the NP-complete set [10], [12]:  N = 3d ? 2d+1 + 1.  (2)  To illustrate how this scales, let us determine the value of N for growing values of d:  d N 5 180 15 14.283.372 100 5.1537752 x 1047  Therefore, it is compulsory to somehow filter or prune the association rules built before trying to analyze their use- fulness.

Confidence and support, proposed in [10], [11], are the most studied measures of interest in the literature of associa- tion rule mining, and were designed to assess the quality of a rule [13]. The support of an association rule is a measure of its relative frequency in the set of transactions:  ? Support(A ? C) = Supp(A ? C)???P(A ? C)	? ???  On the other hand, the confidence of a rule is a measure of the satisfiability of a rule when its antecedent part is found in T, that is, from all the occurrences of A, how many times C also occurs in the rule:  Confidence(A ? C) = Conf(A ? C) = P(A | C). (4)  While confidence is a measure of the strength of a rule, the support corresponds to its statistical significance over the database. One motivation for defining a threshold for the support comes from the fact that, for practical reasons, only rules above a minimum support threshold value are suffi- ciently interesting and useful [10].

Whilst applying an algorithm to a database is relatively easy, the real challenge lies in finding relevance in the knowledge extracted by this algorithm [19]. In the present case, the knowledge comes from the association rules gener- ated. Therefore, some researchers have been working to quantify the value or interest of a given association rule.

What it means to be useful or interesting is strongly depend- ent upon the application domain and linked to the user needs.

The well-known Apriori Algorithm and those that derive from it became standard for association rule mining in large databases. To discover the occurrence of frequent itemsets, it performs multiple iterations through the data [10], [11].



IV. EVOLUTIONARY AND ARTIFICIAL IMMUNE ALGORITHMS FOR ASSOCIATION RULE MINING  This section describes the evolutionary algorithms and artificial immune systems used for mining association rules in the present paper. It describes the representation used for the association rules, the main genetic operators (selection, crossover, mutation and hypermutation) and, finally, the algorithms implemented and evaluated.

A. General Concepts The intersection of A and C in a rule A ? C is always  empty [13]. The use of evolutionary and immune algorithms for mining association rules follows their original steps [14], [15]:  a) Definition of a representation for the candidate solutions (individuals or cells of the population): define the type of representation that will be used to encode each individual or each cell of the population;  b) Definition of an evaluation function: define the evaluation or fitness function that will be used to assess the quality of the rules proposed;     c) Definition of genetic operators: choose the genetic operators that will allow the variation of individuals or cells in the population.

In the context of evolutionary algorithms for association rule mining, there are two basic approaches to represent the rules: 1) Pittsburgh [16], and 2) Michigan [17]. The Pitts- burgh approach considers each individual in the population as a set of rules. This is suitable for classification problems, but the size of the chromosome may limit the number of rules generated [14]. In the Michigan approach each chromo- some represents a single rule and the entire population corre- sponds to the set. The Michigan approach has been most commonly used in association rule mining by means of evo- lutionary and immune algorithms [15], [18], [19], [21], [25].

The use of AIS for mining association rules follows the standard steps of the clonal selection algorithm, CLONALG, proposed and detailed in [20]:  ? Specify the population size N and randomly generate the initial population of immune cells.

? Compute the fitness value of each immune cell in the current population.

? Select the candidate cells for cloning.

? For each immune cell to be cloned, produce a num-  ber of clones proportional to the fitness of the cell.

? For each clone generated, a hypermutation process is  applied and then its new fitness computed.

? The immune cell population is updated by selecting  nc best clones of all generated.

? Return to the second step until the stopping criterion  is satisfied.

In the present paper the Michigan [24] approach is used,  i.e., each immune cell represents a single rule. The specific representation used here is described in the following.

B. Candidate Solution Representation The Michigan approach proposed in [24] was adapted  and used by [17] and [25] to generate association rules. In this proposal, each item is represented by two bits, as fol- lows: 00 means items belonging to the antecedent; 11 means items belonging to the consequent; and 01 or 10 means items not belonging to the rule. To illustrate this type of represen- tation, consider the candidate solution presented below. The resulting rule is B ^ E ^ H ? A ^ F. Note that, in this repre- sentation, items are always connected using the AND, (^), operator.

A B C D E F G H 11 00 10 10 00 11 10 00  The works available in the literature using AIS for asso- ciation rule mining use the Michigan approach independently of using binary [18], [21] or real values [22], [18] to encode the rules.

In this paper, we used the same kind of representation to encode the candidate solution in the Evolutionary Algorithm and Artificial Immune System for association rule mining.

C. Fitness function The fitness or objective function should reflect the rele-  vance measures to be optimized, exhibit regularities over the space defined by the selected representation and provide enough information to drive the selective pressure of an evolutionary-like search algorithm [27].

The measure of interest often used in EA and AIS to compute fitness values are based on those employed for classification rule mining, with some slight modifications.

Confidence and support were used in [28], [29] and [30] to define the fitness function as:  Fitness(A ? C) = ???????(? ? 	)  ??????  + ??	???(? ? 	)   ??	???  ??  where, w1 + w2 = 1, minSupp and minConf are, respectively, the minimum threshold values for the support and confi- dence defined by the user. Another fitness function that uses only one of these measures of interest, presented in [31], is the following:  Fitness(A ? C) = ???????(? ? 	)  ??????   ??  As in Eq. 5, minSupp is the minimum threshold value de- fined by the user. Other kinds of fitness functions can be founded in [22], [28] and [32], but are essentially combina- tions of support, confidence and other measures of interest.

Within Evolutionary Algorithms there are other measures of interest to compute fitness and compare rules. For in- stance, in [19] the authors measure the degree of comprehen- sibility and interestingness of an association rule. The com- prehensibility1, or comprehensibility of Type 1, measure of the association rule, C1(A ? C), is defined as:  ? C1(A ? C) = log(1 + |C|)/log(1 + |A?C|)? ???  where |C| and |A?C| are the number of items in the conse- quent part and the entire rule, respectively. The interesting- ness measure of a rule, I(A ? C), is calculated as:  ? I(A?C) = (|A?C|/|A|)*(|A?C|/|C|)*(1?(|A?C|/|T|)),? ???  where A and C are defined as previously, and |T| is the num- ber of transactions in the database. Another measure of com- prehensibility2, or comprehensibility of Type 2, of an associa- tion rule, C2(A ? C), is [25]:  ? C2(A?C) = log(1+|C|)+log(1+|A?C|).? ???  A detailed description of the various measures of interest usually used in association rule mining can be found in [33].

In the present paper the following measures will be used: Supp, Conf, C1, C2, and I.

D. Selection Mechanisms In evolutionary algorithms, an important issue of the se-  lection mechanism is to privilege individuals with high fit-     ness without completely disregarding those individuals with low fitness values. Selection does not create any new solu- tion, instead it promotes the propagation of the genetic mate- rial associated with high fitness individuals, but still allowing the genetic material of low fitness individuals to be main- tained, so as to contribute to the diversity of the population [36]. The main selection mechanisms in evolutionary algo- rithms include:  a) Roullete Wheel: This mechanism was proposed in [37] and assigns a selection probability for each individual proportionally to its fitness value. Roullete whell assumes that all individuals have non-negative fitness. However, if one individual has a fitness value much greater than the others, it will tend to be selected much more often than the others. Thus, if such ?super? individual indicates a local optimum in the solution space, there may be a premature convergence for this solution. Also, if most individuals have approximately the same fitness value, these will have about the same probability of being selected [38].

b) Tournament: Involves running tournaments within a set of individuals chosen at random from the population and selecting the best one from each tournament. Selection pressure can be easily adjusted by changing the tournament size, that is, the number of individuals in each tournament.

They may be drawn from the population with or without replacement. The best current individual having the highest fitness value is usually chosen deterministically, though occasionally a stochastic selection may be done [27].

c) Rank-Based: Similar to the fitness-proportional selection, except that the selection probability is proportional to the relative fitness of a candidate solution, instead of the absolute fitness. It means that only the rank ordering of the fitness of the individuals within the current population determines the selection probability. Ranking simplifies the mapping from the objective function to the fitness function [27].

E. CLONALG, CLONALGR and eGA The clonal selection algorithm, named CLONALG, pro-  posed by [20], considers two important clonal selection fea- tures: affinity proportional cloning and mutation.

CLONALG was originally proposed to perform pattern recognition and then modified to solve multimodal function optimization problems [20], [34], [35].

The CLONALG version to solve optimization tasks can be described as follows [34]:  1. Initialization: create an initial pool of immune cells, also called antibodies (P).

2. Evaluation: determine the fitness of each cell in P.

3. Clonal Selection and Expansion: select and clone n1  highest fitness antibodies proportionally to their fit- ness: the higher the fitness, the higher the number of clones.

4. Affinity Maturation: mutate all these clones with a rate inversely proportional to their fitness: the higher the fitness, the smaller the mutation rate and vice- versa. Add these mutated individuals to P.

5. Metadynamics: replace a number n2 of low fitness cells by new randomly generated ones.

6. Cycle: repeat Steps 2 to 5 until a certain stopping cri- terion is met.

For optimization problems that aim to locate multiple op- tima within a single pool of antibodies, two default modifica- tions are needed. Assign n1 = N, that is, all antibodies from the pool will be selected for asexual reproduction; and the affinity proportionate cloning is not necessarily applicable, meaning that the number of clones created for each antibody is the same. The fitness will be accounted for to determine the mutation rate of each antibody, which is still inversely proportional to the fitness [34], [35].

The CLONALG pseudocode is presented below.

procedure [P] = CLONALG(S,max_it,n1,n2) % P: population of candidate solutions.

% S: database to be mined.

% max_int: maximum number of iterations.

% n1: high affinity antibodies to be selected for cloning.

% n2: low affinity antibodies to be replaced at each iteration.

initialize P t ? 1  while t ? max_it do f ? evaluate(P,S) P1 ? select(P,n1,f) C ? clone(P1,f) C1 ? mutate(C,f) f1 ? evaluate(C1,S) P1 ? select(C1,n1,f1) P ? replace(P,n2) end for t ? t + 1  end while end procedure  Pseudocode 1: Clonal Selection Algorithm.

Following these principles, this paper proposes the use of a fitness proportional selection in CLONALG, instead of a deterministic selection of n1 best individuals, resulting in an algorithm called CLONALGR. A roulette wheel selection mechanism is used to select antibodies for cloning. The only thing that changes from the CLONALG pseudocode is the use of a specific selection.

The eGA is a genetic algorithm with elitism based on [19], [39], [40], [41].

The results of the experiments obtained by these two arti- ficial immune systems and the elitist genetic algorithm are presented and discussed in the next section.



V. PERFORMANCE EVALUATION In the experiments to be performed here, each Artificial  Immune System uses the same parametric configuration: 100 antibodies, 100 iterations (stopping criterion), n1 = 10 high fitness cells, n2 = 5 low fitness cells. The fitness function used to evaluate the quality of each antibody was a linear combination between the support and confidence of the rule:     ? Fitness(A?C) = w1*Supp(A?C) + w2*Conf(A?C)? ????  where the coefficients are set to w1 = w2 = 0.5.

Although Eq. (10) was used to assess fitness and evolve  the rules, other measures of interest were calculated for each rule generated, as follows: C1 (Eq. (7)), I (Eq. (8)), and C2 (Eq. (9)).

We collected three real-world databases for running the algorithms. The real e-commerce databases are significantly different from other databases from the literature, because they are much sparser and have fewer products than tradi- tional databases available for benchmarking.

The experimental results are summarized in TABLE I. , in the end of the paper, which presents the average, standard deviation, minimum and maximum values for the measures of interest based on the three real e-commerce databases by eGA, CLONALG and CLONALGR. These values were taken over ten runs of the algorithms.

By observing the results obtained it can be noted that the CLONALG provided the best absolute performance for support in all datasets and CLONALGR was better than eGA. The three algorithms obtained the same values for the confidence. CLONALGR obtained the best performance for comprehensibility 1 and had a tie with eGA for interesting- ness, whilst eGA was superior in comprehensibility 2.

By looking at the support and confidence measures it is possible to note a similarity between the performances of the algorithms, but best performances were obtained by the immune algorithms. However, the comprehensibility 1 and interestingness took higher values for CLONALGR because its selection mechanism maintains diversity in the pool of cells and different values can be found over the iterations.

The eGA performed best for comprehensibility 2 and its processing time was less than that of the immune algorithms.



VI. CONCLUSIONS AND FUTURE RESEARCH Artificial Immune Systems have been widely used in pat-  tern recognition and multimodal problems due to their capa- bility of finding diverse solutions to complex problems. In the data mining context, their application has emphasized clustering and classification rules, but there are also works investigating their use in association rule mining.

The present paper investigated the use of CLONALG and proposed a modification in the selection mechanism of the best antibodies that will be cloned. The method used was roulette wheel, well-known from the GA literature. The new algorithm was named CLONALGR and it was compared with an evolutionary algorithm and the standard CLONALG.

The results presented suggested that CLONALGR is competitive with CLONALG for the measures of interest used. However, it maintained more diverse solutions and, thus, could find higher values for the other measures of in- terest. Overall, the immune algorithms were better than the evolutionary one.

There is still much to be done in this research, including a broader experimentation of the algorithm and an investiga- tion of the relation between the problem features and the algorithms? performances.

