

Abstract: Association rules are the very valuable kind of law in data mining. The fitness of time is seldom illustrated by traditional association rules, which losses a number of useful implicit rules.

On the basis of further study of other association rules mining algorithms, this paper has developed Apriori-extended mining periodic temporal association rules (MPTAR) according to the especial periodicity of data. The test on a group of financial data shows that the method is useful and efficient. It is more significant for improving the theory and implementation of temporal association rules in data mining.

Keywords: data mining, temporal association rules, periodic rules mining, attribute trend

I.  INTRODUCTION Association rule plays an important role in data mining and  has been becoming an important study subject in many areas[1].

In many practical areas, since time is the inherent factor in the database itself, so the temporal semantics problems are often found in data. The emergence of temporal data makes it necessary to take into account the time factor in the process of mining association rules, which is real-time state constraint.

This association rules can be named as the temporal association rules[2]. To solve this problem requires the introduction the time attributes of the data in the data model. Temporal association rule mining is to discover the valuable relationship among the items in the temporal database.

Till now, the research and practice of temporal association rule mining have been popular, and many literatures have reported[2-4].The current model of association rule mining is not able to handle the publication database due to the following fundamental problems, i.e., (1) lack of consideration of the exhibition period of each individual item; (2) lack of an equitable support counting basis for each item.

Financial performance analysis is an analytic system with inherent time attribute, which is a new field with the application of mining temporal association rules. For example, a specific time interval for the financial expenditure in the sudden increase in a traditional analysis would ignore the rationality of its inherent, and the work of this article can be found from such abnormality of the inevitability of its actual existence and laws of, and to obtain more valuable information.

It will have very important significance to financial policy for  the next step using the information summary report of financial performance analysis based on temporal association rule mining. For the above problem, this paper improve the method of mining discrete attributes with temporal cycle of the temporal association rule applies to the field of financial performance analysis. On the basis of further study of other association rules mining algorithms, this paper has developed Apriori-extended mining periodic temporal association rules (MPTAR) accord to the especial periodicity of financial data.

And this algorithm has been used in the field of financial performance analysis, and given the financial performance analysis summary report. Compared with the traditional mining rules methods, it has many other advantages such as objective reality, highly technical, a large of information and strong guidance.



II. DEFINITION OF TEMPORAL ASSOCIATION RULES With the temporal characteristics of association rules  named as temporal association rules. Temporal association rule mining is to discover the link between the event and time, as well as time-domain-based events and event relationships.

When selecting the candidate items through traversing the database, it is taking into account their extension and merger of time interval.

A. Extension of the time interval An extension of the time interval refers to the outward  expansion of its two endpoints in order to make two time intervals to meet or overlap, and then combined into a single time interval.

B. Merger of the time interval Given a sequence of items set, all items sets in this  sequence are the same, but their effective time interval may not be the same, as the corresponding time intervals should be merged, in this base the definition of time interval with the operation are as follows:  Definition 1: Definition 1: Given two time interval ],[ 21 ttT  and ],[  '  '  ' ttT ?then ],[],[ '2 '  ' 21 ttTttT ?  defines that:  1) The time interval ],[ 21 ttT  and ],[ '  '  ' ttT  are same, that     is '11 tt =  and ' 22 tt = , then ],[],[],[ 21'2'1'21 ttTttTttT =? ;  2) The time interval ],[ 21 ttT  and ],[ '  '  ' ttT  are met, that  is '12 tt = , then ?=? ],[],[ '2'1'21 ttTttT ; 3) The time interval ],[ 21 ttT  and ],[  '  '  ' ttT  are overlap, that is '  11 tt < , ' 12 tt >  and  ' 22 tt < ,  then ],[],[],[ 2 '  '  '  ' 21 ttNewTttTttT =? ;  4) The time interval ],[ 21 ttT includes ],[ '  '  ' ttT ,that is '11 tt < and '22 tt > , then ],[],[],[ '2'1''2'1'21 ttTttTttT =? ?  Then give the definition of temporal association rules.

Definition 2: if ),,0](,[ 212121 ttttttT <+??>= is the time interval of thinking about, and  ),...3,2,1;(;  njjiTTT j n  i i =??==  =  ?? ; D is the all transaction sets within the period of time, and  iT D  is the  transaction set within time interval Ti, it is obvious that  iT D ?D, if A?  iT D , and B?  iT D  then the association rule  BA ?  in the time interval Ti, signed )( BATi ? ?  Definition 3: if item A ? I, and ),...,2,1()( niATi =  is the total count of affairs in time interval Ti including A, and |T(A)|  is the total count of affairs in time ? n  i iT  1=  including A:  1) The support of a temporal rule )(' BATT ii ?? is  '  )( )(  '  ii TT  ii  D  BATT BASup  ?  ?? =?  ;  2) The confidence of a temporal rule )(' BATT ii ??  is  )(  )( )(  '  '  ATT  BATT BAConf  ii  ii  ?  ?? =? .

Definition 4: Let min_sup and min_conf represent minimum support threshold and minimum confidence threshold respectively, if and only if  '  )( )(  '  ii TT  ii  D  BATT BASup  ?  ?? =?  ? min_sup and  )(  )( )(  '  '  ATT  BATT BAConf  ii  ii  ?  ?? =? ?min_conf, the rule BA ?  is a temporal association rule, which could be described as )(' BATT ii ?? .



III. PERIODIC PATTERN FOUND  A. Mining the Trend of Continuous Attributes It is two steps to mining periodic rules of continuous  attributes. The firstly is to mining the trend of continuous attributes, that is constructed to the cycle curve which can reflect changes of continuous attributes with time.Give a set of attributes AttriTrendSet = {Up, Peak, Down, Valley, Edge},  that is the trend of the type set of object attributes named AttriTrendSet.

Constructed based on actual data because of the periodic curve is likely to superposition of a number of random interference, the main task of trend mining is to eliminate random noise, so that data showed the periodic trend preliminary[7,8].

Figure 1.  The condition of education expenditures for one city in 2006-2007  B. Calculate the Period The second step of periodic rules of continuous attributes is  to calculate the period of attributes based on periodic curve.

The minimal average AvePVn is the period of discrete statistical difference DiffPVn in n-span statistics array[9]. Among them, the concepts of attribute peak and valley chain, n-span array and n span n-span statistics array summarized as follows:  Definition 5: Peaks and Valleys Chain of Attribute: Attribute A is the value that you want to visit in the period, and the LCount is the number of inspection points, then:  1) If the attribute value of Attribute A is AttriA in the T moment, the trend value of attributes for the Peak or the Valley singed PorV, then the triples PV =(PorV, AttriA, T) is called peaks and valleys record value of attribute A in the T moment.

2) Set PVi is the first i peak and valley record of attribute A in time interval [T, T?], 0? i<LCount, claimed that the collection AttriPVChain={PV1, PV2, ? , PVn} is the peaks and valleys chain of attribute A. The first i value of the peaks and valleys chain of attribute is recorded as AttriPVChain [i] = PVi.

Definition 6: N-Span Array. Set n>1?PVj1?PVj2?PVj3? ??PVjn are the continuous peaks (or valleys) in the peaks and valleys chain of attribute A, the time difference PVjn.t - PVj1.t is called as n-peak distance (or n-valley distance) from j1, and the combined n-peak distance and n-valley distance is called n- span. All n-span according to the starting point for the sequence arranged in an array called the n-span array, which could be described as Spankn, when n is 0 and 1 under the condition that Spankn ={0}.

Definition 7: N-Span Statistics Array. For fixed n, note MaxPVn = Max(Spankn), MinPVn = Min(Spankn), AvePVn = Average(Spankn) and DiffPVn = MaxPVn - MinPVn. N-span statistical records can be expressed as a 4-tuple (MaxPVn? MinPVn?AvePVn?DiffPVn), which n less than or equal loop     control of a user-defined constant. Note the first n statistical record is PVStatisticArr[n], then the array of PVStatisticArr is called n-span statistics array[10].

C. The Algorithm of Periodic Pattern Mining Algorithm 1: Get_ Periodic _Law Input: temporal database (TDB), attribute A, MaxCount  (the number of loop control) Output: the PVStatisticArr of attribute A Function GetPeriodicLaw(TDB, A, MaxCount)  {Step 1, Select the appropriate time granularity tgra, the use of temporal operators to prepare time-series data (such as study points array CheckPointA, etc.), as the input of step 2.

Step 2, Call Get_Trend_By_Smoothing(CheckPointArray) (the function of sliding smoothing ), and calculate and output the attribute trend array AttriTrendArray[L] of A.

Step 3, Select out all the records about Peak and Valley according to the attribute trend array to form a peaks and valleys chain AttriPVChain[L].

Step 4, For 2 <= n < MaxCount, computing n-span array Spankn, and then construct n span n-span statistics array PVStatisticArr[n]. Find an integer n, such that for 2 < n < MaxCount and makes the value of PVStatisticArr[n].DiffPVn minimal.

Step 5, Output the value of PVStatisticArr[n]. AvePVn as the period of attribute A.}

IV. THE DESING OF MPTAR ALGORITHM In the association rule mining process, the calculation of  frequent item sets need to repeatedly scan the database, and take time longest. To use the periodic nature of attribute can reduce the cyclical demand for frequent item sets by the time.

The association rules with temporal features, for the analysis of the financial performance of this periodic temporal data have an important role in the processing. The following specific description will be the algorithm of mining periodic association rules, called MPTAR (Mining Periodic Temporal Association Rules).

A. The Definition of Periodic Temporal Association Rules Definition 8: Association rule A?B has a cycle of P(p, s,  e) refers to that for a unit of time (e.g. day) given by the user, during every time interval Tk = {[p * (k ?1) + s, p*(k - 1) + e)] | 1?k?n, s and e represent the start and the end of valid time respectively}, its probability P(A)is larger than min_sup required, and the conditional probability P(B|A) is larger than min_con needed, which could be described as P(p, s, e)( A?B).

For example, an association rule "milk ? bread" in time units t = hours has a period of P1(24, 7, 8) and P2(24, 16, 17), that is to say the association rule "milk ? bread" set up on per day (24 hours) [7, 8) and [16, 17) two time interval.

B. Main Idear of MPTAR Algorithm If the rules Pi(p, si, ei)(A?B) are periodic association rules,  according to the definition of period there are frequency items of A?B in time interval Pi. As the same, if the items of A?B  are periodic frequent item, there should have frequent item A in each period time of Length. So it can be drawn that if we have A does not meet the minimum support in Pi(p, si, ei), you can delete the A, and while the next period Pi+1(p, si+1, ei+1) does not take into account the A, thereby reducing the calculation.

Temporal association rule mining is mainly to find frequent items? relations in time interval. As the period of each attribute is different there need to merge their time interval and extend their period when joined.

C. MPTAR Algorithm Temporal association rule mining is mainly to find frequent  items? relations in time interval. As the period of each attribute is different there need to merge their time interval and extend their period when joined.

The main idea of periodic association rules algorithm is to get the vector (p1, s1, e1) of transaction A from PVStatisticArr[L], and then according to the vector to take into the candidate item 11  pTC .By the candidate item 11 pTC  and  time interval ( )n,...,,jT j 211 =  of (p, s1, e1) to determine whether have a frequent item 11  pTL  with period P1(p, s1, e1).

Then get the new vector (p2, s2, e2), and according to the vector to take into the candidate item 22  pTC .By the candidate item  pTC  and time interval ( )n,...,,jT j 212 =  to determine whether  have a frequent item 22 pTL  with period P2(p2, s2, e2). And so on  until the last, by the period Pk(pk, sk, ek) to determine whether have a frequent item kpkTL . The algorithm is constituted mainly by the two loops: the first loop is to get vector (pi, si, ei) from PVStatisticArr[L] and put the items with time interval iT1 into ipTC1 ; The second loop is the inner loop for the first, the purpose seeking a item kpnTL  with period Pi(pi, si, ei) according to ipTC1 . Finally, the results obtained will put into set of FrequencyItems.

Algorithm 2: Get_Periodic_Frequency_Items Input: period state array PVStatisticArr[L] Output: frequent items set FrequencyItem  Function GetPeriodicFrequencyItems(StatisticArray) {  FrequencyItems = ?; for ( i =1; i <= k; i++)  // to get vectors from  PVStatisticArr by order and input temp {  temp = PVStatisticArr [i]; ipTC1 = {1-itemsets} in  iT1 ; min_sup = a * iT1  / L; k = 1;  // k is the length of item set while ( ipkTC ? ?)   // to calculate a frequent  itemset with period Pi(pi, si, ei) {     for ( j = 1; j < N and ipkTC ??; j++)  /*In the interval iT1  to determine whether the items in i  p kTC meet  the min_sup */ {  // to initialize temporal candidate itemset  for( all temporal candidate itemset itemc ? i  p kTC )itemc. support = 0;  // temporal candidate frequent items included transaction A  for( all A? ijT ) i p jTC  = Subset(  i jTC ,  A); for( all temporal candidate itemset itemc  ? i p ATC ) itemc. support ++;  } ip  kL  = {itemc? i p  kTC | itemc. suppor ? min_sup};  /*to minus the item less than support in ikT  */  }  // end of while if ( ipkTC ? ?)  i kT  = i  p kTC  else break for; k++;  ip kTC 1+ = PeriodicAprioriGenerate( i  p kTL );  /*to  generate new temporal frequent candidate itemset*/} FrequencyItems = FrequencyItems ? ipkTL ;  /*to  put the frequent item sets with period Pi(pi, si, ei)stored into FrequencyItems*/  }  Algorithm 3: Periodic_Apriori_Generate Input: temporal f k-1 frequent itemset: 11  ? ? ip  kTL , the period of temporal k-1 frequent itemset: Pi-1(pi-1, si-1, ei-1) Output: temporal candidate k-1 frequent itemset: ipkTC , the period of temporal candidate k-1 frequent itemset: Pi(pi, si, ei) Function PeriodicAprioriGenerate( ) {  ip kTC  = ?;  for (each itemset l1 ? 11 ?  ? ip  kTL ) for (each itemset l2 ? 11  ? ? ip  kTL ) {    if (l1[1]==l2[1] && l1[2]==l2[2] && ?&&  l1[k-2]==l2[k-2] && l1[k-1]<l2[k-1]) {      c = 21 ll ? ;  // to join l1 and l2  pi = LCM(pi-1(l1), pi-1(l2)) /* the new period is the least common  multiple of period of l1 and l2 */ (si, ei) = (si-1, ei-1)(l1) ? (si-1, ei-1)(l1) /* the new time interval is the intersect  of period time interval of l1 and l2 */ ip  kTC  = i p  kTC  ? c;} } // end of for  }  Periodic association rules can be get directly by finding out the periodic k-frequent itemsets. That is to say for each frequent itemsets FItems we can use the iterative methods to produce all of the non-empty subset, if support(FItems)/support(subset) to meet the min_conf, there are periodic association rules subset?( FItems ? subset).

Algorithm 4: Mining_Periodic_Temporal_Association_Rules (algorithm for generating periodic temporal association rules: MPTAR) Input: temporal database (TDB), mincon Output: temporal association rules set (TRuleSet) Function MPTAR?TDB, min_con? {  TRuleSet = {?}? Step1. for (all A?TDB) call GetPeriodicLaw(); Step2. call  GetPeriodicFrequencyItems(StatisticArray); Step3. for (all FItems?FrequencyItems)  {     to generate all non-empty subset? FItems if ( support(FItems) / support(subset) >  min_con) TRuleSet =TRuleSet?{subset?( FItems  ? subset)};} // end of for }

V. EXPERIMENTAL ANALYSES We have got some association rules in a financial database  of a city using these algorithms. Our MPTAR algorithm is implemented with C# in Visual Studio2005 and it is performed on a Dell PC with 1GB of main memory and AMD64 4000+CPU, 2.1GHz. Set up a transaction database as shown in Table 1, the transaction entries in chronological order according to occur. The period of each itemset, such as in Table 2.

TABLE I.  ATRANSACTIONDATABASE  time tid items 1 100 A B  D 2 200  B C  E 3 300 A B  D E 4 400 A B   E 5 500 A B C  E 6 600  B  D  TABLE II.  THEPERIODOFITEM (SET THE TIME GRANULARITY IS HOUR)  items period A (12 1, 5) B (12, 1, 6) C (16, 2, 5) D (16, 1, 6) E (18, 2, 5)  Set the minimum degree of support min_sup = 0.6, the minimum degree of confidence min_conf = 0.6, then we can obtain frequent itemsets steps shown in Figure 2 according to algorithm 2:      Figure 2.  The process of generating periodic frequent itemsets  Based on the above algorithm, we can obtain maximal frequent itemsets as ABE from Figure 2, which non-empty subset are (A), (B), (E), (A, B), (A, E), (B, E) and (A, B, E).

Calculate the value of support for each subset which is greater than the minimum degree of confidence is the periodic association rules.

According to the nature of temporal association rules, combined with financial performance data instances of the algorithm is run to analyze the results. Financial data, taking into account the order in place and the time interval, the time interval were set to 6 months, 12 months, 18 months, 24 months, 30 months and 36 months. We can receive the curve of support and confidence, shown in Figure 3 and Figure 4:   Figure 3.  Support change with time interval of the increase  As can be seen from Figure 3, the level of support is not in a low level when time interval smaller, about 9% or more. But when the time interval increased to more than 30 months later, support for gradually stabilized and then maintained at a high level, about 17.5%.

Figure 4.  Support change with time interval of the increase  As can be seen from Figure 4, with the time interval increases, the level of confidence increases gradually, when the time interval increased to 30 months later, maintained at a high level, about 66.7%.

Through the above analysis shows that the financial performance data in Kaifeng on the performance of the project have a shorter lag effect. However, the absolute value of the higher degree of support, indicating that the financial performance analysis of data, income, expenditure has significant characteristics, income and expenditure budget according the beginning of the steady implementation; temporary one-time income with low income; expenditures in  strict accordance with the budget, usually a general additional less. Maintained a high level of confidence, indicating a longer period of time, the financial income and expenditure of Kaifeng growth rates were relatively stable, non-mutant growth phenomenon, in line with economic and financial development law.



VI. CONCLUSION Temporal association rule mining aiming at detecting  correlations in transactional and relational data that possess a time component seems to be a promising analytical tool for temporal data analysis. In this paper, sliding smoothing method is to eliminate random noise, which is targeted, simple, effective data of the general trends, providing the basis for the extraction cycle. In the following the trend in the research data based on the law of the development of a cyclical mining algorithms, and data analysis with the cyclical nature of the law applicable to the given periodic temporal association rule mining algorithm MPTAR, objectively reflect the content of the data analysis, representing a good solution to the periodic data analysis of the technical problems.

This algorithm is mainly used in the areas of financial performance. The algorithm has the following advantages: First is the object adaptation. Financial performance data are periodic data and each data point and its occurrence is closely linked to the time. The algorithm is consistent with the laws of the financial performance data. Second is an objective reality.

This algorithm can remove the noise more objectively, and can predict the future data preliminary, witch meets the needs of practical work. The third is efficient. Whether it is from the time complexity and space complexity of the calculation, the algorithm has a high efficiency. All the above points, from the practical application of the algorithm both have been fully reflected.

