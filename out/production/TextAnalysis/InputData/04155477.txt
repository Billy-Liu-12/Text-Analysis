3rd International IEEE Conference Intelligent Systems, September 2006

Abstract Various data mining methods are being consid- ered. This paper examines the problem of extracting Ra- tio Rules. Ratio Rules are linear relationships in numeric attributes applicable to understanding data, filling missing attribute values, and related issues. Existing research for Ratio Rules, however, does not consider a concept used in association rule mining. This prevents us from extracting a Ratio Rule having a strong linear relationship in part.

This also prevents us from measuring objective goodness of each Ratio Rule. We formulated Ratio Rule mining in anal- ogy to association rule mining, and introduce support and confidence concepts to Ratio Rules. We propose a Ratio Rule extraction method based on support and confidence, and show the appropriateness of our proposed method using real and synthetic data.

Index Terms- Ratio Rule, association rule mining, data mining, Hough transformation

I. INTRODUCTION  Various data mining methods are being considered to ex- tract important information from huge data. Some exam- ples are association rule mining, clustering, classification, text mining, time series data mining, and Web data mining [1].

This paper examines the problem of extracting Ratio  Rules [2]. Ratio Rules are typical ratios between numeric attributes. Ratio Rules are linear relationships in numeric attributes.

As an example of Ratio Rules, we assume the students  data listed in Table I, in which each student has been mea- sured for both "height" and "weight." Figure 1 shows tu- ples in Table I mapped to 2D space. This figure also shows that tuples generally follow the linear relationship indicated as a black solid line. This line enables us to obtain ratio between "height" and "weight" from the slope of the line.

We call that kind of line a Ratio Rule. Ratio Rules not only support the understanding of data, but can help fill in missing values, forecast attribute values, detect outliers, and visualize data.

Existing Ratio Rule mining methods [2][3] try to cap- ture general trends as Ratio Rules, so they are not ap- plicable when linear relationships mix or given data par- tially have a linear relationship. Figure 2 gives a simple example. We think data have two linear relationships: one stands between 0.0 < X < 0.7 and the other stands be- tween 0.25 < X < 1.0. If we apply an existing method  Masafumi Hamamoto is with the Graduate School of Systems and Information Engineering, University of Tsukuba, 1-1-1 Tennohdai, Tsukuba, Ibaraki 305-8573, Japan Hiroyuki Kitagawa is with the Center for Computational Sciences,  and Graduate School of Systems and Information Engineering, Uni- versity of Tsukuba, 1-1-1 Tennohdai, Tsukuba, Ibaraki 305-8573, Japan  e-mail: {hamamoto@&kde., kitagawa@Q}cs.tsukuba.ac.jp  TABLE I  EXAMPLE OF STUDENTS DATA WITH HEIGHT AND WEIGHT  ATTRIBUTES. ASSUME BOTH ATTRIBUTES HAVE NO MISSING VALUE  70r    3t 55-  Fig. 1. Example of Ratio Rule for Table 1. Black solid line represents a Ratio Rule  based on Principal Component Analysis [2], we obtain the Ratio Rule shown by the solid black line. This Ratio Rule does not represent any linear relationship in the data, thus it is not an appropriate result.

Another problem with existing Ratio Rule mining meth-  ods is that they do not consider concepts used in associa- tion rule mining, such as support and confidence. In Figure 2, a single linear relationship appears only in 0 < X < 0.2 and 0.7 < X < 1.0, and almost all tuples in the ranges follow linear relationships. That means the linear relation- ships in the ranges have high confidence. In 0.2 < X < 0.7, however, two linear relationships are mixed. It makes esti- mation from X to Y more difficult, and confidence is low.

For this kind of data, it is useful to extract appropriate Ratio Rules using support and confidence criteria.

In this paper, we start by formulating the definition of Ratio Rules in analogy to association rules. Based on this definition, we classify target Ratio Rules into two kinds: optimized confidence Ratio Rules and optimized support Ra- tio Rules. To extract these Ratio Rules, we propose an algorithm consisting of three phases: parameter filtering, optimized range extraction using ID numeric association rule mining [4], and Ratio Rules integration. Our algo-  1-4244-0195-X/06/$20.00 (2006 IEEE  IStudent ID || height(cm) weight(kg) SOOOO1 157 50.1 S00002 174 69.0 S00003 163 60.8  1 ... 11 ... ...

a line y ax + b is represented as p = xcosO + ysinO where p bsin(tan-1(-1/a)) and 0 = tan1(-1/a). Since the domains of both attribute values x, y are normalized to be [0,1], p and 0 are assumed to be0 < p < 2 and -7/2 < 0 < 7.

When many tuples follow the same Ratio Rules density  of the tuples may vary in different ranges. If many tuples exist in a range, we are able to say that the Ratio Rule in the range is approved with certainty. However, for a range in which very few tuples are included, we do not trust the Ratio Rule in the range at all. Thus we need to express it in our Ratio Rules definition.

Based on the above, we define Ratio Rules as follows:  Fig. 2. An example where multiple Ratio Rules exist. Black solid line represents a Ratio Rule extracted by Principal Component Analysis  rithm takes linear time for the number of tuples.

This paper is organized as follows: Section II formulates  Ratio Rules in analogy to association rules. Section III presents our proposed method. Section IV examines ap- propriateness and properties of our method with synthetic data and two real data. Section V reviews related work.

We finish with a conclusion and mention future work.



II. PROBLEM SETTING  This section formulates Ratio Rules. Our definition is slightly different from the existing one [2] [3], since our Ratio Rules are more general as explained in Section I. It then introduces concepts used in association rule mining. Ratio Rule mining techniques are defined by these formulations.

A. Target Data  Target data in this paper are a set of tuples having nu- merical attributes, like Table I in Section I. We assume each attribute to have no missing values.

This paper focuses on extracting Ratio Rules between two attributes. Each attribute value is assumed to be a real number, but normalization done for each domain is [0,1].

The two target attributes are assumed to be X, Y, and  each attribute value is represented as x, y (0 < x, y < 1).

B. Definition of Ratio Rules  Ratio Rules are, as noted in Section I and the preceding subsection, linear relationships between two attributes. If tuple t has two attribute values, xt and Yt, it is reasonable to think t follows the Ratio Rule with parameter a, b when Yt = axt+b (a, b C lR). This means a Ratio Rule is deemed as a line in 2D space spanned by X and Y.

Under this definition, however, only a few tuples strictly  follow the same Ratio Rule. We also think computational treatment of Ratio Rules is difficult because parameters a, b are both arbitrary real numbers. For the former prob- lem, we set tolerances for both parameters, and we assume tuples on a line follow the same Ratio Rule whose parame- ters vary in the tolerances. For the latter problem, we use Hough transformation [5]. Under Hough transformation,  Note that attributes X and Y are not symmetric in this formulation. The following part denotes a Ratio Rule RR,GI (p ? E, 0 ? d) simply as RRI (p, 0).

C. Kinds of Ratio Rules  This subsection defines concepts for Ratio Rules to re- spond to association rule mining for numeric attributes [4].

Support for a Ratio Rule RRI(p, 0) means the ratio of tuples following RRI(p, 0) to all tuples, and is denoted by support(RRI(p, 0)). Support for I also means the ratio of tuples, whose attribute values x included in I, to all tuples, and is denoted by support(I).

Confidence for a Ratio Rule RRI (p, 0) means the ratio of support(RRI(p, 0)) to support(I), and is denoted by conf(RRI (p, 0)).

. Support and confidence are called minimum support and mimimun confidence, respectively, when they are given as the minimum thresholds.

We define the following two kinds of Ratio Rules by the above concepts.

. Optimized confidence Ratio Rule: A Ratio Rule RRI(p,0) where support(I) fulfills a minimum sup- port and conf(RRI (p, 0)) fulfills a minimum confi- dence and is maximized. Here I is called optimized confidence range.

Optimized support Ratio Rule: A Ratio Rule RRI(p, 0) where conf(RRI(p, 0)) fulfills a minimum confidence and support(I) fulfills a minimum support and is max- imized. Here I is called optimized support range.

Extracting optimized confidence Ratio Rules is, under the condition that a particular number of tuples are in- cluded, extraction of the range in which the ratio of tuples following a Ratio Rule is maximized.

Extracting optimized support Ratio Rules is, under the condition that a particular percentage of tuples follow the   0 0.1 0.2 0.3 0.4 0.5 0.6 6.7 0.8 0.9 1 X  When tuple t(xt, Yt) (Xt C I, I C [0, 1]) satisfies the following condition for Et, St, t is said to follow the Ratio Rule RRx I (p ? E, 0 ? 6d):  P + et = xt cos(O+ St) + yt sin(O + St) where |EtL <c, l t < 6    Ratio Rule, extraction of the range in which the number of tuples following a Ratio Rule is maximized.



III. PROPOSED METHOD  This section proposes a method of extracting the opti- mized confidence/support Ratio Rules mentioned in Sec- tion II.

A. Basic Algorithm  When we extract optimized confidence/support Ra- tio Rules, the first problem is how optimized confi- dence/support range is extracted. If we judge whether each tuple follows the Ratio Rule RR[o,1] (p, 0), the prob- lem is assumed as ID numeric association rule mining [4] for the parameter tuple (p, 0). For a numeric attribute X, it is called ID numeric association rule and denoted by (X C I) =# C if X satisfies X C I then a condition C is satisfied, where I = [s, t] (min(x) < s < t < max(x)). This concept is applicable to our problem of setting condition C as "whether a tuple follows the Ratio Rule."  In this paper we apply a method proposed by Fukuda et al [4]. This method can extract an optimized confi- dence/support range in O(N) time where N is the number of tuples. The method assumes input tuples are sorted by the target attribute X and each tuple is judged by whether or not it satisfies the condition. Our problem also assumes that input data have been sorted.

Our basic algorithm is summarized in Figure 3. p and  0 are split to be discrete values where their intervals are 2E and 26, respectively, based on the tolerances e and 6.

Each discrete value for p, 0 is denoted by Pi, Oj where 1 ...,R (R = (37/2 + E)/2c]) and j 1, ...,T (T (2 + E)/2cE]). Note that p1 = 0 and 01 -7/2.

Fig. 3. A basic algorithm to generate Ratio Rules  B. Problem and Modification of Basic Algorithm  The basic algorithm above has two major problems. One is that computational complexity is very high because it needs to read all tuples and invoke ID numeric association rule mining for all (pi, Oj) pairs. If most tuples do not follow the Ratio Rule, there is much waste. The other problem is that it may output many of essentially the same Ratio  Rules. Ratio Rules should be regarded essentially the same if many subsequent tuples are common.

To solve these two problems, we propose putting two  phases, pruning phase and rule integration phase, before and after the extraction of optimized confidence/support range and output of Ratio Rules (we call these two func- tions the rule generation phase as a whole). The follow- ing subsections explain the pruning and rule integration phases.

C. Pruning Phase  When RRI (pi, Oj) satisfies mirnsup and mirnconrf, the number of tuples following RRI (pi, Oj) is at least support(RRI (pi, Oj)) support(I) x (support(RRI(pi, Oj))/support(I)). The first term on the right side of the above equation is the support of range I, and the second term is the confidence of RRI(pi, Oj).

Hence, the number of tuples following RRI (pi, Oj) should be at least the product of mirnsup and mirnconf. We describe this threshold as a.

Based on this property, this phase filters candidate  (pi, Oj) pairs. So valid (pi, Oj) pairs are obtained by enu- merating (pi, Oj) pairs and extracting (pi, Oj) pairs whose counts are greater than or equal to a. For each tuple, cal- culating the p value for each Oi (i = 1,... , T) is done in constant time. This phase thus completes in O(TN) time.

In building the histogram, we not only count each (pi, Oj) pair, but also record tuples following the pair. We do this because judgment as to whether each tuple follows each Ratio Rule is needed. Note that when (pi, Oj) pair counting and tuple recording are done at the same time, TN entries to record tuples are needed then memory usage becomes huge. Thus only (pi, Oj) pair counting should be done first, and tuple recording should be done only when the (pi, Oj) count satisfies the threshold a. This paper assumes the input data is sorted by attribute X; thus each tuple records the order.

D. Rule Integration Phase  This phase integrates optimized confidence/support Ra- tio Rules into a set when Ratio Rules are similar to each other. We call the set of integrated Ratio Rules as the Ratio Rule Set. For the definition of similarity, the Jac- card coefficient is applied. The Jaccard coefficient between two Ratio Rules RR1, (pi, Oj) and RRI2 (Pk, 01) is defined as follows:  RRI1 (pi,0 j) A RRI2 (Pk, 01) RRI, (Pi, Sj) V RR12 (Pk, 01)l  Here RRI (pi, O) means the number of tuples follow- ing RR, (pi, Oj). The definition is the ratio of the number of tuples following both Ratio Rules to either Ratio Rule.

If this coefficient exceeds a threshold, then RR1, (pi, O) and RR12 (,Pk, 01) are regarded as essentially the same. The threshold is represented as minmerge.

If calculating each Jaccard coefficient naively, check- ing the overlapping tuples (finding |RR,1 (Pi, 0j) A RRI2 (pk, Oi) ) are invoked the same number of times as   for each (pi, Oj) pair do for each tuple t do  judge whether t follows RR[ol ](pi, Oj) end  extract optimized confidence/support range I with ID numeric association rule mining  if RRI (pi, Ofj) satisfies mirnsup and mirnconrf then output RRI (pi,Oj)  end end    the number of all pairs of tuples following RR,1 (Pi, 0j) or RRI2 (pk, 01). In the pruning phase, however, tuples follow- ing each Ratio Rule are recorded in the order of attribute

X. Hence, to read tuples in recorded order and check over- lap immediately, overlap checking is invoked only at the same timing as the number of tuples following RR1, (pi, Oj) or RRIj (Pk, 01)  E. Summary of Proposed Method  Our target is not only to extract each optimized confi- dence/support Ratio Rule, but to obtain optimized confi- dence/support Ratio Rule Sets. Our proposed method to obtain Ratio Rule Sets consists of three phases: pruning, rule generation, and rule integration. Assume the num- ber of all tuples is N, the number of distinct parameter values for p, 0 are R, T respectively, the number of p, 0 pairs qualified by the pruning phase is P < RT, the num- ber of optimized confidence/support Ratio Rules satisfying mirnsup and minconf is Q < P. Here, computational com- plexity for each phase is O(TN), O(PN), O(Q2N), respec- tively. Our method achieves linear processing time for the data size N, while values of T, P, Q change by parameters c, 6, nmirnsup and mirnconrf.



IV. EXPERIMENTS  This section evaluates two issues: the appropriateness and properties of the proposed method. We use two syn- thetic data and two real datasets. Both real datasets are obtained from the UCI Machine Learning Repository [6].

The following experimentation used an algorithm imple-  mented in C language. The experiments for properties ran on a system with two Pentium III Xeon 1.0GHz CPUs and 2.0GB of main memory.

A. Overview of Dataset  A.1 Synthetic Data  To generate synthetic data, we assume a case in which there are p Ratio Rules, and for each Ratio Rule, q tuples follow. We also assume no tuple follows more than one Ratio Rule, so the number of all tuples is pq.

Ratio Rules and tuples following a Ratio Rule are gen- erated as follows:  1. Generate parameters p, 0 and range I = [Xmin, Xmax] at random.

2. Generate attribute value xi (1 < i < q) so as to dis- tribute uniformly in I.

3. Calculate yi to be yi = (p -xi cos 0)/ sin 0.

4. Add noise to yi. Here noise comprises values following  a normal distribution where mean is 0 and variance is 0.1.

5. Normalize X and Y to be their ranges [0, 1].

Parameters P, 0,Omin and Xmax are generated to satisfy  0 < p < 1, -7/2 < 0 < 7,,0 < Xmin < xmax < I and are distributed uniformly in each domain.

A.2 Abalone Dataset  This dataset records measurement results for an individ- ual abalone, including nine attributes. In this experiment,  we show "Length" and "Shell weight" attributes in seven continuous value type attributes. There are 4177 tuples.

A.3 Wine Recognition Dataset  This dataset records chemical analysis results of wines derived from three different cultivars. This data includes 13 continuous attributes, but we adopt "Flavanoids" and "Proline" attributes. There are 178 tuples.

B. Evaluation for Appropriateness  We first evaluate whether our proposed method extracts appropriate results from each dataset. Extracted optimized confidence Ratio Rules and optimized support Ratio Rules are similar except for their ranges. Thus we show only op- timized confidence Ratio Rules in this paper. To generate the synthetic data, we make parameters (p, q) = (2, 500) and (5, 2000). The former data is same as that in Figure 2 in Section I.

Figure 4 shows synthetic data when (p, q) = (2, 500) and all Ratio Rule Sets extracted. In the figure, a black point indicates each tuple and a gray area means that tuples follow some extracted Ratio Rule Set. Difference of the gray scale represents different Ratio Rule Sets.

The result is produced when e = 0.05, d = 0.03, mirnsup 0.25, mirnconf= 0.85, and minmerge = 0.5. For these  parameters 88 (p, 0) pairs in all 1200 pairs remained after the pruning phase, and final output was three optimized conficence Ratio Rule Sets. Two Ratio Rule Sets appear in both ends where only one linear relationship stands. An- other Ratio Rule Set appears where two linear relationships cross. Since the crossing part seems to have a linear rela- tionship, all results are adequate for optimized confidence Ratio Rule Sets.

Figure 5 shows another synthetic data, (p, q) = (5, 2000), and extracted all Ratio Rule Sets. The result is produced when e = 0.01, d = 0.05, mirnsup= 0.2, mirnconf= 0.4, and minmerge = 0.5. For these parameters only 637 (p, 0) pairs in all 33,984 pairs remained after the pruning phase. We obtained four Ratio Rule Sets.

The results show that extracted Ratio Rules Sets do not  merely express distributions of tuples, but express areas where tuples are dense for the X attribute. It means confi- dence in the area is high; thus our proposed method takes into account the support and confidence factors.

Figure 6 shows a result for the abalone dataset. The hor- izontal axis in the figure plots the normalized value for the attribute "Length," and the vertical axis plots the normal- ized value for the attribute "Shell weight." Black points and gray areas are the same as the results for synthetic data. Parameters are given to be e = 0.008, d = 0.04, mitn- sup = 0.6, mirnconf= 0.7 and minmerge = 0.5. After the pruning phase 26 (p, 0) pairs in all 5340 pairs remained, and finally only one Ratio Rule Set is obtained. In this dataset, distributions in the two areas Length < 0.5 and Length > 0.5 differ. Our method, however, extracted only one Ratio Rule Set so as to fit the distributions.

Figure 7 shows a result for the wine recognition dataset.

The horizontal axis plots "Flavanoids" and the vertical axis     OPTIMIZED CONFIDENCE RATIO RULES   06-  0.4  0.2  0 02 04 06 08 x  Fig. 4. Ratio Rules in Synthetic Data when (p, q) (2, 500)  OPTIMIZED CONFIDENCE RATIO RULES  r7 0.8 k  0.6  Fig. 5. Ratio Rules in Synthetic Data when (p, q) = (5, 2000)  - 06 LD  02 04 06 08 Length  Fig. 6. Ratio Rules in Abalone Dataset  OPTIMIZED CONFIDENCE RATIO RULES  +~ +?* ++  ++ +F  H-++ + + +  +*?~+?+ +  _ ?+ t ++  Flavanoids  Fig. 7. Ratio Rules in Wine Recognition Dataset      plots "Proline." Each axis is normalized. Parameters are set to be e = 0.075, d = 0.05, mirnsup = 0.5, mirnconf = 0.75 and minmerge = 0.5. After the pruning phase 23 (p, 0) pairs in all 480 pairs remained, and two Ratio Rule Sets are obtained. This data has two different linear relationships in 0.0 < Flavantoids < 0.4 and 0.4 < Flavantoids < 0.7.

The proposed method was able to find two Ratio Rule Sets representing each linear relationship.

From the four results above, we are sure that our pro-  posed method is able to extract enough appropriate Ratio Rules.

C. Evaluation of Properties  In this evaluation, we examine processing times for each variation of parameters p, 0 and data size. In evaluating parameter variations, we use two synthetic data sets hav- ing 10,000 tuples. They are generated by p = 5, q = 2000 or p = 10, q = 1000. The data when p = 5, q = 2000 is the same as the data used in the evaluation of appro- priateness. In evaluating data size variations, we generate datasets following the same Ratio Rules with the above p = 5, q = 2000.

C.1 Effects of Parameters  These experiments measure processing times of our pro- posed method when the tolerances c, d are changed. Pa- rameters e and d are decided by their granularities. We set  five granularities: 10, 50, 100, 500, and 1000. This means R and T are varied. In response to this setting, e takes 0.075, 0.0143, 0.00711, 0.001416, and 0.0007075, respec- tively. Also d takes 0.249, 0.0476, 0.02369, 0.00472, and 0.002358, respectively. d is set to 0.02369 when e is varied, and e is set to 0.00711 when d is varied. Processing times in the results are the average of five runs.

The experimental result for processing time is shown  in Figure 8. The left side in the figure is the result when e varies, and the right side is the result when d varies. Parameters for (p, q) = (5, 2000) data are set to be minsup = minconf = minmerge = 0.4, and for (10, 1000) data are set to be mirnsup = minconf = minmerge = 0.3.

The figures indicate both e and d have similar effect, that  is the processing time is minimized when the parameter is medium size. This is because when the parameter is too small, more tuples follow a Ratio Rule despite decreasing the number of candidate (p, 0) pairs. When the parameter is too large, (p, 0) candidates inclease despite fewer tuples following a Ratio Rule. In our experiment difference of the data does not affect to the effects of parameters.

C.2 Scalability  This experiment measures processing time when the number of input tuples is varied. The number of tuples is set to five cases: 10,000, 50,000, 100,000, 250,000, and 500,000. Parameters are set to bee = 0.00711, d = 0.02369,   OPTIMIZED CONFIDENCE RATIO RULES  -6  O _      E 4/1bD 1 0 .: .n cn a)  a)  a) E _1ho 1 0  aGoGo a)  10 100 1000 10000  Fig. 8. Processing time versus parameter  1 000 F   o  a)  .c  o 1 o O Q  1 L 10000 100000 1000000  number of tuples  Fig. 9. Result in the scalability experiment  and mirnsup= minconf = minmerge = 0.4.

Figure 9 is the result. As mentioned in section III.E, our proposed method can be processed in linear time according to input data size.



V. RELATED WORK  Two methods for Ratio Rule mining have been proposed.

One is a method using Principal Component Analysis [2] [7].

This method assumes a Ratio Rule as a vector, principal component, which maximizes variance of given data. The first Ratio Rule extracted by this method expresses a major factor; the other Ratio Rules then complement the first Ratio Rule. With this method, Ratio Rules are orthogonal to each other.

Another method is based on non-negative matrix factor- ization [3] or non-negative sparse coding [8]. This method assumes that all given data have non-negative values and there is no negative correlation. Here, Ratio Rules are not necessarily orthogonal, and non-negative matrix factoriza- tion or non-negative sparse coding find appropriate Ratio Rules.

Our work fundamentally differs from the related work in definition of the Ratio Rule. In our definition, a Ratio Rule is represented as a line segment in 2D space spanned by the target two attributes, while related work simply represents it as a spatial vector. It means our definition is generalized representation for Ratio Rules. Moreover, none of the existing work incorporates concepts such as support and confidence.



VI. CONCLUSIONS AND FUTURE WORK  This paper proposes a method of extracting Ratio Rules.

Our method can identify Ratio Rules approved in some ranges and introduces support and confidence factors in analogy to association rule mining. Our proposed method consists of three phases: pruning, rule generation, and rule integration. With our method, computational complexity is linear for input data size. We examined the properties of our method using synthetic data, and then showed that our method was applicable to very large data. We also ex- amined and confirmed appropriateness of extracted results using real data.

Future work will entail building methods to tune param- eters automatically according to given data, to extract Ra- tio Rules faster by distributed processing, and to extract Ratio Rules from among three or more attributes.

