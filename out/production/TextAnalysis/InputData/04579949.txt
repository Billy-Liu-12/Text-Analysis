Improving Information Retrieval Precision by Finding Related Queries with  similar Information Need using Information Scent

Abstract   Web is a valuable source of information and it is  expanding at an enormous speed. Search engines provide the interface to access to this vast pool of information. Users express their information need through the input query to retrieve the relevant information which does not prove to be effective as input query entered by the user is too short to get the information need of the user. To retrieve the information according to a particular information need from a big pool of information available on the web is a big challenge. This paper proposes a method to find the related queries which approximate the information need of the input query issued to the search engine.

This is accomplished using Information scent and content of clicked pages in query sessions mining.

Information scent is derived from the Information Foraging theory in which user behavior in the information environment is guided by information scent. Information Need of the query sessions is modeled using Information Scent and content of clicked URLs and query sessions with similar information need are clustered. The clusters which closely approximate the information need of input query are used to suggest queries with similar information need for a given input query. The suggested queries are ranked in order of their degree of relevance with respect to information need of the input query.  Retrieval   precision of search engine is improved as suggested queries help to retrieve document relevant to the need of user efficiently and quickly. Experimental study has been conducted on the dataset collected from "Google" search engine Web History to confirm the improvement of precision of Information Retrieval.

.

Key Words- Information Scent, Information  Retrieval, Clustering, Search engine.

1. Introduction  Current search engines retrieve too many documents of which only a small fraction is relevant to a user query [11]. Now a day the web search engines provide the user-friendly interface by which user can issue queries that are simply a list of keywords. From a study of the log of a popular search engine in [7] it was concluded that most queries are short and imprecise.

Due to ambiguity of query terms and short length of query, keywords of query could not determine the information need associated to the query. As a result many documents are retrieved which are not relevant to the input query and retrieval precision is degraded.

In order to overcome this problem work has been done in [4] which improve the information retrieval precision by recommending set of similar queries in response to the input query and set of suggested queries are ranked according to the relevance criterion but it is realized that precision can be improved further if recommended queries are selected using the information need of past query sessions issued on the search engine. According to the information foraging theory the user is guided in the information environment by information scent. Users tend to click those retrieved pages in search results which match their information need and those pages have Information scent associated with it with respect to their information need. More the page is satisfying the information need of user, more will be the information scent associated to it. High Information Scent pages are more relevant than low scent pages with respect to the information need of the user. Information need of the query sessions is accessed not only from content but also from information scent of clicked page with respect to the information need of user which is not considered in [4]. In [10] concept of Information Scent is introduced in the field of information retrieval to improve the precision by improving the rank of those pages in result set which are relevant to the user information need. In this paper the Information scent is   DOI 10.1109/ICETET.2008.23     used to infer the information need of the query sessions using Information Scent of the clicked pages in the query sessions and related queries are recommended using the query sessions with the similar information need. Information Scent is used to infer the information need of the query session by identifying the high and low scent clicked documents as every document clicked by the user in the query session is not equally relevant to the information need of query session some clicked documents are more relevant to information need of query session than others which is captured through information scent. Information Scent is used to access the relevancy of the clicked page with respect to the information need of the user. The solution proposed in this paper is used to model the information need of the query sessions using information scent and content of clicked URLs in the sessions. Information Scent helps to infer the information need of the query session using the uniqueness of frequently clicked documents in the session associated with the query. Query sessions modeled using information scent and content of clicked URLs are clustered to generate clusters of query sessions where each cluster represent a unique information need. The input query is then used to select the clusters which closely represent the information need of the input query. The selected clusters contain set of queries similar in information need to be used as recommendation to the user. Web history of ?Google? search engine keep track of queries and URLs selected by users when they are finding useful data through the search engines. The data is extracted from the web history and loaded into database which is preprocessed to find the query sessions. The query sessions modeled using Information Scent and content of clicked URLs are clustered to group the query sessions with similar information need. During online searching the queries are recommended in order of their relevancy with respect to the information need of input query.

Recommended queries help the user to find the relevant documents which are closed to his needs and which he could not get from initial query issued. The recommended queries are those queries which are different from initial query in term of keywords used but they are satisfying the information need similar to initial query. This paper is organized as follows: Section 2 describes the Information Scent, Section 3 explains the Clustering Query sessions with similar Information Need using Information Scent, Section 4 gives the proposed algorithm for Improving the Information Retrieval precision using Related Queries with similar Information Need, Experimental Study is presented in Section 5 and Section 6 Concludes the paper.

2. Information Scent  On the web, users search for information by navigating from page to page along the web links.

Their actions are guided by their information need.

Information scent is the subjective sense of value and cost of accessing a page based on perceptual cues with respect to the information need of user. More the page is satisfying the information need of user, more will be the information scent associated to it. The interaction between user needs, user action and content of web can be used to infer information need from a pattern of surfing [1][2] [8][9].

2.1. Information Scent Metric The Inferring User Need by Information Scent (IUNIS) [2] [6] is used in the proposed approach to weigh each clicked page vector in query sessions using the combined effect of two factors. The factors are page access PF.IPF weight and TIME both of them are used to quantify the information scent associated with the page. In page access PF.IPF the PF is the access frequency of the clicked page in the given query session and the IPF is the ratio of total query sessions in the log to the number of query sessions in which this page is clicked. This helps to reduce the Information Scent of those pages that are accessed in many query sessions and may not be very relevant to the information need associated with the current query session. The second factor that is taken is Time spent on a page in a given query session. By including the time more weightage is given to those pages that consume more user attention. The information scent sid is calculated for each page Pid in a given query session Qi as follows   ids = 1..nd)Pid(Time*)Pid(PF.IPF ??  (1)   )log(M/m*)/max(ff)PF.IPF(P PidPidPidid =  d?1..n                   (2)   )PF.IPF(Pid : PF correspond to the page Pid normalized frequency fPid in a given query session Qi and IPF correspond to the ratio of total number of query  sessions M in the whole log to the number of query sessions mPid that contain the given page Pid.

)Time(Pid : It is the ratio of time spent on the page  Pid  in a given session Qi  to the total duration of session Qi.

3. Clustering Query sessions with similar Information Need using Information Scent  Clustering is the process of grouping the data into classes or clusters so that objects within a cluster have high similarity in comparison to one another, but are very dissimilar to objects in other clusters.

Dissimilarities are accessed based on attribute values describing the objects. In this paper weighted query session vector is used for clustering where each page Pid in query session Qi is defined as follows.

Pid = Contentid   for each document id.

Contentid: The content vector of a page Pid is a  weighted keyword vector (w1,id,w2,id,w3,id,?,wv,id) where v is the number of terms in the vocabulary set V describing the content of the page Pid.

Vector Model [3] is used for representing content feature of each page Pid in all query sessions. Each page Pid is represented by vector (w1,id,w2,id,w3,id,?,wv,id) where v is the number of terms in the vocabulary set V.

TF.IDF (term frequency * inverse document frequency) term weighing scheme is used to represent the content vector for a given page Pid  [3]. The importance of each item of V in a given page Pid is calculated using TF.IDF item weight. Vocabulary V is a set of distinct terms found in all distinct clicked pages in whole dataset relevant to a content feature.

The TF.IDF term weight is calculated as number of times a term appears in the given page weighted by the ratio of the number of all pages to the number of the pages that contain the given item.

The information scent associated with the given clicked page is calculated by using two factors i.e.

PF.IPF page access and TIME. Each query session is constructed as linear combination of vector of each page Pid scaled by the weight sid which is the information scent associated with the page Pid in session i. That is   n Qi=?sidPid                                     (3)  d=1 In above formula n is the number of distinct clicked  pages in the data set and sid (information scent) is calculated for each page Pid present in a given session Qi .

Each query session Qi is obtained as weighted vector using formula (3). This vector is modeling the information need associated with the query session Qi.

3.1. Clustering Queries   Query sessions are clustered using k-means algorithm because of its good performance for document clustering [5][12]. Query sessions in our approach are similar to the vectors of web pages and hence can be clustered using the methods for clustering pages.

A score or criterion function measures the quality of resulting clusters. This is used by common vector space implementation of k-means algorithm [13].The function measures the average similarity between vectors and the centroid of clusters that are assigned to.

Let Cp be a cluster found in a k-way clustering process(p?1..k) and let cp be the  centroid of pth cluster .The criterion function I is defined as follows:  k I=1/M    ?        ?   sim (vi, cp )       (4) p=1     vi?Cp  where vi is the vector representing some query  session belonging to the cluster Cp and centroid  cp of the cluster Cp is defined as given below.

cp =        ( ? vi ) / |Cp|          (5) vi ?Cp  where M is the total number of query sessions in all clusters and |Cp|  denotes the number of query sessions in cluster Cp . sim (vi, cp ) is calculated using cosine measure.

4. Algorithm for Finding Related Queries with similar Information Need   The algorithm is based on clustering process that defines neighborhood of similar query sessions driven by similar information need using information scent and content vector of clicked URLs/pages in the query sessions. Each query session consist of a query along with the clicked URLs in its answer.

querysession=(query,(clicked URLs)+ )   where clicked URLs are those URLs which user clicked before submitting another query.

4.1. Algorithm   1. Offline Preprocessing phase at regular and  periodical intervals 1.1. Extract the queries and associated clicked  URLs from the data set.

1.2.  Preprocess the Extracted Queries to find  the query sessions.

1.3. Model the Information need associated to each query session using information scent and weighted vector of content of pages   in the session using  (1)(2)(3).

1.4. Cluster the Query sessions using information need associated to each query session using k-means.

1.5.  For each cluster Cj create a list of queries Qj in cluster Cj.

2. Online searching: 2.1.   Find the Cj cluster to which input query  q belongs.

2.2.   if   no cluster found then  2.2.1.    Find the Cj cluster which is most similar to term weight vector of input query q as per the threshold value set for similarity measure.

2.3. Rank the list of queries Qj associated with selected cluster Cj in order of their relevance to input query q upto certain similarity threshold value.

2.4. Return the ranked set of queries.

The rank of queries in set Qj is calculated using  similarity measure of each query vector x in Qj to input query vector q such that those queries with high value of similarity to input query q are ranked higher than those queries with low value of similarity to input query q where sim(x, q) is calculated using cosine measure between vector x and q.

Rank(x) = {sim(x, q):?x?Qj } (6)   5. Experimental Study  Experiment was performed on the data set containing the clicked documents associated with queries issued on the Google search engine. The data set was collected from the web history of Google search engine. The data set was generated by users who had expertise in specific domains.

The web history contains the following fields.

1.  Time of the Day 2.  Query terms 3.  Clicked URLs The data set generated from web history contains  several thousand entries out of which we have extracted 5325 entries. In the experiment only those queries in data set were selected which had at least one  click in their answer. The data set generated from web history is loaded into database to be processed further.

On the submission of input query, Google search engine returns result page consists of URLs with information about URLs. Query sessions considered consists of query terms along with clicked URLs. The clicked URLs are those URLs which user clicked before he submits another query. The number of distinct URLs in data set was found to be 3795.The data set was preprocessed to get 895 query sessions. In this experiment similarity of any two query sessions was calculated using cosine measure. The query sessions were clustered using k-means algorithm and it was executed several times for different values of k and criterion function was computed for each value of k. The criterion function was found to have maximum value at k=67.The threshold value set for similarity of two vectors was 0.5. The experiment was performed on randomly selected test queries which were categorized into trained queries set and untrained queries set. The trained queries were those input queries which had sessions associated with them in data set and untrained queries were those input queries which did not have sessions associated with them in data set. Some of the test queries in each of the category are given  in Table 1.

Table 1. Sample of Queries taken in each of  the category   The experiment was performed on Pentium IV PC  with 512 MB RAM under Windows XP using Java and Oracle database. WebSphinx crawler was used to fetch the clicked documents of query sessions in the data set.

Each query session was transformed into the vector representation using Information Scent and content of clicked URLs. The k-means algorithm was executed to generate cluster of query sessions. Each cluster of  Category Queries Untrained Set  Moviesong,Spacefood,novels  ,magazine, movies,Numbness, Nature, familyplay Games, movie pictures, software download, online tutorial  Trained  Set Homeloan, distanceeducation online, free pics, cgi perl tutorial, moons of neptune, how to play .vcd files, .vcd file, .api com, mpeg movies, dragonball,intranet, helpdeskmanagerjob description, free software     query sessions was represented by mean value of vector of terms. The Table 2 shows the cluster to which query "Games" and "hollywood video store" belongs. The first column shows the input query and second column shows the queries which belong to the selected cluster for a given input query. The queries in cluster are shown in order of their relevance to input query.

The relevance of recommended queries in the  selected cluster to input query is decided by some anonymous user having knowledge in domain to which input query belongs. The relevance is judged by analyzing the answer of recommended queries from the result set showing top 10 answers and determined the URL in answers which are relevant to input query.

The experiment was performed on randomly  selected 21 trained queries and 35 untrained queries.

The average precision of queries of trained and untrained query set was calculated for different number of recommended queries from the result set showing the top 10 answers. The experimental result shows that ordering the recommended queries according to their relevance to input query with respect to its information need using information scent shows promising result.

The Fig 1 and Fig 2 shows the precision of search  results without using query recommendation and proposed approach on the trained and untrained set of queries and it shows that recommended queries help the user to find the relevant document which the user could not find it from initial input query as keywords of the query given by him were few to retrieve the relevant documents. Recommended queries help to handle ambiguity by expressing the information need using alternative queries that are satisfying the information need similar to the input query but different in the keyword used.

Trained queries  0.2 0.4 0.6 0.8  0 2 4 6 8  NoOfRecommendedQueries  A vg  pr ec  is io  n  proposed approach w ith query recommendation w ithout query recommendation     Fig 1. AvgPrecision of Trained Queries for different number of Recommended Queries    UntrainedQueries  0.2 0.4 0.6 0.8  0 2 4 6 8  NoOfRcommendedQueries  A vg  Pr ec  is io  n proposed approach w ith query recommendation  w ithout query recommendation      Fig 2. AvgPrecision of Untrained Queries for different number of Recommended Queries      Table 2. Queries in Selected Cluster for input Query ?Games? and ?Hollywood video  store ?       6. Conclusion   In this paper efforts have been made to satisfy the Information need of user and improve the information retrieval precision by recommending related queries which approximate the information need associated to the input query using Information Scent. The information need associated to the query is modeled using information scent and content feature of clicked pages in the session. The suggested queries help the user to retrieve the documents relevant to his information need which he could not get through his  Test Query Other Queries in Cluster "Games" Games download  Internet games PC games Free online games Download play station games Downloadable games Free kid online games Hunting games Skies of arcadia pictures Xbox Mankind game  "Hollywood video store"  Hollywood  movie store Movie store Video store Hollywood long movie Hollywood entertainment Hollywood video     initial query. Experimental results confirm the improvement of the information retrieval precision.

7. References   [1] E. Agichtein, E. Brill, S. Dumais,  ?Improving Web Search Ranking by Incorporating User behaviour?. In Proceedings of the ACM Conference on Research and Development on Information Retrieval (SIGIR), 2006  .

[2]            E H. Chi, P. Pirolli, K. Chen and J. Pitkow  ?Using Information Scent to model User Information Needs and Actions on the Web?,In Proc. ACM CHI 2001 Conference on Human Factors in Computing Systems, 2001,pp. 490-497.

[3] R. Baeza-Yates and B. Ribeiro-Neto,?Modern Information Retrieval ? Addison Wesley, 1999.

[4] R. Baeza-Yates, C.A. Hurtado and M.

Mendoza  ?Query Recommendation using query logs in Search engines?, In Advances in Web Intelligence, Second International Atlantic Web Intelligence Conference, AWIC 2004, pp. 164-175.

[5] R J. Wen, ,Y J. Nie, J H Zhang, ?Query Clustering Using User Logs?.ACM Transactions on Information Systems,vol 20,No 1,2002,pp. 59-81.

[6] J. Heer and E.H. Chi, ?Identification of Web User Traffic Composition using Multi-Modal clustering and Information Scent?. In Proc of Workshop on Web Mining. SIAM Conference on Data Mining, 2001,pp. 51-58.

[7] M. Jansen, A. Spink , J. Bateman and T.

Saracevic, ?Real life Information retrieval: a Study of user queries on the web?. ACM SIGIR Forum, 32(1),1998, pp. 5-17.

[8] P.Pirolli ?Computational models of information scent-following in a very large browsable text collection?  In Proc. ACM CHI 97 Conference on Human Factors in Computing Systems, 1997,pp. 3-10.

[9] P. Pirolli ,? The use of proximal information scent to forage for distal content on the world wide web.? In Working with Technology in Mind:  Brunswikian. Resources for Cognitive Science and Engineering, Oxford University Press, 2004 .

[10] Punam Bedi and Suruchi Chawla, ?Improving  Information Retrieval Precision using Query log mining and Information Scent?, Information Technology Journal 6(4):584-588 Asian Network for Scientific Information  2007.

[11] V N. Gudivada , V V. Raghavan,  W. Grosky,  and  R. KasanaGottu ,? Information  Retrieval on World Wide Web?. IEEE expert, 1997, pp. 58-68.

[12] Y. Zhao and G. Karypis, ?Comparison of agglomerative and partitional document clustering algorithms?. In SIAM Workshop on Clustering High-dimensional Data   and its Applications, 2002.

[13] Y, Zhao and Y, Karypis . ?Criterion functions  for document clustering?. Technical report, University of Minnesota, Minneapolis, MN, 2002.

