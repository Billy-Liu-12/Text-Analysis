Dimensionality Reduction for Association Rule  Mining with IST-EFP Algorithm

Abstract?Frequent itemset generation is the important phase on association rule mining. With frequent itemset dataset, association rules will be obtained. The main problems that exist in association rule mining is the use of large computer main memory at the time of the formation of Frequent Itemset. EFP algorithms (Expand FP-Growth) overcome this problem by utilizing secondary storage as a processing area to store it in the table object in the database. Data management processes in a database done by using a DBMS (Database Management System). The database used is Oracle database which has its integrated DBMS.

Table object is a representation of the set on set theory in mathematics. One of set theory type is an intersection, the result of intersection of a set will be smaller than originally set (dimensionality reduction). IST-EFP algorithm apply the concept of intersection of set theory in EFP algorithm that can reduce 2.33% more items while maintaining association rules obtained.

Keywords?association rule mining; EFP algorithm; Oracle DBMS;  item reductions; set theory.



I. INTRODUCTION Association rules are rules that relate one thing to another  thing in which two things are closely interrelated. Association rules categorized as unsupervised learning because it can generate rules dynamically in terms of number and variety [1].

There are two reference values are calculated on association rules which are support values and confidence values. Support value is the ratio of one variable against frequency of the entire transaction. Support value will be compared with the value of the specified minimum support, only support values equal to or greater that will be processed further. Confidence value is a value that indicates the relationship of one variable with another ones, it compares the value of two or more variables combination. Result that will be taken from association rules are values that meet the minimum support and minimum confidence [2] [3]. These results can be used to determine managerial business actions  FP-Growth is an association rules algorithm which does not generate candidate itemset. FP-Growth forming tree structures by going through the stages of generation FP-Tree, Conditional  Pattern Bases, Conditional FP-Trees and ends with the formation of Frequent Pattern [4]. Frequent pattern will generate rules that will generate confidence values. Stages of sufficient length requires a relatively large resource that is used depends on the size of the dataset. Many previous studies which seek to minimize the time to make the FP-Growth algorithm process more effective by create new and better methods [7] [8] [9].

There is a previous research that introduces the use of tables in the DBMS to form FP-Tree. The reason of using the tables is to avoid long time of dataset processing in the main memory when forming the FP-Tree due to main memory capacity is not greater than the capacity of secondary storage.

In this study, the FP-Tree algorithm using the object as a shaper table FP-Tree in the call to Expand Frequent Pattern (EFP) table [5].

EFP algorithm generates an EFP table that stored in the database. EFP table contains all possible combination between items on a record from the original table (initial dataset). A record of the EFP table consists of items which have role as a parent or a child on the FP-Tree. Each record will have top of items that do not have a parent, this is an item that can potentially be eliminated according Frequent Pattern formation theory [5].

Set theory is able to analyze related items in a set, which are intersection, union or subsets. A rule is a relationship between the correlated items. In DBMS, relation between tables is the application of set theory intersection. For example found table X = {a, b, c) is related to the table Y = {z, a, b} on attributes a and b, in theory, the set can be written as X ? Y = {a, b} [6]. The results of several sets of relationships will generate a new set with a smaller number of attributes. The dataset will consist of one or a few records and a record will be made up of several items. Record is a representation of the set and the item is a representation of the attribute. By using the intersection of set theory and unsupervised learning of FP- Growth algorithm would be produces new dataset with smaller on dimensions / sizes.



II. OBJECTIVES Current research will apply a new method to improve an  EFP algorithm processing by reducing the size of the dataset (preprocessing phase) on item dimension. Association rules obtained will relatively unchanged.



III. METHODS Sample dataset used to analyze the results of the proposed  algorithm. Used PL/SQL programming language and Oracle Database 11g as environment development.

Used three real datasets from sales transaction (10 records with 344 items, 100 records with 1558 items and 1000 records with 3162 items). Each dataset will be processed using EFP algorithm and IST-EFP algorithm. The number of items produced and the number of rules generated from each of the algorithms will be compared and analyzed.



IV. FP-GROWTH ALGORITHM FP-Growth algorithm will generate frequent patterns from a  dataset. To gain the frequent pattern must go through the stages of (1) the ordering of items in descending order of frequency, (2) the formation of the FP-Tree, (3) Establishment of Conditional Pattern Bases, conditional FP-Tree and (4) Frequent Pattern Formation.

Here is an implementation of fp-growth algorithm to obtain the frequent pattern from the dataset:  TABLE I.  A DATASET WITH MINIMUM SUPPORT TRESSHOLD = 20%     Frequent Pattern obtained will be as follow:            TABLE II.

FREQUENT PATTERN WITH MINIMUM SUPPORT TRESSHOLD = 20%  Item Frequent Pattern e i e : 3 f e f : 2 l i l : 3 q f q : 2, e q : 2, i q : 2 j l j : 2, i j : 3 s g s : 2, f s : 2 r g r : 3 h l h : 2 p f p : 2

V. EFP ALGORITHM EFP algorithm will accelerate the frequent pattern  formation process conducted by the FP-Growth algorithm. The dataset will be instantly transformed into EFP table where the EFP table  is a representation of the FP-Tree.

TABLE III.  AN EFP TABLE  TID ITEM PRV TID ITEM PRV TID ITEM PRV TID ITEM PRV c1 f c3 q f c6 l c8 t h c1 g f c3 a q c6 f l c8 m t c1 s g c4 e c6 j f c9 g c1 p s c4 f e c6 p j c9 q g c2 i c4 q f c6 h p c9 r q c2 l i c4 s q c7 g c9 n r c2 q l c4 t s c7 r g c10 i c2 j q c5 i c7 s r c10 e i c2 n j c5 e i c7 m s c10 g e c3 i c5 l e c8 i c10 r g c3 e i c5 j l c8 l i c3 f e c5 a j c8 h l    An EFP table will be resides on DBMS. By using intersection SQL query between original table and EFP Table, frequent pattern will be obtained with the results as on TABLE II.



VI. IST-EFP ALGORITHM  IST-EFP(Dataset, minSupCount) 1. X = Dataset 2. X1 = CREATE temporary table FROM X WHERE  COUNT(*) > minSupCount 3. Y1 = CREATE EFP table FROM X1 4. Z = Y1 ? X on Y1.previtem IS NOT NULL 5. Return Z  Fig. 1.   IST-EFP Algorithm.

Suppose the data set used is from TABLE I, X1 = {i, e, q, h, k, d, s, j, g, r, p, b, a, t, c, f, n, l, m}. By applying the EFP  TID Items Sorted Items c1 d,g,f,p,s f,g,s,p,d c2 q,i,l,n,j i,l,q,j,n c3 q,e,f,i,a i,e,f,q,a c4 s,e,f,q,t e,f,q,s,t c5 a,i,l,e,j i,e,l,j,a c6 f,p,j,h,l l,f,j,p,h c7 m,r,k,g,s g,r,s,m, k c8 h,i,l,t,m i,l,h,t,m c9 q,r,n,g,c g,q,r,n, c c10 e,r,b,g,i i,e,g,r,b      algorithm then obtained a dataset with 11 items, Y1 = {i, e, q, h, j, g, a, l, m, n, f,}. Based on step number 4 in the IST-EFP algorithm then we will get a new dataset with 9 items, Z = {i, e, h, j, g, a, l, n, f}. Items that are removed are {k, d, s, r, p, b, t, c} where item {d, c, k, b} has a support count value 1 (automatically pruned) so pruning is done on items {p, r, s, t }.

TABLE IV.

A NEW DATASET AFTER PRUNED WITH IST-EFP ALGORITHM     Association rules obtained will be shown on table V.

TABLE V.

ASSOCIATION RULES OBTAINED BY IST-EFP ALGORITHM

VII. DISCUSSIONS Real dataset from sales transaction used which have 10  records and 19 items. Each of these records are sorted from the largest to the smallest. Each record occurrence rate <2 will be automatically pruned because it is infrequent items that are not needed. EFP algorithm will produce 50 lines of records (10 records multiply by 5 items) sorted from largest to smallest.

IST-EFP algorithm will discard the item with the smallest value in each record so that the dataset will be more small.

The table below illustrates the evaluation of the 3 datasets M_Txx_Cxx, Txx stated number of records and CXX stated number of items.

TABLE VI.

EVALUATION ON DATASETS OF IST-EFP ALGORITHM  O riginal EFP IST-EFP EFP IST-EFP  1    M_T10_C344 344           51      43           137         110  2    M_T100_C1558 1,558        748    674         4,864      4,678  3    M_T1000_C3162 3,162        2,700 2,325      110,146  108,887  No Dataset  Number of Item Number of Rules   M_T10_C344 dataset has 344 items spread on 10 records.

If the data is processed using the EFP algorithm found the number of items was reduced to 51 (85.17%) of the number of items in the initial dataset (344) by the number of association rules generated as many as 137. If the EFP algorithm result data processed further with an IST-EFP algorithm, will get the number of items reduced to 43 (87.50%), the number of association rules as much as 110. In the dataset M_T10_C344 seen that IST-EFP algorithm performance is 2.33% better on items reduction then EFP algorithm with reducing the number of rules as much as 19.71%.

M_T100_C1558 dataset has 1558 items spread on 100 records. If the data is processed using the EFP algorithm found the number of items was reduced to 748 (51.99%) of the number of items in the initial dataset (1558) by the number of association rules generated as many as 4864. If the EFP algorithm result data processed further with an IST-EFP algorithm, will get the number of items reduced to 674 (56.74%), the number of association rules as much as 4678. In the dataset M_T100_C1558 seen that IST-EFP algorithm performance is 4.75% better on items reduction then EFP algorithm with reducing the number of rules as much as 3.82%.

M_T1000_C3162 dataset has 3162 items spread on 1000 records. If the data is processed using the EFP algorithm found the number of items was reduced to 2700 (14.61%) of the number of items in the initial dataset (3162) by the number of association rules generated as many as 110146. If the EFP algorithm result data processed further with an IST-EFP algorithm, will get the number of items reduced to 2325 (26.47%), the number of association rules as much as 108887.

In the dataset M_T1000_C3162 seen that IST-EFP algorithm performance is 11.86% better on items reduction then EFP algorithm with reducing the number of rules as much as 1.14%.



VIII. CONCLUSIONS IST-EFP algorithm able to reduce the dimensions of the  dataset items better than EFP algorithm. The performance of reduction depends on the dimensions in the test dataset, the larger the dimensions of items from a large dataset, the algorithm will be more effective then the EFP algorithm to perform reduction. In datasets with datasets that have a dimension of 344 total items, IST-EFP algorithm has 2.33% better performance than EFP algorithm. In datasets with dimensions as many items as 3162, IST-EFP algorithm has 11.86% better performance than the EFP algorithm.

