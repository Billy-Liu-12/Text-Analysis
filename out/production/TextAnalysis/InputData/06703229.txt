Based on the user behavior characteristics of mining database anomaly detection  model design

Abstract?This paper first designs a database anomaly detection model. This model can be more accurate depiction of the behavior of users and can improve database abnormal detection correctness. In the design of the model, the Apriori-kl algorithm is put forward and it is based on the clustering k- means algorithm and the improved Apriori algorithm.It can better exploit the behavior of users, and the database abnormal more effectively detection. Through the related experiments show that Apriori-kl algorithm in time expenses and detection accuracy in is better than pure use based on association rules mining technology Apriori algorithm.

Keywords- anomalous detection model ; Apriori-kl user behavior

I.  INTRODUCTION As the development of intrusion detection technology  and data mining technology, the database auditing log which is seen as a passive concept of security has changed [1].It is an important means to ensure the database security that database exception is actively detected by the user behavior profile of the database mining [2].

The so-called user behavior profile is the regular access of certain resource including the database, data tables and so on. This long-term regular operation of a resource is characteristics of the user behavior patterns.

At present, there are mainly three aspects deficiency existed in the users' behavior profile mining. First, due to the various types of audit logs in the database management system ,It is rather difficult to select what audit records can be effectively used to mine the users' behavior profile.

Second, as the existing algorithms can not correctly describe the users? behavior profile, resulting in higher false positive rate of database anomalous detection. Third, although some existing algorithms can achieve mining the users? behavior profile, when referring to the massive user database access logs they significantly lack of efficiency [3].

This paper mainly does the following two key researches to solve the above questions: Firstly, A database model is designed for anomaly detection. Secondly, Apriori-kl algorithm based on this model is proposed, which is a more efficient detection of abnormal database algorithm.



II. DATABASE ANOMALOUS DETECTION MODEL This paper designs a database anomalous detection model,  as shown in Fig. 1.

A  Data Acquisition Layer  Mining user behavior characteristics of the  timed trigger  Current test data  Display layer  Data Preprocessing  Audit training data  Data merge module Session connection record  Knowledge rule base  Table of User Behavior Rules  Library of Timing conditions  Mining user behavior characteristics of manual trigger Anomaly detector  Abnormal  B Correlation  Analysis of Algorithms Apriori-kl  k-mean clustering  B:Data mininguser behavior characteristics  automatic generation  Results table of Anomaly detection  Y N  A:Database anomaly detection management system  Figure 1. database anomalous detection model   The model mainly includes the following five modules: data acquisition layer module, data preprocessing module, data merge module, user behavior mining module, anomaly detection module.

A. Data Acquisition Layer Module Main function: making mainly use of log miner and other  database log collection tools or database system's own log analysis tools, such as MSSQL's Profiler to complete the collection of the current test data and the audit of the training data.

Figure 2. the form of collected audit log data detection   The paper use the MSSQL event Profiler to complete the  work of data collection, and the corresponding logs collection template could be set to filter those dispensable       database audit data before the data are gathered. As shown in Fig. 2.

Figure 3 The form of the table of session connection  B. Data Preprocessing Module Main function: After the data collection (audit training  information, the current inspection of data), to remove the original noise data, such as, incomplete audit data, no specific operational users, no operating object data and other important information, as well as stemming some data is not associated with the required data from related communication link protocol when database server is connected by client.

C. Data Merge Module Main function: Firstly, to statistic the number of  operational database objects, such as data table, data view and so forth operated by this user. Secondly, to deal with the operation object and user by means of the numerical identification, and then stored in the established session record table. Furthermore, each connected operation record is regarded as a transaction T, all of transaction T constitutes the database D, which is be used for mining user behavior characteristics. Each transaction belonged to the database D is composed of the field of session connection ID, the field of Database operation user, the field of operation object, the field of operation path, and so on a total of 11 fields.

The form of the table of session connection is the above Fig. 3.

D. User Behavior Mining Module Main Function: First, the operation on the database  operated by the user and the user's database objects need to be clustered by using the k-means algorithm in the data mining technology, thus completing the Preliminary Characterization of user behavior. Also make the first preparing for further mining of user behavior characteristics.

Second, to improve the efficiency of mining characteristic rules about user behavior through using the improved algorithm Apriori-kl, and then will tap into the knowledge of rules out the rules database.

As shown in Table I, the association rules results is listed by mining the Session connection records in the table transaction.

TABLE I. TABLE OF ASSOCIATION RULES  ID Rules Support confidence  Jack,fillng,www-  09ecb2cdb98?insert_1 0-20  27.35% 94.65%  Tom,M_select,pc-  2010011610?insert_2 0-30  24.27% 89.98%  ?. ???.. ?.. ?..

For example, the meaning of the first rule: In all session  connection record of the transaction database, there is 27.35 percent conversation is that the database user Jack access to the table of "filling" in the database server through client whose path named "www-09ecb2cdb98". Under the circumstance that the database user is Jack and the operation path is "www-09ecb2cdb98", there may be 94.65 percent session connection meaning that 10-20 data records will be inserted to the table of "filling".

In addition, the timing conditions set in the timing conditions library can trigger the user behavior digger periodically in the model, and complete the effect of automatic detection on line to some extent. At the same time the database administrator can also manually trigger the user behavior digger.

E. Anomaly Detection Module Main function: to compare the training phase of the rules  produced by normal users (read from old-rules table)  with the test phase of mining association rules (to read from new- rules), if the database exception occurred then the unusual details should be timely recorded and displayed.

Anomaly detection algorithm as follows:  Input:    The current audit data to be detected Output:  The information of detecting anomalies  Method: (1) acquire the begin time of detection: starttime (2) While (each rule in old-rules){ (3)    While (each rule in new-rules){ (4)          If ((the antecedent of rules in old-rules  == the antecedent of rules in new-rules) && ( the consequent of rules in old-rules  == the consequent of rules in new-rules) && ( the difference of support and confidence  between the two rules greater than 35% )) (5)                        {make intrusion information record  in the Intrusion table} } (7) the end time of detection: endtime (8) record the time spent testing(starttime-endtime) (9)  If (interrupt) { (10)  break }}

III. THE RESEARCH OF THE MODEL OF KEY TECHNOLOGIES   Numerical identity users and  operation object Enter audit data and the  value of cluster K  All objects of the cluster initial zero  All objects of the cluster initial zero  Choose k objects randomly as initial cluster  Using k-means clustering  Update the average of cluster  Whether the change in E  Calculating criterion function E  Output the results of clustering  Y  N   Figure 4. clustering process  A. Preliminary Characterization of User Behavior Features Based on K-means This paper mainly make use of k-means clustering  algorithm to deal with the users of database and operating object data, so as to characterize the initial behavior profile of users.

The criterion function E of k-means algorithm defined as formula (1) as follows [4-6]:    k  i i p Ci  E p m ? ?  ? ???                                        (1) The clustering process of database users and database  objects is shown in Fig. 4.

B. Apriori-kl association rule mining algorithm Apriori algorithm is proposed for the Boolean association  rules mining frequent item sets of original algorithm, in 1994 by R. Agrawal and R. Sriant [6]. Although using Apriori algorithm own nature can increase efficiency to some extent, but there are still many problems led to low efficiency of the algorithm [7].

In order to mine the log data of the database more efficient this paper gives the corresponding improved algorithm Apriori-kl algorithm.

1) Related theorems and conclusions Theorem 1: Suppose frequent k itemset can generate k +1  itemset, then the number of itemset of the frequent k itemset certainly greater than or equal ? k.

Theorem 2: kc C? ? , R (c) could be generated by the two elements of R (x), R (y) (x ? y) in 1kR ? , and R (c) = R (c) ? R (c).

Conclusion 1: For each candidate item kc C? , If obtained by 1 1k kL L? ?? ,the self-connection, and t c	 ? satisfy 1kt L ?? , then it can also be obtained by 1 1kL L? ? .

The conclusion could be proofed by contradiction.

Proof: Suppose kc C	 ? , satisfy 1 1k kc L L? ?? ? , as well as 1 1kc L L? ? .on account of t c	 ? , satisfy 1kt L ?? ,and also 1 1kc L L? ? ,so conclud that 1c t L? , named C. It is clear that C is in contradiction with the assumed condition that the length of c t?  is 1 as well as kc C?  is also obtained through the frequent itemsets. Therefore, for kc C? ? ,exists  1 1kc L L?? ? .

2) The basic idea of Algorithm  Data storage format that a transaction identifier corresponds to multiple forms is known as the standard data format in the transaction database. Whereby, data storage format that a transaction identifier corresponds to multi- transaction identifier related to the item is known as the vertical data format.

The data with standard data format is converted to vertical format by scanning the database once. Meanwhile each item in the itemset and transaction identifier corresponding to the items are stored separately using two dynamic lists storage. The support count of kC  can be obtained by 1kL ? 1L without repeating scan of the database to obtain the support count of kC .

Connection conditions of Apriori algorithm are optimized using the conclusions that are proved in this paper.

Frequent itemset k are got by connection conditions of 1 1kL L? ? , and the last item of 1kL ?  according to index is compared to each item of 1L  when 1 1kL L? ? , avoiding duplication of comparison of connection conditions of 1 1kL L? ? ,and without considering whether (k-1) subset of candidate itemset kC  is in 1kL ?  .

The times of frequent itemset k are optimized by Theorem 1, and the support counts of candidate itemset k are solved by Theorem 2.

3) The Apriori-kl algorithm described as follows:    Input :      D :  Transaction database min _ support : minimum supportcount Output :    L :  Frequent itemsets in D M ethod : (1) {The set of all items} (2)for each Candidate itemsets { ( ) ;} (3)f  C c C R c  ? ? ? ?    1 1 1 1   or each transaction D{ (4) SubSet( , ); / / the table of generated each item ID in itemset (5)for each { ( ) ( ) t_TID;}} (6)Count_Support( ); (7) { | c_delete=0}; { ( ) | }; (8)Up_Sort( )  t  t  t C t C  c C R c R c C  L c C R R c c L L  ? ?  ? ? ?  ? ? ? ?   1 1  k  ; (9)for(k=2;| |>k-1;k++){ (10)Up_Sort( ); apriori_gen( );} (11)L= ; (12)function Count_Support(C:candidate _ k itemset){ for each Candidate itemsets ;{ if(c_support= ( )<min_support  k  k k k  k  L L C L  L  c C R c  ?  ? ??  ? ?  ?  ?  ?1 1 1  ){ c_delete=1;}   }} 13 function apriori_gen( : Frequent k 1  itemsets)  { for each { if(c_support=| ( )|<min_support){ c_delete=1;} } }  k  k k  L l L  R c  ?  ? ?  ? ?

IV. EXPERIMENTAL RESULTS AND ANALYSIS Experimental environment: Server computer:  Cpu is P4 2.4Ghz, RAM is DDR 512MB; Database management system uses MSSQL 2000; The audit log data are acquired by MSSQL 2000 Data Profiler.

Client computer: Cpu P4 2.4Ghz, RAM is DDR 512MB.

A. Experimental 1 Time Performance Testing The time performance comparison of the mining of user  behavior association rules between the user behavior digger presented in the mode and a simple mining based on Apriori mining algorithm.

In the experiment, using 1000, 2000, 3000, 4000, 5000 database transaction records to test the mining time of the two algorithms in the case of the same support after data clustering process.

The result is shown in Fig. 5:   Figure 5.experimental result 1  The analytic results from Figure 3 show that in the case of the same support and different services, Apriori-kl algorithm spent less time than Apriori algorithm with the increasing number of services.

B. Experimental 2 The Accuracy of Anomaly Detection of the Model The comparison of detection accuracy between user  behavior digger combined with anomaly detector presented in the mode and traditional model of database anomaly detection based on Apriori algorithm.

In the experiment, using 200, 300, 400, 500, 600 and 700 database events to test the detection accuracy respectively.

The result is shown in Fig. 6:    Figure 6.experimental result 2   The experimental results show that mining characteristics  of user behavior after the audit log clustering could excavate user behavior rules more efficiently, and so the accuracy of database anomaly detection is also improved more effectively.



V.  CONCLUSION This paper presents a model of database anomalous  detection in order to effectively improve the accuracy of database anomalous detection. According to this model, an effective Apriori-kl algorithm is proposed. Compared with Apriori algorithm, Apriori-kl could avoid arising some uninteresting rules to some extent and depict database users' behavior profile more comprehensively. The model has already been used in the practical project and has a good effect in application. Finally, sequence pattern mining applied in users? accessing the database log will be an essential research content in the future.

