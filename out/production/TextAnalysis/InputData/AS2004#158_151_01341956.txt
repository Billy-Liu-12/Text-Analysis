<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings  of the 5* World Congress on Intelligent Control %ZE+wm#%E ma%%*

Abstract - Instead of putting too much focus on current approaches to protein secondary structure pre-diction, the authors will look at the natural instincts of protein secondary structures, and pro-pose a schema representation which are offered for identifying regular patterns among various types of secondary protein structures. The schemas employ genetic algorithms base on a steady-state strategy and two disjunctive data sets will he used to verify fitness function for our approach.

In this study, 904 schemas were found, and nearly half of the said schemas reached confidence of 70% and higher. Finally, the paper concludes with some illustrations of significant schemas produced as plirt of this study, with brief explanations of their significance.

Index Terms - I machine learning; steady-state genetic algorithm; pattern finding; association rule mining: secondary protein structures

I. INTRODUCTION The latest version of the Protein Information Resource (PIR) database (updated on Dec, 9 2002) contains 283,269 protein sequences. In comparison, the Protein Data 'Bank (PDB) only contains 19,551 protein structures, since they are much more difficult to determine. The secondaq structures of proteins are now considered crucial to understanding their tertiary Structures [l,  2, 3, 4, 51; however, even though secondary structure data is often used in protein recognition and protein structure 'prediction -[6, 7, 8, 9, 10, 111, few attempts have been made to determine shared secondary structure patterns. Based on studies describing statistical regularity between single amino acids and various secondary . structures [12], some researchers have suggested that secondary structure formation may, at least to a certain degree, be determined by sequential amino,acid interaction [ 131. Here we'will  propose a representative schema for amino acid interactions as an aid for analyzing the relationship between them and various protein secondary structures.

A schema can he regarded as a sequential pat-tem. In its general definition, a sequential pattern means frequently occumng patterns related to time or other sequences, and schema differences are often expressed in terms of positions.

Agrawal and Srikant introduced the concept of mining sequential patterns fr0m.a set of market-basket data [14].

Sequential pattern mining methods make use of variations in A priori-like (statistics-based) algorithms, with different re- searchers using different parameter settings and constraints [15, 16, 17, 181. But there is still no related research on our problem yet. On the other hand, association analysis is the discovery of association rules showing attribute-value conditions that occur frequently together in a given set of data.

A pattern in the Association rule mining dose not follows any specific sequential order, which differs from sequential pattern mining. Thus, more general pattems can be found with association rule mining. Traditional statistical methods identify significant patterns or rules ac-cording to their frequencies in data sets; in contrast, a schema also considers distinguishability. Hence, we will use association rule mining  to find some pattems in our data set for comparison. By this, we will not only get a comparison with our method but also emphasize the significance and necessity of distinguishability in a schema.

In the absence of a widely applied data mining method, we adopted a genetic algorithm based on a steady-state    we adopted a genetic algorithm based on a steady-state strategy [19]. This approach is based on genetic algorithms as described by John Holland [20], whose work is associated with natural selection principles. The computational aspect of this method, which entails a great deal of random searching, is considered both effective (because of its fitness function) and flexible (be-cause of its problem encoding capability) [21, 22, 23, 24,251. We adopted a genetic algorithm approach for two reasons: a) it allows for the design of a fitness function that considers frequency and distinguishability (as opposed to traditional data mining methods that emphasize frequency only); and b) unlike traditional data mining methods (which lack crossover and mutation operators), genetic algorithms are more useful in determining regularity over a training set.

11. METHODS A. Schema Protein secondary structures are generally designated as H (alpha helix, 3/10 helix, pi helix), E (beta bridge, beta ladder). and L (turn, bend) [26]. Biologists acknowledge that the behavior of any amino acid in a protein sequence is susceptible to adjacent amino acids, hut little work has been done to identify the regularity of these interactions. To address this problem, we applied Holland's schema theory [20], with the use of schemas to reflect the regularity. A schema is a bit string in which a bit is either an amino acid or an asterisk that represents any amino acid. Figure 1 shows an example of a schema in which the first and last positions are both amino 0-7803-8273-0/04/$20.00 02004 IEEE acid A, and amino acid L is in the center. Currently, we only focus on schemas of nine amino acids in length.

A.**L**** H . .

Fig. 1. Schema example Secondary. s'tructures are thought to be related to molecular interaction; a schema represents the most stable molecular configuration in terms of Van Der Waal's forces and hydrogen bonds. The schema in Figure 1 could he associated with the helical structure, which may be determined by interactions among the amino acids A (first position), L (middle position), and A (final position). Our goal is to identify significant schemas that can be used to characterize various protein secondary struc,tures. This is a non-trivial task be-cause a) the nwbef  of necessary schemas is unknown, b) the schema length is variable, and c) a measure is needed to evaluate. the schema's quality.

I I I '  0 + Ex h.a c t i n g Fig. 2 Methodology used in this research B. Algorithm A decision was made to use steady-state Genetic Algorithms (SSGAs) to search for possible schemas because they are frequently used in rule-based systems [27] and schemas can be considered a form of rules. Each schema that evolved was used to classify the secondary structure of a protein sequence. As shown in Figure 2 ,  the schemas were encoded into the SSGA population. During the evolutionary process, schema that matched the established criterion were organized into a schema set and used to analyze protein secondary structure regularity in terms of its primary sequence patterns.

The framework of a SSGA in our study is illustrated in Figure 3. As shown in Figure 3, a chromosome C l  is first Randomly Select Crossover Mutation Compare with fitness Fig. 3 .  SSGA flowchart ~ 20 Populations far 20 amino acids    20 Populations far 20 amino acids Fig. 4. A sample population for amino acid R randomly selected from a populatio5 C1, will be either mutated or crossed oyer a .  second randomly selected Chromosome to yield C2.  A chromosome C3 that is most similar to C2 is then taken from the population for comparison. The one with better fitn5s will survive to the next generation.

There are several components in our system. They are chromosome encoding, population initialization, fitness function and genetic operators.

To reduce the computational complexity, in-stead of using a single huge population of chromosomes, we initialize a population for each amino acid. In a particular population for amino acid, e.g. R, each chromosome represents a potential schema of nine amino acids in length with the amino acid, R, fixed at the center position, while the others randomly determined. The reason we fix R at the center of the schema in this case is that we try to model the interactions between the center R and the other neighboring amino acids. During the evolution process, the genetic operations, i.e., mutation and crossover, apply to all positions except the center to maintain the specificity of the schemas in each particular population.

An illustration of the 20 populations under consideration is presented in Figure 4. Each schema is associated with a specific secondary structure determined by its fit-ness.

The design of our fitness function is based on the fact that there is a correlation between the primary sequence and the secondary structure it forms. To evaluate the fitness of a schema, s, we first measure its tendency toward each secondary structure, defined as follows.

where tendency(s)ss is the tendency of schema s toward a particular secondary structure ss(H, E or L). SASS, represents the alignment score between schema s with a secondary structure ss and the ith schema of ss in the training set.

SAssmax and SAssmin mean the maximum and minimum alignment scores respectively. Note that we only consider those alignments with scores' above a specified threshold.

Alignments with low scores are considered noise.

We prefer schemas' with greater discrimination power, that is, a good schema should have a strong tendency, a significant difference in ,value between the highest and the second highest tendencies, toward a particular' secondary structure. Given all the tendencies toward various structures, we define the fitness as: , 'where Tendency(s)highes, and' Tendency(s),,d represent the highest and the second highest tendency of schema s respectively.

We adopt a steady-state selection mechanism to choose candidate schemas to participate in evolutionary process.

Standard genetic operators such as uniform crossover and multi-point,mutation are applied to generate new populations.

The same evolutionary process is repeated until the fitness values of.schemas do not improve. After the convergence, from all the twenty populations, we combine those schemas 'with high fitness values to form the final significant schema set. These schemas can then be used to classify the secondary structures of new protein sequences.

Table 1. Training set of 124. proteins used' for learning schemas laaj laba ladd lads lapa laps Ibt? lc5a lcaj lccr lcdb lcde lcgt lcid lcrl leyo ldog leco lede l e m  lfdd lfha lfhb lgal . lgpb lhbq lhmy lhra lifc lipd l i e i l m g n  lmup lndk lofv lomp losa lphh lplc lpyp lrhd lmd Is01 lsgt I s m  lspa Itm l t k  I tm lula lvqh 2aak Zabh Zabk 2ayh 2chp Zcdv 2cp4 2cpl 2cro 2cts 2cyp 2fon Zliv 2nrd 2pfl2phy 2sga Zsim Zsnv Zspo 3adk 3dfr 3gbp 3grs 3pgk 3pgm 31gI 4enl4fgf 4gcr 4xis 5nn9 6taa labp Sacn Silb 9mt 1291 laep larb lbw3 ldhr leaf lgky lgof llis lnar lpoa lpoc lppn lrcb lsbp lml lutg Zbaalcas Zcmd 2ctc 2dri 2end 2mhr 2mnr 2omf 2pgd 2pia Zpor 2m2 2sas 2stv 2tei 3chv 3cla 5021

III. EXPERIMENTS

III. EXPERIMENTS A .  Methodologv and Data sets There are two purposes of our experiments. First, we want to verify the confidence value of ow system; second, we want to validate the fit-ness function. As our system is within the supervised leaming paradigm, 'we prepared the training set and testing set respectively. The training set consists of 124 protein sequences each of which has more than 80 amino acids in length, and the painvise similarity is below 25% (similar to RS130 [13]). They were used to train SSGA to find significant schemas associated with various protein secondary structures. The 124 proteins are listed in Table 1. To obtain the confidence and support value, we tested SSGA on the N- PDB data set created by NCBI after removing those sequences used for training. If A B) is a probability of both A and B. The confidence and support value are defined as B is the form of rules, and P(A confidence (A - B) = P(B I A) = number of correct classifications (3) number of schema matches number of correct classificaiions (4) support (A j B) = P(Au B) = number of secondarystructure matches From large databases, biologists have found that there exists some preference of secondary structures for each amino acid. We thus looked into the finally converged twenty populations for similar correlations. The similar correlations may suggest that the fimess function we used can approximate real biological meanings so as to justify its usage.

B. Results The statistics of amino acids and secondary structures in the non-redundant Protein Data Bank is summarized in Table 2. The first two columns present the number of occurrences of each amino acid and its percentage in the nr-PDB, and the remaining columns show the number of occurrences and the Table 2.  Statistics for 20 amino acids in the nr-PDB chain set I I  I I I percentage of secondary structure H, E and L within the nr- PDB respectively.

