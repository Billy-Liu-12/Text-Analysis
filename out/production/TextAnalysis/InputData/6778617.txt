An Improved Collaborative Filtering Algorithm  Based on Sparse Dataset?s Optimization with

Abstract?Collaborative filtering technology is the mainstream recommendation technology in personalized recommendation system, the sparsity of the dataset plays a leading role in the prediction accuracy of the collaborative filtering algorithm. Virtual data filling and neighbors? calculation etc. are adopted to solve the sparsity problem in traditional methods, which lacked of dynamic changes of rating data and objectivity. For the deficiencies of the traditional methods, making use of the data redundancy and dynamic changes in Big Data environment, to improve the sparse dataset, this paper proposes an improved collaborative filtering algorithm based on optimizing sparse dataset through user?s browser information. This approach gets data related with user objective score from various fields through user?s IP address to fill the dataset and reduce the sparsity of the dataset of candidate neighbors. The algorithm is compared with other classic algorithms on the performance and analyzing the result in the case of sparse dataset. The experiments results show that the algorithm can effectively reduce the sparsity of the data set, and improve the quality of recommendation system.

Keywords?collaborative filtering; sparsity; big data; dynamic changes

I. INTRODUCTION Recently, with blogs, video sites, mobile devices,  communications services emerging as the representative of the way of new information dissemination, and with the rapid development of the Cloud computing, The Internet of things, Social networking and other emerging services, the large amount of data increase to the PB level, the Big Data is coming.

The Big Data appears both convenient and cumbersome; it is convenient to process and release information and is difficult to find information of interest. Personalized recommendation technology is recommended for users of information of interest, and gets a lot of attention. Collaborative filtering algorithm is one of the most widely used recommendation algorithms. The sparsity of the user-item rating data set plays a leading role on the prediction accuracy in the user-based collaborative filtering algorithm. However users tend to make only a small part of their interested evaluation, which will inevitably lead to sparsity of data set.

Currently, the researches of Mostly scholars for collaborative filtering data sets are based on static data set or  virtual data to solve the problem of data sparsity. But users? interest is dynamic, which will lead to the recommendation information is not accurate. However, in the Big Data environment, there are a large number of multiple types of data, and the data derived from a variety of different areas, the growth of data is extremely fast, the data hidden very precious value data. We take advantage of these features just make up for the deficiencies of the traditional data environment to solve the data sparsity.



II. RELATED WORK For the data sparsity solution is divided into two categories:  first, improve the accuracy of similarity computation algorithm; second, reduce the sparsity of the data set. Improve the accuracy of the algorithm can improve the quality of the recommendations, but in the case of extremely sparse data, the accuracy of the algorithm to improve for recommended quality still is minimal, thus reducing the sparsity of data sets has a very important role. At present, many scholars have done a lot of research on the sparsity of the data set. Some scholars have made an in-depth study in reducing the number of matrix dimension[1-3], not only effectively reduced the matrix dimension, but also reduced the overhead of the calculation, and improved the scalability of the algorithm. But at the same time it deletes some useful hidden data. Clustering [4,5]is mainly according to a certain method to divide the users or items into a plurality of clusters, and having a similar preference of the user, or similar properties as the type of project is assigned to the same cluster. This method can alleviate to some extent the problems of data sparsity, but in the case of the original data is extremely sparse the recommended accuracy of the experimental results is unsatisfactory. Filling can reduce the sparsity of the data set, and improve the quality of recommended; this paper focuses on data filling method.

Generally the easiest method is that the items not rated are filled with a fixed value or mean value [6], while this approach can reduce the sparsity of the data set. However, fixed or average score value means that the user?s interest is fixed. But in fact, the user?s interest in dynamic change over time, and in the natural the user?s rating will be along with the change. BP neural network [7] for complex input-output relationship has  2013 10th Web Information System and Application Conference  DOI 10.1109/WISA.2013.26   2013 10th Web Information System and Application Conference  DOI 10.1109/WISA.2013.26   2013 10th Web Information System and Application Conference  DOI 10.1109/WISA.2013.26   2013 10th Web Information System and Application Conference  DOI 10.1109/WISA.2013.26   2013 10th Web Information System and Application Conference  DOI 10.1109/WISA.2013.26     more powerful learning and modeling capabilities, deals effectively with non-complete information, avoids the disadvantage of dimensionality reduction technology, and improves the accuracy of the predicted value. However, when finding the nearest neighbor set, the method takes a long time, resulting in recommended scalability problems. Slope One[8] is a item-based rating prediction algorithm, and is easy to implement and maintain. When user-item rating matrix sparse, the method can get better recommendations and execution efficiency is higher. But the algorithm does not take into account the differences between users. Jiang [9] analysis of the level of social network center, uses the user ratings parameters ? ? , and takes the user?s rating to item quantity into consideration, which reflects the different between users, so improved the quality of the recommendation of the algorithm.

But these two methods are based on the user rating data set which are fixed to predict other item, and in the actual system, users? rating follow the dynamic changes of users? interest and change, which will inevitably lead to the recommendation results inaccurate.

The above algorithms in dealing with the problem of data sparseness resistance have a certain effect, but not consider the dynamic changes of actual users? interest. To dynamic changes of the user?s interest, interest drift, the main method is that only interested in the most recently accessed, namely time window; another method uses a forgetting function to attenuate the sample. The two methods both can effectively follow the changes and improve the quality of the recommendation.

However, time window too much emphasis on the immediacy of user?s interest, ignoring the persistence, even though the user?s interest for some item recently reduced, but the item is the user long-term interest. Forgetting function too pay attention to the time factor, ignoring the user?s new interest is located. While Big Data[10] has the data redundancy, which can solve the problem of the traditional data set; Big Data is dynamic, various types of data growing fast, and user rating data is also growing rapidly, so this can solve the problem of user interest dynamic change; in the Big Data environment, the data change quickly and accumulate large amount of data at the same time, analyzing and mining the user rating data can avoid time widow, forgetting function shortcomings. Therefore, in this paper, under the environment of Big Data, use the IP address from various fields to obtain the user rated items to fill the dataset, reduce the sparsity of the candidate nearest neighbor dataset, and then calculate the similarity of the item, select the nearest neighbors, through the computation, and recommend items of interest for the target user. The proposed method effectively reduces the sparsity of data set, and also can relieve cold start problem to some extent.



III. ITEM-BASED CF Item-based collaborative filtering recommendation algori-  thm, in general, the number of items is much less than the number of users, so we can think each user evaluation of the number of items is less than the number of each item rated by users, relatively user-based similarity calculation is more accurate, and the similarity between items relative to between users is more stable. So the item similarity calculation can be done in the offline state [6].

The basic steps are as follows:  Build the rating matrix  Compute the similarity between  items  Select top-N neighbors Predict  Fig. 1. The basic framework of the item-based collaborative filtering algorithm  Firstly, process data and build user-item matrix, and then calculate the similarity between items, select k neighbors, and use similar neighbors calculate and predict user ratings of the target item.



IV. IMPROVED COLLABORATIVE FILTERING  A. Basic steps of the algorithm In the user-item rating matrix, the rating data sparse directly  lead to user rating or item rating calculations inaccurate, therefore take the pre-filled processing in the first place, the specific algorithm steps are as follows:  Build the rating matrix  Compute the similarity between  items  Select top-N neighbors Predict  Get data Data processing  Fill data  Fig. 2. The basic framework of the improved algorithm  With the traditional item-based collaborative filtering recommendation algorithm, the algorithm first for various fields of data acquisition, processing, and this process is mainly used in data mining methods for processing, then according to the existing user rating data to create user-item rating matrix, filling the processed data to the established user-item matrix, and then calculate the similarity between the items, select the k neighbors, finally predict.

B. Build user-item rating matrix Suppose there are m users rating n items, the user-item  rating matrix is.

? ? ? ?  ?  ?  ? ? ? ?  ?       mnmm  n  n  vvv  vvv vvv  ? ????  ? ?     R             (1)  User rating of the item form a two-dimensional matrix R(m*n), user set U={u1,u2,u3 ,um}, item set I={i1,i2,i3, ,in},vij means user u rating on the item i and item j,  njm ???? 1,i1 , usually vij value is within the range of 0 to 5 stars, if the user u did not rate item i and item j, then vij=0.

C. Data Filling For data acquisition mainly technology is data mining, this  technology through Web log records to obtain the score data information. Given the present most users have their own     computers; users generally have fixed IP address, so get the data through the user?s IP address. Firstly obtain the IP address of the user access to the system, and then use data mining technology obtained the user access log information by the IP address, analysis obtained information, and extract user rating data of the item. Because these operations are for the user?s Web access records, so can be calculated offline. Finally fill the obtained rating data to the user-item rating matrix.

FiledsUser IP Useful Data  Formatted DataUser  User-Item Matrix  Fig. 3. the framework of data processing  Taking into account the score range of each system, such as [1,5], [1,10]and so on, so standardization of data is necessary, which means the data is scaled to make it fall into a specific range. The most typical data normalization processing is: Min- max normalization, the conversion function is as follows:  minmax minx* ? ?    x   2  Where max and min respectively max and min value of ranging.

Finally, the normalized data range is converted into the corresponding score interval of the system, the conversion formula is as follows:  ?? ? ***x x    3  Where ?? is the conversion factor, different values for different scoring ranging.

D. Calculate similarity Similarity calculation method mainly based on users and  items. This optional item-based similarity calculation method, the most common and most popular one is the Pearson correlation coefficient [11], calculated as follows:  .,  .,  .,.,  )()(  ))(( j)S(i, ij  ?? ?  ??  ?  ??  ??    ijij Uu jjuUu iiu  Uu jjuiiu  VVVV  VVVV (4)  Where uij means the item i and j is a collection of common users rating. i.V means that the average score for item i.

E. Predict Predict the current active user u on target item i score  calculated as follows:  ? ?  ?  ?  ?    i  i  Nj  Nj ju  jisim  jisim iuP  ),(  V),( ),(  ,   Where Ni represents the nearest neighbor set of item i.



V. EXPERIMENTS  A. Data Set and Metrics The test data sets are provided by the MovieLens site  (http://movielens.umn.edu/).MovieLens is a Web-based research-oriented Recommendation system. Currently, the site?s user has more than 72000 people; user ratings film more than 10000 units.

We use 100000 ratings records, including the rating of 943 users on 1682 movies, where each user at least 20 rated, rated values range from 1 to 5. The ratings data sparse is 1- 100000/(943 1682)=0.936953.

Evaluation recommendation system recommended quality metrics including statistical accuracy metrics and decision support accuracy metrics [12]. MAE (mean absolute error) can directly measure the quality of recommendation. The smaller MAE is, the higher recommended quality is.

In the experiment data set, assuming the user calculated rating set is {p1,p2, ,pn}, corresponding to the actual user ratings set is {q1,q2, ,qn}, MAE is defined as:  N ?    ?    N  i ii qp  MAE    6  B. Experimental results In order to facilitate the data filling simulation environment,  simulation environment parameters set the number of different user rating of 500 items. To simulate a real environment as the number of users increasing degree of sparse data sets, the trials randomly selected 50, 100, 150 , Data subset is composed of users and 500 fixed items. Training data set and Testing set ration is 8:2, testing and analyzing on each set of data. The test set rating interval is [1,5], so 14  ?? .

C. Neighbor number test This experiment is mainly through the analysis of the  influence of neighbor number for recommendation result, draw a follow-up experiment neighbor benchmark, in which different numbers of user rating of the item, using a given number of neighbors, calculate the average absolute deviation.

Fig. 4. Impact of neighborhood size     Through experiments, we draw a conclusion; along with the increase of the neighbor number calculated the average absolute deviation tends to decrease, and the neighbor number tends to a certain value, the MAE to a minimum. As shown in figure 4, when the neighbor number become 50 or so, the average absolute deviation tends to be stable, after more than 50 neighbors as the increase of the number, the effect on the MEA is very small, and the prediction precision is relatively high. Therefore, in the subsequent experiments, the number of neighbors is preferably 50.

D. Data set optimization experiments This experiments tests the impact of different number of  users in various of algorithms, including the traditional item- based collaborative filtering algorithm, Slope one algorithm, based on the item filled mean rating score collaborative filtering algorithm and the proposed algorithm, respectively labeled as: NOTADD-CF, SLOPEONE, AVGADD-CF, REALADD-CF. In order to improve the objectivity of the test results, test in each group were randomly selected number of users; take 10 predicted mean absolute deviation of the mean, the simulation results as shown in figure 5.

Fig. 5. Comparation of the Result  As can be seen from the figure 5, in the case of different number of users, Slope one algorithm with respect to the accuracy of the traditional item-based collaborative filtering algorithm is better, and the average data are filled, in comparison to a slightly worse, this is mainly because under the extreme data sparse condition, the user?s individual score cannot be calculated to infer the information of interest. But compared with the proposed algorithm, the accuracy of the algorithm of the mean filling is slightly lower. Although the mean filling can decrease the sparse degree of the data set, but can?t satisfy the dynamic changes of the user?s interest, and the proposed algorithm is filled by acquiring the actual user rating data, effectively reduce the sparse data sets, but also improve the accuracy of the algorithm.



VI. CONCLUSION Data sparsity is the main factor leading to low  recommendation quality, however it?s not enough to solve the data sparsity only by fixing data or mean filling, which cannot effectively improve the quality of recommendation because of the dynamic changes of user interest. This paper proposes that  it?s possible to obtain the corresponding objective data from different fields to reduce data sparsity making use of the real time and dynamics, dispersivity and redundancy properties of data in Big Data environment, and then compared with classical recommendation algorithm through experiment effectively. Experimental results show that the proposed algorithm reduces the sparsity of data effectively, improves the precision of recommendation. Future research will focus on considering the timeliness of the data and further improve the quality of system recommendations.

