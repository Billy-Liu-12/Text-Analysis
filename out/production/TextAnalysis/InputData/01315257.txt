Probabilistic Data Association Methods in Visual Tracking of Groups

Abstract  Data association is a fundamental problem when tracking large numbers of moving targets. Most com- monly employed methods of data association such as the JPDA estimator are combinatorial and there- fore do not scale well to large numbers of targets. How- ever, in many cases large numbers of targets form natural groups which can be efficiently tracked. We de- scribe a method for defining groups based on the position and velocity of targets. This definition introduces a nat- ural set of merging and splitting rules that are embedded into a Kalman filtering framework for tracking multi- ple groups. In cases where groups of different velocities cross, a general methodology for matching measure- ments to groups is introduced. This algorithm is based on a modified version of the PDA estimator. It is well suited to handle a high number of measurements and ex- tends naturally to additional grouping constraints such as color or shape.

1. Introduction  Consider the problem of tracking crowds of clumped people walking in a station or flocks of birds flying to- gether or colonies of ants. At one level of granular- ity, each of these phenomena consists of individual mo- tions. However, taken together, the dominant charac- teristic is a gestalt group motion. Furthermore, in many cases, it is the group motion that is of interest, rather than the motions of each individual.

Typically, the problem of tracking large numbers of targets has been considered using data association techniques such as the JPDAF and its variants [1, 2].

Extensions of these ideas to computer vision problems can be found in [6]. In general, data association tech- niques attack the problem of distinguishing among tar- gets so that individual tracks can be established, but  do not address the notion of abstraction to a larger group. Indeed, one of the major limitations of these methods are the combinatorics that result when scal- ing to large numbers of targets.

In situations like these, it is often difficult to dis- tinguish the individual objects of interest because they are quite similar to the others and may be partially or totally occluded. Indeed, in such cases, it often makes sense to track the overall ensemble of objects as a group using a model of the group dynamics.

In this paper, a general class of partitioning func- tions is introduced which allows us to formally define a group. Each group is completely described by its state which takes into account information about spatial lo- cation, cardinality and velocity. We introduce rules for splitting and merging groups based on state spaces. In general this leads to situations in which groups sharing visual measurements are not merged together because they are moving with different velocities. To deal with such situations we propose a data association method- ology that is a PDA estimator properly modified to embed the notion of a group. One of the unique as- pects of our approach is that we first associate each sin- gle measurement to a group on the basis of the state predictions and then we further partition the result- ing subsets of measurements into connected compo- nents. In traditional approaches [3, 4, 5, 7] the over- all set of measurements is usually first partitioned into connected components without reference to existing tar- gets, and only then the resulting sets of measurements are matched to targets.

2. Description of a group  In what follows we first present a formal definition of a group. Then we focus on the group tracking prob- lem introducing an appropriate state model.

Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR?04)     2.1. Definition of group  As we mentioned in the introduction, our goal is to differentiate between collections of clumped objects that can be treated jointly as a group, and subsets of objects that can be reliably differentiated from one an- other. We will formally define groups in terms of a par- titioning of the set of available measurements, and will say a collection of objects forms a group when it can- not be segmented in finer partitions.

To this end consider a set A = {a1, ..., aN} and a grouping (or partitioning) function G. The partitions obtained applying G to the set A are indicated through the following notation:  G(A) = {{ai}i?I1 , ..., {ai}i?IM }  where Ii form a partition of {1, ..., N}. The cardinal- ity of the partition, M, will be denoted |G(A)| in the sequel. Note that each element of the partition is an in- variant set of the grouping function G? that is for a given Ij above,  G({ai}i?Ij ) = {ai}i?Ij We say an arbitrary set A is a group with respect to a grouping function G if it is an invariant set of G, i.e.

G(A) = {A} or |G(A)| = 1 and A is maximal. Equiva- lently we say that A satisfies the group constraint with respect to G. The invariance of partition elements un- der G is the analog of saying that a group cannot be segmented into smaller groups. For instance, a process that extracts connected components of a graph is a grouping function and each connected component is an invariant set or a group.

2.2. State model  Consider now a set G of N objects moving in the scene with measured positions1 Cy = {y1, ..., yN}, and suppose that the set Cy satisfies the group constraint with respect to an appropriate grouping function (we defer the discussion of the measurement grouping func- tion until section 3.3). In this case, the N objects of G are treated as a unique object which can be described completely through a state vector that contains the spatial location, the velocity and the cardinality of the overall ensemble:  G : (?, v, ?, N)  1 In general additional features such as the color can be consid- ered as well as position; for the sake of simplicity we just use position.

where ? and v are the position and velocity of the cen- troid of the group respectively. In this model, the po- sition of the i-th object in the group is expressed as follows:  yi = ? + si (2.1)  where si ? N (0, ?). In other words ? is a covariance matrix which defines the spatial extension of the group; the positions Cy are expected to be in the following search region  SR? = {y|(y ? ?)T ? ??1(y ? ?) < ?} (2.2) with a probability higher that a threshold which de- pends on the choice of ?. Finally N is the num- ber of points forming the group.

Summing the equations (2.1) over i and introducing a dynamical model for the position and velocity of the group centroid we obtain the following model:{  x(k + 1) = Fx(k) + nx(k) yc(k) = Hx(k) + ny(k)  (2.3)  where xT = ( ? v  )T and yc is the measured position of the centroid. Note that ny(k) includes both the uncer- tainty in the position of a group member, and obser- vation noise. In order to propagate x over time a stan- dard Kalman filter is applied to the model (2.3). In addition, the group covariance ? and the group cardi- nality N are estimated at time k as  ??(k) = ?s ? ??(k ? 1) + (1 ? ?s) ? cov(Cy) N?(k) = ?N ? N?(k ? 1) + (1 ? ?N ) ? |Cy|  (2.4)  where cov(Cy) and |Cy| indicate the sample covariance and the cardinality of the set Cy of measurements gen- erated by the group while ?s and ?N are appropriately chosen constants (positive and smaller than one).

One role of the Kalman filter is to produce an esti- mate for the velocity of the group, as well as its covari- ance matrix. By analogy with SR?, we indicate with SRv the search region defined by the predicted veloc- ity and its corresponding error covariance matrix.

At this point, we have defined a group and, given a method for computing groups, we have defined a state updating mechanism. We must now incorporate mech- anisms for managing groups (subject to a given parti- tioning method), and we must define a data associa- tion scheme for cases where the association of a mea- surement to a group is ambiguous.

3. Merging and splitting groups  In many situations groups interact, forming larger groups, or disperse, forming smaller groups. We ad- dress the formation of groups by creating connected  Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR?04)     components of measurements that are similar in both position and velocity. When these measurements be- long to other groups, the overall ensemble of groups is treated as a single group by replacing the collec- tion of individual states by a unique merged state. A group splits when it no longer satisfies the group con- straint under an appropriate partitioning function. In section 3.3 we introduce the specific group constraint adopted in our algorithm.

3.1. State space grouping  Two groups are usually considered in spatial prox- imity when their SR? search regions overlap, and have similar velocities when their SRv search regions over- lap. We define the relation Rx among groups through the following expression:  Gi Rx Gj ?? {  SR?i ? SR?j ?= ? SRvi ? SRvj ?= ?  Thus, Rx induces an undirected graph among groups.

Let Gx be a partitioning function that computes the connected components of this graph. That is, given ex- isting groups CG = {G1, ..., GN}, Gx computes a par- tition  Gx(CG) = {{Gi}i?I1 , ..., {Gi}i?IM }  3.2. Merging operator  If any of the Ii above has cardinality greater than 1, we consider the group constraint to be violated and merge the associated groups. Let (xi, ?i, Ni) be the state of the i-th group Gi. The merging operator ap- plied to the collection of groups {Gi}i?Ij yields a new merged group Gm,j????????? ????????  xm,j = ? i?Ij  N?i,j ? xi  ?m,j = ? i?Ij  N?i,j ? [ ?i + (?i ? ?m,j) ? (?i ? ?m,j)T  ] Nm,j =  ? i?Ij  Ni  (3.1) where N?i,j = NiNm,j .

3.3. Group constraint  The measurements of a given group must satisfy a specific group constraint. Generally, the group con- straint is tested as estimation is performed, however there are two cases where we must group measurements with no prior state information. First, a given group  can in general be associated to several sets of measure- ments (more details in section 4). The group constraint will be tested for each possible configuration of mea- surements and when none of them satisfies the group constraint, the group is split into new groups initial- ized starting from the measurements in its search re- gion. Second, measurements that are unclaimed by any group must themselves be grouped. The extreme case is the first frame of video, when no group yet exists.

In this section we describe the initialization process based on a group constraint for a given set of mea- surements. The group constraint is defined in such a way that it is guaranteed that the new groups can- not be merged back into a single group. We proceed in two stages. First, since we have no prior state infor- mation, we begin by clustering based on spatial prox- imity (essentially an analog to connected components).

In particular, a relation R0 in the measurement space is defined as follows:  yi R0 yj ?? SRyi,0 ? SRyj,0 ?= ? where SRy,0 indicates a region centered in y with an appropriate radius. As before, given a collection of mea- surements Cy = {y1, ..., yN}, each measurement yi be- comes a node in a graph whose edges are determined by R0. Cy can then be partitioned into connected com- ponents:  G0(Cy) = {{yi}i?I1,0 , ..., {yi}i?IM,0} To each set of grouped measurements {yi}i?Ij,0 is as- sociated a group Gj,0 whose initial state is obtained by computing the cardinality, the sample mean and co- variance of {yi}i?Ij,0 . The initial velocity is assumed to be null. The final result is a collection of groups CG,0 = {G1,0, ..., GM,0}.

To these groups, the state grouping operator Gx(?) is applied to partition them into new groups:  Gx(CG,0) = {{Gj,0}j?I1 , ..., {Gj,0}j?IL} Let Gy denote the composition of these two grouping processes. That is Gy is a grouping function which op- erates on sets of measurements and produces groups as follows:  Gy(Cy) = {{{yi}i?Ij,0}j?I1 , ..., {{yi}i?Ij,0}j?IL} A given set of measurements Cy satisfies the group  constraint if and only if |Gy(Cy)| = 1.

4. Data association  Data association techniques are crucial to deal with the ambiguity in the origin of measurements shared  Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR?04)     among several groups. This is the case in our approach since groups sharing measurements (pixel coordinates) are not merged together when they are moving with different velocities. We propose a PDAF-like methodol- ogy to deal with the problem of assigning (large) sets of measurements to each group. In order to keep the com- putational load acceptable only an appropriate subset of all the associations is considered. The group con- straint is properly embedded in the data association process.

4.1. Feasible associations  In what follows we do not consider false measure- ments and missed detections, focusing instead on the problem of associating measurements shared among several groups. To this end, consider a group G and let YG represent the set of measurements which are in the corresponding search region (2.2). Let YG,ns and YG,s denote the subset of measurements which G does not share with other groups and the remaining shared measurements respectively. The shared measurements YG,s are sorted according to their Mahalanobis distance from the centroid of G in ascending order. Y jG,s indi- cates the first j sorted measurements.

We now form a set of associations where the j-th as- sociation, ?j , associates the set YG,?j = YG,ns ?Y jG,s to the group G. The remaining measurements in YG are assumed to be generated by the other groups sharing measurements with G.

4.2. Probability of associations  Each association ?j is assigned a probability mass which takes into account both the dynamic informa- tion given by the model (2.3) and the group constraint.

We also assume prior knowledge on the range of varia- tion over time of the cardinality N of a generic group.

The mass which takes into account the dynamic infor- mation is chosen proportional to the gaussian density of the measured position of the centroid:  md(?j) = kd ? p(?(YG,?j )|y?c, Pyc)  where y?c and Pyc are the predicted position of the cen- troid and the corresponding error covariance given by the Kalman estimator and ?(YG,?j ) is the centroid of the measurements YG,?j .

The mass on the number of measurements is as- sumed being of gaussian form as well:  mN(?j) = kN ? e ? 12 ?  ( |YG,?j |?N?  ?n  )2  where N? is the estimated number of measurements, |YG,?j | is the cardinality of YG,?j and ?N is chosen based on the expected variability of the number of mea- surements in a group.

Finally, in order to have state estimates which ac- tually represent groups, the updating process should consider only configurations of measurements satisfy- ing the group constraint which we take into account through the following mass:  mg(?j) = kg ? pg(YG,?j ) where pg is given by:  pg(YG,?j ) =  { 1 if |Gy(YG,?j )| = 1 0 otherwise  (4.1)  The overall mass for a given association ?j is chosen proportional to the product of the single factors intro- duced above:  mtot(?j) ? md(?j) ? mN (?j) ? mg(?j) (4.2) which takes into account dynamics, cardinality and the group constraint.

Note that configurations of measurements that do not satisfy the group constraint are given a null mass.

In particular, if all associations for a group are given a null mass for a certain number of consecutive frames the group is eliminated and the measurements are re- grouped and initalized as described in section 3.3.

4.2.1. Computational efficiency. Verifying the group constraint for each set YG,?j involves the compu- tation of G0(YG,?j) which clusters many measurements into connected components. G0(YG,?j) can be effi- ciently computed as follows. The set YG,?j can be written in the following way:  YG,?j = YG,?j?1 ? {yj} where yj is the j-th sorted measurement. Assume G0(YG,?j?1) has been computed:  G0(YG,?j?1) = {YG1,?j?1 , ..., YGM ,?j?1} Let?s indicate with IR the indices of the connected com- ponents YGi,?j?1 which contain at least one element re- lated to yj:  IR ? {i | ? y ? YGi,?j?1 y R0 yj} and with IR the remaining indices IR ? {1, ..., M} ? IR. The set YG,?j can be partitioned as follows:  G0(YG,?j) = {{YGi,?j?1}i?IR , {yj, ?  i?IR YGi,?j?1}}  The computation of the centroid of YG,?j is efficiently performed as well starting from the centroid of YG,?j?1 .

Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR?04)     Given the predictions at time k, ? group G: ? YG are the measurements in the search region (2.2) of  G. YG,s ? YG and YG,ns ? YG are the shared and un- shared measurements respectively  ? The measurements YG,s are sorted in ascending order ac- cording to their Mahalanobis distance from the cen- troid of G yielding the set {y1, ..., yNs}  ? YG,?0 ? YG,ns  ? ?j = 0, ..., |YG,s| ? YG,?j = YG,?j?1 ? {yj} is associated to G  ? The conditional state estimate x?k,?j is com-  puted (sec. 4.3)  ? mtot(?j) is computed through (4.2) and in particu- lar pg(YG,?j ) is computed through (4.1)  ? If mtot(?j) = 0 ?j the group G splits into new groups ob- tained through the initialization process (sec. 3.3) ap- plied to the set YG  ? else the overall state estimate for group G is computed: x?k =  ?  j  x?k,?j ? mtot(?j)  We have now a collection of groups CG along with their state estimates. The merging process is applied:  ? Gx(CG) = {{Gi}i?I1 , ..., {Gi}i?IM }  ? ?j = 1, ...,M ? i?Ij  Gi = Gm,j (eq. 3.1)  ? For each new merged group Gm,j the predictions for time k + 1 are computed  Figure 1. Summary of the algorithm.

4.3. State estimation  Given an association ?, the conditional state esti- mate of a group G is obtained updating the Kalman filter using the measured position of the centroid ?(YG,?). The cardinality |YG,?| and the sample covari- ance cov(YG,?) are used in (2.4).

The overall estimate is obtained computing the weighted sum of the single conditional estimates with weights being the masses of the corresponding associ- ations as is done in the PDAF.

The overall data association and estimation process is summarized in figure 1.

5. Experiments  We tested our algorithm in video sequences of groups of people merging and crossing in an outdoor scene.

The pixel coordinates of these groups are obtained at each frame through background subtraction tech- niques. Experiments demonstrate that taking into ac-  1  2   A    B  1  2  C   D  Figure 2. Groups of people merging into a single group.

count velocity improves in general the tracking perfor- mances in situations in which groups cross each other.

In section 5.2.1 it is shown how the data association methodology proposed in section 4 contributes in ob- taining good tracking results.

5.1. Groups merging into a single group  In the first video sequence groups of people are ap- proaching and merging together. Four frames of the sequence are reported in figure 2. Ellipsoids and ar- rows represent search regions and velocities of groups respectively. In frame A, three groups are coming from the lower right corner and approaching group 1 com- ing from the opposite side. Groups 2 and 3 in frame A which are closely spaced and moving with similar ve- locities are merged together into group 2 of frame B.

In the same way, groups 2 and 3 of frame B merge into group 2 of frame C. People of groups 2 and 3 in frame C are changing direction in order to move together as a single group. The estimated velocities take few sec- onds to change accordingly. At that point the groups are merged together as shown in frame D.

5.2. Groups crossing each other  In the second video sequence groups of people are moving along opposite directions and crossing each other. We report four frames of the sequence in figure 3. In frame A group 1 is moving toward the upper right corner while groups 2 and 3 are coming from the oppo- site direction. In frame B groups 2 and 3 are crossing group 1. The algorithm fails in tracking group 3, which  Proceedings of the 2004 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR?04)     3 2   A    B  1 2  C    D  Figure 3. Groups of people moving along oppo- site directions and crossing each other.

is eliminated while it is passing through group 1 (see frame C). On the other hand the algorithm succeeds in tracking group 2. Taking into account the velocity is in general advantageous in dealing with such chal- lenging situations. In fact, although group 1 and group 2 are partially overlapped, the difference in the corre- sponding velocities prevents them from being merged together and when the crossing phase is over, groups 1 and 2 are still tracked reliably (see frame C). In frame D, group 3 is tracked again when splits apart from group 1.

A    B  Figure 4. Groups of people moving along oppo- sitedirectionsandcrossingeachother.Noproper data association is performed resulting in inferior tracking performances.

5.2.1. Data association. Data association tech- niques are crucial in obtaining good tracking perfor- mances. We processed the video sequence of groups crossing each other eliminating the data associa- tion step, i.e. assigning all the validated measurements  YG to the group G. A couple of key frames are re- ported in figure 4. In frame A groups 1 and 2 start crossing. During this interaction, all the measure- ments generated by group 2 and being in the search region of group 1 are assigned to group 1 and vicev- ersa. This results in group 1 engulfing all objects of group 2. The same happens to group 2 (see frame B).

6. Conclusions and future work  In the present work we introduced a formal defini- tion of group and a general merging process defined in the phase space. The data association process dynam- ically segments the measurements at pixel level on the basis of the predictions and it is properly modified in order to embed the additional group constraint. The algorithm has been tested on real data yielding good tracking results in challenging situations such those of groups crossing each other. The approach is promis- ing and it can be further improved. Integration of ad- ditional features such as pixels color and online identi- fication procedures will be considered.

