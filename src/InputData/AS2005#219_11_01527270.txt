<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings

Abstract: Case-Based Reasoning (CBR) is a method for solving new problem similar with it using the past solving problem experience. A case can be seen as a complex object that contains at least a problem description and a solution (i.e., a conditionality and a consequence). Between the conditionality and its consequence a strong association is existed. The focus of this paper is to describe a method discovering usable rules among case history by using the generalized association rule algorithm. Emphasis placed on approaching association rule mining for discovering rules existing in case history.

Rule-Based Reasoning (RBR) system reserve know-how of the expert into rule format in rule base, and is a system finding solution for the occurred problems by using this rule base. The advantage of this RBR can explicate knowledge with a type of IF-THEN and also explain process in reasoning result. But RBR has such disadvantage: it hardly to acquire domain knowledge either when the expert knowledge can?t be explicated or the theory and method of that domain is not yet established. To solve this problem, the CBR system was developed, CBR can be regarded both as a cognitively sound modeling approach for explaining human problem solving in domains where experience plays an important role [8] and as a software engineering approach for how to model and implement decision support systems that are able to use past experiences for suggesting solutions or making predictions [6]. In CBR, as new case is stored in knowledge base and can reuse it, therefore some knowledge acquisition bottleneck can be settled. But this method has some problem, for example, providing enough cases leading the extension of searching time, and may lead to a mistaken result, etc. To settle this problem, previous studies on approaching CBR and data mining (DM) consider clustering method only [4]. In this paper, we described case history as hierarchical tree structure, consider discovering method association between attributes of case history and between cases, and proposed algorithm for applying to CBR.

Keywords: Case-Based Reasoning; Association rule; Data Mining; Expert System; 1. Introduction 2. Relative studies 2.1.  Generalization of association rules The traditional association rules mining problem can be described as follows. Given a database of transactions, a minimal confidence threshold and a minimal support threshold, find all association rules whose confidence and support are above the corresponding thresholds. In previous researches [3], this traditional association rule mining has been generalized to data with items arranged to hierarchies or taxonomies. Concept hierarchies exist often for the items: for instance, in the supermarket environment we know that Cheng Do is a beer brand, that WaHaHa is a mineral water brand, that beer is a beverage, that mineral water is a beverage, and so on. The idea is now to search for rules on several levels in the hierarchy, such as beer =&gt; mineral water and Cheng Do =&gt; WaHaHa. These rules may be interesting if its confidence satisfy from the condition. And mining association rules at several concept levels may lead to the discovery of more specific and concrete knowledge    to the discovery of more specific and concrete knowledge from data than mining association rules find rules at single concept level. For the mining of association rules from case set, we used case history instead of transaction data, therewith can be found cooccur symptoms for a disease.

2.2.  Case-Based Reasoning Case-Based Reasoning (CBR) is an approach to building software systems that enable their users to reuse the experiences from similar situations that occurred in the 0-7803-9091-1/05/$20.00 ?2005 IEEE Guangzhou, 18-21 August 2005 past and have been documented in the form of cases [13]. A case can be seen as a complex object that contains at least a problem description and a solution. The reasoning step in CBR systems is based on the hypothesis that similar problems have similar solutions or ?in other words - that the solution of a similar problem is a good starting point for the selection/construction of a solution for the problem at hand [8]. CBR systems are steadily gaining ground because they allow a quicker and cheaper system development and case knowledge maintenance than traditional expert systems [7].

CBR stores old cases in system, searches old case similar with inputted new case, analyses difference between old and new problem, and then settles new problem by properly correcting the old solving method [Figure 1].

Each step is: z Searching step, search case and/or set of attributes the most similar with new case.

z Reusing step, use searched information and knowledge.

z Correcting step, correct relevant at proposed solution.

Holding step, store confirmed case to front new case  3.   Using association rule mining to CBR 3.1.  Hierarchical tree structure of case history To apply generalized association rules in case history we make hierarchical tree structure as follows. First, case data is classified with category and attributes, and take an index. Then, we place category in upper level and attributes in lower level.

A hierarchical tree structure means diverse symptoms of a disease.

Suppose that a case history of diabetes consist of two relations:(1) a experimental item(exp_item) description relation (Table l), which consists of a set of attributes: exp_ID, category, state, onset age, polyuria, polyphagia, and (2) a case_transaction table (Table 2), which registers for each transaction, the case_transaction number and the set of items experimented.

Diabetes category contents Fasting Blood level (FBG), Postprandial Blood level (P2hBG), urine sugar, urine specific gravity, Body Mass Index (BMI), Hb1c, Islet Cell Antibody (ICA), etc.

Since there are only three interested attributes, category, state, and onset age, the exp_item description relation is generalized into a generalized exp_item description table, as shown in Table 3, in which each tuple represents a generalized item which is the merge of a group of tuples which share the same values in the interested attributes.

For example, the tuples with the same category,    For example, the tuples with the same category, content and brand in Table 1 are merged into one, with their exp_ID replaced by a exp_ID set. Each group is then   treated as an atomic item in the generation of the lowest level association rules. For example, the association rule Guangzhou, 18-21 August 2005 generated regarding to blood level will be only in relevance to (at the low concept levels) grand (such as 30 years) and content (such as, 7.5mol/l) but not to size, producer, etc.

?

The hierarchical information is provided implicitly in Table 3. Let category (such as ?blood level?) represent the first-level concept, content (such as ?7.5mol/l?) for the second level one, and onset age (such as ? 30 years?) for the third level one. The table implies a concept tree (hierarchical tree structure) like Figure 2.

?

Table 4:Encoded case history table (T [1])     Hence, the hierarchy information for each grouped item of Figure.2 is encoded as a sequence of digits in Table.4 (T [1]). For example, the item ?? 7.0 mol/l 20years blood level? is encoded as ?112? in which the first digit, ?l?, represents ?blood level? at level-l, the second, ?1?, for ?? 7.0 mol (blood level)? at level-2, and the third, ?2?, for the onset age ?20years? at level-3. Similar to [2], repeated items (i.e., items with the same encoding) at any level will be treated as one item in one transaction.

3.2.  A method for mining association rules from case history An abstract procedure simulating the diabetes data is as follows.

The derivation of the large item sets at level-1 proceeds as follows. Let the minimum support be 4 transactions (i.e., minsup[1] = 4). (Notice since the total number of transactions is fixed, the support is expressed in an absolute value rather than a relative percentage for simplicity).The level-l large 1-itemset table, C[1,1] can be derived by scanning T[1], registering support of each generalized item, such as 1**,?,4**, if a transaction contains such an item (i.e., the item in the transaction belongs to the generalized item 1**,?, 4**, respectively), and filtering out those whose accumulated support count is lower than the minimum support. C [1, 1] is then used to filter out (1) any item which is not large in a transaction, and (2) the transactions in T[1] which contain only small items. This results in a filtered transaction table T[2] of Figure 3. Moreover, since there are only two entries in C[1,1], the level-l large-2 itemset table C[1,2] may contain only 1 candidate item {l**,2**}, which is supported by 4 transactions in T[2].

Case_ID Items Case1 Case2 Case3 Case4 Case5 Case6 Case7 {111,121,211,221} {111.211.222.323}    {111.211.222.323} {112,122,221,411} {111,121} {111,122,211,221,412} {211,323,524} {323,411,524,713} Figure 3.  Large item sets at level-1and filtered case table  According to the definition of several level association rules, only the descendants of the large items at level-l (i.e., in C[1,1]) are considered as candidates in the level-2 large 1-itemsets. Let minsup[2] = 3. The level-2 large 1-itemsets C [2,1] can be derived from the filtered transaction table T[2] by accumulating the support count and removing those whose support is smaller than the minimum support, which results in C[2,1] of Figure 4.

Figure 4. Large item sets at levels 2 and 3  Guangzhou, 18-21 August 2005 Similarly, the large 2-itemset table C[2,2] is formed by the combinations of the entries in C[2,1], together with the support derived from T[2], filtered using the corresponding threshold. The large 3-itemset table C[2,3] is formed by the combinations of the entries in C[2,2] (which has only one possibility {11*, 12*, 22*}), and a similar process. Finally, C[3,1] and C[3,2] at level-3 are computed in a similar process, with the results shown in Figure 4. The computation terminates since there is no deeper level requested in the diagnosis. Note that the derivation also terminates when an empty large 1-itemset table is generated at any level. Therefore, find the association between frequency of symptom and diagnosis (when was obtained this result, must add diagnosis in the lowest level.), and in case doctor?s experience differ, may lead to the discovery of more specific and concrete knowledge by finding generalized experiences.

4. CBR algorithm using generalized association rule mining Algorithm CBR_DM  1. User is first performed on a given case history to derive a generalized item table in which each tuple contains a set of item identifiers (such as exp_ID) and is encoded with concept hierarchy information.

2. The transaction table (Table 3) is transformed into Table 4 with each item in the item sets replaced by its corresponding encoded hierarchy information.

3. Discover several level large item sets for the case history.

//Input the minimum support threshold (minsup[l]) for //each concept level 1.

//Starting at level 1, derive for each level 1, the large //k-items sets, C[l, k], for each k, and the large item set, //CC[l] (for all k?s), as follows (in the syntax similar to //C and Pascal, which should be self-explanatory).

(1) for (l := 1; C[l, 1]  and l &lt; max_level; l ++) do { ? ?

(2)   if l =1 then { (3)    C[l,1]:= get_large-l_itemsets(T[1], l); (4)    T[2]:= get_filtered_table(T[1], C[1,1]); (5)   } (6)   else C[l, 1]:= get_large_1_itemsets(T[2],l); (7)   for (k := 2; C[l, k-1] ; k++) do { ? ?

(8)    C k := get_candidate_set(C[l,k-1]); (9)    foreach transaction t?T[2] do { (10)     C t := get_subsets(C ,t); k (11)     foreach candidate c ?  C t  do c.support++; (12)    }    (13)    C[l, k] := {c?  C t c.support minsup[l]} ?

(14)   } (15)   CC[l]:= ? k C[l, k]; (16) }  4. After finding the large itemset, the set of association rules for each level l can be derived from the large itemsets CC[l] based on the minimum confidence at this level, minconf[l]. This is performed as follows [2].

For every large itemset r, if a is a nonempty subset of r, the rule ?a  r - a? is inserted into rule-set[l] if support(r)/support(a) minconf[l], where minconf[l]is the minimum confidence at level l.

?

?

5. Output several level large itemsets and association rules.

6.  Store usable rules in case base.

5.  Experiments By application of the proposed algorithm we can discover the following rules about diabetes related case history. Let the minimum support at top most concept level be 5% and the minimum confidence be 50%. One may find the following: a set of single large items : ?FBG(35%), P2hBG(25%), BMI (20%), . . . , ICA (10%)?, a set of pair-wised large items (each called a large 2-itemset): ?(FBG, BMI (23%)), (ICA, P2hBG (15%)), . . . , (BMI, FBG(72%))?) etc. and a set of strong association rules, such as ?BMI  FBG (76%), . . . , P2hBG FBG(86%)?. ? ?

At the second level, let the minimum support at this level be 2% and the minimum confidencebe40%. One may find the following large l-item sets:? 30(10%), 11.1mol/l(15%),7,5mol/l(10%),20years( 10%),45years(5%), . . . ,8.2mol/l(5%)?, and the following large2-itemsets:?(7.8,42(4%)), (7.2,  38(2.1%))?, and the strong association rules: ?blood level(10.5) onset age(28)?,?,?blood level(FBG) ++(42%)?,etc. The process repeats at even lower concept levels until no large patterns can be found.

? ?

?

?

This experiment shows that discovering association between symptoms and diagnosis from diabetes case history.

This should be extended for other diseases because concept hierarchies may not exist for numerical valued attributes but can be automatically generated according to data distribution statistics. For example, a hierarchy for the symptom range of disease items can be generated based on the distribution of symptom degree.   Moreover, a given concept hierarchy for numerical or non-numerical data can be dynamically adjusted based on data distribution. For example, if there are many distinct disease names in the Guangzhou, 18-21 August 2005 attribute ?symptom?, diseases can be grouped into class diseases, such as tuberculosis, hepatitis, heart disease, etc.

6.  Conclusions We have approached the study of mining association rules from multiple concept levels to case history of hierarchy information and studied methods for mining usable rules from case transaction databases. Our study shows that mining generalized association rules from databases has wide applications, and efficient algorithms can be developed for discovery rules among case history.

Extension of methods for mining multiple concept knowledge rules to case base ones poses many new issues for further investigation. For example, approaching to CBR and supporting knowledge acquisition from expert are interesting topics for future study.

interesting topics for future study.

Acknowledgements This paper is supported by Science-Technology Development Project of Tianjin(No. 04310941R).

