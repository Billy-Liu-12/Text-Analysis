<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Genetic  Algorithms Based Optimization of Membership Functions for Fuzzy

Abstract- Finding the most appropriate fuzzy sets becomes complicated when items are not considered to have equal importance and the support and confidence parameters needed in the mining process are specified as linguistic terms. Existing clustering based automated methods are not satisfactory because they do not consider the optimization of the discovered membership functions.

To tackle this problem, we propose Genetic Algorithms (GAS) based clustering method, which dynamically adjusts the fuzzy sets to provide maximum profit based on minimum support and confidence specified as linguistic terms. This is achieved by tuning the base values of the membership functions for each quantitative attribute in a way that maximizes the number of large itemsets. To the best of our knowledge, this is the first effort in this direction.

Experimental results on lOOK transactions taken from the adult database of US census in year 2000 demonstrate that the proposed clustering method exhibits good performance in terms of the number of produced large itemsets and interesting association rules.

Index Terms: association rules, fuzzy rules, data mining, linguistic terms, weighted rules.

1. INTRODUCTION Data mining is the process of extracting previously unknown and potentially useful hidden predictive information from large amounts of data. Discovering association rules is one of the several mining techniques described in the literature. Associations allow capturing almost all possible rules that explain the presence of some attributes according to the presence of other attributes in the same transaction. For instance, an association rule in a supermarket basket data may be stated as, ?in 20% of the transactions, 75% of the people who buy butter also buy eggs in the same transaction?; 20% and 75%, respectively, represent rule?s support and confidence, which are the major factors in measuring the rignificance of an association rule. Simply, support is the percentage of transactions that contain both butter and eggs, while confidence is the ratio of the support of butter and eggs together to the support of butter alone. So, the problem can be stated as: j ind all association rules that satisfy user-specified minimum support and confidence values.

Recently, researchers investigated weighted mining since the degree of interest in items of a database may differ from one user to another; even the same user may not show the same degree of interest in all items. To satisfy such cases, Cai, et al [3] proposed weighted mining to reflect different importance in different attributes; a user specified numerical weight is assigned to each attribute. Weighted support and weighted 0-7803-8623-W04/$20.00 02004 IEEE Reda ALHAJJ ADSA Lab &amp; Department of Computer Science University of Calgary Calgary, Alberta, Canada alhajj @ cpsc.ucalgary.ca confidence were defined to determine interesting  association rules. Yue, et al [25] extended these concepts to fuzzy item vectors. In these studies, minimum support and minimum confidence are specified as numerical values; however, linguistic values are more natural and understandable for humans [14].

Although current quantitative association rules mining    Although current quantitative association rules mining algorithms solved some of the problems introduced by quantitative attributes, they mainly introduced the sharp boundary problem, which can be handled smoothly by introducing fuzziness into the model.

Unlike classical set theory where membership is binary, the fuzzy set theory provides excellent means to model the ?fuzzy? boundaries of linguistic terms by introducing gradual membership. +Based on this, some work has recently been done on the use of fuzzy sets in discovering association rules for quantitative attributes.

However, in existing approaches fuzzy sets are either supplied by an expert or determined by applying an existing known clustering algorithm. The former is not realistic, in general, because it is extremely hard for an expert to specify fuzzy sets in a dynamic environment.

On the other hand, approaches that applied classical clustering algorithms to decide on fuzzy sets have not produced satisfactory results. In particular, they have not considered the optimization of membership functions.

The number of fuzzy sets is given as a constant beforehand and membership functions are tuned in terms of this fixed value.

This paper contributes to the ongoing research on data mining by combining advantages of several concepts, including fuzziness, association rules, weighted mining and linguistic terms for both minimum support and minimum confidence. We also propose a clustering method that employs GAS to optimize membership functions used in determining fuzzy quantitative association rules. The base values of membership functions for each quantitative attribute are tuned by GAS in order to maximize the number of large itemsets in a certain continuous interval of minimum support values.

Advantages and the effectiveness of the proposed method are demonstrated by testing on lOOK transactions taken from the adult database of US census in year 2000.

The rest of this paper is organized as follows. Section 2 is an overview of the related work. Fuzzy weighted association rules, fuzzy item importance, fuzzy minimum support and fuzzy minimum confidence are all defined in Section 3. Our approach of utilizing GAS to optimize membership functions is described in Section 4.

Experimental results are presented in Section 5. Sectian 6 is the conclusions.

2. RELATED WORK Srikant and Agrawal [22] used equidepth partitioning to mine quantitative rules. They separate intervals by their relative ordering and quantities eqpally. Miller and Yang applied Birch clustering [19] to identify intervals and proposed a distance-based association rule to improve the semantics of intervals. Lent, et al [18] presented a geometric-based algorithm to perform clustering for numerical attributes. Finally, Guha, et al [8] proposed an efficient clustering algorithm called CURE.

Another trend to handle this problem is based on fuzzy theory. In contrast to quantitative clustering, fuzzy linguistic-based approaches focus on qualitative filtering.

For instance, Yager [24] introduced fuzzy linguistic summaries on different attributes. Hirota and Pedrycz  [lo, 211 proposed a context sensitive fuzzy clustering method based on fuzzy C-means to construct rule-based models. However, context-sensitive fuzzy C-means method cannot handle data consisting of both numerical and categorical attributes. To solve the qualitative knowledge discovery problem, Au and Chan [4] applied fuzzy linguistic terms to relational databases with numerical and categorical attributes. Later, they proposed the F-APACS method [2] to discover fuzzy association rules. They utilized adjacent difference analysis and fuzziness in finding the minimum support and confidence    fuzziness in finding the minimum support and confidence values instead of having them supplied by a user.

Fu, et a1 [6] proposed an automated methodl to find fuzzy sets for the mining of fuzzy association rules; their method is based on CLARANS clustering algorithm [20].

We developed a more efficient approach based on CURE [16]. Hong et al [12] proposed an algorithm that integrates fuzzy set concepts and Apriori mining algorithm to find interesting fuzzy association rules from given transactional data. They also proposed definitions for the support and confidence of fuzzy membership grade and designed a data mining approach based on fuzzy sets to find association rules with linguistic terms of human knowledge [13]. Ishibuchi, et a1 [15] illustrated fuzzy versions of confidence and support that can be used to evaluate each association rule. Gyenesei [9] presented two different methods for mining fuzzy quantitative association rules, namely without normalization and with normalization. The approach developed by zhang [27] extends the equidepth partitioning with fuzzy terms.

However, it assumes fuzzy t e r m  as predefined. Wang and Bridges [23] used GAS to tune membership functions of the fuzzy sets used in mining fuzzy association rules for intrusion detection system 3. WEIGHTED FUZZY ASSOCIATION RULES In this section, we present an overview of weighted fuzzy association rules. We introduce the degree of membership, and define fuzzy association rules. Also, we define wdghted fuzzy support and confidence.

Let T={tl, tz, .... l.) be a database of transactions; each transaction t j  represents the j-th tuple in T. We use I=( i,, iz ,... , im) to represent all attributes (items) that appear in T; each attribute ik may have a binary, categorical or quantitative underlying domain, denoted Di,. Besides, each quantitative attribute ik  is associated with at least two fuzzy sets with a membership function per fuzzy set such that each value of it qualifies to be in one or more of the fuzzy sets specified for i k .  The degree of membership of each value of i k  in any of these fuzzy sets is directly based on the evaluation of the membership function of the particular fuzzy set with the value of i t  as input.

Definition 3.1 (Membership Function): Let 6, =(A: ,f,*,...,~~ ) be a set of 1 fuzzy sets associated with item i k .  Each fuzzy set fa! has a corresponding membership function, denoted P,;(%), which is a mapping from the domain of ik into the interval [0,1], where vi, E Dit . Formally, P,; : D,, + [OJL where ,U,; (v,, ) = 0 According to Definition 3.1, the obtained value P,;?,:?.) falls in the interval [0,1], with the lower bound 0 strictly indicates ?not a member?, and the upper bound 1 indicates ?total membership?. All other values between 0 and 1, exclusive, specify ?partial membership? degree.

Consider a database of transactions, its attributes, and the fuzzy sets associated with quantitative attributes, interesting rules are potentially useful regularities [17].

Definition 3.2 (Fuzzy Association Rules): A fuzzy association rule is expressed as: v,. totally belongs to fuzzy set f,: U,, is not a member of fuzzy set f,a? [ o h e i i s e  v,, partially belongs to fuzzy set fi,!

If X = { x l , x z ,  ..., x p )  isA=cfi,fi, ..., f , )  then Y=(YI, YZ, ..., y J  is B=Ig l ,  g2, ..., gql where X and Y are disjoint sets of attributes called itemets, i.e., X U Y r l  and X n Y = &amp;  A and B contain the fuzzy sets associated with corresponding attributes in X and U, respectively, i.e.,f; is the set of fuzzy set related to attribute x, and g, is the set of fuzzy set related to attribute y,; l S S p  and 15jSq. Finally, for a rule to be interesting, it should have enough support and high confidence value, i.e., larger than user specified thresholds.

As weighted mining is concerned, items are assigned weights to reflect their importance and weighted support    weights to reflect their importance and weighted support and confidence values are employed in deciding on interesting association rules. In general, most data mining algorithms set weights of items as numerical values, with the weight of an item varies between 0 and 1 based on users? experience or intuition. Here, ?0? means the corresponding attribute should be neglected, and ?1? indicates the corresponding attribute is one of the most important attributes for the user.

So, let ( X . A )  denote an itemset-fuzzy set pair, where X is a set of attributes and A is the set of corresponding fuzzy sets. A weight 0 5  w , ~ ~ )  51 is assigned to each instance (x, a )  of ( X , A ) ,  to show its importance.

By assigning weights to attributes, we employ weighted fuzzy support,and weighted fuzzy confidence in deciding on large weighted (itemset, fuzzy-set) pairs and interesting association rules, respectively.

Definition 3.3 (Weighted Fuzzy Support): Given an itemset-fuzzy set pair ( X - A ) ,  its weighted fuzzy support is: \ z,,J-I,,e x M+/ JW, ( ? , X I ) IPl .,e* Based on Definition 3.3, an itemset-fuzzy set pair ( X . A )  is called large if its weighted fuzzy support is greater than or equal to the specified minimum support threshold, i.e., wsp.,+,) 2 min SUP.

Definition 3.4 (Weighted Fuzzy Confidence): Given the rule "If X is A then Y is  B ' ,  its weighted fuzzy confidence is: Explicitly, each large itemset, denoted L, is used in deriving all association rules (L-S)=S, for each S c L.

Strong association rules are discovered by choosing from among all the generated possible association rules only those with confidence over a pre-specified minimum confidence. However, not all strong rules are interesting -enough to be reported to the user. Whether a rule is interesting or not can be judged either subjectively or objectively. Ultimately, only users can judge if a given rule is interesting or not, and this judgment, being subjective, may differ from one user to another. However, objective interestingness criterion, based on the statistics behind the analyzed data, can be used as one step towards the goal of weeding out uninteresting rules from presentation to the user.

To illustrate this, consider a rule X a Y  with 50% support and 66.7% confidence. Further, assume that the support of Y is 70%. For such case, it can be said that the rule X-Y is strong based on the supportconfidence framework. However, it is incomplete and misleading  since the overall support ofk is 75%, even greater than 66.7%. In other words, this analysis leads to the following interpretation: a customer who buys Xis  less likely to buy Y than a customer about whom we have no information.

?he truth here is that there is a negative dependence between buying X and buying Y. This negative dependence leads to not considering X-Y as strong rule.

As a result, there should be some filtering criteria to eliminate such rules from consideration as interesting rules. Explicitly, to help filtering out such misleading strong association rules, the interestingness of a rule XaY, denoted I(XsY), is defined as: I ( X = Y ) = s O  S(X)S(Y) ' to give a more precise rule characterization.

A rule is filtered out if its interestingness is less than 1, since the nominator is the actual likelihood of both X and Y being present together and the denominator is the likelihood of having the two attributes being independent.

As the above example is concerned, we can calculate the interestingness of X ~ Y  as: 1 ( ~ - r ) = L - = o . 9 5 &lt; 1 . , which means that this rule is not interesting enough to be reported to the user. ?his process will help in returning only rules having positive interestingness, and hence the    only rules having positive interestingness, and hence the size of the reported result is reduced to include more precise rules.

0.75x0.7 3.1. FUZZY REPRESENTATION OF ITEM IMPORTANCE, MINIMUM SUPPORT AND MINIMUM CONFIDENCE The importance of an item is not only a vital measure of interestingness, but also a way to permit users to control the mining results by taking specific actions. So, it is more natural and intuitive for humans to deal with linguistic terms than discrete values. In other words, it is more flexible and more understandable for human beings to handle the measures showing the importance of an item as linguistic terms. Motivated by this, we represent weights of items using fuzzy sets.

Nmin. sup.) Fig. 1 Membership functions representing weights of an item p(min. sup.) A Fig. 2 Membership functions representing minimum support Shown in Figure 1 are membership functions of the fuzzy sets used to represent the weight of a given item.

Membership functions have a uniform structure and the weight of an item can take 5 different linguistic terms.

We also used linguistic terms to express minimum support and minimum confidence, and based on the same justification raised above about utilizing linguistic terms for the importance of items. This way, instead of a sharp boundary, we achieve a boundary with continuous interval of minimum support as well as minimum confidence. Shown in Figure 2 are the membership functions used for minimum support; note that membership functions of minimum confidence have the same trend shown in Figure 2.

4. EMPLOYING ENETIC ALGOR~HMS TO OPTIMIZE MEMBERSHIP FUNCTIONS "he standard CA starts with an initial population of randomly or heuristically generated individuals, and advances toward better individuals by applying genetic operators modeled on the genetic processes occurring in nature. "he population undergoes evolution in a form of natural selection. During successive iterations, called generations, individuals in the population are rated for their adaptation as solutions, and on the basis of these evaluations. As a result, a new population of individuals  is formed using a selection mechanism and specific genetic operators such as crossover and mutation. To form a new population, individuals are selected according to their fitness. Consequently, an evaluation or fitness function must be devised for each problem to be solved.

Given a particular individual, a possible solution, the fitness function accepts a decoded chromosome and produces an objective value as a measure of the performance of the input chromosome.

, considering all factors that play important role in optimizing the problem under investigation. Every new population generated in the process is evaluated with respect to the fitness function. The evaluation process is a main source to providing the mechanism for evaluating the status of each chromosome; it is an important link J between the GA and the system.

The CA employed in this study maximizes the number of large itemsets in a continuous interval of minimum support values. We created a continuous domain within a certain interval of minimum support and minimum confidence because we used linguistic minimum support and minimum confidence values. Figure 4 shows membership functions of the minimum support variable used in computing the fitness function. This variable has 5 uniform membership functions and its definitive    5 uniform membership functions and its definitive interval is bounded within [0.05,0.15].

With linguistic minimum support, the process of finding the set of large itemsets proceeds as illustrated next. Assume the linguistic minimum support value is given as ?Low?. First, this value is transformed into a fuzzy set of minimum support, namely (0.05, 0.075, 0. l), as shown in Figure 4. Second, the fuzzy weighted set of the given minimum support is calculated. Finally, the weighted support of each item or itemset is compared to the fuzzy weighted minimum support by fuzzy ranking. If the weighted support is equal to or greater than the weighted minimum support, then the corresponding itemset is considered large.

Fig. 3 Membership functions and base variablesof attribute ir poni?. SUP.) Fig. 4 Membership functions of the minimum support for the fitness function 4.1. CHROMOSOME ENCODING .

Our target in using GAS is to cluster the values of quantitative attributes into fuzzy sets with respect to a given fitness evaluation criteria. For this purpose, each individual represents base values of membership functions of a quantitative attribute in the database. In our experiments, we used membership functions in triangular shape because it is in general the most appropriate shape.

To illustrate this, consider a quantitative attribute ik and assume it has 3 corresponding fuzzy sets.

Membership functions for, attribute ik and their base variables are shown in Figure 3. Each base variable takes finite values. For instance, the search space of base value bi lies between the minimum and maximum values of attribute ik, denoted mW4, ) and m a W i , ) ,  respectively.

The search intervals of all the base values and intersection point Rib of attribute ik are: bf. : [min(D, ), max(D, )I Rj, : [min(Di, ), )I b: : [min(D,, ). R,, 1 b: : [ R , ,  m a W ,  )I bl :[min(D,,),max(D,,)I  So, based on the assumption of having 3 fuzzy sets per attribute, as it is the case with attribute ik, a chromosome consisting of the base lengths and the intersection points is represented as: b ~ b ~ R i , b i : b ~ b ~ ~ b , : R i ~ b ~ b ~  . . b ~ b ~ R i - b ~ b ~ We use real-valued coding, where chromosomes are represented as floating point numbers and their genes are the real parameters. ?Ihese chromosomes form the input to the fitness function described in the next section.

4.2. FITNESS EVALUATION The fitness function measures the goodness of an individual in a given population. It is one of the key issues to a successful GA; simply because the main task in a GA is to optimize a fitness function. Consequently, the fitness function should be carefully set, by 4.3. SELEC~ION PROCESS During each generation, individuals with higher fitness values survive while those with lower fitness values are destroyed. In other words, individuals who are strong according to parent selection policy are candidates to form a new population. Parent selection mimics the survival of the best individuals in the given population.

Many selection procedures are currently in use.

However, Holland?s original fitness-proportionate selection is one of the simplest selection procedures [ l  I].

So, we used this selection policy in our experiments.

Let firness(x,t) and Avgfirness(r), respectively, denote the fitness of individual x and the average fitness of the population during evolution phase t .  Then, the usage value of individual x as a parent is: rsr (x , t )  = Avgfirness ptness(xJ)  ( 1 ) After selecting chromosomes with respect to the evaluation function, genetic operators such as, crossover and mutation, are applied to these individuals.

and mutation, are applied to these individuals.

Crossover refers to information exchange between individuals in a population in order to produce new individuals. The idea behind the crossover operation utilized in our study is as follows. It takes as input 2 individuals, selects random points, and exchanges the subindividuals behind the selected points. Since the length of the chromosomes is long, the multi-point crossover strategy has been used with the crossover points determined randomly.

On the other hand, mutation means a random change in the information of an-individual. It is very important for populations. It is an operation that defines a local or global variation in an individual. Mutation is traditionally performed in order to increase the diversity of the genetic information. Otherwise, after several generations, the diversity of the chromosomes decreases and some chunks of the chromosomes may end up being the same for all population members and the information they contain may not evolve further. A probability test determines whether a mutation will be carried out or not. ?he probability of mutation depends on the following condition: average fitness of new generation &lt;average fitness of old generation Since the initial population can be a subset of all possible solutions, an important bit of each chromosome may be inverted, i.e., 0 appears as 1 or vice versa.

Crossover may not solve this and mutation is inevitable for the solution.

Finally, after generating each individual in the initial population, the executed GA includes the following steps.

Algorithm 4.1 (Generating Association Rules) 1.

2.

3.

4.

5.

6.

7.

8.

9.

Using the given membership functions about item importance, transform each linguistic term, which reflects the importance of item i,, I l k  c m ,  into a fuzzy set wt of weights.

Specify population size N and generate initial chromosomes.

According to the current chromosome, transform the quantitative value f ,A of each item it in each transaction f j ,  1 5 j 5 n , into a fuzzy set f,, .

Calculate the fuzzy weighted support of each item- fizzy set pair ( j k 9 f , , ) .

Compute the weighted fuzzy set of the given minimum support value as: Find the large itemsets based on the weighted fuzzy set of the given minimum support value Evaluate each chromosome with respect to the already specifie.6 fitness function Perform selection, crossover and mutation If not end-test then go to Step 3; otherwise return the best chromosome WMinS=S.(the weight of 10. Generate all possible association rules from each identified large weighted fuzzy itemset.

11. From the rules generated in step 10, identify strong rules based on the specified fuzzy weighted confidence.

12. From the rules identified in step 11, decide on interesting association rules by calculating the interestingness value for each strong rule.

Algorithm 4.1 employs CA to return interesting    Algorithm 4.1 employs CA to return interesting association rules. The process considers fuzzy importance of items and involves fuzzy weighted support and confidence. This algorithm has been implemented and tested, the results are presented next in Section 5.

5. EXPERIMENTAL RESULTS We used real-life dataset and conducted some experiments to assess the effectiveness of the CA-based fuzzy weighted mining approach presented in this paper.

All of the experiments were performed using a Pentium 111, 1.4GHz CPU with 512 MB of memory and running Windows 2000. As experimental data, we used lOOK transactions dataset taken from the adult data of United States census in 2000. In the experiments, we have used 6 quantitative attributes, each with three corresponding fuzzy sets. Finally, we have used three linguistic intervals for which random linguistic weights have been generated, namely (Important, Very-Important), (Ordinary, Important) and (Unimportant, Ordinary), denoted I-VI, 0-1 and UI-0, respectively.

2 400 300 &lt; 200 1 0  1 100 Very Low Medium High Very Low High Minimum Support Fig. 5 Number of large itemsets for linguistic terms of minimum support M i n .  cont) A  Fig. 6 Membership function for nunimum confidence The first experiment tests, for the above three different linguistic weight intervals, the correlation between expressing minimum support in linguistic terms and the number of large itemsets produced. The obtained results are reported in Figure 5, which shows that the number of large itemsets decreases as a function of the linguistic minimum support yI 100 - d, 80 1 60 I 5 40 B 20 i o Very Low Medium High Very LOW High MininumConfidencc Fig. 7 Number of interesting rules for different linguistic terms of nunimumconfidence; nunimum support fixed as ?nuddle? In the second experiment, the minimum support is fixed at the linguistic value ?middle? and we tested, for the three linguistic weight intervals, the effect of using linguistic te rm to express minimum confidence, as shown in Figure 6, on the number of generated interesting association rules. The achieved results are reported in Figure 7. The obtained results do meet our expectations, i.e., more rules are generated for higher weights.

However, the number decreases, for all cases, as the linguistic confidence threshold increases.

TI00 ; 80 2 40 0 20 40 60 80 100 Number ofTransactions (K)    Fig. 8 Runtime for GAS to find fuzzy sets for the three linguistic intervals The last experiment is dedicated to investigate the performance for the three linguistic intervals. In particular, we examined how the performance varies with the number of transactions. This is reflected in Figure 8, which shows the runtime as we increase the number of input records from 10K to 100K, for the three different cases. The results plotted in Figure 8 show that the method scales quite linearly for the census dataset used in the experiments.

6. CONCLUSIONS In this paper, we proposed a clustering approach to solve the problem of interval partitioning in favor of the maximum number of large itemsets based on linguistic minimum support and confidence. The main achievement of the proposed approach is employing GAS to dynamically adjust and optimize membership functions, which are essential in finding interesting weighted association rules from quantitative transactions, based on support and confidence specified as linguistic terms.

Compared to previous mining approaches, the proposed approach directly manages linguistic parameters, which are more natural and understandable to humans. Results of the experiments conducted on a real life census dataset  demonstrated the effectiveness and applicability of the proposed approach.

