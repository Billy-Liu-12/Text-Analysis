1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

Abstract?The growth of mobile cloud computing (MCC) is  challenged by the need to adapt to the resources and environment that are available to mobile clients while addressing the dynamic changes in network bandwidth. Big data can be handled via MCC.

In this paper, we propose a model of computation partitioning for stateful data in the dynamic environment that will improve performance. First, we constructed a model of stateful data streaming and investigated the method of computation partitioning in a dynamic environment. We developed a definition of direction and calculation of the segmentation scheme, including single frame data flow, task scheduling and executing efficiency.

We also defined the problem for a multi-frame data flow calculation segmentation decision that is optimized for dynamic conditions and provided an analysis. Second, we proposed a computation partitioning method for single frame data flow. We determined the data parameters of the application model, the computation partitioning scheme, and the task and work order data stream model. We followed the scheduling method to provide the optimal calculation for data frame execution time after computation partitioning and the best computation partitioning method. Third, we explored a calculation segmentation method for single frame data flow based on multi-frame data using multi-frame data optimization adjustment and prediction of future changes in network bandwidth. We were able to demonstrate that the calculation method for multi-frame data in a changing network bandwidth environment is more efficient than the calculation method with the limitation of calculations for single frame data. Finally, our research verified the effectiveness of single frame data in the application of the data stream and analyzed the performance of the method to optimize the adjustment of multi-frame data. We used a mobile cloud computing platform prototype system for face recognition to verify the effectiveness of the method.

Index Terms?Big data, computation partitioning, data stream, dynamic environment, mobile cloud computing, stateful.



I. INTRODUCTION OBILE cloud computing has evolved from the development of the following three related areas: mobile  computing, mobile Internet, and cloud computing [1], [2].

This work was supported by the National Natural Science Foundation of China [61572330][61672358] [61472258], the Natural Science Foundation of Guangdong Province [2014A030313554] and the Technology Planning Project (2014B010118005) from Guangdong Province. Paper no. TII-16-1126.

Jianqiang Li, Luxiang Huang, Suiqiang He and Zhong Ming are with the School of Computer and Software Engineering, Shenzhen University, Shenzhen 518060, China (e-mail: lijq@szu.edu.cn; 407309394@qq.com; 361861986@qq.com; mingz@szu.edu.cn).

Yaoming Zhou is the corresponding author and with the School of Aeronautic Science and Engineering, Beihang University, Beijing 100191, China (e-mail: zhouyaoming@buaa.edu.cn).

MCC combines the resources of mobile devices and cloud services across mobile networks to expand the limited resources of mobile equipment terminals. MCC can offer unlimited possibilities to handle big data by providing convenient access and easily configurable computing resources.

Mobile computing uses communications technology to share data and resources among the terminals of wireless communication networks. Mobile computing includes the use of location-aware technology, mobile access to information technology, and energy-saving technology for mobile devices [3], [4]. Mobile computing has caused significant changes in traditional methods of work and personal communication.

Although mobile devices have strong processing capabilities, they also have resource limitations, such as battery limitations, other hardware constraints and wireless network connection quality issues. The development of hardware for mobile devices and wireless communication network technology continues to encounter many challenges [5], [6].

Currently, cloud computing services follow one of the following three models: SaaS (Software as a Service), IaaS (Infrastructure as a Service), and PaaS (Platform as a Service) [7]. In the SaaS model, software is provided over the Internet; users do not need to buy or install the software. Instead, users are given a license to access the software online either for free or a fee. For example, Salesforce launched its customer relationship management (CRM) service using the software as a service model. In contrast, IaaS cloud service providers, such as AliCloud and Amazon, provide virtualized hardware infrastructure services to users for a fee. PaaS provides users with an application execution environment via the Internet.

These three types of cloud services have the following goal in common: they aim to provide flexible computing.

Throughout its development, mobile cloud computing has been concerned with the application of the model and its availability. Currently, both academic and industry researchers have launched related investigations regarding the creation of a mobile cloud model by the virtualization of computer resources in the near field or on additional mobile devices. A research team led by L. A. Tawalbeh [3] employed Cloudlet technology for big data applications. Byung-Gon Chun Yun [8] proposed cloning the data from a smart terminal to a Clone Cloud implementation. For example, Clone Cloud has mirrored data and applications from smart phones, among other smart terminal applications. When the implementation is complete, the results of the calculations performed by Clone Cloud are  Computation partitioning for mobile cloud computing in a big data environment  Jianqiang Li, Luxiang Huang, Yaoming Zhou, Suiqiang He, Zhong Ming  M    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  > REPLACE THIS LINE WITH YOUR PAPER IDENTIFICATION NUMBER (DOUBLE-CLICK HERE TO EDIT) <      returned to the mobile terminal. By taking full advantage of cloud resources on mobile terminals in a heterogeneous environment, applications run better [9].

Some researchers [1] explored the computing partition method of an application program function in a static environment. Yang Lei et al. examined the application of the data flow model. Other studies [10] proposed the computing partition method of application program function in a dynamic environment, which has better adaptability with changes in a network environment.

Although MCC enables convenience and satisfactory service, it encounters some problems and challenges. Cloud service systems must adapt to the mobility and limitations of smart devices, recover from a fault tolerance service, and resume service. In addition, the service model and computing migration must adjust to satisfy the increasing demand in mobile terminals [11]. Researchers must provide a model that can adjust to the characteristics of applications, with the function of computing nodes segmentation, high-quality single application performance, improved accuracy, and lower power consumption.

In response to these challenges for the future of MCC, we launched a study of stateful data streaming applications using the method of computing partitioning. In a dynamic environment, we must decide whether to migrate units of computing tasks of mobile applications to cloud computing or locally evaluated. In our research, 1) We proposed a model of stateful data streaming  applications and investigated the method of computation partitioning in a dynamic environment. We provided a definition of the direction and a formulation of the issues for mobile cloud computing to solve the efficiency problem of single frame data stream execution, the task scheduling problem, and the dynamic optimization problem for multi-frame data stream partition.

2) We proposed a computation partitioning method for single frame data flow. We determined the data parameters of the application model, the computation partitioning scheme, and the task and work order data stream model. We applied the scheduling method to calculate the data frame execution time after computation partitioning to provide the best computation partitioning method, i.e., method with the shortest time of analysis.

3) We optimized the partitioning scheme for multi-frame data with varying network bandwidths. We proposed a method to forecast the change in network bandwidth in a short time.

The analysis of the optimization and adjustment of the network bandwidth was also proposed. We conducted a performance evaluation of task scheduling. The performance of processing data stream applications has been significantly improved by a partitioning scheme. We also verified the efficiency of the optimization adjustment method in the fifth chapter.

In the following section, we present the System Model and present our formulation of the problem in Section .?  In Section III, we examine the solution for a single frame data stream. In Section ?, we examine the solution for a multi-frame data  stream. In Section ,?  we provide our evaluation of our findings.

In Section , we provide our?  conclusions and suggestions for future studies.



II. SYSTEM MODEL AND PROBLEM FORMULATION  A. System Architecture We consider that an application contains two important  partitions that enable it to function with MCC. The first partition monitors changes in conditions, such as bandwidth, the CPU resources of the local device, the CPU?s calculating ability [12], and other related aspects of the system. The second partition decides whether data execution should occur on the local device or in the cloud system. Improvements in the method for deciding the computation location (i.e., whether data execution will occur on the local mobile device or in the cloud) can improve the application?s performance and throughput.

The best method for handling the computation partitioning in MCC is dependent on the properties of the application and the related conditions. For this research, our target comprised data stream applications. A data stream application is organized into several components, with a sequence among the components [13]. We also considered that the data stream applications were stateful, which indicates that some type of status data remains after the execution of the last input data on the component. New input data need to be executed with the status data that remain on each component by a regular sequence.

B. Application Model For this study, we considered that the device and network  status continually change during the application life cycle. Two points in the data stream applications in the mobile cloud system will change: 1) The bandwidth will change after the data frame has passed  through the application computation partition.

2) Every component is stateful. Before the data frame is  executed on the component, to perform its computations, the component needs to include the status data that are left by the last data frame. Since stateful data exist on each component, the stateful data must be moved whenever a decision is made to change the location of the computation partitioning in the component.

We considered that the data stream application model is a data flow graph. It has a set of components, including the entry and exit components, and represents the stateful data of the component and the dependency among the components. We define  to represent the decision concerning computation partitioning. The decision regarding whether the data is on the component is to be executed on the device or in the cloud.

C. Problem Formulation Our goal was to improve the decision regarding computation  partitioning in a dynamic environment to improve the application performance. Variations in bandwidth affect the decision regarding computation partitioning. When the decision changes, the stateful data on the component will also change.

1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   pa ex de un to  sc ef ex m fu in an of pe  pr im to de ne  A.

sh du th ne re  Fig  tas co on ch tra  Fig  REPLACE TH  To know ho artitioning, we xecution time ecision for the nderstand how execute in the For the calc  cheme, a singl fficient. The st xecution time.

method makes uture frame da each frame da  nd the data fram f the total exec erformance of  If the future roduces chang mplementation the decision o  ecision method eeded to analy  III.

Task Schedu When calcula  hown in Fig. 1 ue to the bandw e cloud was c  eeded to be tra sources.

g. 1. Partitioning  We added tra sk component  omponent and n the compon hanged to be e ansferring task  g. 2. Partitioning  Next, we chan  HIS LINE WI  ow to make e considered  problem. If e previous data  w to make the d e shortest time culation of th e-frame metho tart time of ea For the mult decisions base  ata at intervals ata is executed me in the state cution time is t f the execution e of the netw ges in the d  n of the total m of the previous d for the comp  yze the dynami  SOLUTION FOR SI  uling ating the exec and Fig. 2, the  width. When th changed on the ansferred. The  scheme of the las  ansferring task t accounts for the cloud task  nent that was executed in the k component b  scheme of the cur  nged the mode  ITH YOUR PA  a decision how to hand we understa  a frame in ter decision for th e.

he multi-fram od of data lim ach frame was ti-frame analy ed on the cur  s of time. The d and changes e of the data flo the shortest to  n.

work bandwid data segmenta multi-frame da s single frame  putation of mul ic optimization  INGLE FRAME DA  cution time of e partitioning s he data frame e local device, e transfer occu  st frame data  ks as compon movement be  k component. W executed on  e cloud or vic before the fram  rrent frame data  el of the data fl  APER IDENT  about compu le the single  and the partit rms of time, w he current data  me data partit mitations will b s defined as th ysis of the dat rrent frame da  network band in the environ  ow in the appli ensure the bes  dth changes, ation program  ata may be attr data. Therefo lti-frame data n problem.

ATA STREAM  f the data fram scheme has ch on the compon , the status dat upied the band  nents. A transf etween the loc When the data the local dev  ce versa, we ad me.

flow graph, as  TIFICATION N    utation frame  tioning we will a frame  tioning be less he data ta, our  ata and dwidth nment, ication st total  which m, the ributed ore, the is also  me, as hanged nent in ta also dwidth    ferring al task  a frame vice is dded a    shown  in tran flow  Fig.

W stor spen  B.

reas we app app  Fig.

S mat prec vert We a ve subs Fig.

with  S whi We exec sequ one task each task the  A for t  NUMBER (D  Fig. 3. This nsferring tasks w graph.

3. Task data flow  We employed ring the data f nt time.

Ordering the We know t  soned that if w could calculat lication [14].

lied the follow  4. Task data strea  Step 1. We sel trix. We iden cursors [15].

tical columns defined a que  ertical column script of the ve . 5, the vertica hout precursor  Step 2. We sel ich enabled us  defined the l cution time fo uential queue or more path  k node. Second h task node to k node with th queue.

As shown in Fi the task node;  DOUBLE-CLIC  model cont s, and cloud ta  w graph  an adjacency flow graph an  Tasks the adjacency  we knew the se te the executio To determin  wing procedur  am no predecesso  lected the task ntified the ta In the adjace in which the ue to hold the  n that satisfied ertical column al columns 0, 7 rs. Thus, the q lected the task to execute to  longest path a for all task no to add the nod  hs. First, we id d, we compar obtain the lon  he longest exec  ig. 5, in this ex thus, we calcu  CK HERE TO  tains three ta asks. We defin  matrix as the nd a vector to  y matrix and equence of the on time of the ne the seque re.

or task node  k that was read ask nodes th  ency matrix R values were a ready tasks. W  d the requireme n to the queue.

7 and 9 indica  queue containe k node that had the end node i as the path th odes on the pa de. Every task dentified the lo red all selected ngest path. Wh cution time pa  xample, we ide ulate the execu  O EDIT) <  asks: local ta ne it as a task  e data structur o store each ta  d the vector.

e tasks to disp e data frame in nce of tasks,  dy in the adjac hat did not R, we selected all 0 in the ma When we ident ents, we added As the examp  ated the task n ed 0, 7, and 9.

d the longest p in the ready qu  hat has the lon ath. We defin  k node is locate ongest path fo d longest path hen we selecte ath, we added  entified three p ution time with   asks, data    e for ask?s  We atch, n the , we    ency have  d the atrix.

tified d the ple in nodes  path, ueue.

ngest ned a ed in  or the hs for d the it to  paths h the    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   ve di lon or tas  Fig  Fig  re re up sc  Ga (S SQ  Fig  C.

th ap X  REPLACE TH  ector and obta scovered that ngest path. W  rder queue. W sk scheduling  g. 5. Longest exec  g. 6. New ready ta  Step 3. We up flect new read ady task queu  pdated. When cheduling orde  Step 4. We antt chart show  SQ) after sortin Q of transfer ta  g. 7. Task executi  . Best Solutio The reasons f is paper, com  pplied to x 0	or  HIS LINE WI  ain the longest the task node  We updated the When the ready  order.

cution time path  ask node  pdated the dat dy task nodes ue and schedu the ready que  er.

ascertained th wn in Fig. 7, w ng. We obtaine asks, cloud tas  ion time  on Using GA for the selectio mputation par  obtain 1|i ? V  is th  ITH YOUR PA  t path. After c e for which th e ready task qu y queue was em  ta flow diagram and loop the  uling order que eue was empty  he task execu which provided ed the executio sks, and local  on of a genetic rtitioning for the segme  he scheme. x  APER IDENT  comparing path e index is 0 h ueue and sche mpty, we obta  m shown in Fi previous step eue were cons  y, we obtained  ution time usin d a sequential on time based tasks.

c algorithm (G the data stre  entation sc = 0 represent  TIFICATION N    hs, we had the eduling ained a      ig. 6 to ps. The stantly a task  ng the queue on the    GA): in eam is cheme.

ts that  the nod bina con glob stro con ann time and the achi effic sche  A fram fram data acro stru app shor  W app prov fram sele stud 1)  b  T For stru   term thus nod  NUMBER (D  node that is pr de is processe ary encoding; straints, easily bal optimal so  ong, and the dition of setti ealing are str e. The disadva  d the influence hill climbing ieve a better s ciency. A GA eme of the dat  As previously me segmentati me calculated a a frame calcula oss the applica ucture of the lied an optim rtest data fram  When the netw lication progr vide the optim me. Because w ection problem dy to calculate Determine pa Figures that black/gray. T illustrations, m  The following known origin  ucture, such as ? d  is ?  ?  is  resou ? P  is  devic ? ?  is  ?  P  is ?  d ,  i ?  b ,  i  the tr ?  d  i  node ? b  is  is the execut minal. The loca s, the time is e  de to the local r    DOUBLE-CLIC  rocessed in the ed in the loca ; its advanta y avoid the l olution. The optimal solu  ing parameter ong local sea antage is that t of the parame algorithm is  solution when A is suitable f ta stream.

described, for on program, w a split decision ate the shortes ation. In the p computation  mal task sche me execution ti work bandwidt ram must det  mal segmentati we considered m, we applied e the optimal p arameter set of  are meant to These figure multicolor grap designations a  nal state data fl formulas (1) s the amount o  s the local mob urces; the processing  ce CPU; the available  s the processin s the data tran  s the distributi ransmission ba is the data amo ; s the transmiss  tion time of th ally executing equal to the ra resource:    CK HERE TO  e cloud. x = 1 al mobile dev ages are the local optimum GA global se  ution can be rs. The advant arch ability an the global sea eters is easily a simple and e  n addressing th for the compu  r the known da we analyzed ho n [16]. The go st execution tim previous steps partitioning s eduling schem ime.

th changes the termine the p ion decision fo d this problem d the genetic partitioning de f the problem.

o appear in c es may inclu phs, and flowc appear in our f low diagrams to (4);  of data on the t  bile device CP  g capacity of t  resources on t  ng power of th nsmission over  ion to the tran andwidth; ount of the sta  sion bandwidt  he task node i task is the use  atio of the amo  .

O EDIT) <  represents tha vice. GA emp ability to ha  m, and obtain earch capabili  obtained for tages of simul nd a short run arch ability is p affected. Altho  effective, it ca he problem of  utation partitio  ata calculated ow the current oal was to mak me of the part s, we analyzed scheme. Then me to obtain  e environment partition that for the current m to be an opt  algorithm in ecision scheme   color or shade ude photogra charts.

formulas: of the data sto  task node;  PU?s available  the local mobi  the cloud;  he cloud; r the edge of E  nsmission side  ate data on the  th of the state d  in the local mo e of local resou ount of data on     at the ploys andle n the ity is r the lated  nning poor, ough annot f low oning  on a t data ke the tition d the  n, we n the  t, the will data  timal n our e.

es of aphs,  orage  e  ile  E , ; of  V  data.

obile urces; n the  (1)    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  > REPLACE THIS LINE WITH YOUR PAPER IDENTIFICATION NUMBER (DOUBLE-CLICK HERE TO EDIT) <      is the execution time of the task node in the cloud. The time is equal to the amount of data on the node and the ratio of the cloud resources:  .                               (2) For every frame data after computation partitioning, the  bandwidth will change. , is the transmission time between the task node  and the task node . The time is equal to the amount of data of ,  and the ratio of the network bandwidth , :  , ,  , .                         (3)  is the time of the state data transmission	of the task node . The time is equal to the amount of state and the ratio of the  network bandwidth :   ?  .                        (4)  To create efficient computation partitioning, the first consideration is the implementation efficiency of single frame data. We assumed that the segmentation scheme ? of the last frame data is known:  ? ? 0	 	1 ? 	.																					(5) The goal was to have the current frame data segmentation  program X make the optimal decision in the changing network bandwidth environment to ensure that the data frame executes in the shortest time: 0	 	1| ? 	.                     (6) ? 0 is the node that executes in the cloud. ? 1 is the node that locally executes. For the segmentation scheme , because the data input is local, the output is local:  1		 1	.                                  (7) Regarding the previously mentioned task scheduling  program: In determining the current data frame segmentation scheme , the total time frame of computing in the application can be calculated. Therefore, the relationship among the data to calculate a single frame segmentation program execution time of the function can be expressed in the form: .              (8)  For stateful data streaming applications in a single frame decision flow calculated segmentation scheme, the aim is to make the data stream calculate the shortest partition after the execution time of the application. Then, the fitness function can be determined as follows:  1/  .                   (9) Then, determine the problem parameters, and use the genetic  algorithm to obtain the computation partitioning scheme of single frame data.

We investigated the computational cost of our partition algorithms. The computation cost is measured by the number of generations that our partition algorithm demands to converge.



IV. SOLUTION FOR MULTI-FRAME DATA STREAM Our analysis of the method of decisions made for single  frame data demonstrated that the calculation method for multi-frame data is more efficient than the calculation method subjected to the limitations of single frame data. This section focuses on the analysis and research of the segmentation scheme for the computation of multi-frame data flow in a changing network bandwidth environment.

A. Multi-frame Data Computation Partition For the computation partitioning of data frames, our goal is  to find the shortest execution time for a data frame. We also need to know the current changes in the network bandwidth to obtain the optimal partitioning scheme. Similarly, in the analysis of multi-frame data, the goal is to find the shortest total execution time for multi-frame data in data stream applications.

Currently, data frames seek to create the optimal partitioning scheme using a genetic algorithm for the computation partitioning program. This approach can only provide approximations of an optimal partitioning scheme due to a premature convergence of genetic algorithms and a local problem.

Even if the current computation partitioning scheme of the data frame were globally optimal, it would fall short for continuous multi-frame data. Due to changes in the network bandwidth, the decision for each frame of data would need to be remade related to the migration of the state data calculation.

Due to the previous single frame data decision and decreased efficiency, the total execution time may not be minimal. Rather, a dynamic decision-making adjustment is required. The performance may be further optimized.

Our approach to this challenge was to make decisions based on the current frame data and a future time interval frame data calculation of the segmentation scheme. The start time for each frame of data is defined as a time of execution. We measured the network bandwidth (change of environment) when each frame data was executed to obtain the best performance in the state of the data flow in the application and the shortest total execution time.

In addition to the decision of the current frame data segmentation program, we also considered the next time interval of the frame data segmentation program. In this process, the network bandwidth of each time interval was predicted. The predicted future based on the network bandwidth may correspond with the single frame data calculation of the segmentation method on each frame of data, as obtained from the current moment to the multi-frame data calculation of the segmentation. Based on the initial solution, further optimization and adjustment were performed to satisfy the total execution time of multi-frame data in the data stream.

We considered the change trend of a network in the future.

First, by the previous single frame data calculation method of segmentation, the current T  data frame execution time EXET was calculated. The predicted future plan t for a moment of the network bandwidth B was calculated with the same method from T  to T ?t , which yields a multi-frame data total execution time of ? EXET . Then, the T  data frame segmentation scheme would perform an optimization and adjustment to ensure that the adjusted data frame execution    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   tim ad ?    B.

clo an on att no  an ev no no pr id pr no tra wa de its  Fig  we fra EX sc tim fo EX th fo  A.

flo ap re th  se ter fa fo  REPLACE TH  me would be E djustment after EXET ? was    Search Adju If operations  oud computing nd time is wast n the genetic a tempted to re odes.

For stateful d nd tail compu valuated. The ode has no su on-inclusive n recursor node dentified the n recursor and su odes had to p ansmission ha asted addition ecision for the s execution to  g. 8. Optimizati  After iterating e constructed ame calculati XET ? EXE cheme or used mes and adjus ollow-up ?t fra XET . We em e entire adjus  or multi-frame  Practical Ap The computa  ow applicati pplications, m ality applicati is paper. An im In this pap  egmentation m rminal face rec ce recognition  or the training  HIS LINE WI  EXET ? rather r the multi-fram smaller than t  ? ust s frequently m g or vice versa ted time. Ther  algorithm to ca educe the net  data flow appli ute nodes in th  first node has uccessor node node. In Fig.

e and one su node in the l uccessor nodes perform in th ad occurred b nal time. This node was not the cloud.

ion of the comp  g over all node an adjusted da ons, which w ET . We cho d the original sted the compu ame data if the  mployed the co stment as the data from T

V. EV  pplication Env ation partition ions, such  mobile video ons, and mobi mage flow exp per, we app method to ou cognition prog n image proce library.

ITH YOUR PA  r than the unad me data of the the unadjusted  ?  ? ?  move from th a, network reso refore, our met alculate the se twork transmi  ications, we c he data flow s no precurso e; thus, it is 8, every nod  uccessor node ocal executio s. If the predec  he cloud, we before and aft waste of tim reasonable; th  puting nodes  es, excluding t ata segmentati would be acce ose this calcul  plan. We con utation partitio e total results omputation par computation p to T ?t.

VALUATION  vironment ning scheme as mobile applications,  ile VR technol periment is pe  plied the sta ur study of th gram [18], [19 essing and the  APER IDENT  djusted EXET total executio  d sigma ? EXE  .

he local termi ources are emp thod, which is  egmentation sc ission betwee  onsider that th diagram are l  or node, and th considered to  de has at lea e. To procee  on and travers cessor and suc knew that th  ter the node, me indicated th hus, we would  the first and th ion scheme of epted if it sa lation segmen ntinued the cy oning scheme satisfied EXE rtitioning sche partitioning sc  is suitable fo image proc mobile augm  logy applicatio erformed [17-1 ateful data s he Android m  9]. We develop e background  TIFICATION N    . The on time ET :  (10)  inal to ployed s based cheme, en two  he first locally he tail o be a st one  ed, we sed its ccessor e data which  hat the adjust    he last, f single atisfied ntation ycle ?t  of the T ? eme of cheme  or data cessing mented ons. In 19].

stream mobile ped the server  N nu  T ima iden perf imp clou app  F exec grou reco  A netw sche the decr the part loca perf  N ba  (           B.

In  term  NUMBER (D  A  Node umber exec  ?  ?  ? ?  ?  ?  The first node age. It is im ntification resu formed in plementation o ud resources c lication param  For the initial cuted in the a ups. TABLE ords according As shown in T work bandwid eme, and smal  cloud schem reased with an decrease of th titioning schem al execution p formance was  Network andwidth (KB/s) 832.1  1178.8  1406.3  1561.2  1684.3  1750.4  1928.7  1954.8  2249.4  2288.1  Evaluation of n this paper, w  minal face re  DOUBLE-CLIC  TAB APPLICATION DE  Local cution time  1.5 s  0.9 s  0.7 s 1.1 s  2.6 s  0.3 s  provides initi mplemented i ult is provided  the mobil of some nodes can execute o  meters are liste segmentation  application. W ? shows the s g to the size of TABLE ?, w dth, better pe ller applicatio me of execu n increase in th he slope was s me. Although plan, the execu  the worst.

TAB  EXPERIMEN  Computation partitioning  1,1,1,0,1,1  1,1,1,1,0,1  1,1,0,1,1,1  1,1,0,1,0,1  1,1,0,1,0,1  1,1,0,0,0,1  1,0,1,0,0,1  1,1,0,0,0,1  1,1,1,0,0,1  1,1,1,0,0,1  f Single Frame we applied our ecognition ap  CK HERE TO  BLE I ETAIL PARAMETE  Cloud execution tim  -  0.093 s  0.065 s 0.012 s  0.023 s  -  ialization and in the mobi d by the end n e terminal.

s occurs in the other nodes. T ed in TABLE  scheme, all n We conducted  sorting of the f the network b  we obtained a g erformance o  on execution ti ution and the he network ban smaller than t all nodes wer  ution time wa  BLE ? NTAL RECORDS  Execution time (s)  5.69  5.21  4.33  4.01  3.98  3.41  3.42  3.01  2.82  2.71  e Data r method to th plication. In  O EDIT) <  ERS  me State d quanti  2.3 M  1.2 M  3.1 M 1.1 M  2.4 M  0.1 M  intake of the le terminal.

node, which is Although  e mobile term The details of  .? nodes were lo experiments i first ten group bandwidth.

greater increa f the partitio imes. All node e execution ndwidth; howe the decrease o re employed in as optimal, and  Local nodes  (s)  C n  6.02 5  6.15 5  5.98 4  6.13 4  6.36 4  6.24 4  5.89 4  6.11 3  5.21 3  6.22 3  he Android mo this section,   data ity  MB  MB  MB MB  MB  MB  face The  also the  minal, f the  cally in 50 ps of  se in oning es on time ever,  of the n the d the  Cloud nodes  (s) 5.71  5.29  4.93  4.67  4.69  4.33  4.12  3.98  3.81  3.92  obile , we    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   de pa  on co TA sy in th  Fig  Fig  be da ef ite ob  REPLACE TH  escribe our u artitioning sch  First, the influ n the computat onfiguration o ABLE ?. W ymbol *, wher TABLE ?,  00. The data fl e network ban  EXPERIM  Populat   g. 9. Population s  g. 10. Crossover r  By setting etween the nu ata frame in F ffect improved erations of the btain better dat  By setting di  HIS LINE WI  use of MAT heme for single uence of the pa tion time of sin of the experi  We chose a pa reas other para the local reso  low graph is G ndwidth is 1.

TA MENTAL PARAME  tion size Cro *   ize  rate  different pop umber of itera Fig. 9. When t d. This result d e genetic algor ta frame comp ifferent cp, th  ITH YOUR PA  TLAB simula e frame data.

arameters of th ngle frame dat mental param arameter as a  ameters were c ource is 1. Th  G(10,(0-300 KB  ABLE ? ETERS IN GENETI  ssover rate M 0.6 *  0.6  pulation sizes tions and the the population demonstrates th rithm converg putation execu he experiment  APER IDENT  ation to verif  he genetic algo ta was observe meters is sho a variable wi constants. As he cloud resou B),(0-300 KB)  IC ALGORITHM  Mutation rate 0.02 0.02  *  s, the relatio computation  n size was larg hat as the num  gence is reduce ution times.

tal results sho  TIFICATION N    fy the  orithm ed. The wn in ith the shown urce is )), and      onship of the  ge, the mber of ed, we  own in  Fig.

imp  T the betw the dem fast gen The con fram  Fig.

W algo data of th of th the con com term The  Pop      T flow As t incr TAB  U com the  NUMBER (D  . 10 are obta proved.

The three grou rate of the num  ween the numb data frames  monstrated, the ter the geneti erated differe  e larger rate o vergence spee  me computatio  11. Variation rate  We analyzed orithm on the a. We selected he method. In he state of the input parame figuration of t  mparison was minal of the pr e mutation rate  CONFIGU  psize Gap  00 300  30 50  30 50  30 50  The relationsh w graph and th the number of reased. The p BLE ?; the e  Using the ca mpare all node  cloud impl  DOUBLE-CLIC  ained. When  ups ranged fro mber of times ber of iteration were observ  e larger is the ic algorithm  ent calculation of individual ed of the genet on execution ti  e  the effect of computation  d a better param this portion o data stream w  eters on the p the input param performed fo rogram with th e was 0.02 and  TAB URATION OF EXP  Data flow G(*, (0-300  KB G(20, (0-300  KB G(20, (0-300  KB G(20, (0-300  KB  ip between th he computatio f nodes increas parameter con xperimental re  alculation of s in the local i lementation,  CK HERE TO  the cp was  om small to la s. Differences ns and the com  ved, as shown rate of indivi for the indiv  ns of the segm variation can  tic algorithm to imes.

the paramete and executio  meter to verify f our study, th  were studied, an performance w meters is show or all nodes in he implement d the cp was 0  BLE ? PERIMENTAL PAR  w graph KB),(0-300  B)) KB),(0-300  B)) KB),(0-300  B)) KB),(0-300  B))  he number of on execution ti sed, the numbe nfiguration is esults are show the segment  implementatio the applicat  O EDIT) <  large, the e  arge difference in the relation  mputation tim n in Fig. 11 idual variation vidual popula  mentation sch also increase  o obtain better  ers of the gen on of single fr fy the effective he input param nd the influen  was analyzed.

wn in TABLE ? n the local mo tation in the cl .6.

RAMETERS  ? P ? P 1 100  * 100  1 *  1 100  nodes in the ime was analy er of iterations the first lin wn in Fig. 12.

tation schem on and all nod tion perform   effect  es in nship es of . As  n, the ation eme.

e the r data    netic frame eness  meters ce of The  ?. A obile loud.

B     *  data yzed.

s also ne of   e to  des in mance    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   ex W co pe in an re pe  Fig  ap th sh lo pe co im  Fig  ex th  REPLACE TH  xhibited a dist When the numb omputation p erformance lev the cloud. Th  nd an increase sources can a  erformance.

g. 12. Number of  Next, we a pplication perf e second row  hown in Fig. 1 cal implemen  erformance im omputational mproved.

g. 13. Local resou  The perform xecution of the e algorithm  HIS LINE WI  tinct boost wh ber of nodes w artitioning sc vels of the co hus, we prove in the number apply cloud c  f nodes  analyzed the formance. The in TABLE ?  13. With an in ntation of th  mproved to so segmentation  urces  mance of the s e nodes. When directly empl  ITH YOUR PA  hile the execut was large, the cheme began  omputation seg ed that with fi r of nodes, limi computing res  impact of l e parameters  ?, and the expe ncrease in loca he program ome extent. W  scheme, the  scheme also n more local re loyed more n  APER IDENT  tion time decr performance  n to approac gmentation sc fixed local reso ited local com sources to im  local resourc are set as sho erimental resu al resources a for all node  With the use e performance  tended to the sources were k nodes in the  TIFICATION N    reased.

of the  ch the hemes ources  mputing mprove    ces on own in ults are and the s, the of the e also    e local known,  e local  imp met  W perf of T reso all segm leve perf curv exec in th to exh cho bott  Fig.

Fig.

B fact netw exp  NUMBER (D  plementation, w thod.

We analyzed t formance, with TABLE ?. A ources, the per nodes imple  mentation sch el of the fina formance. As ves, when the cution time w he cloud that u the limitation austed all ne ose some nod tleneck.

14. Cloud resourc  15. Network band  Because the ne tor for the app work bandwid erimental para  DOUBLE-CLIC  which verified  the impact of h the paramete  As shown in Fi rformance wa  emented in th heme, the perfo al performanc demonstrated cloud resourc as greater than use the compu n of networ  etwork bandw des in the loc  ce  dwidth  etwork bandw plication prog dth on the per ameters were s  CK HERE TO  d the flexibility  cloud resourc er settings liste ig. 14, with an s improved in he cloud. Fo formance also ce was lower d by the inters ce exceeded 50 n the execution uting segmenta rk bandwidth  width resource cal calculation  width is an imp gram, we anal formance of t set as shown in  O EDIT) <  y of the calcula  ces on applica ed on the third n increase in c n the program or the compu improved, bu  r than the fo section of the 00, the applica n time of all n ation scheme.

h, the applica es and could n, which creat  portant influen lyzed the effe the application n the fourth ro   ation  ation d line cloud with  uting ut the rmer  e two ation  nodes Due  ation only  ted a      ncing ct of n. Its ow of    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   TA W m  C.

we da ne ex of nu  Fig  in m m Th th  pe da sta of  REPLACE TH  ABLE ?, and When the bandw method achieve  . Evaluation For the valida  e compared it ata in terms o etwork bandw xperimental pa f Table ?. W umber of node  g. 16. Comparison  Based on the the number o  method was sup method, and the  he decision-m e multi-frame The experim  erformance of ata segmentati arting from the f the time wind  HIS LINE WI  d the experime width of the ne ed better perfor  of Multi-Fram ation of the mu s performance  of execution t width values, arameters wer  We contrasted es on the total  TA MEASURED NE  Time Pea T  T+2 s T+4 s T+6 s T+8 s T+10 s T+12 s T+14 s T+16 s T+18 s  n of single frame  experimental of nodes, the u perior to the e total time of  making and the data were ver  ment was de f the dynamic on scheme. Th e current time dow is 10. We  ITH YOUR PA  ental results ar etwork increas rmance.

me Data ulti-frame data e with the met time. We test  as shown in re set as indica  and analyzed performance.

ABLE ? ETWORK BANDWI  ak time bandw 646.1 KB/s  1098.2 KB/s 424.6 KB/s 883.7 KB/s  1159.2 KB/s 719.3 KB/s 902.9 KB/s 593.6 KB/s 429.9 KB/s  377.1 1 KB/s  and multi-frame  results in Fig.

use of the mul performance  f application e dynamic adju  rified.

esigned to t  c optimization he length of th . We set ?t t e analyzed the  APER IDENT  re shown in F sed, the compu  a adjustment m thod of single ted an actual n Table ?.

ated on the fir d the effects  IDTH  width  s  . 16 and the in lti-frame adjus of the single  execution was ustment algorit  test the exe n of the multi- he time window to 10, i.e., the e next ?  fram  TIFICATION N    ig. 15.

utation  method, frame set of Other  rst line of the    ncrease stment frame small.

thm of  ecution -frame w is ? , length  me data  segm the  T follo  T num con prop  W the deci exp num pred com  Fig.

Fig.

In prob env app solv effic  NUMBER (D  mentation sch t ?s time w  The time comp ows:    The experimen mber steps alo sumption was portion curve.

We ran an anal time wind  ision-making erimental resu  mber of time w diction, whic  mputation exec  17. Time window  18. Time window  n this paper, blem for mob ironment. We lication and u  ve the proble ciency, the t  DOUBLE-CLIC  heme, moved with ?t back fra  plexity of the  ? ?? ntal results a ng the time w s reduced, wh   lysis with an in dow to und  on the calc ults in Fig. 18  windows did no ch produced cution time.

w step and algorith  w step and data fra

VI. CON we investigat  bile data stre e proposed a used this mod em of single task schedulin  CK HERE TO  ?  steps forw ames (1 ?s e algorithm ca  ? ?  are shown in window increa hich correspon  ncrease in the derstand the culation of th  indicate that ot enable the n d an irregu  hm consumption  ame computation  NCLUSIONS ted the applic  eam applicatio stateful mod  del and partit frame data  ng problem  O EDIT) <  ward, and anal ?t).

an be analyze  .

Fig. 17. As  ased, the algor nds to the inv  number of ste impact of  he decision.

the increase in  network bandw ular data fr  cation partitio ons in a dyn del of data str tioning metho stream execu and the dyn   lyzed  ed as  (11)  s the rithm verse  ps in the  The n the  width frame      oning amic ream od to ution amic    1551-3203 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TII.2017.2651880, IEEE Transactions on Industrial Informatics  >   op m pe alg ap th ef  da re  [1]  [2]  [3]  [4]  [5]  [6]  [7]  [8]  [9]  [10  [11  [12  [13  [14  [15  [16    REPLACE TH  ptimization of model and pa erformance of gorithm to s  pplications. W e method and  ffective.

In our future  ata frames, d sources in a se  ]  L. Yang, J.

partitioning an computing,? A no.4, pp. 23-3  ] E. Baccarelli, ?Energy-effici networked da challenges, an 2016.

]  L. A. Tawalbe Model Using CHASE, 2016  ]  M. Adnan, R balancing via 188-195, June  ] M. Shojafar, N resource man Transactions o  ] J. Li, S. He, Networks Sy Servers Comm Networks, Vo  ] G. Ercolani, integrated mo International Virtualization  ]  A. ur Rehman Mobile Cloud Surveys, vol.1  ] L. Liu, Y. S optimization: networks,? IE 2015.

0] F. Longo, R. G for Infrastruc Conference o Kong : Depen  1] M. Shojafar, Computing-pl Multimedia Pr Computing, vo  2] L. Yang, J. Ca Dispatching in vol.65, no.5, p  3] W. Wei, X. F dynamic stac Markov for cl no.99, p. 1, Fe  4] K. Prabh and sensor networ pp.178-203, N  5] L. Yang, J. C Repartitioning Transactiom o  6] M. Satyanaray VM-based clo vol.8, no.4, pp  HIS LINE WI  f multi-frame rtitioning me  f data process solve the par  We designed a model; the re  e study, we wi data transfer eries of experi  REFE Cao, S. Tang, T nd execution of ACM Sigmetrics 2, Mar. 2013.

N. Cordeschi, A.

ient dynamic tra  ata centers for big nd a case study,?  eh, W. Bakheder a the Cloudlet Sch  6, pp. 73-77.

R. Sugihara,R. Gu dynamic deferral  e. 2012.

N. Cordeschi and nagement for rea on Cloud Comput Z. Ming and S  ystem with Mul munication,? Inte  ol. 1, no. 1, pp. 1-8 ?Cloud Compu  odel for evaluatin Conference o  n. Valencia:IARIA n Khan, M. Othm d Computing App 16, no.1, pp. 393-4 Song, H. Zhang, A biology-inspire EE Transactions  Ghosh, V. Naik, K cture-as-a-Service n Dependable Sy  ndable Systems & C. Canali, R.

lus-Communicatio rocessing in Clou ol.PP, no.99, pp.

ao, G. Liang, et al n Mobile Cloud Sy pp. 1140-1452, M an, H. Song, X. F  ckelberg game b loud computing,? eb. 2016.

T. Abdelzaher. E rks. ACM Transa  November 2005.

Cao, D. Han, S. T g in Dynamic on Cloud Comput yanan, P. Bahl, R  oudlets in mobile c p.14-23, October 2  ITH YOUR PA  e data stream ethod signific sing. We also rtition proble face recogniti  esults proved t  ill consider th instability  imental tests.

ERENCES: T. Li, and A. C data stream appl Performance Ev  Mei, M. Panella, affic offloading g data stream mo ? IEEE Network,  and H. Song, ?A M heme for Big Data  upta, ?Energy eff of workload,? In  d E. Baccarelli, "E al-time vehicular ting, vol.PP, no.9 S. Cai, ?An Inte ltiple Servers C ernational Journa 8, 2015.

uting Services ng Software as  on Cloud Com A,2013, pp. 77-80  man, S. Ahmad Ma plication Models,? 413, July. 2013.

, H. Ma and A ed algorithm for th on Computers, V  K. Trivedi, ?A sc e cloud,? IEEE/ ystems & Netwo Networks (DSN) Lancellotti and on Optimizati ud Systems," IEE 1-1, 2016.

, ?Cost aware Ser ystems,? IEEE Tr  May. 2015.

Fan, and J. Yang, based resource a ? IEEE Trans. Se  nergy-conserving actions on Senso  Tang, and N. Suri Mobile Clou  ting, vol.4. no.3, p R. Caceres, and computing. In IEE 2009.

APER IDENT  m partitioning cantly improv  designed a g em of data s ion system to that our metho  he congestion and limited  Chan, ?A framew ications in mobil aluation Review,  M. Shojafar and and reconfigura  obile computing: vol.30, no.2, pp  Mobile Cloud Com a Applications,?  ficient geographic Proc. IEEE CLO  Energy-efficient a r cloud services, 9, pp. 1-1, 2016.

elligent Wireless  Communication M al of Distributed  Potential Analys a Service,? The  mputing, GRID 0.

adani, et al, ? A Su ? IEEE Commun  . Vasilakos, ?Ph he steiner tree pro ol. 64, no.3, pp. 8  calable availability /IFIP 41st Intern orks (DSN 2011) ), 2011, pp. 335-3 J. Abawajy, "A  on Framework E Transactions on  rvice Placement an ransactions on Co  , ? Imperfect info allocation using  ervices Comput., v  g data cache place or Networks, vol  i,"Run Time App ud Environment pp. 336-348, Jul. 2 N. Davies. The c EE Pervasive Com  TIFICATION N    g. The ve the genetic stream verify  od was  in the cloud  work for le cloud , vol.40,  J. Stefa, ation of review, . 54-61,  mputing in Proc.

cal load OUD, pp.

adaptive ," IEEE  Sensor Multiple Sensor  sis, An e Fourth s, and  urvey of nications  hysarum oblem in 818-831,  y model rnational ). Hong 346.

Adaptive k for n Cloud  nd Load mputers,  ormation hidden  vol. PP,  ement in l.1 no.2,  plication ts,"IEEE 2016.

case for  mputing,  [17]  [18]  [19]    prov of th    clou   incl   NUMBER (D  L. Yang, J. C Partitioning for Transactions on H. Song, D. Raw Foundations, Pri 2016, pp. 1-514 H. Song, R. Sr Foundations, Pri  vince, China.

hing, robotic,  ud computing.

lude home netw  DOUBLE-CLIC  Cao, H. Cheng, Latency Sensitiv Computers, vol.6  wat, S. Jeschke, an inciples and Appl .

rinivasan, T. Soo inciples, and App  Jianqiang degree fro Technolog associated Computer Shenzhen of the Foundation Natural Sc  His major res hybrid system   Luxiang H Master?s Computer Shenzhen  His rese learning, d   Yaoming Ph.D. deg 2008 and Lecturer of Aeron Beihang interests bio-inspir intelligen landing v  Suiqiang degree in from Shen 2016. He National N a project o Guangdon interests in data proce  .

Zhong M of Compu Shenzhen member Federation National N two proje Foundatio China. H  works, interne  CK HERE TO  and Y. Ji, ?Mu ve Mobile Cloud 64, no.8, pp. 2253 nd C. Brecher, ?Cy lications,?  Boston  okoor, and S. Je plications,? Hobok  g Li received om South Ch gy in 2003and  professor at and Softwar  University. H National N  n, and two cience Foundat search interes  ms and embedd  Huang is curr degree at and Softwar  University, Sh earch interests data mining.

g Zhou recei gree from Beih d 2013. Now and Master T  nautic Science University.

include m  red computing nt control of v vehicle.

He received Computer sc  nzhen Univer participated i  Natural Scienc of Natural Scie ng Province. H nclude data co essing, netwo  Ming is a profes uter and Softwa  University.

of the Ch  n. He led thre Natural Scienc ects of the  on of Guan His major r et of thing and  O EDIT) <  ulti-User Compu d Applications,? 3-2266, Aug. 201 yber-Physical Sys n, MA: Academic  eschke, ?Smart C ken, NJ: Wiley, 2  his B.S and P hina Universit d 2008. He i t the Colleg re Engineerin  He led two pro Natural Sci  projects of tion of Guangd ts include inte ded systems.

rently pursuing the College  re Engineerin henzhen, Chin s include mac  ived his B.S hang Universi  w he serves Tutor at the Sc  and Enginee His rese  machine learn g, aircraft de ertical takeoff  his B.S and cience techno rsity in 2014 n a project o  ce Foundation, ence Foundatio His major rese ommunication  orking and mo  ssor at the Col are Engineerin He is a se  hinese Comp ee projects of ce Foundation  Natural Sci ngdong prov research inte d cloud compu   utation IEEE 5.

stems: c Press,  Cities: 2017.

Ph.D.

ty of is an e of  ng of ojects ience f the dong ernet  g the e of ng of na.

chine  and ity in as a  chool ering, earch ning, sign, f and  M.S ology  and f the , and on of earch n and obile  llege ng of enior puter f the , and ience ince,  erests uting.

