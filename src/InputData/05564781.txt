Notice of Retraction

Abstract-algorithms for support-based association rules mining can only discover frequent itemsets, can not discover the non-frequent itemsets with high utility values; utility-based association rules mining aims at discovering high utility itemsets, without considering the itemsets whose utility values are not high but the product of the support and utility of the same itemset is very large. To solve the problem, we propose a new measure, i.e., motivation, to measure the importance of an itemset and a down-top algorithm called HM-Two-Phase? Miner to discover high motivation itemsets. Motivation integrates the advantages of support and utility, and thus can reflect both the semantic significance and statistical significance of an itemset. In HM-Two-Phase-Miner algorithm, transaction-weighted motivation downward closure property is adopted to cut down the search space.

Key Words-high motivation itemset, association rule, support, utility-based, pruning strategy  1. INTRODUCTIONS  Support-based association rules mining algorithms[IJ[2][3][4]  use support to measure the user's interest, it can not discover the non-frequent itemsets with high utility values, and thus it will result in the loss of some useful knowledge. For example, in the transcation database, some itemsets with a low support and a high utility can bring more business profits and arouse more business interests than those with a high support and a low utility. instead of support, Utility-based association rules mining(UMARM) [5][6][7] use utility to evaluate the importance of the itemsets, it can't discover the itemsets whose utility values are not high but the product of the support and utility of the same itemset is very large.

Although the utility of these itemsets is not high, they may probably cause the user's interest. Compare to those itemsets with high-utility but low-support, the itemsets with high motivation always means a more safe and secure decision scheme: the possibility of success of the decision is very high, although the success may not bring many benefits. In real life, most people still prefer the safer scheme, while being cautious about those schemes (e.g. buy sports lottery) which will get a high profit but the success rate is very low.

The most important reason resulting in the loss of useful knowledge is that the two kinds of association rules mentioned above made too simple assumptions on the issues of measuring user's interest: the support-based association rule supposes that users only interest in the frequent itemsets while the utility-based association rule supposes that users    only interest in the high-utility itemsets. In fact, the factors that determine people's interest exist in both subjective and objective aspects. Support, as an objective measurement, can not reflect the semantic characteristics of itemsets; Utility, as a subjective measurement, can not reflect the statistical properties of itemsets[8]. As a result, simple support-based or utility-based association rules can't express the user's interests accurately.

Expectancy Theory[9] said that the motivation is the process of evaluation and selection, the driving force(or motivation) people to take an action with depends on the value of their evaluation of the operation results(valence) and the estimation of the expected possibility of the achieving goals(expectancy). That means, the value of motivation depends on the product of valence and expectancy.

Motivation = Valence X Expectancy (1)  Therefore, the key points which determine people's interests in a specific itemset should at least including the support (correspond with expectancy) and utility (correspond with valence) of the itemset. According to formula (1), we use the product of support and utility which we defme as motivation to reflect the statistical and semantic characteristics of itemset, and propose a high-motivation itemsets mining algorithm.



II. CONCEPTS AND DEFINITIONS  Assume that I={ib iz, ... , im} is a set of items, T={tb tz, ... , tn} is a transaction database, each transaction tq ( tq E T) is a subset of I, which means tq S; I. Suppose S is a subset of I, if every item in S is also contained in tq, i.e., S S; tq , we say tq supports or contains S. According to the concepts of references [5][6][7], the definitions are given out as bellow:  Definition 1: the set of transactions of item set S (transaction-set of S), denoted as T" is the set of all the transactions that contains S, i.e.,  Ts = {tq ISs; tq,tqE T} Apparently, if SI ? S2 , then TSJ S; TS2 .

(2)  Definition 2: the utility of item ip in transaction tq (The transaction-utility of item ip ), denoted as l(ip, tq), is the utility brought on by item ip when transaction tq occurs. To facilitate the understanding, the utility mentioned within the paper all means the economic utility. In transaction database, the transaction-utility of the item means the product of the item's unit profit and sales? amount in tq.

Definition 3: the utility of itemset S in transaction tq (The transaction-utility of itemset S), denoted as l(S, tq)' is the sum of transaction-utility of item ip contained in S, i.e.,  l(S, tq) = ?)(ip, tq) (3)  When S=tq, we cal1 (Transaction-utility of  it as the utility of transaction tq tq) for short, recorded as  l(tq, tq) = ?)(ip, tq) Apparently, according to the ipE tq  definition, there is the formula (4) as blow:  I(S,tq) ? l(tq,tq) (S ? tq) (4) Definition 4: the utility of itemset S, denoted as u( S) , is the  sum of al1 the transaction-utility of itemset S, i.e.,  u(S) = ?)(S, tq) (5)  Definition 5: the motivation of itemset S, denoted as m( S) , is the product of the support and utility of the itemset, i.e.,  m(S) = s(S) * u(S) (6) If the motivation of an itemset is not smal1er than the threshold  (min-motivation) defined by users, we say that the itemset is a high? motivation itemset. Otherwise, we say this itemset is a low? motivation itemset. Our goal is to find al1 the high-motivation itemsets.

Definition 6: the transaction weighted utilization of itemset S, recorded as twu(S), is the sum of the utility of al1 the transaction that contains itemset S, which is showed as below:  twu(S) = "'L)(tq,tq) (7)  If the transaction weighted utilization of itemset S, i.e., twu(S), is not smal1er than the threshold TWminutil defined by users, then this itemset is a high transaction weighted utilization item set, otherwise this itemset is a low transaction weighted utilization itemset. Apparently, twu(S)::: u(S).

Definition 7: the transaction weighted motivation of itemset S, recorded as twm(S), is the product of the transaction weighted utilization and support of itemset S, i.e.,  twm(S) = twu(S) * s(S) (8) If twm(S) is not smal1er than the threshold (TWminmotivation)  defined by users, then this itemset is a high transaction weighted motivation itemset.



III. RELATED RESEARCH  Yi Dong Shen had proposed a Goal-oriented utility-based association rule mining model (OOA model) [3]. OOA model uses both support and utility to measure the importance of the specific itemset, and can discover the high utility frequent itemset. But the OOA model and related OOApriori algorithm has many differences with ours: (I) OOA model's association rules do not require that the product of support and utility value is greater than or equal to a threshold; (2) in OOA Model, the support threshold min sup should be set to a higher value, otherwise will cause a lot of frequent itemsets. Therefore, OOA model will still lose some patterns with low support but high motivation.

Different from support-based association rule mining and utility-based association rule mining, which use support threshold or utility threshold to narrow search space, motivation-based association rule mining use motivation threshold (minmotivation) to   prune off those unimportant rules. But in tests, we determine the value of min motivation in terms of the value of min sup and minutil.

Since the itemsets which meet both of the min sup and minutil constraint are very rare (as showd in Fig 1, 2), minsup and minutil can set to a relatively smal1 value. Of course, the algorithm can also use the threshold minsup and minutil to filter out itemsets.

Reference [10] proposed to use "general utility" to measure the importance of itemsets. According to the definition, the general utility of itemset S is equal to the weighted-sum of its support and utility, denoted as gu( S) = lis ( S) + (1- A )u( S). "General Utility" does reflect the semantic characteristic and statistical characteristic of itemsets, but the weight value A is rather arbitrary, and its concept is not as intuitive as the motivation. Based on the probability theory and management science, the concept of Motivation is easier to understand.

Reference [6] proposed a utility-based association rules mining algorithm Two-phase. Just as the other utility-based mining algorithms, Two-phase will lose some high-motivation itemsets.

However, the downward closure property of transaction weighted utility brought out by this algorithm gives the foundation of our research.



IV. ALGORITHM  A. Characteristics of Motivation Related research shows that the utility constraint is neither  monotone, anti-monotone, convertible, nor succinct. According to the definition of motivation, the motivation-constraint is neither monotone, anti-monotone, convertible, nor succinct.

Theorem 1 (transaction-weighted utility downward closure property): Assume that Sk is a k-itemset, Sk.! is a (k-I) itemset, and  Sk-l C Sk. If Sk is a high transaction-weighted utility itemset, then Sk.! is also a high transaction-weighted utility itemset.

Proof: Assume that TSk is the col1ection of al1 the  transactions which contain itemset Sk, and TSk-1 is the col1ection of al1 the transactions which contain itemset Sk.!.

Because Sk-l C Sk , then TSk-1 is one of the superset of TSk .

According to Definition 6 (Formula 7), there is:  twU(Sk-l) = "'L)(tq,tq);:::' "'L)(tq,tq)  = twU(Sk);:::. TWminutil Theorem 2 (transaction-wei?hted motivation downward  closure property): Assume that S is a k-Itemset, Sk.! is a (k-I)  itemset, and Sk-l C Sk. If Sk is a high transaction-weighted motivation itemset, then Sk.! is also a high transaction-weighted motivation itemset.

Proof: According to Theorem 1, there is  twU(Sk-l) ;:::. twU(Sk), and because of s(Sk?!):::s(Sk), there is : twU(Sk-l) * S(Sk-l) ;:::. twU(Sk) * s(S) (9)  if twU(Sk) * s(S);:::. TW min motivation , then thers is twU(Sk-l) * S(Sk-l);:::. TW min motivation .

Theorem 3: Assume that HTWM is the col1ection of al1 the high transaction-weighted motivation itemsets in database T, HM is the col1ection of al1 the high motivation itemsets in database T. If    TWminmotivation is equal to minmotivation, then there is HM ? HTWM.

Proof: V S E HM , If S is a high motivation itemset, then there is :  TW min motivation = min motivation::;; s(S) * u(S)  = s(S) * LI(S,tq)::;; s(S) * Ll(tq,tq) tqETs tqETs  = s(S) * twu(S) = twm(S) In this way, through setting TWminmotivation=minmotivation, according to Theorem 3, we can use transaction-weighted motivation downward closure property to cut down the search space.

B. Algorithm Based on the pruning strategy described above, we proposed a  new algorithm which is similar to "Two-Phase", we call it HM? Two-Phase-Miner. HM-Two-Phase-Miner algorithm adopt the down-top searching strategy, repeatedly generates k-itemsets from (k-l)-itemsets, and calculate the motivation of each candidates. The description of algorithm is showed in Table I:  TABLE I. HM-TWO-PRASE-MINER ALGORITHM  Algorithm Name : HM-Two-Phase-Miner Input : Database T, Threshold minmotivation Output : set of high motivation itemsets HM  1.

2. CHTWM = ",. k '1', CHTWM = cjJ ; II CHTWM IS the k  candidate set of high transaction-weighted motivation k?  itemsets, k is the size of itemset; CHTWM is the candidate set of high transaction-weighted motivation itemsets. 1 is the largest size of high transaction-weighted motivation itemsets.

3. HM = cjJ; II set of high motivation itemsets 4. k =l;  CHTWM 5. Scan Database To get 1 ; 6. While (I C:TWM I > 0) 7. { 8. k=k+l;  CHTWM CHTWM 9. k =Generate( k-l );  10. CHTWM = C:TWM U CHTWM;  CHTWM ? CHTWM II. k =CalculateAndDlscoverHTWM( k ' T,  TWminmotivation); 12. }  13. HM=HM U CalculateAndDiscoverHM( CHTWM T, minmotivation);  14. Return HM; 15. }  The first step to the 4th steps of the HM-Two-Phase-Miner algorithm is initialization. The 5th step scanning the database to get the high transaction-weighted motivation itemsets' candidate set  C?TWM . The 7th step to 12th step repeatedly scan the database to generate the candidate sets with different length. Among the process, in the 9th step, the function Generate 0 generates the   candidate set of high transaction-weighted motivation k-itemsets by  the concatenation operation of the (k-l)-itemsets in C!:-r:vM . The  10th step add all of candidate sets with different size into CHTWM .

In the 11 th step, the function CalculateAndDiscoverHTWM 0 calculates the motivation of each candidate and discover the high  . . h d . .  k . . CHTWM " . transactIon-welg te motIvatIOn -Itemsets m k ' lormmg  the candidates which will be used to generate C:?WM in the next  steps. The C:TWM generated in 9th step includes all the high motivation k-itemsets, and may also include those k-itemsets with lower transaction-weighted motivation. In order to cut down the search space, we should get rid of those k-itemsets with lower transaction-weighted motivation as soon as possible. So when we  get the CHTWM , we scan the database again in 13th step to  calculate the real motivation of the itemsets in CHTWM .

The structure of HM-Two-Phase-Miner and Two-Phase is  similar with Apriori, but the differences are: (1) different pruning strategy. Apriori use the downward closure property of frequent itemsets to cut down search space, while Two-Phase use the transaction-weighted utility downward closure property, and HM? Two-Phase-Miner use transaction-weighted motivation downward closure property to achieve the same goal; (2) During the process of generating the candidate-set of k-itemsets, Apriori generate Ck from only large (k-l)-itemsets (Lk_l) (by concatenation operation), while HM-Two-Phase-Miner and Two-Phase generate a set of k-itemsets from (k-l)-itemsets which must be in a candidate-set, which means, to use older candidate-set to generate new candidate-set; (3) Compare to Apriori, HM-Two-Phase-Miner and Two-Phase need to scan the database once more to calculate the real motivation of each candidate, which will increase the computational complexity. But the experiments show that, due to the effective pruning strategy, the performance of the algorithm is good.



V. EXPERIMENT AND RESULT ANALYSIS  The Experiment is running on the Lang Chao XEON server, CPU's frequency is 2AG, Memory is 4G, running Windows 2003, the programs is written in Delphi 7. The experimental dataset is TlO.I6.DlOOOK and T20.I6.DlOOOK, the number of items is IK, produced by IBM Synthetic Data Generator [Ill. The dataset only consists of 0 and I, respectively representing whether the item appeared in the transaction, without utility value. Therefore, in the experiment, we use delphi's random function "RandG" to generate the random value (Gaussian distribution) to simulate the unit utility of each item in the transaction, and use the mod I 00 operation of the transaction's number (TID MOD 100) to simulate the sales amount. Thus, the utility of an item in a transaction is equivalent to the product of the sale amount and the unit utility of the item.

In the experiment, for ease of understanding the meaning and origin of the motivation threshold, we assume that minutil is equal to minsup. For example, minmotivation=0.0025 means minutil=minsup=0.05. In fact, the item sets satisfying the requirement that both support and utility are greater than 0.05 are relatively seldom. So 0.0025 is a big threshold to minmotivation, and this is a great difference with the range of support and utility threshold. Figure 1 show the influence which the changes of transactions do to the algorithm performance. Because HM -Two? Phase-Miner needs to scan database multiple times, and may increase the number of candidates, when the number of transactions increase, HM-Two-Phase-Miner algorithm needs to run longer. In figure 2, minmotivation changes from 0.000004 to 0.0025. The    larger the minmotivation, the less the itemsets satisfying the  rninrnotivation=O.000025  ? 5000 ,------------......, .:;;. 4000 f------  ?  .? 3000 t------7'".c::.------i '-+--- T2-0 -. 1?6 i:' 2000 -+-'1'10. 16 ? 1000 t-p---====------- E  O. 1 0.2 0 .4 0.6 0.8 transaction number (rn i II i on)  Figure I : The influence of the change of transaction number on algorithm's performance

VI. CONCLUSION  This paper analyzes the deficiencies of support and utility in measuring the importance of itemsets, and proposes a new interest measurement: Motivation. Motivation integrates the advantages of support and utility, and thus can reflect both the semantic significance and statistical significance of an itemset, which meet th? people's decision-making habits. This paper also proves the eXIstence of transaction-weighted motivation downward closure property, and uses this property in the new HM-Two-Phase-Miner algorithm to narrow search space. Experiments on synthetic data show that the HM-Two-Phase-Miner algorithm can get a good performance with the short-pattern datasets.

Reference [I] Rules [C]. In: Proc of 1994 Int'I Conf of Very Large Data Base.

Santiago, Chili: VLDB Endowment, 1994,487-499.

[2] Lu S.F., Hu H.P. and Li F. Mining weighted association rules [J].

Intelligent Data Analysis, 2001, 5: 211-225  [3] Shen Y. D., Zhang Z. and Yang Q. Objective-oriented utility-based association mining [C]. Proceedings of the 2002 IEEE International Conference on Data Mining, 2002, 426-433   threshold, the shorter the mnning time.

-;;; 7000 t---,' ------  - ---i  ';;; 6000 f---?---------1 '3 5000 ?====::"''\.-,-''''._=:_-------i- 1'-+-- -T2-0 -. -16 -. D-I -OO-O? K  M 4000 I ..... .....

.= 3000 ..... ? -+- T1 0.16.DI000K ? 2000 t-------==""--?-=-?:---I i: 1000 ?  o 0.04 0.25 25  mol i val ion lhreshold (one oul of" len lhousand )  Figure 2 :  The influence of the change of motivation on algorithm's performance  [4] Roberto J. Bayardo, Jr , Rakesh Agrawal and Dimitrios Gunopulos, C?nstramt-Based Rule Mining in Large, Dense Databases [R], Data Mmmg and Knowledge Discovery, 2000, 4(2-3): 217-240  [5] Yao H. and Hamilton H.J. Mining itemset utilities from transaction databases [J]. Data & Knowledge Engineering, 2006, 59: 603 -626  [6] Liu Y., Liao W.K. and Choudhary. A fast high utility itemsets mining algonthm [C]. Proceedings of the First International Workshop on Utiliy-based Data Mining, 2005: 90-99  [7] Guangzhu Yu, Shihuang Shao, Bin Luo and Xianhui Zeng, A Hybrid Method for High-utility Itemsets Mining in Large High-dimensional Data, International Journal of Data Warehousing and Mining, 2009, 5(1): 57-73.

[8] Lqiang Geng and Howard 1. Hamilton, Interestingness Measures for Data Mining: A Survey [J]. ACM Computing Surveys (CSUR), 2006, 38 (3): 61-93  [9] V. H. Vroom. Work and Motivation [M]. John Wiley, 1964  [10] Jing .

Wang, Ying Liu, Lin Zhou, Yong Shi and Xingquan Zhu,  Pushmg Frequency Constraint to Utility Mining Model [C], Lecture on computational science (ICCS), 2007, 685-692  [II] 2010/4120.

