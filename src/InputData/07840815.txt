

Abstract? Based on the concept of isomorphism of relations, a relation is turned into a simplicial complex, which is a combinatorial representation of a polyhedron. So frequent itemsets mining is transform turned into geometric traversal problem.  By leveraging on geometric structure of simplicial complex, a very fast algorithm for traversal is found; it is based on a geometric concept, called sub-cone construction. It is not only very fast but also use much less memory than existing methods. For a real world medical database of 1257 columns with 65K rows, the new algorithm takes only 5 seconds to find all frequent itemsets, while FP-growth takes approximately 1000 seconds; so simplicial complex method is about 200 times faster.

Moreover the memory usage is substantially less; see the data.

Keywords? geometry, frequent itemset, frequent- pattern growth, simplicial complex

I. INTRODUCTION Frequent itemsets mining is a well-known technique to find  correlation relationships among vast amount of data. Over last two decades Apriori and Frequent Pattern Growth (FP-growth) are two most popular methods. In this paper, we will introduce a new method called a simplicial complex method.

A. An Outline of Key Points The fundamental concept, stated in Theorem 1, implies that to mine patterns from a given relation A, one may find the same patterns by mining another isomorphic relation A?.  The main point of this paper is to use geometric concept to mine isomorphic geometric relation. Such a frequent itemset mining is turned into a geometric traversal of the simplicial complex.

The key idea in this traversal is the sub-cone construction.

B. Experiment Results In the experiments, we use three sets of data,  (1) the first set is provided to us by Jian Pei group, one of the author of FP-growth method.

(2) The second set of data is a real world data that is provided by National Taiwan University Hospital. This database consists of total of 65,536 transactions and 1257 columns in bit form.

(3) The third test is a ?theoretical data?; we setup a stress testing scheme that allows us to gauge into the kind of improvements that we have made.  Using the program of FP-growth, it takes 44.7 hours to search frequent itemsets of length 28, while using the program of simplicial complex method, it takes 5.25 minutes. For 32 columns and 30-dimensional data simplicial complex method, it takes 16.615 minutes; for FP- method; it would be too long, we skip the test.

Frequent Pattern (FP) Growth Method:  ? It represents a relation by a tree; ? A tuple is a linear branch from root to leaf.

Dataset Time Memory Notes 5k rows 1.38  sec 8 MB 4 dimensions, 0.097  threshold, 77 columns 65k rows  14.6 min  100 MB 4 dimensions, 0.042 threshold, 1257 columns  2 rows 44.7 hour  30 MB 28 dimensions, no threshold, 30 columns   Simplicial Complex:  1. It represents a relation by a simplicial complex (a polyhedron).

2. A tuple represented by a closed simplex.

Dataset Time Memory Notes 5k rows 0.01  sec 2.3 MB 4 dimensions, 0.097  threshold, 77 columns 65k rows  3.18 sec  35.2 MB 4 dimensions, 0.042 threshold, 1257 columns  2 rows 5.25 min  0.8 MB 28 dimensions, no threshold, 30 columns  2row 16.615 min  2.26 MB 30 dimensions, no threshold, 32 columns  II SIMPLIAL COMPLEXES Let us consider the following unit points in a very high dimensional Euclidean space, E:  v0= (1, 0, 0?), v1= (0, 1, 0, ?), ?? (0?0, 1, 0, ?0) .

An open 0-simplex ?(vi) consists of a vertex vi,  the unit point of the i-th coordinate, i=0, 1, 2 , . . . If E is an X- Y plane, ?(v0) is the point (1, 0) and ?(v1) is (0, 1).

2)  An open 1-simplex ?(vi, vj) consists of two unit points vi; vj of the i-th and j-th coordinates, where i, j =0, 1, 2, . ..

Each ?(v0, v1) is an open segment that connects two unit points, but does not include its two end points.  In X-Y plane, ?(v0, v1) is the open segment connecting  the unit point (1, 0) of X-coordinate and the unit point (0, 1) of Y- coordinate; it does not contains the two end points.

3)  An open 2-simplex ?(vi, vj, vk) consists of three unit points vi, vj, vk, where  i, j, k= =0, 1, 2 , . . .  In X-Y-Z space, ?(v0, v1, v2) can be interpreted as the an open triangle that     connects three unit points, but does not include its edges and vertices.

4)  An open 3-simplex ?(vi, vj, vk, vl) consists of four unit points vi, vj, vk, vl, where i, j, k, l =0, 1, 2 , . . . In X-T-Z-T space, ?(v0, v1, v2, v3)  can be interpreted as an open tetrahedron that connects 4 units points, but does not include its boundaries, namely, 4 open triangles, 6 open segments, 4 vertices.

Definition 1: An open n-simplex, ?(vj0?, vjn), is a set of units points.  A q-subset of a n-simplex is a q-simplex ?(vj0?, vjq) whose vertices are a subset of vj0?, vjn with cardinality q + 1.

Such a q-simplex is called a q-face of ?(vj0?, vjn).

Next is the most important concept in this paper. This is a slight modification of the concept in ([S], pp. 108).

Definition 2: A simplicial complex (V, S) consists of a set V={v} of vertices and a bag S={s} of finite nonempty subsets called (open) simplexes such that   1. Any set consisting of one vertex is a simplex.

2. Closed condition: Any nonempty subset of a (open)  simplex is a (open) simplex.

Remark: A more accurate name is a bag simplicial complex.

It follows from condition 1 that 0-simlex of (V, S) corresponding bijective to the vertices of (V, S). It follows from condition 2 that any simplex is determined by its 0-simplexes. Therefore (V, S) is equal to the set of its simplexes and we shall identify a vertex with 0-simplex.

Definition 3: A closed n-simplex is a simplicial complex that consists of a unique open n-simplex and all its faces.



III. FUNDEMENTAL THEOREMS  INFROMAL EXPOSITOIN   In this section, we will explain the main ideas of this paper.   Let us quote from [L] a fundamental theorem about relational tables, which are formally bag relation instances [G].

Theorem 1: Isomorphic relations have isomorphic frequent itemsets.

Instead of  a formal proof, we will use an example to illustrate the idea: This example consists of two tables, a Market Basket table (M-table) and an  isomorphic geometric table (G-table); both tables are interpretations of the abstract table, Table 1.  The identity map of Table I can be interpreted as an isomorphism from M-table to G-table. Here is the abstract table:     0 1 2 3 4 5 6 A B C D E F G  T1 1 1 1 1 T2 1 1 1 1 T3 1 1    1 1 T4 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?  Table I  Table I may allow repeated rows, so they are bag relations [S].

The leftmost column is the set of ?real world objects?, each of which is represented by T1. T2, ?   Next are the two interpretations: (1) M-table: each column of Table I represents an Item in a store.

First row represents the items purchased by the first customer. Second row the second customer, etc. So columns are merchandise, namely. A, B, C, D, etc., are Bread, Beer, Milk, etc.

(2)  G-Table: each column represents the unit point, called a vertex, of a coordinate in a high dimensional Euclidean space.  Observe that A is the unit point of first coordinate, B is the second, and etc. So the first tuple T1 represents 4 unit points, A, B, C, D that forms the first tetrahedron, ?ABCD; the second tuple T2, the second tetrahedron, ?EBCD;  T3, the third tetrahedron ?GABF. Their ?union? is a simplicial complex in Figure 1.

Figure 1   Here is an intuitive explanation of Figure 1: geometrically, T1 is a tetrahedron (pyramid) determined by A, B, C, D where we can visualize BCD as a triangle on the ground and A as a vertex above the ground in the sky.  T2 is a similar tetrahedron whose base is the same triangle BCD lying on the ground, and E is a vertex deeply under the ground. These two tetrahedrons are glued together along the triangle BCD. T3 is another tetrahedron stands on the ground in which the vertex G is in the sky and shares the edge AB with T1.  The ?union? is a simplicial complex, which is displayed in Fig 1.  So we may conclude 1) T1, T2, and T3 determine 3 tetrahedra 2) The ?union? of T1, T2, and T3 is a polyhedron.

In terms of simplicial complexes (next section), tetrahedron is a close simplex and a polyhedron is a simplicial complex.

So we conclude the next three theorems  Theorem 2: For every bag relation there is an isomorphic geometric bag relation.

Theorem 3: For every geometric bag relation H there is a bag simplicial complex (VH, SH) such that every sub-tuple (frequent itemset without threshold) corresponds to an open simplex and every tuple corresponds to a closed simplex,  Theorem 4: The collection of frequent itemsets (above a threshold) determines a bag simplicial sub-complex (Vf, Sf) of the simplicial complex (VH, SH) (above the same threshold) of the relation H.

To see the idea intuitively, let us examine Fig 1, we can see the simplicial sub-complex (Vf, Sf) of frequent items (threshold =2) has following open simplexes: (1)The open simplex ?(B, C, D), which is an open triangle that  is shared by T1 and T2, together with all its faces.

(2) The open simplex ?(A, B), which is an open segment is shared by T1 and T3, together with all its faces.

(their frequencies are 2, 2).

The geometrical ?union? is the sub-complex (Vf, Sf), where Vf = {A, B, D, E, F, G}, and Sf has been specified above.

IV TRAVESAL ALGORITHM Now, we will describe how Frequent Itemsets can be mined by geometrical traversal.  The main idea is a minor modification of cone constructions in algebraic topology.  Roughly, it builds a new object by adding one vertex on the ?sky? of what has already been constructed; we can construct a tetrahedron by adjunct a point on the sky over a triangle lying on the ground.

Definition 4: a)  The cone construction. Let (V; S) be a given simplicial sub- complex. Let n be a new point not in V. A new bag simplicial complex, denoted by n (V; S) and called the cone on (V; S) with a new vertex n, is the pair (nV; nS), where nV; consists of all the original vertices and new vertex n, and nS consists of all original simplexes and new simplexes ?(n; original vertices).

b)  The sub-cone construction. Roughly, it is constructed by the cone construction but with one additional constraint that is all new simplexes have to be a cone with a base being an existing simplexe in S. Let (VW; SW) be a given simplicial sub- complex of (V; S). Let n be a point in V but not in VW. Then a new bag simplicial sub-complex of (V; S), denoted by (VW; SW) called the sub-cone in (V; S) with a new vertex n, is the pair (nVW; nSW), where nVW; consists of all the original vertices and new vertex n, and nSW consists of all original simplexes and new simplexes ?(n; original vertices) ? S.

0 1 2 3 A B C D  S1  1 1 1 0 S2  0 1 1 1 S3  1 0 1 1 S4  1 1 0 1  Table II   Example 1: Let (S, V) be the simplicial complex of hollow tetrahedron whose geometric relation is Table II. The four triangles are: S1 is an open triangle ? (A, B, C) determined by three points A, B, C (the columns that have values 1 in the first tuple; S2 is ?(B, C, D); S3 is ?(A, C, D); S4 is ?(A, B, D).

Here are the detail steps of sub-cone constructions. By it we have traverse the hollow tetrahedron.

1) Let (VW; SW) be empty simplicial complex, and let the new vertex n be D, then (DVW; DSW) is ({?D}, {?D 3}), where the number indicates the repetition; for the repetition=1; we skip the display. For example we use {?D} to mean {?D1}.

2) Let (VW; SW) be (DVW; DSW), and the new vertex n be C, then (CDVW; CDSW) is ({?D, ?C}, {?D3, ?C 3, ?(D, C) 2}).

3) Let (VW; SW) be (CDVW; CDSW), and n be B, then (BCDVW; BCDSW) is ({?D, ?C, ?B}, {?D 3, ?C 3, ?B 3, ?(D, C) 3, ?(D, B)2, ?(C, B)2, ?(D, C, B)})  4) Let (VW; SW) be (BCDVW; BCDSW), and n be A, then (ABCDVW; ABCDSW) is:  4.1) If the construction just described were a CONE construction, the answer would be ({?D, ?C, ?B, ?A}, {?D, ?C, ?B, ?A, ?(D, C), ?(D, B), ?(C, B), ?(D, C, B), ?(D, A),  ?(C, A), ?(B, A), ?(D, C, A), ?(D, B, A), ?(C, B, A), ?(D, C, B, A)}).

4.2) Since what we need is sub-cone construction, we strike out the simplexes that are not in (V, S), so we have (ABCDVW; ABCDSW) = ({?D, ?C, ?B, ?A},{?D3, ?C3, ?B 3, ?A 3, ?(D, A)2, ?(D, B) 2, ?(C, B) 2, ?(D, C, B) 1, ?(D, A) 2,  ?(C, A) 2, ?(B, A) 2, ?(D, C, A) 1, ?(D, B, A) 1, ?(C, B, A) 1, ?(D, C, B, A)}).

The second component is the geometric traversal.

Example 2: Let (S, V) be the simplicial complex of hollow tetrahedron with missing one open 2-simplex, whose geometric relation is Table III  0 1 2 3 A B C D  S1 1 1 1 0 S2 0 1 1 1 S3 1 0 1 1  S4-1 1 1 0 0 S4-2 1 0 0 1 S4-3 0 1 0 1  Table III  Let us select a point that has the highest repetition count. In this case, let us start with an empty set V;  1) choose a vertex B and form a cone V1=BV=(?B, 4) where the second component is the frequency     2) choose A and form a cone V2=(?A 4, ?B4, ?(A,B), 2); the count is based on the  frequency count of Table III 3) Choose C and form a cone V3=CV2=(?A 4, ?B 4, ?(A,B) 2, ?C, ?(A, C) 2, ?(B, C) 2, ?(A,B, C), 1) 4) Choose D from a cone V4=DV3= (?A 4, ?B 4, ?(A,B) 2, ?C 3, ?(A, C) 2, ?(B, C) 2, ?(A,B, C), 1) (?D, ?(A, D) 2, ?(B, D) 2,  ?(A, C, D) 1, ?(B, C, D) 1)  The basic idea in traversal is very simple, it merely applies the sub-cone construction repeatedly.



V. CONCLUSIONS From the experiments, it is clear simplicial complex method  is faster than FP-growth method; its memory usage is more efficient.  The stress test tells us that we can handle frequent itemsets of length 30 in reasonable time; no existing method can do that. This method has a great potential in big data analysis.

The key difference is on the respective representation; the FP- growth method represents each tuple by a linear sequence of branches from root to leaf; such a representation implicitly regard the tuple as an ORDERED sequence.  Hence FP-growth method has to deal with such an order. While simplicial complex method represents a tuple by closed simplex, there is no order in this representation. For example, FP-Growth has to scan the input dataset more than once; it scans data during                                     constructing of conditional FP-Tree, which is a recursive procedure; this probably is, we believe, one of the major causes.  Another point is that once a bag relation is given, its bag simplicial complex of the relation and its bag simplicial sub-complex of frequent itemsets are there, so the association rule mining algorithm does not need to ?construct the FP- tree?; it just simply goes directly to traversal the sub-complex of frequent itemsets.

