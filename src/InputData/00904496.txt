Web Mining and its SQL based Parallel Execution

Abstract  Web mining can be classified into two categories, Web access log mining and Web structure mining. W e performed association rule mining and sequence pattern mining against the access log which was accumulated at NTT  Software Mobile Info Search portal site. Detail web log mining process and the rules we derived are re- ported in this paper. The parallel association rule min- ing is  explored on  large scale P C  cluster system. Paral- lelism is key to improve the performance. W e  achieved substantial speed u p  through parallel SQL execution.

1. Introduction  The internet, particularly the web has emerged as largest information pool available in the world. How- ever, most of internet users still do not enjoy the ben- efits since the wealth of information in the web are largely unstructured and unindexed.

Recent studies also show that the growth of web space is so dramatic by any measures. The number of indexable home pages is approximated to reach 800 million pages by July 1999, and it keeps growing[l2].

The same study in January 1998 only recorded 320 million pages.

Therefore the research to  provide web users bet- ter information quality while stay scaled well with the growth of the web is one of the today hottest top- ics. The goal is to provide personalized information retrieval mechanism that match the need of each in- dividual user. ?One to  one marketing? on the web also has similar objectives. The development of the web personalization technologies will certainly benefit e-commerce too. Most researchers agree that the goal can be accomplished by extracting the characteristics of the web and web users behavior. The process in general is called web mining. Thus web mining is the extraction of interesting and potentially useful patterns  and implicit information from artifacts or activity re- lated to web.

Web mining can be divided into two categories :  1. Web usage mining  Customization involves learning about an indi- vidual user?s preference/interests based on access patterns. The access patterns can be obtained by mining the access log of a web site. Thus, customization aids in providing users with pages, sites, and advertisements that are of interest to them. It may also be possible for sites t o  auto- matically optimize their design and organization based on observed user patterns.

2. Web structure mining  Some approaches has been conducted to mine web structure. Most of them take into account hyper- link information and apply some techniques from graph theory. Interesting concepts such as hubs and authority are invented[ll]. Hyperlinks infor- mation has been also used to rank search results[6].

Here we report some of the web mining techniques based on association rule that can be accomplished by some modified SQL queries on relational database. The integration of web with database techniques has drawn attention from researchers. Some have proposed query languages for the web that is similar with SQL such as Squel[9] and WebSQL[5]. They emphasize better organization of web data managed in relation database way. We extend this concept for real applications of web mining. We also address the performance problem by performing in parallel the execution of SQL queries on high cost performance PC cluster.

Nowadays, even most of commercial RDBMS are already equipped with parallel processing ability. In near future, we can expect it will become a standard for RDBMS. Although currently available massive par- allel hardware are expensive, the development of PC  0-7695-0960-6/01 $10.00 0 2001 IEEE    cluster using commodity PCs will make parallel pro- cessing with RDBMS affordable choice for web mining application.

In this paper, we focused on the mining access log using association rule discovery techniques. We show some mining results from web log of Mobile Info Search(M1S) , a location-aware search engine. Usage mining of this unique site could give some interesting insights into the behavior of mobile device users.

Although the amount of log at MIS is not so large, generally at  large portal site it tends to be very large.

The log can reach several tens of GB per day. Just one day log is not enough for mining. If we are going to use several weeks log, then we have to handle more than one terabyte of data. Single PC server cannot process such huge amount of data with reasonable amount of time.

2. Web Usage Mining for Portal Site  2.1. Web Access Log Mining  Access log of a web site records every user requests sent to the web server. From the access log we can know which pages were visited by the user, what kind of CGI request he submitted, when was the access and it also tells to some extent where the user come from.

Using those information, we can modify the web site to satisfy the need of users better by providing better site map, change layout of the pages and the placement of links etc. [13] has proposed the concept of adap- tive web site that dynamically optimize the structure of web pages based on the users access pattern. Some data mining techniques has been applied on web logs to predict future user behavior and to derive marketing intelligence[l7][7] [SI. Currently many e-commerce ap- plications also provides limited personalization based on access log analysis. Some pioneers such as Ama- zon.com have achieved considerable success.

Here we will show the mining process of real web site. We have collaborated with NTT Software to ana- lyze the usage of a unique search engine called Mobile Info Search.

2.2. Mobile Info Search(M1S)  Mobile Info Search (MIS) is a research project con- ducted by NTT Software Laboratory whose goal to provide location aware information from the internet by collecting, structuring, organizing, and filtering in a practicable form[l4]. MIS employs a mediator archi- tecture. Between users and information sources, MIS mediates database-type resources such as online maps,  F i g u r e 1 . A s n a p s h o t o f M o b i l e  I n f o s e a r c h a t http://www.kokono.net  internet "yellow-pages" etc. using Locataon- Oriented Meta Search and static files using Location Oriented Robot-based Search. Users input their location using address, nearest station, latitude-longitude or postal number. If the user has a Personal Handy Phone(PHS) or Geo Positioning System(GPS) unit, the user loca- tion is automatically obtained.

The site is available to the public since 1997.

Its URL is http://www.kokono.net. In average 500 searches are performed on the site daily. A snapshot of this site is shown in Figure 1  MIS has two main functionalities :  1. Location Oriented Meta Search Many local information on the web are database- type, that is the information is stored in backbone database. In contrast to static pages, they are accessed through CGI program of WWW server.

MIS provides a simple interface for local informa- tion services which have various search interfaces.

It converts the location information and picks the suitable wrapper for the requested service. Exam- ple of database-type resources provided are shown in table 1.

2. Location-Oriented Robot-Based Search "kokono   http://www.kokono.net http://www.kokono.net   Service Maps Yellow Pages Train Time Tables Weather Reports Hotel Guides I nearest station &shop-cond=blank&submit-map= Mapbnap-web=townpage  &rail-web=s-tranavi&station-web=ekimae&tv-web=tvguide HTTP/1.1" 200 1389 "http://www.kokono.net/mis2/mis2-header  . Database-type resources On the In- ?date=1999/01/01.00:27:59&address=Yamanashi-ken,Koufu-shi, t e r n e t  Oosato-machi&NL=35.37.4.289&EL=138.33.45.315  &station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei &zip=400-0053&from=address&keyword=& shop-web=townpage &shop-cond=blankbnap-web=townpage&station-web=&tv-web=tvguid "Mozilla/4.O (compatible; MSIE 4.01; Windows 98)!I "LastPoint=NL=35.37.4.289&EL=138.33.45.315 Search"  Location information used for the search 0000000003 - - [01/ ~~/1999:00:30:46 09001 longitude-latitude "GET /index.cgi?sel~st=O&NL=35.37.4.289&EL=138.33.45.315 address ( and categories ... etc) station &station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei address or region &zip=400-0053&from=address&shop~web=townpage&keyword=  &address=Yamanashi-ken,Koufu-shi,Oosato-machi  kokono Search provides the spatial search that searches the document close to a location.

"kokono" is a Japanese word means here. kokono Search also employs "robot" to collects static doc- uments from internet. While other search engines provide a keyword-based search, kokono Search do a location-based spatial search. It displays doc- uments in the order of the distance between the location written in the document and the user's location.

3. Mining MIS Access Log and its De- rived Rules  3.1. Preprocessing  We analyzed the users' searches from the access log recorded on the server between January and May 1999.

There are 1035532 accesses on the log, but the log also consists image retrieval, searches without cookie and pages that do not have relation with search. Those logs were removed. Finally we had 25731 search logs to be mined.

0 Access Log Format Each search log consists CGI parameters such as location information (address, station, z ip ) , location acquisition method ( f r o m ) ,  resource type (submit), the name of resource (shopweb, map-web, rail-web, station-web, tu-web), the con- dition of search (keyword, shop-cond). We treat those parameters the same way as items in trans- action data of retail sales. In addition, we gen- erate some items explaining the time of access (access-week, access-hour) .

Example of a search log is shown in Figure 2.

0 Taxonomy of Location Since names of places follow some kind of hier- archy, such as "city is a part of prefecture" or  &address=Yamanashi-ken,Koufu-shi,Oosato-machi &station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei &zip=400-0053; LastSelect=shop-web=townpage&shop-cond=blank &keyword=&map-web=townpage&rail-web=s-tranavi &station-web=ekimae&tv-web=tvguide; Apache=l; MIS=I" ' I - ' '  Figure 2 .  Example of  anaccess log  "a town is a part of a city", we introduce tax- onomy between them. We do this by adding items on part of CGI parameter address. For example, if we have an entry in CGI param- eters entry [address=Yamanashi-ken, Koufu-shi, 00-satomachi], we can add 2 items as ancestors : [address= Yamanashi-ken, Koufu-shi] at city level and [address=Yamanashi-ken] at prefecture level.

In Japanese, "ken" means prefecture and "shi" means city.

0 Transformation to Transaction Table Finally we have the access log is transformed into transaction table ready for association rule min- ing. Part of transaction table that corresponds to log entry in Figure 2 is shown in Table 2  3.2. Association Rule Mining  [l] first suggested the problem of finding association rule from large database. An example of association rule mining is finding "if a customer buys A and B then 90% of them buy also C" in transaction databases of large retail organizations. This 90% value is called confidence of the rule. Another important parameter is support of an itemset, such as {A,B,C}, which is defined as the percentage of the itemset contained in the entire transactions. For above example, confidence can also be measured as support({A,B,C}) divided by  We show some results in Table 3 and 4. Beside com- mon parameters such as confidence and support, we also  SUPPort({A,B)).

http://www.kokono.net/mis2/mis2-header    In Table 4, first three results show some correla- tion between the time of searching and the conditions used for searching. The last three results show how the method used by users to specify the location affects the  what the search conditions a user might choose.

Relation LOG  address=Yamanashi-ken ,Koufu-shi,Oosato-machi  address=Yamanashi-ken, station=Kokubo:  Kaisumiy0shi:Minami-koufu: Jouei  search conditions. w e  can use this knowledge to infer  zip=400-0053 from=address  submitmap=Map map-web=townpage  1 Not so many good restaurants in Akihabara ?

[keyword=][address=Tokyo,] [station=Akihabara] + [shop-cond=restaurant]  J  I In Hokkaido, people looks for gasoline stand a t  night 1 I from its address ~ Table 2 . Represen ta t ion  of access log i n  r e l a -  [access_hour=20][address=Hokkaido,][from=address]  I [shop-web=townpage] j [shop-cond=gasoline] I People from Gifu-ken quite often searches t i o n a l d a t a b a s e  use user that indicate the percentage of users logs that contain the rule, i.e. number of users contain the rule divided by total number of users. An user can have some sessions if the user accesses the web site several times and each session usually consists of several trans- act ions.

When we set minimum support to 0.05 %, we got more than 1 million rules. We used following heuristics to  extract interesting rules :  1. Put higher minimum confidence restriction to rules with low support.

2 .  Remove item with small contribution to confidence of the rule.

If an item is removed from a rule and its confi- dence is only degraded a little, the item has little importance to the rule.

Those rules can be used to improve the value of web site. We can identify from the rules some access pat- terns of users that access this web site. For example, from the first rule in Table 3 we know that though Ak- ihabara is a well known place in Tokyo for electronic appliances/parts shopping, user that searches around Akihabara station will probably looks for restaurant.

From this unexpected result, we can prefetch informa- tion of restaurant around Akihabara station to reduce access time, we can also provide links to this kind of user to make his navigation easier or offer proper adver- tisement banner. In addition, learning users behavior provides hint for business chance for example the first rule tell us the shortcoming of restaurants in Akihabara area.

Other results in Table 3 show some specific be- haviour of people at a certain area in Japan who use this site.

1 for restaurants [address=Gifu-ken,] [shop-web=townpage] + [shop-cond=restaurant]  [ However people from Gifu-ken search for I hotels on Saturdav I [access-week=Satl[address=Gifu-ken,]  I  [shop-web=townpage] + [shop-cond=hotel] People from Gifu-ken must search for hotel around stations 1 [address=Gifu-ken,] [shop-web=townpage] [station=Kouyama] + [shop-cond=hotel]~  Table 3 .  Some r e s u l t s  ofMIS l o g m i n i n g w i t h r e g a r d t o  s e a r c h c o n d i t i o n  r Most frequentsearches for restaurants around I I 16:OO if they start from address on Friday [access-week=Fri] [from=address] [shop-cond=rest aurant 1 + [accesshour=16] r Most frequent searches for department store 1 I stand at 2 O : O O  if start from address.

[from=address] [shop-cond=department]  laccesshour=201 ~ 1 Looking for gasoline stand on Sunday ?

[from=address] [shop-cond=gasoline] [shop-web=townpage]  I Search for hotels often from station I if at Kanagawa-ken I [address=Kanagawa-ken,] [shop-cond=hotel] + [from=station]  I People at Osaka start searching convenience 1 stores from ZIP number ! 1 1 People at Hokkaido always search convenience stores from address [address=Hokkaido,] [shop-cond=conveni] [shop-web=townpage] + [from=address]  Table 4 .  Some r e s u l t s  of M I S  log mining with r ega rd  t o  t i m e  and l o c a t i o n  a c q u i s i t i o n method     3.3. Sequential Rule Mining 4.1. Association Rule Mining Based on SQL  The problem of mining sequential patterns in a large database of customer transactions was introduced in [3]. The transactions are ordered by the transaction time. A sequential pattern is an ordered list (sequence) of itemsets such as ?5% of customers who buy both A and B also buy C in the next transaction?.

We show some sequential patterns that might be interesting in Table 5. When we set support to 0.1 % we obtained 55000 sequence patterns. Here support is the percentage of user sessions containing the pattern.

Some patterns indicate the behavior of users that might be planning to do shopping. We can derive from second pattern that significant part of users check the weather forecast first, then they look for the shops in the yellow-pages service called ?Townpage? then look again for additional information in the vicinity with lcolcono Search and finally they confirm the exact loca- tion in the map.

After finding a shop, check how to go there and the weather [submit shop=Shop Info] + [submit rail=Search Train] --t [submitnewspaper=Newspaper]  [submit-weather=Weather Forecast1 I Or decide the plan after checking the weather first  [submit-weather=Weather Forecast] --t [submitshop=Shop Info] [shop-web=townpage] --t [submit_kokono=Kokono Search] 5 IsubmitmaD=MaDI  I Looking for shoDs after closing time I [submitshop=Shop Info] [accesshour=22] [access-week=Fri] 3 [submitmap=Map] [accesshour=22] [access-week=Fri]  A common strategy to  mine association rule is: 1. Find all itemsets that have transaction support  above minimum support, usually called large item- sets.

2. Generate the desired rules using large itemsets.

Since the first step consumes most of processing time, development of mining algorithm has been concen- trated on this step.

In our experiment we employed ordinary standard SQL query that is similar to  SETM algorithm[lO]. It is shown in Figure 3.

Transaction data is normalized into the first normal form (transaction ID, item) . In the first pass we simply gather the count of each item. Items that satisfy the minimum support inserted into large itemsets table C-1 that takes form(item, item count). Then transaction data that match large itemsets stored in R-1.

In other passes for example pass k, we first gen- erate all lexicographically ordered candidate itemsets of length k into table RTMPk by joining k-1 length transaction data. Then we generate the count for those itemsets that meet minimum support and include them into large itemset table C k .  Finally transaction data R k  of length k generated by matching items in candi- date itemset table RTMPk with items in large item- sets.

Original SETM algorithm assumes execution using sort-merge join. Inside database server on our system, relational joins are executed using hash joins and tables  Table 5 .  Some r e s u l t s  of s e q u e n t i a l  p a t t e r n a r e  partitioned over nodes by hashing. As the result, mining  4. Mining Web Log using RDBMS  The ability to perform web mining using standard SQL queries is a next challenge for better integration of web and RDBMS. The integration is essential since better management of web data has become a necessity for large sites.

The performance issue was a major problem for data mining with RDBMS. Parallel execution of SQL can boost the execution of data mining queries. How- ever the problems with this approach are the cost of the hardware and also the degradation of performance when more processing nodes are used. Our PC cluster has shown high cost performance ratio and good speed- up ratio for some decision making applications[l5]. We will show that parallel platforms such as PC cluster could also handle the task of web mining with suffi- cient performance.

parallelization efficiency is much improved. This ap- proach is very effective for large scale data mining.

4.2. Parallel Execution Environment and Perfor- mance Evaluation  The experiment is conducted on a PC cluster de- veloped at Institute of Industrial Science, The Uni- versity of Tokyo. This pilot system consists of one hundred commodity PCs connected by ATM network named NEDO-100. We have also developed DBKernel database server for query processing on this system.

Each PC has Intel Pentium Pro 200MHz CPU, 4.3GB SCSI hard disk and 64 MB RAM.

The performance evaluation using TPC-D bench- mark on 100 nodes cluster is reported[l5]. The results showed it can achieve significantly higher performance especially for join intensive query such as query 9 com- pared to the current commercially available high end systems.

140,  I    80 - I  CREATE TABLE LOG (id int. item int).

- PASS 1  CREATE TABLE C-1 ( i t e m 2  int. cnt int); CREATE TABLE R-1 (id int. i tem2 int):  INSERT INTO C-1 SELECT item AS item-1, COUNT(*) FROM LOG GROUP BY item HAVING COUNT(*) 7 =  :minsupport;  INSERT INTO R-1 SELECT p.id, p.item AS i t e m 1 FROM LOG p, C-l c WHERE p.item = =.item-1:  - PASS k CREATE TABLE R T M P A  (id int. item-1 int,  i t e m 2  int. ... . item& int) CREATE TABLE C A  (item-1 int,  i t e m 2  int. ... . item& int. cnt int) CREATE TABLE RA  i t e m 2  int. ... . item& int) (id int. itkm-1 int,  INSERT INTO R T M P A SELECT p.id. p.item-1. p. i tem2.  ,.. ,  FROM RA-1 p. RA-1 q p.iteni-!-l. q.itemA-1  WHERE p.id = q.id AND pitem-1 = q.item-1 AND p.item2 = q.item2  SOL 0.2% --c SOL 0.3% ----x---- - SQL0.4%  - Apriori C 0.2% Apriori CO.3% - Apriori C 0.4% o  -  -  -  AND p.itemA-2 = q.item&-2 AND p.itemA-1 4 q.itemA-1;  INSERT INTO C A SELECT item-1, item3.' ..., Item&,  COUNT(*) FROM R T M P A GROUP BY i t e n i l .  i t e m 2 ,  .... item& HAVING COUNT(*) >= :minaupport:  INSERT INTO R A SELECT p.id.  p.item-1. p. i tem2  FROM R T M P A  p, C A  c WHERE p.item-1 = c.item-1  AND p.item2 = c. i tem2  p.item&  AND p ,ten>& = c Item&  D R O P  TABLE RA-1 DROP TABLE R T M P A  Figure 3. SQL query to mine association rule  We show execution time of SQL query for associ- ation rule mining with several minimum supports in Figure 4. The minimum supports are 0.2 %, 0.3 % and 0.4 %. We also varied the number of nodes : 1, 2, 5 and 10. The data used here is synthetic transaction data generated with program described in Apriori al- gorithm [2] to show that we can handle larger data with PC cluster. The number of transactions here is 200000.

We also show the result of directly coded Apriori-based C program on single node for reference. The execution time for this sequential program are shown as dots on the down left of the figure.

The result is surprisingly well compared even with directly coded Apriori-based C program on single pro- cessing node. On average, we can achieve the same level of execution time by parallelizing SQL based min- ing with around 4 processing nodes.

2 4 8 8 IO 12  mode5  F i g u r e  4 .  E x e c u t i o n t i m e  ' -  I  SdL 0.2% --t SQL 0.3% -----E----  Ideal - SQL 0.4% ~ 1~ .

7 t  1 " I  J 0 4 6 8 10 12  # d e s  F i g u r e  5 .  Speedup r a t i o  The speedup ratio shown in Figure 5 is also rea- sonably good, although the speedup seems to be sat- urated as the number of processing nodes increased.

Ideal line here is the optimal speedup we can achieve, such as 10 times faster with 10 nodes. As the size of the dataset assigned to each node is getting smaller, processing overhead and also synchronizing cost that depends on the number of nodes cancel the gain.

5. Summary  The web has change some paradigms of information retrieval. The challenge to provide satisfying answers from web queries faces problems from the chaotic na- ture of web page generation, the phenomenal growth of information on the web and the complexity of web structure. The technology of web mining has showed promising results to improve the information retrieval quality from the web. More sophisticated and complex web mining techniques will be inevitable for the future of web. To support that we need powerful systems, yet with reasonable cost. We have shown that PC cluster     has possibilities to be the platform for large scale web mining.

We have introduced some raw results of data mining on a portal site with focus on mobile users. However we have not provided the evaluation of the quality of the results yet. We believe that the quality of web mining techniques depends on the application. The compari- son with other techniques in certain applications such as prefetching and recommendation system will be one of our future work.

Acknowledgements  We would like to thank people from NTT Software, in particular Mr. Katsumi Takahashi and Dr. Atsuhiro Goto for providing the log file of MIS and helpful dis- cussions.

