Mining Ensemble Association Rules by Karnaugh Map

Abstract   Generally, the study of association mining is  majority concentrate on how to find out the frequent item set and attempt to infer the relationship between them. But very few studies deliberate about the two notable issues. The one is the huge number of association rules, which easily caused the decision maker to get lost in it. The other is the general association rules, which just imply the relationship with ?AND? logic between items, but not imply the relation with ?OR? and ?XOR? logic between items.

In this paper, we apply Karnaugh Map (K-Map) principle to find out ensemble association rules by experiment transaction data, it names ?ARKM?. The experiment result shows that the ARKM approach which not only provides computational efficiency to obtain simplified and usable rules but also manifest adaptive to the decision maker.

1. Introduction   Association Rules prevalent applied in each domain [1], [2], [3], which commonly used to indicate the relationship between items in data mining technology.

In the association mining study, the well-known technique is Apriori algorithm which was proposed by Agarwal et al. in 1993 year [4]. It?s an influential algorithm for mining frequent itemsets for boolean association rules. The concept of Apriori algorithm is to find out the frequent itemsets that have minimum support and then use the frequent itemsets to generate association rules. However, the huge numbers of association rules subsequent to the mining result easily confused the decision maker and some of association rules for decision maker are repetitive or frivolous.

Therefore, many studies concerning for the post- processing, sequencing or filtering are proposed subsequently [5], [6], [7], [8], [9]. However, there isn?t a better and effective method to explore the ?OR? and  ?XOR? logic relation between items or aim to the specific item, and avoid generating the huge number of association rules up to now.

Therefore, we propose a new approach, called ARKM, which is applying K-Map principle [10], [11] to find out ensemble association rules. In this study, all negative items which are not present in a transaction will be considered. After simplify, an ensemble association rule can be derived by applying K-Map principle. In addition, this approach can aim to the interesting or specific item to find out the association rules include itself, and the association rules can imply the relationship not only with ?AND? but also with ?OR? and ?XOR? logic between items. The experiment result shows that the method is more feasible for the decision maker.

2. The review of association rule   Association mining is means that to find out the relationship of items in the huge dataset. The first step is to find out the large itemsets, and then generate association rules in accordance with then. It is mainly divided into two methods, the one is to generate candidate itemsets in advance, in which the Apriori algorithm proposed by Agarwal is a representative, and the other is opposite, in which the representation algorithm is FP-Tree proposed by Han et al. The Apriori algorithm is to make use of the stepwise level search of iterative methods, but it with efficient poor problem and the decision maker is easily loss in the huge association rules.

The FP-growth algorithm was developed by Han al. It employs divide-and-conquer concept to generate frequent items not with prior candidate items from an FP-tree by exploring the tree in a bottom-up fashion [12]. Although this method improves efficiency of association rules mining, the results are too detailed for decision maker and the frequent patterns of low-level didn?t simplify and consolidate further. Many  2009 World Congress on Computer Science and Information Engineering  DOI 10.1109/CSIE.2009.746   2009 World Congress on Computer Science and Information Engineering  DOI 10.1109/CSIE.2009.746     literatures proposed special data structure or algorithm to improve the efficiency of association mining [4].

There are also some techniques integrating the mining capability into exiting database technology which apply the indexing and query processing capabilities of the database system, and exploit the DBMS support for scalability, checking-pointing, and parallelization. SETM algorithm was one of the earliest algorithm to support association rule discover via SQL query[13].Subsequently, there are two techniques extend the basic SQL with new operators for mining association rules as DMQL and M-SQL [14], [15].

Additionally, there are many other frequent itemset generation algorithms as DHP(dynamic hashing and pruning) [17], Partition algorithm [18], Dynamic Itemset Counting(DIC) algorithm [19], tree-projection algorithm [20] and H-Mine [21]. Otherwise, Boolean- base approaches as Srikant al. [22] proposed employing Boolean constrain to find out association rule, which more effective for the particular items or which children items in hierarchy. In 1999 year, Wur and Leu [23] also proposed an effective Boolean algorithm for mining association rules in large databases.

2.1. The concept of association rule  Let {I , 1,..., }iI i m= = be the set of all items in a market basket and 1 2{ , ,.... }nT t t t=  be the set of all transactions. Each transaction it  contains a subset of items chosen I and each transaction with uniquely identification code is called TID. A transaction it  is said to contain an itemset X if X is a subset of  it .Mathematically, the support count, ( )? X , for an itemset X can be stated as follows:  ( ) | { | , } |i i i? X t X t t T= ? ? An association rule is express as X=>Y , Where X  called antecedent and Y called consequent, they are both frequent itemsets in the given database. The intersection of X and Y is an empty set, i.e., X Y = ?? .In association mining, support and confidence are two measures for the strength of an association rule. The support value determines how often a rule is application to a given data set, while confidence value determines how frequently items in Y appear in transactions that contain X. The formal definitions of these metrics are as follows:  Support? ( )( ) ? X YS X Y N  => = ?  Confidence? ( )( ) ( )  ? X YC X Y ? X  => = ? ; ( )? X : The support  count for each itemset X.

The frequent itemset generation of the Apriori  algorithm is as follows:   2.2 The concept of Karnaugh Map   A K-map composed of many grid boxes. Each grid box in a K-map corresponds to a minterm or maxterm. Using the defined minterms, the truth table can be created as table1.Generally, the K-map is used to facilitate the simplification of Boolean algebra functions and then usually used when the variables fewer than six. Properly, the Quine-McCluskey technique is more feasible while the variables greater than five [24]. The follows is procedures of K-Map as: (1) The size of the K-map with n boolean variables is  determined by 2n. For example if n=5, then the size of the K-map is equal 32.

(2) In the row and column order of K-map, the Boolean variables ordered according to the principles of Gray code and one variable changes between two adjacent grid boxes.

(3) If the function express by sum of maxterm, then stuff ?1s? into the K-map. If the function express by product of materm, then stuff with ?0? in the K-map.

Two minterm of adjacent grid boxes differ in only  one variable, and the one of minterms is variable itself, and the other is its complement. The solution can be found by eliminating extra variables within groups using the axiom laws of Boolean algebra.

The simplification condition is described as follows: (1) The number of grid boxes in the groups must be  equal to a power of 2.

(2) Each grid boxes used are once chosen at least, and  re-usable.

The simplification step is described as follows: (1) Choose the largest possible rectangular with?1s? to  be a group.

(2) Repeat step1 until the grid boxes of surplus with  ?1s? have been simplified.

For example, adverting to the adjacent grid boxes,  If there is 2n the adjacent grid boxes be grouped, then the minimum item can be reduced n variables. If there are four adjacent grid boxes be grouped, then the minimum item can be reduced two variables 2) ,which simplification result is illustration as Fig 2.

00 01 11 10  CD AB     00 0 0 0 0  01 1 1 1 1  11 0 0 0 0  10 0 0 0 0  Fig2 An a power of 2 grid boxes simplifications exam.

The simplification is F(A, B, C, D)=AB   3. ARKM (Association Rule mining by K- map)   The main contribution of ARKM has (1) efficiently acquire an ensemble association rule of high frequency item from the transaction dataset; (2) clearly express the relationship with ?OR? and ?XOR? logic between items; (3) ability aim at the prospect of item to find out the association rules include this item.

3.1 The deducing process of ARKM  1. Let whole each item done not appear in each  transaction dataset is indicated with negative item.

2. Convert all transaction as binary code and stuff each transaction into karnagh map.

3. Find out frequency association rules by the simplification base on karnagh map principle and calculate OCa, OCc , CF values.

4. Find out the association rules aim at the prospect of item and calculate OCa, OCc , CF values.

3.2 The measures for the strength of an association rule   In this section, we explain the measures for the strength of an association rule by an example, A ? B => C, in which the A ? B is the antecedent item and C is the consequent item. Definition of the three measures OCa, OCc , CF are as follows: (1) OCa is defined the numbers of antecedent item.

OCa = (A ? B)= |A| + |B| - |A?B| (2) OCc is defined the numbers of antecedent item  and consequent item simultaneously.

4. Problem resolution and experimental  result In this section, we explain rule conflict problem  by an assumption transaction data example as table4.

Table 4 Transaction dataset  TID Items  t1 A, C  t2 B, C  t3 A, B, C   4.1 Conflict problem solving by OR logic relation  The transaction data generated the number of fifty association rules while the minimum support and confidence value equal to 0.1 by Apriori algotithm, but among those association we can discover that the rules exist conflict problem. For example the 2-item relation, A imply C or C imply A, we can detectd that the conflict problem from the four rules as follows: (1) A=Y 2 ==> C=Y 2    conf:(1) (2) A=N 1 ==> C=Y 1    conf:(1) (3) C=Y 3 ==> A=Y 2    conf:(0.67) (4) C=Y 3 ==> A=N 1    conf:(0.33)  The rule, A=Y 2 ==> C=Y 2 means that two number of A itme show up in the transaction not imply one number of C itme, and it?s confidence equal to 100%. For the two rules, A=Y 2 ==> C=Y 2, A=N 1 ==> C=Y 1, that are exist conflict problem of whether the A item and C item shows up at the same time. The remaining two rules, shows that the C item shows up previously,the probility of A item shows up equal to 67%, and not shows up equal to 33%. Although the probility of two items shows up is higher than not shows up at the same time, to integrate the rules could reduce the too many rules and increase the efficiency on decision.

The above-mentioned issues can be improve by ARKM approach we propose. First, accede to the negative items in each original transaction data shows as table5, then the simplification result describe as graph 9. The simplification result obtain an frequency ensemble rule, X(dataset)= > (A C) (B C)? ? ? (Fig 5).The rule is clearly and simplify for the decision maker to make a decision.

Table 5 Negative item and its bit items representation  TID Items  Bit-items t1 A, ~B, C 101 t2 ~A, B,C 011 t3 A, B, C 111     00 01 11 10  0 0 0 0 0  AB C     1 0 1 1 1  Fig 5 The simplification of K-map F(A,B,C)=AC+BC Rule: X(dataset)=>AC+BC =(A C) (B C)( =3, =3, CF =1)OCa OCc? ? ?    4.2 XOR logic relation In real transaction data , there are exist XOR  relation between items. But, in general , as Apriori algorithm can?t effective express XOR relation. For an example as table 6. This transaction data generated the number of thirty-six rules while the minimum support and confidence value equal to 0.1 by Apriori algotithm.

The follows are three rules derive from this transaction data, in which the XOR relation can be observed.

B=Y C=N 1 ==> A=Y 1    conf :(1) B=N C=Y 1 ==> A=Y 1    conf:(1) B=Y C=Y 1 ==> A=N 1    conf:(1)  By the ARKM approach, the tree item relation can be show as A ? B ? C, among which the symbol represent XOR logic. Then, the association rules can derive as follows (Fig 7):   Table 6 Transaction dataset TID Items  t1 A, C  t2 B, C  t3 A, B      0 0 1  1 1 0  Fig 7 Simplification K-map by the prospect of item A  F(B,C)=B C =>X(A)=B C  ? ?    Rules are B ? C -> A or A -> B ? C B ? C -> A( OCa=2, OCc=2, CF =1) A -> B ? C( OCa=2, OCc=2, CF =1) The number of XOR relation count by follows equation | B ? C| = | ~B ? C| + | B ? ~C|  5. Conclusion  In this paper, we propose an ensemble association rule mining technique by applying  k-map principle.

The experimental results shows that the approach not only effective find out the relation among the frequency items but also aim to the prospect item minig with adaptive. In addition, the simplification result of association rules is more adaptive to the decision maker. In the future, our study will apply it on bio-data and improve it apply Quine-McCluskey technique.

6. Acknowledgment  This research was supported by the National Science Council of Taiwan, ROC, under the grant NSC97-2221-E-168-038.

7. References   [1] Y. H. Wen, J. W. Huang, and M. S. Chen. Hardware-  enhanced association rule mining with hashing and   Engineering, 20(6): p. 784-795, 2008.

[2] S. Zhang and J. T. L. Wang, Discovering frequent  agreement subtrees from phylogenetic data. Ieee  Transactions on Knowledge and Data Engineering,  20(1): p. 68-82, 2008.

[3] R. J. Kuo, and C. W. Shih. Association rule mining  through the ant colony system for National Health  Insurance Research Database in Taiwan. Computers &  Mathematics with Applications, 54(11-12): p. 1303-  1318, 2007.

[4] R. Agrawal, T. Imielinski, A. Swami, Mining association  rules between sets of items in large databases. In: Proc.

ACM SIGMOD Intl. Conf. Management of Data, pages  207?216, Washington, DC, 1993.

[5] H. Toivonen, M. Klemettinen, P. Ronkainen, K. Hatonen,  and H. Mannila. Pruning and Frouping Discovered  Association Rules. In ECML-95 Workshop on Statistics,  Machine Learning and Knowledge Discovery in  Databases, pages 47-52, Heraklion, Greece, April 1995.

[6] B. Liu, W. Hsu, and Y. Ma. Pruning and Summarizing  Discovered Associations. In Proc. of the 5th Intl. Conf.

on Knowledge Discovery and Data Mining, pages 125-  134, San Diego, CA, August 1999.

[7] S. Brin, R. Motwani, and C. Silverstein. Beyond market  baskets: Generalizing association rules to correlations.

In proc. ACM SIGMOD Intl. conf. Management of Data,  B C     pages 265-276, Tucson, AZ, 1997.

[8] C. C. Aggarwal and P. S. Yu. Mining Associations with   Knowledge and Data Engineering, 13(6):863-873, Jan-  uary/February 2001.

[9] W. DuMouchel and D. Pregibon. Empirical Bayes  Screening for Multi-Item Associations. In Proc. of the  7th Intl. conf. on Knowledge Discovery and Data  Mining, pages 67-76, San Francisco, CA, August 2001.

[10] Karnaugh, Maurice. The Map Method for Synthesis of  Combinational Logic Circuits. Transactions of  American Institute of Electrical Engineers part I 72 (9):  593-599, November 1953.

[11] Katz, Randy. Contemporary Logic Design. The  Benjamin/Cummings Publishing Company, 70-85, 1994.

DOI:10.1016/0026-2692(95)90052-7. ISBN 0-8053-  2703-7.

[12] J. Han, J.Pei, and Y.Yin. Mining Frequent patterns  without Candidate Generation. In Proc. ACM-SIGMOD  Int. Conf. on Management of Data, pages1-12,  Dallas,TX, May 2000.

[13] M. Houtsma and A. Swami. Set-oriented mining of  association rules. In proc. of the 11th  Intl. Conf. on  Dais Engineering, page 25-33, Taipei, Taiwan, March  1995.

[14] J. Han, Y.Fu,K. Koperski, W. Wang, and O.R.Zaiane.

DMQL:A data mining query language for relational  databases. In proc. of the 1996 ACM SIGMOD  Workshop on Research Issues in data mining and  Knowledge Discovery, Montreal, Canada, June 1996.

[15]  T. Imielinsi, A. Virmani, and A. Abdulghani.

DataMine: Application Programming Interface and  Query Language for Data Mining. In Proc. of the 2nd  Intl. Conf. on Knowledge Discovery and Data Mining,  page 256-262, Portland, Oregon, 1996.

[16] J. S. Park, M-S. Chen, and P. S. Yu. An effective hash-  based algorithm for mining association rules. SIGMOD  Record, 25(2):175-186, 1995.

[17] A. Savasere, E. Omiecinski, and S. Navathe. An  efficient algorithm for mining association rules in large  databases. In Proc. of the 21st Int. Conf. on Very Large  Databases(VLDB?95), page 432-444, Zurich,  Switzerland, September, 1995.

[18] S. Brin, R. Motwani, J Ullman, and S.Tsur. Dynamic  Itemset Counting and Implication Rules for market  basket data. In proc. of 1997 ACM-SIGMOD Intl. Conf.

On Management of Data, pages 255-264, Tucson, AZ,  June 1997.

[19] R. C.  Agarwal, C.C. Aggarwal, and V. V. V. Prasad. A  Tree Projection Algorithm for Generation of Frequent  Itemsets. Journal of Parallel and Distributed  computing(Special Issue on High performance Data  Mining), 61(3):350-371, 2001.

[20] J. Pei, J. Han, H. J. Lu, S. Nishio, asn S. Tang. H-Mine:  Hyper-Structure Mining of Frequent Patterns in Large  Databases. In Proc. of the 2001 IEEE Intl. Conf. on  Data Mining, page 441-448, San Jose, CA, November  2001.

[21] R. Srikant, Q. Vu, and R. Agrawal. Mining Association  Rules with Item Constraints. In Proc.of the 3th Intl.

Conf. on knowledge Discovery and Data Mining, pages  67-73, Newport Beach, CA, August 1997.

[22] S. Y. Wur and Y. Leu, An effective Boolean algorithm  for mining association rules in large databases,   Database Systems for Advanced Applications  (DASFAA), pp. 179-186, 1999.

[23] David Belton, Minimisation of Boolean Functions,  Combinational Logic & Systems Tutorial Guide,  University of Surrey, Surrey-UK, April 1998.

