Notice of Retraction

Abstract?in the platform for the integration of information systems in new rural areas, the application of data mining technology to achieve load balancing. That is, according to historical records, in some way to forecast the upcoming visit of a request, and in accordance with certain rules for dealing with pre-reading, to balance load and speed up access speed. At the same time, running on the service side of the monitoring process will be the regular collection of farmers and learn the history of the nodes within the cluster load of information, through the analysis of these data and mining, the server clustering within a reasonable variety of resources to optimize and re-configuration.

Key words: data mining; load balancing, response time

I.  INTRODUCTION Township is the key to the new rural development  nodes, the existing township basic information systems in vertical mode of operation, such as "Pioneer Network" and "Distance Education Network", "McKinnon project", "Chimura town of 100 projects" such as one in the township level of mutual separation, not integration of the use of hardware and software resources. The new rural information integration platform to build, is based on the "composite two-story structure" to achieve the township information platform horizontal information integration, through the building, such as office management, agriculture, construction project management, financial management of township infrastructure, rural community personnel management, professionals such as population, land management system interface, integration of the three- tier structure of hardware and software of information resources and improve rural comprehensive information management technology and services capabilities, to explore an integrated information technology to improve rural integrated a number of channels and operations maintenance mode.

Demonstration project based in Jixi County, completion of the project will be built with county and township (town), the village of the three-tier management and rural composite structure combining two of the eight major characteristics of the new information-based demonstration bases in rural areas,  formed to serve the "three rural issues ", effectively a two-pronged approach the core of community-based management pilot area, the establishment of related technical system and function modules, to adapt to economic, social and population, resources, environment development, and promote the modernization of the new rural development. In project implementation, found that when a number of farmers at the same time learning often lead to long-distance Internet server-side load balancing problem [1], the system is relatively slow response time significantly affected the farmers interest in learning.  In this article, to address this problem, explore in depth the theoretical and experimental analysis.



II. REQUESTS FORECAST Through the visit to the historical data and farmers learning habits of observation, found that if the farmers of a fragment has been training content, then related or similar paragraph was very likely to continue the request. From this view, in terms of logic between the content of the existence of an association, which under a certain probability, we can predict the next farmers to access documents. It is this type of speculation, this paper presents data mining [2] applied to the concept of load balancing system.

From the farmers to learn the history of records and access logs, you can analyze a number of association rules between sentences, such as the existence of such a rule "Si => Sj", so if farmers request to the server file Si, documents should be considered ahead of time whether there is a need Sj ready, because the farmers is likely forthcoming visit to the document. Farmers to visit in a document, will be associated with a document in advance of a server on the other read, then after the end of the current file access can be switched to another server in the server, this document has been pre - dealt with, so get a better response time.

DOI 10.1109/ITCS.2010.85        Figure 1 Transition probability sentences

III. APPLICATION OF DATA MINING TECHNOLOGY TO ACHIEVE LOAD BALANCING  The use of the database can be recorded for each visit to the details of farmers, the information in each visit are automatically uploaded to the server. All this information was retained in the history of a visit (Learning History) database table.

Judging from the current usage and get results, statistics and analysis can be a relatively simple data.

For example, the number of households logs on, with an accumulated time and sub-line, each sentence was the number of trained and so on. Now, the needs of growing from this table to further tap such information, and that is: farmers trained after a sentence, followed by the continuation of the training that there are several possible sentences, respectively, what is, and must be given the How big is the probability, as shown in Figure 1. Among them, said from state  to state  transition probability, that  is  ijp iS  jS  ijtij SSXP 1 1S  11p  12p  tX|  1S  2S  p . For example, in Figure 1, the participants trained , the probability of  duplication of training  is to continue to move  the probability of training  is .

To farmers in a first training course of the visit set  off a collection of all sentences with the following vector. Among them, each sentence a boolean variables are described, 1 representative of the appropriate sentence to be trained, 0 on behalf have not been trained.

T1,1,0,......1,1,0,0,1,1 By analyzing these vectors will be able to know  what the sentence will be consecutive visits, the records kept by the server side is very large, it will consider offering these courses and the sentence in  accordance with the sub-directory in order to improve mining efficiency.

For example, the sentence Si trained farmers will be trained sentence Sj, then the following association rules can be used to describe this model:  %60,2% ConfidenceSupportSS ji Among them, the support rate of 2%, indicating that  farmers in the analysis of historical data in training two percent of rural households at the same time learning the Si and Sj, confidence is 60% indicated that 60% of farmers in the training will be followed after the Si Training Sj.

If the conclusion is consistent with the predicted value, or closer, it could be that the data mining [3] algorithm is credible. In theory, can be given minimum support threshold and minimum confidence threshold of the reference value to restrain the above rules, to meet the two thresholds,  to known as the meaningful association rules association rules. Only to meet the minimum threshold of support for the use of association rules pre-sentence access, at the same time ignored those who have not reached the minimum threshold of trust rules [4].

Before algorithm in the application of the above- mentioned, the first of Learning History table sorting Apriori algorithm for data needed to prepare. The table all records or selected part of the record ID and training in accordance with the farmers time to reorder. In order to determine and collect a specific participant in a learning process the entire contents of the visit will be to set a time interval threshold, which is lower than the threshold of learning records were identified as belonging to a collection of learning content, otherwise been identified to start a new round of study. After finishing a farmers Learning History table as shown below. To illustrate the problem, the table has been simplified, assuming a total of six records, which is 6 times to learn the history of the situation.

S4  S2  S1 S3  S5  p23 p33p12 p11  p24 p14 p34 p51  p45      Table 1: after pre-treatment visit historical table Learning History Data Mining Table  Learning HistoryID SentenceID LH_00000001 Sentence_1_1 Sentence_1_2 ??  LH_00000002 Sentence_2_1 Sentence_2_2 ?? ?? ?? ?? ???  LH_00000006 Sentence_6_1 Sentence_6_2 ?? Table 2 support frequency and Item sets  C1 L1  Item sets support frequency Item sets  support frequency  Sentence_1_1 1 Sentence_1_2 2 Sentence_1_2 2 Sentence_1_3 2 Sentence_1_3 2  Minimum support frequency     File 1 Part 1 File 1 Part 2 File 1 Part k File 1 Part n   File 2 Part 1 File 2 Part 1 File 2 Part 1 File 2 Part 1   File 2 Part 1 File 2 Part 1 File 2 Part 1 File 2 Part 1 Server 1 Server 2 Server k Server n  Figure2Schematicdiagramoffilestorage Following the excavation algorithm specific  description: Algorithm 1 is based on the mining algorithm Aprori Step 1 of the first pass algorithm cycle, the database  for each (data) of all candidate I-item sets C1 elements.

Scan database to determine the C1 support of the various elements of the frequency.

Step 2 on the various elements of C1 through the minimum support for the frequency of choice, the L1.

After these two steps, it will be carried out as shown in the table a set of data.

Step 3, Calculated , to obtain the two (K-1)-item sets together to connect to produce a candidate Ck.

11 kk LL  Step 4 using the above-mentioned removed Apriori nature could not produce frequent item sets designate options set a new Ck.

Step 5 on the various elements Ck support by minimizing the frequency of conducting trade-offs, the Lk.

Step 6 above Step 4 to Step 6 of the main work is done: keep the frequent use of (K-1)-item sets Lk-1 have a candidate K-item sets Ck. Cycle of this process until no new end item sets  Through the above algorithm, ultimately available to meet the minimum support from the frequency- designate set of options consisting of frequent item sets.

The generation of association rules: In the excavation from the database all the frequent item sets, you can more easily access to the corresponding association rules. That is, to produce to meet the minimum support and minimum confidence in the strong association rules, we can use the support of item sets to calculate the frequency of conditional probability, thereby gaining the confidence of association rules, the following type shown.

i  ji ijji SCountSupport  SSCountSupport SSPSSConfidence  _ _  |  In this way, will be a set of rules Si => Sj, which the trust is greater than the minimum threshold of trust will be retained as a final output. Sj here that there can be many months, to select only the credibility of the largest that Sj, that is, for each Si and retain only the credibility of the largest that the rules [5].



IV. STORAGE POLICY Shared memory is a new rural information system  integration platform for server clusters need to be addressed in one of the key issues, the system of storage capacity and access speed have higher requirements. The system of paper forms of organization have a more prominent feature of the material deposited mostly from video recording, live fragments. After pre-processing and compression, the original media files are in accordance with the sentence      cut to become a group of relatively small fragments of integrity. Based on this characteristic,  in the general file system design document subparagraph (File Stripping) storage and file cache distributed storage strategy. Sub-media files will be stored on multiple servers can improve overall system performance, easier to achieve the various storage load balancing between nodes [6], such as Figure 2.

System of certain documents frequent high level visits, which is far greater than some of the other. Of all the server systems to save copies of all the documents is a simple, workable solution, it is clear that the larger overhead, the program for the visit to the probability of a number of relatively small document is a waste of resources. To this end, the design of a redundancy document storage strategy 1.x.

Through the above-mentioned data mining [7] a result, it is not difficult to analyze statistics and are frequently accessed files. Based paper was the number of visits per hour for the frequency of visits recorded  for the frequency of visits , then if  the larger, is illustrated in these documents is to visit "hot spots" can be copied to multiple servers. According to the frequency of visits to adjust the location of  documents, making each server  is basically the  same value. This will not appear on a server to store all the files are often visited, and other servers on the file access probability are smaller. Monitor regularly get each server load, if we find that the value of  comparison between the differences in wealth,  will start a process of adjusting the distribution of documents. For performance considerations, such adjustment can not in real time.

if  N  i 1  iFile _  N  i if   if  if   EXPERIMENTAL AND TESTING   First of all, describe the experimental environment, a  number of data files were randomly distributed in more than one server, the documents themselves in terms of  logic there is no correlation. In order to closer to the real application environment, using about 3-5M compressed audio files stored on each server 100.

Using Python language write multi-threaded server program. The main process are responsible for monitoring the request, if a request arrived, then start a new thread for a subset of services, continue to monitor the main process. Services sub-threads through the link to read the overall table and buffer table documents on request information and the current server status information, and then give a response in accordance with the algorithm.

The client can be taken two ways to simulate the real visit farmers. One is by reading a document linked to triple, to be a need to access the documents, as well as the probability of the visit. Subsequently, the client through a random process to the probability of  access to files to the probability ijp )ijpjf 1( of  random access a file. Another way what access to the real record of real farmer, to reproduce in the experiment, so as to achieve the purpose of the visit simulation farmers.

5.1 ASSOCIATED DATA STRUCTURE Triples visit to describe the current list of documents,  most likely continue to visit the next visit to the transfer of documents and its probability. Such linkages in the real environment will be to get through data mining and production, in other words, the purpose of data mining and the result is to generate and update the list of triples.  ),( , ijji pff  Among them, is the representative of the current  visit of the document,  is on behalf of most likely to  visit a paper document, is on behalf of the visit  followed the probability of accessing files . Table 3 below shows an example.

if  jf pij if  jf  File i File j Pij File_SVR_01_01 File_SVR_02_01 0.8 File_SVR_01_02 File_SVR_02_02 0.7 File_SVR_01_03 File_SVR_02_03 0.6  ? ? ? Table 3 File association Triples         5.2 BUFFER POOL DATA STRUCTURE In order to more effectively manage the buffer zone,  we need to know what documents have been read into the buffer zone, the proportion of these documents and whether space is being used, such as basic information.

The definition of the following data structure used to describe the use of the buffer zone.

Algorithm 2 buffer class definition / / START class BufferPool: def __init__ (self): self.lock = threading.Lock () # Mutex  Semaphore self.pool = [] # buffer pool def addToBuffer (self, file): # read into the buffer  content self.lock.acquire () # critical region began ... ...

bufferBlock = ( 'name': filename, 'size': size, 'bytes':  bytes,' reference ': 0) # File name, buffer size, the contents of the  documents, citing a number of ... ...

self.lock.release () # end of critical region def readFromBuffer (filename): # Remove the  buffer content def isInBuffer (filename): # determine the file exists in the buffer zone / / END  Each file is read into the buffer zone after which a new Buffer Block, in accordance with the above approach to the basic information into a buffer with Ikegami added. When the file is accessed by traversing the entire sequence can be informed of whether the document had been read into the buffer zone also need to modify the number of files, record the number of requests are visiting. Above modification and maintenance process between the mutually exclusive, in order to control complicated, we should introduce a semaphore mechanism, making all the modifications to the list of operations to keep pace.

5.3 ANALYSIS OF EXPERIMENTAL RESULTS Local tests, trials in this group, the client is located  in a number of random requests for files on local disk, the client records from the request sent to a file to receive the end of time interval. Tests were carried out twice, the first is not to take any strategy,  the second test is in the deployment of these strategies carried out by the server. Client, respectively, simulated 10 threads, 20 threads, 30 threads, 40 threads and 50 concurrent threads on the circumstances. Abscissa in Figure 3 that the number of simultaneous threads, thread-ordinate that the average response time. At the top of the curve  is the first test results, the bottom of the curve is the result of the second test.

Figure 3 results contrast map  From the data that the visit has not been pre-  processing the request, with the concurrent degree of improvement in performance is obvious; and after a visit to the request of the forecast, the performance improved significantly. 512M memory in a server network bottlenecks in the neglected cases, at the same time can support more than 20 concurrent requests, the numerical main memory size limit.

The next test of this group is in a real network environment, the client in accordance with the mining algorithm [7] to simulate the results obtained access, and the results compared with the random test algorithm. In this experiment, the client simulated multicast mechanism, by reading a list of servers, each server to request the corresponding port. In practice, this will be multicast protocols and multicast routers to achieve. Taking into account the request packet size compared with the response for the message can be ignored, so that the alternative test results will not be a visible impact. Experimental specific steps are below, such as algorithm 3.

3 Simulation Algorithm Client Access Step 1 client read associated ternary group, read the  file list at the same time; Step 2 program were randomly selected from a list  of files in the document as a starting point to visit, a request to all servers;  Step 3 Process will read the list of associated tuples corresponding value, through a random process to the probability of visit tuples named in a document to the probability of random access a file.

Step 4 Repeat the process until the time they reach the required value, the end of the visit.

Figure 4 2 Gaussian curve representing the strategies mentioned in this article and random strategy to respond to the mean and variance, abscissa on behalf of the average probability density longitudinal coordinates.

From the results can be seen that the dotted line without pretreatment client response time, the mean is  (seconds) 2.92541 , variance is 1.23291 .

Solid line on behalf of a result of these algorithms to deal with the response time, the mean is  (seconds) 2.56542 , variance is 0.96902 .

Figure 4 based on the local multi-threaded concurrent access comparison   CONCLUSION  The user needs is input Applet through to the system, Applet user to user demand Agent. Agent users in the analysis of the needs of users after the creation of data mining Agent for the task. According to the data mining tasks, moved to the local machine on data mining. In its move to the local machine, its management to create a local Agent to manage their own local registration, such as files, data mining Agent migration in the local machine, the local management of Agent will be removed. Data Mining Agent in accordance with the needs of the database data to a database of local Agent to issue requests for data, a database of local Agent, upon request, to query the database data, and return to the Data Mining Agent. Data Mining Agent in the completion of the mission, the transfer request back-end data mining, the results will be reported to the User Agent, User Agent that will result is a document or data sent to the formation of Applet chart shows.



V. CONCLUSION Through all these experimental results and analysis, we  can be seen after pretreatment of server response time curve given the mean and variance in the relatively small area. This article mentioned that the application of this strategy in response to the server speed and stability have improved larger.

Load balancing problem is the building of agricultural information of one of the major problems in the research and analysis of the current popularity of a variety of static and dynamic balance algorithm [8] After this paper, a data mining-based load balancing method of thinking The use of historical records of the visit of the data mining results, so that the server has the ability to forecast the upcoming visit and make pretreatment. Papers on data mining methods and  load balancing strategies were described and analyzed on the basis of tests and experiments, and achieved better results.

Of course, many cities in between the data access and synchronization will be implemented in specific operations also need to supplement the current strategy and modification.

