BOOK RECOMMENDATION SERVICE BY IMPROVED ASSOCIATION  RULE MINING ALGORITHM

Abstract: With the extensive application of database system, a  mass-circulation historical data is accumulated in university library. We applied data mining technology for discovering useful knowledge in circulation data analysis. There are some shortcomings in mining association rules via Apriori algorithm. This paper introduces two methods for improving the efficiency of algorithm, such as filtrating basic item set, or ignoring the transaction records that are useless for frequent items generated. In order to meet the requirement of personal book recommendation service, we applied the improved algorithm to mine association rules from circulation records in university library. A service model is introduced, and may be used for offering recommendation information to the readers.

The recommendation model can also be used in other fields, for example, bookstore, information retrieval system, network reference database, etc.

Keywords: Book recommendation; Service model; Data mining;  Association rule; Apriori algorithm  1.  Introduction  With the extensive application of database system, a mass-circulation historical data is accumulated in university library. There exists important information (hidden knowledge) behind these data. We hope that some methods can be used to analyze data up to high level, so useful information can be got and applied to user personal service.

In the modern library management system, various kinds of data may only be used for search or query commonly. This is because we are devoid of data analysis methods, and it is difficult to mine deeply for getting the hidden patterns and rules.

The digital library want to accomplish adequately personal information service, it must be organized and presented that the dynamic recommendation information correlated with user demand. Data mining (DM) is a kind of new arisen technology in recent years with the development of database technology and artificial intelligence. Data  mining can discover math model and mutual relationship among great capacity of data by means of various analysis tools; the association rule mining is one of main tools in data mining fields. This paper discusses circulation data mining in university library by use of improved association rule mining algorithm; so mining results can be used to provide effectual personal information service---book recommendation. When user log on, the recommendation service system can present some possibly interested books according to association rules, so lookup time of user can be shortened obviously.

Data mining is also known as knowledge discovery in database. It extracts hidden useful knowledge from a large database, is one of most significant research domain in artificial intelligence, data processing and decision-making support. And that mining association rules in transaction database is very important investigation problem in data mining field. Agrawal et al introduced association rules in 1993, and then gave the famous Apriori algorithm [1-2]. The basic principle of Apriori algorithm is that the k+1 candidate item set may be generated from k frequent item set according to the truth that a any subset of frequent item set all are frequent item set. Afterwards, one item of k+1 candidate item set is made certain a k+1 frequent item through scanning transaction database. But there are some shortcomings such as that a large number of candidate items are generated, and much more disk input/output operations are needed. Many scholars do a great deal of research works in recent years. They proposed a large number of improved algorithms [3-7], which may increase the efficiency of algorithm.

This paper introduces two methods for improving the efficiency of algorithm, such as filtrating basic item set aforehand, and ignoring the transaction records that are useless for frequent items generated. So disk input/output operations can be reduced and efficiency of algorithm can be improved. In order to meet the requirement of personal information service, we apply the improved algorithm to mine association rules from circulation records in university      library. And then a service model is introduced, which may be used for offering books recommendation information to the readers.

2.  Basic concepts  Let I={I1,I2,?,Im} is a item set which there are limited number (e.g. m) of item elements. TD is a transaction database; T expresses one transaction record in database, and unique identifier (e.g. Transaction Number) TID is assigned to each transaction, and T I. We called transaction T contains X or supports X if and only if X T where X I.

Definition 1: The support value of item set X is the number of transactions that contain item set X in transaction database TD, can be labeled as ?X. So the support of item set X may be defined as Support (X) = ?X / |TD| ? 100% where |TD| is the total number of transactions in TD.

Definition 2: Item set X is called as frequent item set if Support (X) ? Minsup where Minsup is minimum support value confirmed aforehand.

Definition 3: Association rule is an implication express of the form X Y where X I, Y I, and X Y=?. The support of item set X Y is called as the support of association rule X Y, labeled as Support (X Y).

Definition 4: The confidence of association rule X Y is defined as Confidence (X Y) = Support (X Y) / Support (X) ? 100%.

Definition 5: Association rule X Y is called as the strong association rule if support (X Y) ? Minsup, and confidence (X Y) ? Minconf where Minconf is minimum confidence value confirmed aforehand.

For a given transactions database, the task of mining association rules is mining all strong association rules which satisfy support and confidence constraints. The problem of mining association rules can be transformed to two sub-problems:  (1) Find entire frequent item set L, which satisfy minimum support constraint Minsup.

(2) Generate strong association rules from frequent item set L, and the rules must satisfy minimum support constraint Minsup and minimum confidence constraint Minconf at the same time.

Second sub-problem can be settled simply. First sub-problem is a focus of attention, and is key problem to increase the efficiency of mining association rules algorithm.  Apriori algorithm is an effective mining algorithm for getting frequent item set. The principle is that frequent item set can be achieved through iteration operation, generate k+1 item set from k item set, find frequent item set Lk from candidate item set Ck. First of all,  find frequent 1 item set, labeled as Ll. Ll can be used to find frequent 2 item set L2, L2 can be used to find frequent 3 item set L3, and so on until no new frequent k item set can be found.

Apriori algorithm is described as follow.

L1 =Find_frequent_1_itemset (TD); // Find frequent 1 item set  For (k=2; Lk-1??; k++)  { Ck=Apriori_gen (Lk-1);  //Generate new candidate item set For each transaction t TD  {  Ct=subset (Ck, t); //Get candidate item set which is //contained in transaction t  For each candidate c Ct C.count++; } Lk={c Ck | c.count?Minsup};  } Return L= kLk;  //Return the union of Lk  3.  Analysis and improvement of Apriori algorithm  3.1.  Analysis of Apriori algorithm  Because mining association rules is processed in a large transactions database, there are some disadvantages to classical Apriori algorithm. The factors resulting in low efficiency of algorithm come from two facets.

(1) The candidate item set generated possibly is huge, and result in combination explosion. For example, if there are 104 items in frequent 1 item set L1, the Apriori algorithm can generate candidate 2 item set C2 which contains 107 items.

(2) After one candidate item set is generated, Apriori algorithm must scan database to determine each item is a frequent item or not. Frequently scanning database brings heavy load to disk I/O equipments.

3.2.  Improvement principles  Two means can be taken into account to increase the efficiency of algorithm according to above-mentioned discussion.

(1) Reduce the scale of candidate item set Ck: The frequent K item set Lk which generated from candidate item set Ck by Apriori algorithm is achieved via scanning database and calculating support of each item. In this process, the scale of frequent 1 item set will affect the latter calculation capacity directly. So we can take two methods to reduce the scale of frequent 1 item set.

A. Filtrating basic item set in the light of user request, selective factors may be user?s interested item, or the items which sales volume or amount of profit arrive at a certain objective quantity, or other selective standards.

B. Collecting items and calculating support, delete the items that do not satisfy minimum support Minsup when first scanning database.

So we can get frequent 1 item set which the support of each item is equal to or greater than Minsup.

(2) Ignore the transaction records that are useless for frequent items generated: In the process that the algorithm determine frequent item set Lk from candidate item set Ck by scanning database, if transaction record T does not contain any element of candidate item set Ck, we can marked it with Delmark=1 (initialized 1), so skip over this record in next database scanning. This is because T does not contain any element of Ck+1 of course, if T does not contain any element of Ck.

3.3.  Description of improved algorithm  Improved algorithm is described as follow.

L0= Filtrate_basic_itemset (TD); // Filtrating basic item set  L1 =Find_frequent_1_itemset (L0, TD); // Generate frequent 1 item set  For (k=2; Lk-1??; k++) { For each transaction t TD AND t.Delmark=1 {  If c  t for all c Lk-1  {t.Delmark=0} // Mark Delmark=0 to useless record for // Generating frequent item set  } Ck=Apriori_gen(Lk-1);  //Generate new candidate item set For each transaction t TD AND t.Delmark=1 {  Ct=subset (Ck, t); //Get candidate item set which is contained //in transaction t  For each candidate c Ct C.count++; } Lk={c Ck | c.count?Minsup};  } Return L= kLk;  //Return the union of Lk  3.4.  Demonstration of improved algorithm  Let I={Il, I2, ?,I9}. TD is a database which there are 10 transaction records, TIDs are 1,2,?,10. Initial status of TD is shown in Table 1.

Table 1. Initial status 1 of TD  Delmark TID Items    I1,I2,I5,I9 I2,I3,I5 I1,I5,I6,I8 I3,I8 I4,I8 I1,I2,I4,I5,I9 I3,I8,I9 I2,I4,I6,I7 I3,I4,I5 I2,I3,I9  (1) Filtrate basic item set L0.

L0={I1,I2,I4,I5,I6,I7}  (2) Calculate support of each item in L0, the results is shown in Table 2.

Table 2. Support of basic item set L0  Items I1   I2  I4   I5  I6   I7  Support 30% 50% 40% 50% 20% 10%  Let Minsup=20%, so we get frequent 1 item set L1.

L1={I1,I2,I4,I5,I6 }  (3) Mark Delmark=0 to useless records for frequent 2 item set L2 generating , Transform status 1 of TD is shown in Table 3.

Table 3. Transform status 1 of TD  Delmark TID Items    I1,I2,I5,I9 I2,I3,I5 I1,I5,I6,I8 I3,I8 I4,I8 I1,I2,I4,I5,I9 I3,I8,I9 I2,I4,I6,I7 I3,I4,I5 I2,I3,I9  (4) Generate candidate 2 item set C2 and calculate it?s support, the results is shown in Table 4.

Get frequent 2 item set L2 is as follow.

L2={{I1,I2},{I1,I5},{I2,I4},{I2,I5},{I4,I5}}  (5) Mark Delmark=0 to useless records for frequent 3 item set L3 generating , Transform status 2 of TD is shown      in Table 5.

Table 4. Support of C2  Items {I1,I2} {I1,I4} {I1,I5} {I1,I6}  Support 20%   10%  30%   10%  Items {I2,I4} {I2,I5} {I2,I6} {I4,I5}  Support 20%   20%  10%   20%  Items {I4,I6} {I5,I6}  Support  10%   10%  Table 5. Transform status 2 of TD  Delmark TID Items    I1,I2,I5,I9 I2,I3,I5 I1,I5,I6,I8 I3,I8 I4,I8 I1,I2,I4,I5,I9 I3,I8,I9 I2,I4,I6,I7 I3,I4,I5 I2,I3,I9  (6) Generate candidate 3 item set C3 and calculate it?s support, the results is shown in Table 6.

Table 6. Support of C3  Items {I1,I2,I5}   {I1,I2,I4}  Support    20%      10%  Items {I1,I4,I5}   {I2,I4,I5}  Support    10%      10%  Get frequent 3 item set L3 is as follow.

L3={{I1,I2,I5}}  Mining frequent item set is ended because there is only one 3 item element in frequent 3 item set L3, can not generate frequent 4 item set. So L=L2 L3.

4.  Application of library information service  4.1.  Circulation information mining  With the devolopment of information technology, the university library becomes digital library from traditional library gradually. The classical information service fashion do not already meet reader?s request, digitalizing resource and establishing personal recommendation system are main tendency of library advancement. The personal information service is the service that can meet the personal information request of all reader, and can automatically in time offer recommendation information to reader by analysing user?s personality and habit.

In order to offer recommendation service, we need get common knowledge such as ?various types of readers like what kinds of books?. All circulation datum are stored by the way of circulation records in computer, we can find reader?s borrow book habits by means of association analysis to circulation records on line, and then establish recommendation model to offer personal information service.

Before data mining, we pre-process circulation records table. Attributes dealing with readers (Card No., Grade or Specialty) and books (Sort Number) are kept down, whereas useless attributes are thrown off. In order to increase efficiency and veracity of mining algorithm, circulation records are reformed to two database tables, one is (Specialty, Grade, Sort Number) transaction records table (Shown in Table 7), another one is (Card No., Sort Number) transaction records table (Shown in Table 8).

Table 7. (Specialty, Grade, Sort Number) records  Items Delmark TID  Speciality Grade Sort Number ?  ?  S1 S4 ......

G2 G1 .....

B1,B2,B51 B2,B3,B5,B13 ......

Table 8. (Card No., Sort Number) records  Items Delmark TID  Card No. Sort Number ?  ?  ......

B1,B2,B51 B2,B3,B5,B13 ......

Where specialty number is the intestine code of various specialties in the university, grade number can be divided into S1-S4 (Undergraduate Student), S5-S7 (Master Degree Candidate), and S8-S12 (Doctorial Student). Sort      number is universal sorting code in library. Mining association rules can get such knowledge as ?The students of certain specialty are likely to borrow some kinds of books? , ? The students of certain grade are likely to borrow some kinds of books?, ? The students of Certain specialty and grade are likely to borrow some kinds of books? and ? Some student is likely to borrow some kinds of books?  There are some constraint in the mining process for incresing the efficiency of algorithm as follows.

(1) Support threshold constraint: In order to achieved the frequent items which are provided with prevalent rules, we set minimum support with Minsup=20%. Of course, the value of Minsup can be adjusted according to requirement for getting better results.

(2) Confidence threshold constraint: If the value of Minconf is ascertained too low , some insignificant rule can be discoveried and added to rule database, so the veracity and validity are depressed enormously. Here we set minimum confidence with Minconf=70%.

(3) Restriction constraint: Commonly, the number of items do not be restricted at the left part or right part of association rule. But the number of items at the left of association rules should be restricted to 1 or 2, so we can achieved necessary frequent item set as long as we mine the frequent items which must contain (Specialty), (Grade), (Specialty and Grade), or (Card No.) item.

4.2.  Association rule  We can discover that reader accessed books is associated reciprocally through data mining in a mass-circulation historical data records. Some rule of borrow habits is in existence assuredly to different kind of readers, and there are some relation between two different subjects. So we can forecast reader?s information request according to aforesaid theory, mine hidden knowledge behind data, seize reader?s borrow custom, and provide scientific foundation data to library personal information service.

We can apply improved association rule mining algorithm to circulation historical database such as Table 7.

The first precondition is satisfying support threshold constraint and restriction constraint, so we may achieve frequent 4 item set L4 = {{S1, G2, B1, B2}, {S4, B3, B5, B13}, {G1, B20, B31, B43} ?}. On this foundation we can get strong association rule set 1 according to confidence threshold constraint (70%). Some examples of strong association rule are shown in Table 9.

In Table 9, S1 represents specialty is computer science and technology; S4 represents specialty is modern  educational technology. The sort number {B1, B2, B3, B5, B13, B20, B31, B43} is corresponding to {Electronics, VLSI, Educational technology, Psychology, Computer application, English, Physical training,, High mathematics} kinds of books. Rule11 describes students of computer science and technology specialty in grade 2 often borrow ?Electronics? and ?VLSI? books in order to meet the need of specialty foundational course study. Rule12 represents 91% of historical records of computer science and technology students borrowed ?Electronics? books.

Rule13 describes 73% of students borrowed ?Educational technology?, ?Psychology? and ?Computer application? books at one time in historical data of modern educational technology students. Rule14 represents 74% of students, which borrowed ?Educational technology? books, may borrow ?Computer application? books. Rule15 describes 83% of students in grade 1 may borrow ?English?, ?Physical training?, and ?High mathematics? kinds of books at the same time. Rule16 represents 86% of students, which borrowed ?English? books, may borrow ?High mathematics? books, this is mean that the student study ?English? and ?High mathematics? course synchronously.

Table 9. Strong Association rule set 1  No. Association rule Confidence  ?  S1,G2 B1,B2 S1 B1 S4 B3,B5,B13 B3 B13 G1 B20,B31,B43 B20 B43 ??  78% 91% 73% 74% 83% 86% ?  We also apply improved association rule mining algorithm to circulation historical database such as Table 8.

The first precondition is satisfying support threshold constraint and restriction constraint, we may achieve frequent 2 item set L2 = {{04734105, B51}, {05521234, B52}, {05522122, B77} ?}. On this foundation we can get strong association rule set 2 according to confidence threshold constraint (70%). Some examples of strong association rule are listed in Table 10.

In Table 10, the sort number {B51, B52, B77} is corresponding to {Inland literature, Foreign Literature, Painting} kinds of books. Rule21 represents student 04734105 likes inland literature, rule22 represents student 05521234 likes foreign Literature and rule23 represents student 05522122 likes painting. They often borrow the      concerned books for their interesting.

Table 10. Strong Association rule set 2  No. Association rule Confidence  ?  04734105 B51 05521234 B52 05522122 B77 ??  72% 89% 81% ?  4.3.  Book recommendation service model  The model of book recommendation service is made up of circulation database, data mining, rule database, user interface, rule matching, and book database. It is shown in Figure.1.

Figure 1. Model of book recommendation service  The association rules produced by data mining module are stored in rule database. Rule matching module finds appropriate rules in rule database according to user?s information, and then output some book recommendation information through searching in book database according to the subsequent of selective rule, which may be user-interested in. User can input library card number ( Specialty, Grade) and the number of expecting recommendation books by user interface. If the number of recommendation books exceed user appointed number, rule matching module choose the association rules that is of higher confidence.

5.  Conclusions  The paper discusses and analyzes classical Apriori algorithm for mining association rules, and introduces two means to improve the efficiency of algorithm. We must work hard at continued research: optimize mining algorithm, improve rule forming method, solve parallel operation problem, etc.

It is of tremendous ascendancy that data mining technology is applied in information recommendation service to classical search. The model of book recommendation service can offer book information to the readers that may be user-interested in. This model can also be used in other fields, for example, bookstore, information retrieval system, network reference database, etc.

Reference  [1] AGRAWAL R,IMIELIMSKI T,SWAMI A. Mining association rules between sets of items in large databases. Proceedings of the ACM SIGMOD Conference on Management of data. Washington DC, 1993:207-216  [2] AGRAWAL R,SR1KANT R. Fast algorithms for mining association rules. Proceedings of the 20th Santiago,1994:487-499  [3] YUAN Jun-Peng,ZHU Dong-Hua. A Survey of Association Rules of Apriori Algorithms. Computer Science. Vol.31,No.1. 2004:114-117  [4] Savasere A,Omiecinski E,Navathe S B. Mining for strong negative associations in a large database of customer transactions. Proceeding 0f the 14th International Conferwnce on Data Engineering.

Orlando, Florida, USA:IEEE Computer Society Press, 1998:494-502  [5] YANG Xiao-ping. Improvement of Apriori Algorithm for Association Rules. Journal of Zhejiang Ocean University(Natural Science). V01.25,No.2.2006: 176-182  [6] ZHU Qi-xiang,XU Yong,ZHANG Lin. Research on Mining Association Rule Based on Improved Apriori Algorithm. Compute Technology and Development.

Vo1.16,NO.7.2006:102-105  [7] ZHANG You-gen,Qing-tao,SHAO Zhi-qing. An Improved Association Rule Mining Algorithm Based on Weight Function. Journal of East China University of Science and Technology (Natural Science Edition).

