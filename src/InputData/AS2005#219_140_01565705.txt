Generalizing the Notion of Confidence

Abstract  In this paper, we explore extending association analy- sis to non-traditional types of patterns and non-binary data by generalizing the notion of confidence. The key idea is to regard confidence as a measure of the extent to which the strength of one association pattern provides informa- tion about the strength of another. This approach provides a framework that encompasses the traditional concept of confidence as a special case and can be used as the basis for designing a variety of new confidence measures. Be- sides discussing such confidence measures, we provide ex- amples that illustrate the potential usefulness of a gener- alized notion of confidence. In particular, we describe an approach to defining confidence for error tolerant itemsets that preserves the interpretation of confidence as a condi- tional probability and derive a confidence measure for con- tinuous data that agrees with the standard confidence mea- sure when applied to binary transaction data.

1 Introduction Traditional association analysis [19] focuses on binary  transaction data,1 such as the data that results when cus- tomers purchase items in, for example, a grocery store.

Such market basket data can be represented as a collection of transactions, where each transaction represents a cus- tomer and consists of the items purchased by the customer.

Alternatively, as is more convenient for the discussion later in this paper, this data can be represented as a binary matrix, where there is one row for each transaction, one column for each item, and the ijth entry is 1 if the ith customer pur- chased the jth item, but is 0 otherwise.

A key task of association analysis is finding frequent itemsets, which are sets of items that frequently occur to- gether in a transaction. For example, baby formula and di- apers are items that may often be purchased together. The strength of a frequent itemset is measured by its support  1This includes non-ordered categorical data, which can be trivially con- verted to binary transaction data.

[22], which is the number (or fraction) of transactions in which all items of the itemset appear together. Although frequent itemsets are interesting in their own right, the end goal of association analysis is typically the efficient gener- ation of association rules [1, 2], where an association rule is of the form A ? B (A and B itemsets) and represents the statement that the items of B occur in a transaction that contains the items of A. The strength of an association rule is measured by the confidence of the rule, conf(A ? B), which is the fraction of transactions containing all the items of A that also contain all the items of B. This definition of confidence is an estimate of the conditional probability of A given B.

Although traditional association analysis has been very successful, its current foundations [22] assume binary trans- action data, and thus, it cannot be directly applied to many types of data sets, such as those involving non-traditional association patterns or continuous attributes. As an example of non-traditional patterns, consider Error-Tolerant Itemsets (ETIs) [21], which are itemsets in which a specified fraction of the items can be missing from a transaction. (Such pat- terns are useful when, for example, real association patterns are distorted by noise.) To illustrate, if the specified fraction is 0.80, then for a set of 5 items, a transaction supports this itemset if it contains at least 4 out of the 5 items. The tradi- tional notion of support can be applied to ETIs in a straight- forward manner; i.e., the support of an ETI is the number of transactions that contain at least the specified fraction of the items in the ETI. However, as described later in this paper, the traditional definition of confidence is not appropriate for ETIs.

If the data set has continuous attributes,2 then associa- tion analysis cannot be directly applied. Nonetheless, if discretization techniques [19] are employed, then associa- tion analysis can be used for such data sets. However, dis- cretization complicates the analysis procedure and the in- terpretation of its results, as well as potentially causing a  2We include count attributes in this category.

loss of information. An example of an approach that di- rectly deals with continuous data is Min-Apriori [9], which uses the anti-monotone property of the min function to produce a new version of support that also has the anti- monotone property. For binary transaction data, the sup- port computed by Min-Apriori matches that of the standard approach. However, as described later, the confidence that Min-Apriori computes for an association rule involving bi- nary transaction data does not always match that of the stan- dard approach.

Our goal is to provide a framework for association anal- ysis that allows it to be applied directly to both non-binary data and non-traditional types of association patterns. In this paper, we explore approaches for generalizing the no- tion of confidence. The key idea is to regard confidence as a measure of the extent to which the strength of one asso- ciation pattern provides information about the strength of another.

Based on this idea, we propose a framework for general- izing confidence that views confidence as the composition of two functions: (1) a function that evaluates the strength or presence of an association pattern for each object (transac- tion), producing a pattern evaluation vector, and (2) a func- tion that measures the strength of the relationship between a pair of pattern evaluation vectors. The strength of the re- lationship may be measured by the extent to which one pat- tern evaluation vector predicts the other, or more generally, by the proximity (similarity or dissimilarity) of the two pat- tern evaluation vectors. Note that the traditional definition of confidence as an estimate of the conditional probability of one set of items given another is an evaluation of how well one set of items predicts another.

The following are specific contributions of this paper:  1. We introduce a framework for generalizing the notion of confidence. The traditional approach to confidence is based on support, which can be regarded as a sum- marization of the strength of a pattern over all transac- tions. In contrast, the proposed framework is based on evaluating the relationship between the pattern evalu- ation vectors of two association patterns. This frame- work provides a conceptual basis for designing new confidence measures and offers a standard approach for describing and discussing the current notion of con- fidence.

2. We describe how to modify the standard definition of confidence for Boolean association patterns,3 includ- ing ETIs, so that confidence can be viewed as an esti- mate of conditional probability. We also provide an ex- ample of how applying the standard definition of con- fidence to ETI?s yields a nonsensical result, while the modified definition gives the intuitively desired result.

3A Boolean association pattern is either present in a transaction or not.

3. We describe approaches to confidence based on sim- ilarity or dissimilarity functions, such as the cosine measure or Euclidean distance.

4. We derive a new confidence measure for continuous data that matches the standard definition of confidence for binary transaction data. This confidence measure is based on a mathematical relationship that we derive between the confidence measure for Boolean associa- tion patterns and the cosine measure.

2 Background After introducing some notation, we begin by stating the  traditional definitions of support and confidence. We then briefly review the results of our previous work in generaliz- ing support [17].

2.1 Notation  Table 1 provides an overview of the notation used in this and later sections. Throughout this document, the terms ?row,? ?transaction,? and ?object? are used interchangeably, as are the terms ?column,? ?item,? ?variable,? and ?attribute.?  Table 1: Summary of Notation  Notation Description D Data matrix of M rows and N columns T = {t1, ? ? ? , tM} Set of objects (transactions, rows) of D I = {i1, ? ? ? , iN} Set of attributes (items, columns) of D t An object (transaction, row) or its index i, j, k An attribute (item, column) or its index X , Y A set of attributes (items)  2.2 Traditional Support and Confidence  Using the notation of Table 1, we briefly summarize the traditional concepts of (1) the support of an itemset, (2) a frequent itemset, (3) the support of an association rule, (4) the confidence of an association rule, and (5) the anti- monotone property of support.

Definition 1. Support For a binary transaction data matrix D with transactions T and items I, the support4 of an itemset, i.e., a set of binary attributes, X ? I, is given by  ?(X) = |{t ? T : D(t, i) = 1,?i ? X}|,  which is simply the count of transactions containing all the items of X .

4A distinction is sometimes made between ?support count? and ?sup- port,? with the latter being defined by the ratio ?(X)/|T |. For simplicity, however, we will use ?support? to mean ?support count? in this paper unless otherwise explicitly indicated.

Definition 2. Frequent Itemset Given an itemset X ? I and a specified minimum sup- port threshold, minsup, X is a frequent itemset if ?(X) > minsup.

Definition 3. Support of an Association Rule The support of the association rule, X ? Y , where X ? I, Y ? I, and X ? Y = ?, is given by  ?(X ? Y ) = ?(X ? Y )  Definition 4. Confidence The confidence of the association rule X ? Y , where X ? I, Y ? I, and X ? Y = ?, is given by  conf(X ? Y ) = ?(X ? Y ) ?(X)  = ?(X ? Y )  ?(X)  Definition 5. Anti-monotone Property of Support If X and Y,X ? Y , are two itemsets, then ?(Y ) ? ?(X).

The downward closure or anti-monotone property [22] of standard support provides an efficient way to find frequent itemsets and is the foundation of the well-known Apriori algorithm [2]. If a new support measure also possesses the anti-monotone property, then we may be able to find its cor- responding patterns efficiently.

2.3 Framework for Generalizing Support:  A Review  In [17] we proposed a framework for generalizing sup- port that views support as the composition of a pattern evaluation and summarization function. We summarize the three key components of this framework: pattern evaluation functions, summarization functions, and support functions.

2.3.1 Pattern Evaluation Functions  The evaluation of the strength of a pattern can take vari- ous forms. Most commonly, and this is the case for tra- ditional association analysis, the pattern is either present, i.e., the pattern strength is 1, or it is absent, i.e., the pattern strength is 0. (We call such patterns Boolean association patterns.) More generally, the evaluation of strength can be a real number. Note that a pattern evaluation function defines a pattern.

Formally, an evaluation function, eval, is a function that takes a set of of attributes X ? I as an argument, and re- turns a pattern evaluation vector, v, whose ith component is the strength of the pattern in the ith object. Thus, we can write  v(t) = eval(t,X), ?t ? T or v = eval(X) (1)  If there are several sets of attributes under consideration, e.g., X and Y , then we will distinguish between their pat- tern evaluation vectors by using subscripts, e.g., vX and vY . Various eval functions are shown in Table 2. Note that X = {i1, i2, ? ? ? , ik} ? I.

Table 2: Pattern evaluation functions.

eval function Definition 1 ? eval?(t, X) = D(t, i1) ? . . . ? D(t, ik)  ? eval? (t, X) = D(t, i1) ? . . . ? D(t, ik)  3 min evalmin(t, X) = min1?j?k {D(t, ij)} 4 max evalmax(t, X) = max1?j?k {D(t, ij)} 5 range evalrange(t, X) = evalmax(t, X)? evalmin(t, X)  strong ETI evaleti,?(t, X) = ?  i?X D(t,i) |X| ? 1 ? ?  Table 3: Summarization functions.

norm function Definition  1 Lk ||v||k = k ?? M  t=1 |v(t)|k 2 L1 ||v||1 =  ? M t=1 |v(t)|  3 L2 ||v||2 = ?? M  t=1 |v(t)|2 3 L22 ||v||22 =  ? M t=1 |v(t)|2  4 weighted sum normw(v, w) = ? M  t=1 w(t)v(t)  2.3.2 Summarization Functions  The pattern evaluation vector v can be summarized by a single number, e.g., by using a vector norm [7]. A com- mon vector norm is the Lk norm which is defined in Table 3, along with two of its most useful specific versions, the L1 and L2 norms. Another useful norm is the squared L2 norm, L22, which is the sum of the squares of the compo- nents of v. To refer to such norm functions, we use the no- tation Lk or normLk . We can also consider norm functions that are weighted sums. Table 3 shows these summarization functions. Note that M is the length of the vector, k is a parameter (1, . . . ,?), w is a vector of weights, and | ? | is the absolute value function.

2.3.3 Generalized Support Functions  The support of a pattern among a set of attributes X can be defined as a function, ?(X), that is the composition of a pat- tern evaluation function, eval, and function, norm, which summarizes these evaluations with a single number.5  ?(X) = (norm ? eval)(X) = norm(eval(X)) (2)  Given a support function, the goal is to use it to find sets of attributes that meet some support criterion. For instance, if the support function has the anti-monotone property, then by setting a minimum support threshold minsup and using an algorithm such as Apriori, we can find a collection of strong pattern sets;6 i.e., a collection of sets of attributes that have support greater than minsup.

We adopt the following notation to refer to the different types of support functions that we have created:  ?eval, norm = norm ? eval (3) 5More formally, ? : ?(I) ? ?, where ? is the set of real numbers  and ?(I) is the set of all subsets of I.

6The name frequent itemset is not appropriate in the general case.

For example, the support function that is based on the evalmin and normL22 functions is written as follows:  ?min, L22 = normL22 ? evalmin = ||evalmin|| 2 (4)  2.3.4 Example: Boolean Support Functions  A Boolean support function, ?b, L1 , is any support func- tion that uses a Boolean pattern evaluation function evalb and the L1 norm. (A Boolean pattern evaluation function returns either 0 or 1.) An example is the traditional sup- port of an itemset X , which can be expressed as ??, L1 and which is equivalent to counting the number of transactions for which a conjunction of of the items (binary attributes) in X is true. This approach can be generalized?see for ex- ample [5, 16]?to more general Boolean formulas that use the logical connectives ? (and), ? (or), and ? (not). Also, a Boolean pattern evaluation function need not represent a Boolean formula and the data need not be binary. Table 4 shows the computation of support for the Boolean support function, ??, L1 .

Table 4: Computation of support for ??, L1 .

transaction/attrbute i1 i2 i1 ? i2 t1 1 0 1 t1 0 0 0 t1 1 1 1 t1 0 1 1  Support 2 2 3  2.3.5 Example: Support for Continuous Data  An example of support for continuous data is provided by the Min-Apriori algorithm [9], which corresponds to using the support function ?min, L1 . To adjust for differences in the scales of attributes, Min-Apriori first normalizes the data in each column by dividing each column entry by the sum of the column entries. Then, the support of a set of attributes is computed by taking the minimum value in each row and summing the resultant values. The Min-Apriori process of computing the support of already normalized data is illus- trated in Table 5.

Table 5: Computation of support for two normalized at- tributes using Min-Apriori.

transaction/attrbute i1 i2 min(i1, i2) t1 0.45 0.55 0.45 t1 0.25 0.05 0.05 t1 0.30 0.25 0.25 t1 0.00 0.15 0.00  Support 1.00 1.00 0.75  3 A Framework for Confidence We first consider the traditional approach to confidence,  which is based on support, and some of its limitations.

We then present a general approach to defining confidence, which is based on the pattern evaluation vectors of the two association patterns, and provide some specific examples.

In the remainder of this section, we present a couple of ex- amples to show how a generalized approach to support can be used to (1) define support for Boolean association pat- terns, including ETIs and (2) define a confidence measure for continuous data that agrees with traditional confidence for binary transaction data.

3.1 Traditional Approach to Confidence  For binary transaction data, the traditional approach to confidence for two itemsets, X and Y is based on support, i.e., conf(X ? Y ) = ?(X?Y )?(X) . Thus, it seems reasonable to attempt to define confidence for Boolean association patterns or continuous data in the same way, realizing, of course, that the support functions in these cases may be different than standard support. Indeed, the Min-Apriori algorithm defines support in just this way.

However, as indicated by the following two examples, this straightforward approach does not yield the desired results.

Example: Strong Error-Tolerant Itemsets Here we at- tempt to use traditional confidence for a binary association pattern known as a strong ETI. Definition 6 provides a for- mal definition of a strong ETI [21]. For brevity, we will use the term ETI instead of strong ETI.

Definition 6. Strong Error Tolerant Itemset A strong ETI consists of a set of items X ? I, such that there exists a subset of transactions R ? T consisting of at least ? ? M transactions and, for each t ? R, the fraction of items in X which are present in t is at least 1? ?. ? is the minimum support expressed as fraction, M is the number of transactions, and ? is the fraction of missing items.

For this example, we will use the data shown in Table 6.

Also, we require that each transaction contains at least 3/8 of the specified items (? = 5/8) and that half the transac- tions support the pattern (? = 0.5). If X = {i1, i2, i3, i4} and Y = {i5, i6, i7, i8}, then both X and Y are ETIs with a support of 4 transactions.

Table 6: Sample data set to illustrate confidence for ETIs.

i1 i2 i3 i4 i5 i6 i7 i8 t1 0 1 1 1 0 0 0 0 t2 1 0 1 1 0 0 0 0 t3 1 1 0 1 0 0 0 0 t4 1 1 1 0 0 0 0 0 t5 0 0 0 0 0 1 1 1 t6 0 0 0 0 1 0 1 1 t7 0 0 0 0 1 1 0 1 t8 0 0 0 0 1 1 1 1       Computing conf (X ? Y ) using the traditional defini- tion of support yields  conf(X ? Y ) = ?(X ? Y ) ?(X)  =  = 2.

This seems quite odd because (1) the confidence is larger than 1 and (2) the ETI pattern in X never co-occurs with the ETI pattern in Y . Thus, for ETIs, the traditional notion of confidence does not seem appropriate. Later, we will in- dicate how to define confidence for ETIs and other Boolean association patterns.

Example: Confidence for Continuous Data Using Min- Apriori Although Min-Apriori also uses the traditional, support-based definition of confidence, it first normalizes the data and uses the support function, ?min, L1 . However, if Min-Apriori is given binary transaction data, it does not always yield the same confidence values as the standard def- inition of confidence. We illustrate this with the data shown in Table 7. The original data is shown in Table 7(a), Table 7(b) shows the data after it has been normalized, and Table 7(c) shows the evaluation vectors. Using traditional confi- dence, we obtain  conf(CD ? AB) = ?(ABCD)/?(CD) = 2/4 = 0.5.

However, using ?min, L1 as our support function, we get  conf(CD ? AB) = ?min, L1(ABCD) ?min, L1(CD)  = (2/6)/(4/5)  = 5/12 = 0.42.

(a) Sample data.

A B C D 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 1 0  (b) Normalized data.

A B C D 1/6 1/3 1/5 1/4 1/6 1/3 1/5 1/4 1/6 0 1/5 1/4 1/6 0 1/5 1/4 1/6 1/3 0 0 1/6 0 1/5 0  (c) Eval vectors.

AB CD ABCD 1/6 1/5 1/6 1/6 1/5 1/6 0 1/5 0 0 1/5 0  1/6 0 0 0 0 0  Table 7: Data for confidence calculations of Min-Apriori  3.2 A More General Approach  A support based approach to confidence is based on a summarization of the evaluation vectors of the patterns. A more general approach is to define confidence based di- rectly on the pattern evaluation vectors themselves. We present the general framework and some specific examples.

3.2.1 A General Definition of Confidence  Most generally, we view confidence as a measure of the in- formation that one association pattern provides about an- other. Specifically, we view confidence as a function that quantifies the relationship between the evaluation vectors of a pair of association patterns. This is captured by the following definition.

Definition 7. A General Definition of Confidence If X ? I and Y ? I, X ? Y = ?, are sets of attributes, then confidence can be defined as a function  conf(X, Y ) = conf(eval(X), eval(Y )) = conf(vX ,vY ) (5)  that maps the evaluation vectors of the two association pat- terns to a real value.7  Of course, we are not interested in just any function, but rather those functions that (1) capture the extent to which the strength of one association pattern can be used to pre- dict another or (2) capture the proximity (similarity or dis- similarity) between the two association patterns. The next section illustrates the proximity-based approach.

3.2.2 Proximity-Based Approach  When the pattern evaluation vectors vX and vY are contin- uous, it seems reasonable to consider, as confidence mea- sures, some of the similarity or distance measures that have been developed for evaluating the strength of a connection between two continuous vectors. We introduce four poten- tial measures. Note that the eval and norm functions can be those listed in Tables 2 and 3, respectively, as well as other functions not listed in those tables. Also note that, un- like traditional confidence, these definitions of confidence are symmetric with respect to the order of X and Y .

Definition 8. Distance-based Confidence of an Associa- tion Rule  conf(X ? Y ) = norm(eval(X) ? eval(Y )) (6) Definition 9. Correlation-based Confidence of an Associ- ation Rule  conf(X ? Y ) = corr(eval(X), eval(Y )) (7) Definition 10. Cosine-based Confidence of an Association Rule  conf(X ? Y ) = cos(eval(X), eval(Y )) (8) Definition 11. Bregman Confidence of an Association Rule  conf(X ? Y ) = D?(eval(X), eval(Y )) (9) where D? represents a class of functions known as Bregman divergences [4], which includes proximity measures such as squared Euclidean distance and the Mahalanobis distance.

7More formally, conf : (?M ,?M ) ? ?, where ? is the set of real numbers and M is the number of objects.

3.3 Confidence for Boolean Evaluation Functions  In this section, we use the framework described above to generalize the interpretation of confidence as conditional probability to the case of general Boolean support functions.

We show that this definition also works for ETIs.

Given two attributes X and Y , and a Boolean pattern evaluation function, what we are seeking is a measure of the strength of the connection between the pattern eval- uation vectors of X and Y . For Boolean pattern eval- uation functions, the resulting pattern evaluation vectors, vX = evalb(X) and vY = evalb(Y ) are binary vec- tors, and this simplifies the task of selecting a measure with which to evaluate the strength of the connection since corresponding entries of vX and vY either match or they don?t. A further simplification arises if we impose the ad- ditional assumption that only the presence of a pattern (a value of 1) is important. This reduces the problem of defin- ing confidence for a general Boolean support function to be one of predicting whether an entry of vY is 1 when the corresponding entry of vX is 1. Conceptually, this is Prob(vY (t) = 1|vX(t) = 1) whose empirical approxima- tion is the fraction of entries where vX and vY are both 1; i.e., Prob(vY (t) = 1?vX(t) = 1), divided by the fraction of entries where vX(t) is 1, i.e., Prob(vX(t) = 1).

Given this discussion, we can provide the following gen- eral definitions of the support and confidence of an associa- tion rule when using a Boolean support function:  Definition 12. Support of an Association Rule for Boolean Support Functions Given two disjoint sets of attributes X and Y , and a Boolean support function, ?b, L1 , based on a Boolean pat- tern evaluation function evalb and the L1 norm, the support of X ? Y is given by  ?b, L1(X ? Y ) = |{t ? T : vX(t) = 1 ? vY (t) = 1}|.

Definition 13. Confidence of an Association Rule for Boolean Support Functions Given two disjoint sets of attributes X and Y , and a Boolean support function ?b, L1 , based on a Boolean pat- tern evaluation function evalb and the L1 norm, the confi- dence of X ? Y is given by  conf(X ? Y ) = Prob(Y |X)  = Prob(X ? Y )  Prob(X)  = |{t ? T : vX(t) = 1 ? vY (t) = 1}|  |{t ? T : vX(t) = 1}|  = ?b, L1(X ? Y )  ?b, L1(X)  where we have used Definition 12 and the fact that |{t ? T : vX(t) = 1}| = ?b, L1(X).

Thus, a view of confidence as conditional probability is appropriate, even in the case of a general Boolean support  function. However, this does not mean that we can use the standard approach for computing confidence in the general case. In particular, if we followed the approach in standard association analysis, we would use ?b, L1(X ? Y ) = |{t ? T : vX?Y (t) = 1}| = ?b, L1(X ? Y ) instead of ?b, L1(X ? Y ) = |{t ? T : vX(t) = 1 ? vY (t) = 1}|, as given in Definition 12. The equivalence of these two approaches is a special case and does not hold in general.

Example: Strong Error-Tolerant Itemsets (Continued) To compute conf(X ? Y ), as given in Definition 13, we need to compute the support of X ? Y using Definition 12. In turn, this requires us to ?and? the pattern evaluation vectors of X and Y and then sum the resultant vector. The ETI pattern of X occurs only in the first four transactions, while that of Y occurs only in the last four transaction. If ? denotes the componentwise ?and? function, then  ? ??????????   ? ??????????  ?  ? ??????????   ? ??????????  =  ? ??????????   ? ??????????  ,  and consequently,?eti, L1(X ? Y ) = 0. Therefore,  conf(X ? Y ) = ?eti, L1(X ? Y ) ?eti, L1(X)  = 0/4 = 0,  which is much more intuitive than our previous result.

To summarize, an approach that tries to measure the  strength of the connection between the pattern evaluation vectors of two sets of attributes, leads naturally to a defini- tion of confidence as a conditional probability for Boolean support functions (with the assumption that only 1?s count).

Furthermore, this approach yields a definition of support that is applicable to all Boolean support functions and is consistent with confidence as traditionally defined.

3.4 A Confidence Measure for Continuous Data that Agrees With the Standard Definition of Confidence  Here we derive a confidence measure for continuous data that agrees with traditional confidence when used on bi- nary transaction data. We begin by proving Theorem 3.1, which indicates that the confidence of the association rule X ? Y for Boolean support functions equals the cosine measure between the evaluation vectors of X and Y multi- plied by a factor that depends on the relative support of the two itemsets. This theorem serves as the basis for our ap- proach, as well as being interesting in its own right. Note that if both association patterns have the same support, then the confidence simply reduces to the cosine of their pattern evaluation vectors, i.e., cos(evalb(X), evalb(Y )). In this case, confidence is also symmetric, i.e., conf(X ? Y ) = conf(Y ? X).

Theorem 3.1. Given a Boolean support function ?b, L1 ,  conf(X ? Y ) = cos(evalb(X), evalb(Y )) ?  ?b, L1(Y )  ?b, L1(X) (10)  Proof.

conf(X ? Y ) = ?b, L1(X ? Y ) ?b, L1(X)  = evalb(X) ? evalb(Y )  ||evalb(X)||22 = cos(evalb(X), evalb(Y ))  ||evalb(Y )||2 ||evalb(X)||2  = cos(evalb(X), evalb(Y ))  ? ?b, L1(Y )  ?b, L1(X)  where evalb(X) ? evalb(Y ) is the dot product of evaluation vectors of X and Y , respectively. We have used the the defi- nition of the cosine measure, cos(x,y) = x ?y/||x||2||y||2, as well as the following pair of facts: ?b, L1(X ? Y ) = evalb(X) ? evalb(Y ) and ?b, L1(X) = ||evalb(X)||1 = ||evalb(X)||22.

A useful property of the cosine measure is that if two vectors are multiplied by (potentially different) non-zero constants, their cosine measure is unchanged. As a result, if we normalize each attribute of a binary transaction ma- trix to have an L1 norm of 1, then the cosine measure be- tween attributes does not change. Thus, if we can express?  ?b, L1(Y )/?b, L1(X) in terms of support based on the Min-Apriori support function, ?min, L1 , then we will have an alternative definition of confidence that matches the stan- dard definition of confidence for binary transaction data and works for continuous data.

Theorem 3.2. For traditional binary transaction data whose attributes have been normalized to have an L1 norm of 1 and an itemset X = {i1, . . . , ik} of size k, ?min, L1(X)/c = ?(X), where c is the mean of the non- zero entries of evalmin(X) and ?(X) is the traditional sup- port of the attributes X for the original, unnormalized data.

Proof. First, notice that when attribute ij is normalized, its non-zero entries become 1/?(ij). Thus, all the non-zero entries of evalmin(X) have the value min(1/?(ij)). Triv- ially, the average of the non-zero values of evalmin(X) will be c = min(1/?(ij)). Furthermore, evalmin(X) will have ?(X) such entries, one for each transaction where all the attributes of X are all non-zero. Thus, ?min, L1(X) = c ?(X), and the theorem follows.

Using the previous two results We get a new definition of confidence for continuous data that is normalized to have an an L1 norm of 1.

Definition 14. New Definition of Confidence for Contin- uous Data  conf(X ? Y ) = cos(evalmin(X), evalmin(Y )) ?  ?min, L1 (Y )/cY  ?min, L1 (X)/cX ,  where cX (cY ) is the mean of the non-zero values of evalmin(X) (evalmin(Y )).

We emphasize that this is a mathematical result and we are not claiming that Min-Apriori with this confidence mea- sure should be preferred to the original Min-Apriori. In- deed, if cosine similarity were used as a measure of confi- dence, then it would work for both binary transaction data with traditional support and for continuous data using the Min-Apriori approach. Regardless, we feel that the ability to derive results such as this indicates the potential value of our framework for generalizing confidence.

We provide a numerical illustration of the result that we have just derived, using the data in Table 7. Recall that conf(CD ? AB) = 0.5 when we use traditional confi- dence. Using Table 7(c), we will apply Definition 14 with X = {C,D}, and Y = {A,B}. Summing column AB of Table 7(c), we get ?min, L1(AB) = 3/6. Summing col- umn CD of Table 7(c), we get ?min, L1(CD) = 4/5. From Table 7(c), we see cAB = 1/5 and cCD = 1/6. Finally, cos(evalmin(CD), evalmin(AB)) = 1/  ? 3. Thus, the con-  fidence given by Definition 14 is  conf(CD ? AB) = 1?  ? (3/6)/(1/6) (4/5)/(1/5)  = 1?  ?  =  ?  = 0.5.

4 Related Work While other work in association analysis does not pro-  vide a general framework for extending the notion of confi- dence, some work has considered other measures for evalu- ating association rules. Most notably, correlation has been proposed as a substitute for traditional confidence [6]. More common is work that focuses on recognizing new patterns, that is, proposing new evaluation functions. One example is error tolerant itemsets (ETIs) [21], which were used in this paper. As another example, the approach to general- ized itemsets presented in [10] seeks to find both sets of attributes and attribute values that are more probable than usual, i.e., that represent a ?bump? in the probability density function describing the data [8]. As a final example, some recent work uses a Boolean retrieval model to generalize the notion of an itemset [5, 11]. In this approach, the patterns of interest are any Boolean formulae that involve binary vari- ables and the logical connectives ? (and), ? (or), and ? (not).

Quantitative association rules [3, 13, 15, 20] try to pre- dict the values of one set of attributes from another. There has also been some work in integrating regression with as- sociation analysis [14]. However, both these approaches are distinct from our view of association rules and confidence, which involves only the prediction of the strength/presence of one pattern from another.

Our work is also different from that of constraint-based association analysis as typified by [12] or [16]. Although our pattern evaluation functions may seem similar to the constraints used in those approaches, our pattern evalua- tion functions can be non-Boolean functions that return con- tinuous values. Conceptually this is a shift from evalu- ating whether a patterns occurs in an object to evaluating the strength of a pattern in a particular object. Also, most constraint-based association analysis focuses on added effi- ciency, while our focus is on new types of data and patterns.

5 Acknowledgments  This work was partially supported by NASA grant #NCC 2 1231, NSF grant #ACI-0325949 and by the Army High Performance Computing Research Center under the aus- pices of the Department of the Army, ARL cooperative agreement number DAAD19-01-2-0014. The content of this work does not necessarily reflect the position or pol- icy of the government and no official endorsement should be inferred. Access to computing facilities was provided by the AHPCRC and the Minnesota Supercomputing Institute.

6 Conclusions and Future Work  We have described a framework for generalizing the no- tion of confidence and have shown that this framework can be used to express confidence for general Boolean patterns, including error tolerant itemsets. We have also shown that this framework can be useful for continuous data by pre- senting an example of the use of a generalized notion of confidence to derive a confidence measure for continuous data that agrees with traditional confidence for binary trans- action data.

There is a need for efficient algorithms for finding high- confidence association rules for non-traditional patterns and non-binary data sets. Also, experiments are needed to eval- uate the usefulness of such association rules. This includes a comparison to results obtained from converting the data into binary transaction data. Areas for investigation in the theoretical area include exploring the appropriate defini- tions of confidence to accompany various support functions that have been defined. It would also be worthwhile to ex- plore using interestingness measures of association patterns [18] for the functions used to combine the pattern evaluation vectors.

