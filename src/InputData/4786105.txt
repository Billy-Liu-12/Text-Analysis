

Abstract- Conventional PACS systems are designed based on centralized data repository architecture, for integrity and security reasons. This design is highly sensitive to escalation in number of retrieval and storage operations, which represents a major limitation that reduces the efficiency of PACS used in applications that require repetitive data access e.g. medical education and medical decision support systems. In this work, we propose two techniques to overcome this limitation, without changing the PACS architecture. The first one, is based on reducing the number of data requests on PACS archiving server using a virtual distributed system; the second one, is based on redistributing data requests over time, using a prediction system. Simulation results show significant improvement in performance up to several orders of magnitude compared to conventional PACS design.

Keywords -PACS, Virtual distributed system, Prediction system, Association rule mining

I. INTRODUCTION   Medical image interpretation relies mainly on experience  and patient medical history in reaching a correct diagnosis.

Therefore, there is a growing need for a system that enables storage, fast retrieval and viewing of medical images, especially for large sized hospitals and clinics. This system is what was termed Picture Archiving and Communication System (PACS).   Despite the tangible significance of PACS, it cannot individually offer added-value to health-care services without integrating other medical information systems such as Radiology Information System (RIS), Patient Information System (PIS), and Laboratory Information System (LIS). The intended integration of different medical systems is called Integrated Medical Information System (IMIS). In general, IMIS is designed as a closed system that provides services for a limited number of users. Standard IMIS is designed based on centralized data repository architecture [1], where medical images and data are usually archived in large high-performance servers. One of them is the PACS server that provides all medical image retrieval and storage services for different workstations, where one or more servers are used for all other medical information systems (PIS, RIS, LIS, etc.). In this centralized architecture, when the number of retrieval and storage operations increases, the archiving servers are expected to be loaded and become a bottleneck. This made the IMIS play a limited role in medical education, and medical decision support, since both require repetitive data access.

In centralized architecture, as shown in figure 1, medical images are transferred from different modalities and acquisition workstations to PACS central node, PACS controller and archiving system. Received images in PACS central nodes are stored in archiving system, then the radiologists and clinicians use display workstations to view images. Every viewed image is read from the archiving system, and transferred to requesting display-workstation.

Even if an image was viewed more than once, it will be read from the archiving system for every request. In case of university hospital, medical students and trainees perform large number of images requests. Every request is sent to the PACS central node, and the requested image(s) are read from the archiving system. This non-trivial increasing in number of images requests increases the load on archiving system.

Moreover, if the PACS is integrated with other medical images systems, e.g. tele-radiology, or a content based image retrieval CBIR systems, [2][3] the load on the archiving system will increase dramatically, because such systems require repetitive image reading. Increased load in addition to fact that images? requests are not uniformly distributed over time, raise the probability of chunk in the system.

In this work, we provide a strategy to reduce the effect of  number of data requests on the server without modifying the centralization of system architecture. The proposed strategy consists of two techniques. In the first technique, the number of data requests is reduced, based on proposed virtual distributed system (VDS). In the second one, the data requests are redistributed over time using a prediction technique, based on association rule mining. This work concentrates on medical images and videos rather than text because the size of text data can be negligible compared to images and videos. In the beginning of this paper, we shall discuss the traditional design of PACS, as well as the proposed strategy; finally, we will discuss the simulation, experiment, and results.

Fig. 1: Image transfer directions in conventional PACS.

AN EFFICIENT STRATEGY FOR PACS A. M. Ghanem2, B. Tawfik1, and M. I. Owis1  1Biomedical Engineering Department, Cairo University, Giza, Egypt 2Faculty of Information Systems, Suez Canal University, Ismailia, Egypt  e-mail: ahmed@optimal-sys.com  Images transfer direction PACS Archiving  Server Teleradiology  CBIR Server  Display workstations

II. METHODOLOGY   The proposed design consists of two systems. The first one is virtual distributed system (VDS); the second one is prediction system. The main target of VDS is reducing the number of requests on the PACS archiving server, while prediction system redistributes the requests to reduce the probability of system chunks. Any image request is sent to both VDS to retrieve the image, and prediction system to predict the next requested images, and send the predicted requests to VDS with lower priority.

A. Virtual distributed system (VDS)   Medical images and data in IMIS must be stored in  archiving servers for integrity and reliability reasons.

Therefore, the number of access times to the secondary storage server cannot be reduced. Meanwhile, there is no restriction to prevent workstations from retrieving the medical images and data from archiving servers, if there are other workstations having an updated copy of the requested data. Several copies of images are temporarily stored in acquisition workstations, or modalities? workstations, before the images are transferred to the archiving server. Other temporary copies are created by display workstations. The proposed virtual distributed system (VDS) uses these temporary copies of images, instead of retrieving them from the archiving servers with every data request. As shown in figure 2, the requested images can be read from the archiving server or from any other workstation in the system, if this workstation has a temporary copy from the requested image.

This technique reduces the number of requests received by the archiving server.

The data flow of the proposed VDS can be summarized for both acquisition and image requests as follows. First, upon any acquisition:  (1) The acquisition workstation transfers the image to the main archiving server  (2) The display workstation sends its IP and the image ID to an extra-added server (called the retrieval management server (IRMS)).

(3) The IRMS stores the image ID and the workstation IP in its database.

Second, when any workstation (e.g. workstation A) requires retrieving an image, (1) It sends an image request to IRMS containing its IP,  image ID and request priority.

(2) The IRMS searches for the workstation (e.g.

workstation B), that contains a temporary copy of the requested image  (3) The IRMS replies to workstation A with the IP of workstation B then workstation A resends the request to it.

(4) Subsequently, workstation B, adds the request into its requests? queue based on its priority. When the request is in the front of queue, workstation B sends the required image to workstation A.

(5) The image ID, and workstation A IP are stored in IRMS database, since the workstation A now has a copy of the image. If there is no temporally copy of the required image, the IRMS resends the request to the archiving server.

There are two issues to be considered while creating the virtual distributed system: (1) designing the temporary database space on the different workstations, and (2) designing the IRMS.

A.1. Temporary space design   1. The data space that holds the temporary copies must be managed without installing a special database engine for this purpose. It is expensive to install database engines support BLOB data on every workstation; moreover, database engine reduces the performance of the workstations since they are not configured to be archiving servers.

2. In workstations, temporary data spaces are bounded in size therefore, a mechanism must be devised to replace old image data with new images. Least-recently used strategy (LRU), is employed to keep the most recently used images, and delete the least used ones, whose space will be used to hold new data.

Images in temporary data space are managed through a database table that contains image ID, image location in data space, image size, and last access time field, which is used by the LRU strategy. Workstations update the data in IRMS with every operation of addition and/or deletion in the temporary data spaces.

A.2. Image retrieval management server (IRMS)   The database tables of IRMS reflect the contents of all temporary data spaces in all workstations to maintain the integrity of the system. Many images may have more than one temporary copy on several workstations;  Fig. 2: Image transfer directions in the proposed PACS.

Images transfer direction PACS Archiving  Server Teleradiology  CBIR Server  Display workstations     therefore, for a single image ID there may be many workstation IP addresses. When these images are requested, IRMS should reply with IP of the workstation that gives optimal (or at least sub-optimal) solution according to the conditions of network traffic, and workstations loads. For network traffic, a good (sub- optimal) solution can be obtained from a static network map of workstation, sub-net and different network devices. Optimal solutions can only be obtained from dynamic network traffic monitoring. In our system, we design IRMS, with a solution based on static network map, because of the benefit of using dynamic monitoring over static network map, is trivial compared to the complexity of the dynamic monitoring system.

B. Prediction system (PS)  The proposed prediction system (PS) is based on association analysis; therefore, we?ll first introduce the association analysis, and then, describe how it is used in the proposed system. Association analysis is concerned with the discovery of association rules, revealing conditions that occur frequently together in a given dataset. Based on the terminology of [4], the Boolean ARM is briefly described as follows:  Let I={i1 , i2 , ?.., in} be a set of n binary literals called items. A transaction Ti is a set of items in I such that Ti ?  I. A database D is a set of transactions. A transaction Ti is said to contain a certain set of items (itemset) C, iff C ?  Ti. The support of an itemset C ,sup(c),  is the percentage of transactions that contain C. An itemset is considered as frequent one if its support is greater than or equal to minimum support (user defined value). The association rule is presented in the form  A  B  ( read: A implies B), where A and B are two itemsets, and  A ? B = ? . The association rule support is the support of an itemset C where C = A U B. The rule is frequent iff itemset C  is frequent. The confidence in the rule is the conditional probability P(B|A)(probability that a transaction contains B, given that it contains A). An association rule is considered of interest, if it is frequent, and its confidence is greater than or equal minimum confidence (user defined value). This form of association analysis discovers the events that frequently occur together in the same transaction, and provides rules based on these events which are called intra-transaction association rules. Another type of association analysis concentrates on the relations between transactions, and provide rule in form, if event A happened, event B will occur after x minutes with support s and confidence c ( A  B (x,s,c) ), the association rules in this form is called inter-transaction association rules[6][7].

In the proposed prediction system, association analysis techniques are used to generate inter-transaction association rules, using both data requests performed by each user, and time schedules of operation rooms and image modalities. The resulting rules describe the data requests patterns of each user. These patterns are stored in hash tree, and used in the  prediction process.  The association rule mining, and rules archiving are performed by our proposed management server.

The management server monitors data requests from each user, and uses the discovered association rules to create a list of data requests, and the estimated request time for each data request. A priority factor is set for every data request, and then the list of requests is sent to our virtual distributed system. The priority factor of any request is calculated based on the request time, and the confidence of the association rule that is used in prediction of this request. The virtual distributed system performs a data request based on data availability, request priority, and PACS servers? loads.

Example  (1) User requests an image using workstation 1 (WS1).

(2) WS1 sends the request to IRMS (3) IRMS checks its database to find a workstation, that  contains the required data, (e.g. workstation 2 WS2), then IRMS sends the IP of WS2 to WS1.

(4) WS1 sends an image request to WS2.

(5) WS2 replies WS1 with the required image.

(6) After IRMS replies WS1 with the IP of WS2, it  sends a copy of the request to Prediction System (PS).

(7) PS uses its list of association rules to predict the list of next image requests, with priority and time of each and sends the requests list to IRIM.

(8) For every request in the list, IRIM checks its database to find the workstation that contains the required image, then IRIM sends the list of requests to WS1, and the list of  workstations and/or servers IPs that contain the required image.

(9) Assume the data of the first predicted request found in PACS archiving server; WS1 sends the image request with its priority to PACS archiving server.

(10) Archiving server adds the request in its queue of requests, based on request priority. When the request comes to the front of the queue, server will sends the required image to WS1.

(11) When the user enters the next image request, WS1 checks, if it was received from other workstation, and/or server as a reply on the predicted request. If yes, WS1 reads the image from its Hard disk (HD), and displays it to the user. If no, WS1 sends the request to IRMS to start the cycle again.



III. SIMULATION   In this section, we are going to evaluate our proposed  design by simulating both a conventional design, and our proposed one, then running the two simulations at different loads. We shall simulate only the PACS part of the IMIS, because, for the same number of data requests, the size of retrieved and transferred data in PACS, is the largest compared with the other medical information systems. This section is divided into two parts. In the first part, we shall list the simulation assumptions for this PACS. In the second part, we are going to discuss a selected real implemented PACS system, by describing the hospital real data.

A. Simulation assumptions   (1) Time interval between patient arrivals has exponential distribution.

(2) No delay due to an error, or other physical damage in network or servers.

(3) Acquisition and displaying workstations in PACS are used only for PACS operations.

(4) Delay due to transferred text data on the network is negligible compared to delay due to image transfer.

(5) The radiologists are available all time, i.e. no delay in accessing them.

(6) The database tables in the acquisition, display workstations, and IRMS, are small enough to be fetched in their local memory.

(7) In LRU strategy for replacing images in temporary space, the added image has the same size of the deleted image, i.e. there is no fragmentation in temporary data space, and no need for de- fragmentation strategy.

B. Simulation data  The case study is the PACS system that is physically implemented in the Klinikum Deggendorf hospital in Germany and was installed by Philips in 1998. The hospital has a comprehensive institute for diagnostic and interventional radiology. Data were available from a study of Philips about the effect of PACS on the performance of the hospital in the period from July 1998 to June 1999 [8]. The hospital serves a population of about 120000 inhabitants, and contains 450 beds in seven departments. There are 18 different modalities connected to the PACS. 562000 radiological examinations were carried out on 49500 patients.

37% of the examinations were carried out on in-bed patients, and 63% on in-ambulant patients. The number of exposures per patient is 11.4. Dividing the total amount of data by the number of patients examined, and the number of examination gives a storage capacity requirement of about 19.8 Mbytes for each patient examined in the radiology department, and a value of 1.7 Mbytes per image. In 69% of the cases, the image of interest to the examiner that will be needed for the report comes immediately from examination, and in 31% of the cases, it requires the previous examinations.



IV. RESULTS   We used SimJava simulation package the simulation program is designed to simulate hospitals with different sizes, and facilities. We run the simulation, assuming that the PACS is implemented in a university hospital. Junior radiologists and medical students trained on PACS, assuming that they access the same number of images, as do expert radiologists, i.e. 50% of these images are from old cases, and the other 50% are from new cases.

Figure 3, shows a comparison of the average waiting times on the PACS archiving server RAID, for different number of trainees, between conventional PACS, VDS only, PS only, and both VDS and PS. As shown in figure, using VDS only  provides better result than using PS only, and using the two systems together reduces the average waiting time by more than one order of magnitude Vs using one system only.

Figure 4, shows the average queued image requests for different number of trainees in PACS archiving server. The figure shows that the performance of the proposed design is superior to conventionally designed PACS.



V. CONCLUSION   We have provided a solution that increases the efficiency of PACS used in applications that require repetitive image access for medical images e.g. medical education and medical decision support systems. The proposed solution is comprised of two techniques. The first one is based on managing and using the temporary copies of images by a virtual distributed system to reduce the number of image requests on PACS archiving server. The second one is based on reducing the probability of system chunks, by redistributing the image requests over time. The redistribution of requests is performed by a prediction system, based on association rule mining. The integration between the two proposed strategies increases the ability of PACS to integrate with other medical  Fig. 4: The average queue length in archiving server for proposed and conventional systems.

Fig. 3: The average waiting time on archiving server RAID in proposed and conventional systems.

systems that require repetitive image access for medical images.

