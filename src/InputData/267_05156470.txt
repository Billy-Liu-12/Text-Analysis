A Multi-level Ant-based Algorithm   for Fuzzy Data Mining

Abstract?In the past, we proposed a mining algorithm to find suitable membership functions for fuzzy association rules based on the ant colony systems. In that approach, the precision was limited since binary bits were adopted to encode the membership functions. The paper thus extends the original approach for increasing the accuracy of the results by adding multi-level processing. The membership functions derived in a level will be refined in the next level. The final membership functions in the last level are then output to the rule-mining phase for finding fuzzy association rules.

Keywords: data mining; ant colony system; fuzzy set; membership function; multi-stage graph

I. INTRODUCTION The fuzzy set theory has been used more and more  frequently in intelligent systems because of its simplicity and similarity to human reasoning [11]. As to fuzzy data mining, Hong et al. integrated the fuzzy-set concepts and the Apriori mining algorithm [1] to find fuzzy association rules [8]. It is important to define an appropriate set of membership functions, because it may have a critical influence on the final mining results in fuzzy data mining. A GA-based fuzzy data-mining method for extracting both association rules and membership functions from quantitative transactions was thus proposed [7].

Ant Colony System[2][5][6] has recently been successfully adopted to find nearly optimal solutions for difficult NP-hard problems, such as the Traveling Salesman Problem (TSP), Job Schedule Problem (JSP), Vehicle Routing Problems (VRP), etc [3][6][15]. The Ant Colony System algorithm has also emerged as a promising technique to discovery useful and interesting knowledge from a database such as finding classification rules [10][12]. However, the researches about data mining based on the ant colony system are still rare. Parpinelli et al. proposed an ACS-based approach to find rules from medical data [13].

Cordon and Herrera also proposed the mining of classification rules [4]. In this paper, we propose a multi-layered ant colony algorithm to solve the problem in which the maximum quantity of an item in the transactions may be large. It is an extension of our previous approach [9] by adding multi-level processing.

Numerical experiments on the proposed algorithm are also performed to show its effectiveness.



II. MULTI-LEVEL ACS-BASED MINING FRAMWORK The proposed multi-level ACS-based framework for fuzzy  data mining is shown in Fig. 1, where each item has its own set of membership functions. Each set of membership functions is then fed into the ant colony system to search for the final appropriate set. When the termination condition is reached, the best set of membership functions (with the highest fitness value) is then used to mine fuzzy association rules from a database.

d th  2 nd  1 st  Linguistic terms  Large Transaction Database  ??.....

ACS Fuzzy MF Acquisition process Fuzzy Mining for  Large 1-itemsets  Minimum confidence  Phase 1: Mining Membership Functions  Initial Graph constructed by Ants  Membership function1  Membership function2  Membership functionn  ??..

Minimum support  Membership function1  Membership function2  Membership functionn  ???..

? ..

? ..

? ..

? ..

Membership function1  Membership function2  Membership functionn  ???..

? ..

Final Membership Function set (1~n)  Fuzzy Mining  Phase 2: Mining Fuzzy Association Rules  Figure 1. The multi-level ACS-based framework for fuzzy data mining  In this paper, the ACS algorithm plays an important role in extracting the membership functions in Phase 1. In the past, Parpinelli et al. proposed the AntMiner to discover association rules [13]. They coped with categorical attributes and discrete values and showed that the ACS algorithm performed well on   The 28th North American Fuzzy Information Processing Society Annual Conference (NAFIPS2009) Cincinnati, Ohio, USA - June 14 - 17, 2009    handling discrete values in a solution space. In this paper, we further discuss the issue of handling quantitative and fuzzy values.



III. USING ACS ON FUZZY DATA MINING As the same as the previous approach in [10], the  membership functions of each item are encoded into a pair of binary strings. Each item has a set of membership functions, which are assumed to be the shape of an isosceles triangle for simplicity. The membership functions stand for linguistic terms, such as low, middle, high. Each membership function thus has two parameters, center and half the spread (called span). First, we use n binary-bits to encode the center and the span of a membership function for an item according to the quantity range of the item in the database. Assume there are three linguistic terms (membership functions) for an item Ij. Let Cj1, Cj2, Cj3 denote the three centers of the linguistic terms and Sj1, Sj2, Sj3 represent their spans. The pair of binary strings for the centers of the item will thus be represented by 12 bits, such as {(0, 0, 1, 1) (0, 1, 1, 1) (1, 1, 0, 1)} in Fig. 2. Similarly, the spans of each linguistic term will be encoded as {(0, 0, 1, 1) (0, 1, 1, 0) (0, 1, 1, 1)}.

Center  Span  Ci1  Si1 Si2 Si3  Ci2 Ci3  23 22 21 20  Figure 2. The string representation of membership functions for an item  After the membership functions are encoded, the ACS algorithm can then be applied to find the (nearly) optimal solution. As can be observed in Fig. 3, each position of a string includes two bits, one for the center and the other for the span.

Thus there are four cases, namely (0, 0), (0, 1), (1, 0), (1, 1). If the decision of each pair of bits is thought of as a node, then the problem can be transformed into a multi-stage decision problem.

Figure 3. The multi-stage graph transformed for the proposed ACS-based  mining algorithm  Just like solving TSP (traveling salesman problem), each ant can choose one of the four alternatives as its node in every stage. Therefore for the above example, there are twelve nodes and four selections of each node. As shown in Figure 3, there are 12 stages and each stage has four nodes. An ant will thus pass through the nodes, each of which is composed of a pair of (Cj, Sj). When an ant finishes a route with twelve nodes, one possible set of membership functions of an item will be  generated. Ants thus continue repeating this process until the termination condition is reached. The best set of membership functions (with the highest amounts of pheromone) obtained so far is thus output for fuzzy data mining.



IV. MULTI-LEVEL ACS-BASED FUZZY MINING In this section, the proposed multi-level ACS-based mining  algorithm is described below. Some basic set-up is first introduced. A flow chart for the proposed algorithm is then designed and explained. The entire algorithm is finally given.

A. Initial Population and Fitness Functions As mentioned above, each item will have a set of  isosceles-triangular membership functions. The membership functions stand for the linguistic terms such as low, middle, and high. The proposed approach would thus like to search for an appropriate set of membership functions from a given set of quantitative dataset. Since the ant algorithm has to use some ants to search for the solutions, a population of ants is thus initialized and then updated during the evolution process.

The fitness value of a possible solution is according to the criteria proposed by Hong et al. [7], which is defined as follows:  ysuitabilit Lf || 1= .

where |L1| is the number of large 1-itemsets obtained by using the set of membership functions in an ant. The suitability factor is designed to reduce the occurrence of the two bad kinds of membership functions shown in Fig. 4, where the first one is too redundant, and the second one is too separate.

5 8 9  Low Middle High  Quantity0  (a)  5 20 25  Low Middle High  Quantity0  (b)  5 8 9  Low Middle High  Quantity0  (a)  5 20 25  Low Middle High  Quantity0  (b)   Figure 4. The two bad types of membership functions  The suitability of the membership functions includes two items, the overlap factor designed for avoiding the first bad case and the coverage factor designed for avoiding the second bad case. The calculation for the suitability for Item Ij is thus designed as follows:  ).(_)(_)( jjj IfactorcoverageIfactoroverlapIysuitabilit +=  The overlap factor is defined as follows:  .]1)1), ),(  ),( (([_  1 1  1? ?  ?= k jkj  jkj  RRmin RRoverlap  maxfactoroverlap  The term overlap(Rjk, Rji) represents the overlap ratio of two membership functions Rjk and Rji, which is defined as the overlap length divided by the minimum span (half the spread) of the two functions. If the overlap length is larger than the span, then appropriate punishment must then be considered in this case. The coverage factor is defined as follows:  The 28th North American Fuzzy Information Processing Society Annual Conference (NAFIPS2009) Cincinnati, Ohio, USA - June 14 - 17, 2009    .

)( ),.....(_  j  jkj1  Imax RRrange  1factorcoverage =   The term range (Rj1, Rj2, ?, Rjk) is the coverage range of the membership functions, and max (Ij) is the maximum quantity of Ij in the transactions. The coverage factor of a set of membership functions for an item Ij is thus defined as the coverage range of the membership functions divided by the maximum quantity of that item in the transactions. The more the coverage ratio is, the better the derived membership functions are.

B. The design concept In this paper, a fixed number of k bits are used for encoding  membership functions. The maximum quantity value M of each item in the transactions is first found to decide the number of levels to run. The scale d used as the unit for the membership functions of an item in a level is calculated as follows:  ?? ?  ?? ?= k  Md  .

The best membership functions obtained after a level are then shown in Fig. 5.

0 d 2d 3d 4d  R1  5d  R2   Figure 5. The membership functions obtained after a level  The membership functions obtained at this level are then refined in the next level. A new scale d? to refine the center and the span is then formed as follows:  ?? ?  ?? ?= k  dd 2' .

The membership functions are then tuned using the new scale to get more precise values of each center and span of a fuzzy region in the ACS algorithm. The adjusting scope is 2d from the previous solutions, with the concept shown in Fig. 6.

The center of a membership function is adjusted between d and 3d, the new scale d? is the new unit for search.

0 d 2d 3d 4d  R1  d? 2d? 3d? 4d? 5d? 6d? 7d?d   Figure 6. The refinement process for the center  The adjusting process for the span of a membership function is similar to that for the center. Assume the original span is s, then the search range for the next level will be from s-d to s+d using the new scale d?. An example is shown in Fig.

7, where the original span is 2d and the adjusting range is from d to 3d.

0 d 2d 3d 4d  R1  d? 2d? 3d? 4d? 5d? 6d? ?.

Span= 2d  2dd 3d   Figure 7. The refinement process for the span  The scale d? is then further shortened in the next level and the same steps are repeated again until some termination criterion for precision is reached.

C. The proposed multi-level ACS-based Mining algorithm As mentioned above, the proposed approach applies the  ACS algorithm to extract the rough membership functions and repeat the ACS algorithm to get more precise ones. In this section, the proposed multi-layered ant-colony algorithm is stated to solve the problem in which the maximum quantitative number in the transactions is large. It is an extension of the first approach with multi-level processing. The algorithm is described as follows.

The proposed algorithm:  INPUT: (1) n quantitative transaction data, (2) a set of m items, each with l predefined linguistic terms  (different items may have different l values), (3) a support threshold ?, (4) a confidence threshold ?, (5) a maximum number G of iterations, and (6) a number k of encoding bits for a membership function.

OUTPUT: A set of fuzzy association rules with its associated set of  membership functions.

STEP 1: Let p = 1, where p is used to keep the identity number of the item to be processed.

STEP 2: Let the multi-stage graph for the fuzzy mining problem be (N, E), where N is the set of nodes and E is the set of edges (Fig. 8). Also denote the j-node in the i-th stage as Nij, and the edge from Nij to N(i+1)k as Eijk. Initially set the pheromone on every edge Eijk as ?0 (usually set as 0.5).

STEP 3: Find out the maximum quantitative value M of the p-th item in the transactions.

STEP 4: Find the scale d for the searching process as follows:  The 28th North American Fuzzy Information Processing Society Annual Conference (NAFIPS2009) Cincinnati, Ohio, USA - June 14 - 17, 2009     Figure 8. The multi-stage graph for the fuzzy mining problem  ?? ?  ?? ?= k  Md  ,  where k is the number of encoding bits for a membership function of the p-th item. The unit used for the membership functions of the p-th item in this phase is then d (Fig. 9).

Figure 9. The unit used for the membership functions  STEP 5: Let the initial generation g = 1.

STEP 6: Find a complete route for each artificial ant Antq by selecting the edges from start to end according to the state transaction rule.

STEP 7: Update the pheromone of the edges which an ant just passed through according to the local updating rule.

STEP 8: Evaluate the fitness value of the solution (membership functions) obtained by each artificial ant according to the criteria stated above.

STEP 9: Find the ant with the highest fitness value among all the ants and update the pheromone of the best route according to the global updating rule.

STEP 10: If the generation g is equal to the termination generation G, keep the current best membership functions of the p-th item and go to the next step; otherwise, g = g + 1 and go to STEP 6.

STEP 11: Find the new scale d?, which is more precise than the original one as follows:  ?? ?  ?? ?= k  dd 2'  STEP 12: If 2d is less than 2k and the previous d?? is not 1, go to STEP 19 for processing the next item. Otherwise, set d = d?, d?? = d?, and go to Step 5 for getting more precise membership functions.

STEP 13: If p ? m, set p = p + 1 and go to STEP 2 for processing the next item; otherwise, stop the algorithm and output the membership functions.

The final set of membership functions output in STEP 13 and the 1-itemsets obtained from the best ant are then used to mine fuzzy association rules from the given database.



V. EXPERIMENTS In this section, experiments for a comparison of the  multi-level ant-mining approach and the original approach are described. They were implemented in C/C++ on a personal computer with AMD Athlon(tm) 64 Processor 3200+ and 1 GB RAM. There were a total of 64 items and 10,000 transactions used in the experiments. The maximum quantities of the items among the transactions were up to 128. The proposed multi-level algorithm used four bits to encode a membership function. Each item had three linguistic terms and totally 12 bits were thus used for an item. Due to the short bits of encoding, three levels of execution were needed in the proposed approach to extract the accurate membership functions. The minimum support for association rules was set at 0.04. The proposed approach searched for the membership functions of each item by the ACS algorithm. The parameters in the ACS algorithm were set as follows. The initial size of ants was set at 10, the initial pheromone was 0.5, the evaporation ratio ? was 0.9, the local updating ratio ? was 0.1. and the parameter ? was set 1. The average fitness values of the artificial ants along with different numbers of generations by the proposed and the previous ones are shown in Fig. 10. It can be easily observed that the proposed method had a better performance on the average fitness values than the original method in [10].

Figure 10. The average fitness values by the two algorithms

VI. CONCLUSION AND FUTURE WORK  The paper has described a multi-level ACS-based mining algorithm to extract an appropriate set of membership functions in fuzzy data mining. It first transforms the mining problem into a multi-stage graph, with each route representing a possible set of membership functions. It also adopts multi-layer processing such that the precision of the final membership functions may be gradually improved. The approach is thus suitable for solving the problem in which the maximum quantity of an item in the transactions may be large.

More works need to be done in the future. For example, we may attempt to study the effects of different encoding methods and different variant ant algorithms on the proposed algorithm.

We may also apply the algorithm to solve some real-world mining problems.

The 28th North American Fuzzy Information Processing Society Annual Conference (NAFIPS2009) Cincinnati, Ohio, USA - June 14 - 17, 2009    ACKNOWLEDGEMENT  This research was supported by the National Science Council of the Republic of China under contract NSC96-2213-E-390-003.

