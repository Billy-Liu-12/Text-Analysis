Dynamic rule graph drawing by genetic search  Pascale Kuntz, Remi Lehn, Henri Briand

Abstract- The recent importance given to the integration of the user in a KDD process, which gives him the oppor- tunity to direct his mining towards his specific own needs, requires the development of new highly interactive visual- ization tools. For graph based representation of discovered knowledge this means that layout algorithms must dynam- ically take modifications into account. In this paper, we present a genetic approach to draw a series of layered di- rected graphs which model relationships between associa- tion rules. We develop new problem-specific genetic oper- ators and show that genetic algorithms are well-adapted to solve a multiobjective problem : meeting static aesthetic requirements such as minimizing arc crosses and preserving the ?user?s mental map? when a transformation is interac- tively performed on the graph. Experimental results are presented on several randomly generated series of graphs.

Kegwords- Computational Cybernetics, Data Mining and Knowledge Discovery  I .  INTRODUCTION OGETHER with chart graphics and maps, network T diagrams or graphs are one of the most popular graph-  ical forms used for information presentation. They can be used at the same time as theoretical models and as vi- sualization supports. They often allow access to  complex abstract structures without getting bogged down in the mathematical detail [I]. For such reasons, graphs are well adapted to visually represent relationships between rules extracted from large datasets.

Since open problems on visualization set in the last decade have been identified [2], great efforts have been rnade in graphical database query interfaces and represen- tations of multidimensional data, and today several tools integrate graph models (e.g. [3]; [4]) . However, with the development, of more and more efficient knowledge extrac- tion algorithms and of human-centered approaches [5] new needs are coming to light in the mining and post-treatment phases of a KDD process [6].

We here restrict ourselves to non-supervised approach- es of rule extraction for which different graph models have been proposed in the literature. Let 0 be the set of objects of a database described by a finite set I of items. For pure- ly logical rules, i.e. without any counter-examples, Galois lattices [7] have known a renewed interest in combinatorial data analysis for the search of implications in binary data [SI. In this case, each node is a particular pair composed of a subset of 0 and a subset of I and the set of pairs is partially ordered by the standard set inclusion relation ap- plied to 0 and I .  It can be represented by a Hasse diagram where arcs represent the inclusion relation. Unfortunately, determining a Galois lattice along with its Hasse diagram is a computationally difficult problem, and the visual repre- sentation become inextricable for numerous items. An ex-  IRIN, Universite de Nantes, Rue Christian P a w ,  44300 Nantes, France, Remi.LehnQirin.univ-nantas.fr  tension of this model to the search of ?quasi-implications? where the strict inclusion is replaced by a statistical mea- sure has been recently proposed 191 but experiments only deal with small size data sets a t  the moment. In ot,her common rule representation models, the graph?s nodes aro just itemsets which correspond to premises and conclusions of the rules, and an arc directly represents an implicat,iori relation whose validity is assessed by a quality measure [lo]. More sophisticated approaches are inspired by hier- archical classification algorithms and represent, iinplicat ion relationships by hierarchical trees [ll].

Whatever the selected model is, in the vast majorit,$ of the applications, a layout of the rule graph is a kind of final synthesis obtained after a complex data proc line. It is considered as an appropriate vizualisation sui)- port to give an insight into results that would be more difficult to get from looking at long lists of alpha-numericill characters. From the algorithmical point of view for t h layout problem, the vertex and arc sets are given as inpiit in accordance with the model, and a drawing satisfying some intelligibility criteria is furnished as output. This is refered to as a static drawing problem. However, t,hr rc- cent importance given to the integration of the user in ; I KDD process, which gives him the opportunity to dirert his mining towards his own needs, requires the development of new highly interactive visualization tools. For graphs, this means that layout algorithms must take into account mod- ifications (e.g. insertions or deletions of nodes and arcsj dynamically at different time scales.

Generally speaking, numerous efficient graph drawing a - gorithms have been proposed for many criteria [la] but, few of them take the interactivity with the user irit,o account [13]. If a modification is performed, the algu- rithm runs again and produces a new drawing which inav be thoroughly different from the previous one. As noticed by Papakostas et a1 [14] ?this is a waste of human re- sources to continually re-analyse the entire drawing aiid also of computational resources to re-computed the entire layout after each modification?. And, in the context of da- ta mining, these limitations may become a real obstacle: important changes between two consecutive layouts in a dynamical rule extraction process, where nodes and arcs can be added depending on user requests. highly disturb the interpretation task. This is the reason why such a pro- cess must be associated with a drawing method which pre- serves the ?user?s mental map? as much as possible. More formally, this problem can be set as a multi-objective prob- lem: produce at each step t a layout L( Gt) of the graph Gt t,hat satisfies common readability requirements, as for instance arc crossings minimization, and so that L( Gt) re- mains ?similar? to the layout L ( G t - l )  of the graph GtPl proposed at the previous step.

0-7803-6583-6/00/$10.00 0 2000 IEEE 248 1  http://Remi.LehnQirin.univ-nantas.fr   In this paper, we develop a genetic algorithm (GA) based approach for dynamically drawing a directed graph mod- el of association rules, simpler than a Galois lattice. GAS are stochastic global search methods that have proven to be efficient for many combinatorial optimization problems.

In particular, several authors have reported promising ap- plications of GAS or Evolutionary Algorithms for different static drawing problems of directed graphs ([15], [16], [17]  1181, 1191). Here, we develop new problem-specific genetic operators for the layered drawing of our rule graph model and show that GAS are particularly well-adapted for the dynamic layout problem. Due to their intrinsic parallelism thcv compute a set of potentially good solutions and indi- 1 ectly allow to solve our multi-objective problem: the set of potential solutions is generated with GA oplerators ac- cording to fitness function which measure aesthetics, and a layout is chosen among them according to its resemblance to a previous layout.

11. MODELING OF THE PROBLEM  Each subset, Xi -often called itemset- of I is iIssociated with a unique subset ti of 0: is the set of objects for which every item of Xi is present.

For instance, Xi = { i 1 , 2 4 , 2 5 }  associated with the subset Ei  = { 0 1 2 , 0 4 2 , 0 7 9 1 , 0 ~ 4 4 }  means that 0 1 2 ,  0 4 2 ,  0791 and 0 3 ~ ~ 4  are the only objects of 0 for which i l ,  i 4  and i 5  are all present. Although our model may be generalized to more complex data, we here restrict ourselves to binary I t s m s .

.-I. The r.nle graph. model  Here. a rule graph is an acyclic directional graph G = (1.1 -4) where each vertex of V is an potentially .interesting itmiset, a i d  each arc of A represents a significant implica- tion between two itemsets. Formally, a vertex is .a subset of I ; i i id  there exists an arc between two vertices X and X? if t.lit1 lule S + .Y? \ X is valid according to statistical mea- :<i:rt-:s. For instance! if X = { i 4 , i 7 }  and X? = { i 4 , i ~ , i g } , an arc between X and X? corresponds to the association role [Lt A i 7 ]  -+ ig.

iVe have developed a user-driven algorithm for the asso- c.i;ition rule extraction where a series of graph (Gt) t=O,T is generatcd dynamically by the requests of the user. Rough- ly speaking, at each step t ,  the user selects a vertex associated with an itemset he is focusing on, and the in- t.cresting associated rules are automatically generated by a rriodified local version of the well-known A Priori algorithm 1201 (t,he precise description of the process and its cognitive foridations are far beyond the scope. of this paper and we refer to I211 for details). Then, a new graph Gt+l is drawn to update the knowledge. The process starts with a dis- crete graph Go which only contains vertices representing itemsets of cardinality one often present in the database -in other words, items common to  numerous objects-, and stops at a step T fixed by the user with a graph GT which contains all the rules discovered during the process.

~   Luyers fh=4J  Fig. 1. Layered drawing of the rule graph  B. Intelligibility requirements j o r  t h e  graph layout A property always required for drawing graphs which  model abstract concepts is intelligibility. This covers phys- ical constraints of the drawing support and zsthetic crite- ria. Aesthetics are closely linked to  the application; they specify graphic properties that, should help the reader to understand and remember the information represented in the graph.

In our case, polyline drawings with vertices arranged in vertical layers are well adapted. The vertex set V is par- titioned into h subsets associaited with h layers L1, ..., Lh so that for any arc (X,X?) E A where X is placed on Li and X? on Lj then i > j. In the model, each layer is as- sociated with a degree of preckion in the knowledge state: layers on the left correspond to general descriptions made by small itemsets, whereas layers on the right correspond to  more specific descriptions (Fig. 1). Thus, vertices are here supposed to be pre-assigned to the layers, and graphs are supposed to be acyclic.

In addition to this drawing (convention, readability cri- teria, often defined by combinatorial optimization goals, must be specified. One of the most sensitive criterion for the interpretation is the number of arc crossings [22]. Note that the general problem of minimizing arc crossings is NP- complete and remains so even for the layered digraph draw- ing where the crossing number depends on the ordering of the vertices within each layer only [23].

In order to avoid long lines which can create confusion we also consider the minimization of the sum of the arc lengths. These two constraints ,are here treated separately: a GA generates a vertex ordering on each layer which tends to minimize arc crossings and a classical hill-climbing local- ly adjusts the vertex coordinates to minimize arc lenghts.

C. D y n a m i c  integration One major difficulty is to propose a pragmatic definition  of the intuitive concept of ?mental map?s stability? when interpreting a layout. In the general case, let us denote by P the set of points of a geometric space 5? which repre- sents the vertices of a graph G on a layout L ( G ) ,  and let T be a function which transforms P into another represen- tation P? of the same graph. Eades et al., [24] propose a definition of the stability which depends on the choice of an equivalence relation E on the set of the finite S sub-    sets: the transformation T preserves the representation P if P P? = T ( P ) .  They give different pragmatic defini- tions of one of which is based on order equivalences: P and P? have the same ?orthogonal ordering? if the relative positions of each each pair of points are the same in given directions (e.g. up, down, left, right).

In this paper we adapt this notion to the comparison of the layouts of different graphs Gt and Gt+l obtained at consecutive steps. We only take into account the number of vertex permutations between two layouts as this criterion is the most sensitive for the interpretation. Let i?k (resp. ck) be the number of vertex couples on layer k whose order has changed (resp. not changed) between L(Gt) and L(Gt+l ) .

The two layouts are compared via a dissimilarity coefficient A: A(L(Gt ) ,L (Gt+l ) )  = 1 - i z k = , , , ? .  And, Pt Z Pt+i if A(L(Gt ) ,L (Gt+i ) )  = 0.

111. A GENETIC BASED APPROACH GAS work with a population of potential solutions which  stochastically evolves by means of three basic operators: selection, recombination and mutation. And, when de- signing a GA, the proper choice of the solution coding and the genetic operators is of the utmost importance as it can have a significant influence on the optimization process. In the following, we therefore discuss coding and associated operators in more details.

A .  Solution coding and selection To simplify the drawing problem, a classical representa-  tion is previously made so that the graph is ?proper? i.e.

each arc is incident to vertices placed on two adjacent layers only. This is easily achieved by inserting so-called dummy vertices: an arc incident to vertices X and X?, respectively placed on layers k and k? so that Ik - I C ? /  > 1 is transformed into a path of Ik - k?l arcs using (k - k?l-1 dummy vertices (circles on figure 1). Moreover, a set of possible positions numbered downwards is associated with each layer. Hence, the problem consists in defining a permutation fJk on each Lk, where ~ ( x )  is the rank of X on Lk, so that the total arc crossing number is minimized.

Although for most graph drawing applications, the po- tential solutions are coded by a string of the real coordi- nates of the vertex positions, an ordinal representation is more appropriate here. A genotype codes the vertex ranks for each layer one after the other: the ranks of the n1 ver- tices of L1 are placed on the left in the genotype, then the ranks of the 122 vertices of LZ are added to it and so on.

In the classical GA scheme (e.g. [25]), the initial pop- ulation is randomly chosen, and every subsequent genera- tion is built from the current one with the genetic opera- tors. An alternative consists in initializing the process by a small population which increases by insertion of new solu- tions created by a reproduction mechanism and whose evo- lution is controled by an ?aging? threshold: only solutions recent enough can be selected for reproduction. Experi- mental comparisons have led us to  prefer this alternative and to select an initial population with genotypes whose vertex ordering fits different depth first searchs of the graph  (a directed one starting with vertices having a null inferior half-degree, a backward one starting with vertices with a null superior half-degree, ...). This tends to initilialize the exploration with potentially suitable solutions.

The selection is determined by a classical roulette wheel based on the fitness function. In order to compare the crossing numbers of different layouts without knowledge of a maximal bound, the fitness is here defined by 2- f (L(c) ) where f ( L (  G)) is the number of arc crossings in the layout L( GI.

B. Mutation Four mutation operators are applied according to a prob-  ability, and to ensure that the genotype codes a valid solu- tion, each mutation operator is local and can modify genes of a unique layer -randomly chosen- at each time. Two of them are common local search operators in permuta- tion problems: the random local permutation and the 2- opt. The two other are problem-specific and are inspired by drawing heuristics [26].

Permutation based on vertex degrees. As a permu- tation with few neighbors disturbs the drawing usually less than a permutation with highly connected vertices, local permutations for vertices with small degrees are favored.

The choice of two vertices to be exchanged depends on a probability inversely proportional to their degrees.

Permutation based on median. This permutation stemmed from one of the most common heuristic applied to the 2-layer drawing problem which aims at placing a vertex on one layer Li,i=1,2 in front of the ?middle? (which can be a median? or a barycenter) of its neighbors on Lj,j+. This attemps to  minimize arc length locally and contributes to a better drawing. The transposition of this idea to the per- mutation scheme consists in selecting a vertex X randomly on a layer Lk and exchanging its rank with the rank of the vertex of Lk which is the closest to the middle of the me- dian of the successors of X on Lk+l and of the median of its precedessors on Lk-1. More formally, the classical def- inition of the median must be adapted here. The median of a vertex X on Lk is the vertex of Lk whose rank in the order defined by (Tk is the closest to  where deg-(X) (resp. deg+(X)) is the number of X pre- decessors (resp. successors) and nk is the vertex number on Lk. For instance let us consider a vertex X at rank 1 on Lk with 5 predecessors on Lk-1 at respective ranks 1, 3, 5, 6, 8 and 3 successors on Lk-1 at respective ranks 3, 5 and 6 (Fig. 2). If nk-1 = 8, nk = 4 and nk+1 = 6 then formula (1) equals 2.7 and consequently the vertex X is swapped with the vertex at rank 3 on Lk.

?For real coordinates on each vertical layer, the median of the pre- decessors of a vertex is the y-coordinate s.t. half of the y-coordinates of the predecessor are greater and the other half are smaller.

Lk-l 4 I a. Original layout.

(27 arc crossings)  Lk-l ? 4 + 1  b. Permutation of U with the vertex on its median position.

(-> 12 arc crossings)  Fig. 2. Permutation based on median  Generally speaking, the impact of each of these muta- tion operators depends on the graph properties. In case of few dummy vertices, the local permutation combined with 2-opt gives good results whereas in the opposit,e case -i.e.

when arcs are greater and vertex degrees are heterogeneous- more specific operators noticeably improve the results. As for dynamic drawing these properties are not known a pr i - ora and may evolve during the mining process, we here keep all of the operators with a fixed activating probabili- t y  at each step (0.02 for local permutation, 0.01 for 2-opt, 0.04 for permutation based on vertex degrees and 0.08 for permutation based on median).

C. Crossover  It is well-known that the main difficulty for ordinal cod- ings is to define a crossover which guarantees a feasible so- lution. Here, two genotypes are selected and the crossover is applied on one layer L k  randomly chosen. we have com- pared two specialized crossover operators which. have been previously applied to problems encoded as permutation - refered to as ?ordering GA? - (we refer to [27] for a de- scription): Order Crossover l (OC1) and Partia?lly Mapped Crossover (PMX). And to avoid side effects as for instance the recombination of two identical genotypes which leads to a new different one, we have included the variants proposed in [28]. Figure 3 shows the evolution of the fitness with each operator for the same computational time. The time required by the PMX compared to. OC1 acts as a brake upon the search space exploration here. The number of generations obtained with OC1 is about three time superi- or to PMX and profits of PMX in the optimization process are Quickly overtaken. Let us remark that PMX has been  -92 t -96  3 -98 LE I -100  -102  -104  -106  -inn .?I  canstant time = 60 s. (wallclock time) - Fig. 3. Comparison with OC1 and IPMX crossover operators (evolu-  tion of average fitness for 100 drawings of a random 50 edges/40 vertices/lO layers digraph).

Due to these results we here retain the following defi- nition of OC1. An interval I of random size is selected on the layer L k  of the first genotype and I is duplicated in the offspring?s genotype at the same place. This one is completed by genes of the second genotype which are not in I by starting at the end of I and by following the second genotype?s order. For instance, let us suppose that the first (resp. the second) genotype contains the sequence i4 - il - i2 - i5 - i3 - i6 (resp. il - iz - i4 - 26 - 25 - 23) for the layer L k .  If I = i2 - is -- i3 then the layer L k  of the offspring contains i 4  - i6 - iz- . iS-i3-il .  The other layers are either the same as the first genotype or the same as the second genotype according to  it random choice.

. . .

D. Dynamic constraint  The stability constraint between two consecutive layouts is not introduced right from the start but from a certain size TI, of the graph. Up to n,9 (fixed here a t  20 vertices) only fitness f is taken into account in the optimization process. Indeed, when graphs axe small, the user can record the whole of the information and cope with changes easily.

Moreover, a t  the begininning of the mining process, there are few extracted rules and the ?shapes? of the associated Eraphs are not well defined.

I -  Let t be the step of the drawing L(Gt) of the graph with n, vertices. At t + 1 new vertkes are added. The GA de- scribed above runs during a fixed number of generations in order to maximize f and we denote by P;+l the last popu- lation obtained. The dissimilarity A is computed between each layout of Pt;l and L(G,:), and among the IC (fixed here at 20) closest layouts, the one with the largest fitness is selected.

developed for Traveling Salesman Problems of large sizes in particular whereas, in our case, the complexity lies in the relationships between layers, and each layer is limited to about 70 vertices for readability requirements.

In the coding, when a vertex is added, a new place is allocated on each genotype a:nd a rank is added for the new vertex. For arc addition the only change is concerned with the fitness whose value is calculated again.

I? I 18   14 - - 12 0 ;3 10 -   1 8  5 6   IO 20 30 40 50 60 70 80  graph evolurion - number o/arc, 0 Fig. 4. Comparison with a graph drawing algorithm based on classi-  cal GA operators (average values of 20 drawings of a random 45 edresi31 vertices/6 lavers diarauh).

Fig. 5. Comparison of the fitness values at  each step for the select.ed layouts and the best ones according to  the fitness (average value on 10 runs on the same serie of graphs)  ? I  I ?  _ . I  Iv. EXPERIMENTAL RESULTS  In order to prove the interest of our new problem-specific GA operators, we first compare results obtained on ?static? graphs to those obtained with basic GA operators applied to a real coding of vertex positions on each layer [29]. Fig- ure 4 shows the fitness values obtained for the same com- putation time (60 seconds wallclock time) on 20 drawings of a random graph.

Figure 6 illustrates the integration of the dynamic con- straint. Two consecutive layouts L( Gt-1)  and L( Gt)  are presented: one vertex and six arcs are added on Gt. And figure 7 describes a typical situation of the multi-objective optimization. At each step t ,  vertex and arcs are randomly added to the previous graph Gt-l. The initial graph Go is reduced to a single random arc. At each t ,  the GA tends to maintain a layout L( G,) very close to the previous one L(Gt - l )  as long as possible. But, at a certain step t* too many changes in the graph have been performed and the layouts close to the previous one L( G t .  --I ) become unac- ceptable according to the fitness; they disappear and leave their places with other potential solutions. The evolution of the dissimilarities A ( L (  G t - l ) ,  L( G , ) )  between selected layouts higlights ?peaks? and ?holes? which are explained by this double optimization process. Let us notice that this phenomenon is closely linked to the parameter values which govern the evolution; in particular, it  softens when the size of the population decreases.

When we compare the evolutions of the fitness of the selected layout L*( G t )  (i.e. the layout which minimizes A ( L * ( G t - I ) , L * ( G t ) ) )  and of the best layout L f ( G t )  ac- cording to the fitness (i.e. the layout which maximizes f), we see that both curves follow a similar evolution with the Lf ( G t )  fitness obviously better than -or equal to- the L*(Gt) one.



V. CONCLUSION  In this paper we presented a graph model well-adapted to interactive association rule visualization and we devel- oped a genetic algorithm for the dynamical drawing of  layered directed graphs. We showed that ordering coding and problem-specific operators inspired by classical dram- ing heuristics and permutation problems significantly i n - prove previous results obtained with a classical schenie.

Numerical tests allow us to think that GAS are very strong candidate to solve this class of drawing problems. Our al- gorithm is now included in a rule mining software 1301 and first experiments on real databases from marketing and hu- man resources highlight the information gain obtained in the extraction process with such a visualization support,.

Future work includes further evaluations that need tlo de- termine which dissimilarities are most appropriate for mod- eling the user mental map?s stability. Additional experi- ments are also necessary to better understand the impact of constraint?s stability on the search space. In particular, we are applying an approach coming for multidimensional scaling to discover resemblance relationships between lay- outs within a same population.

