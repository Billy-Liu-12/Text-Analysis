<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings

Abstract: Association rules mining is an effective method to extract hidden knowledge in databases that is used widely in intrusion detection. But it causes the sharp boundary problem in handling databases with quantitative attributes. To solve the problem, a method is presented that integrates fuzzy sets and genetic algorithm in anomaly detection. Encoding the parameters of membership functions into an individual (chromosome) and embedding the fuzzy association rules mining techniques into the genetic optimization, an optimal parameter-set can be obtained. With the use of the parameter-set in anomaly detection, the normal states of protected system can be differentiated from the anomalous states to the largest extent, and the veracity of anomaly detection is improved significantly.

Keywords: anomaly detection; fuzzy data mining; genetic algorithm 1. Introduction As network-based computer systems play increasingly vital roles in modern society, security of network systems has become more important than ever before. Intrusion detection System (IDS) has thus become a critical technology to help protect these systems. IDS approaches can be divided into two main categories: misuse detection and anomaly detection[1]. Comparatively, anomaly detection is more reliable for the systems with rigorous security requirement because it can detect unknown attacks or new types of intrusions.

Anomaly detection is based on an assumption that attacks are different from ?normal? (legitimate) activity and can therefore be detected by identifying these differences. It firstly defines the normal profile of protected system by a series of characteristic parameters and thresholds. Then in real time detection process, it compares the current system state with the normal profile to identify the degree of the difference between them. A higher degree than the predefined threshold means the system is in abnormal state.

Thus detecting intrusion is in fact detecting the degree of deviations[2] of current system from the normal profile.

In order to characterize normal profile, anomaly detection approaches usually have to handle extensive ?training sets? of system event records, which is a difficult task in system design. Therefore Wenke Lee et.al presented using data mining technology to extract patterns in IDS[3][4].

Generally, data mining technology is more effective in handling the Boolean attributes. For the database with quantitative attributes, the attribute domain should be divided into several discrete intervals in the preprocess of data mining, which causes the problem known as ?sharp boundary?. To solve the problem, Susan M. applied fuzzy set theory in data mining, namely fuzzy data mining[5]. In [6], the problem ?sharp boundary? and fuzzy data mining methods have been introduced. However, applying fuzzy set in data mining causes another problem that defining membership functions always depends heavily upon the experts? domain knowledge, which is a great disadvantage of fuzzy data mining.

In this paper, we integrate fuzzy sets and genetic algorithm in anomaly detection and present an approach of anomaly detection based on fuzzy data mining and genetic    anomaly detection based on fuzzy data mining and genetic optimization. Parameters of membership functions are arranged into a sequential parameter-set, which is encoded into an individual (chromosome) and used in genetic algorithm to find the optimal parameter-set. The subsequent sections are organized as follows. Section 2 describes the fuzzy data mining methods used in anomaly detection.

Section 3 presents the approach that applies genetic algorithm to optimize the parameter-set of membership functions. Section 4 describes experiments on anomaly detection to network traffic and results analysis.

Conclusions and plans for future work are given in the last section.

0-7803-9091-1/05/$20.00 ?2005 IEEE Guangzhou, 18-21 August 2005  2. Fuzzy Data Mining in Anomaly Detection 2.1. Anomaly Detection Based on Data Mining The application of data mining in anomaly detection includes the following steps: I). Establish the mining object, viz. database of system state. The attributes of the database consist of Multi-level parameters monitored in the protected system including user-level, system-level, process-level, packet-level and etc.

Collecting values of the parameters in various time-domains with system in normal state, we can establish normal state database; II). Mine normal state database and extract the association rule-set S1 that represents the normal profile of the protected system; III). In a given transient state, collect values of the parameters to establish transient state database. Mine the transient state database and extract the association rule-set S2 that represents the transient profile of the protected system; IV). Calculate the similarity[7] of S1 and S2: similarity(S1, S2). According to the value of the similarity, we can evaluate the deviation degree of the real-time state and the normal state to detect intrusions in the protected system.

Given two association rules R1:X?Y,c,s and R2:X??Y?,c?,s?, when X=X? and Y=Y?, the similarity of the two rules can be calculated by the formula: 1 2 ' ' ( , ) max(0,1 max( , )) c c s s similarity R R c s ? ?

= ?

(1) When X?X? or Y?Y??the similarity of the rules will be zero.

For two given rule sets S1 and S2, the similarity of the sets is: 1 2  1 2 ( , ) | | * | | s similarity S S S S =               (2) where 1 1 2 2 1 2( , )    1 2( , ) R S R S s similarity R R ? ?

? ?

= ? , ?S1?and?S2?

are respectively the number of rules in S1 and S2.

Obviously, we have 0?similarity(S1, S2)?1. And a value of similarity(S1, S2) that is less than the predefined threshold means the current system is in an abnormal state.

2.2. Mining Fuzzy Association Rules Mining association rules is an important data mining approach widely used in intrusion detection to discover hidden relationship among attributes of tables in databases.

The relationship can be defined as an association rule represented as: X?Y [s?c], where X={x1,x2,?,xp} and Y={y1,y2,?,yq} are subsets of attributes set in database, and X?Y=?, s and c are respectively the support degree and the confidence degree.

A well known mining association rules algorithm, Apriori, was presented by Agrawal and Srikant[8] to mine single-dimensional Boolean association rules from databases. However, we always need to mine quantitative attribute in intrusion detection. Kuok.Fu et.al integrated fuzzy logic with association rules to handle numerical values in their papers. With fuzzy logic, a certain attribute w is replaced by a fuzzy set consisting of several fuzzy attributes wfuzzy={w1,w2,?,wp} which are defined by corresponding membership function set 1 2 { , , , } pw w w w F f f f= ? ? ?

( ) ( ) iw vote d f d= . The membership degree represents the vote for the fuzzy attribute wi of a certain value d. Accordingly, the form of association rules changes to: &lt;X,A&gt;?&lt;Y,B&gt; [c,s],                      (3) where 1 2 { , , , } px x x A w w w= ? ? ?  and  are respectively the fuzzy set associated with X and Y.

1 2 { , , , }y y yqB w w w= ???

An appropriate membership function is the basis of quantitative analysis on fuzzy attributes and plays a key role in fuzzy mathematics. However, defining membership function is an uncertain process affected by subjective factors of human being, including cognition degree of fuzzy  attributes, experience, even the mentation of experts. The most widely used functions include Z-shaped functions, S-shaped functions and ? -shaped functions. A representation of standard membership functions F is shown in figure 1.

Z ? S     M em be rs    rs hi p D eg re e 1.0 0.0 c    As we can see in figure 1, Function F consists of 3 sections including Z(low), S(high) and? (medium), and each section is characterized by two parameters. It is commonly used in previous research of intrusion detection.

Figure 1. Membership function F of fuzzy sets a? b-d c? b a b+d xmaxxmin Guangzhou, 18-21 August 2005  3. Application of Genetic Algorithm 3.1.  Genetic Algorithm Genetic algorithm is a family of computational models based on principles of evolution and natural selection[9]. It is mainly used to find optimal solutions to a specific problem.  In genetic algorithm, a chromosome represents an element in solution space and the fitness of it is calculated by an evaluation function. The process of genetic algorithm begins with a randomly selected population of chromosomes. During evaluation, better chromosomes with higher fitness will be reproduced and mutated while less fit ones will be eliminated. The selection of chromosomes for survival and combination is biased towards the fittest chromosomes.

The main steps of genetic algorithm include: I) Encode the variables studied into character strings (genes) representing chromosomes and create a random initial population; II) Compute the fitness of each chromosome; III) Generate new chromosomes from the current generation of chromosomes by using the crossover and mutations operators; IV) Determine whether the algorithm should be stopped according to the predefined termination criteria. If not, repeat steps II) to IV) until the termination criteria is reached.

3.2. Optimizing Membership Function in Anomaly  Detection As mentioned above, membership functions can be optimized by genetic algorithm. Here we use Function F shown in figure 1 as an instant to present the approach of optimizing membership functions with genetic algorithm.

3.2.1.  Encoding Function F is controlled by 6 parameters. We encode each parameter respectively with a gene consisting of ?0? and ?1? characters and links the genes as a parameter-chain.

Generally, a database involves several quantitative attributes, mapping respective membership function and parameter-chain. Linking all the chains, we get a chromosome as an individual. For example, given two quantitative attributes, the chromosome is a linkage of 12 parameters encoded with 0/1 characters as shown in figure 2.

Before encoding, we need firstly find out the span of each parameter (variable in genetic algorithm) [xmin?xmax].

Apparently, xmin and xmax are respectively the minimum and maximum in the dataset contributing to the attribute.

Generally, a larger span of parameter will cause a longer chromosome, hence an exponential doubling of computing cost. Thus we can shorten the span to some extent according to restriction among parameters themselves. For function F, the parameters should meet the inequation: a?&lt;b-d&lt;c?&lt;b&lt;a&lt;b+d&lt;c                    (4) Evaluating the approximately value of parameters in fittest chromosome, we set the span of each parameters as: (xmax - xmin)/2, such as: xmin?a??(xmin+xmax)/2?

(7xmin+xmax)/8?b?(3xmin+5xmax)/8, and etc.

Consequently the size of gene- segment (represents an encoded parameter) N can be determined based on the shortened span. Finally, we encode each parameter and generate the initial population.

3.2.2.  Fitness Function A fitness function is used to quantify the optimality of a solution (that is, a chromosome) in genetic algorithm.

In anomaly detection, the fittest membership function should be capable to minimize the similarity of rule-set S (profile of normal state) and S1 (profile of anomalous state).

Let P={x1,x2,?xn} be the parameter-set of all membership functions, xi (1?i?n) is a parameter and n is the number of parameters. Thus we can define the fitness function as: f(P)=1?similarity(P,S1,S2), where S1 and S2 are the rule-sets generated by fuzzy data mining using parameter-set P respectively with system in normal state and anomalous state.

In addition, because the parameter-set P should meet the inequation (4) as mentioned above, those that cannot meet the inequation are infeasible solutions and should be punished. Consequently the final fitness function is defined as the following: 1 2( , , )( )   1 similarity P S S f P if   P meet (4) otherwise ?

= ???

(5) a? c? b d a c a? c? b d a c 1011010 001101 ?? 001101?? Figure 2. Encoding parameters of function F Guangzhou, 18-21 August 2005  3.2.3.  Genetic Operator The commonly used operators in genetic algorithm are selection, crossover and mutation.

There are several well-defined organism selection methods, and roulette wheel selection and tournament selection are popular ones. Here we use tournament selection method and select the best chromosome to replace the least one. The selection rate can be set to be between 0.1 and 0.2. Finally, the best chromosome is carried over to the    and 0.2. Finally, the best chromosome is carried over to the next generation unaltered according to the elite selection strategy.

Following the selection, the crossover operation is performed upon the selected chromosomes. Let v be the size of the population and Pc (typically between 0.6 and 1.0) be the crossover rate, and the number of chromosomes undergone crossover is v?Pc. A random starting point is selected, along with a random length, a section of each parent is then removed and swapped with the other parent.

In anomaly detection, the chromosome size is always large because of many quantitative attributes involved in database. Here we perform two-point or multi-point crossover between two selected individuals.

The next step is to mutate the newly created offspring.

Typical genetic algorithms have a fixed, very small mutation rate (Pm) of perhaps 0.01 or less. Let L be the size of chromosome, therefore  the number of bits undergone crossover is . The new chromosome is randomly mutated by randomly altering bits in the parents? chromosome data structure.

mv p L? ? 3.2.4.  Termination Criteria An important part of the genetic algorithm is the termination criteria i.e. when to stop reproducing the individuals. Because the fitness of the ideal individual is uncertain in anomaly detection, we can define termination criteria in two ways: I). Algorithm terminates when the fitness of some individual is higher than the predefined expectation value; II). Algorithm terminates after some predetermined number of generations.

4. Experiments on Anomaly Detection of Network Traffic Applying the approach described above, we have developed a fuzzy data mining and genetic optimization system (FGS), and have analyzed the network traffic in experimental network to validate the feasibility of the approach.

4.1.  Database of Network Traffic  In the experiment, four characteristic attributes related to network flow are selected to analyze the network traffic with system in normal and anomalous states, including Ptcp(the proportion between number of TCP packets and the number of total packets), Pudp(the proportion between number of UDP packets and the number of total packets), Avg.packet/sec(the average number of packets in one second) and Avg.Mbit/sec(the average number of bits in one second). We capture packets every two minutes and calculate the value of the attributes for ten times in both normal and anomalous states (intruding one host computer in the LAN by DoS attack). Finally we get the database of network traffic involves twenty transactions as shown in table 1.

Table 1.  Database of network traffic Ptcp Pudp Avg.pkt/sec Avg.Mb/sec State 94.5 0.6 169.368 0.527 normal 94.5 0.7 171.532 0.548 normal . .

.

. .

.

. .

.

. .

.

. .

.

90.2 0.4 143.566 0.416 normal 96.2 1.0 181.477 0.523 normal 95.2 0.3 169.542 0.530 anomalous 95.9 0.4 171.837 0.531 anomalous    95.9 0.4 171.837 0.531 anomalous .

. .

.

. .

.

. .

.

. .

.

. .

96.2 0.9 171.476 0.523 anomalous 93.8 0.4 183.937 0.596 anomalous  Each attribute is divided into three fuzzy sets characterized by the membership function F shown is figure 3.

( , , ) 1 2 ( , ', ') 1 ( , , ) ( , , ) ( , , ) ( , , ) x a x a a a x c a S x a c c x a c c x c c a x c Z x a c S x a c S x b d b x b x a c Z x b b d x b ?

?

? + &lt; ?

?

= ? + ? &lt; ?

&gt; = ?

? ?

= + &lt; ?? ? ?? ? ?? ? ?? ? ?? ? ?? ? ???

???

?

Figure 3. Membership function F 4.2.  Parameters Optimization The database of network traffic consists of four quantitative attributes characterized by four membership Guangzhou, 18-21 August 2005  functions respectively, and each function is controlled by six parameters. Thus the parameter-set that is to be encoded    six parameters. Thus the parameter-set that is to be encoded into a chromosome involves 24 parameters. Considering the span of each attribute, we specify the size of chromosome section as shown in table 2.

For example, each parameter in membership function characterizing the attribute Ptcp will be encoded into a five-bit string (chromosome section) with character ?0? and ?1?.

Table 2. Size of chromosome section Attribute Section size (bit) Ptcp 5 Pudp 3 Avg.packet/sec 5 Avg.Mbit/sec 3  The whole size of an individual is: L=5?6+3?6+5?6+3?6=96 (bit).

With the method described in 3.2.1, we encode the 24 parameters separately and link them into an individual. Set the size of population equal to 5, we generate 5 individuals randomly as the initial population.

Choose an individual in population and decode corresponding chromosome sections into real numbers, which are the parameters of four membership functions.

Using the parameters in mining fuzzy association rules[10] from the database of network traffic (setting the minimum support degree minsupport=0.25 and the minimum confidence degree minconfidence=0.6), we obtain the association rule-set of normal state S1 and that of  anomalous state S2. Calculating the similarity of S1 and S2, we subsequently get the fitness of the current individual with the fitness function (5).

In the same way, we calculate the fitness of other individuals and the result is shown in table 3.

Table 3. Individuals of initial population and their fitness Individual Similarity Fitness 00001??01100 0.712 0.288 00100??10110 0.848 0.152 10000??01101 0.741 0.259 00010??01110 0.587 0.413 00101??11110 0.652 0.348  The evolution operations include: I). Select the individual with the highest fitness and give up the one with the lowest fitness.

II). Perform the three-point crossover operation upon the other four individuals with random starting points and random length of swapping section.

III). Set mutation rate Pm equal to 0.05. Select a random bit in the four individuals and perform complementary operation.

Repeatedly, calculate fitness of the new individuals and reproduces next generation population. Finally, the genetic algorithm terminates after 1000 generations and the fittest individual is generated.

The highest fitness and corresponding similarity of each generation population in the evolution process is shown in figure 4.

Figure 4.  Fitness and similarity of the best individual in generations As we can see in figure 4, the curve of fitness denotes an incremental trend in the whole process, and the best individual (fitness=0.789) in the 1000th population minimizes the similarity (equals to 0.211) of normal rule-set and anomalous rule-set.

Repeat the experiment with the system in other different anomalous states, and the experimental results are shown in figure 5.

Figure 5. Similarity curve with system in different states    Figure 5. Similarity curve with system in different states  The experimental results denote that we can find an ideal parameter-set by genetic algorithm. Using the Guangzhou, 18-21 August 2005  parameter-set in anomaly detection, we can differentiate normal state of the protected system from anomalous state to the largest extent. Obviously, the membership functions generated by the genetic algorithm is more efficient than those defined with experts? domain knowledge.

5.  Conclusions and Future Work The goal of applying genetic algorithm in anomaly detection is to search ideal membership functions. The main advantage is that we can define membership function randomly without experts? domain knowledge. For an IDS, genetic algorithm is applied only in system design. The optimized membership functions will be used directly in real-time detection, therefore the performance of IDS will not be influenced although genetic optimization is a time-consuming process.

Nevertheless, membership functions still need to be  tuned constantly because that the normal state of protected system changes with time. We can adapt the normal profile (characterized by rule-sets) by tuning the parameters of membership functions ultimately, and how to build an adaptive anomaly detection system by genetic algorithm or other intelligent methods will be investigated in future research.

