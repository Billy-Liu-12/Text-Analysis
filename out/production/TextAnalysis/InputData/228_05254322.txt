Finding Time-delayed Gene Regulation Patterns from Microarray Data

Abstract?Discovered gene regulation networks are very helpful to predict unknown gene functions. Microarray gene expression data reveals activation and deactivation relations among genes. There are evidences showing that multiple time units delay exist in a gene regulation process. Association rule mining technique is very suitable for finding regulation relations among genes.

However, current association rule mining techniques can not handle temporally ordered transactions. We propose a modified association rule mining technique for efficiently discovering time-delayed regulation relationships among genes.

Keywords-Gene Regulation, Apriori Algorithm, Microarray, Association Rule Mining.



I. INTRODUCTION   DNA microarray experiments measure the expression levels of genes during biological processes.

A microarray is a chip with probes on glass or plastic, which is high-throughput technology for molecular biology [1]. DNA microarrays can be used to measure changes in expression levels. By analyzing gene expression data from microarray, we can uncover some relations between genes. These relations can be important when verifying them with biological evidences. The relations are found by computational algorithms without biological evidence. It may provide a direction for biologists to observe and discuss genetic relations. In gene regulation networks, co-regulated genes may not appear adjacently to each other in the same cluster. Gene regulation networks are widely used to predict unknown functions of genes. Thus, gene regulation networks help us confirm not only the interaction between genes, but also gene functions.

Different network structures can be predicted by different network models. There is much formalism to describe a genetic regulatory system [2]. A Bayesian  network is a common structure to model gene regulation network [3][4]. We use mining algorithms to find the relationship of genes for further study.

Association rule mining algorithms prune itemsets by using the minimum support and the minimum confidence. Association rules can identify patterns that might not have been found by clustering analysis.

Association rules can describe how the expression of one gene may be associated with the expression of a set of genes; given such a rule exists, we can easily infer that the genes involved participate in some kind of gene network. The gene expression levels can be binned by using a statistical technique [5]. Different transcription factors might be affected by the same gene at different starting times, or they may suffer different conditions [6]. The predicted rules allow overlapping regulators because co-regulations normally appear in only a fraction of the investigated condition pairs. Association rules can be used to relate the expression of genes to their cellular environment.

For example, association rules are conducive to identify cancer genes, especially when cancer is caused by a set of genes acting together instead of a single gene. Existing techniques determine rules based on analyzing the time series gene expression values were not accurate enough to discover the relations from multiple regulators to a target gene [7].

Functions of genes may be produced by RNA or a protein. The expression of a gene may be modulated from DNA-RNA transcription. Applying time-delayed property is important to model relations between genes [8][9]. It needs time to transcribe a gene to mRNA, and RNA translates to proteins for gene expression processes. At last the productive proteins activate or inhibiting its target genes from expressing its function, so time delay is an essential factor to consider.

Analyzing gene expression data can provide us information for recognizing the positive and negative   DOI 10.1109/HIS.2009.31     regulations of genes. However, known methods for mining association rules are computationally expensive to find frequent patterns that include time-delayed items. We introduce a method, which is faster than Apriori, to find time-delayed gene regulation patterns and obtain the patterns we desire for the co-regulation of genes.



II. RELATED WORKS  A. Association Rule  Association rule mining is a well researched method for discovering relations in large databases. Here we apply association rule mining to model gene relations [13]. Apriori is an algorithm for finding frequent itemsets [10][11][12]. Apriori is designed for databases containing transactions. An alternative mining technique, association rule mining, has also been applied to uncover gene networks. An association rule is of the form left set => right set. The right set is likely to occur whenever the left set occurs. Well-known constraints are minimum thresholds on support and confidence. The support sup(X) of an itemset X is defined as the proportion of transactions in the data set which include the itemset. The confidence (X, Y) is defined as conf(X=>Y)=sup(X,Y)/sup(X). In our utilizing situation, the left and right sets are both conditions of genes. The condition labels are H, M, and L: where H represents the relatively high gene expression level and L represents the relatively low gene expression level. The label M genes are not considered. For example, {H1} => {H2} where sup(H1, H2) and conf(H1=>H2) are both greater than the minimum thresholds.

B. Gene Expression  Before analyzing gene expression data, we must know why we use the data for discovering patterns.

The gene expression process is the foundation of all the derivative researches. The gene expression process inherits the information from the last state through the progress of DNA transcript to RNA, and when RNA translates the proteins to express the final functions of the gene. Therefore, an expression system consists of a source of DNA and the molecular machinery required to transcript the DNA into mRNA, and to translate the mRNA into a protein using the provided nutrients [14].

C. Gene Regulation Network  During the gene expression process, the transcription and translation steps, and the post- translational modification of a protein may be regulated by another process of gene expression. The cell can control its structure and function by gene regulation. Cellular differentiation and morphogenesis  of any organism can also be affected by gene regulation. Gene regulation is the reason why the control of the timing, location, and the amount of gene expression can have a great effect on the gene functions.

It infers gene regulation networks by using gene expression data [15][16]. We use microarray data to infer gene regulation relationships. A gene regulation network is a collection of DNA segments in a cell which interact with each other and with other substances in the cell, thereby governing the rates at which genes in the network are transcribed into mRNA[17][18]. In general, each mRNA molecule goes on to make a specific protein. In some cases this protein will be structural, and will accumulate at the cell wall or within the cell to give it particular structural properties. In other cases the protein will be an enzyme. Some protein functions are for activating other genes, and these are the transcription factors which are the main factors in gene regulation networks.



III. OUR PROPOSED METHOD   A. Framework  Frequent itemsets discovered by current methods do not contain items from different transactions. A series of microarray data, after discretization, is a series of transactions which are temporally ordered. Temporal patterns composed of some items in a transaction and other items in the following transaction are of interest to biologists. The temporal patterns can be further transformed using the association rule format: resulting in some item transactions occurring in later specified time units, and others immediately following the transactions. In this paper, we focus on finding temporal patterns which contain 2 items in a transaction and an item in the next transaction (next time unit).

The main idea of our method is to use backward frequent 1-itemset, denoted BL1. We first find L2, then find the backward frequent 1-itemset which contains only the items in L2. The framework is shown in Figure 1.

Figure 1. Framework. The graph shows our framework to get the  result of BL3 that is a set of co-regulated patterns.

B. Preprocessing Gene Expression Data  The microarray gene expression data can be normalized if needed. The form of original gene expression data we use are the experimental results by Campbell et al. [19]. We assume the ti column means gene expression profile at time point i. Then we transform the value into the form which is easy to use in our method. Defining ti = {p1, p2, ?, pn | n is the number of genes }where p is defined as follows (1). A  jx value is the average value of the gene expression data of gene j. Sj is a value to decide the boundary for discretization.

The value of gene expression level transforms to the expression condition label by discretization (1). The label Hj represents the gene j expressed highly.

Condition Lj represents the gene j down expressed.  Mj represents the gene j and it was not considered in the time. As the time past, the gene expression levels were in fluctuation.

Investigations show that more often than not, several genes contribute to a disease, which motivates researchers to identify genes whose expression levels rise and fall synchronously under a subset of conditions, whether they exhibit fluctuation of a similar shape when conditions change [20]. Smaller  variations in expression values are likely to be coincident with little biological meaning but may be caused by noise.

else. ,  . x than  less  value theif ,  .xhan greater  t  value theif ,  j  jjj  jjj  j  m  Sl  Sh  p (1)   C. Using Apriori to Find L1 and L2  The way to find L1 is the same in the Apriori algorithm. In our proposed method, it counts the appearance of every item in all transactions. If the count of the items is greater than the minimum support count, we select the item from candidate 1-itemset to large 1-itemset. We take ti defined in section 3.2 as a transaction, and the variable i is the time point of dataset. After finding L1, it continues to find L2. The L2 itemset contains frequent patterns in length two. The items in the frequent 2-itemset in gene expression data are mined in the same time point.

D. Finding for BL1  In order to find BL1, we need to first find L2. To select the item that is in itemset L2, we count the candidate appearance itemsets of size 2. The number of appearances supports the itemset in C2. We prune C2 by removing the itemset it supports, which is less than the minimum support. After the step of pruning, we obtain L2 and continue the process for finding BL1.

BL1 includes all items occurring in the itemsets of L2.

Because the item s in definition (2) in the set is backward from L2, we name the set as BL1.

BL1= {s | s P, P L2, |s|=1}. (2)   E. Definition of BL2  We combine the BL1 item with the item in L1 and place them in the order-set. BC2 is the order-set of the first position which includes all the elements of BL1.

The second position includes all elements of L1.

BC2= {<a, b> | a BL1, b L1, a b}. (3)   The way to count the support of BC2 is defined as  follows. Because we want to get the regulatory relation with a time delay between genes, the support is the appearance count of the first item in time point i, while the appearance of the second item is the time point i+ t in the same time. t identifies the number of times the units delay. We give t as needed by the user.

We select the order-set it supports as greater or equal to the minimum support count and place it into BL2.

Data Preprocessing  L1, L2  BL1  Gene expression data  BC2, BL2  BC3, BL3     BL2 is presented as <a, b, t >, which can also present as , which means gene a may regulate gene b after t.

}{t}{ ba  Support count of order-set = count the appearance of {<x, y> | x ti ; y ti t}.

(4)  F. BC3 and BL3 BL2 performs self join to show the co-regulation  relation. If the second item of an order-set of BL2 is the same as the other order-set, we combine the two order- sets into a set that is BC3. Pruning the itemset in BC3 by minimum support, we can find BL3. The rule consists of two parts: that which has no regulator order-set, and the set of target. No order-set has two items selected from the first position of BL2 itemset, whose second position is the same. For example, if BL2={<a, d, 1>,<b, d, 1 >,<c, d, 1>}, the items in second position are the same, and the items in the first position are{a, b, c}. The subsets with length 2 of {a, b, c} are {a,b},{a,c},{b,c}. The BC3 is {a,b,d,1},{a,c,d,1},{b,c,d,1}. If the support counts and the confidence of the three sets are greater than the minimum support and the minimum confidence, the three sets can be selected to BL3. BL3 is defined as follows.

BL3 =  }{t},{ cba (5)   In the definition of BC3 (5), for every <a, c, t >  and <b, c, t >, the items are the same item at the second position, which is c. Therefore, {a, b} is a no order-set.

We can combine the results for BL2 from different lengths of time delay. Then, we can discover the patterns of regulators with different lengths of time delay to co-regulate the same target. This type of BL3 is defined as (6), where t(a) is the length of time delay of gene a.

BL3 =  }{t(b)t(a),},{ cba (6)

IV. EXPERIMENTAL RESULTS   To implement the proposed method, we use the  dataset provided by Campbell et al.[19]. There are 17 time points and 6601 genes in the expression data. In the experiment, the computer uses a Pentium D CPU 3.4GHz and 1GB RAM. The proposed method is completed in Matlab. The way to preprocess the original dataset follows the definition in 3.2. The minimum support and minimum confidence for Apriori are set to 0.7 and 0.9 respectively. Weka [21] is a  known data mining tool. We compare the results and the time cost by directly using Apriori built in Weka with our proposed method. Our proposed method is designed to find patterns with co-regulated genes targeting a gene. We set BL3 only to find the frequent patterns whose length is three and the time delays between the two regulators to the target gene are the same with a time unit. In the procedure of Apriori, the frequent patterns are searched until no candidate itemset occurs. When using Weka, the dataset must be increased more than the original dataset because we are putting the items into time-delayed transactions of the corresponding transactions.

The experimental results show that Apriori costs more time than BL3 because Apriori works out longer patterns. Furthermore, the target genes perform more than once compared with BL3. As a result, unnecessary time is needed to perform the items in the same time point using Apriori. In addition, BL3 only found the patterns with specific time delays.

We want to compare both results from Apriori and BL3 with one time delay. Table I and Table I.Figure 2 show the time needs with the increase of gene count.

By choosing a part of the original dataset, we compare different numbers of gene expression datasets to determine how much time is needed to look for the rules we want to know. By comparing the results of BL3 and Apriori, we can observe that the result of BL3 is also a part of the Apriori result. Then from observing the Apriori results we formulated the rule: {a, b} ==>{c}, where c is time-delayed. For example, we pick the result of 1000 genes to list below.

BC3:  L324 L329==>DL53 sup_count=12 conf:(1) Apriori:  L324 L329 12 ==> DL53 12    conf:(1) L324 L329 12 ==> DL329 12    conf:(1)  There is only one result in the Results of BC3. There  are two results which fits the form we want from 108 association rules in the Results of Apriori. Thus, the results of Apriori are more than BC3. Because of the action backward L2 to BL1, the regulators should have more inseparable relationships. More specifically, the result shows the expression levels of the 324th gene(YBR067c/TIP1) and the 329th gene(YBR072w/HSP26) are low. The two genes may be co-regulated with the 53rd gene(YAL062W/GDH3), whose expression level is also low after a time unit delay.

ACKNOWLEDGEMENT Method\Count 1000 2000 3000 4000 5000 Apriori 6s 24s 57s 252s 2h  BL3 0.1s 0.3s 0.8s 1.3s 2s  This work was supported in part by the National Science Council, Taiwan, under the Grant NSC 97- 2221-E-415-013-.

Table I. Time cost comparison between Apriori and BL3.

