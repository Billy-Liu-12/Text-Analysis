THE UNIFIED STOWAGE METHOD OF THREE KINDS OF DATA MINING  RESULTS

Abstract: Because lacking of unified stored structure of data  mining results in existing data mining systems, it cannot share the mining results among different applications. In order to store data-mining results all together in pattern base, the storage method of data-mining results (association rules, classification rules, sequential patterns) are intensively studied and analyzed. These three storage methods using the formal relational algebra description are proposed. After analyzing the common way of three storage methods, the consistent storage method of three data mining results in relational database is put forward. As a result of extensive application of relational database, this improves existed storage method and provides unified platform for sharing data-mining results in different mining systems.

Keywords: Data mining; pattern store; relation schema  1 Introduction  The maintenance and storage of data mining result can improve the efficiency of data mining. Pattern base is an important composition of data mining result storage system.

Many kinds of data mining results are stored in the pattern base. Besides the basic database function, it would have the special fimction of pattern base management [ll. The results that get from different data mining tools are stored together in the pattern base. Meanwhile the matured database mechanism and abundant interfaces can be used. This not only enhance the mining efficiency but also analyze the results in different time duration and different kinds of mining tools, mhermore it assists decision-making and exerts the real effect of data mining.

This paper first analyzes the storage method of association rule, classification rule and sequential patterns, and then gives the schema of storing these three mining results all together.

2 Association Rule  2,l The Definition of Association Rule  Association rules are often used in retail transactional database. It reveals the rules like ?A customer who purchase the bread also tend to buy butter at the same time?.

A transaction is composed of the processing time, merchandise and sometimes consumer ID, for example credit card.

The formal description of association rule is: let Z = {il ,i, ,..-,i,} be a set of m distinct attributes, also called items. Each transaction T in the database D of transactions has a unique identifier, called TID, and contains a set of items, such that T c I .  An association rule is an implication of the form x 2 Y , where X c I , Y c I are sets of items called item sets, and X n Y  = @ . The rule X 3 Y holds in the transaction set D (X is called body, Y is head) with support s, where transaction set D contains transactions X U Y , and has confidence c, where c is the percentage of the transactions containing X also contain Y. The task of association rule is to mining rules that satisfy both a minimum support threshold (min-sup) and a minimum confidence threshold (min-conf).

2.2 Association Rule Storage  2.2.1 The Storage Method of File Form  The popular data mining tools, such as the DBMiner, Intelligent Miner etc., generally store the mining results into files. For example, the data mining results of Intelligent Miner 6.1 are stored into a file named resXn.dut and can be accessed from the file provided by a group of API [*I. There are three steps to read the association rules in the result files in other mining tools. First, it defines a  0-7803-7865-2/03/$17.00 02003 IEEE     structure, then, it calls the function IDMAsrParserInitialize to initialize. Finally, it calls the function IDMAssocRules to read the association rules. The procedure of obtaining association rules in such a way is complicated. Different data mining tools have different results format. It is also difficult to share the mining results among different mining tools.

2.2.2 The Storage Method of Relational Table Form  The structure of relational database storing association rule was depicted in reference 13].

Table 1 The single relational table for storing association rules  Association rule instances are shown in table 1, fields Item, are items in the transaction data set; k specifies the total amount of items included in the data set, i.e. the maximum length of association rule. NullM stands for the null-mark of an association rule. If there are n items in an association rule, the item value after position n should be set null. RuleM specifies the rule?s division mark between bodies and heads. If an association rule having m bodies, the value of RuleM should be m+l.

The column ?NullM4? in table 1 represents the rule consists of 4 items. ?RuleM=3? denotes there are 2 items in the rule head. ?Null? is applied to fill the rest of fields. So this row represents the association rule: ?a consumer who purchased bike and pumper would purchase lock and helmet, with confidence of 60% and support of 3 % .  The expression of this association rule is: Bike A Pumper 3 Lock A  helmet,^ = 0.6,s = 0.03 There are thousands upon thousands of items in transactional database. Adopted this structure will lead to the huge amount of fields with null and the redundancy is high.

Whenever the amount of items in transaction dataset changes, the possible max length of association rules will be changed, too. This may cause a reconstruction of the whole rule table. In some situations, such as retail market, this change is frequent. It is insufferable in actual implementation to reconstruct frequently when stored many rules.

The common disadvantage of these two storage methods is the lack of relative time stamp of association rule, which stands for the change of historic data.

2.3 The Improved Storage Method of Association Rule  schema ASSOCI_RIL4ID, BODI: HEAQCONESUI: TIME) , ID represents the identification of the rules. The value of column BODY and HEAD, which is the item of transaction database, constitutes an association rule. The value of column Conf and Supp denotes the minimal confidence threshold and minimal support threshold. Reference [41 uses the project operation to project the relation over some attributes and decompose it into three relation schemas.

In relation  BODY(ID, BODY) = Il ID,BODY (ASSOCI -RULE) HEAD (ID, HEAD ) = IIID,Hmo (ASSOCI - RULE ) PA MID, CONE SUP, TIME) = nlD,CoNF,sVP,Tl~~~ASSOCI- RULE)  The schema BODY describes the body part of an association rule, the schema HEAD describes the head part of an association rule, and the PARA parameters.

Adopted this schema, an association rule is divided into three parts: body, head and para. All tuples having the same ID represent an association rule. The set of fields in column BODY with the same ID forms the body item set and column HEAD forms the head item set, while PARA forms the parameters of the association rule.

In each (N+M) association rule, the body items appear N times and the head items M times. The union operation using identical ID among three tables composes a corresponding association rule. The characteristics of this storage method are: The association rule schema is criteria and can be shared with different mining systems. With these schemas, data redundancy is low and query speed is high. It?s easy to extract association rules in this storage method by joining the body, head and parameter according to the rule?s ID.

3 Classification Rule  3.1 The Definition of Classification  Classification is an important task of data mining. Its aim is to establish a classification function or model through training data set or training samples, meanwhile the model is used for classification for the data.

The model is constructed by analyzing database tuples described by attributes and is represented in the form of classification rules or decision trees. For example, given a database of customer credit information, classification rules can be learned to identify customers as having either excellent or fair credit ratings. The rules can be applied to categorize future data samples, as well as provide a better understanding of the database contents. That ?if      I good >40 I good  salary>5000 and 40<age<50 then CrediFgood" is a classification rule.

salary credit age credit  efficient is low and the extension is not good.

I 5 tc50 A >40 \Good  3.3 Improved Storage Method of Classification Rule  leaf I  3.2 Classification Rule Storage  A relational table structure used for storing classification rules in improved decision tree is mentioned in reference [*I. A typical classification rule is shown in table 2. It represents the concept good credit standing.

Table 2. The storage of classification rule hild nodes  in-node 5000 ed e  5000 in-node  Alter table 2 into table 3 can solve the problem mentioned before.

Table 3. classification storage 1 BD ]CONDITION WSULT IC-attribute h-attribute]  NO denotes the node locates which layer, of course nodes in the same layer have the same NO.

This decomposition eliminates the redundancy. A classification rule contained N+M items will be appeared N times in condition table and M times in result table. And the classification rule is built through the same ID joint with two tables.

Adopted this schema has the advantage of the storage form is normal and easy to share in different system; less redundancy and higher query rule. Also it is easy to obtain the classification rule and to figure out decision tree.

4 Sequential Pattern  4.1 The Definition of Sequential Pattern  Sequential pattem is an important category of data mining. Similar to association rule mining, its task is to mine frequently occurring patterns related to time or other sequences. An example of a sequential pattem is " A customer who bought a computer and modem a month ago is likely to buy a printer".

The question described by sequential pattern mining is to search the time-series and sequence data in the transaction database through setting minimum confidence value and minimum support value. A time-series database consists of sequences of values or events changing with time, and sequence database is any database that consists of      ID BODY HEAD conf sup b m e 1 computer printer 60% 3% 2002-1-1 1 modern printer 60% 3% ,2002-1-1  sequences of ordered events. The task of sequential pattern mining is to find out the all most frequent consecutive sequences, which satisfy the minimum confidence value and minimum support value and time interval in the transaction database.

4.2 Sequential Pattern Storage overcoming its shortage.

But the time related information is not mentioned in the abovestructure.

4.3 Improved Sequential Pattern Storage Method 1  We change the above structure into the table 4 for  A relational table structure used for storing sequential  pteml Bnol I..$temk bnok ben bonf bupl Attribute Item is the item set of transaction data set; k  represents the total amount of items in data set, i.e. the most capable length of sequential pattern; Len represents the total amount of items in sequential pattern, also the length of sequential pattern; Enq denotes the position of item, where appeared in the sequential pattern. For example, sequential pattern like ? A customer who bought a computer and modem a month ago is likely to buy a  rinter? can be stored in the following form.

omputerll bodem11 brinter I 2!Null bullti 10.6 10.31  There are three items in this sequential pattern, so Len=3; computer and modem are the first element, Enol=Eno2=l; printer is the second element, Eno3=2; the confidence and support value are the same as association rule.

A tuple directly represents a sequential pattern. There exists limitation when millions of items are contained in the transaction database. The null value of item attribute in pattern base will be increased tremendously when the items become hugeness. Whenever the amount of items in transaction dataset changes, the possible max length of sequential pattern will be changed, too. This may lead to reconstruct the structure of pattern base. It is intolerance in real situation to frequent reconstruct. Generally the end-users of data mining system are more interested in the sequential pattern in the some time interval not the whole.

pattern is mentioned in reference [61.

4.4 Improved Sequential Pattern Storage Method 1  Taking the projection over some attributes on the schema described in table 4, three schemas are obtained.

Each describes the body, head and parameter section.

BODY(ID, BODY, NO)  = I?I,,BoD,,, (SEQUENTIAL -PATTERN) HEAD ( I D ,  HEAD ) = TIID,HEAD (SEQUENTIAL -PATTERN )  PARA(ID, CONF, SUP, TIME) = n ID,coNF,sup,TIME (SEQUENTIAL- PATTERN) NO denotes the position of body in a sequential then? pattern to express its mining results after analyzing  pattern. Join three tables with the same ID creates a the storage method of association rules, classification rules sequential pattern. ? and sequential patterns. We use three schemas  (CONDITION. ACTION. PARA) to store the mining 5 The Unified Storage Method of Three Mining results.

The CONDITION schema represents the condition attribute of classification rule, the body attribute of association rule and sequential pattern. The ACTION  Pattern  The common ground is that it can be used with ?if      schema represents the result attribute of classification rule, is added in the CONDITION schema, A denotes association the head attribute of association rule and sequential pattern. rule, C represents classification rules and S the sequential The PARA schema holds the all parameters owned by pattern.

association rules, classification rules and sequential Three schema storing association rules, classification patterns, i.e., confidence, support, time and time interval. rules and sequential patterns can be described as: To distinguish these three mining result, the class attribute  CONDITION(CLASS, ID, CONDITION, ATTRIBUTE, PARENT, NO) ACTIOA(CUS& ID, ACTIO& ATTRIBUTL$PARENI)  PARA(CLASS, ID, CONF, SUP, TIME, INTV) \ Table 5. the unified storage of three mining results  I ACTTON I I  PARA  caner NUN Null t2 I Each mining result is joined the three schema through  the same ID. This storage method takes the benefits as following  It is easy to share the mining result in the 0  0 Less data redundancy   different systems.

The value of added attribute class can be extended to suitable with other kinds of mining result.

It is easy to pick up a mining result through joining operation among condition, action and para tables with the same ID  6 Conclusions  This paper proposes a uniform storage method for data mining result after analyzing association rule, classification rule and sequential pattern separately. The expression of formal relational algebra is given and the three mining results can be stored into the s.ame relation table. Based on the relation schema, storage of association rule, classification rule and sequential pattern in relational database can be easily realized. The advantage of this construction is low redundancy and easy rule extraction.

The consistent storage method provides the uniform platform for sharing mining result among different mining systems.

