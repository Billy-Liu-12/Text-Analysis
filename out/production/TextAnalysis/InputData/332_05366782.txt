Mapping Multi-Views Architecture Products of  Complicated Information System to Agent

Abstract?The multi-views architecture products can describe the essence of requirement of complicated information system explicitly, and agent organizations provide the efficient solved methods to complicated information system. In order to achieve the transition from problem domain to solution domain, the mapping association between them is established, the requirements integrate the agent organizations. This paper takes the DOD AF products for instance, the organization requirement from architecture products is abstracted , the formalized expression of products about organizations and agent organizations are given,  mapping rules between architecture products and agent organizations are suggested. In the end, an example is set up to validate the feasibility of this new approach.

Keywords?complicated information system, multi-views architecture products, agent organizations, mapping

I.  INTRODUCTION With the complexity increase of information system,  requiring acquirement is the key of complex information system project to success. Traditional requiring acquirement methods are based on building the models of requirement engineering, so it causes the low degree of universal, limitation of modeling, the lack of adaptability and dynamic.

So they can?t illuminate all contents of the system [1]. The architecture description method based on multi-views is widely used by people. Because the method standing on different standpoints can describe the different terms of complicated information system from many relative people?s angles of views, it has ability to form the whole system description to support the problem domain comprehension as a whole [2]. At present, many domains constitute the architecture frameworks that adapt themselves, for example, ?4+1?framework, C4ISR AF, DOD AF and FEAF. Products are the key elements to describe the focused points of the framework views, and contain all of requirement connotations.

So, the architecture product is the requirement transmitted method, and contains requiring acquirement and description [3]. We can make use of products acquiring original requirement. It can form a system building channel in accord with the architecture framework, and reflects the essence of problem domain exactly.

The architecture framework products define complex information system requirement essence, and assure the across-the-board and consistent system top framework. How  to transmit from the top design to system implement, and how to solve the information systems? adaptability and dynamic problem, the agent technology provide the solution blue-print preferably[4]. But with the agent numbers increase in MAS, the communication press and coordination difficulty will be increasing between agents, too. It induces large scale calculation, and resolution efficiency decline. Therefore, it is a good resolution method to organize agents by some structure form. Agent organizations use for reference to the research result of the nature and human society domain,analyze and study the background of agent organizations, the development of agent organizations, the evolvement rules of agent organizations, and use them to complicated information system resolution. So, making use of organizations to be the building base point of complicated information system can solve the problem domain in effect. In the domain of organization-base multi-agent modeling, Yao Li [5] proposed a complicated information system development methodology based on the combination of organization theory and multi- intelligent agent technology. Bao Aihua[6] proposed a MAS modeling method based on organization, which is called OrgMAS. Chen Jiajia[7] proposed a method which extends Gaia for modeling the organizational structure of multi-agent systems. Zinn in U.S. Air University proposed the mapping method idea from the AOC AF products to Agent in his thesis, but it is a pity that he didn?t study the mapping method deeply.

Therefore, we use for reference to this idea, propose that making use of products build the agent organizations, make the requirements integrate the agent organizations, take the DOD AF operational view products for instance in this paper.

Then, a new method of solving complicated information system is proposed. The main idea as follow three steps.

First, analyzing the operational view products. Aiming at charts and character of the operational view products descriptions, abstract the products that are associated with organizations. Dig the organization characters by the products formalization descriptions. Synthesize all the characters from product set, and form the whole organizations descriptions.

Second, analyzing agent organizations. Combine with the organization element theory, and construct agent organizations elements adapt to the domain. Analyze all the elements, and build the formalization descriptions. Synthesize all the element characters, and form agent organizations descriptions in complicated information system.

Third, mapping from the product set to agent organizations. Combine with the organization characters from the first step and agent organization elements from the second step, implement the mapping between them by mapping rules.

In the end, construct the association with architecture products and agent organizations.



II. THE FORMALIZATION DESCRIPTIONS OF OPERATIONAL VIEW PRODUCTS ASSOCIATED WITH ORGANIZATIONS  Analyzing DOD AF operational view products?we can construct the association with organizations from OV-1, OV- 2, OV-3, OV-4, OV-5 and OV-6a products. All of the above products can abstract the organization requirements together.

In order to enhance the exactness, integrality, consistency and intelligibilty of the architecture framework descriptions, it implement the integrality and consistency of organization requiring acquirement, literature[9] formed the formalization descriptions of OV-2, OV-3, OV-4 and OV-5. Here, don?t state them again. We primarily analyze the formalization descriptions of OV-1 and OV-6a products.

A. High-Level Operational Concept Graphic(OV-1) High-Level Operational Concept Graphic(OV-1) describes  a mission and highlights main operational nodes and interesting or unique aspects of operations. It provides a description of the interactions between the architecture and its environment, and between the architecture and external systems. It focuses on environment situations and action advance.

Definition 1 (High-Level Operational Concept Graphic) ( ,   , ,  ,  )HOCG Miss BPs HOCs Orgs Ass= , where?  Miss is a set of missions, and 0< iss? ? ?< +? , that means  Miss is not null and finite, | |Miss means the number of missions;  BPs is a set of business processes, business process is a class of processes and strategies which achieved business goals in business domain. Business process is compounded of so many elements such as participant, resources, goal, information, organization and function and so on.

0< BPs? ?< +? , that means BPs is not null and finite;  HOCs is the high-level operational assumptions. It describes a set of operational task concepts;  Orgs is a set of organizations which implement the  operational tasks, 0 rgs<?? ?< +? , that means Orgs is not null and finite;  Ass is a set of operational resources, 0 ss<?? ?< +? , that means Ass is not null and finite;  Definition 2 :: PABP PAs, ,PA_InfoFlows,?=< _ _PA_TranRules,PA TSRules,Pro Roles >  Where PAs is a set of activities.

: 2PAsPA PAs? ? represents the decomposition relationship of  PAs. PA_InfoFlows is a set of information flows exchanged  between PAs, so _PA InfoFlows PAs PAs? ? , _0 <| PA InfoFlows |<+? . PA_TranRules which usually  include information about transition events and gateway is a set of transition rules among process activities. Additionally, PA_TSRules implies time restrict rule and attributes of process including goal resources and so on. Pro_Roles which can be person or organization is a set of roles of process.

Definition  3 :: ,  _ ,  HOC Tasks Task Executors=< _ ,  _ _Task Orders Task Goals Task Interactions >?  Where Tasks is a set of operational tasks. Task_Executors is the operational task executers, Task_Executors ? Orgs.

Task_Orders is the implement operational order. Task_Goals is the goal of the operational tasks. Task_Interactions is the interaction between the tasks, tasks and resources, and tasks and external systems.

B. Operational Rules Model(OV-6a) Operational Rules Model(OV-6a) specifies operational or  business rules are constraints on an enterprise, a mission, operation, business, or an architecture. It provides guidelines for development and definition of more detailed rules and behavioral definitions that will occur later in the architecture definition process.

Definition 4 (Operational Rules Model) ( _ ,  _ ,  _ )ORM structure rules action rules derivation rules= ,  where,  structure_rules denotes mission or business domain terms and facts;  action_rules denotes some dynamic aspects of the business and specify constraints on the results that actions produce;  derivation_rules denotes algorithms used to compute a derivable fact.



III. MAPPING FROM OPERATIONAL VIEW PRODUCTS TO AGENT ORGANIZATIONS  As the glossarial expression of C4ISR architecture framework served for army domain, when it is used in other domains, the objects which the corresponding products specified will be changed. In order to keep the consistency with glossarial expression of C4ISR architecture framework, the paper still uses the same glossary, e.g. operational activity, operational node, but they have another declaration.

In the military domain, literature[10] indicates that organizations are the bases and conditions to implement functions and activities; In the enterprise domain, literature [11] indicates that organizations are composed of organization environment, organization goals and organization structure. In the sociology domain, literature[12] indicates that organizations contain activities, technologies, institutions and goals. But they always use the literal form to describe the    organizations. Don?t describe the contents and concepts integrally, exactly and normatively. That is a big handicap to understand the organization connotations. Therefore, it is necessary to analyze and abstract the organization elements, and form the organization formalization descriptions. We import the Agent technology to the organization analysis and modeling. It makes the organizations possess strong consistency and adaptability in the face of complex dynamic environment. That can reflect the static structure and dynamic evolvement of organizations by means of agent organizations which are close to the realistic organizations. Finally, we think the agent organizations are composed of organization goals, organization entity, organization activity, organization relationship and organization capability. Now, we implement the agent organization element formalization description one by one as below.

Definition 5 (agent organization) ( _ , _ , _ ,Organization Org Goals Org Entities Org Activities=  _ Re , _ )Org ls Org Capabilities ,where,  Org_Goals is a set of organization goals.

0< _Org Goals? ?< +? , that means Org_Goals is not null and  finite. | _ |Org Goals means the number of goals;  Org_Entities is a set of organization entities. It is the basal element of organization, and the organization instantiation  form. 0< _Org Entities? ?< +? , Org_Entities is not null and finite;  Org_Activities is a set of organization activities.

0< _ ActivitiesOrg? ?< +? , Org_Activities is not null and finite;  Org_Rels is a set of organization relationships. It reflects relationships between organizations.

Org_Capabilities is a set of organization capabilities.

0< _ CapabilitiesOrg? ?< +? , Org_Capabilities is not null and finite.

A. Organization Goal Definition 6 (Organization Goals[13])  _ :: { _ }Org Goals org goal+= Where there is a duality function R between goals, when  considered the limit of resources and environment, it is an implement decision-making about the goal orders.

:: { } { , , }R goal goal serial before par= ? ? . ?serial? is not the specific order relationship between the implement goals, but the goals can?t be implemented simultaneously; ?before? is a sequence relationship between goals; ?par? is not any relationship between goals, when considered that the resources intersection is null, the goals can be implemented simultaneously.

Mapping Rule 1: The operational missions or tasks in OV-1 mapping the organization goals.

B. Organization Entity Definition 7 (Organization Entity)  _ :: _ , _ , _ ,Org Entity Org ID Org Name Org Nodes=< _ , _ _Org Roles Org Rules Org Structure >? , where,  Org_ID and Org_Name separately denote the exclusive identification and name;  Org_Nodes is a set of operational nodes which belong to  the organizations, 0 | _ |Org Nodes< < +? , Org_Nodes is not null and finite;  Org_Roles is a set of roles that belong to the organizations;  Org_Rules is a set of organization rules;  Org_Structure implies the level-decomposed relationship between organizations.

Definition 8 (Organization Role) _ ::Org Role =  _ , _ , _ ,Role Goals Role Res Role Plans Responsibilities< > Where Role_Goals is a set of role goals, and show the role  expectation. 0 | _ |Role Goals< < +? , Role_Goals is not null and finite. Role_Goals? Org_Goals, that means Role_Goals belong to Org_Goals; Role_Res is a set of role resources. Role resources may be  realistic entities or information entities.

Role_Plans is a set of role plans. Plans are a method of implementing or keeping some goals. A goal can possess of many plans, and is composed of a lot of activities; Responsibilities implies that the roles assume a set of responsibilities.

Definition 9 (Organization Rule) _ :: { _ }Org Rules org rule+=  Mapping Rule 2: The operational nodes in OV-2 mapping the organization nodes or roles.

Mapping Rule 3: The operational rules in OV-6a mapping the organization rules.

Mapping  Rule 4: The operational resources in OV-1 mapping the role resources.

C. Organization Activity Definition 10 (Organization activity)  _ :: _ , _ , _ , _ ,Org Activity Act ID Act Name Act Rel Act Res=< _Act Info > ,where,  Act_ID, Act_Name denote the exclusive identification and name for organization activity respectively;  Act_Rel denotes the sequence relationships between activities. Where there is a duality function Q between  activities, :: { } { , , , }Q act act serial before par control= ? ? .

?serial? is not the specific order relationship between activities, but the activities can?t be implemented simultaneously; ?before? is a sequence relationship between activities; ?par? is not any relationship between activities, and    the activities can be implemented simultaneously.; ?control? show that one activity control another activity implement.

Act_Res is a set of organization resources that the activity need. Act_Res ? Role_Res, that means Act_Res belongs to Role_Res.

Act_Info is a set of organization activity information. It describes the information elements which are transferred between organization activities. It is the base of organization interactions.

Definition 11 (Organization Activity Information) _ :: ,  >Act Info Nodes Information=<  Where Nodes is a set of operational nodes which is relative with information, and contain start node and terminal node. Nodes?Org_Nodes ; Information is a set of information elements that are transferred between organizations corresponding with organization activties.

Mapping Rule 5: The operational activities in OV-5 mapping the organization activities.

Mapping Rule 6: The operational information in OV-3 mapping the organization activity information.

D. Organization Relationship Literature[14] had an analysis and descriptions to express  the agent organizations relationships. But it is not integral.

Here, we extend the equivalence relationship between organizations. It makes the relationship landscape orientation extending.

Definition 12 (Organization Relationship) _ :: , , , ,Org Rel Aggregation Assoication Inheritance Authority=<  Dependence > ,where,  Aggregation denotes the aggregation relationship, Aggregation Org Org? ? . The aggregation relationship is a  relation between organization and its child organization, which is a relation of the integer and part. So, it carves up an  organization in more detail. 1 2,org org organization? ? , if org1 is a child organization of org2,  then 1 2( , )org org Aggregation? . Where the aggregation relationship has some attributes as follow.

Anti-reflexivity: For random organization, then ( , )org org Aggregation? .

Anti-symmetry: For two random different organizations  org1 and org2 , if 1 2( , )org org Aggregation? , then 1 2( , )org org Aggregation? .

Transitivity: For the organizations org1, org2 and org3, if 1 2( , )org org Aggregation?  and 2 3( , )org org ? Aggregation ,  then 1 3( , )org org Aggregation? .

Association denotes the association relationship. The association relationship shows an equivalence relation  between organizations, and it is an interaction method.

Organizations can communicate with each other by means of the relationship. Where the association relationship has some attributes as follow.

Symmetry: For two random different organizations org1  and org2 , if 1 2( , )org org Association? , then 2 1( , )org org Association? .

Transitivity: For the organizations org1, org2 and org3, if 1 2( , )org org Association?  and 2 3( , )org org ? Association ,  then 1 3( , )org org Association? .

Inheritance denotes the inheritance relationship, Inheritance Roles Roles? ? . It show the relationship of common and specialty. In the level-structure relationship, the inheritance relationship is a very important nature abstract.

The inheritance between roles primarily shows the inheritance of goals, plans, activities and resources. The child role share the father role attributes by inheritance. Where the inheritance relationship has some attributes as follow.

Anti-symmetry: For two random different roles A and B,  if ( , )roleA roleB Inheritance? , then ( , )roleB roleA Inheritance? .

Transitivity: For the roles A, B and C,  if ( , )roleA roleB Inheritance?  and ( , )roleB roleA Inheritance? , then ( , )roleA roleC Inheritance? .

Authority denotes the authority relationship.

Authority Roles Roles? ? . The authority relationship is an  own organization relation in level-structure organization. The role which possess the authority ability can control or influence another or many roles. It expresses a strict level- controlling relation. Where the authority relationship has some attributes as follow.

Reflexivity: For random role, then ( , )role role Authority? .

Anti-symmetry: For two random different roles A and B ,  if ( , )roleA roleB Authority? , then ( , )roleB roleA Authority? .

Transitivity: For the roles A, B and C, if ( , )roleA roleB Authority?  and ( , )roleB roleC Authority? ,  then ( , )roleA roleC Authority? .

Dependency denotes the dependency relationship.

Dependence Org Org? ? . It is a special semantic relation.

When an organization has changed, it influences another organization directly. The result is that another organization will change, too. The dependency relationship contains unilateralism dependency and bidirectional dependency.

Mapping Rule 7: The association between organizations in OV-4 mapping the organization relationship.

E. Organization Capability Definition 13 (Organization Capability[13])  _ :: _Org Capabilities org capability+=< > Where it is a set of organization capabilities. There is a  duality relationship N between Org_Goal and Org_Capability  then : _ _ {1,0}N Org Goal Org Capability? ? , ( , ) 1m nN g c =  shows that in order to achieve the goal gm , it  demands the agent which has the capability cn provides the  sustainment. ( , ) 0m nN g c =  shows there is no relationship between the goal gm and the capability cn.

Mapping Rule 8: The capabilities which are composed of activities in OV-5 mapping organization capabilities.



IV. CASE ANALYSIS Organization Goal Mapping: Take the Figure 1 for  example to show the operational missions or tasks.

Task G oal 1  Task G oal 2  O R A N DTask G oal 3  Task G oal 5  Task G oal 4   Figure 1.  Operational task goals  According to Mapping rule 1, we can obtain the diagram of the agent organization goals, as shown in Figure 2.

Org goal 1  Org goal 2  OR ANDOrg goal 3  Org goal 5  Org goal 4   Figure 2.  Organization goals  Where agent organization goals Org_Goals=<organization 1, organization 2, organization 3, organization 4, organization 5>. It is the ?serial? type between the organization 1 and the organization 2. It is the ?before? type between the organization 1 or the organization 2 and the organization 3. It is the ?par? type between the organization 4 and the organization 5.

Organization Entity Mapping: According to Mapping rule 2-4, use the Figure 3 to show organization entity.

Organization Roles Organization Rules  Org Node 1 Org Node 2 Org Node 4O rg Node 3  Child O rg 1 Child O rg 2  Organization Entity 1  comm and  relation   Figure 3.   Organization entity  Where organization 1, organization 2, organization 3, organization 4 and organization role can be obtained from the operational nodes in OV-2 product. The operational rules in OV-6a provide the organization rules. Organization 1 and organization 2 reflect the structure character.

Organization Activity Mapping: Take the Figure 4 for example to show the operational activities in OV-5 product.

A1.1 operational activity 4 A1.2  operational activity 5  A1 operational activity 1  A2 operational activity 2  A3.1 operational activity 6  information flow 1  information flow 2  information flow 3  A3 operational activity 3  A3.2 operational activity 7  AND  information flow 4  Figure 4.  Operational activities  According to Mapping rule 5, we can obtain agent organization activity diagram, as shown in Figure 5.

PA1.1 Organization  activity 4 PA1.2 Organization  activity 5  A1 Organization  activity 1 PA2  Organization activity 2  PA3.1 Organization  activity 6  Activity information 1  Activity information 2  Activity information 3  PA3 Organization  activity 3  PA3.2 Organization  activity 7  AND  Activity information 4   Figure 5.  Organization activities  Where agent organization activities Org_Activities ? <organization activity 1, organization activity 2, organization activity 3, organization activity 4, organization activity 5, organization activity 6, organization activity 7>. The organization activity 1 controls the organization 4 and the organization 5. It belongs to ?control? relationship. It is the ?before? relationship between the organization 4 and the organization 5. However, it is the ?par? relationship between the organization 6 and the organization 7.

The information flows will be obtained from OV-3 product. So according to Mapping rule 6, the organization activity information correspond with the operational information flows in OV-3.

Organization Relationship Mapping: use the Figure 6 to show OV-4 product.

Organization 1  Organization 2 Organization 3  Child Organization 2  Child Organization 3  Child Organization 4  Child Organization1  Command rel 2Command rel 1  Cooperation rel 1  Command rel 3 Command rel 4 Command rel 5 Command rel 6  Command  rel 7  Cooperation  rel 2   Figure 6.  Organization relationships  According to Mapping rule 7, agent organization relationships Org_Rel=< Aggregation, Association, Authority>. Command relationship map authority relation.

Cooperation relationship map association relation. The child organization 1 and the child organization 2 form the organization 2. It is the aggregation relationship. Therefore, the aggregation relationship is the same to the organization 3 with The child organization 3 and the child organization 4.

Organization Capability Mapping: According to the architecture framework definition, the operational capabilities are composed of a set of operational activities. So, the activities show capabilities. Use the Figure 7 to show operational capabilities in OV-5 product.

O perational activ ity  1  O perational activ ity  2  O perational activ ity  3  O perational capability  1  O perational activ ity  4  O perational capability  2  T ask goal 1   Figure 7.  Operational capabilities  According to Mapping rule 8, Use the Figure 8 to show organization capabilities diagram.

O rg a n iz a t io n a c tiv i ty  1  O rg a n iz a tio n a c t iv i ty  2  O rg a n iz a tio n a c t iv i ty  3  O rg a n iz a tio n c a p a b il i ty  1  O rg a n iz a tio n a c t iv i ty  4  O rg a n iz a tio n c a p a b il i ty  2  O rg a n iz a t io n  g o a l  1   Figure 8.   Organization capabilities  Where agent organization Org_Capabilities=<organization capability 1, organization capability 2>. The organization capability 1 is composed of organization activity 1 and organization activity 2. The organization capability 2 is  composed of organization activity 3 and organization activity 4. However, it need the organization capability 1 and the organization capability 2 to support. organization goal 1 achievement.



V.  CONCLUSION As the above said, we can acquire requirement from the  architecture produces, and abstract the agent organization formalization descriptions integrally. At the same time, we establish the mapping association between them. Finally, the requirements come into the agent organizations. Solve the key problem that is the transition from problem domain to solution domain. Provide the support to the organization-base method for modeling multi-agent system next step.

