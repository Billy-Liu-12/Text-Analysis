Mining Temporal and Spatial Object Relations in Multimedia Contents

Abstract A number of studies on multimedia data mining have been done in recent years. However, the existing work on mining spatial patterns in multimedia databases is very restricted although it is an emerging research topic. The existing data mining methods for multimedia contents can only find simple spatial relationships among objects and do not consider the temporal changes of the spatial patterns.

In this paper, we propose an effective method that is concerned with the discovery of spatial patterns among objects from multimedia contents that were sequentially captured from a remote wireless camera. The proposed method can efficiently discover complex spatial relationships among objects like the northeast, southeast, northwest and southwest. Besides, we further explore the temporal concept for spatial patterns in multimedia databases. An effective method is also proposed for finding the temporal changes of spatial patterns. Through empirical evaluation, the proposed method is shown to deliver excellent performance under different system conditions.

1.Introduction In recent years, a number of studies have been done on  the techniques of database mining. One ofthe extensively studied topics is the association rule mining [1][2] that discovers the association rules from supermarket database.

In [3], the authors also explored the sequential patterns of the customers. The association rule mining has been applied to various fields. With the rapid growth of multimedia contents, more and more researches were made on this problem encountered in the filed of multimedia analysis. Since the multimedia extracting techniques are becoming mature [4][7][8], it is possible to apply data mining technologies to discovering interesting knowledge from the multimedia contents. It is observed that mining the multimedia content is an emerging topic attracting numerous of attention. However, the existing work on mining spatial patterns in multimedia databases  Figure 1. An example scenario of remote multimedia content acquisition.

is very restricted. Several studies on multimedia mining are proposed in [5][6][7][10][11][12][13]. The existing mining methods can only find very simple spatial relationships among objects and do not consider the temporal changes of the spatial patterns.

Some of the related studies focused on mining the  spatial relations among objects [9][10]. The authors considered each image as a transaction and the extracted objects as items. They first found the association relation among objects and then they discussed the following four spatial relations:  1. H-next-to: H-next-to (Of, 02) means that object O1 is horizontal to object 02.

2. V-next-to V-next-to (0s, 02) means that object 0 is vertical to object 02-  3. Overlap Overlap (O1, 02) means that object 01 overlaps object 02.

4. Include Include (01, 02) means that object 01 includes object 02-     Therefore, the authors can discover the association relations among object 01 and 2: H-next-to(O0, 02), V-next-to(O0, 02) Overlap(O0, 02), and Include(O0, 02)  In this paper, we explore more detailed spatial relations.

Consider the scenario as shown in Figure 1. Suppose that we place the digital camera, which is attached with a wireless transmission device, in the field where it would be dangerous or the weather is severe. The images or videos that are sequentially captured from this remote camera can be sent back via the wireless transmission device and be stored in the multimedia database for discovery of spatial patterns and temporal pattern changes.

We assume that each object locates in a Cartesian coordinate system and is with a (x, y) value. By using this system, we will discover more spatial relations among objects. Our proposed method can efficiently discover complex spatial relationships among objects like the northeast, southeast, northwest and southwest. Besides, we further explore the temporal concept for spatial patterns in multimedia databases. An effective method is also proposed for finding the temporal changes of spatial patterns. Through empirical evaluation, the proposed method is shown to deliver excellent performance under different system conditions.

The rest of this paper is structured as follows. In  Section 2, we give the problem formulation. In Section 3, we describe the proposed method and the underlying data structures. The empirical evaluation for performance study is made in Section 4. The conclusions and future directions are given in Section 5.

2. Problem Statement Given a set of images or videos that were sequentially  captured from a remote wireless camera, we define several time periods for the data, i.e., the images or videos are grouped by the pre-defined time period. There are a lot of studies [4][7][8] that discuss the issue of extracting objects from images and hence we will obtain a database composed of the images with extracted objects.

In [8][9], the authors use Apriori algorithm [2] to discover the association rules among objects by considering each image as a transaction and each object that belongs to this image as an item. In this paper, we integrate the time issue into this concept. The transactions are embedded with the captured time and will be grouped by the pre-defined time period.

We here address the two issues that need to be  explored:

I. For each time period, we find that there are some  spatial relations among the objects.

Figure 2. An example of relations among objects.

0 f}?*.-ss  ?2'> s 2 I  i~~~~~~Tii Figure 3. An example of pattern changes.



II. For the objects of images of two consequent time periods, the relations might change or disappear, and we will discover the temporal pattern changes.

Hence, we proposed two methods, named SP-Miner  and CP-Miner, to discover the spatial and temporal relations from the multimedia database.

SP-Miner is a data mining method that can discover the  spatial patterns from the database of each time period. As mentioned, lots of methods can be used to extract the objects from images to form a new database, namely D. 0 is a set containing all of the objects in D, written as 0 = {01, 02, Om} Each image is represented as (mi, ti), where mi {oj oj E 0} and ti is the time period transformed from its captured time. Take a habitat monitoring case for example, if the capturing rate of camera is 24 images per day, i.e., 1 image per hour, we will obtain 672 (24*28) images after 4 weeks.

Furthermore, we define the time period as one week, and the images will be divided into four groups according to their captured time. The location of each object is represented by Cartesian coordinate system. Figure 2 is an example of relations among objects in an image. The location of object 01 is (75, 45), written as 01 = (75, 45); in the database, this object is stored with its object identification as < 01, 75, 45>. Four spatial relations are defined in this paper:

I. North-West (NW). As shown in Figure 2, 01 is NW to  02.



II. North-East (NE). As shown in Figure 2, 02 is NE to  03.

III. South-East (SE). As shown in Figure 2,02 is SE to 01.

0 t  (  O 2.

[r-| L__ te  f i_ 0 ,,,    Algorithm SP-Miner Input: set ofobjects extracted from image( D),  minumum support( Smin) Output: Spatial Patterns  Procedure SP-Miner(D, Smin)  1. C,=I 1-Candidate ltemset}; 2. SP1= I-Patterns}; 3.

4. for(m <-2;SP,1 .0; m m+ )dot 5. Cm <-Candidate-gen(SP,1) 6. foreach inage I in Di dot 7. Ci <-subset(Cm,1) 8. foreach candidate c in Ci dol 9. c.support *-c.support+? 10. if( x > 0and v O) then c.upportNE <-c.supportNE+I IL. else if ( x 0 and y <0) then c.upportSE +-c.supportSE+l 12. elseif( x Oand v'0)thenc.upportNW -c.supportNW+I 13. else c.upportSW -c.supportSW+1 14.

15.

16. SPm*e {c ECm Ic.support > Smin  and (c.supportNE > Smin or c.supportSE > Smin or c.supportNW > Smin or c.supportSW . Sminm)  17.

Figure 4. SP-Miner Algorithm.



IV. South-East (SW). As shown in Figure 2, 03 iS SW to ?I.

Spatial Patterns: -a spatial pattern p = <01, 01- 02 spatial relationship, 02, 02- 03 spatial relationship, 03, ....

On-1-n spatial relationship, On> is called a n-spatial pattern.

A spatial pattern p is called a frequent spatial pattern if its support is greater than the specified minimum support.

Besides, the spatial patterns discovered from time period t is called t-spatial pattern set (SP,). The support of pattern p can be written as:  sup(p)= DI Pattern Changes: The proposed CP-Miner algorithm  is able to discover the pattern changes between two consequent time periods. As shown in Figure 3, the spatial relation among 01 and 02 changes from time period t1 to t2. At time period t1, the spatial pattern is <ol, NE, 02> while at time period t2 the spatial pattern is change to <ol, SW, 02>. It is observed that the relations among objects changed, and this kind of pattern changes can be written  as <01, NE, 02 -*<01, SW, 02>.

3. Proposed Method In this paper, we proposed SP-Miner and CP-Miner to  discover the spatial and temporal relations among objects, and there two algorithms are detailed in section 3.1 and section 3.2, respectively.

3.1 SP-Miner  In this section, we extend the Apriori algorithm, namely SP-Miner, to discover the spatial associated patterns. Due to the Apriori approach can only discover the association relations among objects and omit the spatial object relations, we modify the Apriori algorithm to discover the spatial associated patterns. Figure 4 shows the detailed algorithm of SP-Miner. The input of SP-Miner is a multimedia database D and a specified minimum support Smin. To evaluate the spatial object relations, each object located in Cartesian coordinate system will be assign a (x, y) pair value. The four spatial object relations have already described in section 2.

We here detail the SP-Miner algorithm. First,  SP-Miner performs a scan on the database to calculate the support of each object (line 1) and filters out the objects with support smaller than Smin and obtains a frequent 1-Pattern set (line 2). In line 4, the for-loop iteratively checks whether there can be more candidate set or not. If there is no more candidate set that can be generate from current frequent pattern set, this procedure ends. In line 5, SP-Miner calls the sub-procedure candidate-gen() to generate candidate from the give spatial patterns. The detailed algorithm of candidate-gen is shown in Figure 5.

SP-Miner then should scan the database to determine the frequent im-spatial patterns. For each image I in database D (line 6), SP-Miner generates all of the combination of SPmil and put the combinations into the set C1 (line 7). For each combination! candidate in Ci (line 8), the count is increased by 1 (line 9) and the spatial relation is also evaluated (line 10 - line 13). Finally, all of the m-spatial patterns with support smaller than the specified minimum will be filtered out and the frequent m-spatial patterns form a set, i.e., SPm (line 7). After the iteration, all of the frequent spatial patterns will be obtained and stored in the sets.

3.2 CP-Miner Once the spatial patterns are obtained, we then focus on  the mining of temporal patterns from the database. As mentioned in section 2, each image is represented as (mi, ti) to carry the time characteristic. Notice that in this paper we are interested in discovering the pattern changes among time periods. Each absolute time value should be     Algorithm. CP Input: The spatial pattern sets Output: The set CP.

Algorithm. candidate-gen Input: SP.,l Output: Cm  Procedure CP( SPi, SPj,1) , 1 foreach(m e 2; m < maxLength(SP,, SP.,,);m - m + 1) do{ 2 CP <- sp ((sp.object, E SPi.object, and  sp.object, o SPi,.objectj) or (sp.object, z SP>.object, and sp.object cE SPj,.objectj)) and sp.length=mt  3 CP' v- sp (sp E SP, and sp E SPj,1) and sp.length=m} 4 CP <- {select p.object1,p.object,,....,p.objectm  from SP, p. SPi+ q where p.object, =q.object, and p.object, =q.object,  and ... and p.objectm=q.object.

5 CP e maxMatch(SP, SP,+,) 6 }  Figure 6. CP-Miner algorithm.

grouped into the pre-defined time period. Take the following scenario for example. Suppose that we have a remote wireless camera that captures images for one year, we will have the images with each embedding its captured time. If for some application that is interested in the pattern changes among seasons, the time period should be set to three months. It is to say, the images in database should be divided into four groups, {Jan., Feb., Mar.}, {Apr., May, Jun.}, {Jul., Aug., Sep.} and {Oct., Nov., Dec.}, according to their captured time. Recall that we can use SP-Miner to discover the frequent spatial patterns for images of each individual time period. However, SP-Miner only discovers the spatial patterns with considering the temporal issue. Consequently, we propose a mining method named CP-Miner to deal with the temporal issue.

Figure 6 shows the complete algorithm of CP-Miner.

The input of CP-Miner is the t1 and ti+I spatial pattern sets discovered by SP-Miner. In the beginning of this algorithm, we determine the maximal length of given spatial patterns, and iteratively execute the pattern change mining till the termination is satisfied (line 1). Then we search the spatial patterns with length equal to m and are exclusive in the two sets (line 2). A pattern p is exclusive in two given sets if and only if there is only one set that contains p. This kind of pattern changes demonstrates the disappearance changes. For example, given two sets A-SP and B-SP, if a spatial pattern <o1, SW, 02> exists in only set A-SP, it means that this pattern disappear in time period TB. This is the disappearance change, and is  Procedure candidate-gen(SP.,l)  Cm e {select p.object1, p.object 2.p.object_,, q.objectm from SP.l p, SP.-, q where p.object, = q.object, and p.object, = q.object. and ...

and p.object,2 = q.object,. and p.objectm, q.objectm-1  Figure 5. Candidate-gen algorithm for SP-Miner.

represented as <01, SW, 02> -- <X>. Similarly, if a pattern <03, SE, 04> exists in set B-SP and does not exist in set A-SP, it means that this is a new spatial pattern, which is an appearance change, represented as <X> -> <03, SE, 04>. After the appearance and disappearance changes are obtained, CP-Miner removes the redundant spatial patterns that exist in both of SPi and SPi,1 (line 3).

CP-Miner then retrieves the patterns that contain the same objects but different spatial relations (line 4). Finally the pattern changes are listed in pattern form and output (line 5).

4. Experiment Results  Because of the difficulty in obtaining real data, we developed a simulator to generate the experimental data.

Three experiments are conducted to evaluate the performance of SP-Miner and CP-Miner under different system conditions by varying the parameters in terms of support threshold, average number of objects per image, number of different objects in database, respectively.

Meanwhile, the effects of varying these system parameters were also studied. All of the experiments were conducted on a P4-1.7GHz machine with 256 MB main memory. The algorithm and simulation are implemented in C++ running on Microsoft Windows XP system.

4.1 Effect of varying the support threshold In this experiment, we evaluate the performance of  SP-Miner and CP-Miner when varying the support threshold. There items, execution time, number of spatial patterns and number ofpattern changes, are measure here.

Notice that the execution time is the sum time of SP-Miner and CP-Miner.

Table 1. Major parameters in the experiments.

Parameter Description Default Value  IDI .Number of images 100000 11L Number of different objects 1000  AvgObi Average objects per image 8 Smin Minimum support 0.2% ITI Number of sessions 4  Figure varied.

Fil vai  7. Execution time with support threshold  I"~~~~~I.

lure 8. Number of patterns with support threshold ried.

f-i-4 -U--I~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  L__ Figure 9. Number of changesExecution time with support threshold varied.

Table 1 shows the main parameters in the experiments as follows:  1. Database size: IDI=40000, 100000, 200000, and 300000.

2. Number of objects: 101=1000.

3. Average number of objects per image: AvgObj=8.

4. Support threshold: Smin=0.2%, 0.3%, 0.4% and  0.5%.

5. Number of time periods: |Tj=4.

Figure 7 shows that the larger database requires more execution time under the same support threshold and the smaller support will require also require more execution time for the same data. The reason is that the more transactions cost more time for SP-Miner to read. Besides, the smaller support threshold will generate more candidates and hence slow down the execution time.

In Figure 8, we observe the numbers of spatial patterns of these four dataset are very close. This is because that our data generator has two module, rule generating module and random data module, where the rule generating module generates the preset data in a specified ratio and the random data module generates the random object relations. The ratio of rules among the dataset are almost the same, and the randomized data might not have high probability to form new patterns. Hence, the numbers of spatial patterns are very close in this figure.

Figure 9 shows the similar result.

4.2 Effect of varying the average number of objects per image  This experiment analyzed the impact when varying the average number of objects per image. The following lists the major conditions.

1. Database size: IDI=40000, 100000, 200000, and 300000.

2. Number of objects: 101=1000.

3. Average number of objects per image: AvgObj=4, 8,  and 12.

4. Support threshold: Smin=0.2%.

5. Number of time periods: ITI=4.

The experimental result is as shown in Figure 9. In this experiment, we find the execution time increases with the AvgObj. The higher AvgObj value will generate more and longer spatial patterns, and therefore more execution time is needed. We do not list the impact of number of spatial patterns and pattern changes for the results are similar to the experiment in section 4.1. This experiment also indicates that the larger database requires more execution time as stated in section 4.1.

4.3 Effect of varying the number of objects   I    Figure 9. Execution time with average number of objects per image varied.

Figure 10. Execution time with number of objects varied.

This experiment analyzed the impact when varying the number of objects in database. The following lists the major conditions.

1. Database size: ID1=40000, 100000, 200000, and 300000.

2. Number of objects: 101=400, 1000, and 1500.

3. Average number ofobjects per image: AvgObj=4, 8,  and 12.

4. Support threshold: Smin=0.2%.

5. Number of time periods: JTJ=4.

From Figure 10, we observe that the larger number of  objects will require more the execution time. The main reason is that more objects will generate more 1-candidate and 2-candidate patterns, and hence both of SP-Miner and CP-Miner need more time to calculate the support of patterns.

5. Conclusions In this paper, we propose a data mining method that can  discover the spatial and temporal object relation pattern in multimedia contents. We first adopt the existing segmentation methods to extract the objects from multimedia databases and the location of objects. Then, the proposed method is applied to discover the spatial patterns and pattern changes. The proposed method can be used to analyze interesting object relations in multimedia contents like videos obtained from wirelsee sensor  devices. Through empirical evaluation, the proposed method is shown to deliver excellent performance under different system conditions.

For the future work, we will extend SP-Miner and CP-Miner to deal with more relations like "include" and "cover" relations.

These two relations involve the physical area of objects and advanced extracting techniques. Furthermore, we will work on the integration with video files and MPEG-4 contents in the wireless environments.

ACKNOWLEDGEMENT This research was supported by Ministry of Economic Affairs, R.O.C., under grant no. 92-EC-17-A-02-5 1-024.

6. References [I] R. Agrawal, T. Imielinkski, and A. Swami. Mining Association Rules  between Sets of Items in Large Databases. Proceedings of ACM SIGMOD Conference on Management of Data, pages 207-216, Washington, D.C., May 1993.

[2] R. Agrawal and R.Srikant. Fast Algorithm for Mining Association Rules.

Proceedings of the Very Large Data Base (VLDB-94), pp. 487-499, Santiago, Chile, 1994.

[3] R. Agrawal and R. Srikant. Mining Sequential Patterns. In Proc. of the I th Int'l Conference on Data Engineering, pages 3-14, Taipai, Taiwan, March 1995.

[4] Z.-N. Li, 0. R. Za?ane, and Z. Tauber. Illumination lnvariance and Object Model in Content-Based Image and Video Retrieval. Joumal of Visual Communication and Image Representation, Academic Press, vol. 10, n 3, pages 219-244, September 1999.

[5] C. Ordonez and E. Omiecinski. Image mining: A new approach for data mining. Technical Report GITCC-98-12, Georgia Institute ofTechnology, College of Computing, 1998.

[6] C. Ordonez and E. Omiecinski. Discovering Association Rules based on Image Content. Proceedings of the IEEE Advances in Digital Libraries Conference, pages 38-49, Baltimore, Maryland, May 1999.

[7] R. 0. Stehling, M. A. Nascimento, and A. X. Falc?o, On "shapes" of colors for content-based image retrieval. Proceedings of the ACM Multimedia 2000 Workshops, pp. 171-174, November 2000.

[8] W. Wang, Y. Song, and A. Zhang. Semantics-Based Image Retrieval by CIVR 2002, M.S. Lew, N. Sebe, J.P. Eakins, pp. 29-37, July 2002.

[9] 0. R. Za?ane, J. Han, Z.-N. Li, J. Y. Chiang, and S. Chee.

MultiMediaMiner: A system prototype for multimedia datamining. In Proc. Int'l Conf. on Management of Data (ACM-SIGMOD'98), pages 581-583, Seattle, June 1998.

[10] R. Za?ane, J. Han, Z.-N. Li, and J. Hou. Mining multimedia data. In proc.

CASCON'98: Meeting of Minds, pp. 83-96, Toronto, Canada, November 1998.

[11] R. Za?ane, J. Han and H. Zhu. Discovering Spatial Associations in Images.

Data Mining and Knowledge Discovery: Theory, Tools, and Technology 11, SPIE 14th Int'l Symposium on Aerospace/Defense Sensing, Simulation and Controls, pp. 138-147, Orlando, FL, April 2000.

[12] 0. R. Za?ane. Discovering Patterns With and Within Images. Chapter 2 in Multimedia Mining- A Highway to Intelligent Multimedia Documents, edited by Chabane Djeraba, published by Kluwer Accademic Publishers, pages 27-42, 2002.

[13] M. J. Zaki, S. Parthasarathy, W. Lin, and M. Ogihara. Evaluation of sampling for data mining of association rules. Technical Report 617, University of Rochester, Rochester, NY, 1996.

