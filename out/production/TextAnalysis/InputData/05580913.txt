Qingdao, 11-14 July 2010

Abstract:  Mining association rules is to discover associations among  purchased items, which are valuable for cross-marketing,  catalog design, add-on sales, store layout and customer  segmentation Mining web traversal patterns is to discover  traversal sequences for most of the web users, which can  provide navigation suggestions for web users. However,  association rules cannot describe navigation behaviors of web  users, and web traversal patterns cannot describe purchasing  behaviors of web users. To overcome these disadvantages, this  paper proposes a method to simultaneously discover both  navigation and purchasing behaviors of customers, such that  the requirements of the web site managers can be satisfied.

Keywords: Web traversal pattern; Web transaction pattern;  Association rule  1. Introduction  Today, web has turned to be the largest information  source. Applications are ported to the web at rapid pace.

Web mining [2, 3, 4, 5, 6, 20, 21] refers to extracting useful  information and knowledge from a large amount of web  data, which applies data mining techniques [4, 12, 18] to  improve the web services Mining web traversal patterns  [20] is to discover most of users' access patterns from web  logs These patterns can not only be used to improve the  website design (e.g. , provide efficient access between  highly correlated objects, and better authoring design for  web pages, etc. ), but also be able to lead to better marketing  decisions (e g ,  putting advertisements in proper places,  better customer classification, and behavior analysis, etc. ).

As the electronic commerce (Be) activities become  more and more diverse, it is very critical to provide the  right information to the right customers In EC environment,  how to find the association rules among purchased items is  very important. If we provide this kind of information to the  web site manager, the performance of cross-selling should    be improved. However, the web site managers may also pay  attention to the navigation behaviors of customers.

Association rule mining just purely considered the  purchasing behaviors of customers. It cannot fully satisfy  978-1-4244-6527 -9/10/$26.00 201 0 IEEE  the managers' requirements. Therefore, it is very important  to simultaneously consider the navigation behaviors and  purchasing behaviors of customers, that is, combine the  web traversal patterns and association rules to provide more  information for the web site managers. The combinations of  web traversal patterns and association rules are called web  transaction patterns. In the following, we describe the  definitions about web traversal patterns and web transaction  patterns.

Let W = {WI, W2, . . .  , wn} be a set of all web pages in a  website. For a traversal sequence <WI,W2, . . .  ,WI>, if there is  a link from Wi to Wi+1 (for all i, 1 <:: i <:: 1-1) in the web site  structure, then the traversal sequence is a qualified traversal  sequence. A user purchasing sequence database D, as  shown in Table 1, contains a set of records.

Table 1. User purchasing sequence database D  TID Purchasing Sequence  1 DAF {3 }GB{2,5,7} C  2 DF {3,4 }GB{2,5}CKJ{ II}  3 AE{9}GIC{ 1,6,8}H  4 AFE{9,1O} IC{ 1,6,8} KJ  5 F {4 }GIC{ 6,8}KJ{lI}  6 AE{9, 12}GIC{ 1,6,8}KH  7 DF{3,4}GB{5,7}CK  Each record includes traversal identifier (TID) and a  user purchasing sequence. A user purchasing sequence is a  traversal sequence including purchased items. For example,  in Table 1, the purchasing sequence for TID 1 is <DAF {3}  GB{2,5,7}C>, which means that the user purchases item 3  on web page F and purchases items 2, 5 and 7 on web page  B. <DAFGBC> is a complete traversal behavior for a user,  which is called a user sequence.

A traversal sequence S = <WI, W2, . . .  , wp> (Wi E W, 1  <:: i <:: p) is a list of web pages which is ordered by traversal  time, and the web page can repeatedly appear in this  sequence, that is, backward references are also included in a  traversal sequence. For example, if there is a user which    visits web page B, and then visits pages G and A    Qingdao, 11-14 July 2010  sequentially, and comes back to web page B, and then visits  web page C. The sequence <BGABC> is a traversal  sequence. The support for a traversal sequence a is the ratio  of the number of user sequences which contain a to the  total number of user sequences in D. It is usually denoted as  Support (a). The support count of a is the number of user  sequences which contain a The support for a purchasing  sequence fl is the ratio of user purchasing sequences which  contain fl to the total number of user purchasing sequences  in D. It is also usually denoted as Support (fl ). The support  count of fl is the number of user purchasing sequences  which contain fl . A traversal sequence a is a web traversal  pattern if a is a qualified traversal sequence and Support Ca)  2 min_sup, in which the min_sup is the user specified  minimum support threshold. For instance, in Table 1, if we  set min_sup to 40%, then Support CK = 517 = 71.43%  2 min_sup = 40%, and there is a link from web page C to  web page K in the web site structure shown in Figure 1.

Therefore, <CK> is a web traversal pattern.

Figure 1. Web site structure  A purchasing sequence is a traversal sequence with  purchasing behaviors. Let I = {ii, i2, ... , im} be a set of all  items. A purchasing sequence is denoted as <wdid,  w2{i2}, ... wq{iq}>, in which Wi E W (1 ? i ? q), ij C I (1 ? j  ? q) and <Wi, W2, ... , wq> is a traversal sequence. If there is  no purchased item in a web page, the purchased item need  not to be attached with the web page. For example, if there  is a user which visits web page B, and then visits web page  G on which items 1, 2 and 3 are purchased, and then visits  web page A sequentially. And then the user comes back to  web page B, and then visits web page C on which items 4  and 5 are purchased. The sequence <BG{I,2,3}ABC{4,5}>  is a purchasing sequence. A purchasing sequence a is a  qualified traversal sequence and contains at least one of the  web pages with purchasing behavior. A purchasing  sequence a is a web transaction pattern if Support Ca) 2  min_sup, in which the min_sup is the user specified  minimum support threshold. For instance, in Table 1, if we    set min_sup to 40%, then Support C<C{6,8}K = 317 =  42.86% 2 min_sup = 40%. Since there is a link from "C" to  "K" in the web site structure shown in Figure 1,  <C{ 6,8} K> is a web transaction pattern.

In this paper, we propose a method to simultaneously  discover both the web traversal patterns and the web  transaction patterns. The rest of the paper is organized as  follows. Section 2 introduces the most recent researches  related to this work. Section 3 describes our web traversal  pattern and web transaction pattern mining algorithm.

Finally, we conclude our work in Section 4.

2. Related work  Path traversal pattern mining [2, 3, 14, 21, 22] is to find  navigation behaviors for most of the users in the web  environment. The web site designers can use this  information to improve the web site design [7, 15, 16], and  to increase the web site performance. Besides, this  information can also provide the navigation suggestions to  customers. Many researches focused on this field, e.g., FS  (Full Scan) algorithm, SS (Selective Scan) algorithm [2],  MAFTP (Maintenance of Frequent Traversal Patterns)  algorithm [21], and other algorithms [3, 14, 17].

Nevertheless, these algorithms have the limitations that  they can only discover the simple path traversal pattern  which there is no repeated page in the pattern, that is, there  is no backward reference in the pattern and the support for  the pattern is no less than the minimum support threshold.

These algorithms just consider the forward references in the  traversal sequence database. Therefore, the simple path  traversal patterns discovered by the above algorithms are  not fit in the real web environment.

Non-simple path traversal pattern, i.e., web traversal  pattern, contains not only forward references but also  backward references. This information can present user  navigation behaviors completely and correctly. The related  researches are MFTP (Mining Frequent Traversal Patterns)  algorithm [20] and FS-Miner algorithm [6]. MFTP  algorithm can discover web traversal patterns from traversal  sequence database. This algorithm considers not only  forward references, but also backward references. FS-Miner  algorithm can discover web traversal patterns from the  traversal sequence database, which scans database twice to    build a FS-tree (frequent sequences tree structure), and then  discovers web traversal patterns from the FS-tree. However,  the FS-tree may be too large to fit into memory. Besides,  FS-Miner finds the consecutive reference sequences  traversed by a sufficient num ber of users, that is, they just  consider the consecutive reference sub-sequences of the  user sequences. However, there may be some noises which  exist in a user sequence, that is, some pages in a user  sequence may be not the pages that the user really wants to    Qingdao, 11-14 July 2010  visit. If all sub-sequences for a user sequence are  considered, then FS-Miner cannot work. Therefore, some  important web traversal patterns may be lost for FS-Miner  algorithm.

Association rule mining [1, 8, 9, 13] is to find the  associations between purchased items in EC environment.

Apriori algorithm [1] is the first algorithm to address the  problem for finding association rules. Apriori algorithm  utilizes length k-frequent item sets to generate length  (k+ I)-candidate itemsets, and then scans the entire database  to find the length (k+ I)-frequent itemsets. This algorithm  generates a large number of candidate item sets (if there are  1,000 frequent item sets with length 1, then there are  1,000x99912=499,500 candidate item sets with length 2  generated) and wastes a lot of time for scanning the whole  database (if there is a frequent itemset with length 20, then  the entire database will be scanned at least 20 times).

Therefore, the algorithm DHP (Direct Hashing and Pruning)  [13] was proposed to address the problems happened in  Apriori. DHP algorithm utilizes a hash table to reduce the  number of candidate itemsets with length 2 and a trimming  database strategy to avoid scanning entire database.

Although the DHP algorithm can reduce a lot of candidate  itemsets with length 2, it still generats too many candidate  itemsets and takes a lot of time for scanning database.

The algorithm FP-Growth (Frequent Pattern-Growth)  algorithm [8] is then proposed by Han to avoid candidate  generation by compressing the transaction database into an  FP-tree and pursuing partition-based mining recursively.

However, if the database is huge and sparse, the FP-tree    will be large and the space requirement for recursion is a  challenge. For this reason, the algorithm H-mine  (Hyper-Structure Mining) [9] ws proposed by Han. H-mine  algorithm also avoids candidate generation by compressing  the transaction database into a H-struct and pursuing  partition-based mining recursively. H-mine absorbs the nice  features of FP-Growth. It is essentially a frequent-pattern  growth approach since it applies divide-and-conquer  methodology without generating candidate patterns.

However, unlike FP-Growth, H-mine does not create any  physical projected databases nor construct conditional  (local) FP-trees. H-mine is not confined itself to H-struct  only. Instead, it watches carefully the changes of data  characteristics during mining and dynamically switches its  data structure from H-stmct to FP-tree when the data set  becomes dense and the number of frequent items becomes  small.

However, the web site managers consider not only the  pure navigation behaviors but also the purchasing behaviors  of customers. However, path traversal pattern mining just  purely considers navigation behaviors of customers. It also  cannot fully satisfy the managers' requirements. To  overcome the disadvantages of the pure association rules  mining and pure path traversal pattern mining, MTS  algorithm [22] was proposed and it takes both the traveling  and purchasing behaviors of customers into consideration at  the same time. We use an example to explain their method.

Figure 2 is an example of web transaction of a customer.



V.reb-Tnmsactioll  !lreb Pag Items  A  B 1  c  D  c  E 3.4.

C 2  B  F  G  H 6  A    S 7,8  J  L 9  S  I  Figure 2. Web transaction of a user  It shows that the customer traverses fiom web page A to  web page B on which item 1 is purchased. Next, the  customer visits web page C, and then visits web page D.

Thereafter, the customer backs to web page C and then  visits web page E on which items 3 and 4 are purchased.

Finally, the customer goes back to web page C and buys  item 2 at that time.

MTS algorithm firstly cuts each web transaction into  several web transaction records. Then, MTS algorithm is  used to discover the web transaction patterns based on these  web transaction records. For MTS algorithm, a web  transaction record is generated when the customer has the  backward behavior. Besides, if the last web page of a web  transaction record does not purchase any items, the web  transaction record cannot be generated. According to Figure  2, three web transaction records are generated shown in  Table 2.

Table 2 Web transaction records  Path Purchases  ABCE B{I}, C{2}, E{4}, E{3}  ABFGH B{I}, H{6}  ASJL S{7}, S{8}, L{9}    Qingdao, 11-14 July 2010  Because the customer do not purchase any items on web  pages D and I, the web transaction records <ABCD> and  <ASI> cannot be generated.

The reason for cutting each web transaction into web  transaction records is that the backward movement is not  meaningful and the complexity of the algorithm can be  reduced. However, this assumption is not always true in all  situations. In Figure 2, it is easy to see that the customer  visits web page E and purchases items 3 and 4, and then  back to web page C and purchases item 2. However, the  web transaction records in Table 2 show that the customer    buys the item 2 at web page C and then buys items 3 and 4  on web page E. Therefore, the order of traversing and  purchasing is not correct after cutting the web transaction.

Therefore, MTS algorithm cannot generate the correct  results based on these web transaction records.

T herefore, IPA (Integrating Web traversal patterns and  Association rules) algorithm [10, 11] is proposed for mining  web transaction patterns without dividing any web  transactions. But IPA algorithm assumes that the customer  can only buy one item on a web page. It does not fit the real  situation in an electronic environment. In this paper, we  propose a method to overcome this problem. Our approach  takes both the traveling and purchasing behaviors of  customers into consideration at the same time, and  considers not only user forward traversal information but  also backward information. Besides, web structure is also  used in our approach to pnme the unnecessary candidates.

Especially, we allow the noise to exist in web transactions.

3. Web transaction patterns mining  Our proposed algorithm is mainly based on conditional  framework and the website structure to mine the web  traversal patterns and web transaction patterns during the  mining process. A purchasing page represents not only  browsing behavior but also purchasing behavior on that  page. For a user purchasing sequence <AB{2,5,7}C>, web  page B is a purchasing page, since the items 2, 5 and 7 are  purchased on this page. To avoid losing some important  information and to reduce the number of conditional  databases, we transform the original user purchasing  sequence database into another form: We add the  purchasing page in front of each purchased item on this  page. For example, the user purchasing sequence  <AB{2,5,7}C> will be transformed as  <A[BB{2}B{5}B{7} ]C>, in which A, B, B[2], etc. are  regarded as web pages.

In the mining process, we firstly list all candidate  I-traversal sequences and then scan the database to count  the support for each candidate sequence. T herefore, I-web  traversal patterns will be generated and then we construct  the conditional database for each I-web traversal pattern.

For each purchasing sequence in a conditional database, we  count the support for the next web page of the I-web    traversal pattern if there is a link from the page in the I-web  traversal pattern to the next web page on the website  structure. If the next page satisfies minimum support, then  the I-web traversal pattern is joined with the next web page  to generate 2-web traversal patterns and 2-web transaction  patterns. For k-web traversal and transaction patterns (kz2),  we also use the same way to generate (k+1)-web traversal  and transaction patterns until no new patterns are generated.

We use the following example to clearly explain the whole  mIlling process.

We use a simple user purchasing database shown in  Table 3 and a simple website structure shown in Figure 3 to  describe how to find the web traversal patterns and tweb  ransaction patterns.

Table 3. A simple use purchasing sequence database  TID User purchasing sequence  1 AB{2,5,7}C  2 B{5,7}CA  3 CAD  Figure 3. A simple web site structure  Table 4 Transformed database  TID User purchasing sequence  1 A[BB{2}B{5}B{7} ]C  2 [BB{5}B{7} ]CA  3 CA D  Before mining, we transform Table 3 into Table 4 for  each user purchasing sequence.

First, we list all the candidate I-traversal sequences  <A>, <B>, <C> and <D>. After scanning database and  calculating the support counts of these candidates, the  I-web traversal patterns <A>, <B> and <C> are generated.

For each I-web traversal pattern, we construct a conditional  database for each of them, which is shown in Table 5.

Qingdao, 11-14 July 2010  Table S. Conditional databases for the  1 b t l -we raversa. patterns  Prefix Purchasing sequence  A [BB{2}B{ S}B{7} JC D  B [_B{2}B{S}B{7} JC r B{S}B{7}lCA  C A A    For example, the conditional database of <B> includes  two purchasing sequences <[_B{2}B{S}B{7}]C> and <[ B  {S}B{7}]CA>. Since the next web pages of <B> are "C",  "_B{2}" , "_B{S} " and "_B{7} " and there is a direct link  from "B" to "C " in the website structure, we calculate the  support counts for the next web pages of <B> in the  conditional database of <B>, in which web pages "C ",  "_B{S}" and "_B{7}" satisfy the minimum support  threshold. Therefore, <BC>, <BB{S}> and <BB{7}> are  the generated 2-web traversal or transaction patterns. We  construct the conditional databases for them as shown in  Table 6.

Table 6. Conditional databases for 2-web traversal patterns  and 2-web transaction patterns  Prefix Purchasing sequence  BC A  BB{S} [_B{7}JC [ B{7}JCA  BB{7} C CA  For conditional database of <BC>, since the next page  of <BC> is page A and there is a direct link from "C" to  "A " in the website structure. After scanning the conditional  database of <BC>, we calculate the support count of <A>  in the conditional database of <BC>. Due to <A> is not  satisfies the minimum support in the conditional database  of <BC>, the traversal sequence <BCA> is not a 3-web  traversal sequence. For the conditional database of  <BB{ S}>, we also calculate the support counts of the next  pages "C " and "_B{7} " of page BB{S} and generate 3-web  transaction patterns <BB{S}C> and <BB{S}B{7}>. The  conditional databases for <BB{S}C> and <BB{S}B{7}>  are shown in Table 7.

For the conditional database of <BB{S}B{7}>, the  next web page of <BB{S}B{7}> is page C and there is a  direct link from "B" to "C " in the website structure. After  scanning conditional database of <BB{S}B{7}>, the 4-web  transaction pattern <BB{ S} B{7}C> can be generated and  the conditional database for it is shown in Table 8 However  there is no next page satisfies the minimum sup?ort in the  '  conditional database, the mining algorithm terminates.

Table 7. Conditional databases for  h 3 b t e -we transacilon patterns    Prefix Purchasing sequence  BB{S}C A  BB{S}B{7} C CA  Table 8. Conditional databases for <BB S B 7 C>  Prefix Purchasing sequence  BB{S}B{7}C A  4. Conclusions  In this paper, we propose an algorithm for mining web  traversal patterns and web transaction patterns  simultaneously in the Electronic Commerce environment.

The proposed algorithm takes both the traveling and  purchasing behaviors of customers into consideration, and  considers not only forward information but also backward  information.

Acknowledgements  Research on this paper was partially supported by  National Science Council grant NSC 98-2221-E-130-0l9,  NSC 98-2221-E-130-022 and NSC 98-2221-E-130-006.

