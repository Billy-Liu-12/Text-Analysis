Implications from data with fuzzy attributes vs. scaled binary attributes

Abstract? The paper studies if and to what extent it is possible to reduce notions related to attribute implications from data with fuzzy attributes to corresponding notions related to attribute implications from data with crisp attributes. We provide a reduction (transformation) theorem. Still, working directly in fuzzy setting is beneficial. Namely, we prove that we can compute a complete and non-redundant basis of fuzzy attribute implications of data with fuzzy attributes such that the basis is at most as large as (and can be smaller than) any basis of implications of the corresponding data table with crisp attributes.



I. INTRODUCTION AND PROBLEM SETTING  Several methods have been developed for the analysis of object-attribute data, i.e. tabular data describing objects and their attributes. Among these, methods for obtaining if-then rules (implications) from data are of the most popular ones. For example, the well-known mining of association rules widely used in data mining is an example of rule-extraction method.

In our paper, we are interested in if-then rules generated from data with fuzzy attributes: rows and columns of data table correspond to objects x ? X and attributes y ? Y , respectively. Table entries I(x, y) are truth degrees to which object x has attribute y. We are interested in rules of the form ?if A then B? (A ? B), where A and B are collections of attributes, with the meaning: if an object has all the attributes of A then it has also all attributes of B. Our paper accompa- nies [4] and [6] where we introduced the notions of validity of a rule, entailment of rules, showed some basic results including the description of a complete and non-redundant set of rules, and an algorithm for generating this set.

The present paper focuses mainly on the following problem: A data table with fuzzy attributes can be transformed to a table with crisp attributes (e.g. by discretization). We study a relationship between if-then rules obtained from a table with fuzzy attributes and if-then rules of the transformed table with crisp attributes.



II. PRELIMINARIES  We use sets of truth degrees equipped with operations (logical connectives) so that is becomes a complete residuated lattice with a truth-stressing hedge. A complete residuated lattice with truth-stressing hedge (shortly, a hedge) [9], [10] is an algebra L = ?L,?,?,?,?, ?, 0, 1? such that ?L,?,?, 0, 1? is a complete lattice with 0 and 1 being the least and greatest element of L, respectively; ?L,?, 1? is a commutative monoid  (i.e. ? is commutative, associative, and a?1 = 1?a = a for each a ? L); ? and ? satisfy so-called adjointness property:  a ? b ? c iff a ? b ? c (1) for each a, b, c ? L; hedge ? satisfies  1? = 1, (2) a? ? a, (3)  (a ? b)? ? a? ? b?, (4) a?? = a?, (5)  for each a, b ? L, ai ? L (i ? I). Elements a of L are called truth degrees. ? and ? are (truth functions of) ?fuzzy conjunction? and ?fuzzy implication?. Hedge ? is a (truth function of) logical connective ?very true?, see [9], [10].

Properties (3)?(5) have natural interpretations, e.g. (3) can be read: ?if a is very true, then a is true?, (4) can be read: ?if a ? b is very true and if a is very true, then b is very true?, etc.

A common choice of L is a structure with L = [0, 1] (unit interval), ? and ? being minimum and maximum, ? being a left-continuous t-norm with the corresponding ?. Three most important pairs of adjoint operations on the unit interval are:  ?ukasiewicz: a? b = max(a + b ? 1, 0),  a ? b = min(1 ? a + b, 1), (6)  Go?del: a? b = min(a, b),  a ? b = {  1 if a ? b, b otherwise,  (7)  Goguen (product): a? b = a ? b,  a ? b = {  1 if a ? b, b a otherwise.

(8)  In applications, we usually need a finite linearly ordered L. For instance, one can put L = {a0 = 0, a1, . . . , an = 1} ? [0, 1] (a0 < ? ? ? < an) with ? given by ak ? al = amax(k+l?n,0) and the corresponding ? given by ak ? al = amin(n?k+l,n). Such an L is called a finite ?ukasiewicz chain. Another possibility is a finite Go?del chain which consists of L and restrictions of Go?del operations on [0, 1] to L.

Two boundary cases of (truth-stressing) hedges are (i) identity, i.e. a? = a (a ? L); (ii) globalization [12]:  a? = {  1 if a = 1, 0 otherwise. (9)     A special case of the complete residuated lattice with hedge is the two-element Boolean algebra ?{0, 1},?,?,?,?, ?, 0, 1?, denoted by 2, which is the structure of truth degrees of the classical logic. That is, the operations ?,?,?,? of 2 are the truth functions (interpretations) of the corresponding logical connectives of the classical logic and 0? = 0, 1? = 1. Note that if we prove an assertion for general L, then, in particular, we obtain a ?crisp version? of this assertion for L being 2.

Having L, we define usual notions: an L-set (fuzzy set) A in universe U is a mapping A : U ? L, A(u) being interpreted as ?the degree to which u belongs to A?. If U = {u1, . . . , un} then A can be denoted by A = {a1/u1, . . . , an/un} meaning that A(ui) equals ai for each i = 1, . . . , n. For brevity, we introduce the following convention: we write {. . . , u, . . . } instead of {. . . , 1/u, . . . }, and we also omit elements of U whose membership degree is zero. For example, we write {u, 0.5/v} instead of {1/u, 0.5/v, 0/w}, etc. Let LU denote the collection of all L-sets in U . The operations with L- sets are defined componentwise. For instance, the intersection of L-sets A,B ? LU is an L-set A ? B in U such that (A ? B)(u) = A(u) ? B(u) for each u ? U , etc. Binary L-relations (binary fuzzy relations) between X and Y can be thought of as L-sets in the universe X ? Y .

Given A,B ? LU , we define a subsethood degree  S(A,B) = ?  u?U ( A(u) ? B(u)), (10)  which generalizes the classical subsethood relation ?. S(A,B) represents a degree to which A is a subset of B. In particular, we write A ? B iff S(A,B) = 1. As a consequence, A ? B iff A(u) ? B(u) for each u ? U .

In the sequel we will take advantage of one the common methods of representing L-sets (fuzzy sets) by 2-sets (ordinary sets) [1]: for A ? LU we define A? ? 2U?L by  A? = {?u, a? ? U ? L | a ? A(u)}. (11)  Described verbally, A? can be considered as an area under the membership function A : U ? L. For B ? 2U?L we define ?B? ? LU by  ?B?(u) = ?{a ? L | ?u, a? ? B} (12) for each u ? U . Clearly, for each A,B ? 2U?L we have  A ? ?A??, (13) A ? B implies ?A?? ? ?B??, (14)  ?A? = ??A???. (15)  As a consequence, ?? ??? is a closure operator on U?L such that for B = ?B?? we have  A ? B iff ?A? ? ?B? iff ?A?? ? ?B?? (16)  for each A ? 2U?L. Observe that (16) does not hold in general if B ? ?B??.

I ? ? ? y ? ? ? ...

...

x ? ? ? I(x, y) ? ? ? ...

...

Fig. 1. Data table with fuzzy attributes

III. FUZZY ATTRIBUTE IMPLICATIONS  In crisp case, attribute implications were thoroughly inves- tigated, see e.g. [8] for the first paper and [7] for further information and references. Attribute implications in fuzzy setting were for the first time studied in [11]. The main difference between our approach and that of [11] is that we use, as an additional parameter, a unary connective ?, and a different approach to pseudointents (see later) which enables us to obtain a complete and non-redundant basis of attribute implications which, by a suitable setting of ?, is also minimal w.r.t. its size. We comment on the results of [11] in a forthcoming paper.

A. Definition, validity, and basic properties  Fuzzy attribute implication (in attributes Y ) is an expression A ? B, where A,B ? LY . The intended meaning of A ? B is the following: ?if it is (very) true that an object has attributes A, then it has also attributes B?.

For an L-set M ? LY of attributes, we define a degree ||A ? B||M ? L to which A ? B is valid in M ? LY :  ||A ? B||M = S(A,M)? ? S(B,M). (17) If M represents attributes of an object x, then ||A ? B||M is the truth degree to which A ? B holds for x.

Fuzzy attribute implications can be used to describe depen- dencies in data tables with fuzzy attributes. Let X and Y be sets of objects and attributes, respectively, I be an L-relation between X and Y , i.e. I is a mapping I : X ? Y ? L.

?X, Y, I? is called a data table with fuzzy attributes. ?X, Y, I? represents a table which assigns to each x ? X and each y ? Y a truth degree I(x, y) ? L to which object x has attribute y. If both X and Y are finite, ?X, Y, I? can be visualized as in Fig. 1  For L-sets A ? LX , B ? LY (i.e. A is an L-set of objects, B is an L-set of attributes), we define L-sets A? ? LY (L-set of attributes), B? ? LX (L-set of objects) by  A?(y) = ?  x?X ( A(x)? ? I(x, y)), (18)  B?(x) = ?  y?Y ( B(y) ? I(x, y)). (19)  We put  B(X?, Y, I) = {?A,B? ? LX? LY |A? = B, B? = A} and define for ?A1, B1?, ?A2, B2? ? B(X?, Y, I) a binary relation ? by ?A1, B1? ? ?A2, B2? iff A1 ? A2 (or, iff B2 ? B1; both ways are equivalent). Operators ?, ? induced by ?X, Y, I? form so-called Galois connection with hedge, see [5].

The structure ?B(X?, Y, I),?? is called a fuzzy concept lattice induced by ?X, Y, I?. The elements ?A,B? of B(X?, Y, I) are naturally interpreted as concepts (clusters) hidden in the input data represented by I . Namely, A? = B and B? = A say that B is the collection of all attributes shared by all objects from A, and A is the collection of all objects sharing all attributes from B. Note that these conditions represent exactly the definition of a concept as developed in the so-called Port- Royal logic; A and B are called the extent and the intent of the concept ?A,B?, respectively, and represent the collection of all objects and all attributes covered by the particular concept.

Furthermore, ? models the natural subconcept-superconcept hierarchy?concept ?A1, B1? is a subconcept of ?A2, B2? iff each object from A1 belongs to A2 (dually for attributes).

Now we define a validity degree of fuzzy attribute implica- tions in data tables and intents of fuzzy concept lattices. First, for a set M ? LY (i.e. M is an ordinary set of L-sets) we define a degree ||A ? B||M ? L to which A ? B holds in M by  ||A ? B||M = ?  M?M ||A ? B||M . (20) A degree ||A ? B||?X,Y,I? ? L to which A ? B holds in (each row of ) ?X, Y, I? is defined by  ||A ? B||?X,Y,I? = ||A ? B||M, (21) where M = {{x}? |x ? X}. By definition, each {x}? represents all the attributes of x ? X , i.e. {x}? represents a ?row labeled x? in the data table ?X, Y, I?.

For each ?X, Y, I? we consider a set Int(X?, Y, I) ? LY of all intents of concepts of B(X?, Y, I), i.e. Int(X?, Y, I) = {B ? LY | ?A,B? ? B(X?, Y, I) for some A ? LX}. Since M ? LY is an intent of some concept of B(X?, Y, I) iff M = M??, we have Int(X?, Y, I) = {M ? LY |M = M??}.

A degree ||A ? B||B(X?,Y,I) ? L to which A ? B holds in intents of B(X?, Y, I) is defined by  ||A ? B||B(X?,Y,I) = ||A ? B||Int(X?,Y,I). (22) The following lemma connects the degree to which A ? B  holds in ?X, Y, I?, the degree to which A ? B holds in intents of B(X?, Y, I), and the degree of subsethood of B in A??.

Lemma 1. Let ?X, Y, I? be a data table with fuzzy attributes.

Then ||A ? B||?X,Y,I? = ||A ? B||B(X?,Y,I) = S(B,A??) for each fuzzy attribute implication A ? B.

Proof: See [6].

B. Implication bases and pseudo-intents  First, fuzzy attribute implications describe particular depen- dencies in data. The number of attribute implications valid in data can be considerably large, including trivial implications carrying no interesting information. Therefore, we are inter- ested in minimal sets of implications from which all the valid implications follow. Second, fuzzy attribute implications can be seen as an alternative way to describe a fuzzy concept lattice. In case of large and dense data tables with fuzzy attributes, the corresponding fuzzy concept lattices are usually  large and then, practically, of no use for the exploration of the structure of input data. From this point of view, we are interested in finding a minimal set of implications which completely describe the concept lattice. In what follows, we present details.

Let ?X, Y, I? be a data table with fuzzy attributes and let T be a set of fuzzy attribute implications. M ? LY is called a model of T if ||A ? B||M = 1 for each A ? B ? T . The set of all models of T is denoted by Mod(T ), i.e.

Mod(T ) = {M ? LY |M is a model of T}. (23) A degree ||A ? B||T ? L to which A ? B semantically follows from T is defined by  ||A ? B||T = ||A ? B||Mod(T ). (24) T is called complete with respect to ?X, Y, I? if ||A ? B||T = ||A ? B||?X,Y,I? for each A ? B. If T is complete and each proper subset of T is not complete, then T is called non- redundant basis. A complete T is redundant if it is not a non-redundant basis.

The following assertion shows that the models of a complete set of fuzzy attribute implications are exactly the intents of the corresponding fuzzy concept lattice.

Theorem 2. T is complete iff Mod(T ) = Int(X?, Y, I).

Proof: See [4].

Therefore, we are interested in finding non-redundant bases.

One approach to obtain non-redundant bases is via so-called pseudo-intents.

Given ?X, Y, I?, P ? LY is called a system of pseudo- intents of ?X, Y, I? if for each P ? LY we have:  P ? P iff P ?= P ?? and ||Q ? Q??||P = 1 for each Q ? P with Q ?= P .

If ? is globalization and if Y is finite, then for each ?X, Y, I? there exists a unique system of pseudo-intents (this is not so for the other hedges in general). From now on, let X and Y be finite and let L be finite and linearly ordered.

Theorem 3. Let P be a system of pseudo-intents and put T = {P ? P ?? |P ? P}. (25)  Then T is non-redundant basis. If ? is globalization then T is minimal and it can be computed with polynomial time delay.

Proof: See [4], [6].



IV. REDUCTION TO THE CRISP CASE  First, we show that in certain cases we can express the va- lidity of fuzzy attribute implications in a given data table with fuzzy attributes by a validity of other attribute implications in a data table with crisp attributes. Later on, we show that it is also possible to find a complete set of implications by the reduction to the crisp case. However, this method is not so efficient as generating fuzzy attribute implications directly from the original data table with fuzzy attributes.

TABLE I DATA TABLE WITH FUZZY ATTRIBUTES AND ITS CRISP COUNTERPART  I y z  v 0.5 0 w 1 0.5 x 0 1  I? y0 y0.5 y1 z0 z0.5 z1 v 1 1 0 1 0 0 w 1 1 1 1 1 0 x 1 0 0 1 1 1  Let L be finite and linearly ordered with ? being the globalization. In what follows we use a data table with fuzzy attributes ?X, Y, I? such that X and Y are finite. For ?X, Y, I? we consider a data table ?X, Y ?L, I ??, where I ? ? 2X?(Y ?L) and  ?x, ?y, a?? ? I ? iff a ? I(x, y) (26) for each object x ? X and attribute ?y, a? ? Y ? L. That is, ?X, Y ?L, I ?? is a data table with crisp attributes. For brevity, we denote attributes ?y, a? ? Y ? L by ya.

Example. Let L be a three-element ?ukasiewicz chain such that L consists of L = {0, 0.5, 1} (0 < 0.5 < 1) endowed with ?,? defined by (6). Let X = {v, w, x}, Y = {y, z}. I and the corresponding I ? are depicted in Table I.

Recall that ?X, Y, I? induces a couple of operators ?, ? and so does ?X, Y ? L, I ??. The operators induced by ?X, Y ? L, I ?? will be denoted ?, ?. It is easily seen that {1/x}? = ?{x}?? and {x}? = ?{x}??? = {1/x}?? for each x ? X .

Described verbally, each row of the input data table ?X, Y, I? can be obtained using ?? ? ? ? from the corresponding row of the data table ?X, Y ? L, I ?? and vice versa. Moreover, one can prove the following  Lemma 4. Let A ? 2Y ?L and B ? LY . Then A?? = ?A????, ?A??? = ?A???, B??? = B???. (27)  Proof: See [5].

From the viewpoint of the concepts hidden in the input data, ?X, Y, I? and ?X, Y ? L, I ?? represent the same information: if P is an intent of ?X, Y, I?, then P ? is an intent of ?X, Y ? L, I ??; analogously, if P is an intent of ?X, Y ? L, I ??, then ?P ? is an intent of ?X, Y, I?. As a consequence, B(X?, Y, I) is isomorphic to B(X, Y ? L, I ?), see [5].

For an implication A ? B with both antecedent A and consequent B being fuzzy sets one may consider a correspond- ing implication A??B? the antecedent and consequent of which are both crisp sets. On the one hand, one can evaluate A ? B in ?X, Y, I?. On the other hand, A? ? B? can be evaluated in ?X, Y ? L, I ??. The following assertions show that doing so, A ? B is fully true (i.e., true in degree 1) if and only if A??B? is true.

Lemma 5. Let A,B ? LY , M ? LY . Let C,D ? 2Y ?L and let N ? 2Y ?L such that N = ?N?? for each N ? N . Then  ||A?B||M = 1 iff ||A??B?||	M = 1, (28) ||C?D||N = 1 iff ||?C???D?||?N? = 1, (29)  where M? = {M? |M ? M}, ?N? = {?N? |N ? N}.

Proof: (28) follows from S(P,M) = 1 iff P ? ? M?.

(29) follows from (16): Q ? N iff S(?Q?, ?N?) = 1.

Theorem 6. Let A,B ? LY , C,D ? 2Y ?L. Then ||A?B||{1/x}? = 1 iff ||A??B?||{x}? = 1; ||A?B||B(X?,Y,I) = 1 iff ||A??B?||B(X,Y ?L,I?) = 1; ||?C???D?||{1/x}? = 1 iff ||C?D||{x}? = 1; ||?C???D?||B(X?,Y,I) = 1 iff ||C?D||B(X,Y ?L,I?) = 1.

Proof: Consequence of Lemma 1 and Lemma 5.

Now we turn our attention to finding a system of implica- tions which is complete with respect to ?X, Y, I? and which can be obtained from the crisp counterpart of ?X, Y, I?. If P is a system of (classical) pseudo-intents of ?X, Y ?L, I ?? [7], then {P ?P?? |P ? P} is a minimal non-redundant basis of ?X, Y ?L, I ?? (this is a consequence of the classical results [8], [7] which are now a particular case for L being 2, see [6]).

In the following we show that {?P ? ? ?P??? |P ? P} is complete with respect to ?X, Y, I?.

Lemma 7. Let T = {?P ??? ?P ???? |P ? P}, where P is a system of pseudo-intents of ?X, Y ?L, I ??. Then for each M ? 2Y ?L with M = ?M?? we have that M is an intent of ?X, Y ? L, I ?? iff M is a model of T .

Proof: ???: Let M be an intent, i.e. M = M??. If ?P ?? ? M for P ? P then ?P ???? ? M?? = M . That is, ||?P ????P ????||M = 1, which immediately gives that M is a model of T .

???: Let M be a model of T . That is, for each P ? P we have that ?P ?? ? M implies ?P ???? ? M . First, observe that ?P ???? = ?P ???? = ?P???? = P?? by (27). Since M = ?M??, (16) gives ?P ?? ? M iff P ? M . That is, for each P ? P we have: if P ? M then P?? ? M . Therefore, M is a model of {P ?P?? |P ? P}, i.e. M is an intent of ?X, Y ? L, I ?? by Theorem 2 and Theorem 3 applied for L being 2.

Theorem 8. Suppose P is a system of pseudo-intents of ?X, Y ? L, I ??. Then  Tc = {?P ???P ??? |P ? P} (30) is a set of fuzzy attribute implications which is complete with respect to data table ?X, Y, I?.

Proof: According to Theorem 2, the proof is done by showing that Mod(Tc) = Int(X?, Y, I).

???: Let M ? Mod(Tc). In order to show that M is an intent, it suffices to show that M?? = M . Since M is a model of Tc, we have ||?P ? ? ?P ???||M = 1 for each P ? P .

Therefore, ||?P ?? ? ?P ????||	M = 1 (P ? P). Using (27), ||?P ????P ????||	M = 1 for each P ? P . Hence, M? is a model of T = {?P ?? ? ?P ???? |P ? P}. By Lemma 7, M? is an intent of ?X, Y ?L, I ??. Thus, we have M? = M??? = M??? by (27) which gives M = M??.

???: Let M ? Int(X?, Y, I), i.e. M = M??. Take P ? P .

If ?P ? ? M then ?P ??? ? M?? = M by monotony of ??.

Hence, ||?P ???P ???||M = 1, i.e. M is a model of Tc.

Remarks. (1) Theorem 8 enables us to find a complete set of fuzzy attribute implications as follows. For an input data table ?X, Y, I? we compute its crisp counterpart ?X, Y ?L, I ??, then we can use the classical algorithm for getting pseudo-intents of ?X, Y ? L, I ??. Finally, we construct Tc using the pseudo- intents of ?X, Y ? L, I ?? as shown in Theorem 8.

(2) Tc need not to be non-redundant. In fact, Tc can be considerably greater than the minimal non-redundant basis which can be computed directly from the input data table with fuzzy attributes. Indeed, consider the following example. Let L the three-element ?ukasiewicz chain with L = {0, 0.5, 1} and let X = {x}, Y = {y, z}, I(x, y) = I(x, z) = 0, i.e.

?X, Y, I? is an ?empty data table?. In this particular case we have P = {{0.5/y}, {0.5/z}}. Thus, according to Theorem 3, T = {{0.5/y}? {y, z}, {0.5/z}? {y, z}} is a minimal non- redundant basis of ?X, Y, I?.

Consider the crisp counterpart ?X, Y ? L, I ?? of ?X, Y, I?.

The system P ? of pseudo-intents of ?X, Y ? L, I ?? is the following  P ? = {{y0, y0.5, z0}, {y0, y1, z0}, {y0, z0, z0.5}, {y0, z0, z1}, {}}.

Thus, the minimal basis T ? of ?X, Y ? L, I ?? is T ? = {{y0, y0.5, z0}?{y0, y0.5, y1, z0, z0.5, z1},  {y0, y1, z0}?{y0, y0.5, y1, z0, z0.5, z1}, {y0, z0, z0.5}?{y0, y0.5, y1, z0, z0.5, z1}, {y0, z0, z1}?{y0, y0.5, y1, z0, z0.5, z1}, {}?{y0, z0}}.

By Theorem 8, the following set of fuzzy attribute implications is complete with respect to ?X, Y, I?:  Tc = {{0.5/y}?{y, z}, {y}?{y, z}, {0.5/z}?{y, z}, {z}?{y, z}, {}?{}}.

It is evident that Tc is redundant. First, Tc contains a trivial implication {}? {} which holds true in each M ? LY , i.e.

Tc ?{{}?{}} is complete. However, Tc ?{{}?{}} is still redundant, because implications {y} ? {y, z}, {z} ? {y, z} semantically follow from {0.5/y}?{y, z}, {0.5/z}?{y, z}.

(3) To sum up, from the user?s viewpoint, both data tables ?X, Y, I? and ?X, Y ?L, I ?? represent the same information? the concepts extracted from both data tables are in one-to-one correspondence. However, the minimal basis of ?X, Y ?L, I ?? cannot be turned into a non-redundant basis of ?X, Y, I? by the ?? ? ? ? operator. The size of a minimal basis of ?X, Y ? L, I ?? is equal or greater to the size of a minimal basis of ?X, Y, I?. This feature can be surprising, but it has the following (informal) explanation: the basis of ?X, Y ? L, I ?? contains implications describing, among the dependencies between attributes, the dependencies between truth degrees.

In the basis of ?X, Y, I?, such dependencies are determined  TABLE II DATA TABLE WITH FUZZY ATTRIBUTES  size distance small (s) large (l) far (f) near (n)  Mercury (Me) 1 0 0 1 Venus (Ve) 1 0 0 1 Earth (Ea) 1 0 0 1 Mars (Ma) 1 0 0.5 1  Jupiter (Ju) 0 1 1 0.5 Saturn (Sa) 0 1 1 0.5  Uranus (Ur) 0.5 0.5 1 0 Neptune (Ne) 0.5 0.5 1 0  Pluto (Pl) 1 0 1 0  TABLE III CRISP COUNTERPART OF DATA TABLE WITH FUZZY ATTRIBUTES  small (s) large (l) far (f) near (n) s0 s0.5 s1 l0 l0.5 l1 f0 f0.5 f1 n0 n0.5 n1  Mercury (Me) 1 1 1 1 0 0 1 0 0 1 1 1 Venus (Ve) 1 1 1 1 0 0 1 0 0 1 1 1 Earth (Ea) 1 1 1 1 0 0 1 0 0 1 1 1 Mars (Ma) 1 1 1 1 0 0 1 1 0 1 1 1  Jupiter (Ju) 1 0 0 1 1 1 1 1 1 1 1 0 Saturn (Sa) 1 0 0 1 1 1 1 1 1 1 1 0  Uranus (Ur) 1 1 0 1 1 0 1 1 1 1 0 0 Neptune (Ne) 1 1 0 1 1 0 1 1 1 1 0 0  Pluto (Pl) 1 1 1 1 0 0 1 1 1 1 0 0  automatically by the chosen L. Therefore, working directly in fuzzy setting is beneficial.



V. ILLUSTRATIVE EXAMPLE AND REMARKS  Let L be a three-element ?ukasiewicz chain with L = {0, 0.5, 1} and let ? be the globalization. The data table ?X, Y, I? is given by Table II. The set X of object consists of objects ?Mercury?, ?Venus?, . . . , set Y contains four at- tributes: size of the planet (small / large), distance from the sun (far / near). The corresponding fuzzy concepts (clusters) extracted from this data table are identified in Table IV. The subconcept-superconcept hierarchy (fuzzy concept lattice) is depicted in Fig. 2.

Concepts in Table IV have natural interpretation. For in- stance concept 2. can be understood as cluster of ?small planets far from sun?, concept 14. can be interpreted as cluster             15 16   Fig. 2. Fuzzy concept lattice     TABLE IV EXTRACTED CONCEPTS  extent intent no. Me Ve Ea Ma Ju Sa Ur Ne Pl s l f n  1. 0 0 0 0 0 0 0 0 0 1 1 1 1 2. 0 0 0 0.5 0 0 0.5 0.5 1 1 0 1 0 3. 0.5 0.5 0.5 1 0 0 0 0 0 1 0 0.5 1 4. 0.5 0.5 0.5 1 0 0 0.5 0.5 1 1 0 0.5 0 5. 1 1 1 1 0 0 0 0 0 1 0 0 1 6. 1 1 1 1 0 0 0.5 0.5 1 1 0 0 0 7. 0 0 0 0.5 0.5 0.5 1 1 0.5 0.5 0.5 1 0 8. 0 0 0 0.5 0.5 0.5 1 1 1 0.5 0 1 0 9. 0.5 0.5 0.5 1 0.5 0.5 1 1 1 0.5 0 0.5 0  10. 1 1 1 1 0.5 0.5 1 1 1 0.5 0 0 0 11. 0 0 0 0 1 1 0.5 0.5 0 0 1 1 0.5 12. 0 0 0 0.5 1 1 1 1 0.5 0 0.5 1 0 13. 0 0 0 0.5 1 1 1 1 1 0 0 1 0 14. 0.5 0.5 0.5 1 1 1 0.5 0.5 0.5 0 0 0.5 0.5 15. 0.5 0.5 0.5 1 1 1 1 1 1 0 0 0.5 0 16. 1 1 1 1 1 1 0.5 0.5 0.5 0 0 0 0.5 17. 1 1 1 1 1 1 1 1 1 0 0 0 0  of ?planets with average distance from sun?. Concepts 1. and 17. represent borderline concepts.

The minimal non-redundant basis T defined by (25) consists of the following fuzzy attribute implications:  T = {{s, 0.5/l, f}?{s, l, f, n}, {0.5/s, 0.5/n}?{s, n}, {l, f}?{l, f, 0.5/n}, {0.5/l}?{0.5/l, f}, {f, 0.5/n}?{l, f, 0.5/n}, {n}?{s, n}}.

Now consider the crisp counterpart ?X, Y ?L, I ?? of ?X, Y, I?, see Table III. The minimal non-redundant basis of ?X, Y ? L, I ?? is the following: {s0, s0.5, s1, l0, l0.5, f0, f0.5, f1, n0}?  ?{s0, s0.5, s1, l0, l0.5, l1, f0, f0.5, f1, n0, n0.5, n1}, {s0, s0.5, l0, f0, n0, n0.5}?{s0, s0.5, s1, l0, f0, n0, n0.5, n1}, {s0, s1, l0, f0, n0}?{s0, s0.5, s1, l0, f0, n0}, {s0, l0, l0.5, f0, n0}?{s0, l0, l0.5, f0, f0.5, f1, n0}, {s0, l0, l1, f0, n0}?{s0, l0, l0.5, l1, f0, f0.5, f1, n0, n0.5}, {s0, l0, f0, f0.5, f1, n0, n0.5}?  ?{s0, l0, l0.5, l1, f0, f0.5, f1, n0, n0.5}, {s0, l0, f0, f1, n0}?{s0, l0, f0, f0.5, f1, n0}, {s0, l0, f0, n0, n1}?{s0, s0.5, s1, l0, f0, n0, n0.5, n1}, {}?{s0, l0, f0, n0}.

The previous basis can be converted using the ??? ? ? ?? operator to a system Tc of fuzzy attribute implications, see (30), which is complete with respect to ?X, Y, I?:  Tc = {{s, 0.5/l, f}?{s, l, f, n}, {0.5/s, 0.5/n}?{s, n}, {s}?{s}, {0.5/l}?{0.5/l, f}, {l}?{l, f, 0.5/n}, {f, 0.5/n}?{l, f, 0.5/n}, {f}?{f}, {n}?{s, n}, {}?{}}.

System Tc contains three trivial fuzzy attributes implications of the form A?A, i.e. Tc is redundant. If we remove such im- plications from Tc, we obtain a minimal non-redundant basis  TABLE V AVERAGE SIZES OF BASES ACCORDING TO DENSITY  input table crisp counterpart density B P ratio B P ratio Tc growth  90 % 124 46 0.371 124 51 0.411 49 1.065 80 % 124 50 0.403 124 58 0.468 53 1.060 70 % 86 51 0.593 86 60 0.698 55 1.078 60 % 71 47 0.662 71 58 0.817 51 1.085 50 % 45 41 0.911 45 53 1.178 46 1.122 40 % 35 36 1.029 35 48 1.371 41 1.139 30 % 20 30 1.500 20 43 2.150 37 1.233 20 % 14 22 1.571 14 37 2.643 32 1.455 10 % 8 15 1.875 8 33 4.125 29 1.933 0 % 2 7 3.500 2 29 14.500 28 4.000  of ?X, Y, I?. However, this basis differs from the basis T com- puted directly from ?X, Y, I?, because {l}?{l, f, 0.5/n} ?? T .

Table V contains a summary of average number of (pseudo) intents of randomly generated data tables with 7 attributes, 10 objects, and 5 truth degrees according to the density of input data tables (columns labeled ?B? contain average number of concepts, columns labeled ?P? contain average size of the minimal bases, columns labeled ?ratio? contain quotient of the previous values). One can see that in sparse data tables, the number of pseudo-indents (sizes of the minimal bases) is larger then the number of intents. Dense data tables lead to large number of intents, but smaller number of pseudo-intents.

Column labeled ?Tc? contains the average sizes of converted sets in which we omit implications of the form A?A. Still, the sizes of such reduced Tc?s can be considerably greater than the sizes of the minimal bases (see column labeled ?growth?).

In addition to that, the experiments have shown that the direct computation of minimal bases is far more faster (especially if Y is large) than the indirect construction of Tc.

ACKNOWLEDGEMENT Supported by grant No. 1ET101370417 of GA AV C?R and  by grant No. 201/05/0079 of the Czech Science Foundation.

