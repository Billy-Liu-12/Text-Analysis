Estimation Based Adaptable Flow Aggregation Method for Reducing Control Traffic

Abstract?Applying Software Defined Network (SDN) technol- ogy to wireless network attracts much attention. Our previous study proposed several channel utilization methods based on SDN/OpenFlow-enabled multi-channel wireless mesh network (WMN). However, since control messages are transmitted with data traffic on a same channel in WMN, it inevitably affects the network capacity. Especially, the amount of control messages for collecting statistical information of each flow (FlowStats) linearly increases in accordance with the number of flows, thereby being the dominant overhead. In this paper, we propose a method that prevents the increase of control traffic while maintaining network performance. Specifically, our proposed method uses statistical information of each interface (PortStats) instead of FlowStats, and handles multiple flows on the interface together. To handle a part of flows, we propose a way to estimate statistical information of individual flow without extra control messages. Finally, we show that the proposed method can maintain good network capacity with less packet losses and less control messages.

Keywords?Control traffic, Experiment, OpenFlow, Wireless mesh network, Multi-hop communication

I. INTRODUCTION  With the proliferation of wireless networks, emerging appli- cations have required their respective demands for network to keep its Quality of Experience (QoE) and/or Quality of Service (QoS). Since it is hard to satisfy every QoE and/or QoS at the same time in current network technology, SDN attracts atten- tion because SDN is a new paradigm to flexibly handle traffic of each applications, respectively. SDN mainly consists of two components, controller and switch. A controller determines transmission path of flow inside its administrative domain, while switches handle packets of every flow by following the decision of the controller. To dynamically switch transmission paths of flows, control traffic between the controller and switches are frequently required.

To exploit SDN in wireless network, especially in wire- less multi-hop network, control traffic and data traffic are inevitably transmitted together on the same network resource (channel) [1]. That is, available capacity decreases as the amount of control traffic increases. Also, multi-hop networks cause consumption of extra wireless resources due  to multiple transmission, thereby reducing the capacity signif- icantly. From these points, we have to reduce control traffic to use network resources for data communication as much as possible in SDN-enabled wireless networks.

So far, we focused on efficient channel utilization to di- rectly increase the network capacity in SDN-enabled wireless backbone network (WBN). We first proposed a multi-channel handling architecture [2]. We also proposed a method that effi- ciently uses all channel resources, thereby expanding network capacity [3]. However, the previous study did not take care of the increase in the control traffic caused by the flow control method. Actually, the amount of control traffic proposed in the previous study is linearly increased in proportion to the number of flows. Therefore, the reduction of control traffic is necessary to indirectly increase the available capacity.

In this paper, to realize the control traffic reduction, we first measure the amount of control messages in SDN by using a dominant protocol (OpenFlow), and identify what kind of messages is dominant overhead. Since control traffic is transmitted when a controller collects information to control flows, the behavior of control traffic and the usage of messages are highly depending on a method to control network. We then re-design the method to achieve not only efficient channel utilization but also control message reduction. Finally, we evaluate the proposed method in a real testbed and show the effectiveness of the proposed method.

The rest of the paper is organized as follows. Section II describes an overview of related work. In Section III, we present a channel utilization method for increasing the network capacity in our previous study. Section IV provides a method to estimate statistical information of individual flow without extra control messages. In Section V, we evaluate the proposed method in a real testbed. Moreover, we discuss about the result of the performance evaluation and future works in Section VI.

Finally, we conclude this paper in Section VII.

The 8th International Workshop on Information Quality and Quality of Service for Pervasive Computing 2017

II. RELATED WORK  Several studies focusing on the control traffic of SDN have been proposed so far [4?7]. A study [4] proposes OpenFlow- based architecture for wireless mesh network. It shows that OpenFlow needs control traffic whenever adding the new rule, but its amount is relatively small. However, they do not address the problem of the increase in control traffic with the increase in the number of flows.

A study [5] tries to reduce control traffic by exploiting proactive management. They determine a transmission path based on VLAN identification (VID) and switches have these rules in advance. Each VID is attached to the packet header of data traffic. In this way, they do not need control traffic while complicated traffic control is not necessary. However, it is difficult to conduct fine-grained control without increasing the amount of control traffic.

When OpenFlow switch receives a flow with high transmis- sion rate, many control messages are inevitably transferred to the controller for asking a control rule. A study [6] reduces the load of the switch because of putting on priority of control messages and handling the control messages of the high priority. As a result, it shows that the method can suppress the transmission of control massages with the low priority.

However, it does not reduce the amount of control traffic because this method reduces only control messages for asking a control rule.

A study [7] uses an abstracted control message instead of control messages of OpenFlow. Since the abstracted message only includes intents for traffic control, the study can greatly reduce the amount of control traffic but the granularity of traffic control becomes coarse. In this way, to use SDN in wireless network, both of the reduction of control traffic and fine granularity of control traffic are important to precisely control channel utilization.

As described above, although existing studies focus on various approaches, they cannot achieve both the reduction of control traffic and fine-grained traffic control. Considering these two points are indispensable to precisely control channel utilization. Since the control traffic is generated when a con- troller collects information from switches and sends a control rule to switches, the amount of control traffic highly depends on the timing of collecting information and a way to control traffic (i.e., control method). Also, the efficiency of channel utilization depends on a control method. To propose more effective way, we have to take the control method into account.

Thus, in this paper, we propose a method that greatly reduces control traffic by treating both of the flow control method and the acquisition method of the statistical information on WMN.



III. EFFECTIVE CHANNEL UTILIZATION METHOD IN PREVIOUS STUDY  A. Multi-channel WMN architecture  In our previous study [2], we proposed a WMN architecture that enables to use multiple channels (Figure 1). The WMN is constructed by multiple virtual APs (VAPs) in which a set of  Figure 1. Proposed WMN structure  APs is connected by Ethernet cable of daisy chain and each of APs uses a single but different channel for WBN. Since VAPs establish wireless connection with neighbor VAPs on each channel in advance, we can control the channel usage by switching transmission paths of flows.

We proposed a method to control every flow (defined by source and destination IP address/port number) to efficiently utilize all channels on the WMN [3]. We use OpenFlow as a underlying technology for switching transmission paths.

OpenFlow consists of a controller (OFC) and switches (OFS).

An OFC determines control rules of flows, called flow entries (a pair of flow identification and action), and registers them to OFSs (APs). An OFS controls each flow by following the registered rules. The registration is conducted after an OFS receives unknown packets (i.e., the packet does not match any flow entries) and reports it to the OFC by a packet in message.

In the previous work, an OFC is connected to all OFSs directly by Ethernet to avoid fluctuations of control network such as delay or packet drop. Note that, since our focus is to increase the network capacity on a single route, we assume a WBN with a chain topology such as Figure 1.

B. Channel utilization method: Flow Aggregation Method  The Flow Aggregation Method (FAM) [3] tries to fully use a channel one by one to maximize the efficiency of channel utilization. However, since the amount of data traffic of a flow cannot be identified at the time of arrival, the flow may suffer packet losses due to a shortage of remaining capacity of transmission channel. To avoid packet losses, FAM temporarily accepts new flow on a channel having the largest capacity (transient channel) at first. After measuring the amount of data traffic, the flow is migrated to a channel having the fewest but having larger capacity than the flow data rate (aggregation channel), if possible. In our study, Airtime is used as an index of capacity. It indicates how much time for data transmission occupies during the predetermined time unit.

Since statistical information obtained by OpenFlow contains the amount of bytes and the number of packets, we can calculate Airtime by combining them with the physical data rate. Note that, the physical data rate is obtained independent to OpenFlow interface.

The 8th International Workshop on Information Quality and Quality of Service for Pervasive Computing 2017             0  100 200 300 400 500 600 700 800 900 1000  F l o w S t a t s  R e p l y [ K B y t e ]  Number of flows  predictive value measured value  Figure 2. FlowStats Reply each number of flows  Figure 3. Network topology in performance evaluation  C. Control traffic generated by FAM  To measure the consumed resources in FAM, the OFC pe- riodically obtains statistical information for each flow (Flow- Stats). Hence, we call this as FlowStats based FAM (F-FAM).

Specifically, the OFC sends a request to every AP, and each AP sends back a reply including statistical information of every flow to the OFC. Note that, since original statistical information contains cumulative values only, the OFC collects the information twice from every AP at the predetermined interval and uses their difference to calculate Airtime. The OFC then chooses an appropriate aggregation channel and migrates flows to the channel. Although a request of FlowStats is a fixed length regardless of the number of flows, the length of its reply message changes depending on the number of flows on each AP. Hence, since the number of flows is quite large in the real Internet, the control traffic could highly impact on the available capacity on WBN.

To investigate the above assumption, we measure the amount of reply messages in accordance with the number of flows as shown in Figure 2. As the experiment, PC1 transmits UDP flows of 0.1 Mbps to PC2 for 50 seconds in the topology of Figure 3. We actually transmit up to 50 flows, and calculate a predictive amount of reply messages based on measured value. As the number of the flows increases, the amount of total reply messages increases linearly. From this result, we can see that control traffic increases linearly according to the number of flows.

Figure 4. Coarse-grained control

IV. PROPOSED METHOD  As shown in Section III-C, F-FAM needs statistical infor- mation of every flow but its control traffic, whose amount is linearly increased with the increase in the number of flows, surely affects on the available capacity. To apply FAM in any situations, we have to reduce the amount of control mes- sages due to FlowStats, irrespective of the number of flows, while maintaining the original performance of F-FAM. In this method, statistical information of each interface (PortStats) is employed. Since PortStats collects an aggregated information of all flows on an AP, the amount of control traffic is always constant and low.

Whenever new flow arrives at WBN, the proposed method temporally accepts the flow on the transient channel as the same with F-FAM. Then, we propose a method that follows the way of FAM but uses PortStats, called PortStats based FAM (P-FAM). P-FAM has two sorts of control methods: fine-grained control and coarse-grained control. Former is performed where all flows can be migrated to the same aggregation channel at once, whereas latter is performed where only partial flows can be migrated.

A. Coarse-grained control  While transmitting new flows on the transient channel of an AP, the OFC collects statistical information from the AP. To re- duce the control traffic, we use PortStats instead of FlowStats.

PortStats presents interface-level (not flow-level) information, which indicates aggregated information of all flows transmitted on the interface. Hence, the OFC has a potential not to handle each flow due to the inaccurate interface-level information even if there are multiple flows in the transient channel.

When all flows can be migrated to the aggregation chan- nel, we handle them together. Specifically, after collecting PortStats, the OFC calculates total consumed Airtime of all flows. The OFC compares it with the remaining Airtime of the aggregation channel, and migrates all flows onto it only when the consumed Airtime is less than the remaining Airtime, as shown in Figure 4. Note that, since PortStats includes cumulative values as the same with FlowStats, the OFC sends it twice in predetermined interval and uses the difference to calculate Airtime.

The 8th International Workshop on Information Quality and Quality of Service for Pervasive Computing 2017    Figure 5. Counts the number of packet in messages  B. Fine-grained control  1) Basic investigation: Number of packet in: If all flows transmitted on the transient channel consume more Airtime than the remaining Airtime of the aggregation channel, they cannot be migrated together unlike Section IV-A. Furthermore, the OFC cannot migrate a part of flows only by the interface- level information. However, the fine-grained migration is a good solution to efficiently use the aggregation channel.

Hence, we try to achieve fine-grained migration by estimating information of each flow based on the PortStats.

In addition to PortStats information, the number of packet in messages is employed as the criteria for estimation of each flow?s Airtime. An AP sends a packet in message to the OFC whenever an unknown packet of new flow arrives.

This packet in transmission continues until the corresponding flow entry is registered by the OFC as shown in Figure 5.

Since it takes certain time from the transmission of the first packet in message to the registration of a flow entry, multiple packet in messages will be sent to the OFC. Therefore, if the transmission rate of the new flow is high, large number of packet in messages will be received at the OFC. In this paper, we assume that a network delay and the processing latency for packet in at the OFC do not largely change. That is, the duration between the timing of first packet in transmission and registration of a corresponding flow rule will be constant value. Hence, the number of packet in messages will be likely to be in proportional to application data rate of the flow.

To investigate the relationship between the number of packet in messages and application data rate (this could be translated to Airtime), we conduct an experiment in a real testbed. Note that, there is no other traffic and radio interface.

In this experiment, when PC1 transmits one UDP flow to PC2 in the same topology with Figure 3 and then the number of packet in messages transmitted for each flow is examined. The application data rate of the flow is changed from 1 Mbps to 9 Mbps in each experiment.

From the results (Figure 6), we can see that the number of packet in messages linearly increases with the increase in the application data rate. We can say that the application data rate can be estimated by exploiting the number of packet in             1  2  3  4  5  6  7  8  9  #  o f  p a c k e t _ i n  m e s s a g e s  Application data rate[Mbps]  Figure 6. The number of packet in messages in each application data rate  messages, which are ordinary transmitted in OpenFlow based control. That is, extra traffic except PortStats is not necessary for this estimation. Note that, since our experiments are con- ducted without other traffic and fluctuation of control network delay, we have to further evaluate the relationship in various situation. For example, concurrent arrival of multiple flows or high load may fluctuate the number of packet in messages.

We leave these concerns as a future work but here focus on its practicability in an ideal environment.

2) Fine-grained flow control based on packet in: Based on the basic investigation in Section IV-B-1), we estimate consumed Airtime for each flow and then precisely migrate a part of flows to the aggregation channel until channel capacity is fully utilized.

When new flow arrives at an AP, multiple packet in mes- sages are transmitted to the OFC in accordance with the application data rate of the flow. At this point, the OFC counts the number of packet in messages as shown in Figure 5. After the AP has begun to transmit new arrival flows on the transient channel, the OFC estimates Airtime of each flow based on the total Airtime, which is calculated from PortStats information, and the number of packet in messages. The total airtime is divided into the same ratio with the number of packet in messages of each flow and the OFC treats each Airtime value as for the corresponding flow. For example, when the number of packet in messages for the flow, A, B, and C are 3, 5, and 7, respectively, we estimate Airtime of each flow to be 3/15, 5/15, and 7/15 of total Airtime, respectively.

After the estimation, the OFC migrates several selected flows to the aggregation channel. The OFC selects flows in order of Airtime from the smallest Airtime until the aggrega- tion channel becomes full (Figure 7).



V. PERFORMANCE EVALUATION  In this section, we compare proposed method (P-FAM) with previous method (F-FAM) in several scenarios. Packet loss, throughput, and the amount of control traffic are employed as the comparison indexes. In Section V-A, we describe the experimental environment. In Section V-B, we evaluate the performance of the P-FAM under the simple traffic. Finally, in  The 8th International Workshop on Information Quality and Quality of Service for Pervasive Computing 2017    Figure 7. Fine-grained control  Section V-C, we evaluate the performance under the complex traffic.

A. Experimental environment  The experimental topology is a 3-hop 2-channel WMN as shown in Figure 3. In the WMN, we use IEEE802.11a operating on channels 100 (CH.A) and 132 (CH.B). The physical data rate of two channels is fixed as 54 Mbps. We use Trema for OFC and Openvswitch for OFS, and connect OFC- OFS by Ethernet cable. Tcpdump application is installed in OFC to collect the control traffic. Furthermore, PC1 and PC2, which generate application data, are connected to AP1-1 and AP4-1 by Ethernet, respectively.

B. Scenario 1 : Significant difference in transmission rate  It is natural that there are various flows with diverse characteristics (data rate, communication duration, and so on) in the Internet. In this experiment, we generate multiple flows with different application data rate and these flows arrive at the same time in WBN. Specifically, PC1 transmits one UDP flow of 4 Mbps to PC2. After 20 seconds, two UDP flows of 8 Mbps and 0.1 Mbps begin to be transmitted to PC2 simultaneously.

We run 60 seconds experiment and we conduct this nine times.

In addition, packet size is fixed to 1500 bytes.

Table I shows the comparison between the P-FAM and the F-FAM in terms of packet loss. Note that the total number of transmitted packets from PC1 is 47934. From this table, we can see that the number of packet losses of both method is quite small and almost same. Although the P-FAM uses coarse-grained information, it can attain the same performance with the F-FAM having fine information.

We also see the same performance in the time series of the median result in Table I (Figure 8). We can say that the throughput of P-FAM is completely same with that of F-FAM.

From this, the P-FAM can effectively use the information of PortStats and packet in messages to estimate and aggregate flows, thereby preventing packet losses while maintaining throughput performance.

Finally, Figure 9 shows how the control traffic in case of median result in Table I can be reduced. The cumulative value of the control traffic in the F-FAM and the P-FAM are 0.427 Mbyte, 0.284 Mbyte, respectively. The F-FAM needs more control traffic even for three flows because OFC  TABLE I PACKET LOSS (SCENARIO 1)  F-FAM P-FAM # of losses Loss rate[%] # of losses Loss rate[%]  Minimum 6 0.013 6 0.013 Median 6 0.013 6 0.013  Maximum 6 0.013 11 0.023   0  20  40  T h r o u g h p u t [ M b p s ]  Time[s]  F-FAM P-FAM  Figure 8. Throughput (scenario 1)  periodically acquires FlowStats from all APs in WBN. In contrast, the amount of control traffic of the P-FAM becomes fewer than that of the F-FAM because of the amount of PortStats messages is fixed. Thus, P-FAM can control multiple flows with less control traffic.

C. Scenario 2 : Complex traffic  In this section, we assume that multiple flows with diverse transmission rates coexist on the network. In this experiment, we generate multiple flows with random data rates from PC1 to PC2. The traffic is generated by the following conditions.

1) Each flow arrivals at the interval of 3 seconds.

2) Each flow ends in between 1 second and 10 seconds.

3) A data rate of each flow is fixed but should be less than 9  Mbps, which is the maximum network capacity of 3-hop WBN in the single channel.

4) The total amount of traffic generated in parallel is always less than 18 Mbps, which is the maximum network capacity in the WBN.

The experiment is finished after 30 flows are generated. We examine the performance of the P-FAM and the F-FAM under five flow patterns following the above conditions.

Table II shows the number of packet losses and packet loss rate in the P-FAM and the F-FAM. We can see that the number of packet losses is almost same in both methods and quite small even in various traffic patterns.

Figure 10 shows the amount of control traffic. The amount of P-FAM is 0.506 Mbyte, which is 33.6 % less than that of F-FAM. The amount of control traffic in this experiment increases than the result of the previous experiment because the number of flows increases. We can see that the F-FAM needs more control traffic than the P-FAM. Also, the P-FAM  The 8th International Workshop on Information Quality and Quality of Service for Pervasive Computing 2017     0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  F-FAM P-FAM  C o n t r o l  T r a f f i c [ M b y t e ]  Stats_Request/Reply Others  Figure 9. Control traffic (scenario 1)  TABLE II PACKET LOSS (SCENARIO 2)  F-FAM P-FAM Experiment # of packets # of losses Loss rate[%] # of losses Loss rate[%]  1 61624 6 0.010 6 0.010 2 52795 6 0.011 53 0.100 3 54810 6 0.011 6 0.011 4 56788 6 0.011 6 0.011 5 61170 6 0.010 6 0.011  shows the almost same amount of control traffic for statistical information in Figure 9 and Figure 10. Thus, P-FAM can control multiple flows without increasing control traffic when some flows exist in WBN.



VI. DISCUSSION AND FUTURE WORK  In the real network, it is natural that abundant flows tend to appear on the network simultaneously. Although we assume stable and ideal environment in this paper, the number of packet in messages may be different depending on traffic condition in a real environment. That is, in the proposed method OFC inevitably suffers estimation errors due to the difference. Therefore, appropriate flows should be reliably selected and migrated to the aggregation channel even when the number of packet in messages may change.

In addition, we compare PortStats-based proposed method with FlowStats-based previous method. FlowStats allows the OFC to control each flow based on fine information precisely.

However, in case where many flows arrive at a time, the con- trol traffic increases by acquiring FlowStats. We will further compare the control traffic of the method using FlowStats with that of the proposed method in environment that many flows arrive at the same time on WBN. Moreover, we will compare the performance of the proposed method with that of other related study.



VII. CONCLUSION In this paper, we focus on control traffic reduction and  channel utilization based on SDN (OpenFlow). Although the previous method can accurately control flows, the control traffic inevitably increases according to the number of flows   0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  F-FAM P-FAM  C o n t r o l  T r a f f i c [ M b y t e ]  Stats_Request/Reply Others  Figure 10. Control traffic (scenario 2)  because fine information (FlowStats) can be used. To solve this problem, we proposed a new method using coarse infor- mation (PortStats) instead of FlowStats. The method conducts a coarse-grained migration if all flows can be migrated.

Otherwise, it performs a fine-grained migration in which some of flows are selected and migrated to the aggregation channel.

Specifically, since we can see that the number of packet in messages is in proportion to the application data rate of flows, the application data rate can be estimated based on the combined information of the number of packet in messages and PortStats.

We then conduct performance evaluation. As a result, we demonstrate that proposed method can reduce not only packet loss but also control traffic as a result flow estimation based on PortStats and packet in messages. In the future, we will examine the method that can control multiple flows in various traffic situation.

