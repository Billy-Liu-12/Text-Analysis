<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">A new  Classification Sentence Technique Using Intension Expressions

Abstract Although there are many text classification techniques depending on vector spaces, it is difficult to detect the meaning which are relating to the user?s intension (complaint, encouragement, request, invitation, etc.). The intension discussed in this paper is vety useful for understanding focus points in conversation. This paper presents a method of determining the speaker?s intention for sentences in conversation. The intension association expressions are introduced, and the formal rule descriptions using these expressions are defined to build intention classification knowledge. A set pattern- matching algorithm is proposed to determine the intension class efficiently. From simulation results for 5.859 conversations, the presented set pattern-matching algorithm is about 44.5 times faster than Aho and Corasick method. Precision and recall of intension classifications are 90% and 95%. Moreover, precision and recall of unnecessary sentences extraction are 96% and 97%.

1. Introduction There are many conversation tools using computers such as, telephones, E-mail systems, mobile computers, speech recognition devices and so on. It is very important techniques to determine the user?s intension in the communications. Many text classification techniques depending on vector spaces proposed by Ishida and Tsuji [7][8][9][12], but it is dificult to find the special sentences including the speaker?s intention independent of text classes. Finding the important sentences is relation to automatic summarization by Okumura and Nanba [14][5][6][11][13]. However, summarized sentences differ from the user?s intention in conversation because the purpose of these approaches is to extiact topics of news and focus points of documents. On the other hand, Fuketa et a1..[3][4][10] proposed Field Association (FA) words techniques that can find the expected passages in the whole document. FA words are very suitable for knowledge bases focusing on special sentraces becase they depend on word and phrase knowledge, not vector spaces depend on the whole text.

This paper extends the FA knowledge to Intention Association (IA) expressions in the communications and presents a method of determining the speaker?s intention for sentences in conversation. The formal rule descriptions using these IA expressions are defined to build intention classification knowledge. A set pattern- matching algorithm is proposed to determine the intension class efficiently. The presented method is evaluated for many E-mail conversation sentences.

In this paper, chapter- 2 describes formal description rules for IA expressions. In chapter 3, IA expressions for E-mail conversations are defined by typical 8 classes, and weight of rules are introduced to determine unnecessary sentences. Chapter 4 presents a efficient set- pattern matching algorithm to find IA expressions form input sentences. In chapter 5 ,  the presented method is evaluated by experimental results for many conversation sentences. For the set-pattern matching machine, the time and space is estimated by comparing the traditional pattern matching methods.

2. Formal Description Rules for Intension Association Expressions Intension understanding needs to build the detailed knowledge rules that can include ?words?, ?phrases?,    knowledge rules that can include ?words?, ?phrases?, ?part of speeches (categories), ?concept?, ?meaning?, etc. Natural language has a huge ability expressing intension, and some expressions can be abstracted as conceptual representation, but there are many exceptions based on frozen expressions like idioms and proverbs.

On the formal description rules for intension association expressions, therefore, conceptual representations using ?concept? and ?meaning? are used for abstracted representations, and exceptions should be used the concrete information ?words? and ?phrases?. Moreover, there are many rules combining abstraction and exception. In this paper, a multi-attribute rule description is introduced in order to satisfy the above conditions.

These attributes include string (words), part of speeches (categories) and concepts (semantic, or meanings).

Let ATTR be the attribute name and let VALUE be the attribute value. Let R be a finite set of pairs (ATTR, VALUE), then R called a rule structure. For example, the following attributes are considered as attributes.

STR: string, that is, word spelling.

CAT: category, or, a part of speech.

SEM: semantic information such as concepts.

If RULE is a multi-attribute rule consisting of a sequence of structures, then the p-th multi-attribute rule (RULE (p)) is defined as follows: 0-7803-8623-x104/$20.00 02004 IEEE 98 RULE (p)= Rp,lRp,2 ... Rp,n, (I&lt;np).

For example: RULE (1) = RI,I Ri.2 Ri.3 RI,, = ((SEM, EVENT)), where attribute (SEM, EVENT) is the meaning of the words ?meeting?, ?seminar?, ?party?, ?festival?, etc.

= {(CAT, BE-VERB)), where attribute (CAT, BE-VERB) is the category of be-verb ?is?, ?are?, etc.

Rl,3 = ((SEM, HOLD)}, is the meaning of ?carrying out?, ?hold?, ?open?, ?perform?, ?begin?, etc.

Rule (1) can matches a huge number of important expressions such as ?A campus festival is held.?, ?A seminar will be performed tomorrow.?, and so on. It is clear that the presented multi-attribute rules are an efficient semantic-based rule.

3. Intention Association Classes and Weight of Rules 3.1. Intention Association Classes There are many communication tools using computers and it is very important to determine the user?s intension for all communications. This paper considers E-mail communications as one of the typical and practical communications.

The rule which classifies the contents of mail is described by combining a variety of words, phrases, categories and semantics (including concepts). This chapter defines I basic semantic information about important intension association (1.4) expressions.

(1) Intension Association Expressions of Examples for intension association expressions of &lt;Announce&gt; are ?A campus festival is held.?, ?A seminar will be performed tomorrow.?, ?The schedule of a meeting was changed.? and ?Today?s concert was stopped.? etc. An attribute (SEM, EVENT) is the meaning of the words ?meeting?, ?seminar?, ?party?, ?jestival?, etc. An attribute (SEM, SCHEDULE) is the meaning of ?schedule?, . ?plan?, ?program?, etc.

SCHEDULE is also including all words belonging to EVENT. Moreover, an attribute (SEM, HOLD) is the meaning of ?carrying out?, ?hold?, ?open?, ?)erform?,    meaning of ?carrying out?, ?hold?, ?open?, ?)erform?, ?begin?, etc. An attribute (SEM, CHANGE) is the meaning of ?change?, ?cancel?, ?stop?, ?postpone?, etc.

The sentence containing both EVENT and HOLD is important for IA expressions of &lt;Announce&gt;. It is also important for &lt;Announce&gt; expressions to contain both EVENT and CHANGE. In addition, ?becomes new? is also the meaning of ?change?, because ?The curriculum became new.? is the same meaning as ?The curriculum was changed?.

(2) Intension Association Expressions of &lt;Repore Examples for intension association expressions of &lt;Report&gt; are ?We report the result to you.? and ?The operation was successful.?, etc. An attribute (SEM, &lt;Announce&gt; RESULT) represents the meaning of ?resuIt?, ?data?, ?response?, etc. An attribute (SEM, REPORT) represents the meaning of ?report?, ?announce?, ?tell?, ?convey?, etc. An attribute (SEM, OPERATION) is the meaning of ?operation?, ?experiment?, ?test?, ?examination?, etc.

An attribute (SEM, SUCCESS) is the meaning of ?success?, ?pass?, ?good?, etc. An attribute (SEM, FAILURE) is the meaning of ?tfailure?, ??bag?, ?unsuccessful?, etc.

(3 )  Intension Association Expressions of &lt;Request&gt; Examples for intension association expressions of &lt;Request&gt; are ?Please submit these documents.? and ?Please gather not late.?, etc. An attribute (SEM, SUBMIT) is the meaning of ??submit?, ?deliver?, ??send?, ?jhish?, ?complete?, etc. An attribute (SEM, GATHER) is the meaning of ?gather?, ?come?, ?meet?, ?assemble?, etc. ?Submit? and ?gather? are often utilized in request mails. An attribute (SEM, DAY-TIME) is the meaning of ?today?, ?tomorrow?, ?August 15th?, ?Wednesday?, etc. An attribute (SEM, PLACE) is the meaning of ?room?, ?floor?, ?station?, ?park?, etc. There are more important for IA expressions of &lt;Request&gt; which described concrete DAY-TIME or PLACE, such as ?Please submit these documents by tomorrow.?, ?Please come to the station at 10:00.?, etc.

(4) Intension Association Expressions of &lt;Question&gt; Examples for intension association expressions of &lt;Question&gt; are ?When is this seminar??, ?Where is a meeting place??, etc. An attribute (CAT, INTERROGATIVE) is description of ?When?, ?Where?, ?What? and ?How?. An attribute (SEM, TEACH) is the meaning of ?teach?, ?ask?, ?tell?, ?answer?, etc. For example, ?Please tell me your address.? or ?Please teach me how to solve this problem.? are the same meanings as ?Where is your address?? or ?How is this problem solved??, so those are the expressions of &lt;Question&gt;. An attribute (SEM, VISIT) is the meaning of ?visit?, ?go?, ?meet?, etc. Examples are ?May I visit to your house??, ?When shall I visit you??, etc. The expression belonging to VISIT is extracted together with an interrogative.

(5) Intension Association Expressions of Examples for intension association expressions of &lt;ComplainB are ?The program got yesterday is wrong.?, ?The received goods had broken.?, ?I cannot be satisfied of your service.?, etc. An attribute (SEM, MISTAKE) is the meaning of ?mistake?, ?wrong?, ?jailure?, ?defect?, ?bug?, etc. An attribute (SEM, SATISFY) is the meaning of ?sat is-? ,  ?content?, ??gratiw?, ?complete?, etc.

Expressions denying SATISFY have the meaning of a ?complaint?. An attribute (SEM, HURRY) is the meaning of ?hurry?, ?prompt?, ?urgent?, ?immediate?, ?pressing?, etc., and an attribute (SEM, A?ITENTION) denotes the expression ?attention?, ?measure?, ?cope?, ?correspond?, etc. Expression with urgent demands also    ?correspond?, etc. Expression with urgent demands also becomes &lt;Complaint&gt; expression. Examples are, ?Your prompt attention would be appreciated.?, ?We request an immediate refund.?, (6) Intension Association Expressions of &lt;Reply&gt; &lt;Complain0 Examples for intension association expressions of &lt;Reply&gt; are, ?It is O.K.?, ?I attend the meeting.?, ?I am absent from a meeting.?, ?I refuse this work.?, etc. An attribute (SEM, ACCEPT) corresponds to affirmative expressions of &lt;Reply&gt; like ?accept?, ?upprove?, ?O.K.?, ?understand?, ?attend?, ?present?, ?)participate? , etc. In contrary, to ACCEPT, an attribute (SEM,DECLME) corresponds to refusal expressions of &lt;Reply&gt; like ?refuse?, ?decline?, ?absent? , etc. An attribute (SEM, IMPOSSIBLE) corresponds to negative expressions like ?impossible? or ?cannot?. The description containing both ACCEPT and IMPOSSIBLE i5 a refusal expressions of &lt;Reply&gt;. Examples are ??I cannot attend the meeting.?, ?It became impossible to participate.?, etc. In addition, the meaning which combined ACCEPT and ?next time? is also refusal expressions of &lt;Reply&gt;. For example,? ?I will participate next time.? is including the meaning of ?I cannot participate this time.?.

(7) Intension Association Expressions of &lt;Invitation&gt; Examples for intension association expressions of &lt;Invitation&gt; are ?Let?s play together.?, ?Would you like to go with me??, etc. An attribute (SEM, TOGETHER) is the meaning of ?together?, ?with?, ?too?, etc. An attribute (SEM, HOPE) is the meaning of ?hope?, ?want?, ?wish?, ?desire?, etc. An attribute (SEM, PARTY) is the meaning of ?party?, ?tfestival?, ?entertainment?, etc. PARTY is a sub concept of the EVEXT. An attribute (SEM, JOIN) is the meaning of ?join?, ?come?,. ?attend?, ?participate?, etc. There are &lt;Invitation&gt; expressions combined with HOPE and JOIN and PARTY. Examples are, ?I hope you can come to our festival.?, and ?I want you to participate in a dance party.?, etc.

3.2. Weight of Rules An E-mail message can be classified according to rules as shown in Section 3.1 based on IA expressions.

Furthermore, an important message or an unimportant (unnecessary) message can be judged by giving the weight, or point, to each classification rule. The important measurement of sentences is independent of classifications such as &lt;Announce&gt;, &lt;Report&gt;, etc. For  example, ?A game is held on Sunday.? is more important than ?Do your best!?. For this reason, the sentence of &lt;Announce&gt; is more important than &lt;Encouragement&gt;, generally. Consequently, the point of &lt;Announce&gt;. rule is 200 and the point of &lt;Encouragement&gt; rule is 70 in Table 1, where plus point means the important measurement is high and minus point is low. There are a variety of important measurements for IA expressions of same classification. For example, both RULE (1 1) and RULE (14) are &lt;Question&gt; rules, but they have different points 150 and 15, respectively. RULE (11) matches a sentence asking schedule like ?When is the meeting held??, but RULE (14) matches a sentence the introduction of business like ?How have you been??. It is clear that the important measurement of latter case becomes low.

There are a variety of important measurements for IA expressions of same classification. For example, both RULE (1 1) and RULE (14) are &lt;Question&gt; rules, but they have different points 150 and 15, respectively.

RULE (1 I )  matches a sentence asking schedule like    RULE (1 I )  matches a sentence asking schedule like ?When is the meeting held??, but RULE (14) matches a sentence the introduction of business like ?How have you been??. It is clear that the important measurement of the latter case becomes low.

Furthermore, in the mails, there are unnecessary sentences no related to business. By deleting these sentences, the important measurement goes up very much relatively. The rules for judging unnecessary sentences are defined as follows.

(8)  Intention Association Expressions of &lt;Salutation&gt; Examples for intension association expressions of &lt;Salutation&gt; are ?Hi, Mike!?, ?Dear Mr. Brown?, ?Yours truly?, etc. An attribute (SEM, GREET) is the meaning of the words ?Hello?, ?HP, ?thank?, ?sorry?, etc. An attribute (SEM, CLOSING) is the meaning ?Yours truly?, ?Yours sincerely?, ?Best wishes?, ?See you?, etc.

(9) Intention Association Expressions of Examples for intension association expressions of &lt;Assumption&gt; are ?If it rains, the game will be called off.?, ?If you have some questions, please ask to a service center.?, etc. The &lt;Assumption&gt; rules have the negative point. These rules are used in order to reduce the importance acquired with other rules. For example, ?The game will be called off.? is extracted with 190 points of &lt;Announce&gt; by RULE (3). ?If you have some questions, please ask to a service center.? matches both RULE (3 1) and RULE (3). The point of RULE (3 1) and RULE (3) are -50 and 190, so the point of this sentence is 140.

&lt;Assumption&gt; 4. Determination Algorithm of Intension Classes 4.1. Set Pat tern Matching Machines Let X be a sequence of the input structures. A set pattern-matching machine SETM is a program which takes as input X and produces as the output the locations in input Xin which every RULE (p) in R-SET appears as subsequences of structures. The machine SETM consists of a set of states. Each state is represented by a number.

The machine M processes X by successively reading the input structure N in input X, making state transitions and occasionally emitting an output. The matching operation  of the machine SETM is similar to multi-keyword string pattern-matching method of Aho-Corasick [ 1][2][ 151, however, the presented machine has the following distinctive features: Let S be a set of states and let I be a set of the rule structures R, then the behavior of the machine SETM is defined by next two functions: goto functiongoto : Sx I -+ S U uail), output function output : S + A, subset of R-SET.

The function goto maps a set consisting of a state and a rule structure into a state or the message fail. Certain states are designated as output states which indicate that RULE (p) has been found. The function output formalizes this concept by associating each RULE (p) in R-SET (possible empty) with every state.

A transition label of the goto function is extended to a set notation. Therefore, in the machine SETM, a confirming transition is decided by the inclusion relationship whether the input structure N includes the rule structure R or not.

Input structures to be matched by the matching rule are also defined by the same set representation. N is used as the notation for input structures to distinguish them from R. In order to consider the abstraction of the rule structure, matching of the rule structure R and the input    structure N are decided by the inclusion relationship such that N includes R (NOR).

Let R-SET be a set of RULE (p). Consider the following rule in Table 1.

R-SET= {RULE (1)) , RULE (1) = RI,I R1,2 Ri.3, RIJ = {(SEM, EVENT)}, R1,z = ((CAT, BE- VERB)}, R1.3 = ((SEM, HOLD)}. For example, RULE (1) can detect the input ?A campus festival is held.?, where NI  = {(STR, ?festival?), (CAT, NOUN), (SEM, EVENT)}, Nz = {(STR, ?is?), N3 = {(STR, ?held?), (CAT, VERB), (SEM, HOLD)), Each input structure can includes the corresponding rule structure as follows: The machine becomes non-deterministic if there are two more labels R such that (NOR) for transitions goto(STATE, R) in the goto graph. Therefore, the ambiguity must be solved before constructing the goto graph from R-SET. The goto graph is the tree structures sharing longest common prefixes for each rule, so it is easy to detect that ambiguity. Ambiguous rules are divided into unambiguous sub-rules.

Consider the following second rule in Table 1. RULE (3) = &amp; , I  R3,z R3.3 , R3.i = {(SEM, SCHEDULE)},R3,2 = ((CAT, BE-VERB)}, R3,3 = {(SEM, CHANGE)}. For two rules RULE (1) and RULE (3), RI,, and R3,1 structures are ambiguous, so the following sub-rules are obtained by dividing RULE(3) = R3,, R3.2 R3,3 into new RULE(3) and additional rule RULE (q+l), where q is the maximum rule number. For q = 32 of Table 1, q+l = 33.

(CAT, BE-VERB)} N I ~ R I , I ,  NzDRI,z, N30R1,3 - RULE (3) = &amp;,I R3.z R3.3. R3.i {(SEM, SCHEDULE(]))}, R3.2 = {(CAT, BE-VERB)}, R3,3 = ((SEM, CHANGE)}, SCHEDULE( 1) = SCHEDULE - EVENT, RULE (28) = R33,i Rn.zR33.i. Rm.1 = {(SEM, EVENT)), R33.z = ((CAT, BE-VERB)), R33.3 = ((SEM, CHANGE)}.

4.2. Set Matching Algorithm  It is clear that the deterministic machines can be constructed in the section 4.1, so i t i s  easy to analysis a sequence of structures. In natural language processing, morphological, syntax and semantic analyzers are carried as the preprocessor in general, but the input must take a sequence of structures for skeleton sentences and phrases. ?Skeleton? means that the embedded sentences . and redundant words are ignored in the preprocessor.

The reason is that the request of the mail messages is very simple expression.

For example, consider ?Mr. Koizumi?s birthday party is held after the meeting on May 15.?. ?Mr. Koizumi?s birthday? which is the modifier of a subject is removed from the input. Moreover, ?after the? and ?on? are also removed. ?Party? is taken as EVENT. Finally, ?party (EVENT)?, ?is (BE-VERB)?? and ?held (HOLD)? are obtained from the input sentence and the following sequences of structures are prepared to the SETM machine. NI  = {(STR, ?party?), (CAT, NOUN), (SEM, EVENT)}, Nz = {(STR, ?is?), (CAT, BE-VERB)}, N3 = {(STR, ?held?), (CAT, VERB), (SEM, HOLD)} It is easy to produce a sequence of input structures because there are useful natural language processing modules. Therefore, the detail discussion is omitted in this paper.

The following algorithm summarizes the behavior of the machine SETM.

Algorithm: Set Matching Machine SETM.

Function SetMatch(a, M); A sequenceaof input structures is NI N2 ... N., where each N, (O&lt;i&lt;n+l) is an input structure. Function NEXT    each N, (O&lt;i&lt;n+l) is an input structure. Function NEXT (a) returns the first structure NI and modifieda= Nz ... N, which the first structure NI is removed. A SETM machine M with a goto function and an output function.

Step (M-1) Initialization If a has no structures then terminate matching process; Initial state STATE of the machine M is set to the start state number; Step (M-2) Confirming a Transition and Continue Matching Variable N of input structures is set to NEXT (a); For each transition goto(STATE, R) in the goto graph, if there is R such that NOR, then STATE = goto(STATE, R) and goto the next step; Otherwise replace Nu to a and call SetMatch(a,M); Step (M-3) Produce Output Information and Continue Matching.

If output (STATE) is defined that that information is produced; Call SetMatch(a,M); (End of Function) Table 2 shows the flow of matching process for ?This document is used for the next meeting, so please send it to the leader by tomorrow.?. First, ?meeting? becomes he input structure N = ((STR, ?meeting?), (CAT, NOUN), Table 2. Examples of Matching Process Table 3. Simulation Results of Machines SETM and AC SETM AC AC/SETM Information about rules and machines Number of rules 1,561 327,8 10 210 Number of concepts 588 Number of words in concepts 2,438 Number of transitions 895 982,55 1 1,097 Storages (MB) 1.01 26.562 26.5 Speed (ms) 0.01 1 0.489 44.5 (SEM EVENT)} and N includes R= {(SEM, EVENT)). Thus, STATE=O becomes STATE=I in Goto/Output column. The next structure N= {(STR, ?please?)) doesn?t include a transition label {(CAT, BE- VERB)) and {(STR, ?become?)} from STATE=I, and goto transition fails in Step (M-2). Therefore, the function SetMatch is called recursively from the current structure. State transitions 0, 19, 20 and 21 are carried out for four structures as shown in Table 2. It turns out that rule 8 is matched to the input sentence by Output (2 1 )=3.

5. Simulation Results 5.1. Space and Time Observations of Set Pattern- Matching Algorithm Table 3 compares the presented machine SETM with the string pattern-matching machine AC [l]. The number of rules210 times more than that of the machine SETM because the machine SETM can be taken multi-attribute inputs, but the machine AC must take single attribute only. Therefore, the AC machine must be divided into the machines STR-AC (for words), CAT-AC (for categories) and SEM-AC (for semantics) for 588 concepts and 2,438 words of SETM. The resulting number of transitions for AC is 1,097 times more than that of the machine SETM. The storage of the machine AC is 26.5 larger than that of the machine SETM, where the size of machine SETM includes dictionaries for concepts and their words.

The machine SETM can detect expected rules to be matched by only one scanning, but the machine AC needs to scan three times scanning for the above three kinds of rules. Moreover, the machine AC needs additional closure computation by adopting all results of the machines STR-AC, CAT-AC and SEM-AC. From the simulation results for the average matching time for 1,000 sentences, it turns out that the machine SETM is 44.5 times faster than the machine AC.

The worst-case time complexity of matching cost of    The worst-case time complexity of matching cost of the machine SETM is proportional to the length of input structures. This theoretical estimation means that the presented method is practical.

6. Conclusions This paper has presented a method for detecting user?s intention in communicatios and for calculating the important measuremt among the detected expressions. In order to extract the intension association expressions, eitgh kinds of rule sets are classified and 51 concepts are defined. A multi-attribute set pattern-matching algorithm is presented. This multi-attribute enables us to fast detecting by using complex rule sets. From simulation results for 5,859 E-mail messages, the presented set pattern-matching algorithm is about 44.5 times faster than Aho and Corasick method. The precision and recall of intension classifications are 90% and 95% and precision and recall of unnecessary sentences extraction are 96% and 97%.

The intension association expressions and the important measument is one of filtering information to determine the important E-mail messages. In the future study, the other measurement for important messages will be considered together with the time priority. The filtering measurement depends on individual criterion except business cases, so the leaning faculty for users should be also researched.

Texts. in Proceedings of the IEEE 7-th International  Symposium on Computer VII, 1 1 , 1992, pp. 471 -474.

