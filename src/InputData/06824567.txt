Research on Low Energy Consumption of Mass Data  Download in Smartphone

Abstract?It will consume lots of energy when the apps download mass data in the smartphone. Furthermore, the apps will increase the burden of the battery if they download big data with slow network. The paper proposes a smartphone download strategy that downloads mass data with appropriate delay to achieve low energy consumption. The strategy, called CLSA, selects the best download model that based on the current network situation, the length of download requests? queue and the local information of smartphone. We evaluate the CLSA using a music player implementation on a modern smartphone and compare it with the other two download strategies, Minimum Delay and WiFi Only. The result shows that the CLSA can achieve the optimal energy-delay trade off performance than the other two.

Keywords?smartphone download strategy; CLSA; energy- delay trade off

I.  INTRODUCTION Nowadays, the market share for the battery-powered  portable equipment keep increasing [1, 2], and the app market will explode exponentially to $38 billion industry by 2015 [3].

Despite the incredible market penetration of smartphones and exponential growth of the app market, their utility has been and will remain severely limited by the battery life. Furthermore, the energy issues also influence the development of hardware, as Fig. 1 shows that the growth in processor performance since the late 1970s, and the performance improvement drop to less 22% per year in recent years due to the twin hurdles of maximum power dissipation of aircooled chips and the lack of more instruction-level parallelism to exploit efficiently [4].

A number of specialized energy saving techniques on mobiles has been proposed. Abhinav Pathak [5] presented the eprof, the first fine-grained energy profiler for smartphone apps.

Eprof can find out the code bugs that cause the energy dissipation in apps then fix it. Abhinav P. also focused on the no-sleep bug [6] in apps which will let the I/O components stay awake for a long time until a force suspend, then he developed better programming language support to avoid no-sleep bugs at programming time [7]. Other specialized energy saving techniques, e.g., for specific applications on mobile system [8, 9], for a specific protocol [10, 11], via offloading [12, 13], and via delaying communication [14].

Some researchers have found that the communication subsystem contributes much to the energy consumption in most embedded system [15, 16], and there are many apps exchange  mass data by WNI (Wireless Network Interface) of smartphone.

At the present time, most apps make an immediate response as soon as the download request arrives, then download mass data from web server to local (or upload data from local to web server). But the immediate response mode may consume much energy and reduce the battery life of smartphone with slow downloading speed. This paper explores robust method to reduce the overhead in three aspects. First, recent smartphones have multiple wireless interfaces (3G and WiFi) for data transmission, they have different data rates and transmission power [17, 18]. Second, the user really do not consider the network environment, and make download requests depend on their requirements which maybe discontinuous and scattered.

Third, the download task can be delayed because of user?s delay tolerance. This paper proposes a Concentrate Download and Low-Power and Stable Link Selection Algorithm (CLSA) which based on the Lyapunov optimization framework, the algorithm decide which WNI to use and whether to delay the download tasks after analyzing the local information and network state. The CLSA was validated by a music player in the campus of Northwest University, the result shows that the CLSA could achieve the goal of reducing energy consumption within the user?s delay tolerance.



II. LYAPUNOV OPTIMIZATION FRAMEWORK Lyapunov optimization framework [19] is an architecture  that guarantees the stable of all queues in the network and optimizes other objects (Power, Fairness and Throughput) .

A. Stable Queue First, we need to give the concept of stable queue backlog.

Let ][tU denote the queue backlog at beginning of timeslot t, ][tu  is the amount of data transferred and ][tA  is the app data  added to the queue during timeslot t. The condition for the stable network is the increased data less than the transferred data during slot t ( ][][ tutA ? ) [20]. Over time, the queue backlog evolves as follows:  ][][][]1[ tAtutUtU ???? (1)  The queue is stable if:  ??? ? ?  ?  t  t UE  t U  ]}[{1suplim     (2)  This work is supported by the Doctoral Scientific Fund Project of the Ministry of China under Grant No.20116101110016; The National Natural Science Foundational of China under Grand No.61070177; Nature Science Foundation of Shaanxi Province under Grand No. 2012JQ8047; Shaanxi Province Department of Education Fund under Grand No. 11JK1059; Major Science and Technology Project of Shaanxi Province (No.2012ZKC05-2).

DOI 10.1109/CBD.2013.30     Under the finite length of stable queue, the time average transmission power defined as:  ??? ? ?  ?  t  t UPE  t P   ]}[|][{1suplim      (3)  B. Lyapunov Drift for Queueing Networks Lyapunov drift is a well-known technique used to analyze  the stability of queue. It involves defining a nonnegative, scalar function, called a Lyapunov function which value depends on the queue backlog ][tU . If there are N waiting queues in the network, and define the vector of queue backlogs at time t by:  ])[],...,[],[(][ 21 tUtUtUtU N?   (4) For each slot t, define Lyapunov function ][tL  as the sum  of the squares of the current queue backlogs (divided by 2 for convenience later):  ? ?  ? ?  N  i i tUtL   2][ 1][ (5)  This function is a scalar measure of the total queue backlog in the network. It is called quadratic Lyapunov function on the queue state. Define the Lyapunov drift as the change in this function from one slot to the next:  ][]1[)( tLtLt ????                                        (6)  C. Bounding the Lyapunov Drift From (1) we can suppose the queue backlog i change over  time according to the following equation:  }0],[][][max{]1[ tiutiAtiUtiU ????      (7)  This equation can be used to compute a bound on the Lyapunov drift for any slot t:  2]}[][][{  2}0],[][][max{2]1[  tiutiAtiU  tiutiAtiUtiU  ???  ???? (8)  Rearranging this inequality, summing over all i, and dividing by 2 leads to:  ? ?  ???? N  i iii tutAtUtBt   ]}[][]{[][)(                    (9)  Where ][tB is defined:  ? ?  ??? N  i iiii tutAtutAtB   22 ]}[][2][][{ 1][      (10)  Suppose the second moments of arrivals and service in each queue are bounded, so that there is a finite constant 0?B  such that for all t and all possible queue vectors ][tU  the following property holds:  BtUtBE ?]}[|][{                                       (11)  Taking conditional expectations of (9) leads to the following bound on the conditional expected Lyapunov drift:   ]}[|][][{][  ]}[|)({   tUtutAEtU  BtUtE  ii  N  i i ?  ???  ? ?  (12)      Fig. 1.  Growth in processor performance since the late 1970s      Fig. 2. Concentrated waking-up strategy     Fig. 3. Traditional consumer model  D. A Basic Lyapunov Drift Theorem In most cases, the network can be controlled so that the  difference between arrivals and service at each queue satisfies the following property for some real number [21, 22]:   )0(]}[|][][{ ?? ??tUtiAtiuE                    (13)  Bring (13) into (12) we can get:  ? ?  ??? N  i i tUBtUtE   ][]}[|)({ ?                     (14)  Summing the above expression over }1,...,1,0{ ?? t and using the law of telescoping sums gives:   ?? ?  ?  ???   ]}[{]}0[{]}[{ t N  i iUEBtLEtLE      ?      (15)  Then for all slots 0?t  the time average queue size in the network satisfies:  t LEB  iUEt  t N  i iUEt  t N  i  ??            )]0([  )]([1  )]([1    ??  ? ?  ? ?  ?? ?  ?            (16)  Under the condition of )0(]}[|][][{ ?? ??tUtiAtiuE , it can be proved that the average length of queue backlog of all nodes in the network cell is bounded, so that the network is stable. We can get the same result on a single node by analogy analysis.



III. CONCENTRATE DOWNLOAD AND LOW-POWER AND STABLE LINK SELECTION ALGORITHM  This section presents an optimization model of producer/consumer. And then we analyze the download model and propose the CLSA by theoretical deduction.

A. The Study of Centralized Tasks Strategy In order to reduce the interrupt times of CPU and prolong  the idle state of CPU [23], the management of waken source is needed to avoid scattered waking. We adopt a controllable and concentrated waking-up strategy, to minimize the wakeup times, delay the wakeup when it?s possible, so as to maintain the system in low power state, as shown in Fig. 2.

In the original PCM (Producer-Consumer Model), two threads share a public buffer zone. The producer as a data provider, always put the data into buffer, the consumer process the data. There are three threads, main thread is to allocate resources, and provide a series of system resources such as buffer zones and physical memory, producer thread writes data, consumer thread reads data.

Further control those threads which have a collaborative relationship, optimize the original PCM, and take the consumer (offer download service) as the task that could be delay to process. In the original PCM, consumer thread will processing  date even there is only one data in the public buffer zone, so that will cause much task switching, as shown in Fig. 3. We set upper threshold to control the inappropriate wakeup behaviors, the consumer will be waken up to process data only when the number of data reach the threshold. Fig. 4 shows the optimal consumer model that can reduce some potential wake-up behaviors, so as to reduce the waste in the system and achieve low energy consumption.

B. CLSA  The link selection algorithm:  ])[]}[,|][{][max(][ ~  tPWtSltuEtUtl ll ????       (17)  It chooses a link ][~ tl  by calculate the )0][ ~  ]}([ ~  max{ ?tltl to download data during timeslot t, the current request queue backlog is ][tU . ]}[,|][{ tSltuE l  is the estimation on downloading speed that can be achieved on link l, given the current channel condition ][tSl  and the download power ][tPl .

W is a weight parameter which used for energy and delay trade-off.

The CLSA will not select any link to download data when 0][  ~ ?tl . Although the CLSA is similar with the selection  algorithm which proposed by M. J. Neely [24], the CLSA focus on the single node (the smartphone) and M. J. Neely?s algorithm pay much attention on all nodes in a network cell.

The formula (17) derived as follows.

Let quadratic Lyapunov function ][tL  as the sum of the      Fig. 4. Modified consumer model  squares of the current download request queue backlogs:   2]}[{  1]}[{ tUtUL  ? ?   (18)   Lyapunov drift  ]}[|]}[{]}1[{{])[( tUtULtULEtU ?? ? ??  ]}[][]{[}2][2][{  2][ 1]}[][]{[}2][2][2][{   2][ 12]}[][][{   2][ 12]1[  1])[(  tAtutUtAtu  tUtAtutUtAtutU  tUtAtutU  tUtUtU  ????  ??????  ????  ????  (19)  Take conditional expectations given ][tU :  ]}[|][][{][]}[|2][2][{ 1])[( tUtAtuEtUtUtAtuEtU ?????   (20)  Let ][tB  equal to:  ]}}[|2][{}2][{{ 1][ tUtuEtAEtB ?  ? ?                     (21)  And ]}[|][{ tUtAE  equal to:  ??? ]}[{]}[|][{ tAEtUtAE                                    (22)  And then bring (21), (22) in (20), we can obtain:  ?][]}[|][{][][])[( tUtUtuEtUtBtU ????              (23)  Now we take the minimum power consumption objective into consideration, and add a weighted cost (power  consumption during slot t) to (23) in order to achieve the goal of low power and stable request queue backlog:  ?  ?  ?  ][]}[|])[  ]}[,|][{][{(][ ]}[|][{][  ]}}[,],[|][{{][][ ]}[|][{][]}[|][{][][  ]}[|][{])[(  tUtUtWP  tlSltuEtUEtB tUtPWEtU  tlSltUtuEEtUtB tUtPWEtUtUtuEtUtB  tUtPWEtU  ??  ?? ??  ?? ????  ??  (24)  We assume the data arrival speed ][tA , and the data service speed ][tu  have finite variance, exist constant to satisfy  AtA ?][ and utUtuE ?]][|][[ , so we can get:   22,][ uABtBtB ????                         (25)  From formula (22) we can know that minimize the right side hand of formula will guarantee the request queue stability with minimum power consumption. However, since we have no control over the application data arrival process, and hence cannot do much about the term ?][tU . CLSA does not directly minimize the entire expression on the right hand side of (17).

Rather, in order to minimize the right hand side of (17), it maximizes the negative term on the right hand side of (17); so we get the control decision in (17).

From (17), we can get that the CLSA will stop the download service if the smartphone under poor network condition. Corresponding to the consumer sleep in the PCM, and it will be waken up until the number of data reach the upper threshold which produced by the producer. The threshold is not a constant value in the CLSA, it either small in good network environment or large when the download speed is low.

The concentrated download strategy can accomplish three goals. First, the CLSA will reduce the energy dissipation which caused by switching the state of download service between working and idle frequently. Second, defer the download request, until in the good network environment, so that will prevent downloading data in slow network which consume much energy. Third, dynamic threshold guarantee the request queue stability, avoid the infinitely increasing of queue backlogs.

C. Average Queue Backlog and Power Consumption M. J. Neely has defined the average length of queue backlog  and the minimum average power consumption in a network cell. We defined the same thing of a single node with parameter 0?W :   ?      *   ]}[{1suplim WPBUE t  U t  t ??? ?  ? ?  (26)   W BPUE  t P  t  t ??? ?  ? ?  *   ]}[{1suplim     (27)      Fig. 6. Southern campus of NWU  Fig. 5. The relationship between RSSI and download speed  The derivation process of the above formulas is similar to [26], but (26) (27) are only for single node. *P  is a theoretical lower bound on the time average power consumption, 0??  is a constant meaning the distance between arrival pattern and the capacity region boundary,  and B  is an upper bound on the sum of the variances of ][tA  and ][tu  (each of which is assumed to have finite variance). We can let the average power consumption close to theoretical lower bound *P by increasing the value of W , but the cost of it is the liner increase in length of request queue backlogs. On the contrary, we can also reduce the latency of download service by decreasing the value of W . This )](),1([ WOWO trade-off between power consumption and latency is a fundamental aspect of all control algorithms designed using the Lyapunov optimization techniques.

D. Estimation of Download Rate Neither general strategy can predict the download speed of  smartphone accurately, nor related software can achieve both low power and accurately. This paper proposes a prediction by the Received Signal Strength Indicator (RSSI) of different APs. We store the AP?s SSID, current RSSI and download speed as an item and refresh it when a new download service comes and calculate the average speed. The results show that the error < 8%, fit to the experiment requirement. Fig. 5 shows  the relationship between RSSI and download rate, and they are almost proportional.

E. Scan Interval of WiFi We set the scan interval to 20s when the smartphone  within the scope of WiFi signal, so that it can deal with the download request in time and stop downloading data when smartphone move out of the scope to avoid wasting of energy.

The scan interval is set to 30s when the smartphone cannot get WiFi signal. The nominal rate of 3G is lower than WiFi and the energy-efficiency is different. In most cases, CLSA will not offer service when the queue backlogs is short and WiFi signal cannot be detected, so a long scan interval of WiFi also reduce  energy overhead.



IV. EXPERIMENT We develop a music player which based on open source  Libmad on the Android 2.2, and implement the CLSA in the app. The experiment conducted on ZTE V880, related parameters are shown in Table I. Based on our measurement on the V880, we get the download power of 3G and WiFi are 0.925W and 1.387W, respectively, as shown in Table II.

A. Experiment Object The experiment conducted in Northwest University where  equipped many WiFi hotspots, and collect data around four locations, Dormitory, Dining Hall, Library and Laboratory, respectively, as shown in Fig. 6 which measured by Baidu Map. The WiFi signal strength as show in Table III.

TABLE I.  ZTE V880  ZTE V880  CPU 600MHZ  RAM 256M  ROM 512M  Micro-SD Card 2GB  Network GSM+WCDMA+Wifi  OS Android 2.2  Battery Li-ion 1250mAh  Display 3.5???? capacitive touchscreen,800*480  TABLE II.  POWER OF NETWORK RADIO  Platform WiFi 3G ZTE V880 0.925W 1.387W  TABLE III.  SIGNAL STRENGTH OF WIFI  Location Dorm Lib Lab Din WiFi hotspot Laptop Router Router None  Strength Wake Normal Strong None Distance 5-10m 15-20m 30-40m 0      Fig. 7. Performance comparison between different strategies  B. Experimental Operation and Result Analysis The paper compares CLSA against other two common  algorithms, Minimum Delay that always make an immediate response and WiFi Only which only use WiFi to transmit data.

We download music randomly at four locations, and then hang around 50 minutes at each site, record the test data. Let  })...1{( NiSi ? , })...1{( NiEi ?  and })...1{( NiDi ? denote the length, total energy consumed and delay of song i, then calculate the average energy consumed and delay per byte by formula (28). Table IV shows the result after data processing.

?  ?  ?  ?? N  i i  N  i i  S  E E    ?  ?  ?  ?? N  i i  N  i i  S  D D   1 (28)  In Table IV, we can know that the Minimum Delay with the minimum latency and consume the most energy per byte.

Because the Minimum Delay will not take the network state into consideration and make an immediate response when the download request arrive, but it will cause high energy consumption if the smartphone in the poor network environment. WiFi only with the maximum latency and consume the least energy per byte. The aforementioned download power of WiFi interface is lower than 3G interface and the transmit rate is faster than 3G, so it consumes the least energy per byte. But the length of the request queue backlog will increase infinitely when there is no WiFi signal around.

The CLSA is the strategy that can trade-off energy and delay by formula (17). Under the poor network condition, CLSA will not select a link to download unless the request queue backlog is long enough, so that will reduce additional energy consumption and avoid infinite latency. For example, the average download speed is 20Kb/s and 100Kb/s of 3G and WiFi in dormitory, the smartphone cannot get WiFi signal when it far away from the hotspot, then the CLSA will make a decision by detecting RSSI and local queue backlogs, it will not offer download service if the queue backlog has not reach the upper threshold and the speed is slow, so the energy will be saved, but the data will be downloaded when the length of queue is long enough with slow speed, so the latency is reduced.

We use the product of )(JE  and )s(D  to evaluate the performance of different download strategy as shown in Fig. 7.

The evaluation combined energy and delay, the higher the  product, the worse the performance. For example, WiFi Only owns minimum )(JE , but it doesn?t achieve the best performance because of the maximum )s(D . It will get good performance only both )(JE and )s(D have better value.

CLSA neither reduce the most energy, nor have the lowest latency, but it has the best comprehensive properties which consider the energy/delay trade off in the algorithm.



V. CONCLUSION This paper proposes an energy/delay trade off algorithm  CLSA which based on Lyapunov optimization framework by modified consumer model from the perspective of concentrate scattered requests. It reduces unnecessary overhead and achieve energy-efficient to a certain degree. Along with the deepened study gradually, there are some problems need to study and improve, such as the energy consumption on scan interval and working/idle/sleep state of WiFi; the sleep strategy of Android; and the final results do not show the advantage of CLSA very well, because the experiment conducted in the special environment which limited by the number of experiment sites.

