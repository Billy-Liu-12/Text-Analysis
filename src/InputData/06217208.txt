Protein Secondary Structure Prediction Using BLAST  and Exhaustive RT-RICO, the Search for Optimal

Abstract? Protein secondary structure prediction from its amino acid sequence is a well studied computational problem in bioinformatics and data mining. It can be viewed as an intermediate research objective to solving the more challenging protein three-dimensional structure prediction problem, which is one of the most important research goals of bioinformatics.

Although the secondary structure prediction problem was first defined in the 1960s, the prediction accuracy of the most modern methods still hovers around 80%. In [1] this research team presented a protein secondary structure prediction method, BLAST-RT-RICO (Relaxed Threshold Rule Induction from Coverings), that employs a modified association rule learning approach, utilizing multiple sequence alignment information, to predict secondary structures. Despite producing higher prediction accuracy than many other contemporary methods, that preliminary research study identified some crucial areas in need of improvements, such as determining the optimal segment length, finding the optimal threshold value, and improving the time complexity for the rule generation algorithm.  In this paper, we present a modified method, BLAST-ERT-RICO (Exhaustive Relaxed Threshold Rule Induction from Coverings), which has an improved time complexity, as well as more optimal choices of segment length and threshold value. Preliminary test results showed that with a segment length of 9 amino acid residues, and a threshold value of 0.8, BLAST-ERT-RICO achieved a Q3 score of 92.19% on the standard test dataset RS126, which suggests that this approach may be even more useful as a secondary structure prediction method in the future.

Keywords-data mining; protein secondary structure prediction; BLAST

I.  BACKGROUND  A. Introduction The nucleotide sequence of a gene determines the amino  acid (primary structure) sequence of a protein. The amino acid sequences determine the three-dimensional structures of the protein molecules, and protein structures determine protein functions. In view of the fact that the determination of protein three-dimensional structures through wet-lab based experimental methods is expensive and time-consuming, computational approaches are preferable. Hence the protein three-dimensional structure prediction problem is still one of the most important research goals of bioinformatics.

Theoretically, if we could computationally examine a large enough set of possible conformations to be sure to include the  correct one, it would be possible to consistently predict protein structures from amino acid sequence on the basis of a priori physiochemical principles. There has been progress towards this goal, but it has not yet been achieved [2]. Protein structure hierarchy is classified into four levels: primary, secondary, tertiary, and quaternary. In the hierarchy, protein secondary structure plays an important role in analyzing and modeling protein structure because it represents the local conformation of amino acids into regular structures. Many researchers employ protein secondary structure as a feature to predict the tertiary structure, function, or subcellular localization of proteins [3].

The secondary structure prediction problem was first defined in the 1960s. Before the 1990s, the prediction accuracy was only around 60% for most methods. The 70% accuracy barrier was surpassed in the early 1990s by a new neural network approach that used multiple sequence alignment data as inputs to artificial neural networks. The accuracy of prediction methods has continued to improve over the years, with some recent methods reaching or even surpassing 80% accuracy, by utilizing evolutionary information of proteins, large databases, and various machine learning approaches such as artificial neural networks and support vector machines. The accuracy of the most modern prediction methods hovers around 80%. Can this 80% barrier be surpassed? Rost [4] suggests that a value of around 88% likely will be the operational upper limit for prediction accuracy.

It is not an easy task to evaluate the performance of a protein secondary structure prediction method. For example, the use of different datasets for training and testing each algorithm makes it difficult to find an objective comparison of methods [5]. Rost [4] stated that ?there is no value in comparing methods evaluated on different datasets.? Efforts have been made to develop standard test datasets to accurately evaluate the performance of prediction methods. Rost and Sander [6] selected a list of 126 protein domains (the RS126 set) that now constitutes a comparative standard. Cuff and Barton [7] described the development of a non-redundant test set of 396 protein domains (the CB396 set) where no two proteins in the set share more than 25% sequence identity over a length of more than 80 residues.

In [1] this research team presented a promising protein secondary structure prediction method, BLAST-RT-RICO, that employs a modified association rule learning approach, as well      as utilizes multiple sequence alignment information. The BLAST-RT-RICO method achieved a Q3 accuracy of 89.93% on the RS126 set. Although BLAST-RT-RICO showed promise, it left some crucial areas in need of improvements.

The optimal segment length and the optimal threshold value were not determined (An initial segment length of 5 and threshold value of 0.9 were used). Segment length was introduced in [1] as the value of n, of n-residue segments or it can be considered as a symmetric window centered about a central residue, with the window length equal to n. Optimal segment length is the best n value we should choose to achieve the best Q3 score, given current computational resources.

Threshold value was introduced in [1] as threshold probability t (0 < t ? 1). It affects how the generated rules are selected (only rules with confidence value > t are selected for prediction). We felt that these two values would be critical in achieving a better Q3 score. Another issue was the time complexity of the original algorithm, which was impractical for testing longer segment lengths.

In this paper, we present a modified method BLAST-ERT- RICO, which has an improved time complexity, as well as more optimal choices for segment length and threshold value.

At the time of this paper?s submission, preliminary test results showed that with a segment length of 9 amino acid residues, and a threshold value of 0.8, BLAST-ERT-RICO achieved a Q3 score of 92.19% on the standard test dataset RS126, a significant 2.26% improvement over our test results in [1] under identical test conditions. All test programs (rule generation and prediction) were developed by this research team, and written in PERL programming language.

B. Problem Description In general, the protein secondary structure prediction  problem can be characterized in terms of the following components [8]:  ? Input: Amino acid sequence, A = a1, a2, ? aN, and data for comparison, D = d1, d2, ? dN  ai is an element of a set of 20 amino acids, {A,R,N?V} di is an element of a set of secondary structures, {H,E,C}, which represents helix H, sheet E, and coil C.

? Output: Prediction result X = x1, x2, ? xN, where xi is an  element of a set of secondary structures, {H,E,C} ? 3-Class Prediction [9]  This is a characterization of the problem as a multi-class prediction problem with 3 classes {H,E,C} in which one obtains a 3 ? 3 confusion matrix Z = (zij). zij represents the number of times the input is predicted to be in class j while belonging to class i.

Q total = 100 ?i Zii / N ? Q3 Score Accuracy is computed as Q3 = W?? + W?? + Wcc W?? = % of helices correctly predicted (100 ZHH / N) W?? = % of sheets correctly predicted (100 ZEE / N) Wcc = % of coils correctly predicted (100 ZCC / N)  In other words, a protein secondary structure data sequence D is compared to the predicted result sequence X to calculate the Q3 score.

C. Related Work Rost [4] classifies protein secondary structure prediction  methods into three generations. The first generation methods depend on single residue statistics to perform prediction. The second generation methods depend on segment statistics. The third generation methods use evolutionary information to predict secondary structure. For example, PHD [6] and PSIPRED [10] are two of the most accurate secondary structure predictors which use a neural network approach. An important consideration in many of these approaches is the knowledge that random mutations in DNA sequence can lead to different amino acids in the protein sequences. These changes are considered the basis of evolution; mutations resulting in a structural change are not likely to retain protein function. Thus, structure is more conserved than sequence [4]. All naturally evolved protein pairs that have 35 of 100 pairwise identical residues have similar structures [4]. This is the basis of how evolutionary information is used in the form of multiple sequence alignments for predicting protein secondary structure.

For most neural network methods mentioned above, the inputs to the neural networks are not single sequences, but rather different forms of updated profiles generated from multiple sequence alignments.

In [11] Montgomerie et al. reveal that by finding sequence homologues in the PDB and by using a process called 3D-to- 2D mapping, it is possible to increase the accuracy of secondary structure prediction (of soluble proteins) by as much as 10% (from around 75%). In [12] Montgomerie et al. use the known secondary structure of those homologues to help to predict the secondary structure of the query proteins. They also state that for pairwise sequence identities of >35%, the secondary structure mappings are typically more than 90% accurate. Furthermore, they found that nearly 3/4 of newly deposited PDB structures have sequence identities greater than 25% (similar) to a pre-existing structure. Their PROTEUS web server achieves an average Q3 score of 81.3%, using a sequence-unique test set of 1644 proteins. Assessments using non sequence-unique test sets indicate that PROTEUS can achieve a Q3 score approaching 88% [12]. In [3] Lin et al.

adopt a dictionary-based prediction method called SymPred.

They use natural language processing techniques and propose synonymous words to capture local sequence similarities in a group of similar proteins. Their meta-predictor SymPsiPred achieves a Q3 score of 83.9% on their test dataset DsspNr-25 [3]. The SymPred approach is similar to our BLAST-ERT- RICO method in certain ways. SymPred uses PSI-BLAST to generate a number of significant alignments, from which a protein-dependent synonymous dictionary is constructed [3].

BLAST-ERT-RICO also uses PSI-BLAST to generate a number of sequences with significant alignments, from which association rules are generated. SymPred uses pattern of amino acids (a word of length n) to predict a secondary structure.

They have found that the best Q3 accuracies are reported at n=7 for exact matching and n=8 for inexact matching [3]. BLAST- ERT-RICO also uses neighboring amino acid residue segments (an n-residue segment) to predict a secondary structure. The search for optimal segment length is one of the objectives of this research study. The preliminary tests show that n=9 (segment length) gives the best results, which is similar to the n value used by SymPred.

Kabsch and Sander developed a set of simple and physically motivated criteria for secondary structure, programmed as a pattern-recognition process of hydrogen- bonded and geometrical features extracted from x-ray coordinates [13]. This DSSP (Define Secondary Structure of Proteins) algorithm is the standard method for assigning secondary structure to the primary structure (amino acids) of a protein. Depending on the pattern of hydrogen bonds, DSSP recognizes eight types or states of secondary structure. The 3- helix (3/10 helix), alpha helix, and 5 helix (pi helix) are symbolized as G, H and I, respectively. DSSP recognizes two types of hydrogen-bond pairs in beta sheet structures, the parallel and antiparallel bridge. Residue in an isolated beta- bridge is symbolized by B, whereas E represents an extended strand, and participates in a beta ladder. The remaining types are T for hydrogen bonded turn, and S for bend. There is also blank or ?-? meaning ?loop? or ?other.? These eight types are usually grouped into three classes: helix (G, H, and I), strand/sheet (E and B) and loop/coil (all others).

It is expected that threshold values in the middle range between 0.5 and 1.0 would produce the best secondary structure prediction.  At high threshold values, 0.9 or 1.0, fewer matching rules would be found.  Therefore, more decisions would be made based on the previous position secondary structure (See ?BLAST-ERT-RICO Step 4, Prediction?).  At lower threshold values, 0.5 or 0.6, more matching rules at these lower confidence levels would be found resulting in less than optimum predictions.  Consistent with these expectations, our results show that a threshold value of 0.7 or 0.8 produced the highest scores among the different segment lengths.

It is expected that there should be an optimum segment length value as well.  The secondary structure of proteins is a characteristic of segments of amino acid residues, not a characteristic of individual amino acids.  Neighboring residues influence the secondary structure.  It is likely that the optimum predictive segment length would be shorter than the average actual length of a particular secondary structure.  If the predictive segment length is equal to the actual length of a secondary structure, it is expected that the middle residues will be predicted with highest accuracy and the residues at the ends of the structure predicted with lowest accuracy.  At the ends, predictions are made using rules that include positions in neighboring (different) secondary structures.



II. METHODS  A. BLAST-ERT-RICO Approach BLAST-ERT-RICO (Exhaustive Relaxed Threshold Rule  Induction from Coverings) employs a rule-based data mining approach to predict protein secondary structure. It is an improved version of the BLAST-RT-RICO method developed by this research team, presented in [1]. Given an input, protein A (where A is an amino acid sequence, A = a1, a2, ? aN), a protein BLAST search (Web-based NCBI/BLAST/BLASTp suite, with PSI-BLAST algorithm) [14] is performed using A as the query sequence. BLAST returns a list of proteins with significant sequence alignments. Suitable proteins from this list and related data from the PDB database are chosen to form the training dataset for protein A. The ERT-RICO algorithm  generates rules from the training dataset, and the rules are used to predict the secondary structure for protein A. The output is the predicted secondary structure sequence X.

A flowchart outlining the BLAST-ERT-RICO approach is depicted in Fig. 1. In this method, a separate training dataset is constructed for each protein prediction. For example, in the RS126 set (of 126 proteins), 126 different training datasets are created (the flowchart?s workflow is executed 126 times). The individual training dataset construction and corresponding rule generation operations are performed for each protein. It is important that the training and prediction response time be reasonable for each protein prediction request. In our implementation of the algorithm, most protein requests can be completed within minutes, which includes both training time and prediction time. A small number of protein requests take longer time to complete (within hours), which we hope to improve in the near future. Although the overall prediction time is very reasonable, for future improvements it is useful to identify the bottleneck of the algorithm?s performance.

Referring to Fig. 1, the most computationally expensive (in terms of time complexity) steps of the algorithm are ?ERT- RICO rule generation for protein A?, and ?ERT-RICO rule generation (preprocessing).?   Figure 1.   Flowchart of the BLAST-RT-RICO approach for solving the protein  secondary structure prediction problem  B. BLAST-ERT-RICO Step 1, Online BLAST and PDB Data Match As shown in Fig. 1, given as input a protein A, A = a1, a2,  ? aN, a BLAST search is performed using A as the query sequence. For our implementation, a Web crawler program is used for the BLAST queries. The BLAST search returns a list of proteins with significant sequence alignments and     corresponding BLAST scores. Proteins with a score less than or equal to 30 are first removed from the list. The test protein A also is removed if it appears in the list, so that it will be excluded from the training dataset. Some of these proteins may have corresponding secondary structure records in the PDB database [15]. A query is made to check if any protein from the list already has a known secondary structure record in the PDB database. If this is the case, then the proteins with corresponding secondary structure records are retrieved; they form the inputs to the next step, data preparation. In our search for the optimal segment length and threshold, we retrieved all the proteins with known secondary structure records (except protein A and proteins with scores less than or equal to 30).

This results in the long processing time of a small number of protein requests. We believe that once we find the optimal segment length and threshold, we can use fewer proteins, reducing the processing time.

If a protein from the list does not have a known secondary structure record in the PDB database, the prediction for that protein needs to be handled slightly differently; it will require data from offline preprocessing, which is discussed in Section ?BLAST-ERT-RICO, Offline Preprocessing.? For the RS126 set, no protein falls into this category. In other words, offline preprocessing was not necessary for the RS126 set. From our experience, only a small number of proteins need offline preprocessing. As mentioned in [1], for the CB396 set, nine proteins fall into this category. After experimenting with a number of test proteins, we decided to use a BLAST score of 30 as the cutoff in this step of the BLAST-RT-RICO processing; this, in part, was because we found that alignments scores less than 30 did not improve the prediction. However, there is no evidence that 30 is the best choice.

C. BLAST-ERT-RICO Step 2, Data Preparation The proteins with significant sequence alignments and  corresponding secondary structure records are inputs to the data preparation step. For test protein A, there is a set of protein primary structure sequence Bi and a set of corresponding secondary structure sequence Ci where Bi ? {B1, B2, B3, B4, ? By}, Ci ? {C1, C2, C3, C4, ? Cy}, the protein primary structure sequence is iwiiiii bbbbB ,3,2,1, ,...,,=  and the corresponding secondary structure sequence is iwiiiii ccccC ,3,2,1, ,...,,= Sequences B1 to By are not necessarily of the same length, because they represent different proteins; in other words, sequence i has length wi. Here each bi,j is an element of a set of 20 amino acids, {A,R,N?V}. Initially, ci,j is an element of a set of eight-state secondary structures, {H, G, I, E, B, T, S, -}, as represented in the PDB database. It is then converted to an element of a set of four-state secondary structures, {H, E, C, -}.

The protein secondary structure sequences from PDB are formed by elements of eight states of secondary structure, {H, G, I, E, B, T, S, -}. The eight states are converted to four states to facilitate rule generation as follows: (G, H, I) => Helix H; (E, B) => Sheet E; (T, S) => Coil C; (-) => ?-.? Note that rule generation uses a four-state decision attribute. The final Q3 score calculation uses a three-state decision attribute: (G, H, I) => Helix H; (E, B) => Sheet E; (Rest) => Coil C. The basis for the rule-based approach is to first search segments of amino  acid sequences of known protein secondary structures, and then find the rules that relate amino acid residues to secondary structure elements. The generated rules are subsequently used to predict the secondary structure. Klepeis and Floudas [16] showed that the use of overlapping segments of five residues is very effective in predicting the helical segments of proteins.

Thus, in [1] the overlapping 5-residue segments approach was used to prepare the training data records. As this research study discovered, 5 is not the optimal segment length for n-residue segments. We tested different combinations of n=5, 7, and 9, for n-residue segments, and found that n=9 is the optimal length.

As shown in Fig. 2, for each secondary structure element, n ?neighboring? amino acid residues were extracted to form a segment of n amino acid residues, plus one secondary structure element. In Fig. 2, n=9. These segments were used as input to the RT-RICO rule generation algorithm to produce rules. If Bi is the primary structure sequence, Ci is the secondary structure sequence (as shown in Fig. 2), and the length of the sequence(s) is wi, then each n-residue segment is of the form: bi,j-floor(n/2), ? bi,j-1, bi,j, bi,j+1, ? bi,j+floor(n/2), ci,j; and j has a value from ceiling(n/2) to (wi ? floor(n/2)). This data preparation step is performed for all Bi and Ci pairs, where i is from 1 to y. For example, when n=9, each 9-residue segment is of the form bi,j-4, bi,j-3, bi,j-2, bi,j-1, bi,j, bi,j+1, bi,j+2, bi,j+3, bi,j+4, ci,j; and j has a value from 5 to (wi ? 4).

Figure 2.   Protein primary structure n-residue segments and related secondary  structure elements representation (n=9)  The n-residue segments are inputs to the ERT-RICO rule generation algorithm to search for the optimal segment length n. They are represented as (n+1)-tuples, where the first n elements of a (n+1)-tuple are formed by amino acid residues, {A, C, D, E, F, G, H, I, K, L, M, N, P, Q, R, S, T, V, W, Y}, and the last element of a (n+1)-tuple is formed by one of four secondary structure states {H, E, C, -}. The last element is considered the ?decision? (or determination) attribute. In other words, the input to BLAST-ERT-RICO Step 3, rule generation, is in the form of an m?(n+1) matrix, where m is the number of all entities (the number of n-residue plus one secondary structure element segments), and n=|S| (the number of attributes, where n=9 in this case). It should be noted that Fig. 2 only shows the extraction of 9-residue segments from two protein records (Bi and Ci); this extraction process actually is     performed for all protein records (all Bi and Ci pairs, where i is from 1 to y, and sequences B1 to By are not necessarily of the same length). As shown in Fig. 2, for a protein amino acid sequence and corresponding secondary structure sequence of length wi, only the secondary structure elements from the fifth position to position (wi?4) are extracted for the 9-residue segments. The fourth and fourth-to-last positions are extracted as 7-residue segments. The third and third-to-last positions can be extracted as 5-residue segments. In other words, when n=5, 7, 9 ?, elements from the third position to position (wi?2) can be extracted similarly as n-residue segments.

The first and second positions at the beginning of the secondary structure sequence, as well as the last and second-to- last positions at the end of the secondary structure sequence, are not extracted in the same way. They are extracted as 3- residue and 4-residue segments respectively, as shown in Fig.

3.  These 3-residue and 4-residue segments also are used as input to the RT-RICO rule generation algorithm to generate rules. The input to RT-RICO step 3, Rule Generation, is also in the form of an m?(n+1) matrix, where n=3 for 3-residue segments, and n=4 for 4-residue segments. The same rule generation algorithm applies to all of these segments. The rules subsequently generated are used in step 4 to predict the secondary structure elements at the first and second positions, as well as the last and second-to-last positions of unknown secondary structure sequences, respectively.

Figure 3.   Protein primary structure 3-residue / 4-residue segments and related secondary structure elements representation, at the beginning of the sequences  When we tested different n values for n=5, 7, 9 ?, for an amino acid sequence of length wi, (wi-n+1) n-residue segments were extracted, whereas only two 3-residue segments (in the first and last positions), and two 4-residue segments (in the second and second-to-last positions) were extracted. As the extraction was done for a large number of proteins, the rule generation and prediction operations in later steps involved  mostly n-residue segments in terms of the training data size.

For this reason, only n-residue segment numbers were considered in the algorithm time complexity that is discussed in later sections.

D. BLAST-ERT-RICO Step 3, Rule Generation ERT-RICO generates rules based on the segments in the  form of an m?(n+1) matrix. The main ERT-RICO rule generation algorithm is explained in Section ?Exhaustive RT- RICO Rule-Generation Algorithm.? Some examples of the generated rules are shown in Fig. 4 in two separate formats.

The input matrix which generates these rules is a 1708?(9+1) matrix (m=1708, n=9). The first format is intended to be read by the computer programs at the later prediction stage (i.e., the computer rule format). The second format is intended to be read by the user (i.e., the human rule format). The first rule (in human rule format) is interpreted as follows: if the fourth position attribute (or ?3? as interpreted by program) is ?L?, and the ninth position attribute (or ?8? as interpreted by program) is ?S?, then the tenth attribute (decision attribute, or ?9? as interpreted by program) is ?E? with a confidence of 84.21% (16/19) and a support of 0.93676815% (16/1708). 19 rows satisfy (3,L)(8,S). 16 rows satisfy (3,L)(8,S)(9,E). The definitions of confidence and support can be found in [17].

Figure 4.   Sample rules generated by ERT-RICO  The corresponding first rule (in computer rule format) is interpreted as follows: if the first position attribute is ?+? (representing any amino acid element), the second position attribute is ?+?, the third position attribute is ?+?, the fourth position attribute is ?L?, the fifth to eighth position attributes are all ?+?, and the ninth position attribute is ?S?, then the tenth attribute (i.e., the decision attribute) is ?E.? Confidence is 16/19, resulting in 84.21%. Support is 16/1708 (m value), resulting in 0.93676815%. The second format (human rule format) is not needed by computers for prediction purposes. As a result, sometimes we skip generating rules in human rule format, to save system resources.

E. BLAST-ERT-RICO Step 4, Prediction ERT-RICO loads protein primary structures from the test  dataset (a single protein A for this case), and predicts the secondary structure elements. As shown in Fig. 5, for each secondary structure element prediction position (for a corresponding amino acid sequence of length wi, from position  +,+,+,L,+,+,+,+,S,E,84.21,19,16,0.93676815 +,+,+,T,V,+,+,+,+,E,76.47,51,39,2.28337237 Q,A,+,+,+,+,+,+,G,E,100.00,7,7,0.40983607 ?? (3,L)(8,S) -> (9,E), 84.21%, occurrences of ((3,L)(8,S)) = 19, occurrences of ((3,L)(8,S) -> (9,E)) = 16, Support % = 0.93676815 (3,T)(4,V) -> (9,E), 76.47%, occurrences of ((3,T)(4,V)) = 51, occurrences of ((3,T)(4,V) -> (9,E)) = 39, Support % = 2.28337237 (0,Q)(1,A)(8,G) -> (9, E), 100.00%, occurrences of ((0,Q)(1,A)(8,G)) = 7, occurrences of ((0,Q)(1,A)(8,G) -> (9, E)) = 7, Support % = 0.40983607 ??     5 to wi-4), nine ?neighboring? amino acid residues are extracted to form a segment of nine amino acid residues (n=9 for this case). Each of these segments is compared with the generated rules (generated from 9-residue segments). If a segment matches a rule, the support value of the rule is taken into consideration for the prediction of the related secondary structure element.

Here xi is an element of the set {H,E,C,-}. It is then converted to an element of the set {H, E, C}.

Fig. 5.  Protein primary structure n-residue segments and related secondary structure elements prediction (n=9)  The prediction algorithm is also dependent on the selection of the threshold value, which is one of the research objectives of this study. Suppose that a threshold value t = 0.8 (80%) is chosen.  The algorithm first searches for matching rules with 100% confidence value. The secondary structure element with the highest total support value (among 100% confidence value rules) is selected. If no matching rule exists among 100% confidence value rules, the algorithm then searches for other matching rules (with confidence values greater than or equal to 90%). If no matching rule exists among those with confidence value greater than or equal to 90%, the algorithm searches for matching rules with confidence values greater than or equal to 80%. This lowering of threshold or confidence value (at a decreasing rate of 10%) stops at the threshold value t, in this case 80% (threshold = 0.8); it can go lower if the chosen t is of a smaller value. The secondary structure element with the highest total support value among these rules is selected as the predicted secondary structure element for that specific position.

If no matching rule is found for the segment at all, the secondary structure of the previous position is used as the predicted secondary structure.

Fig. 6.  Protein primary structure 3-residue, 4-residue segments, and related  secondary structure elements prediction  To predict the first and second positions at the beginning of a secondary structure sequence, and the last and second-to-last positions at the end of a secondary structure sequence, three or four ?neighboring? amino acid residues are extracted, as shown in Fig. 6. The same prediction algorithm mentioned above is utilized for the secondary structure prediction at these positions, but instead uses rules generated from 3-residue and 4-residue segments as was discussed in Section ?BLAST-ERT-  RICO Step 2, Data Preparation.? Similarly, the fourth and fourth-to-last positions are predicted using rules generated from 7-residue segments. The third and third-to-last positions are predicted using rules generated from 5-residue segments.  The output of the prediction is a sequence of secondary structure elements X = x1, x2, ? xN where each xi is an element of a set of four-state secondary structures, {H,E,C,-}. The Q3 score calculation uses a three-state decision attribute. Hence xi is first converted to an element of a set of three-state secondary structure, {H,E,C}, before the final Q3 score calculation.

F. BLAST-ERT-RICO, Offline Preprocessing As previously mentioned, if no protein with significant  sequence alignments has corresponding known secondary structure sequence from the PDB database (i.e., the answer is ?no? in Fig. 1.), the prediction for test protein A needs to be handled in a slightly different manner. Some proteins and secondary structures need to be selected to generate rules for the prediction of protein A. The operations can be performed offline primarily because it is not necessary to perform rule generation for every protein prediction; instead, rules can be generated once and used for all the proteins that fall into this category. The offline processing technique is presented in detail in [1]. All proteins and corresponding secondary structure sequences from the PDB database are downloaded to form an initial dataset. Proteins from the test datasets (RS126) are first removed from this dataset, so that they will be excluded from the possible training datasets. Protein domains from different protein families are selected to form the training datasets. After the selection of the protein domains, we have a set of protein primary structure sequence Bi and corresponding secondary structure sequence Ci where Bi ? {B1, B2, B3, B4, ? Bz} and Ci ? {C1, C2, C3, C4, ? Cz}. The data preparation step for offline preprocessing is the same as the data preparation step earlier described in Section ?BLAST-ERT-RICO Step 2, Data Preparation.? Bi and Ci are used to generate n-residue segments and association rules. Finally, the primary structure sequence of protein A is loaded, and the secondary structure elements are predicted using the rules generated from offline preprocessing (rules from all data).



III. EXHAUSTIVE RT-RICO RULE GENERATION ALGORITHM  Although this protein secondary structure prediction method consists of the several steps mentioned in Section II, the most computationally intensive part is the rule generation, performed both in the third step and during offline preprocessing. In [1] we used the RT-RICO algorithm to generate rules. RT-RICO has a time complexity of O(m22n), where m is the number of all entities (the number of rows of n- residue segments), and n = |S| (the number of attributes). m2 dominates the time complexity because n is a small value (9 for this case). For RT-RICO algorithm and its definitions, please refer to [18, 19, 20].

When we ran datasets with different n value and t (threshold) value combinations to find the optimal segment length and threshold value, we realized that we needed to improve the time complexity of O(m22n) because the total     running time of the program was unacceptable with an increase in m. We developed the Exhaustive RT-RICO algorithm (ERT-RICO), which is a modified version of the old RT-RICO algorithm, and has an improved time complexity of O(mlog(m)2n). mlog(m) dominates the time complexity. In theory ERT-RICO has a space complexity of O((2n- 1)(20n)(4)); in practice the space required is much smaller than that, due to the fact that different segments generate a large number of duplicate rules. The complete ERT-RICO algorithm, definitions and time/space complexity discussion are presented in [21]. Here is a summary of the rule generation algorithm. The ERT-RICO rule generation algorithm finds the set C of all relaxed coverings of R in S (and the related rules), with threshold probability t (0 < t ? 1), where S is the set of all attributes, and R is the set of all decisions. The input to ERT- RICO is in the form of an m?(n+1) matrix, where m is the number of all entities (the number of n-residue plus one secondary structure element segments), and n = |S| (the number of attributes).

Algorithm 1: ERT-RICO begin for each segment (each row of matrix) for each 2n-1 rules that can be generated from segment generate unique hash key which is a numeric index if hash index does not exist in the hash table then add hash index and hash value (1) to the hash table (hash value = number of occurrences of each rule) else update hash value in the hash table (hash value = hash value + 1) end-if end-for end-for    for each key in the hash table generate rule from key (in amino acid and secondary structure letters)  calculate confidence and support using hash value and related keys if confidence > t then add rule, confidence, and support to output file end-if  end-for end-algorithm.



IV. RESULTS AND FUTURE WORK The RS126 set [6] is a non-redundant test dataset created  with the objective of comparing different protein secondary structure prediction methods. It has been used as a standard dataset to evaluate other prediction methods, and hence was deemed appropriate for evaluating the performance of the ERT-RICO protein secondary prediction method.  To search for the optimal segment length value n, and the optimal threshold value t, we used RS126 as input to the ERT-RICO prediction method with different combinations of n and t values, as shown in Table I. When n=9 and t=0.8, ERT-RICO gives the best prediction results, an average Q3 score of 92.19%.  The highest Q3 scores for a single protein domain in  the RS126 set is 100%, for all combinations of n and t values, which means the prediction is 100% accurate for that particular protein domain. The lowest Q3 scores for a single protein domain vary. One interesting future research topic is to explore how to increase the lowest Q3 prediction score. Another observation is that when n=5, and t=0.9 (the same parameters used in [1] by RT-RICO), the Q3 score is 90.41%, which is slightly higher than the Q3 score generated by RT-RICO, 89.93%, in [1]. The small increase in the score is mainly due to the fact that we improved the mechanism in extracting homologous protein domains from BLAST results for this research study. It may also partly be due to the fact that the data in protein databases increases every day, and data used in [1] was extracted one year ago.

TABLE I.     Q3 SCORES OF ERT-RICO WITH DIFFERENT SEGMENT LENGTH AND THRESHOLD VALUES ON RS126 TEST DATASET  Segment Length  n  Threshold t  Average Q3 for 126 Protein  Domains (%)  Highest Q3 for One Protein  Domain (%)  Lowest Q3 for One Protein  Domain (%) 5 0.5 91.75% 100.00% 42.63% 5 0.6 91.76% 100.00% 42.63% 5 0.7 91.76% 100.00% 42.63% 5 0.8 91.67% 100.00% 42.95% 5 0.9 90.41% 100.00% 42.95% 5 1.0 82.44% 100.00% 42.11% 7 0.5 92.14% 100.00% 48.90% 7 0.6 92.11% 100.00% 48.90% 7 0.7 92.13% 100.00% 48.90% 7 0.8 92.16% 100.00% 48.90% 7 0.9 92.04% 100.00% 48.90% 7 1.0 91.89% 100.00% 48.90% 9 0.5 92.15% 100.00% 41.38% 9 0.6 92.14% 100.00% 41.38% 9 0.7 92.18% 100.00% 41.38% 9 0.8 92.19% 100.00% 41.38% 9 0.9 92.02% 100.00% 41.38% 9 1.0 91.34% 100.00% 37.93%  Table II provides a snapshot of how BLAST results are converted to segments and rules, when n=9 and t=0.5. Rules are generated at threshold value of 0.5, because the same rules can be used for any t value bigger than or equal to 0.5. The maximum number of homologous proteins (unique PDB IDs) returned by a BLAST search for a particular test protein domain is 978, the minimum number is 1, and the average number is 103.14. The 9-residue segments are used to generate rules. The maximum number of 9-residue segments generated for a test protein domain is 208,671, and the minimum number is 31. The maximum number of rules generated for a test protein domain is 7,819,061, and the minimum number is 15,731, at n=9 and t=0.5. None of the test protein domain from the RS126 set uses offline processing. One interesting question is if the prediction result would be improved significantly if we use larger n values, such as 11, 13 or 15, etc. By observing Table I, we feel that the improvement would not be significant, if any. We should note that when n is increased by two, theoretically the program running time and space requirements (to store the rules) would both increase by four times (an exponential growth). We will continue to experiment with different n values, but at this time, the current optimal n and t values provide very good prediction results, and acceptable response time. The test programs (rule-generation and prediction for RS126 set, at n=9) were written in PERL and     executed on a computer with Intel Dual-Core processor, 32 GB of RAM, and Windows 7 OS. The total program running time was approximately 21 days. In this research study, we used all proteins with significant sequence alignments (certain blast scores) to generate rules. This resulted in long rule generation time for a small number of test protein domains, because they have a large number of homologous proteins. This can be improved by developing a different algorithm for selecting proteins for rule generations, which we intend to do for our future research. Thus the total running time can be further reduced.

TABLE II.     Protein Secondary Structure Prediction Using BLAST-ERT- RICO Approach on RS126 Test Datasets (n=9, t=0.5)  Training Dataset (For An Individual Protein) Max. No. of  Proteins Min. No. of  Proteins Ave. No. of  Proteins 978 1 103.14  Max. No. of 9-Residue Segments  Min. No. of 9-Residue Segments  Protein Domains using Offline  Processing 208,617 31 0  Max. No. of Rules (at 50% threshold)  Min. No. of Rules (at 50% threshold)    7,819,061 15,731  Even with the use of standard test datasets, it is still difficult to compare the accuracies of prediction methods. It is always debatable if a particular test dataset will favor a subset of methods, or if one test dataset is better than the other test datasets. Early this year there were around 71,000 proteins (unique PDB IDs) with known secondary structure in the Protein Data Bank (PDB) database. If all these 71,000 proteins can be used to evaluate a particular method, the resulting Q3 score should be very representative. But this is a very demanding test approach, because almost all prediction methods require significant computing resources to perform prediction for even one protein. Most test datasets use only around 100 to 500 protein domains. Regardless, if a method can use all available data for testing, the resulting Q3 score should be very credible. In order to use all available data for testing, program running time is the key.

RS126 set is a very representative test dataset; none of the protein domains require offline processing. In [1] we found that the current offline processing algorithm normally produces lower Q3 scores. Now after acquiring the optimal n and t values, we can use these values to develop a better offline processing algorithm. Other test datasets like the CB396 set, which requires offline processing, can be used to test the future offline processing algorithm.



V. CONCLUSION Based on the BLAST-RT-RICO protein secondary structure  prediction approach [1], presented in this paper was an improved rule-based data mining method, BLAST-ERT-RICO, which utilizes data from proteins with significant sequence alignments, and generates rules that can be used in predicting protein secondary structure. BLAST-ERT-RICO has an improved time complexity of O(mlog(m)2n) over the O(m22n) complexity of BLAST-RT-RICO. This is vital because it  allows us to experiment with different combinations of segment length values n and threshold values t within a reasonable period of time. With current optimal segment length n value of 9 and optimal threshold t value of 0.8, BLAST-ERT- RICO achieved a Q3 score of 92.19% on the standard test dataset RS126, a 2.26% improvement over our test results in [1]. This suggests that this approach may be even more useful as a practical secondary structure prediction method in the future.

