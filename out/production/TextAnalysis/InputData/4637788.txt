Generating Associated Relation between Documents ?

Abstract Traditional text mining techniques have weak ability to provide associated relations with rich semantics that is a foundation of the intelligent browsing of topics, discovery of semantic community and precise personalized recommendation in current Web and Knowledge Grid, etc. In this paper we propose an algorithm to generate and calculate the associated relations and their strengths between documents within a domain. Each document is represented by a bag of words and their weights. We first build domain knowledge background based on the association rules at keyword level, and then we apply those association rules to generate and calculate the documents? semantic relations and their strengths at document level, which effectively shorten the semantic gap from keyword semantics to document semantics.

Experimental results show that our proposed method is feasible and able to discover interesting facts within a domain.

Keywords: semantic strength, association rule, semantic generation model, Semantic Web, Knowledge Grid  1. INTRODUCTION  With the rapid growth of the WWW, the amount of information resources has been rushing, of which most are represented by texts. The massive texts make users get lose in Web when they browse or discover the Web semantic communities in those information. One path to resolve this issue is building the Semantic Link Networks (SLN) among the massive texts which is the foundation of the current Web and the Knowledge Grid [1] [2]. For the building of SLN, the generation and the calculation of the semantic relations and their strengths are needed.

Generally, it?s difficult to generate and calculate the semantic relation between two texts by the traditional text mining techniques which cannot give semantic links between documents that has higher-level semantics than separate keywords. In this paper, we focus on the  generation and the calculation of the associated relations and their strengths.

Traditional text mining techniques, like text categorization and clustering [3] [4], can efficiently classify large amount of texts and cluster texts into corresponding group. Both of them only take similar topics into account, but don?t consider the associated topics with rich semantics which is a foundation of the intelligent browsing of topic, discovery of semantic community and precise personalized recommendation in current Web and the Knowledge Grid, etc.

Traditional association rule mining techniques have weak ability to provide associated relations and their strengths between documents with rich semantics which can find the interesting association rules extracted from documents at keyword level. Therefore, the generation and calculation of the associated relations and their strengths at document level are especially useful for helping discovery of semantic community and precise personalizing recommendation, etc[5].

The rest of the paper is organized as follows. Section 2 introduces the related work. Section 3 discusses the generation and the calculation of the associated relations and their strengths. Section 4 is the experiment and discussion. Conclusion is given in section 5.

2. RELATED WORK  The simplest semantic relation, like cosine and Jaccard [6] [7], has been widely used in text mining to measure the similarity between texts. However, there is still a necessity for shortening the semantics from keyword level to document level. In the process of association analysis, measures for assessing rule?s interestingness have been studied extensively. It?s obvious that an interesting rule have semantic meanings from its antecedent to its descendant such as ?if k1 then k2?. Therefore, if we apply these semantic rules to the documents which can help us in a way to interpret the meaning between documents, then it could effectively shorten the semantic gap from keyword semantics to document semantics.

DOI 10.1109/HPCC.2008.94    DOI 10.1109/HPCC.2008.94    DOI 10.1109/HPCC.2008.94     Association rule mining is proposed to find interesting facts among items in a transaction database. Given a set of items I and a large database of transactions D, where each transaction is a set of items T ? I with a unique identifier tid, an association rule is an implication of the form X =>Y , where X, Y ? I (called item sets or patterns) and X ? Y = ? ; The supports of such rule is that s% of transactions in the database contain X ? Y; the confidence c is that c% of transactions in the database contains X also contains Y at the meantime. Usually a rule can be considered interesting if it satisfies the minimum support threshold and confidence threshold. The work of evaluating an interestingness measures e.g. lift has been studied in [8] [9].

Mining association rules between words in text has been studied in [10].These efforts have shown that text databases cannot be efficiently analyzed by standard association mining algorithms. This is because on one hand, the number of distinct words in a text database is usually quite large; on the other hand, the document frequency of each word is usually very low. The work presented in [9] [11] aims to mine word patterns on text and only provide semantic information on keyword level, is fundamentally different from our task of generating associated relations among documents.

3. GENERATING ASSOCIATED RELATION BETWEEN DOCUMENTS Generating semantics for documents is challeging,  since there is no definition on how to evalute the semantics between two documents. In this section, we show our methods on generation of semantics between documents. Our idea is inspired from the fact that keywords would have some implicit ralations if they appear in one document. Although it is difficult to obtain their clear meaning, we can still extract their shallow semantics and lift it to documents level for some certain use e.g. helping web browsing. Our method includes two main steps:  Firstly, generating the domain knowledge background based on the association rules at keyword?s semantic level.

Secondly, designing an algorithm to generate the associated strength between documents based on the domain knowledge background.

In this section, the main discussions focus on the building of the domain knowledge background, and then we apply this background to generate the associated relations between documents.

3.1 The Building of Domain Knowledge Background  Definition 1 (Text Representation) Each text is represented by a bag of keywords and their  weights:  T(D)={(k1:W1(D)), (k2: W2 (D)),?., (ki: Wi (D))} where ki is the ith keyword in a domain; Wi(D) is defined as the keyword?s frequency in text D.

The ith association rule at keyword level, denoted as SR(i), is represented by  SR(i)= {antecedent, descendant, wi} Here wi represents the ith association rule?s strength.

Support and confidence can be considered as the rule?s semantic meaning, where support represents its generality and the confidence represents the correlation between its antecedents and descendants. Here we define an association rule?s antecedent and descendant contains only one element, i.e. one keyword. This is because rules with fewer antecedents are generally perceived as being easier to understand and comprehend [8]. Association rules can be either given beforehand or directly mined in the document database. In this paper we obtain rules in the latter way. Similar to association rule mining, we consider each document and keyword as a transaction and item respectively, then, mine association rules with support and confidence no less than corresponding thresholds.

Definition 2 (Domain Knowledge Background) The domain knowledge background, denote as KB, is a  set of association rules at keyword level which belongs to a domain, it can be represented by  KB= {SR(1), SR(2)?. SR(n)} Definition 3 (Associated Strength between Documents) Associated strength between documents (denoted as  AS), is a weight reflecting the degree of the associated relation from one document to another.

3.2 Calculate the Associated Strength between Documents  The calculation of the associated strength between documents is as follows.

1) Select an appropriate interestingness measurement to measure the associated strength between documents to build the domain knowledge background;  2) Design an algorithm to apply KB on the calculation of the associated strength between documents.

In order to calculate the associated strength between two documents, we consider the following situation. For an association rule R, if a document A contains R?s antecedent and a document B contains R?s descendant, therefore A would have R?s all semantic relations point to B. The associated relations between A and B should contain all the semantic relation of rules which comp- rises the antecedents contained by A and the descen-dants contained by B. For a certain associated relation between A and B,  we should take into account all the rules? of which antecedents appear in A and descendants appear in B (we call that rules are in A-to-B). Moreover, we need to calculate the strength of semantic relation between A and B, which can shorten the semantic gap from keyword?s level to document?s level. We give our algorithm on the calculation of the strength, which is described as follows.

Algorithm: Associated relation calculation  Input: documental database TD Output: Associated relations among every two  documents 1. a) Given a documental database TD, the generation  of the association rules with support is no less than 0.5% and the confidence is no less than 50%.

b) Take the confidence as a SR?s semantic meaning (associated relation). Put all SRs in KB.

2. for each two documents D1 and D2 in TD calculateAS(D1,D2,KB)  end for Step a) and b) are the process of the building of the  domain knowledge background. We generate the association rules with support no less than 0.5%.

Similarly, we maintain rules with confidence no less than 50% for the reason that rules with confidence lower than 50% appear to be negative correlated according to some interestingness measurements [11]. The function calculatesAS is given as follows.

Function: calculateAS(D1,D2,KB)  Input: two documents D1, D2 and their domain knowledge background KB  Output: the associated strength from D1 to D2 Initiate semantic degree d to 0 for each keyword k1 in D1: do for each keyword k2 in D2 :do if k2 not in D1:  d? = (k1=>k2)?s confidence    //the rule is in KB else:  d? = recalculate (k1=>k2)?s confidence d += d? * func(wk1(D1),wk2(D2)) end for end for  In the above algorithm, min (wk1 (D1), wk2 (D2)) is the minimal weight of k1?s and k2?s weight. Note that we don?t simply sum up all rules? confidence, of which are in D1-to-D2. In addition, we consider another situation, which a rule?s descendant also appears in D1.

A rule?s descendant occurs in D2 means that it may likely appear in D1 as well (confidence no less than 50%). This is not our expectation since an association rule?s antecedent and descendant could not have intersection and we are applying keywords? associations to documents. Therefore we recalculate the rule?s confidence in that situation, where the rule?s confidence is based on the document database without D1.   For example, a document contains two keywords k1 and k2, k1 appears in 10 documents and k1 with k2 appear in 6 documents. The rule confidence of k1=>k2 is 6/10 and its confidence?s recalculation is 5/9.

func(wk1(D1),wk2(D2)) is a funtion of wk1(D1) and wk2(D2).

In this paper, we choose ),min( ?? for considering the rules? associative strength in these two documents.

4. EXPERIMENT AND DISCUSSION  4.1 Generation of the Associated Relations and their Strengths  In this section, we present experimental results on Web pages in a domain to show the effectiveness of the generation of the associated relations and the calculation of their strengths. To our best knowledge, this is the fisrt work on lifting keywords relation to document level. We download 385 Web pages about the domain ?environment? from the Website of Yahoo. Domain keywords extracted form those Web pages by the algorithm in [13].

Figure 1 shows the maximal associated strengths between every two documents. Documents and semantic links are represented by nodes and edges respectively.

Figure 2 and Figure 3 show the associated relations between the 385 Web pages with the threshold of strength 0.15 and 0.7 respectively. Figure 4 shows the relations between the number of edges and the associated strengths.

Figure 1. The associated relations between the 385 Web  pages with the maximal associated strength between every two documents generated by our proposed  algorithms  4.2 Experimental Results Proving the Feasibility of the Proposed Algorithm  Here we mainly discuss and analyze the results shown in Figure 1. Intuitively, the total documents are parti- tioned into several communities in Figure 1, which can be treated as a navigation map between those Web pages.

Figure5 shows one of the communities in Figure1, which      Figure 2. The associated relations between the 385 Web  pages with the threshold 0.15    Figure 3. The associated relations between the 385 Web  pages with the threshold 0.7   Figure 4.  The relations between the number of edges and the associated strengths    shows that the central node is the one with the largest in- degrees which is talks about ?oil spill in South Korea?. In Figure5 we find that nodes directly point to the central node is discussion the associated topics e.g. ?Korea's Oil Spill Still Spreading? and ?Tanker owners say crew innocent over SKorea oil spill?, etc.

Besides, we can find some interesting facts under the proposed algorithm. In Figure 6, documents B shares only one same keyword with document A, but they has strongest associated relation compare to document C, which have three keywords occurred in A. Another     Figure 5. One of the communities in Figure1    Table 1. Keywords belonging to document A to F  Document Keywords included in document  A climate-change, warming, goal, Kyoto, Nobel-peace-prize, Watson, emission, finance-minister, climate- panel, Bali  B Bali, greenhouse-gas-emission, ban United-Nations, UN, Asia, Indonesia climate-change-conference, New- York  East-Timor  C climate-change, warming, Bali Norway challenge, finance-minister, Kyoto Kyoto-protocol, atmosphere  D climate-change, United-States, climate warming, technology, economy, Japan greenhouse-gas- emission, investment Kyoto-protocol  E climate-change, United-States, France economy, Japan, World-Bank, Britain, home, greenhouse-gas- emission power  F climate-change, United-States, France prime-minister-Vasuo-Fukuda, home, economy, Japan, Kyoto, World-Bank greenhouse-gas-emission     example is also found by the proposed algorithm. As in Figure 7, the two documents E and F, although contain more same keywords than each of them with document D, both have a strong associated relation to document D instead of pointing to the other. Table 1 shows the keywords belonging to document A to F.

Figure 6. Documents B shares only one same keyword  with document A, has strongest semantic relation compare to document C, which have three keywords  occurred in A.

Figure 7. Documents E and F, although contain more  same keywords than each of them with document D, both have a strong relation to document D instead of pointing  to the other.

From the above discussion, we know that the  associated strength from a document to another is not directly associative to the same keywords shared.

Therefore, from the calculation of AS, the rule?s associated strength is important in calculation. The associated strength between every two documents is highly relied on the quantity and strength of the association rules between documents at keyword level. So the documents with common keywords may not have the strong correlation while curious knowledge is more likely to be retained in the semantic generation. These phenomena would not be discover by traditional techniques due to the similarity measurements only consider the mutual same keywords but the associated relations between those keywords.

We normalize strength using tanh(x) and choose a threshold to see the whole associative relation in the textual database. Here we simply define normalized strength no less than 0.5 means a strong associated relation. In Figure 6 we can see that there are some documents that have strong associative relations, which reflect semantic distance, to other documents. The green part, a subset of community shown in Figure 5, in which nodes have a lot of in-degrees and out-degrees, shows a strong agglomerate relation in this domain. Besides, nodes, red, with no in-degrees or out-degree are obviously having weak correlations to others.

We also examine a flow?s property. Here we consider a flow as a chain of several steps from one node to another.

In Figure 8, document A and B talk about the politician in America take themselves into protecting environment, document B and C introduce some stories of environmentalist Gore and document C and D talk about public appeal nations to protect the climate change. We can see a pulsive relation when we browse document A to C.

Figure 8. a flow of association direction reflects the  pulsive relation among documents  4.3 Analysis of the Building of Associated Relations  In this section, we show the performance of the proposed algorithm. We implement our algorithms in JDK1.5. The experiments were performed on Intel Pentium 4 3.00GHz of CPU, 512 MB of RAM. Runtime is the execution time between the quantified documents? input and complete generation of the whole associated strengths.

In the first step, i.e. building the knowledge back- ground, it needs only two scans of database. So the rule?s generation depends on the number of documents because the keywords in a domain are quite limited. This step takes O(n2) time where n is the number of documents. In the second step, it?s obvious that the time complexity of the algorithm is O(n2). Figure 9 shows that time consumption is according with our analysis. As illustrated in Figure 9, the variation of the run-time is similar to a linear curve rather than an exponential curve. Thus the proposed algorithm has a low computation complexity and is suitable for Web and e-Science environments with large volumes of Webpages or topics.

Figure 9. The runtime of the generation of associated  relations     5. CONCLUSION  In this paper, we introduce an algorithm to generate the associated relations with rich semantic at the document level among a set of documents. Our contribution is that we divide the calculation of the associated strength into two sub-problems, which can be solved dependently. Our proposed algorithm not only takes keywords? attendance in documents into account, but also takes keyword?s relation in a domain background. Besides, this framework is easy for extending, by selecting appropriate semantic of rule?s measurement, for discovering interesting relations among texts. and, the semantic strength between texts can be further analyze with link analyze methods [12].

Reference [1]. H. Zhuge, R. Jia, Semantic Link Network Builder  and Intelligent Browser, Concurrency and Computation: Practice and Experience, 16 (14) (2004) 1453 -1476.

[2]. H. Zhuge, X.F. Luo. Automatic generation of document semantics for the e-science Knowledge Grid. Journal of Systems and Software, 79(7), 2006, pp. 969-983.

[3]. K.W.Yang, S.Y. Huh. Automatic expert identification using a text categorization technique in knowledge management systems. Expert Systems with Applications, 34(2), 2008, pp.1445-1455.

[4]. S. Tan. Large margin DragPushing strategy for centroid text categorization. Expert Systems with Applications, 33(1), 2007, pp. 215-220.

[5]. M.E.J. Newman and M.Girvan. Finding and evaluating community structure in networks.

Phys.Rev.E 69:026113  [6]. A. Klose, A. N?rnberger, R. Kruse, G. Hartmann, M.

Richards. Interactive text retrieval based on document similarities. Physics and Chemistry of the Earth, Part A: Solid Earth and Geodesy, 25(8), 2000, pp. 649-654.

[7]. A. Sharma, A. K. et al. Intrusion detection using text processing techniques with a kernel based similarity measure. Computers & Security, 26(7), 2007, pp.

488-495.

[8]. L. Q. Geng,  H. J. Hamilton. Interestingness Measures for Data Mining: A Survey. ACM Computing Surveys, 38(3), 2006  [9]. R. Feldman and H. Hirsh, ?Mining Associations in Text in the Presence of Background Knowledge,? Knowledge Discovery and Data Mining, pp. 343- 346, 1996.

[10]. R. Agrawal, T. Imielinski, et al. Mining association rules between sets of items in large databases. In Proc. of SIGMOD, pp. 207?216, 1993.

[11]. J.D. Holt and S.M. Chung, ?Multipass Algorithms for Mining Association Rules in Text Databases,? Knowledge Information System, vol. 3, no. 2, pp.

168-183, 2001.

[12]. L. Getoor, C. P. Diehl. Link mining: a survey.

SIGKDD Explor., Vol. 7, No. 2., pp. 3-12. 2005  [13]. X.F. Luo, N. Fang, et al. Experimental Study on the Extraction and Distribution of Textual Domain Keywords. Concurrency and Computation: Practice and Experience. Published online in Wiley InterScience (www.interscience. wiley.com). DOI: 10.1002/cpe.1306.

