Data Mining for Privacy Preserving Association  Rules Based on Improved MASK Algorithm

Abstract?With the arrival of the big data era, information privacy and security issues become even more crucial. The Mining Associations with Secrecy Konstraints (MASK) algorithm and its improved versions were proposed as data mining approaches for privacy preserving association rules.

The MASK algorithm only adopts a data perturbation strategy, which leads to a low privacy-preserving degree.

Moreover, it is difficult to apply the MASK algorithm into practices because of its long execution time. This paper proposes a new algorithm based on data perturbation and query restriction (DPQR) to improve the privacy-preserving degree by multi-parameters perturbation. In order to improve the time-efficiency, the calculation to obtain an inverse matrix is simplified by dividing the matrix into blocks; meanwhile, a further optimization is provided to reduce the number of scanning database by set theory. Both theoretical analyses and experiment results prove that the proposed DPQR algorithm has better performance.

Keywords?Data mining, association rules, multi-parameters perturbation, privacy preservation.



I.   INTRODUCTION  The amount of data in our world has been exploding.

Obtaining valuable information from mass data is a precondition for decision making, which drew more attention of scholars and engineers. Data mining is a powerful data analysis tool, by which rules, patterns and knowledge from large datasets can be extracted. However, people's privacy cannot be effectively protected during the data mining process [1]. For instance, through data mining, the association rules between various diseases could be acquired from patient records (Adult women with diabetes may have cardio-cerebrovascular diseases at the same time). But it inevitably causes the exposure of case data, thus resulting in the leakage of patient privacy. Therefore, how to protect information privacy and security in big data analysis has become a major challenge. In order to deal with the relationship between data privacy preservation and data analysis, privacy-preserving data mining technology emerged and has made some great progress.

Association rules mining has been playing an important role in the field of data mining. It was first proposed by Agrawal et al. [2] in 1993. Since correlation or related links among items can be found by association rules mining, it has  been widely applied in decision support by governments, enterprises, and individuals [3].

When it comes to the data mining algorithms for privacy preserving association rules, the low execution efficiency is still a common problem. This paper presents a new algorithm, which improves the time efficiency from two aspects and has a better degree of privacy protection.

This paper is organized as follows: the original MASK algorithm and its improved versions are introduced in Section 2. In Section 3, the proposed DPQR (data perturbation and query restriction) algorithm is presented. Theoretical analyses and experiment results are provided in Section 4. Conclusion and future work are given in Section 5.



II.   RELATED WORK  A. Research Status As an important research branch of data mining,  Association rules mining has made significant progress in privacy protection area [4]. MASK (Mining Associations with Secrecy Konstraints) was first put forward by Rizvi et al. [5] in 2002. Using the methods of randomized disturbance and reconstruction of distribution, privacy-preserving data mining for association rules was achieved in MASK algorithm. But the low time-efficiency of reconstructing original support limited its practical applications. In order to improve the time-efficiency, EMASK (Efficient Mask) was proposed by Agrawal et al. [6] in 2004. But the EMASK did not break the exponential complexity of reconstructing original support. A new optimization called MMASK (Modified MASK), was given by Andruszkiewicz [7] in 2007, which decreased time complexity than EMASK. Nevertheless, the above algorithms were only based on the data perturbation approach, which led to low privacy-preserving degree. Moreover, the time complexity still had room for improvement [8].

B. The MASK Algorithm By using the randomization approach, the original data are  distorted in MASK algorithm. With the help of support reconstruction method, the frequent itemsets can be acquired from distorted data. Suppose that database tuple is composed by 0 and 1 (1 shows the existence of attribute, attribute is non-existent when the value is 0), the probability that each data item kept original value is p , or reversed in probability1 p? .

All database tuples are distorted in the same way to form a new        database and data mining is carried out in the distorted database.

Data set can be seen as a Boolean matrix. The real dataset matrix is expressed as T , and D is the disturbed dataset matrix by using parameter p . The number of ?1? and ?0? included in the thi  column of T  is defined as 1  Tc , 0 Tc  respectively. While 1 Dc  and 0  Dc  have the similar definition.

Following gives the distortion process:  1 0 1(1 ) T T Dc p c p c? + ? ? =  0 1 0(1 )  T T Dc p c p c? + ? ? =  The following equations can be obtained:  1T DC M C?=   (1)  Where,  p p  M p p  ? =  ?   D D  D  c C  c =  1   T T  T  c C  c =  Then formula (1) is used to estimate the real support of 1-itemset from distorted database.

As each item is disturbed in the same manner, it is easy to extend the formula to calculate the real support of n-itemset.

1T DC M C?=  Where,  0,0 0,1 0,2 1  1,0 1,1 1,2 1  2 1,0 2 1,1 2 1,2 1  n  n  n n n n  m m m  m m m M  m m m  ?  ?  ? ? ? ?  =  2 1    n D  D D  D  c  C c c  ?  =  2 1    n T  T T  T  c  C c c  ?  =  The number of tuples in T  is expressed as Tkc , where T has binary form of k  for the given itemset. For example, for a 2-itemset, 1  Tc  means the number of ?01?, 2 Tc  means the  number of ?10?, and so on. In the distorted matrix D , the definition of Dkc  is similar to  T kc  . And ,i jm  in matrix M  is defined as the probability that a tuple of form Tjc  in T changes to a tuple of form Dic  in D . In view of 2-itemset, M  is fourth-order matrix, 1,3m  is the probability that the ?11? tuple changes to a ?01? tuple. It is equal to (1 )p p? ? .



III. THE NEW DPQR ALGORITHM  A. Data Perturbation and Query Restriction Data perturbation and query restriction are two basic  strategies in privacy-preserving data mining. With the help of data perturbation strategy, raw data are firstly perturbed by  data transformation, data discretization and adding noise in data, thus sensitive information is protected; then desired models, knowledge and rules are searched out from those perturbed data [9]. Both MASK algorithm and other optimized algorithms employ only data perturbation strategy. However, perturbed data are still related to raw data. Data hiding, data partitioning and data sampling are applied in query restriction strategy so as to avoid raw data from being exposed. After that, desired mining results could be acquired by probability statistical method or distributed computing method.

Nevertheless, the deficiency is that all data provided to data miner are also original raw data. In addition, above two strategies will confront a bad situation that privacy-preserving degree becomes low if only one strategy is used [10].

Consequently, this paper gives a new algorithm that integrated those two strategies to improve privacy-preserving degree.

Supposing there're three parameters 1p , 2p and 3p , and  1 2 3 1p p p+ + = . The probability that data item kept invariant is 1p , while data item reversed in probability 2p , and it comes to 0 in probability 3p . The data perturbation strategy is realized by using parameters 1p and 2p . When 3p is adopted, the data item is hidden and algorithm achieves the query restriction strategy.

1  Reconstructing 1-itemset support  Tc , 0  Tc  is the number of ?1? and ?0? in the thi  column of T  respectively. While 1  Dc   and 0 Dc   is the number of ?1?  and ?0? in the thi  column of distorted database D respectively. The formula to estimate 1-itemset support is defined as follows:  T DM C C=  Where, 1 22 2 3 1 3  p p M  p p p p =  + +   T T  T  c C  c =  1   D D  D  c C  c =  Tc can be obtained as follows:    1 2 1 01 1 2  ( )D D DT c p c cc p p  ? + =  ? (2)  2  Reconstructing n-itemset support As each item is disturbed in the same way, it is easy to  extend the formula to estimate the n-itemset support. The ,i jm is interpreted as the probability that n-itemset j  in T transforms to n-itemset i  in D .

,i j x  x I  m F ?  = ?   (3)  Where,  1 3   2 3   0, 0 0, 1 1, 0 1, 1  x x  x x x  x x  x x  p p i j p i j  F p p i j p i j  + = = = =  = + = =  = =     2n  T DM C C=   (4)       Where,  2 1    n D  D D  D  c  C c c  ?  =  2 1    n T  T T  T  c  C c c  ?  =  [ ]n ijM m= , is a matrix of order 2  n . When matrix is  invertible, 1  [ ]n ijM b ? = , 1  2n T DC M C?= ,  2 1 c nT ?  is the support of  n-itemset and can be computed with below formula:  0 1 0,02 1 0,2 1 0,2 2 2 1...n n n n  T D D Dc b c b c b c ? ? ? ?  = + + +   (5)  B. Optimization of Matrix Inversion For the 1-itemset, equations to obtain the real support are  as follows:  1 1 1 2 0  0 2 3 1 1 3 0( ) ( )  D T T  D T T  c p c p c  c p p c p p c  = +  = + + + , 2  T DM C C= ,  1 2  2 3 1 3  p p M  p p p p =  + + , 1   T T  T  c C  c = , 1   D D  D  c C  c =  For the 2-itemset, 00 TC 0  TC , 01 TC 1  TC , 10 TC 2  TC ,  TC 3  TC represents the count of ?00?, ?01?, ?10?, ?11? in real dataset matrixT . 00  DC , 01 DC , 10  DC , 11 DC  represents the count of  ?00?, ?01?, ?10?, ?11? in disturbed dataset matrix D . The equations to obtain the real support are as follows [11]:  T DM C C= ,  Where,      T  T T  T  T  c c  C c c  = ,      D  D D  D  D  c c  C c c  =  2 2 1 1 2 1 2 2  1 2 3 1 1 3 2 2 3 2 1 3  1 2 3 2 2 3 1 1 3 2 1 3 2 2  2 3 2 3 1 3 2 3 1 3 1 3  ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( )  ( ) ( )( ) ( )( ) ( )  p p p p p p p p p p p p p p p p p p  M p p p p p p p p p p p p  p p p p p p p p p p p p  + + + + =  + + + + + + + + + +   The followings are calculation process using matrix block  method: 1 2 2 2  2 3 2 1 3 2( ) ( )  p M p M M  p p M p p M =  + + ,  In the same manner, 1 4 2 48 2 3 4 1 3 4( ) ( )  p M p M M  p p M p p M =  + +   And by this analogy, 1 /2 2 /2 2 3 /2 1 3 /2( ) ( )  n n n  n n  p M p M M  p p M p p M =  + +   where, 2kn = , k is natural number Then, nM will be inversed  1 1 1 1 /2 2 /2 /2 1 /2 2 /21  2 3 /2 1 3 /2 /2 2 3 /2 1 3 /2( ) ( ) ( ) ( ) n n n n n  n n n n n n  pM pM M pE pE M  p p M p p M M p p E p p E  ? ? ? ? = =  + + + +    1 12 2 2 2  / 2 / 2 / 2 / 21 1 2 1 2 1 2 1 2/ 2  1 11 1 1 1/ 2  / 2 / 2 / 2 / 2 1 2 1 2 1 2 1 2  1 1  1 1  n n n n n  n n n n n  p p p pE E M M p p p p p p p pM p p p pM E E M M  p p p p p p p p  ? ? ?  ? ? ?  ? ? ? ? ? ? ? ?  = = ? ?  ? ? ? ?  (6)   It can be found that the 1nM  ?  meets the recursive relations.

We only need to calculate 12M  ? , the 1nM ? can be acquired by  above formula.

And  2 2  1 2 1 21 21  2 3 1 3 1 1  1 2 1 2    p p p p p pp p  M p p p p p p  p p p p  ? ?  ? ? ? ?  = = + + ?  ? ?    After 1nM ?  is obtained, real itemset support can be  calculated according to formula (1), thereby restoring the frequent itemsets.

C.  Decrease Counting Overhead Based on Set Theory When time complexity of probability matrix inversion  decreases to a certain extent, execution time of algorithm mainly subjects to the process, in which each combination in distorted database is counted, to acquire DC . In MASK, the counts of each combination are obtained by scanning database directly. There is no doubt that this is huge time consumption.

The counting overhead was reduced based on set theory in DPQR [6]. Let the size of the database for Dbsize . The database contains two items A and B , the support of the items are denoted as ( )I A , ( )I B . If ( )I A  and ( )I B  are known, then ( )I A  and ( )I B  can be obtained using the following formulas:  ( ) ( )I A Dbsize I A= ? , ( ) ( )I B Dbsize I B= ? In view of 2-itemset, if ( )I A , ( )I B  and ( )I AB  are  known for us, the number of the other combinations can be acquired with the same rule:  ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( )  I A B I B I A B I A B I A I A B I A B Dbsize I A I B I A B  ? = ? ? ? = ? ? ? = ? ? + ?    ( )I A B? is the number of ?01?, ( )I A B? is the number of ?10?, ( )I A B? is the number of ?00?.

The rule can be expanded as follows: Suppose that an itemset is consisted of two parts  1 2 ... mA A A  and 1 2... nB B B , then  1 2 1 2 n 1 2 1 2( ... ... ) (( ... ) ... )m m nI A A A B B B I A A A B B B= ? ? ?   1 2 1 2 1 2 m( ... ) ( ... ( ... ))n nI B B B I B B B A A A= ? ? ? ?          ( ) { } { }  1 2   1 2 1 2 1 ... 1...

( ... ) 1 ( ... ... ... ) i  i  im  n x x x n i x x m  I B B B I A A A B B B = ?  = + ?  (7)  Using the formula (7), the times of scanning database can be reduced effectively. The only thing that should be done is to query the amount of itemset in which value of each element is ?1?, while the counts of other combinations generated from an n-itemset can be calculated from the counts of above itemset and formula (7). This can significantly reduce the system overhead for counting all combinations generated from n-itemset in distorted database. Hence, execution time of algorithm is improved effectively. In order to provide the desired intermediate results for computing, a hash table is created to store counts of the itemsets in which value of each element is ?1?, such as ?111?1?.

D.  The Complete Algorithm Through the matrix block method, DPQR found out  recursive relations between adjacent inverse matrix, thereby decreasing time complexity of calculating 1nM  ? . Counting overhead was reduced by set theory. DPQR only need to count the set in which value of each element is ?1?, then store counts into a hash table. The results in the hash table were used to calculate the counts of other combinations through features of the Boolean datasets.

The pseudo-code of the algorithm is as follows: Input: the distorted database D , the parameters 1p , 2p  and 3p , the minimum support min_ sup .

Output: the frequent itemsets after reconstruction  1 _ _ ( );C find candidate itemset D=  1Re ( , min_ sup);con C // estimate the real support of the 1-itemset  1 1{ | .sup min_ sup};L c C c= ? ?  1( 2; ; )kfor k L k?= ? ? + + {  1_ ( );k kC apriori gen L ?= // generate candidate itemset  Re ( ,min_ sup);kcon C // reconstruct real support of the itemset  ( .sup min_ sup)if c ? {  ;kc L? . ( . );hashtab add c count // store the intermediate result into hash table  } ;k kreturn L L= ?  }   Re ( , min_ sup)kprocedure con C {  ( 1)if k =  2 21  1 11 2  11 ;  p p M  p pp p ? ? ?=  ??   else  1 1  1 1  1 1 2 21 2 2  1 12 1 11 2 2 2  (1 )1 ; ( 1)  k k  k  k k  p M p M M  p M p Mp p ? ?  ? ?  ? ? ?  ? ?  ? ? =  ??   i kfor each c C? {  _ _ ( );transDB count Get count candidate=  1_ ( , );kCtransDB Get CtransDB candidate L ?= //obtain the required count of each combination  2 1   .sup [0][ ]* ; k  ki r j  c M j CtransDB ?  ?  =  =  // calculate the real support of itemset } }

IV.  ALGORITHM PERFORMANCE ANALYSIS  A. Time Complexity Metrics  In the MASK, M should be acquired firstly, then use the  following formula to compute 1M ? , 1 *1M M M  ? = . *M is  adjoint matrix of M , M  is determinant of M . The time  complexity obtaining 1M ?  is 3(2 ) (8 )k kO O= . But in this paper 1M ?  is calculated by the recursive relations and we only need to compute the 12M  ? . So the time complexity getting 1M ?  is (2 )kO .

Furthermore, suppose that the number of records in the database is N . In the MASK, combinations generated from n-itemset should be counted by scanning the distorted database directly. The number of all possible combinations is  n2 . So the running time complexity getting DC  in formula (1) is (2 * )nO N . But in this paper the running time complexity is (3 * )nO n , because we only need to query the amount of itemset in which value of each element is ?1?, other combinations can be calculated based on set theory. The time complexity of (3 * )nO n   is far less than (2 * )nO N  when the value of N  is large and 10n ?  . So the new algorithm demonstrates excellent time performance in the counting process when dealing with large database.

B. Privacy-Preserving Degree Metrics The total reconstruction probability is computed as [12]: 1 0(1 )RP aRP a RP= + ?   (8)  Where, 2 2  1 1  2 1 2 2 1  (1 ) (1 ) 1 ( )  p s p s RP  p s p s p p p s ?  = + ? + ? + ?         2 2 2 1  2 1 2 2 1  (1 ) (1 ) (1 ) (1 ) 1 ( ) p s p sRP  p s p s p p p s ? ? ?  = + ? + ? + ?    Additionally, a  represents weight of numbers of ?1?in Boolean database. s denotes support of each item in database .

The measurement formula for the degree of privacy can be defined as follows:  (1 )*100P RP= ?   (9)  C. Experiments and Results Analysis In this section, the MASK and DPQR algorithm were  evaluated in our experiments. The test data were produced by the IBM Almaden generator. Its parameters were T12I5D100KN0.02K (T: Average length of data items in dataset, I: Average length of frequent items, D: Number of records, N: Number of items). All algorithms were coded in C++ and run on a computer with Pentium Dual-Core CPU, 2G memory and Windows XP SP3.

The privacy-preserving degree in the DPQR was demonstrated in Table I and the minimum support degree is 0.3%.

TABLE I.  PRIVACY-PRESERVING DEGREE IN THE DPQR   Privacy-preserving  Degree (%)  0.1 0.5 0.4 92.3  0.2 0.1 0.7 91.8  0.3 0.6 0.1 91.7  0.4 0.2 0.4 90.5  0.4 0.1 0.5 90.3  Fig. 1 gives the running time of MASK and DPQR when minimum support degree is 10% and  1 2 30.4, 0.2, 0.4p p p p= = = =  Fig. 1. Running time of the algorithms   In research of Rizvi et al. [5], privacy-preserving degree in MASK is lower than 88%. Table II illustrates that the privacy-preserving degree is higher than 90% when the minimum support degree is 0.3% and 1 2 3, ,p p p are different random values in DPQR. Execution time in DPQR is improved significantly than MASK as shown in Fig. 1.

Experimental analysis verifies that DPQR has better performances compared to MASK.



V.   CONCLUSION  Data privacy cannot be effectively protected in the MASK algorithm, because the algorithm only uses the data perturbation strategy. In view of this drawback, the proposed DPQR algorithm is based on data perturbation and query restriction. Both data perturbation and data hiding are achieved through multi-parameters perturbation. The original data are processed in a different way by various parameters so as to improve the privacy-preserving degree. Furthermore, the proposed algorithm reduces the time complexity getting 1M ? by the matrix block method and adjacency matrix recursive relations. Additionally, the proposed approach cuts down the number of scanning database with the application of the set theory, thus the extra counting overhead is eliminated. The experiment results show that the execution efficiency of DPQR is significantly improved over the MASK algorithm.

The proposed DPQR is more suitable for Boolean data, and it cannot deal with numerical data or other types of data. This is a major limitation of the proposed approach and is also the target of our future research work.

ACKNOWLEDGEMENTS  The research work presented in this paper is partially supported by the Scientific Research Projects of STCSM (Grant No. 13JG0500100), the NSFC (Grant No. 61073090, 61034004 and 61173015), and the Fundamental Research Funds for the Central Universities.

REFERENCE [1] S. Geng, Y. Li, and L. Zhen, An approach to association rules mining  using inclusion degree of soft sets, Tien Tzu Hsueh Pao/Acta Electronica Sinica, vol. 41, pp. 804-809, Apr. 2013.

[2] R. Agrawal, T. Imielinski, and A. Swami, Mining association rules Management of Data, Washington D.C., 1993, pp. 207?216.

[3] V. Nebot and R. Berlanga, Mining association rules from semantic web Applications of Applied Intelligence Systems, Cordoba, 2010, pp.

504-513.

[4] T. Wang and L. Liu, Output Privacy in Data Mining, ACM Transactions on Database Systems, vol. 36, pp. 1-34, Mar. 2011.

[5] S. J. Rizvi and J. R. Haritsa, Maintaining data privacy in association Kong, 2002, pp. 682-693.

[6] S. Agrawal, V. Krishnan, and J. R. Haritsa, On addressing efficiency Database Systems for Advanced Applications, Jeju Island, 2004, pp.

113-114.

[7] P. Andruszkiewicz, Optimization for MASK scheme in privacy on Rough Sets and Intelligent Systems Paradigms, Warsaw, 2007, pp.

465-474.

[8] G. Liu and R. Geng, An efficient algorithm for mining association rules Engineering and Technology, Chengdu, 2010, pp. 4349-4351.

[9] W. Li and J. Liu, Privacy Preserving Association Rules Mining Based on Internet Computing for Science and Engineering, Harbin, 2010, pp.

24-29.

[10] Y. Liu, B. Yang and D. Cao, State-of-the-art in distributed privacy preserving data mining, Application Research of Computers, vol. 28, pp. 545-549, Oct. 2011.

[11] J. Liu, T. Li and J. Zhang, An improved multi-parameters perturbation privacy preserving association rules mining algorithm. Applied Mechanics and Materials, vol. 130-134, pp. 2629-2632, 2012.

[12] R. Wang and J. Liu, Research of Privacy Preserving Association Rules Mining Algorithm. Computer Engineer and Applications, vol. 45, pp.

126-130, Sept. 2009.

