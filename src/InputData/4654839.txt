- 1187 -

Abstract?An algorithm capable of finding important time related association rules and its application to classification systems have been described in this paper. We firstly describe a method of class association rule mining using Genetic Network Programming (GNP) with time series processing mechanism in order to find time related sequence rules. Secondly, the classification system is applied to estimate to which class the current traffic data belong based on extracted association rules. Using this kinds of classification mechanism, the traffic prediction could be done since the rules extracted are based on time sequences. And, we also present experimental results using the traffic prediction problem.



I. INTRODUCTION  Today, there is an increasing demand for traffic prediction systems with the rise of traffic volume. This need requires accurate prediction of traffic situations, especially, traffic flows. The traffic prediction aims at an accurate estimate of the traffic flow as an important item in recent traffic control systems.

In this paper, a data mining method, i.e., class association  rule mining method is proposed and applied to the prediction of the traffic flow. Data mining has become an important field since huge amounts of data have been collected in various applications. Data mining aims at extracting implicit, previously unknown information from data sets, which could be useful for many applications. Association rule mining is one of most important task of it.

Now, the main objective of association rule mining is to  discover association relations or correlations among attributes encoded within a database [1]. An association rule has the form of (X ? Y ), where X represents antecedent and Y represents consequent, which could be interpreted as the set of attributes indicating X is likely to satisfy Y .

Although we have already proposed Genetic Network  Programming(GNP) based data mining [2], it is a transaction related method, which means that every tuple in the database is not related to time series, where, GNP is a newly developed evolutionary method whose gene is composed of directed graphs [3], [4]. The above traditional rules without time series can tell what events happen in one transaction, but, it is insufficient to tell at what time the event will happen or how long the event will last. On the other hand, the rules  on time series can help us to predict the events in the time domain more accurately.

In this paper, a method of time-related association rule  mining using Genetic Network Programming (GNP) has been proposed and extended in terms of realizing the traffic prediction system using class association rules.

The proposed rule based class association rule mining  contains two stages: training and testing. While the training stage generates important rules for classification by using the training data with class information, the testing stage applies the obtained rules to the classification of the testing data.

In order to obtain class association rules, in our method,  the general time related association rule mining has been applied to classification problems, where the consequent part of the general association rules indicates the classification results. Since the proposed time related general association rule mining aims at finding many rules in the database, it could give us a complete view of the underlying relationships in problem domains. Therefore, the complete set of rules for classification obtained by the general time related association rule mining enables us to predict the class more accurately.

The points of the time related association rule mining are  the following: ? The database is time-related considering the real-time factor into consideration. Then, the same attribute at different time points has different meanings.

? Searching the data for calculating the confidence, sup- port and chi-squared value becomes two dimensional with consideration of time delays,  while, the points regarding class association rule mining are as follows:  ? Sufficient number of class association rules for each class are obtained by decreasing importance criteria self-adaptively.

? Two kinds of timing mechanisms for classification are introduced in order to systematically and efficiently classify the data.

This paper is organized as follows: In Section 2, the basic structure of Genetic Network Programming(GNP) is reviewd. In Section 3, the algorithm of the time related class association rule mining and classification using GNP  SICE Annual Conference 2008 August 20-22, 2008, The University Electro-Communications, Japan  PR0001/08/0000-1187 ?400 ? 2008 SICE    - 1188 -  is described. Section 4 shows the simulation environments, conditions and several experimental results. Section 5 is devoted to conclusions.



II. GENETIC NETWORK PROGRAMMING(GNP)  In this section, Genetic Network Programming(GNP) is briefly reviewed [3],[4]. GNP is a sort of evolutionary optimization techniques, which uses directed graph structures as solutions. The graph structure of GNP includes three kinds of nodes: start node, judgment nodes and processing nodes. Judgment nodes are the set of J1,J2,..., which work as if-then type logical decision making functions. On the other hand, processing nodes are the set of P1,P2,..., which work as a certain kind of action/processsing functions. The concrete roles of these nodes are predefined and stored in the library. Once GNP is started up, firstly the execution starts from a start node; consequently the next node to execute is determined according to the connections and if-then type judgment result of the current node.



III. TIME RELATED CLASS ASSOCIATION RULE MINING USING GNP  A. Structure of General Association Rules  Let Ai(?)(t = p) be an attribute in a database at time p and its value is 1 or 0. Ai(?) represents Ai(Low)/Ai(Middle)/Ai(High). In the case of class asso- ciation rules mining, the structure of rules is like follows: (Aj(?)(t = p) = 1) ? ? ? ? ? (Ak(?)(t = q) = 1) ? (Am(?)(t = r) = 1), where (Am(?)(t = r) = 1) indicates the class.

B. Structure of Database  The attributes of the database are usually not simply binary values, but could be continuous real numbers in many appli- cation fields. Traditionally, binary values ?0? or ?1? represents the meaning such as ?happen? or ?not happen?, ?contain? or ?not contain?, but in the real world, the attributes are not always so simple, they could be continuous, especially in time-related systems.

When dealing with real-time problems, the conventional  database with binary values is not enough to satisfy the time related requirements. Traffic prediction is one of these cases, since the traffic situation in each section will change continuously as time goes on. In order to better predict the traffic flow of the roads in the future, the database should represent at what time the events in the road section happen or how long the events last.

Thus, the database we handle is time series-based, i.e.,  the tuples in the time series database represent the time point instead of the transaction. The database we used is like Table 1. The Time in Table 1 represents the time unit, it can be one second, one minute, one hour and so on, and its concrete meaning is related to the concrete problem to solve.

According to the range of the continuous values of the  attribute Ai, we divide the continuous values to three cat- egories, i.e., Low, Middle and High. Supposing that the Middle threshold is 4 and High threshold is 7, the attribute  TABLE I DATABASE BEFORE DISCRETIZATION  Time A1 A2 0001 10 4 0002 5 4  TABLE II DATABASE AFTER DISCRETIZATION  Time A1 A2 Low Middle High Low Middle High  0001 0 0 1 1 0 0 0002 0 1 0 0 1 0  Middle threshold=4; High threshold=7;  Ai = 5 is ranked as Ai ? Middle, i.e., (Ai ? Low, Ai ? Middle, Ai ? High)=(0, 1, 0). So, Table 1 can be converted to Table 2.

C. GNP for Class Association Rules Mining with Time Series  GNP individual examines the attribute values of database tuples using judgment nodes and calculates the measurements of association rules using processing nodes. Attributes and their values correspond to judgment nodes and their judg- ments in GNP, respectively. Therefore, the connections of nodes are represented as association rules.

Liu et al have proposed a method to integrate the clas-  sification rule mining and association rule mining [5]. The algorithm is called CBA (Classification Based on Associ- ations). The two techniques are integrated by focusing on mining association rules whose consequent is restricted to a certain classification class attribute. The rules are called class association rules (CARs).

Building an accurate and efficient classifier model be-  comes essential subjects in the proposed Class Association Rule Mining method. The implicit interesting patterns in the training data are fundamental to build a classifier model, which could predict the unknown classification attributes.

The proposed method extract important CARs using GNP  supposing the connections of nodes are represented as as- sociation rules. The basic structure of it is shown in Fig.1.

The jump mechanism is also used in order to determine the antecedent part, but we don?t have to decide the consequent part of candidates rules any longer. All the items of the consequent part is placed in Consequent Table(CT) shown in Fig.1. In addition, a sufficient number of rules for each item in the CT are obtained by the proposed method.

In the proposed method, the examination have to consider  the attribute dimension and also the time dimension, thus the method is two dimensional. That is, not only the attributes but also the time delays should be considered: For example, as described in Fig.2: the judgment is not merely executed row by row, but the procedure is like the following: firstly judge the tuple at time 0000, and according to GNP individual structure of Fig.2, first A1(Mid) is judged and if the value of A1(Mid) at time 0000 is ?1?, then move to the next judgement node named A2(High). Then, due to the time delay T =2 from A1(Mid) to A2(High), we check    - 1189 -  ca ndida te  cur r ent  ca ndida te  N  A1=1  P 1  A2= 1 A3 =1  P 2  a b c  P 2 P 2  T= 0  T= u T= v T= x  : Yes-side connection : No-side connection  : Jumping T: Time Dela y  : P rosessing Node : Judgmen t Node : position moved  P 1 N  T= 0  J umping  A1= 1  A2= 1  A 3= 1  .........

Consequen t  Ta b le  T= v A1=1 A2=1  a T= u  b  Fig. 1. The basic structure of CARs mining  the value of A2(High) at time 0000+2=0002. If the value of A2(High) at time 0002 is ?1?, continue the judgment likewise, if not, execute another turn of the judgment which begins from time 0001, 0002, 0003, . . . , until the end of the tuple.

The example that the current consequent is A4(Mid) is shown in Fig.2.

N  A1(Mid)  =1  P 1  A2(High)  = 1  a b c  T= 0  T= 2 T= 2 T= 2  A3(High)  = 1  A5(High)  = 1  d  T= 4  P 1J umping  Time  Unit  A1 A2 A3 A4  Low Middlle High Low Middle High Low Middle High Low Middle High  0000 0 1 0 0 0 1 1 0 0 0 1 0  0001 0 1 0 1 0 0 0 1 0 1 0 0  0002 0 0 1 0 0 1 1 0 0 0 1 0  0003 0 1 0 0 0 1 0 1 0 1 0 0  0004 1 0 0 1 0 0 0 0 1 0 0 1  0005 0 1 0 1 0 0 0 0 1 0 1 0  0006 0 0 1 0 1 0 0 0 1 1 0 0  0007 1 0 0 0 1 0 0 1 0 1 0 0  0008 0 1 0 1 0 0 1 0 0 0 1 0  0009 1 0 0 0 1 0 0 1 0 1 0 0  Fig. 2. Two dimensional searching method  D. Extraction of Rules  The total number of moving to Yes-side from the pro- cessing node at each judgment node is calculated for every processing node, which is a starting point for calculating as- sociation rules. In Fig.2, N is the number of the total search, and a, b, c and d are the numbers of the search moving to the Yes-side at each judgment node. The measurements are calculated by these numbers.

For example, as represented in Fig.2, the processing  node P1 jumps from A1(Mid) to A5(High), then, the antecedent part of the candidate rules becomes ?A1(Mid)? A2(High)?A3(High)? and the current item in the Conse- quent Table(CT) is, for example, ?A4(Mid)?. As a result,  chi? squared value can be calculated considering both the antecedent and consequent part of the candidate rules. We can repeat this like a chain operation in each generation by jumping the processing nodes in the class association rule mining with time series using GNP. Thus, we can obtain the values for calculating the importance of the rules. Now, we define the important association rules as the ones which satisfy the following:  ?2 ? ?2min, (1)  support ? supmin, (2)  confidence ? confmin, (3)  where, ?2min, supmin and confmin are the thresholds of the minimum chi-squared, support and confidence values given by supervisors. In this definition, if the rule ?X ? Y ? is important, then, X ? ?Y,?X ? Y,?X ? ?Y, Y ? X,Y ? ?X,?Y ? X and ?Y ? ?X? are also important rules. The extracted important association rules are stored in a pool all together through generations in order to find new important rules.

If the number of the extracted rules reach a certain fixed  number Nf for the current class of the consequent attribute, then the stage for the current class of the consequent attribute ends and another stage for the next item in the CT will begin, likewise.

Since the number of the rules, Nf , is a sufficiently large  value for all classes of the consequent attributes, it might be possible that there do not exist enough number of rules for some classes of the consequents. Therefore, we made the criteria for important rules self-adaptive so that they are adjusted gradually according to the number of new rules extracted during recent generations in the proposed method.

If the number of new rules generated during recent large enough generations equals to 0, which means no more im- portant rules can be found for the current item in Consequent Table(CT), the criteria for important rules will be decreased until Nf of rules are obtained using the following equation.

?2min ? ?2min ? s1, (4)  supmin ? supmin ? s2, (5)  confmin ? confmin ? s3, (6)  where, s1, s2 and s3, which belong to [0, 1], represent the step size of the decrease of the minimum chi-squared, support and confidence value, respectively. ?2min, supmin and confmin are initialized for every item of the Consequent Table(CT).

The whole procedure is divided into different stages,  which are in charge of extracting association rules for each consequent item. The proposed GNP based mining method to extract association rules for each item in Consequent Table(CT) is shown in Fig.3, where GNP based data mining consists of a sequence of generations.

- 1190 -  Consequent  Table  1 A1(Low)  2 A1(Mid)  3 A1(High)  4 A2(Low)  5 A2(Mid)  6 A2(High)  ... ...

... ....

M-2 AN(Low)  M-1 AN(Mid)  M AN(High)  Total Rule Pool rules are arranged  according to the  consequent items  Get Attr ibute Sub SetStart Sub A ttribu te Set: size s  Genera te GNP Ind ividua ls from Set  Da ta Mining Rule poo l about Consequent 2  Exist Nf  r ules?

S tage 2 :  E nd Next Consequent Y  N  Decr ese Cr iter ia  Get Attr ibute Sub SetStart Sub A ttribu te Set: size s  Genera te GNP Ind ividua ls from Set  Da ta Mining Rule poo l about Consequent M  Exist Nf  r ules?

S tage M :  E nd Next Consequent Y  N  Decr ese Cr iter ia  Get Attr ibute Sub SetStart Sub A ttribu te Set: size s  Genera te GNP Ind ividua ls from Set  Da ta Mining Rule poo l about Consequent 1  Exist Nf  r ules?

S tage 1 :  E nd Next Consequent Y  N  Decr ese Cr iter ia  M : Total number of consequent attribute items  N : Total number of Attributes N= M/3  Fig. 3. Procedure for extracting class association rules  E. Fitness Function and Genetic Operator  Multiple rules mean the rules which contain many different attributes in addition to the conventional interest. Therefore, fitness function of GNP is defined as:  F = ? r?R  {?2(r) + 10(nante(r) ? 1) + ?new(r) + ?mult(r)}.

The symbols are as follows: R : set of suffixes of important association rules which  satisfy the important requirements in GNP individuals.

?2(r) : chi-squared value of rule r.

nante(r) : the number of attributes in the antecedent of  rule r.

?new(r) : constant defined as  ?new(r) = ?  ?new, if rule r is new 0, otherwise  ?mult(r): constant defined as  ?mult(r) =  ?? ?  ?mult, if rule r has many different attributes  0, otherwise  ?2(r), nante(r), ?new(r) and ?mult(r) are concerned with the importance, complexity, novelty and diversity of rule r, respectively. At each generation, GNP individuals are replaced with new ones by the selection policy and other genetic operations. We use four kinds of genetic operators:  ? Crossover: The uniform crossover is used. Judgment nodes are selected as crossover nodes with the crossover rate. Two parents exchange the gene of the correspond- ing nodes.

? Mutation-1: The connection of the judgment nodes is changed randomly by mutation rate-1.

? Mutation-2: The function of the judgment nodes is changed randomly by mutation rate-2.

? Mutation-3: The time delay between the judgment nodes is changed by mutation rate-3. The mutation range depends on the concrete problems to solve.



IV. CLASSIFICATION  Firstly classify the extracted association rules in the pool to consequent attribute classes. Every consequent attribute has three classes, i.e., the consequent attribute Ai is classified to three attributes Ai(Low), Ai(Mid) and Ai(High).

Then, the association rules in each class are used to test  whether the testing data satisfies the antecedent attributes of the rules based on two different kinds of timing mechanism.

The testing data are called satisfied if they satisfy the antecedent attributes of the rules.

One of the mechanism is just to set the timing of the  last attribute in the antecedent part at the current time point, while another timing mechanism assigns the current time point between the last attribute of the antecedent part and consequent part of association rules. These two mechanisms are described in Fig.4. In N-Step prediction process, only the rules with exactly N delay time units between the last attribute in the antecedent and consequent are applicable in the method-1, while the method-2 sets the current time point more flexibly.

Method 1  The cu r r en t t ime po in t  The cu r r en t t ime po in t  Method 2Antecedent Part  Antecedent Part Consequent Part  Consequent Part  Fig. 4. Two timing methods  The ratio of the sum of the confidences of the satisfied rules to the total number of rules of every class is calculated, and the testing data is classified to the class whose ratio is the highest. The concrete process is like the following: (1). Calculate Ck: Calculate the set Ck of the suffixes of  the rules whose antecedent items satisfy the testing data and whose consequent class is k.

(2). Calculate the Creditk for every class:  Creditk = ?  j?Ck confidencej , (7)  (3). Calculate the Scorek for every class:  Scorek = Creditk Totalk  , (8)  where, Totalk is the total number of rules having class k, that is, the fixed number of Nf for each class of the consequents in this paper.

(4). Compare the Scorek and the class with the highest  value becomes the winner for the testing data.

- 1191 -

V. SIMULATIONS The aim of our data mining is to extract rules on the time-  related association relations among all of the sections on the map, and our method can be applied to the database with a large number of attributes, e.g., 672 sections in our simulations.

The extracted rules will be applied to classification prob-  lem and its efficiency and effectiveness is studied in a simple traffic prediction problem.

A. Traffic Simulator  The main task of our simulator is to generate databases to which we apply our proposed method.

The traffic simulator used in our simulations is a 7 ? 7  road map model, i.e., each section has the same length, all cars have the same timer. Although the cars on the map share the same timer, they do not exactly have the same speed, the cars have different speeds depending on the concrete traffic situations. The generation of cars is based on O/D (Origin / Destination) table which defines how many cars traveling from each starting point to the ending point.

The shape of the total road map is like a grid network for  simplicity. All the cars use the optimal route by Q Value- based Dynamic Programming [6]. Each section between two intersections in the road has two directions, and each direc- tion of the section represents different items or attributes.

h  #N1 #N2 #N3 #N4 #N5 #N6 #N7  #S1 #S2 #S3 #S4 #S5 #S6 #S7  #W2  #W1  #W3  #W4  #W5  #W6  #W7  #E2  #E1  #E3  #E4  #E5  #E6  #E7  :r epr esent ca r #** : r ep r esen t O /D name  : r epr esent section fr om inter section W2N4 to W2N5  : r epr esent section fr om inter section W2N5 to W2N4  : r epr esent inter section W3N3  Road Setting  Maximum  number of  cars  10 cars per  section  Car arrival  distribution  exponential  distribution  Red  traffic light  10 time  units  Green  traffic light 7 time units  Yellow  traffic light 3 time units  Time shift 10 time  units  Fig. 5. Road model used in simulations  TABLE III PARAMETER SETTING FOR EVOLUTION  Items Values Number of judgment nodes 100 Number of processing nodes 10 Number of attributes 672 Number of time units 800 Number of generations per Round 100 Sub attribute set size 100  B. Simulation results  In the first part of the simulations, the fixed number Nf of rules are obtained using the proposed method for each  class of the consequent attributes. Nf is set to 100 in order to get the complete picture of the whole databases as much as possible and each round of the searching has the same number of generations, e.g., 100 [7].

We tested our method on 5 databases generated from our  simulator using the same OD table. But, 5 databases are different due to the randomness of their generation. Q-Value based Dynamic Programming is used as the routing algo- rithm of each car. Class association rules with ?2 test were extracted by GNP. Descretization of continuous attributes is done using the thresholds, e.g., the middle threshold is 4 and high threshold is 7. All the continuous attributes are transformed to a set of attributes, whose attribute is 1 or 0.

In order to test the efficiency of our class association rule  mining with time series, the obtained rules for all consequent attributes are stored in the corresponding rule pools. Fig.6 shows the number of rules obtained in the pool using 5 databases versus round number. These results showed that our proposed method extracts the important time-related association rules from the database efficiently as the round goes on.

And it is found that the number of the extracted rules are  almost the same in different 5 databases.

0 500 1000 1500 2000 2500 3000  Rounds  N u  m b  e r  o f  E x tr  a c te  d R  u le  s  Mining in Database 1 Mining in Database 2  Mining in Database 3 Mining in Database 4  Mining in Database 5  Fig. 6. Number of the rules obtained for 5 databases  An example of the rule extracted is like the following: W4N5, W4N6, Low(t = 0) ? W4N5, W3N5, High(t = 9) ?W3N5, W3N6, High(t = 11) The above rule means that if the section on the map named ?W4N5,W4N6? has low traffic at time 0, and the section named ?W4N5,W3N5? has high traffic at time 9, then, the consequent attribute, i.e., the section named ?W3N5,W3N6? will have high traffic volume at time 11.

Since all the extracted rules satisfy the conditions of im-  portance, all of them have the qualification for the classifier.

Therefore, we do not need to store, retrieve, prune or sort a large number of rules for classification as conventional methods.

In the second part of the simulations, the extracted rules  are used to produce the probability for estimating the class of the testing data, as a result, to which class the time-related data belong is determined. Two different kinds of timing mechanism are used in the simulations.

- 1192 -  Firstly, we used 5 databases which are the same as the rule extraction.

The class association rules are generated based on each  database, then method-1 is applied. The accuracy is defined in the following here, e.g., if the traffic prediction result of the section at time t is ?Low? and the real traffic of this section at time t is exactly ?Low?, then, the accuracy is 100%. The low/middle/high accuracy means the accuracy when the real traffic is low/middle/high, respectively. The overall accuracy is the average of the low/middle/high accuracy. The results of accuracy by the method-1 is shown in Fig.7(a).

1 2 3 4 5  Database  P re  d ic  ti o n A  c c u ra  c y  Overall Accuracy Low Accuracy Middle Accuracy High Accuracy       1 2 3 4 5  Database  P re  d ic  ti o n A  c c u ra  c y  (a) Method-1 (b) Method-2  Fig. 7. Result of Accuracy by Method-1 and Method-2  It is found from Fig.7(a) that the middle accuracy is rather high compared to the low and high accuracy as expected.

Method-2 is also examined in a similar way, and its results  are shown in Fig.7(b). Fig.7(b) shows that almost the same prediction tendency is obtained as Fig.7(a), but the accuracy of the method-2 is a bit higher than the method-1.

Next, in order to test the class association rules for the  different database from the one used for rule extraction, 4- fold validation was carried out for 5 different data, and its average accuracy is shown in Table 6, where D represents database index and M1 and M2 represent the method-1 and method-2, respectively.

TABLE IV RESULT OF CROSS VALIDATION  Overall Low Middle High D M1 M2 M1 M2 M1 M2 M1 M2 1 85.1 85.4 72.4 73.2 88.2 88.4 83.0 83.2 2 85.1 85.5 72.6 73.9 88.5 88.4 82.8 83.4 3 86.1 86.5 74.0 75.3 88.3 89.1 84.2 84.6 4 85.8 86.1 73.4 75.0 88.8 88.9 83.7 84.0 5 86.0 86.3 74.4 74.8 89.1 89.3 83.4 84.1  The comparison between two methods on the overall average accuracy using cross validation is shown in Fig.8.

It is found from Fig.8 that both of the two timing methods  can get a relatively accurate prediction about the traffic of all of the sections on the map, which means that the proposed method is useful in the traffic prediction problem. It is also found that the timing method-2 is slightly more accurate than method-1.

84.5   85.5   86.5   1 2 3 4 5  Database  P re  d ic  ti o  n A  c c u  ra c y  Method-1  Method-2  Fig. 8. Comparison on overall accuracy between two methods  The proposed method cannot extract all the rules meeting the given definition of importance since we use the fixed number of rules for each class of the consequent attributes, but the result shows that the ability to extract important rules is sufficient enough for our purposes.



VI. CONCLUSION  In this paper, a method of class association rule mining using Genetic Network Programming with time series pro- cessing mechanism has been proposed. The proposed method can extract important time-related association rules for each class of the consequent attributes efficiently. These rules are used to decide to which class the time-related data belong using two different kinds of timing mechanism. As a result, it has been cleared that the method-2, which is more flexible than the method-1, is likely to have a bit higher prediction accuracy than the method-1. We are now studying further improvements of our method in terms of more efficient association rules mining and classification.

