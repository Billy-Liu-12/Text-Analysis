Semantically-based Recommendation by using  Semantic Clusters of Users? Viewing History

Abstract? Collaborative filtering-based recommender systems assume that if two users have shown similar interest on the same set of contents, they may show a similar interest-pattern in choosing future contents. However, users who have certain tastes on one specific category of contents may behave differently in choosing contents from other categories. Moreover, the collaborative filtering approaches may not work efficiently with sparse data sets, where there are a small number of contents or a limited number of users in the content categories. In this paper, to deal with these problems, we propose a novel approach of recommending contents across different categories by considering both the semantic information of contents and user interests. The proposed approach uses Linked Data as the source to find the appropriate semantics of the contents extracted from users? viewing history. The semantic concepts retrieved for the contents are then grouped together into semantic clusters based on their similarity and relevance. Our approach recommends potentially interesting contents to general users based on the content-consumption trends monitored from leading user groups who most proactively and frequently consume contents. We demonstrate the effectiveness of our approach by conducting an experiment with the real-world mobile IPTV service data obtained from one of the popular IPTV service providers in South Korea.

Keywords-Recommender Systestem; User Interest Mining; Semantic Cluster; Linked Data

I.  INTRODUCTION As the number and types of Web contents including  documents, multimedia contents, and Web services increase, personalized recommendation plays an important role to meet the users? information needs on the Web. Famous websites such as Amazon and Netflix have successfully improved their sales by using personalized recommendation techniques [1].

Most of these commercial recommender systems are implemented based on Collaborative Filtering (CF), which is the method of considering preferences of multiple users in a collective way. CF assumes that if two users have shown similar interest on the same set of contents, they may show a similar interest-pattern in choosing future contents. CF can  recommend potentially interesting contents for users by mining users? content consuming patterns [2].

Because CF relies only on users? behavior of choosing contents without considering the content information, it has a limitation of recommending contents across different content categories [3]. For instance, two users who like the same type of movie may have different preference in choosing TV-drama contents. In this case, CF may fail to recommend appropriate contents in the TV-drama category to the users.

In addition, CF-based recommendation approaches have the data sparsity problem. In case of having various types of contents, CF-based recommendation approaches are effective only when they recommend contents from popular and well- known content categories rather than from the categories where there are a small number of contents or a limited number of users [4].

To deal with these problems, we have developed a novel approach of recommending contents across different categories by considering both the semantic information of contents and user interests. The proposed approach uses Linked Data1 as the source to find the appropriate semantics of the contents extracted from users? viewing history. Linked Data contains more than 28 billion RDF triples from 203 different datasets that are domain independent [11]. Especially, we use the DBpedia and Freebase datasets as the primary knowledge bases.

In addition, the Linked Movie Database dataset is used for obtaining semantic information about the content categories. In our approach, the concepts that are retrieved from these sources are grouped together into semantic clusters based on their similarity and relevance. In this paper, we define a semantic cluster as a group of semantically relevant terms and the relationships among them that represent the essential semantics of a topic area [9].

Since the target recommendation domain of our research is VOD (Video on Demand) contents, a set of semantic clusters are generated from the keywords that are extracted from users? viewing history. As the first step of recommending contents, we identify a set of leading users who have watched relatively   1 http://www.w3.org/standards/semanticweb/data     a large amount of contents. Then, we analyze the semantic correlation between the leading users and other users (general users) in terms of consuming contents by comparing the semantic clusters that are generated from the contents that they watched. To do this, a set of semantic clusters is generated for each user based on the contents that they consumed for a certain period of time. Two users may have similar interests in choosing contents if they have common semantic clusters. The final step of our approach is to recommend potentially interesting contents to general users based on the recent trend of consuming contents by the leading users that have semantic correlation with the general users.

To demonstrate the effectiveness of the proposed approach, we conducted an experiment with the users? viewing history dataset obtained from one of the popular mobile IPTV service providers in South Korea. The experiment result shows that our approach can recommend potentially interesting contents in the accuracy of around 79%. In addition, we could increase the success rate of recommending contents to most active users by 30% in comparison to the traditional CF-based recommendation approach.

The rest of the paper is organized as follows. The related work is discussed in Section 2. A semantic cluster based recommendation approach is described in Section 3. Then, we analyze the result of the experiment conducted by using the real-world datasets in Section 4. Finally, we conclude this work in Section 5.



II. RELATED WORK In this section, we review the state-of-the-art  recommendation systems that use collaborative filtering as the method to improve the quality of recommendation.

Collaborative filtering is usually divided into two types: memory-based and model-based approaches [3]. The memory- based CF algorithm checks the similarity between users or between items based on a collection of user preferences for the target items. The memory-based approaches rely mostly on the existing rating history rather than using external information about the users or items. Therefore, the recommendation result may be unreliable if the rating records do not exist.  In other words, there are the cold start and data sparsity problems in the memory-based approaches.

Model-based CF recommends items by using a rating model that is built based on training datasets. Usually, the model-based CF shows better performance than the memory- based CF because it uses probabilistic approaches. However, the main drawbacks of this approach are the computational complexity of the model-building process and information loss during dimensionality reduction. Recently, many studies have been conducted to improve the matrix factorization method to predict user rating in a more precise way [12].

SoRec [5] proposes a recommender system that uses matrix factorization with considering social network information. The intuition in this approach is that a user?s social network may affect the user?s behavior of consuming items. In this approach, a high-weight value is assigned to the trustful relations between users in the social network. Although this approach can deal with the data sparsity and cold start problems, it does not  consider domain-specific user preferences that are essential to recommend items effectively across different domains.

Users who have similar preferences in one domain may show different preferences in other domains. Recent studies [6- 8] propose the systems that deal with this problem effectively by using the matrix factorization method. MCoC [6] proposes a multiclass co-clustering method to find meaningful user-item subgroups. Subgroup information is utilized by applying collaborative filtering to cluster users and items in similar context groups. However, this approach requires the external contextual information of like-minded groups.

HeteroMF [7] extends collective matrix factorization to develop a recommender system for heterogeneous contextual domains. They introduce general latent factors and context- dependent latent factors to recommend entities of one type to those of others. However, the context domain of each entity should be known beforehand. To compliment this problem, TopRec [8] proposes a community topic-mining recommender system. They firstly discover active users in topic groups by representing the users as the probability distribution over topics.

Then, it supplies experts? rating information as the prior knowledge of the probabilistic model for topic alignment.

Furthermore, it includes social network information in the topic model to consider the similarity between users. After that, it applies the probabilistic matrix factorization in different domains by considering their domain interests. Selecting the active user of each domain could increase the efficiency of clustering users in a specific domain. However, this study only uses items that are in predefined domains.



III. SEMANTIC CLUSTER BASED RECOMMENDATION In this section, we describe our approach of recommending  contents by comparing users? semantic clusters that represent their interests in contents.

Figure 1. Overall process of the proposed approach  Out of the viewing history, we firstly identify leading users who consumed various contents intensively during a certain period of time. We mainly count the number of different contents that they consumed during the period. Then, for each leading user, we generate a semantic cluster that represents his/her preference in consuming the contents. We access Linked Data to obtain semantic concepts that are related to the contents that the leading users consumed. Once we have all the     semantic clusters generated for the leading users, we group them together based on the similarity between semantic clusters. We call those groups as leading user groups.

For each general user (non-leading user), we also generate a semantic cluster based on the contents that they consumed.

Then, we classify the general users under the leading user groups based on the similarity between the semantic clusters of the leading user groups and the ones of the general users. A general user may be classified under multiple leading user groups.

The next step is to figure out the difference between the contents that are consumed by a leading user group and the contents that are consumed by each of the general users classified under the group. A list of contents that are consumed by the leading user group but have not been consumed by a general user in the group will be recommended to the general user as the potentially interesting contents.

Figure 1 summarizes the process of recommending contents to general users based on the content consumption patterns monitored from leading user groups.

The uniqueness of the proposed recommendation approach is in the utilization of semantic clusters rather than keywords to measure topic similarity among users. In the following subsections, we describe the detail steps to generate and compare semantic clusters as well as to recommend potentially interesting contents to users.

A. Generating semantic clusters for users As the first step to generate semantic clusters for a user, we  retrieve concepts that are related to the keywords found in the contents that are consumed by the user. As we mentioned earlier, we use Linked Data to identify concepts that are related to a keyword. By using a morpheme analyzer2 , we extract nouns and noun phrases from the content descriptions.

We then query with each keyword in the nouns and noun phrases to Linked Data to retrieve the corresponding concepts by using SPARQL (SPARQL Protocol and RDF Query Language)3. We assume that RDF triples which describe the corresponding concept, contain the keyword as one of their property values such as name, title, or label. Because each dataset in Linked Data may use different kinds of predicates to indicate these properties, we handle multiple predicates such as rdf:label and skos:prefLabel used in target datasets. After that, we query again to retrieve all triples that describe each subject and group them together into a concept.

After retrieving all concepts from Linked Data with the keywords found for a content, we construct groups of relevant concepts called semantic clusters to filter out irrelevant concepts. We use the concept analysis model shown in Figure 2. Each concept has a label for presentation and a URI for its reference. Both properties are literal and connected to the concept through the ?hasKeyword? and ?hadURI? properties, respectively.

2 http://developer.yahoo.com/search/content/V1/termExtraction.html 3 http://www.w3.org/TR/rdf-sparql-query/     Figure 2. Concept analysis model  Identity-links such as owl:sameAs and skos:exactMatch are used to consolidate the concepts that have the same meaning.

We then find and merge semantically relevant concepts by using similarity-links such as skos:broader and skos:narrower.

Since those links are used to represent the relative hierarchies of concepts within the same dataset in Linked Data, we need to use similarity-links along with identity-links in a complementary manner to group relevant concepts generated from different datasets. Except for the identity-links and similarity-links which are necessary for analyzing semantic hierarchies among the concepts, others are counted as the number of relational links.

As the next step, we find and merge more concepts that are semantically relevant to make semantic clusters richer. We apply the breadth-first search method starting from a representative concept for each semantic cluster. The number of hops (the number of edges in the concept graph) from the representative concept is inversely proportional to the semantic relevance. Therefore, it is possible to retrieve concepts that are most semantically relevant by using this method. To select the representative concept, we measure the centrality of concepts and choose the concept that has the highest centrality value as the representative concept in each semantic cluster [9]. We define the maximum number of hops as 2 because according to an empirical study, more than 80% of relevant concepts can be found in the range of 2 hops from the representative concepts [10].

B. Measuring the similarity between users By using the semantic clusters generated, we now can  measure the similarity between the sets of contents that are consumed by different users. The similarity measure can be implemented by aggregating the number of overlapped concepts between the sets of contents. When we count the overlapped concepts, each concept?s centrality value (C) is considered since it implies how much of the concepts is important within each semantic cluster. The following defines the function to measure the semantic similarity between semantic clusters:  ? Sim(lc, rc) = ? C(klc-rc)? ???? ? ????????????? ???? ????  where lc is the semantic clusters generated for a set of contents of a leading user set of contents, rc is a semantic cluster for another set of contents of a regular user, and klc-rc is all the concepts that are co-occurred in both sets.

C. Identifying potentially interesting contents for users As the final step, the proposed approach recommends  potentially interesting contents to general users based on the content-consumption trends monitored from leading user groups. As explained earlier, the leading users are the users who have watched relatively a large amount of contents than others for a certain period of time.

Algorithm 1. Semantic cluster based recommendation algorithm 1: for each user ? UserID do 2: ConuserID<-getUserViewingHistory(UserID) 3: if (rank(ConuserID) > threshold) 4:                       UGleading<- UserID 5: otherwise 6:                      UGgeneral<-UserID 7: CUserID<-getSemanticClusters(ConuserID) 8: end for  9: for each user ? UGgeneral do 10:  SimuserID ? getMostSimilarUser(UGleading) 11: end for 12: return recomContent ? sortHighSmilarityMatch(CSimuserID)  As described in Algorithm 1, general users are classified under the leading user groups by comparing their semantic clusters via the similarity measurement explained in the previous phase. For each general user classified under a leading user group, we figure out the contents that are watched by the leading users but not by the general user. We regard these as the potentially interesting contents for the general user. Our approach generates and recommends a list of potentially interesting contents ordered based on the semantic similarity (evaluated by using semantic clusters) between the contents and the viewing history of the user.



IV. EVALUATION In order to prove the effectiveness of the proposed  approach, we performed two different experiments. Firstly, to validate the effectiveness of the semantic cluster based approach, we check how many potentially interesting contents that are recommended to the general users are actually watched by them in the next period of time. Next, we compared the results against the recommendation result of using the CF- based recommendation approach [2].

A. Experimental Setting The experiments were performed with the following  resources and conditions.

a) Dataset: For our evaluation, we used the real-world  viewing history dataset provided by one of the popular mobile IPTV service providers in South Korea. The dataset contains 4,684,689 content viewing logs generated from 93,274 users during May and June in 2013. In average, each user watched around 50 contents in the period.

b) Learning and testing datasets: We used the viewing history of May for identifying leading user groups and classifying general users under them by using the semantic clusters generated for the users. Then, we measured how many  contents are actually watched during the June  period out of the contents that our system recommended to the users.

c) Computing environment: The experiments were conducted on a desktop computer that runs under Windows 7 (64bit) with Intel Core i7-2600 CPU @ 3.40GHz, 8.00GB of RAM.

B. Results and Analysis We measured the coverage of users? potentially interesting  contents that were recommended by using the proposed approach based on the viewing history in May. For each user, out of the contents that were recommended to the user, we counted the number of contents found that are actually watched by the user in the next month (during the June period) and calculated the ratio between the number of found contents and the total number of contents.

Figure 3. The coverage of potentially interesting contents  Figure 3 shows the hit ratios (arranged in ascending order) of the potentially interesting contents for the users.  The hit ratio ranges from 12.5% to 100%. The average hit ratio is 78.77%. Especially, the proposed approach (SCR, Semantic Cluster based Recommendation) found all interested contents for more than half of the users. Although a large portion of the perfect-hit cases is for the users who watched just few number of contents (less than three), the overall result demonstrates that SCR can effectively recommend potentially interesting contents to users.

Figure 4. Comparison of the recommendation accuracy     Figure 4 compares the number of successfully- recommended contents generated by SCR and the CF-based approach (CFR, Collaborative Filtering based Recommendation). We considered the users who watched more than one content out of the recommended contents, and the total number of users considered is 5,830. Among these users, in comparison to CFR, our approach can generate more successful recommendations for 237 users. Especially, for the users who watched more than two contents out of the recommended contents, SCR could generate more successful cases (100 users out of 334 users in the range shaded in Figure 4). We think that the users in the shared region are the users who consume contents actively. SCR also covered more content categories for content recommendation. For 17 users out of the 100 active users, SCR recommended potentially interesting contents from various content categories.

C. Threats to Validity Our experiments have some threats to validity. Firstly, the  dataset that we used for the experiment covers only two month period. However, the dataset contains viewing history from more than 90,000 users in a practical mobile IPTV domain.

Secondly, we only used a limited number of datasets from Linked Data such as DBpedia, Freebase and Linked Movie Database. However, they are the most popular datasets and contain a large volume of data that cover various types of content domains.



V. CONCLUSION In this paper, we proposed a novel approach of  recommending potentially interesting contents to users by using semantic clusters generated from each user?s viewing history. In our approach, content information is enriched with semantic clusters by associating the content with the relevant concepts that are retrieved from Linked Data. The proposed approach finds and recommends potentially interesting contents based on the semantic similarity between the content- consumption trends of leading user groups and general users.

The main contributions of our work are as follows. Firstly, we proposed a framework of utilizing Linked Data to expand keywords extracted from content metadata to semantically enriched information. Secondly, we proposed a way of comparing semantic clusters generated from users? viewing history to identify similar interests of users.

In our future research, we will collect more data about users? viewing history as well as the metadata about more number of contents. Especially, viewing history datasets for a longer period of time is essential to demonstrate the practicality and effectiveness of our approach in terms of recommending more personalized contents. In addition, we will integrate  users? social network data to identify their implicit interests.

We expect that it will be possible to produce more personalized semantic clusters from users? social network data, and to improve the users? satisfaction on the recommended contents that reflect more personalized preferences of the users.

