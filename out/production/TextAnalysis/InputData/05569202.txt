978-1-4244-5934-6/10/$26.00 2010 IEEE                                 1446

AbstractExtracting association rules from data with both  discrete and continuous attributes is an important problem in  KDD. A new model of immune genetic algorithm is formulated  for solving this problem. This algorithm uses three-segment  chromosomes, integrating the discretization, attributes  reduction and mining association rules. And immune  mechanism is introduced into genetic algorithm to avoid  premature phenomenon and improve the efficiency of GA. The  results of experiments prove the correctness and validity of the  algorithm.

Keywords- association rules; genetic algorithm;  discretization; three-segment chromosomes; immune mechanism

I.  INTRODUCTION  Discovering association rules is an important task. The  common methods are Apriori[1], FP-growth[2], genetic  algorithm[3], and et al. These algorithms generally deal with  discrete data. But actually most data sets are composed of  both discrete and continuous attributes. The common  process[4] for mining association rules from continuous data  is discretization of continuous attributes first, and then  extraction of association rules. Throughout the process, the  initial discretization and the follow-up rules extraction are  completely independent. The initial discretization may make  the loss of the original information, and make mistakes for  the rules extraction.

To solve the above problems, a new model of immune  genetic algorithm is put forward. It integrates the  discretization of continuous attributes, reduction of attributes  and the rules extraction. The model uses three-segment  structure of chromosomes. The first segment searches the    best cut-points sets of the continuous attributes; the second  and the third segment mine rules based on the cut points  selected by the first segment. Some attribute is redundant  when the cut-points set of it is empty, and then it can be  removed. According to this model, the best set of cut points,  the set of reduced attributes and the set of association rules  are obtained at the same time. Immune mechanism is  introduced into the genetic algorithm. According to the  principle of the immune balance, the immune genetic  algorithm can restrain and promote the individuals  concentration in the population self-adaptively. And it also  can improve the local and global search ability of the genetic  algorithm to avoid premature in order to keep the population  diversity. Experiments show that this method can not only  effectively extract the association rules but also has obvious  advantages compared with Apriori and SGA.

The structure of this paper is as follows: Section II  reviews the association rules. Section III presents the new  model of immune genetic algorithm. Section IV presents the  details of the algorithm. Section V presents the experiments  and results. Section VI concludes this paper.



II. ASSOCIATION RULES  The basic concepts of mining associations are given as  follows[1].

Let  1 2 m  { , , ..., I }I I I= be a set of items and  1 2  { , , ..., }  n  D t t t= be a set of transactions, where ti is a set of  items such that t Ii ? . An association rule is an implication  of the form X Y? , where ,X Y I?  and X Y? = ?  . The rule  X Y?   holds in the set D with support and confidence,  where support is the percentage of transactions in D that  contain both X and Y, and confidence is the percentage of  transactions in D containing X that also contain Y. An  association rule must satisfy a user-set minimum  support(minsup) and minimum confidence(minconf). The  rule X Y?   is called a strong association rule if  support ? minsup and confidence ? minconf.

Usually association analysis is not given decision    attributes so that we can find association and dependence  between attributes to the best of our abilities. But the aimless  analysis may take much time and space. Decision attributes  determined can reduce the amount of candidate sets and  searching space, and then improve the efficiency of  algorithms to some extent[5].In addition, users are not  interested in all association rules, but they are just concerned  about the associations among condition attributes and  decision attributes. So, in this paper we just mine association  rules with decision attributes, in that, we consider attributes  which users are concerned about as decision attributes and  other attributes as condition attributes.

If mining association rules from continuous attributes  data, the continuous attributes have to be discretized first.

The essence of discretization is to use the selected cut-points  to divide the values of the continuous attributes into  intervals. The methods of dividing determine the quality of  association rules[6]. Optimal discretization has been proved  to be NP problem[7], while the genetic algorithm has good   optimization. In this paper, genetic algorithm is used to  search the cut-points of the continuous attributes.



III. A NOVEL MODEL OF IMMUNE GENETIC ALGORITHM  Genetic algorithm is the optimization technique based on  natural selection and biological genetic mechanisms[8]. It  approaches to the optimal solution of the problem based on  the natural random algorithm. But the traditional genetic  algorithm has some inevitable disadvantages. For example, it  is easy to fall into local optimal solution, resulting in  premature convergence, i.e., premature phenomenon.

Therefore immune mechanism[9] is introduced in to  calculate the individuals concentration in the populations.

According to the new selection strategy presented in this  paper based on the concentration and fitness, the new  algorithm selects individuals that are better than the previous  generation to generate the new generation.

A. Coding Scheme  For example, let data set S=(A,B,D), where A=(a1,a2) is  the continuous attributes set, and the candidate cut-points of  each attribute in A set are respectively (1,2.1,3.5,4),  (0.5,2,5.1); B=(b1,b2) is the discrete attributes set, and the  values of each attribute are respectively (x, y, z), (m, n);    D=(d1, d2) is the decision attributes set, and the values of  each attribute are respectively (0, 1), (0, 1,2).

In this paper, it adopts binary encoding. The individual  code is shown in Figure 1(based on the above example).

The first segment is a cut-points genome, which denotes  all cut-points of the continuous attributes. The total length of  this segment is the sum of the cut-points. Each one gene bit  is corresponding to each cut-point. 1 indicates to select that  cut-point, and the corresponding gene bit of the second  segment is also in working state. 0 indicates not to select the  cut-point, and the corresponding gene bit of the second  segment is in dormant state. In Figure 1, the string 0110010  indicates that the attributes a1, a2 respectively select the cut-  points (2.1, 3.5), (2).

The second segment is encoded for the hybrid data. The  genome is divided into two parts. The first part is encoded  for continuous attributes based on the selection of the cut-  points of the first segment. The code length is the same as  the first segment. In this segment, each gene bit indicates that  the values of a continuous attribute are divided into two  intervals based on the corresponding cut-point of the first  segment. 1 indicates that value>corresponding cut-point, and  0 indicates that value <=corresponding cut-point. For  example, in Figure 1, 1100110 shows attribute a1 is divided  into the interval a1>2.1, a1<=3.5 based on cut-points  (2.1,3.5); a2 is divided into the interval a2>2 based on cut-  point(2).

The second part is encoded for the discrete attributes.

This part is relatively simple. Each one gene bit is  corresponding to each discrete attribute value. The total  length equals to the sum of the number of values. In the  string, 1 indicates to select the corresponding value, and 0  indicates not to select the corresponding value. If some  attribute may select any value, the corresponding locations in    the binary string are 1. For example, in Figure 1, 10011  indicates that b1=x, b2 can take any one of m, n.

The third segment is encoded for the decision attributes.

Each gene bit is corresponding to each decision attribute  value. Its length equals to the sum of the number of decision  attribute value. In the string, 1 indicates taking the  corresponding value, 0 indicated not taking the  corresponding value. If the number of 1 in the genome of  some decision attribute is greater than or equal to 2, it  indicates that this rule select two or more values of this  decision attribute, and then it is considered the genome of  this attribute is invalid. We do not select any values of this  attribute. In Figure 1, 01110 indicates that d1=1, and the  genome of d2 has two 1, so we do not select any value of d2,  that is, this rule is only related to d1.

According to the above, in Figure 1, the chromosome is  decoded into the rule: 12.1 3.5 a< <= and 2 2 a > and 1b x=  and 2b m=  or 2b n=  1 1d? = . If each genome in the third  segment is invalid or all 0, but the other gene bits in that  individual may be good. Therefore, we assign such  individual a smaller fitness rather than simply abandon it in  order to inherit the better genes.

B. Fitness Function  Fitness function is the only interface of the application  and genetic algorithm, and its structure impacts the  efficiency of the algorithm directly. The support is a measure  of the importance of the association rules. In this paper, we  use the support to filter rules. Therefore, the fitness function  can be defined as follows:  ( )  ( )  ( )  f X  p support(X) minsupsupport(X)  q support(X) minsupminsup  =  >  =  <  ???     (1)  Where Support(X) is the support of a new rule generated  through genetic operation, minsup is the minimum support    threshold given by users. When an individual X meets the  requirements of users, its fitness function value should be  greater than 1. Otherwise, the fitness function value is less  than 1, and this individual will be eliminated in the next  generation of genetic algorithm.

C. Selection Strategy Based on Self-Adaptive Suppression  and Promotion  The diversity of individuals is maintained by the  individuals self-regulation[10]. The individuals self-  regulation depends on the individuals fitness and  concentration. When the concentration is constant, the  greater the fitness is, the greater the probability of the  individual being selected is. When the individuals fitness is  constant, the greater the concentration is, the smaller the  probability of the individual being selected is. This algorithm  Figure 1.  Three-segment chromosomes  first segment second segment third segment  0110010 01110   1100110 10011   eliminates the individuals whose fitness value is less than 1  first, and then puts the individuals whose fitness value is  greater than 1 in a new population. In this population, the  selection probability Pi of the individual Xi is defined as:   ( )P  ( )  M  j  dif Xii  f Xj  e ?

=  ?

= ?

?

(2)  Where ? is an adjustment factor which is a constant  greater than zero, generally ?=1. di is the concentration of  the individual, which  is defined as:  ,the number of individuals whose  N-1  i jsdi    ??

=            (3)  Where N is the population size, ? is the similarity  constant which takes 0.75 1?? ? in this paper. ,i js is the  similarity which is the degree of similarity of any two  individuals Xi and Xj, i.e.,  ,  the number of gene bits in which X  is same as  the length of the chromosome  i j  i Xj  s =      (4)  ,i js ? [0,1], if ,i js equals to 1, it is indicated that the two  individuals are the same. While ,i js is equal to 0, it is  indicated the two individuals are entirely different.

There are several advantages of this selection strategy.

The larger the individuals fitness is, the greater the  probability of the individual being selected is. It ensures that  the individuals which have greater fitness can be retained.

The fitness plays a promotive role and accelerates the  convergence of the algorithm. The higher individuals  concentration is, the smaller the probability of the individual  being selected is. It ensures the diversity of the population.

The concentration plays a suppressive role and avoid  premature.

D. Genetic Operation  Genetic algorithm uses genetic operators to carry out  selection, crossover and mutation on the population, and thus  get a new generation of population. The genetic operators  determine the search capability and convergence of the  algorithm.

1) Select operation: In this algorithm, it restores each  chromosome in the population to the corresponding rule,  and then calculates selection probability Pi for each rule  based on formula (2).

2) Crossover operation: It uses grouping multi-point  crossover. In detail, it classifies the domain of each attribute  into a group and classifies the cut-points of each continuous  attribute into one group. And then the crossover is carried  out between the corresponding groups of two individuals by  a certain rate.

3) Mutation operation: Any bit in the chromosomes is    mutated by a certain rate, that is, changing 0 to 1, 1 to  0.

E. Attributes Reduction  After the algorithm is finished, if the genome of some  attribute x in the chromosome are all 0, it indicates that the  cut-points set of it is empty, that is, attribute x is redundant  for the decision-making and can be removed. Reduction set  of attributes can be obtained by scanning chromosomes in  the optimal population.

F. Terminating Condition  The algorithm finally extracts the rules that meet the  confidence threshold given by users, so the final output is not  one optimal rule, but rather a set of rules that meet the  threshold. The termination conditions we set are: the  termination generation is 400, or there is no one rule less  than threshold for the continuous 10 generations.

G. Rules Extraction  The frequent rules are generated according to the fitness  function and genetic operators. In order to mine the strong  association rules finally, these rules must be extracted again.

Extraction criteria are: output the rule which meets the  minimum confidence given by users, otherwise abandon it.



IV. DESCRIPTION OF THE ALGORITHM  According to the thinking above, a new model of  immune genetic algorithm for mining association rules  (MAR_IGA) is described as follows:  Step1: Initialization. Let evolution generation count t=0.

Determine the population size N and minsup, minconf.

Randomly generate an initial population G(t).

Step2: Calculate each individuals fitness in the  population G(t) according to formula (1), and save the best  individual. If each genome in the third segment of some  chromosome is invalid or all 0, we assign such chromosome  a smaller fitness.

Step3: Filter individual according to the fitness value. If  the fitness is greater than 1, keep the individual into the next  generation G*(t) , otherwise delete it. And calculate the  number M of individuals retained.

Step4: If M<N, randomly generate (N-M) individuals and  put them into G*(t) .

Step5: Genetic operation    Calculate the concentration di of each individual in  population  G*(t)  according to formula(3);  Calculate the selection probabilities in population  G*(t)  according to the formula(2), and then select  individuals to get population G'(t)  ;  Carry out crossover and mutation on G'(t)  to get the  next generation of population G(t+1).

Step6: Compare to the termination conditions, if it meets  the termination conditions, jump to Step7, otherwise t=t+1,  jump back to Step2.

Step7: Rules extraction. Restore each chromosome in the  final population to the rule, and calculate the confidence of  each rule. If confidence ? minconf , output the rule.



V. EXPERIMENTS AND ANALYSIS  A. Descriptions of Experimental Data Sets and the  Environment  The experiment uses Abalone dataset obtained from UCI  machine learning repository. The data set has 4177 samples.

It is composed of a discrete attribute and 8 continuous  attributes. In this paper, we only mined such association  rules X Y?  that Y was age. The setting of parameters: The  size of evolutionary population N=40, crossover rate=0.95,  mutation rate=0.01, minsup=0.15, minconf=0.6. The ratio of  training data and test data was 1:2. The experiment was  executed on Celeron(R) CPU 3.0GHz machine and software  was VC++.

B. Results of the Experiments  In order to test the validity of the algorithm MAR_IGA,  we compared MAR_IGA with the classical genetic algorithm  SGA and Apriori. The process of using SGA is: firstly we  extracted rules from the discrete data by SGA. Secondly we  searched the optimal cut-points set of the continuous data by  SGA, and then used SGA to extract rules from the  continuous data based on cut-points. And finally we  combined the above results of rule extraction as the final  optimal population. The process of using Apriori is: firstly  we discretized continuous attributes using the discretization  method based on the importance of cut-points[11], and then  extracted the rules by Apriori. These three methods were run  on the above data set. The results are shown in Table I:  TABLE I.  COMPARISON OF THESE THREE METHODS      Number of  cut-points  Number  of rules  Number of  reduction attributes  Execution  times(s)  MAR_IGA 28 13 5 48  SGA 37 10 6 56  Apriori 30 13 8 70  It can be seen from Table I that the number of reduction  attributes got from MAR_IGA is almost the same as SGA,  but in other areas obvious advantages can be seen compared  with SGA. It indicates that MAR_IGA using the immune  system is closer to the optimal solution of the problem than  the simple genetic algorithm. In addition, the number of the  cut-points got from MAR_IGA is almost the same as the  number got from Apriori which uses discretization method  based on the importance of cut-points. But the Apriori has  almost not reduced attributes. It is shown that MAR_IGA  has a good effect of the attributes reduction and can get the  simple, effective rules while ensuring the importance of the  cut-points. To sum up, MAR_IGA get less cut-points of the  continuous attributes, take shorter experimental time and get  more effective rules.



VI. CONCLUSION  Data can be divided into discrete attributes data and  continuous attributes data. A new immune genetic algorithm  MAR_IGA is presented in this paper. This algorithm has the  following characteristics:  It uses the chromosomes with three segments,  simultaneously searching the best cut-points sets of  the continuous attributes and extracting association  rules, and implying the attributes reduction;  The immune mechanism is introduced in. It  improves the local optimization of genetic algorithm  effectively, and ensures the population diversity;  Simple and effective association rules can be  obtained, while not reducing the importance of cut-  points and maintaining the original indistinguishable    relationships of the information systems.

But how to set the parameters of genetic algorithm and  how to guide the direction of the algorithm in order to  facilitate association rules mining is our next work.

