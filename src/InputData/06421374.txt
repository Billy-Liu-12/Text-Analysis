Integrated Genetic - Fuzzy Approach for Items with Single Minimum Support

Abstract- Data mmmg is the process of extracting desirable  knowledge or interesting patterns from existing databases for  specific purposes. Most conventional data-mining algorithms identify the relationships among transactions using binary values. Transactions with quantitative values are however commonly seen in real-world applications. The fuzzy concepts  are used to represent item importance, item quantities, minimum supports and minimum confidences. Each attribute uses only the linguistic term with the maximum cardinality in  the mining process. The number of items is thus the same as that of the original attributes, making the processing time reduced. It uses a combination of large l-itemsets and membership-function  suitability to evaluate the fitness values of chromosomes. The calculation for large l-itemsets could take a lot of time,  especially when the database to be scanned could not totally fed into main memory. In this system, an enhanced approach, called the cluster-based fuzzy-genetic mining algorithm. It divides the  chromosomes in a population into clusters by the 3 -dimensional  k-means clustering approach and evaluates each individual according to both cluster and their own information. A genetic? fuzzy data-mining algorithm for extracting fit membership  functions and multilevel association rules with its confidence  from quantitative transactions is shown.

Keywords- 3 dimensional k-means Clustering, data mining, fuzzy set, Genetic algorithm(GA), chromosomes, confidence , Fuzzy Association Rules, membership functions, Quantitative transactions  1. INTRODUCTION Data is very important for every supermarket. Data that was measured in gigabytes until recently, is now being measured in terabytes, and will soon approach the pentabytes range. In order to achieve our goals, we need to fully exploit this data by extracting all the useful information from it. This information can be extracted using data mining. Data mining is the use of automated data analysis techniques to uncover previously undetected relationships among data items. Data mining often involves the analysis of data stored in large database. The typical business decisions that the management of a super market has to make, to include what to put on sale in what quantity. Analysis of past transaction data is a commonly used approach in order to improve the quality of such decisions. Extraction of frequent item sets is essential towards mining interesting patterns from datasets. A typical usage scenario for searching frequent patterns is the so called "market basket analysis" that involves analyzing the   J.W.BakaJ Department of Information Technology,  Mumbai University, Mumbai, India  bakaljw@gmail.com  transactional data of a super market in order to determine which products are purchased together and how often and also examine customer purchase preferences.

Mining association rules between sets of items in large databases was first stated by Agrawal, Imelinski and Swami in 1993 and it opened brand new family algorithms .Apriori algorithm is probably the most used algorithm in association rules mining. At present, more and more databases containing large quantities of data are available. These industrial, medical, financial and other databases make an invaluable resource of useful knowledge. The task of extraction of useful knowledge from databases is challenged by the techniques called data-mining techniques. One of the widely used data? mining techniques is association rules mining. Data Mining is commonly used in attempts to induce association rules from transaction data. Data mining is the process of extracting desirable knowledge or interesting patterns from existing databases for specific purposes. Many types of knowledge and technology have been proposed for data mining. Among them, finding association rules from transaction data is most commonly seen. Most studies have shown how binary valued transaction data may be handled. Transaction data in real? world applications, however, usually consist of fuzzy and quantitative values.[I][2] In fuzzy data mining, the first thing that it needs to be done is to define appropriate membership functions because they have a critical influence on the final mining results.

Membership functions are defined by experts. However, experts may not always do this since the customers' favorites change all the time. Most of the previous fuzzy data mining algorithms thus assume the membership functions are already known. The algorithms that can derive both the appropriate membership functions and fuzzy rules automatically are thus developed. A survey of several algorithms that can mine both appropriate membership functions and fuzzy association rules were made. It can be divided into four different genetic-fuzzy data mining problems according to the utilized approaches and two types of problems in fuzzy data mining, namely Integrated Genetic-Fuzzy approach for items with Single Minimum Supports (IGFSMS)[7] Integrated Genetic-Fuzzy approaches for items with Multiple Minimum Supports (IGFMMS), Divide-and-Conquer Genetic-Fuzzy approaches for items with Single Minimum Supports (DGFSMS)[7] and  Divide-and-Conquer Genetic-Fuzzy approaches for items with Multiple Minimum Supports (DGFMMS) problems as    shown in Table 1. In the Table 1, in the integrated genetic? fuzzy approaches, they encoded all membership functions of all items ( attributes) into a chromosome ( also called an individual). The genetic algorithms are then used to derive a set of appropriate membership functions according to the designed fitness function. Finally, the best set of membership functions are then used to mine fuzzy association rules. On the other hand, the divide-and-conquer genetic-fuzzy approaches go in different direction. They encoded membership functions of each item into a chromosome. In other words, chromosomes in a population were maintained just for only one item.[7]  Table 1: The four different genetic-fuzzy data mining problems  INTEGRATED DIVIDE AND  APPROACH CONQUER  APPROACH  SINGLE IGFSMS Problem IGFSMS Problem  MINIMUM  SUPPORT  MULTIPLE IGFMMS DGFMMS Problem MINIMUM Problem  SUPPORT

II. ASSOCIA TION RULE MINING  Agrawal and his co-workers proposed several mining algorithms based on the concept of large itemsets to find association rules in transaction data. They divided the mining process into two phases. In the first phase, candidate itemsets were generated and counted by scanning the transaction data.

If the number of an itemset appearing in the transactions was larger than a pre-defined threshold value ( called minimum support), the item set was considered a large itemset. Itemsets containing only one item were processed first. Large itemsets containing only single items were then combined to form candidate item sets containing two items. This process was repeated until all large item sets had been found. In the second phase, association rules were induced from the large item sets found in the first phase. All possible aSSOCiation combinations for each large itemset were formed, and those with calculated confidence values larger than a predefined threshold ( called minimum confidence) were output as association rules.[5,6]

III. FUZZY SET CONCEPTS  Fuzzy set theory was first proposed by Zadeh and Goguen in 1965. A function called the membership function, 11 A (x) , is defined for mapping a member x to a membership degree between 0 to l. Triangular membership functions are commonly used and can be denoted by A = (a, b, c), where a :s b :s c. The abscissa b represents the variable value with the maximal grade of membership value, i.e. jJA (b)=I; a and c  are the lower and upper bounds of the available area. They are used to reflect the fuzziness of the data.

?,l' t 4?---..

,.a' ? r;' X Fig 1: A triangular membership function  In this paper, the fuzzy concepts are used to represent item importance, minimum supports and minimum confidences.

These parameters are expressed in linguistic terms, which are more natural and understandable for human beings.[6]

IV. FUZZY MINING  For many applications, an association rule may be more interesting if it reveals relationship among some useful concepts, such as "high income", "new car", and "frequent customer". These concepts are often imprecise or uncertain.

Interesting concepts are defined using fuzzy terms and interpreted based on fuzzy set. We refer association rules involving fuzzy terms as fuzzy quantitative association rules.

A fuzzy data mining algorithm is specially capable of transforming quantitative values in transactions into linguistic terms, then filtering them, and finding association rules by modifying the apriori mining algorithm. For example, Age = young and income = high -7Risk Level = medium High is a fuzzy quantitative association rule, where "young", "high" and "medium High" are fuzzy terms. This is a process of fuzzifying numerical numbers into linguistic terms, which is often used to reduce information overload in human decision making process. The numerical salary, for example, may be perceived in linguistic terms as high, average and low. One way of determining membership functions of these linguistic terms is by expert opinion or by people's perception. Fuzzy association rules use linguistic variables.

These linguistic variables define the value of a variable qualitatively, by defining a symbol for a fuzzy set, and by defining the meaning of the fuzzy set. Basically, the fuzzy mining algorithms first uses membership functions to transform each quantitative value into a fuzzy set in linguistic terms. The algorithm then calculated the scalar cardinality of each linguistic term on all the transaction data. The mining process based on fuzzy counts was then performed to find fuzzy association rules.



V. DRA WBACKS OF FUZZY MINING  In fuzzy data mining, the first thing that it needs to be done is to define appropriate membership functions because they have a critical influence on the final mining results.

Membership functions are defined by experts. That is the best approach, absolutely. However, experts may not always do this since the customers' favorites change all the time. Most of the previous fuzzy data mining algorithms thus assume the membership functions are already known. Of course, it is not     suitable when we try to apply it to real applications. The algorithms that can derive both the appropriate membership functions and fuzzy rules automatically are thus developed.

Most of these fuzzy data mining algorithms assume that the membership functions are already known. The developing of mining algorithms that can mine both appropriate membership functions and fuzzy association rules automatically is thus an important task. There are two reasons for the drawback of fuzzy mining. The first one is that companies may not always ask experts to define the appropriate membership function because it needs to spend lots of money and time. The second reason is that the favorite things of customers change all the time. Some mechanisms are thus needed to adapt the membership functions to these changes automatically. This can be done by the Genetic Algorithm.[7]

VI. EXISTING SYSTEM  In the past, a fuzzy-genetic data-mining algorithm for extracting both association rules and membership functions from quantitative transactions. It used a combination of large l-itemsets and membership-function suitability to evaluate the fitness values of chromosomes. The calculation for large l-itemsets could take a lot of time, especially when the database to be scanned could not totally fed into main memory.

Then fuzzy, GA and clustering concepts were used to discover both useful fuzzy association rules and suitable membership functions from quantitative transactions. A cluster-based fuzzy-GA mining framework first used for searching membership functions suitable for mmmg problems and for using the final best set of membership functions to mine fuzzy association rules. [1][2] The existing framework maintains a population of sets of membership functions, and use the genetic algorithm to automatically derive the resulting one. It will first transform each set of membership functions into a fixed-length string.

Each chromosome will represent a set of membership functions used in fuzzy mining. Then, it will use the k-means clustering approach to gather similar chromosomes into groups. All the chromosomes in a cluster will use the number of large l-itemsets derived from the representative chromosome in the cluster and their own suitability of membership functions to calculate their fitness values. Since the number for scanning a database will decrease, the evaluation cost can thus be reduced .The evaluation results can be utilized to choose appropriate chromosomes for mating in the next generation. The offspring membership function sets will then undergo recursive "evolution" until a good set of membership functions has been obtained. Finally, the derived membership functions will be used to mine fuzzy association rules.[I][2]  Linguisfic terms r????--------------------?  Mi"ing Member.fltip Functions  \--------_ .. _---------------- -------------------------------------/t(illillg FllzZJ' As.?ocialioll fl<U'F=======4  1 ______ ----------------------- ----------------------______ 1  Fig 2: Framework for the existing cluster based fuzzy genetic data mining system

VII. PROPOSED SYSTEM  1. Chromosome Representation  It is important to encode membership functions as string representation for GA to be applied. In Fig 3, each membership function is assumed to be isosceles-triangle and represented by a pair(c,w) ,with c indicating the centre abscissa and w representing half the spread. RJk denotes the membership function of the kth linguistic term of item l.i. All pairs of ( c, w)'s for a certain item are concatenated to represent its membership functions. Since c and w are both.

numeric values, a chromosome is thus encoded as a fixed? length real-number string rather than a bit string. Other types of membership functions ( e.g non-isosceles trapezes) can also be adopted in our method. For coding non-isosceles triangles and trapezes, three and four points are needed instead of two for isosceles triangles. The number of membership function for each item can be different. We assume each item has three membership functions low, middle and high. The number of membership functions may have impact of the results. However, how to decide the appropriate number of membership functions is a complex problem.[I][2] Memberslrip  value R '[ R '2 R'k RjI 1 ............ .1.. ... .......................... . L .................................... .. l.. ............................. ..

Wi! Cjl Wi2 92 Wik 9k Wi/9f QlIalllily Fig 3: Membership Function of Item Ij     MiDimum Coufid /" MiDilDUlll Support L iogui<o.: T I!I'IW ? K"" ? I  Fig 4: Framework for the proposed 3- dimensional cluster based fuzzy genetic data mining system  2. Initial Population A genetic algorithm requires a population of feasible solutions to be initialized and updated during the evolution process. As mentioned above, each individual within the population is a set of isosceles-triangular membership functions. Each membership function corresponds to a linguistic term in a certain item. The initial set of chromosomes is randomly generated with some constraints for forming feasible membership functions.[1][2]  3. Fitness and Selection In order to develop a good set of membership functions from an initial population, the genetic algorithm selects parent membership function sets with its probability values for mating. An evaluation function is then used to qualifY the derived membership function sets.[1][2]  I Ltq I f (C q ) = --------------------  Suitability (Cq) Where I L1g I is the number of large l-itemsets obtained by using the set of membership functions in chromosome Cq and Suitability (Cq) represents the shape suitability ofCq.

Suitability (Cq) is defined as  m 2: [ overlap_factor (Cqj) + coverage_factor (Cqj) )  j=l where m is the number of items. overlap_factor (C'1I) represents the overlap factor of the membership functions for an item IJ" in the chromosome Cg and is defined as  overlap (Rjk, Rji) overlap_factor (Cqj) =2: [max ? --------------------- ),1)-1)  k:fti min (Wjk ,wji) where overlap (Rjk' RjJ is the overlap length of Rjk and R),.

Coverage Factor (C'1I) represents the coverage ratio of a set of membership functions for an item Ij and is defined as:  Coverage_factor (Cqj) =  Range(Rjt, ..... ,Rjl)  max(Ij) where range (R)I,Rj2, ..... ,Rjl) is the coverage range of the membership functions, I is the number of membership functions for Ij , and max (Ij) is the maximum quantity of I) in the transactions. The suitability factor used in the fitness function can reduce the occurrence of the two bad kinds of membership functions shown in Fig. 5, where the first one is too redundant, and the second one is too separate.[1][2]  Low IIfiddle Higll Low IIfiddl. High  5 8 9 Qua.dty 0 5 20 Quantity? Fig 5: Two Bad Membership Functions  4. Clustering Chromosomes  Although the evaluation by l-itemsets is much faster than that by all itemsets or interesting association rules, it is still time-consuming since the database must be scanned once for each chromosome. We thus propose a new method based on clustering technique to reduce the evaluation time of large 1- itemsets. The process proceeds as follows. The coverage factors and overlap factors of all the chromosomes are used to form appropriate clusters. The 3-dimensional k -means clustering approach is adopted here to cluster chromosomes.

Since the chromosomes with similar coverage factors (CF) and overlap factors (OF) will form a cluster, they will have nearly the same shape of membership functions and induce about the same number of large l-itemsets. For each cluster, the chromosome which is the nearest to the cluster center is thus chosen to derive its number of large l-itemsets. All chromosomes in the same cluster then use the number of large l-itemsets derived from the representative chromosome as their own. Finally, each chromosome is evaluated by this number of large l-itemsets divided by its own suitability value.

5. Genetic Operators  Genetic operators are very important to the success of specific GA applications. Two genetic operators, the crossover and the mutation, are used in the genetic-fuzzy     mining framework. Assume there are two parent chromosomes  cut = (CI' ........ 'Ch' ......... ,cz), and Cw' = (Cl?' ........ , Ch?' ......... , cz)'  The crossover operator will generate the following four candidate chromosomes from them:  I)C,t+l = (ell'+I, ... , e'h'+', .... , e"t+l), where C'ht+' = d,h+ (I-d) eh'; 2)C,'+I = (e21'+1, ... , C'h'+', .... , e,,'+I), where C'h'+' = dc'h+ (I-d) eh; 3)C3'+I = (e3,'+1, ... , e3h'+', .... , e3,'+I), where e3h'+' = min {eh' eh'}; 4)Cl+l = (e4,'+1, ... , e4h'+', .... , e4,'+I), where e4h'+' = max {eh' eh'};

VIII. ALGORITHM  Notation used in the paper are stated as follows.

N: the total number of transaction data; m: the total number of attributes; A J : the fh attribute, I <=j<=m; IAJI: the number of fuzzy regions for Aj; Rjk: the kth fuzzy region of Aj , l:S k:s I AJI.

D(i): the ith transaction datum, 1:S i :s n;  ,  V (i) () j : the quantitative value Of A J for D 1 Fm () j .: the fuzzy set converted from vJ ' f (I) Jk : the membership value of v in Region RJk ; countjk : the summation of fjk for i= I to n; u : the predefined minimum support level; A : the predefined minimum confidence value; Cr. the set of candidate itemsets with r attributes (items); Lrr : the set of large itemsets with r attributes (items). [4]  INPUT

I. A body of n quantitative transactions, 2. A set of m items, each with a number of linguistic terms.

3. A membership function for each item is to be given.

4. A parameter k for 3-dimensional k-means clustering 5. A population size P 6. A crossover point Pc 7. A mutation point Pm 8. A support threshold u 9. A confidence threshold A 10. A fitness threshold  To get a set of fit membership functions by using Genetic Algorithm and 3-dimensional k-means Algorithm Approach.

1. Randomly generate a population of P individuals, each individual is a set of membership functions for all the m items.

2. Encode each set of membership functions into a string representation.

3. Calculate the coverage factor (CF) and the overlap factor (OF) according to the formula mentioned  above and average of both coverage and overlap factor of each chromosome.

4. Divide the chromosomes into k clusters by using the 3-dimensional k-means clustering based on three attributes i.e coverage factor, overlap factor and average of both.

5. Find out the representative chromosome in each cluster, which is the nearest to the center.

6. Calculate the number of large I-itemsets for each representative chromosome by the following sub steps.

a) For each transaction data (items in the transaction table) Di ,i=1 to n and for each item IJ , j=1 to m transform the quantitative value V/1) into a fuzzy set fj(l) represented as : ( /(1. ) I II) Iii ) j l ' j ji - + - -_.+ -  Rj l Rj2 Hjt , Using the above membership function representation by the chromosome where Rjk is the kth fuzzy region (low, middle, high) of item Ij.

fjl(') is vths fuzzy membership value in region RJkand 1(=IAjl} is the number of linguistic terms for Ij b) For each item region RJk , calculate it's scalar  cardinality (count) on the transaction as follows: n  n countjk = I fjk' i=l  c) For each RJk. l:Sj:Sm and l:Sk:SIAjl, chech whether it's countjk is larger than or equal to the minimum support threshold u. If Rjk satisfies the above condition then it is put in the set of large l-itemsets(L1).

d) Set ILd as the number of Large 1- itemsets for the representative chromosomes.

7. Calculate the fitness value of each chromosome using the number of large 1- itemsets of it's representative chromosomes.

IL1ql f( Cq) = ----------------------  Suitability (Cq) where suitability is : m I [ overlap_factor(Cqj)+ Coverage Factor (Cqj)]  j=l where m is the number of items.

8. Execute crossover operation on population ..

9. Execute mutation operation on population.

10. Use the roulette wheel selection operation to choose  appropriate individuals for the next generation.



II. If the termination criterion is not satisfied goto step  7; otherwise do the next step.

12. Get the set of membership functions with the highest  fitness value.

13. This set of membership functions are then used to  mine fuzzy association rules from the given transaction table.

To mine fuzzy association rules from the above membership functions the modified apriori algorithm is used.

1. Transform the quantitative values of each  transaction, for each attribute into a fuzzy set using above found membership functions.

2. Calculate the count of each attribute region ( linguistic term) RJk in the transaction data.

3. Collect each attribute region ( linguistic term) to form the candidate set C1.

4. Check whether countjk of each Rjk is larger than or equal to the predefined minimum support value u .  If Rjk satisfies the above condition, put it in the set of large l-itemsets (LJ/That is:  5. IF LI is not null, then do the next step; otherwise, exit the algorithm.

6. Set r=1, where r is used to represent the number of items kept in the current large itemsets.

7. Join the large itemsets Lr to generate the candidate set C+I in a way similar to that in the apriori algorithm, except that two regions ( linguistic terms) belonging to the same attribute cannot simultaneously exist in an itemset in CrH The algorithm first joins Lr and Lr under the condition that r- l items in the two item sets are the same and the other one is different. It then keeps in Cr+1 the itemsets which have all their sub-item sets of r items existing in Lr and do not have any two items Rjp and Rjg (p i- q) of the same attribute Rj.

8. Do the following substeps for each newly formed r+ l candidate itemsets with (Sf, S2, S3 ...... ,Sr+l) in Cr+/:  ( a) Calculate the fuzzy membership value of each transaction datum D(i). Here, the minimum operator is used for the intersection.

fs(i)= fsl(i) A fs2(i) A . . ?. ? ?. ? ?? Afsr+l(i) where fst) is the membership value ofD(') in region sJ . If the minimum operator is used for the minimum operator is used for the intersection, then  r+l f (i) = min f .(i) s - - SJ  j=1 ( b) Calculate the scalar cardinality ( count) of each  candidate 2-itemset in the transaction data as.

n  counts = L fs(i) i=l  ( c) Check whether these counts are larger than or equal to the predefined minimum support value u, put s in Lr+ 1.

9. If Lr+1 is null, then do the next step; otherwise, set r=r+1 and repeat Steps 6 to 8.

10. Collect the large item sets together.

11. Construct association rules for each large q-itemset s with items( s l, s2, ., sq), q 2: 2, using the following substeps:  ( a) Form each possible association rule as follows: sl A . . ? A Sk_IASk+1A . ? ??. A sq ?sk , k = 1 to q.

( b) Calculate the confidence factors for the above association rules .

n  n  L fs(i) i=l  (f (i) A Af (i) f (i) A A( (i?) L sl . ? ?? sk-I , sk+1 . . ?? sq i=l  12. Output multilevel association rules with confidence values larger than or equal to the predefined confidence threshold A.



IX. EXPERIMENT AL RESULTS  The performance of the proposed approach is described. It was implemented in Java (Netbeans 6.1) on a personal computer with Intel Core i7, 2.00GHz and 256MB RAM. A total of 10 items and 20 transactions were used in the experiments. In each data set, the numbers of purchased items in transactions were first randomly generated. The purchased items and their quantities in each transaction were then generated. An item could not be generated twice in a transaction. The quantitative transactions are 20 with 10 items and 3 linguistic terms. The parameter k for 3- dimensional k-means clustering is 3. The initial population size P is set at 10, the crossover rate pc is set at 6, and the mutation is set as random exchange of 2 points in same chromosome after crossover ,the minimum support a. is set at 2.0, the fitness threshold is 2.0 and the confidence threshold A is set at 2.0 .

1. Randomly generated chromosomes.

Assume there are ten items in a transaction database: milk, bread, cookies , beverage, chocolate , icecream ,coldrink, curd fruit ,butter . Since the item milk has three possible linguistic terms, Low, Middle and High, the membership functions for milk are thus encoded as ( 2, 4, 6, 4, 10, 4) for chromosome C2.

CO: 0888168 ,1 12 13 122512, I 565 I I 5,033363,044484, I 2 3 2 5 2, 2 5 7 5 12 5, 0 3 3 3 6 3, I 2 3 2 5 2, I 3 4 3 73 Cl :o 777147,2810 8188,310 13 1023 10,210 12 10 22 10 ,1 565 II 5 ,02 2 24 2, 2 5 7 5 12 5, 0 6 6 6 12 6 , I 2 3 2 5 2, I 4 5 4 94 C2:2 464 104, I 10 I I 10 2 I 10,3 5 85 13 5,0 10 10 10 20 10, I 565 I I 5, 0 2 2 24 2 , I 3 4 3 7 3, 0 4 4 4 8 4, 0 3 3 3 6 3, 0 5 5 5 10 5 C3:0 7 7 7147,410 14 10 2410 ,1 45494, 1 676136,246410 4, I 3 4373 ,0777 147,0555 10 5, 022242, I 898 178 C4:0 10 10 1020 10,4 13 17 13 30 13,0444 84,2 I I 13 I I 24 I I, I 45 494,022242,2464104 ,0777147 ,033363,0666126 C5:0 4 4 484,46 10 6 166, I 787 15 7 ,  I 676 13 6, I 565 I I 5 ,03 3 3 63, 1 676136,0666126, 1 34373, I 34373 C6:2 10 12 10 2210,37107177,3710 7177 ,0999189, 1 565 I 1 5, 022242,055 5 10 5, I 45494, I 45494, I 898 17 8     C7:23 5 383 ,2575 125, 1 676136,29 II 9209, I 45494 ,1 232 5 2,2 4 6 4 10 4, 0 6 6 6 12 6, 0 3 3 3 6 3, 0 3 3 3 6 3 C8:2 46410 4, I 565 II 5,3 10 13 10 23 10,0777 147,0555 10 5, I 34373,0777147,2686146,1 23252,0666126 C9:0 8 8 8168,41014 10 2410,2797167,235383,044484, I 2 32 52, I 343 7 3, 0 5 5 5 10 5 ,1 343 73, I 343 73  MILK lD W M IDOLE HIG H  o 10 QUA.NTITY  Fig No.6: The membership functions for milk in C2  2. Calculation of overlap factor , coverage factor and both The overlap factor in suitable(Cq) is designed for avoiding  the first bad case, and the coverage factor is for the second  one.[2]  The dimensions used for clustering are overlap factor ,  coverage factor and average of both. Therefore, the  calculation of minimum distance is as follows  .J(xl - x2)2 + (yl - y2)2 (zl - z2)2 T bl N 2 C I I f rCF & OF & A a e o. : a eu a Ion 0  CHROMOSO OVERLAP COVERAGE ME FACTOR FACTOR  CO 0.0 3.1171844 Cl 3.1171844 0.0 C2 1.6258075 1.491377 C3 2.785767 0.33141735 C4 3.4588547 0.3416703 C5 1.8227953 1.294389 C6 3.8718576 0.7546731 C7 0.20963031 2.9075541 C8 2.4696567 0.6475277  verage AVERAGE OFOF&  CF  1.6258075 1.491377  0.0 1.1599597 1.8330473 0.1969879 2.2460501 1.4161772 0.8438492  C9 0.7094187 2.4077656 0.91638875  3. Clustering Chromosomes using 3-dimensional clustering  k=3  Chromosome no 0 In Cluster No. 0  Chromosome no 1 In Cluster No. 1  Chromosome no 2 In Cluster No. 2  Chromosome no 3 In Cluster No. 1  Chromosome no 4 In Cluster No. 1  Chromosome no 5 In Cluster No. 2  Chromosome no 6 In Cluster No. 1  Chromosome no 7 In Cluster No. 0  Chromosome no 8 In Cluster No. 1  Chromosome no 9 In Cluster No. 0  4. Suitability of Chromosomes The suitability factor used in the fitness function can reduce  the occurrence of the two bad kinds of membership functions  shown in Fig. 5,where the first one is too redundant, and the  second one is too separate.

T bl N 3 S 't bTt fCh a e o. : UI a I uy 0 romosomes Chromosome No. Suitability  0 11.395833  1 8.6077385  2 9.941667 " 8.904167 .)  4 8.302139  5 9.7654 75  6 7.9327383  7 11.208334  8 9.186905  9 10.76131  5. Fitness of Chromosomes The fitness of each set of membership functions is  evaluated by the number of large l-itemsets generated by executing part of the previously proposed fuzzy mining  algorithm. Using the number of large l-itemsets can  achieve a trade-off between execution time and rule  interestingness. Usually, a larger number of l-itemsets  will result in a larger number of all itemsets with a  higher probability, which will thus usually imply more interesting association rules. The evaluation by 1-  itemsets is, however, faster than that by all item sets or  interesting association rules.[2]  Table No 4' Fitness of Chromosomes Chromosome No. Fitness  0 2.4570384 1 2.9043634 2 2.8164291 3 2.8076742 4 3.011272 5 2.867244 6 3.151497 7 2.498141 8 2.7212646 9 2.6019137  6. Multilevel Association Rule and Confidence  IF MILKM AND BREADM THEN COOKIESM 30.0 %  IF MILKH AND BREADH AND COKKIESH THEN  BEVERAGESH 4 0.0 %

X. COMPARISON OF THE EXISTING AND  PROPOSED SYSTEM  For clustering the parameter k was taken as 3 and comparison  was done between the k-means algorithm and the 3-  dimensional k-means clustering and we got the following  results.

T bl N 5 C a e o. : f I ompanson 0 C usters orme d CLUSTERS FORMED BY 2- CLUSTERS FORMED BY 3- DIMENSIONAL K-MEANS DIMENSIONAL K-MEANS ALGORITHM CLUSTERING Chromosome no 0 In Cluster No. 0 Chromosome no 0 In Cluster No. 0 Chromosome no I In Cluster No.2 Chromosome no I In Cluster No. I Chromosome no 2 In Cluster No. 0 Chromosome no 2 In Cluster No.2 Chromosome no 3 In Cluster No. 0 Chromosome no 3 In Cluster No. I Chromosome no 4 In Cluster No.2 Chromosome no 4 In Cluster No. I Chromosome no 5 In Cluster No. 0 Chromosome no 5 In Cluster No.2 Chromosome no 61n Cluster No.2 Chromosome no 6 In Cluster No. I Chromosome no 7 In Cluster No. 0 Chromosome no 7 In Cluster No. 0 Chromosome no 8 In Cluster No. 0 Chromosome no 8 In Cluster No. 1 Chromosome no 91n Cluster No. 0 Chromosome no 9In Cluster No. 0  In order to check performance of the Association rule algorithms, we have applied the algorithm to item dataset.

Comparison is done by considering the Computation Time.

Table No.6: Comparison of Computation Time  SR ALGORITHM COMPUTATION NO. TIME  1 Existing system (using k- 750 milliseconds means clustering)  2 Proposed system (using 3- 720 milliseconds  dimensional k-means clustering)  Following graph depicts comparison of Computational time  of existing system and proposed system with respect to  Computational time for database of 10 items and 20 transactions .X axis in Graph denotes algorithm and y axis  denotes Computational time. Computational time is measured in terms of milliseconds.

UJ ?750 i= z o i= g 0.700 ? o u  Computation Time  Existing System (Using  k-means Clustering)  Proposed System (Using 3-Dimensional  k-means Clustering)  ALGORITHM  Time in milliseconds  Graph 1. Comparison of Algorithm using k-means and 3- dimensional K-means Clustering  XI. CONCLUSION  This project presents an optimization method developed to  deal with a data mining problem. Decision making in business sector is considered as one of the critical tasks. The  objective is to provide a tool to help experts to find associations between the items bought by a customer in  supermarket. An association rule may be more interesting if it reveals relationship among some useful concepts such as quantity of items bought by customer rather than which item is bought by the customer that is by using fuzzy mining. The  favorite things of customers change all the time that is the membership functions should be adjusted dynamically, which can be done by genetic algorithm. To deal with all these  aspects the fuzzy genetic association rule mining using  modified k-means clustering is used. To achieve this, the  algorithm has been developed in two parts. The first part  finds out fit membership functions using genetic algorithm and modified k-means algorithm. The second part finds  association rule (second level) using these fit membership functions and the confidence of that rule. This algorithm is tested on 10 items and 20 transactions.

