An Agent-Oriented Data Mining Framework   for Mass Customization in the Automotive Industry

Abstract   This paper introduces an agent-based framework that exploits data mining techniques in order to facilitate mass customization of vehicles in the automotive industry. Mass production practices manage to reduce manufacturing costs, however they fail to sufficiently reflect personalized customer needs and demands to the final products. Our agent-based framework aims to support the provision of more personalized products to automotive industry customers, while preserving the advantages of mass production. The paper describes the agent-based architecture and presents preliminary results from the application of data mining techniques on an initial set of user survey data.

1. Introduction   Automotive industry uses mass production techniques in order to decrease labor costs and increase the rate of production. However, mass production fails to sufficiently reflect personalized customer needs and demands to the final products because it produces identical items. Customization according to different user needs may be only achieved by the application of different finishes and decorations to the end production line. The use of a family of computer-aided manufacturing systems has been introduced, known as mass customization in order to provide more product individuality keeping the advantages of mass production [1].

In this paper we present such a mass customization system, designed as an agent-oriented architecture. Our framework applies a set of data mining (DM) techniques on data from automotive industry customer surveys in order to generate a set of business rules that describe the associations between the various user preferences about the design elements of vehicles. The  extracted knowledge is integrated into the business- logic component of an agent that represents the automotive industry. The goal of this agent is to provide a set of recommendations to customers based on DM results and to seek for their feedback.

Customers who are represented by personal agents evaluate the proposed recommendations. Their feedback is sent to a rule refinement mechanism whose purpose is to improve the generated recommendations.

The generated rules reflect user preferences about design attributes of various vehicle parts. These rules are taken into account in the vehicle design and manufacturing process.

In the following Section we present related work.

Section 3 describes the agent-oriented architecture of our mass customization system and Section 4 outlines the elements of the DM mechanism that interacts with the agent framework. In Section 5 we present preliminary results derived from the application of DM techniques on customer surveys. Finally, Section 6 concludes the paper and outlines future work.

2. Related Work   Related work includes agent-based frameworks and DM techniques for mass customization in the automotive industry. Today only a few automotive industries have deployed mass customization systems in their product design and manufacturing process.

None of them combines agents and DM technologies for mass customization of vehicles.

For our purposes, the DM technique which was deemed more suitable for our needs is the associative classification (AC). This technique integrates association rule discovery and classification. Recently, many associative classification algorithms have been proposed. These include: CBA [2], CPAR [3], CMAR [4], MCAR [5] and ADT [6] amongst others. The AC approach could be divided into four main steps: a)   DOI 10.1109/WIIAT.2008.335    DOI 10.1109/WIIAT.2008.335     discovery of all frequent rules, b) production of all classification associative rules above the minimum confidence threshold, c) selection of one subset of class association rules to form a classifier, and finally d) measuring the quality of the derived classifier on test data.

Many AC algorithms have integrated the A priori association rule discovery for discovering frequent rules in data [2, 7]. Other popular approaches are the greedy strategy [3] and the FP?growth algorithm [4,8].

In our implementation, we have deployed the Tertius algorithm [9]. Tertius, as opposed to A priori, discovers first-order logic rules. It uses a top-down best-first search, which produces shorter and more general rules in the beginning and refines them later using ?-subsumption.

The selection of a subset of class association rules to form the classifier is basically accomplished by the application of pruning techniques. Several AC algorithms [2,4,5] use the database coverage as their basic pruning technique. Other algorithms [2, 6] use pessimistic error estimation or lazy pruning techniques [8, 9]. In our work we have adopted database coverage, since it generates simpler and more accurate classifiers.

Class attribute prediction mechanisms, which are based on association rules, are divided into two main groups [10]: a) the first one conducts prediction based on the highest precedence rule and b) the second one takes into account multiple rules. In our framework we have adopted the first approach as it is considered to be an effective and simple technique that avoids conflicts and rule dependency issues. Amongst the different approaches for the classifier evaluation, commonly used techniques include error rate and precision-recall.

In this paper we have used overall error on test data as a measure for evaluating the predictive strength of the generated classifier.

3. The Agent-Oriented Architecture   Figure 1 illustrates the abstract functional architecture of the mass customization framework. The agents reside on the multi-agent system (MAS), which interacts with a) the users, via an appropriate user interface, and b) the DM component. The latter applies AC techniques on user survey data, stored in an appropriate database (DB). The MAS includes the following agent types: ? User agents (UA). These agents operate as user  representatives that are constantly aware of user profile data (e.g. age, nationality, gender, etc.) and user preferences about specific vehicle parts (e.g.

seat color or texture). Each individual user is represented by one UA.

? Recommender agent (RA). This agent receives (by a UA) a request for recommendations, based on a specific user profile and a corresponding set of user preferences. Its role is to provide a set of recommendations that best fulfill the requesting customer?s profile and preferences. In order to provide the requested recommendations, RA incorporates a rule base generated by the application of DM techniques on user survey data.

? Evaluator agent (EA). Each time a user interacts with the UA, the EA is notified about user preferences and, based on them, it performs evaluation of the recommendations that RA provides. New incoming user preferences are also included into the customer survey DB to be used in the next scheduled rule refinement process.

The rule refinement process, as well as the steps that are required for the generation of the rule base, are described in the following Section.

4. The Data Mining Component   The DM component implements an associative classifier. Its structure is depicted in Figure 2. The core elements of the DM component, enumerated as 1-4 in Figure 2, represent one step of the required procedure for the implementation of an associative classifier.

This classifier will produce a rule base for the prediction of the customer needs to be taken into account in the automotive design strategy.

The general steps for the implementation of an associative classifier are the following [10]:  1. All frequent rules are discovered.

Figure 1. Abstract architecture of the mass customization framework     2. Associative classification rules are selected amongst the rules produced in the previous step.

The most popular technique applied for this purpose is pruning. The rules that remain after the application of pruning, posses a minimum required confidence level.

3. One subset of class association rules is selected to form an appropriate classifier, based on the rules in step 2.

4. The quality of the derived classifier is assessed by the use of testing data.

In the remaining section we describe each one of the separate elements of the DM component that implement as a whole the integrated associative classifier.

4.1. Discovery of Association Rules   The first element of the DM component deals with the extraction of the initial set of association rules, based on a training dataset from the user survey DB.

For this purpose, it applies the Tertius algorithm [11] for association rules extraction. This search algorithm results in shorter and more general rules. The rule discovery process is initialized by an empty rule base and proceeds by refining the discovered rules in an iterative fashion.

4.2. Pruning Redundant Rules   As soon as the association rules are extracted (subsection 4.1) they are received by the pruning element (Figure 2.2). This element applies a pruning method in order to extract from the previous rule base those rules that are either redundant or misleading and it finally excludes them. In this way, it prevents those rules to influence in any way the final prediction process.

Amongst the various pruning methods proposed in the literature (Section 2) the database coverage method [2] was used for our purposes, because it there is proven evidence [12] that it generates simpler and more accurate classifiers. This method tests every rule of the generated set against the training data. If any rule is invalid for at least one record of the training set, it is considered redundant and it is removed. The set of rules that remain after the pruning procedure forms the final set that passes as input to the next element.

4.3. Prediction of Class Attributes   The third element of the DM component is used for the prediction of attribute values. This is realized through the application of the generated rules on the testing dataset. The algorithm adopted for the prediction of class attributes is based on the maximum confirmation value of a single rule [2, 6, 10], which is a more flexible approach, compared to other multiple- rule techniques.

4.4. Evaluation   The last element that comprises the DM component is the rule evaluation element. It aims to provide evaluation of the predictive accuracy that characterizes the generated classifier. The accuracy of the classifier is measured by its capability to correctly classify test data, based on the resulted set of rules. Moreover, this element is responsible for the refinement of the existing rules in order to satisfy a required level of accuracy. Rule refinement is an iterative process which mainly involves the application of improvements on the first two steps of the AC process.

5. Preliminary Results: Prediction Rules for Mass Customization of Vehicles   The original dataset used in our preliminary tests are derived from a set of 400 user surveys specifically designed in the context of an EU-funded project called CATER (http://www.cater-ist.org/). Different surveys (however based on the same principles) were distributed to both truck and car drivers. Survey data were analyzed and pre-processed in order to be used for DM purposes. The expected outcome by the application of AC on user survey data was the generation of a set of rules that provide mappings between customer needs and design parameters of various vehicle parts.

For each individual part a separate dataset was created. Table 1 shows a snapshot of a dataset that  Figure 2. Internal structure and functional architecture of the data mining component      Rule refinement  Redundant Rules  Pruning   Prediction of class  attribute  Rule Evaluation  Training dataset  Testing dataset  Rule base  Rules after pruning  Classification rules  Evaluated Prediction  Rules  Association Rules  Discovery Initial rules  User data     includes information about car seats. Each row represents data filled in by a separate user. For instance, the first row includes information about a male car driver from Asia, who belongs to the age range of 25-54 and believes that the main requirement for a seat is to be comfortable. For this user a seat that satisfies his affective needs (i.e. to be comfortable) is the one that provides ?good support?.

Table 2 includes some rules generated after the application of DM on the car seat dataset. For each rule the values of two rule-strength metrics are shown in the second and third column of Table 2. These metrics are called confirmation and support and their purpose is to measure the frequency of counter- instances. The rules shown in Table 2 have low values for the two metrics. However, the rule refinement process that requires user feedback and additional data is expected to improve the rule strength.

Region Gender Age Descriptor Attribute Asia Male 25-54 comfortable good support Asia Male 55-65 cute roundish Asia Female 25-54 comfortable good support Europe  Female 18-24 trendy spacious Europe Male 25-54 elegant solid Europe Male 25-54 elegant adjustable Europe Female 25-54 classic boxy Europe Male 25-54 modern solid Europe female 18-24 classic boxy Europe female 25-54 classic boxy Europe male 55-65 elegant good support Europe female 18-24 classic boxy    No Conf. Support Rule 1. 0.217697 0.101761 Descr. = comf. ==> Attr. = good support 2. 0.162094 0.119374 Descr. = comf. ==> Attr. = body fitting 3. 0.158746 0.041096 Age = 25-54 AND Descr. = comf. ==>  Attr. = good support 4. 0.144436 0.056751 Region = Asia AND Descr. = comf. ==>  Attr. = good support 5. 0.139820 0.052838 Gender = male AND Descr. = comf. ==>  Attr. = good support 6. 0.123784 0.015656 Gender = male AND Age = 25-54 AND  Descr. = comf. ==> Attr. = good support 7. 0.123245 0.045010 Region = Europe AND Descr. = comf.

==> Attr. = body fitting 8. 0.118928 0.048924 Gender = female AND Descr. = comf.

==> Attr. = good support   6. Conclusions and Future Work   This paper presented an agent-oriented architecture  for mass customization of vehicles based on the application of DM techniques on customer data.

Preliminary results have shown that the framework is capable of providing recommendations to the customers based on the generated rule base. However, due to insufficient customer data the system has not adequately proceeded with the rule refinement process,  which is expected to significantly increase the accuracy of the evaluated rules.

Further improvements will be also sought on the refinement process. Additional pruning methods will be evaluated and tested. Moreover, multiple-rule prediction mechanisms will be benchmarked against the ones that rely on a single rule.

