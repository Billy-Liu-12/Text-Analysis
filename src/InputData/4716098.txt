Notice of Retraction

Abstract?Association rules are the main technique for data minning.Apriori algorithm is a classical algorithm of association rule mining Lots of algorithms for mining association rules and their mutations are proposed on basis of Apriori algorithm,but traditional algorithms are not efficient.For the two bottlenecks of frequent itemsets mining:the large multitude of candidate 2- itemsets,the poor efficiency of couting their support ,this paper proposes a novel algorithm so called Reduced Apriori Algorithm with Tag(RAAT),which reduces one redundant pruning operations of C2.If the number of frequent 1-itemsets is n,then the number of connectded candidate 2-itemsets is Cn2, while pruning operations Cn2.The noval algorithm decreases pruning operations of candidate 2-itemsets,thereby saving time and increasing efficiency.For the bottleneck:poor efficiency of couting support,RAAT optimizes subset operation,through the transaction tag to speed up support calculations.The experimental results obtained from tests show that RAAT outperforms original one efficiency.

Keywords- data mining; association rules; apriori algorithm;

I. INTRODUCTION Data mining is one of research areas of the international  database and decision-making information, of which the main purpose is to develop the relevant methods, theory and tools and to extract useful and interesting knowledge from the large amounts of data. Association rules mining is an important research area in data mining, which indicates relations among itemsets in database.With the accumulation of the data, association rule mining in large data set attracts more and more attention.

Algorithm APRIORI[1] is one of the oldest and most versatile algorithms of Frequent Pattern Mining(FPM).

Although it was beaten most of the time by sophisticated DFS algorithms,such as lcm[2],nonordfp[3] and ?clat [4],its merits are undisputable.Its advantages and its moderate traverse of the search space pay off when mining very large databases.Since then,many improved algorithms had been proposed.For example,the algorithms of AprioriTID and Apriori Hybird are described in [5].And its variants to find frequent sequences of itemsets[6],episodes[7],Boolean Formulas[8]and labeled graphs[9,10] have proven to be efficient algorithms as well.

Recently,many researches have tried to find efficient methods and technologies to improve Apriori:hash optimization[11],the transaction and itemsets compression optimization[12],the division optimization[12],sampling optimization, dynamic itemsets count optimization[13],and so on.Reference[14] proposes the algorithm scanning the database only once.Reference[15] introduces to store operation of the database with a cross chain to reduce the number of connections.Reference[16] stores the database directly into main memory, carrying out association rules mining on the serv er-side.A excellent premises of absolutely join is presented,the candidate 4k-itemsets are built directly with absolutely join while creating the candidate(2k+1)- itemsets from L2k and only used the absolutely join for L2k+1 to create the candidate (4k+2)- itemsets in [17].

Based on the achievement of forefather,this paper proposed a novel algorithm Reduced Apriori Algorithm with Tag(RAAT) to improve Apriori algorithm by the way of a decrease of pruning operations, which generates the candidate 2-itemsets by the new apriori-gen operation. Besides,it adopts the tag-counting method to calculate support quickly.So the bottleneck is overcame.



II. BASIC CONCEPTION  A. Association Rules The concept of the association rules was first proposed by  R.Agrawal.It is used to describe the patterns of customers' purchase in the supermarket.The association rules can be formally defined as Definition 1: Let I={i ,i ,i ,?.i }1 2 3 n be finite itemsets. D is a transactional database. Where ik(k {1,2,?...m})is an item, and Tid is the exclusive identifier of transaction T in transactional database.

Definition 2: Let X I,Y I, and X Y = .The implication of the form X=>Y is called an association rules. Where X I, Y I are purchases patterns of customer.

Definition 3:Let D is a transactional database.If the percentage of transactions in D that contain X U Y is s% the rule X=>Y holds in D with Support s.If the percentage of transactions in D containing X that also contain Y is c%,the rule X=>Y has Confidence c.The definitions of probability are,  National Natural Science Foudition of ChinaNo.60173066.

Support(X => Y)= P( X U Y)                (1)  k k The algorithm generates 1-itemsets, 2-itemsets, ...,and k-  itemsets in tum. If C  Confidence(X => Y)=P(Y X)               (2)  Rules that satisfy both minimum support threshold (minsup) and minimum confidence threshold (minconf) are called strong rules.

Definition 4: If the support of itemsets X is greater than or equal to minimum support threshold, X is called frequent itemsets.If the support of itemsets X is smaller than the minimum support threshold,X is called infrequentitemsets.

B. Rakated Properties According to definition 4,we can get the following  properties: Property 1: Let Y I and X Y .If Y is frequent iternsets,X is also frequent itemsets.

Property 2: Let Y I and X Y.If the X is infrequent itemsets,Y is also infrequent itemsets.

The correctness of property 1 and property 2 can be gained easily.These properties can be used to reduce searching width of mining association rules.



III. APRIORI ALGORITHM Enter: a database D, the minimum threshold of support min-  sup Output: the database of all the frequent  a)           L1 = (frequent 1 - Items); b)           for (k = 2; Lk-1; k + +) do begin c)           Ck = apriori_gen (Lk-1); / / After two-step connection and    pruning operations generate a new candidate frequent itemsets d)           for all transactions t D do begin e)    Ct = subset (Ck, t); / / in the database to scan t included in the candidate frequent itemsets Ck f)            for all candidates c Ct do g)           c.count + +; h)           end; i)            Lk = (c C | c.count min-sup) j)            end; k)           Answer = U L ;  k is empty for some k, the algorithm ends.Studying the process of mining frequent itemsets and the relation of itemsets, we can find out many redundant candidate itemsets in Ck+1which are generated by Lk in the k-th mining loop. The reason generating these redundant candidate itemsets is that the support of some (k+1)-itemsets, which is supersets of the frequent itemsets in Lk, is smaller than the minsup. In order to make the cardinal number of candidate itemsets Ck+1 be near to the cardinal number of frequent itemsets Lk+1, the concept of the generation is introduced on the basis of Apriori,which generates the candidate 2-itemsets by the improvement of apriori-gen operation and the improvement subset operation.In this way, we can reduce the  cardinal number of the candidate itemsets in each loop and improve the efficiency of mining algorithm.

A  Reduced  Apriori-gen A) Procedure apriori-gen(Lk-1,min_support) B) for each itemset l1 Lk-1 C) for each itemsets l2 Lk-1 D) if(l1[1]=l2[1]) (l1[2]=l2[2]) ?? (l1[k-2]=l2[k-  2]) (l1[k-1]=l2[k-1]) E) then{ F) c=l1 l2 G) for each(k-1)-subsets s of c H) if(s   lk-1)then I) delete c; J) else add c to Ck; K) return Ck L) } M) } N) }  As C2 is connected by L1 and pruning two-generated, of which pruning operations to test whether a subset of  C2 is frequent itemsets.Because C2 = L1 L1, the subset of the set must be frequent. Therefore, the new algorithm RAAT generate C2 by the direct connection of L1, rather than a pruningoperation.

B   Enhancement of Subset Procedure subset(Ck t)  A) For all candidates s Ck B) {if t contains s C) subset=subset+{s}; D) }  Its running time is O (| D |K), this is a very large number.

For example: K = 3, the transaction t (x2, x6, x7, x9), the itemsets s (x4, x6, x10). Refinement of this sentence: if t contain s during a judge are the following conditions: if (t contains x4)  (t contains x6)  (t contains x10) then? Obviously, t does not contain s, but still have to compare one by one.

The new algorithm improved the subset opration through adding a Tag column on the transaction database,of which values are the first and the last numbers of itemses. If (first item of x > = min)  (last item of x <= max),then t contains s.Otherwise,t does not contain s.

C    Design the New Algorithm of Mining Association Rules  The new algorithm,using the concepts of the support and the generation to improve the efficiency of mining frequent itemsets, is also similar to Apriori.It can be divided into two steps.First,the algorithm finds out all frequent itemsets.Then it generates all association rules from frequent itemsets.

Obviously, the second step is easy than first step,so we only describe the algorithm of the first step.We call this algorithm Reduced Apriori Algorithm with Tag(RAAT).It can be described briefly as follows.

Algorithm: RAAT //being used to find out all frequent itemsets in database.

Enter: a database D, min-sup Output: all the frequent itemsets of the database 1)      L1 = (frequent 1-Items); 2)      C2 = L1 L1;  3)      for all candidates c C2 do 4)  Ct = subset '(C2, t); 5)      for all candidates c Ct do 6)      c.count + +; 7)      end; 8) L2 = (c C | c.count  min-sup) 9)      end;  10)     for (k = 3; Lk-1; k + +) do begin 11)     Ck = apriori_gen (Lk-1); 12)     for all transactions t D do begin 13)     Ct = subset '(Ck, t); 14)     for all candidates c Ct do 15)     c.count + +; 16)     end; 17)     Lk = (c C | c.count  min-sup) 18)     end;  Answer = UkLk; Subset '(Ck, t) includes the following steps:  a)    for all candidate s Ck { b)   If (first item of s > = min)  (last item of s <= max); c)   subset = subset + (s); d)   };

IV. EXAMPLES A transactional database is showed in TABLE1,and the  minimum support threshold is 20%.The result of mining association rules which is generated by algorithm RAAT is illustrated as follows.

TABLE I TRANSACTIONAL DATABASE D Transaction  No.

Itemsets  T100 I1 I2 I5  T200 I2 I4  T300 I2 I3  T400 I1 I2 I4  T500 I1 I3  T600 I2 I3  T700 I1 I3  T800 I1 I2 I3 I5  T900 I1 I2 I3  TABLE 2 THE DATABASE IN THE NEW ALGORITHM RAAT  Transaction No.

Itemsets Tag  T100 I1 I2 I5 1 5  T200 I2 I4 2 4  T300 I2 I3 2 3  T400 I1 I2 I4 1 4  T500 I1 I3 1 3  T600 I2 I3 2 3  T700 I1 I3 1 3  T800 I1 I2 I3 I5 1 5  T900 I1 I2 I3 1 3  The first to deal with a database in the form of TABLE 2, the last one marked with the corresponding transaction of the smallest item serial number and the largest serial number.

After the first scan the database, looking for L1, you can compare the various tag of the transaction, because L1 is not in [2,4], or in [2,3], and so on to avoid many comparison of the operation,savingtime.

After calculating support, L1 = {I1, I2, I3, I4, I5}.

According to the improved algorithm, C2 connected directly by L1 is no need for pruning operations. Thus, C2 = {(I1, I2), (I1, I3), (I1, I4), (I1, I5), (I2, I3), (I2, I4), (I2, I5), (I3, I4), (I3, I5), (I4, I5)}. As (I1, I2) in [1,5], it includes the transaction T100 andincreases the corresponding support. And so on, L2 = {(I1, I2), (I1, I3), (I1, I5), (I2, I3), (I2, I4), (I2, I5)}. After pruning after connecting C3 = {(I1, I2, I3), (I1, I2, I5)}.

Itemsets (I1, I2, I3) in [1,5], and so increases in support.Because it is not in [2,4] or[2,3] and therefore do not increase support.Finally, L3 = {(I1, I2, I3), (I1, I2, I5)}.C4 can not be find as the algorithm end.Clearly,the new algorithm reduces the numberof unnecessary operations,streamline the collectionof frequent generation and improve the efficiency of the algorithm.

Figure .1. The  test  results of apriori and the improved algorithm RAAT

V. ANALYSIS AND EVALUATION OF THE ALGORITHM The algorithm RAAT has been implemented by  VisiualC++6.0 on a personal computer with 1.7 GHz Pentium4CPU,1GB in memory and Microsoft XP operation    system.The experiment datahase sources are T40.110, D100K,provided by the QUEST generator of data generated from IBM's Almaden lab.The testing results of experiments are showed in Fig.1.

In the Fig.1, the horizontal axis represents the number of support in database and the vertical axis represents mining time (second) of the same database with the algorithm Apriori and RAAT.The two curves denote different time cost of the algorithm Apriori and RAAT with different minsup.



VI. CONCLUTION From the above test results, we can easily come to the  conclusion that: As for relatively small support, the new algorithm TAAT improves the rate of the efficiency much remarkably than Apriori algorithm.This lies in that the smaller the minimum support threshold is,the larger the corresponding candidate itemsets are. Moreover, the frequent itemsets are from the candidate itemsets and there is more of the workload to scan the database and computing support.The new algorithm reduced the operation of scaning the database and improve the efficiency of computing support pominently.

With the same support,the RAAT algorithm runs faster than the traditional one.Thus, to reduce the C2 pruning operations can be a very good method of cutting running time.

With the support increased, although the operating efficiencies of two algorithms have been enhanced due to the nature of apriori algorithm and removing non- frequent itemsets timely,however,thesuperiority of RAAT is still evident.

REFERANCE  [1]   R.Agrawal and R.Srikant.Fast algorithms for mining association 499, 1994.

[2]   T.Uno, M.Kiyomi,and H.Arimura. Lcm ver.2:Efficient mining algorithms for frequent/closed/maximal itemsets. In B. Goethals,M. J. Zaki,and R.Bayardo,editors, Proceedings of the IEEE ICDM Workshop on  Frequent Itemset Mining Implementations (FIMI?04), volume 126 of CEUR Workshop Proceedings, Brighton, UK, 2004.

[3]    B.R acz.nonordfp:An FP-growth variation without rebuilding the FPtree .In B.Goethals, M.J.Zaki,and R.Bayardo, editors, Proceedings ofthe IEEE ICDM Workshop on Frequent Itemset Mining Implementations (FIMI?04), volume 126 of CEUR Workshop Proceedings, Brighton, UK, 2004.

[4]     L.Schmidt-Thieme.Algorithmic features of eclat.In B.Goethals,M.

J.Zaki,and R.Bayardo, editors,Proceedings of the IEEEICDM Workshop on Frequent Itemset Mining Implementations (FIMI?04),volume126 of CEUR Workshop Proceedings , Brighton,UK, 2004.

[5]     Rakesb Agrawal,etc.,Fast Algorithms for mining.Association rules in Large Database,In: Jorge B.Bocca, Mattbias Jarke , Carlo Zaniolo (VLDB'94) San Francisco: Morgan Kaufmann, pp.487-499,1994.

[6]  R.Agrawal and R.Srikant.Mining sequential patterns.In P.S.Yu and A.L.P.Chen,editors,Proc.11th Int.Conf.Data Engineering, ICDE,pages3? 14.IEEE Press,6?10.1995.

[7]     H.Mannila,H.Toivonen,and A.I.Verkamo.Discovering frequent episodes KnowledgeDiscovery and DataMining,pages210?215.AAAI Press,1995.

[8]     K.Hatonen, M.Klemettinen,H. Mannila,P.Ronkainen, and H.Toivonen.

Knowledge  discovery from telecommunication networkalarm databases.

on Data Engineering,February 26?March 1,1996,New Orleans, Louisiana ,pages115?122,1109 Spring Street, Suite 300,Silver Spring, MD20910, USA,1996.IEEE Computer Society Press.

[9]   A. Inokuchi,T.Washio,and H. Motoda.An apriori-based algorithm for mining frequent substructures from graph data.In Proceedings of the 4th European Conference on Principles of Data Mining and Knowledge Discovery, pages13?23. Springer-Verlag, 2000.

[10]    M.Kuramochi and G.Karypis.Frequent subgraph discovery. In pages313?320, 2001.

[11]   Park J S,Chen Ming-Syan,Yu Philip S.Using a hash-based method with on Knowledge and Data Engineering,1997,9(5):487-499.

[12]    Savasere A,Omiecinski E,Navathe S.An efficient algorithm for mining association rules in large databases [C]. //Proceedings of the 21st  [13]  Brin S,Motwani R,Ullman J D,et al.Dynamic Itemset counting and implication rules for market basket data[C].//ACM SIGMOD  [14]   Luo Ke,Wu Jie.Apriori algorithm based on the improved [J].Computer Engineering and application ,2001,20:20-22.

[15]   Li Xiaohong,Shang Jin.An improvement of the new Apriori algorithm [J].Computer science, 2007,34 (4) :196-198.

[16]    Gu Qing-feng, SONG Shun-Lin.The improvement of Apriori algorithmand in SQL applications.Computer engineering and design 2007,28(13):3060-3233.

[17]   Luo Jiawei,Wang Yan.Apriori algorithm with a fully connected the improvement [J]. Computer applications, 2006. 26 (5):1174-1177.

