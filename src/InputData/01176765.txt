

STOCK MARKET TIME SERIES DATA MINING BASED ON REGULARIZED NEURAL NETWORKAND ROUGH SET  XIAO-YE WANG, ZHENG-OU WANG  Institute of Systems Engineering, Tianjin University, Tianjin 300072,China E-MAIL: Xiaoye@F?ublic.Tpt.Tj.Cn  Abstraet: This paper presents a new method of stock market time  series data mining, which combines regularized neural network with rough set The process includes preprocessing of time series database and data mining. The preprocessing clean and filter time series. Then, we partition the time series into a series 01 static pattern, which is based on the trend (i.e., increasing or decreasing) 01 closing price. An information table is formed by the most important predicting attributes and target attributes identited from each pattern. The regularized neural network (RNN) is used to study and predict the data. Rough set can extract rule knowledge in the trained neural network that can he used to predict the time series behavior in the future. The method camhines the high generalization faculty of regularized neural network and the rule reduction capability 01 rough set. The experiment demonstrates the effectiveness 01 the algorithm.

Keywords: Time series; Regularized neural network; Data mining; Rough set  1 Introduction  Time series data arises in a variety of domains, such as stock market analysis, environmental data, telecommunications data, medical and financial data.

Recently there has been an explosion of interest in time series data mining, with researchers attempting to index, cluster, classify and mine association rules from increasing massive sources of data. For example, Das et al. attempt to show how association rules can be leamed from time series ?I. It uses a sliding window to discretize the time series, and then cluster these subsequences using a suitable measure of patterns. From these patterns they can find rules relating pattern in a time series to other patterns in that series,or pattern in one series to patterns in another series. Keogh et al. introduce a new scalable time series classification algorithm [?I. All these algorithms that operate on time series data need to compute the simliarity between patterns.

The above methods are very sensitive to the computational algorithm of the window?s width and the distance. Han et al.

investigate time series databases for periodic segments ?31 and partial periodic patterns 14] using data mining methods.

Their techniques are aimed at discovering temporal patterns rather than temporal rules.

0-7803-7508-4/02/$17.00 02002 IEEE  In most data mining problems, a regular static database contains a set of records, each is constructed from a set of attributes. The order of record has no significance. In contrast, a time series database contains a set of records in which some of the attributes are associated with a timestamp [?I. For example, a stock market database in which each record includes the static attributes such as stock name, some dynamic attributes such as closing price and opening price.

In a stock market database, we are more interested in the behavior of the stock over time rather than in its value on a single day. In this paper, we are interested in finding rules ahout long behaviors of the stock price. An example would be a rule such as ? If the current fluctuant is high then the duration of this quotation is short?. We convert time series to the static patterns which are appropriate for general data mining method, and use the attributes of static patterns as the basis for exploratory rule induction.

Our data mining approach is based on regularized neural network and rough set. The approach highly improves the generalization of the algorithm due to using the regularized neural network. The gained rules can better predict the points at which the stock will change the direction of its trend compared with the method using general neural network.

A time series can be converted into a series of subsequences by using the methodology of extremum. The subsequence is a static pattern. From the stock investor perspective, the mere change in the general trend (i.e., from increasing to decreasing) is very important, since it may trigger a buying or a selling action. Then, we identify the most important predicting attributes and target attribute from each pattern to form an information database. The general data-mining method (such as neural network) can then be used directly on the information database to uncover the rules for predicting the length of pattern (i.e., the turning point of a stock market quotation). Neural network are perhaps the most widely used and successful method for leaming data. Although it often provides a high level of predictive accuracy, rarely do they facilitate human inspection or understanding. This situation is due to the fact that neural network represents their learned solution in the architecture. In contrast to neural network, the solution formed by ?symbolic? system such as rough set, are usually   mailto:Xiaoye@F?ublic.Tpt.Tj.Cn   much more amenable to human comprehension. Therefore, we develop an algorithm, which uses regularized neural network (it has a high generalization faculty and is appropriate for the stock data mining of have high noisy) to learn the information table. Then, rough set is used to extract rule from the knowledge of neural network.

The remainder of the paper is organized as follows. In section 2, we describe the general methodology for preprocessing of stock time series data. In section 3, the algorithm of combining regularized neural network with rough set for data mining is presented. In section 4, the performance of the proposed algorithms is reported by experiment results. We conclude our study in section 5.

2 preprocessing the stock market time series  Definitionl: a time series is a collection of records, which were made sequentially in time.

Stock market time series is a collection of closing price of every transaction day sequentially in time.

The preprocessing of the time series includes the following steps: Step 1. Denoise, clean the raw data by signal processing  techniques to remove the additive noise.

Step 2. Divide the time series into patterns based on the  trend (i.e., increasing or decreasing) of closing price Step 3. Extract the features from pairs of adjacent patterns  that describe the database. Then, create an information databases about the patterns. Based on the databases, we can predict the length of a pattern.

2.1 Data cleaning  In stock time series database, the closing price of each day is composed of daily random fluctuations and long- term trends. Therefore we should clean the raw data.

We can assume that the raw data a,, ( n )  are composed of a long trends signal a(n)  and noise e(n) , that is  a,,(n) = d n ) + d n )  (1) The cleaning operation should produce 2(n)  to estimate  the long-term signal n ( n ) .  The noise signal is of random natilre and influenced daily by various sources. In contrast, the long-term signal is stable and deterministic. To clean the data, we use a low-pass filter operator, that eliminates the mostly noise part. One of the simplest is the finite impulse response (FlR) form. The filter is defined as  Where amw ( n )  is original data, 2(n) is cleaned data, c(i)  is vector with N coefficients.

The size and value of the coefficients c(i)  are subject to design; one can use the signal toolbox from Matlab to find    the coefficients. The result is an approximated version of the original signal.

2.2 Pattern dividing  The purpose of the pattern dividing is to find the turning point of the data trend, which is the end of the forward pattern and is the start of the second pattern. For the investor, the length of the quotation is the most important.

The most simplest method is to find the extremum, that is the point I,, &(t)ldrll=tx = O  , the t, is ordered in a set  T, =ko . . . .  tN,},then we eliminate the short intervals(1ess than the user defined threshold d). Then, T, divides the time series into Ne patterns.

2 3  Feature extraction  Because the data trend in every pattern is consistent, we can approximate the pattern with linear function. The length  interval is ti+l - t i ,  here, 0 < i < Ne -1,  it means the length of the quotation, which is the target attribute of the information database.

b. Slope of the pattern. For each interval, we take 2(n)  value in its start and end. We can now derive the slope as  (3)  Signal to noise ratio (SNR)'5'. Another important feature in stock time series is the Signal to noise mtio (SNR). This feature expresses the fluctuations of the series data. A high SNR value indicates that the series is unstable and influenced by different factors. We can calculate the S N R  in the following way over an interval (pattern) [ti, I ; + , ] .

a. = 3fi+, )-%) tic1 -ti  c.

-  Where &(t) =la@) -<@)I a(t)  is original data 2.4 Feature discretization  In order to express the knowledge in the rules, the data in the information database must be represented in the discrete form (integer, character string and enumeration type). The features are split according to naive scaler algorithm '61.

We can create an information database using the above features, in which slope and SNR are input (predicting) attributes and length is the target attribute (classification).

Neural network can be used to predict unknown value of target attributes in a manner similar to classification.

There are many noises in the stock time series database.

Therefore the general neural network will be over fitting while it learns the stock data. An effective method of avoiding the over fitting is regularization ?I.

We use a three layer regularized feed forward network to unknown knowledge in the information database. learn the information database, where the predicting  attributes are regarded as input and target attribute is regarded as the output. The local regularized least square algorithm based on single weight is introduced by us in [8] as follow:  3 Datamining  The steps of data mining in time series are as follows: - Use the regularized neural network to discovery the * Use Rough set to extract rules from the neural network.

3.1 Regularized neural network.

where wji is weight, j=1,2;-4V; i=1,2,-,nji nj is the number of weights connected with the jth node. N is the number of the network npdes (exclude the input nodes). M is the number of output nodes. Fqj i (k )  is the gradients of  the qth output node with respect to wji . Ck /1 <I is forgetting factor, and v 3 0  the regularization parameter.

3.2 Roughset  The knowledge learned from the information database S is distributed in the architecture of neural network. It is not facilitate human inspection or? understanding. In contrast, Rough set is usually much more amenable to human comprehension. Therefore we use the neural network to learn the data. Through learning, we can remove the data that cannot be learned from the information database S.

We consider it as noise data. Then, use the Rough set to extract a tidy rule set from the new information database Sn. This rule set is an approximate representation of the knowledge in the network.

Rule reduction is one of the major concerns in Rough set. The rule reduction is a process of core value reduction of the information table. During this process, only internal information provided by the data under consideration is used. We quote the algorithm of Literature [9].

4 Experiment result  We demonstrate our approach on the stock market database. The stock time series includes stock name, stock opening price and stock closing price. Because investors pay more attention to the change of the closing price, we only analyze the closing price. Stock prices are noisy and influenced daily by many ?buttertly effect?, data cleaning must be done prior to data mining.

For investor, the mere change in the general trend (i.e., from increasing to decreasing) is very important, since it  may trigger a buying or a selling action. Therefore our main interest is to predict the point at which the stock will change the direction of its slope. In this section, we demonstrate the process of data mining on the stock database fmm Shanghai Stock Exchange. We investigated the stocks? performance over a three-years period from 1998.1 to 2000.12.

4.1 Data preprocess.

First, we cleaned the original database of the 100 companies from Shanghai Stock Exchange using a low- pass filter described in section 2.1. We took bandwidth of O.l/day and size of 30 coefficients.

The pattern dividing and feature extraction in section 2.2 and 2.3 have resulted in a set of records, where each record is related to one pattern of a specific stock. The total number of 820 patterns forms the information table S.

The record attributes include interval slope, the Signal to Noise Ratio (SNR) and pattern interval length. The attributes of the pattern are represented in Table 1. Then we split the continuous attributes into discrete value (represented by character string). The related discrete attributes of the pattern are given in Table 2.

4.2 Training the neural network  For enhance the generalization of neural network, we divided the information table into a training set SI (include 600 patterns) and validation set S2 (220 patterns). The thermometer-coding scheme was used for representations of the attributes. Because the SNR2, Slope2 and Slope1 are split into three, four and four discrete value respectively, the number of input codes is 11. The length2 is split into three discrete values; therefore the output number is 3. The architecture of the R? is 11-20-3. The initial weights were randomly selected from 0 to 1. The parameters of the algorithm were chosen to be 1=0.999 , v=O.1  and pii (0)=lOOO , the error      Length2  performance function is MSE (Mean Square Error) that is 0.001. In the process of training, if the MSE is little than 0.001, we think it is learning success. Table 3 shows a comparison result of the RNN and BP.

We can see from Table 3 that the R" has the higher generalization performance (validation accuracy); despite they have the same training accuracy.

Lengthof Target interval of (classification  Table 1. The related attributes I Amibute I Amibute I Role in data I  name I Description I Mining sNR2 I SNR of second I Input  attem  attem Slope2 Slope of second Input : Slope1 Slope of first Input  I second pattern I attribute)  Table 2. Attributes discretization  Table 3 Training result  Training Validation  97.79 90.58 97.70 94.77  43 Rules extraction  The records that cannot be learned by R" are deleted from the training set S1. We acquired 14 rules by applying the rules extraction algorithm on the S1. The rules has the following form: Rulel: If SNR2 is Low and slope2 is Positive-large then Length2 is medium; Rule2 If SNR2 is High then Length2 is Long.

However we acquired 18 rules by using BP network tn learn the training set. The rules prediction accuracy using  the RNN for the validation set S2 is 85%; it is higher than the rule prediction accuracy of the BP algorithm (70.5%).

5 Conclusions  In this paper, we have combined two data mining technologies, the RNN and the Rough set for the stock market time series data mining. It sufficiently applies the high generalization performance of RNN and the rule generation capability of the Rough set. The discovered knowledge is much more amenable to human comprehension. The prediction accuracy on the stock market data is high. This algorithm will be useful for investment decision supports.

