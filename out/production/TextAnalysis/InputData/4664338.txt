NEWER: a NEuro fuzzy WEb Recommendation system

Abstract  In this paper we present NEWER, a neuro-fuzzy Web rec- ommendation system that dynamically suggests interesting pages to the current user. NEWER employs a neuro-fuzzy approach in order to determine categories ofusers sharing similar interests and to extract a recommendation model in the form offuzzy rules expressing associations between user categories and relevances ofpages. The derived model is used by an online recommendation module to dynami- cally suggest interesting links. Comparative accuracy re- sults show the effectiveness ofNEWER.

1. Introduction  In the era of the Web, the problem of information over- load is continuously expanding. When browsing the Web, users are very often overhelmed by a huge amount of in- formation available online. Indeed, the ever more complex structure of sites combined with the heterogeneous nature of the Web make navigation activity difficult for ordinary users, who often are faced with the challenging problem of finding the desired information in right time. An important step in the direction of alleviating the problem of infonna- tion overload is represented by Web personalization.

Web personalization can be simply defined as the task of adapting the information or services provided by a Web site to the needs and interests of users, exploiting the knowledge gained from the users' navigational behavior and individual interests, in combination with the content and the structure of the Web site [6]. Recommendation systems are one of the major examples of Web personalization.

To develop a Web recommendation system, two main problems have to be addressed: how to discover knowledge about user interests from Web data and how to exploit this knowledge to deliver intelligent recommendations. Both these tasks are characterized by uncertainty and vagueness.

A great deal of ambiguity pervades all stages of the user in-    teractions: from the definition of the user navigational mod- els to the recommendation process. Due to their character- istics, Soft Computing techniques (i.e. fuzzy logic, neural networks, neuro-fuzzy systems, etc) reveal to be particu- larly appropriate to deal under these conditions [4].

In this paper, we present NEWER, a neuro-fuzzy Web recommendation system able to support users during their navigational activity by dynamically suggesting links to pages that are retained interesting for them. NEWER em- ploys a hybrid approach based on the combination of the fuzzy reasoning with a neural network in order to determine user categories encoding interests shared by groups of users and to extract a recommendation model expressed by a set of fuzzy rules useful to provide dynamical predictions about Web pages to be suggested to the current user, according to the user categories previously identified.

2. The NEWER system  The NEWER system is designed to perform three se- quential steps:  ? Preprocessing oflogliles to identify user sessions and to create models of user navigational behavior.

? Knowledge discovery to derive aggregate user cat- egories encoding the common interests of groups of users and to derive a recommendation model.

? Recommendation to dynamically suggest interesting pages to the current user by exploiting the previously discovered recommendation model.

As illustrated in Figure 1, these steps are organized into two main modules: (i) an offline module that includes the first two steps to extract a recommendation model from Web usage data and (ii) an online module that performs recom- mendations. In the following subsections, we describe in more detail each step involved in NEWER.

Web log nles  ill OnllMMociule  Figure 1. Architecture of the NEWER system.

2.1. Preprocessing of log roes  During the preprocessing task, requests included in log files are structured into user sessions. Starting from user sessions, the behavior of each user is modeled by one vector which encodes the access pattern exhibited by the same user in that session.

To perform preprocessing of log files, we applied the strategy described in [3] that identifies user sessions and models the user navigational behaviors. Formally, we de- fine a user session as a triple Si === (Ui, ti, Pi) where Ui E U represents the user identifier, ti is the access time of the whole session, Pi is the set of all pages (with correspond- ing access information) requested during the i-th session.

Namely,  with Pik E P, where Nik is the number of accesses to page Pk during the i-th session and tik is the total access time to that page.

User sessions are used to create a model of the user behavior, as follows. Suppose that n is the number of the identified user sessions and m the number of different pages required in all the user sessions, we model the naviga- tional behavior of a user Ui (i = 1, ... ,n) through a vector bi = (b i !, bi2 , ... , bim) where  if page pjis accessed in session Si (1) otherwise  where lij is the access frequency to the j-th page in the i-th session. As a result, the preprocessing step derives a n x m behavior matrix B = [bij ] where each component represents the interest degree of the i-th user for the j-th page.

2.2. Knowledge discovery  Two main activities are carried out in the knowledge discovery step: categorization of user behaviors and discovery of the recommendation model. In the following both these activities are detailed.

Categorization of user behaviors In order to identify user categories, .a fuzzy clustering  process is applied to the behavior matrix B by means of CARD+, a fuzzy relational clustering algorithm that we proposed in [2]. A key feature of CARD+ is its ability to automatically categorize the available data into an optimal number of clusters. In fact, it is able to derive always the same number of clusters independently on the initial ran- dom number provided in input to the algorithm.

CARD+ partitions the available data by working on rela- tional data, Le. data that quantify the relation between each pair of objects. lYpically, the relation expresses the similar- ity degree existing between two objects.

In NEWER, to capture the similarity between two generic behavior vectors, a fuzzy similarity measure is pro- posed within CARD+. Specifically, each behavior vector is modeled as a fuzzy set and the similarity between two behavior vectors is expressed as the similarity between the corresponding fuzzy sets. To do so, the user behavior matrix B is converted into a matrix M = [ILij] which expresses the interest degree of each user for each page in a fuzzy way. A very simple characterization of the matrix F is provided as follows:  if bij < I Dmin if bij E [IDmin,IDmax] if bij > I Dmax  (2) where I Dmi'tt is a minimum threshold for the interest de- gree under which the interest for a page is considered null, and I Dmax is a maximum threshold of the interest degree,    Similarity values are mapped into the similarity matrix  Sim ~ [Sim'ij]i j=l, ... ,n where each component Si~ij ex- presses the simiiarity value between the user behaVIor vec- tors hi and bj calculated by using the fuzzy similarity mea- sure. Starting from the similarity matrix, the dissimilar- ity values are simply computed as Dissij == 1 -Simij, for i,j == 1, ... , n. These are mapped in a n x n matrix R == [Diss ij li,j=l,... ,n representing the relation m~~ix.

CARD+ implicitly partitions object data by denvlng the distances from the relational data to a set of G implicit pro- totypes that summarize the data objects belonging to each cluster in the partition. Specifically, starting from the rela- tion matrix R, the following implicit distances are computed at each iteration step of the algorithm:  for all behavior vectors i == 1, ... , n and for all implicit clusters c == 1, ... ,C, where Ze is the membership vec- tor for the c-th cluster, defined as on the basis of the fuzzy membership values Zci that describe the degree of belong- ingness of the i-th behavior vector in the c-th cluster. Once the implicit distance values dci have been computed, the fuzzy membership valueszei are updated to optimize the clustering criterion, resulting in a new fuzzy partition of be- havior vectors. The process is iterated until the membership values stabilize.

Finally, a crisp assignment of behavior vectors to the identified clusters is performed in order to derive a proto- type vector for each cluster, representing a user category.

Precisely, each behavior vector is crisply assigned to the closest cluster, creating 0 clusters:  (6)  Recommendation model discovery In this activity, both behavior vectors and discovered user  categories are employed to extract a recommendation model that represents the knowledge base to be used by the online recommendation module. Such model is expressed by a set of fuzzy rules which capture associations between behav- ior vectors and pages to be recommended in the following form.:  IF bl is Alk AND ... AND bm is Arnk THEN relevance of URLI is rlk AND ... AND relevance of URLm is r mk  for k == 1, , K where K is the number of fuzzy rules, Ajk' j = 1, , m are fuzzy sets with Gaussian member- ship functions defined over the input variables bj and rjk, j = 1, ... , m are fuzzy singletons expressing the amount of recommendation (relevance degree) of the j-th URL.

The main advantage of using a fuzzy knowledge base for the recommendation system is readability of the extracted knowledge. Actually, fuzzy rules can be easily understood by human users since they can be expressed in a linguis- tic fashion by labeling fuzzy sets Ajk with linguistic terms such as LOW, MEDIUM, HIGH. Hence, a fuzzy rule in the web recommendation system can assume the following lin- guistic form:  IF (the interest degree for URL1 is LOW) AND" ..

(the interest degree for URLm is HIGH) THEN (recommend URL1 with relevance 0.3) AND ...

(recommend URLm with relevance 0.8)  In NEWER, the discovery of fuzzy recommendation rules is performed through the learning of a three layer feed- forward neuro-fuzzy network that encodes in its topology the structure of a Fuzzy Inference System. The network consists of three layers.

Units in the first layer L1 (the membership layer) receive the degrees of interest for visited pages in a behavior vec- tor (b1 , b2, ... , bm ) and evaluate the Gaussian membership  Then, for each cluster Xc a prototype vector Ve (Vel, Vc2,? .. ,Vern) is derived, where  EbiEXc bij Vcj == IXcl j == 1, ... ,m.

The values Vej represent the significance (in terms of rele- vance degree) of a given page Pj to the c-th user category.

Summarizing, CARD+ mines a collection of C clusters from behavior data, representing user categories. Each category prototype Ve == (Vel, Vc2, ... , Vern) describes the typical navigational behavior of a group of users with simi- lar interests. Moreover, CARD+ provides a partition matrix M == [micl where each entry represents the membership degree of the i-th user to the c-th category.

(5)  (3)  (4)  1 ::s c ~ C.

after which the page is considered surely preferred by the user. Of course, other membership functions can be used to express the interest degree. We explore these possibilities in our future research.

In this way, the similarity of two generic users is intu- itively defined as the similarity between the corresponding fuzzy sets (rows of F). We measure the similarity between two fuzzy sets as the ratio of two quantities: the cardinality of the intersection of the fuzzy sets and the cardinality of the union of the fuzzy sets. The intersection of two fuzzy sets is defined by the minimum operator while the union of two fuzzy sets is defined by the maximum operator. Fi- nally, the cardinality ofa fuzzy set (also called "a-count") is computed by summing up all its membership values. Sum- marizing, the similarity between any two users bx and by is defined as follows:  . E~l min {J-tbor-j, J-tb1/j } S~mfuzzy(hx,hy)== ~m { ....?}'  L.Jj=1 max J-LbxJ' J-LbyJ     functions representing fuzzy sets. In this layer, units are ar- ranged in K groups, one for each fuzzy rule. The k-th group contains 1n units corresponding to the fuzzy sets which de- fine the premise part of the k-th rule. In detail, each unit of the layer L1 receives the interest degree for the j-th page bj , j == 1, ... ,m and computes its membership value to fuzzy set Ajk , k == 1, ... ,K as follows:  (7)  where Cjk and ajk are respectively the center and the width of the Gaussian function.

The second layer L2 (the rule layer) contains K units that compute the fulfillment degree of each rule. In this layer, no modifiable parameter is associated with the units.

The output is derived by computing the rule activation strength, a~ follows:  m  0;2) == II O;~) j == 1, ... , m (8) j=1  considered is experimentally established. The values in the output vector rd i == (rdil , rdi2 , . .? , rdim ), (i == 1, ... , n) are hence calculated as:  rdij == mict VjCt + .?.+ miq Vjcl j === 1, ... ,m (11) Once the training set has been constructed, the neuro-  fuzzy network can enter the learning phase to extract the knowledge embedded into the training set and represent it as a collection of fuzzy rules.

Firstly, behavior data and extracted user categories are employed to initialize the structure and the involved param- eters of the neuro-fuzzy network. In particular, the number of fuzzy rules (and the number offuzzy sets used to partition data) together with the parameters that define the premise and the consequence of each rule are established.

Successively, the neural network enters in a learning phase to optimally adjust the premise and the consequent parameters of the derived fuzzy rule base. Major details on the algorithms underlying the neuro-fuzzy learning strategy can be retrieved in [1].

2.3. Recommendation  m  J.tk(b(D?) = II j.Ljk(bjO?) (12) j=1  The online module performs the ultimate task of rec- ommendation, Le. suggesting the URLs of the Web site that are judged relevant for the current user. Specifically, when a new user accesses the Web site, this module matches the current partial session against the fuzzy rules currently available in the knowledge base and derives a vector of rel- evance degrees by means of a fuzzy inference process.

Formally, when a new user accesses to the site, an ac-  tiv.e user's curreo.t session )'s cf.eat.ed in the form of a vector D (D) (D) (D)h == b1 , b2 , ??? , bm where some values are equal  to zero, corresponding to unexplored pages. Each time the user requests a new page, the vector is updated. To maintain the active session, a sliding window is used to capture the most recent user behavior.

Based on the set of K fuzzy recommendation rules, the online module provides URL relevance degrees by means of the following fuzzy reasoning procedure:  1. Calculate the matching degree of current session h(D) to the k-th rule, for k 1, ... , K by means of the product operator:  'E~=1 rdjkl-tk (b(O?) retj = "K (beD?) (13)  L.Jk=1 JLk  2. Calculate the relevance degree rdf} for the j-th URL, j == 1, ... , mas:  (9)  (10)  j==l, ... ,m  where the input vector hi represents the i-th user behavior vector identified by the preprocessing phasc,and the output vector rdi expresses the amount of URLs recommendation for the user related to the i-th behavior vector. To com- pute the values in rdi , we exploit information embedded in the user categories extracted through fuzzy clustering. Pre- cisely, for each vector bi,we consider its membership to the clusters (user categories) expressed by membership values  {mic}c=I, ... ,C in the partition matrix M. Then, we identify the 1top matching user categories Cl, ... , Cl E {1, ... , C} as those with the highest membership values. The num- ber l of top matching session categories which have to be  The third layer L3 (the output layer) provides the outputs of the network, i.e. the relevance values of the m URLs to be used for recommendation. Each relevance value is obtained by inference of rules, according to the following formula:  ",K 0(2) 0~3) == L..Jk=l k rjk  J E~=1 0;;) In order to learn fuzzy rules for link suggestion, the  neuro-fuzzy network should be trained on a set of input- output samples describing the association between user be- havior vectors and preferred URLs. Precisely, each training sample should describe the association between a behavior vector, Le. the vector of interest degrees for visited URLs during one session, and the amount ofrecommendation (rel- evance degree) for each URL. Thus the training set is a col- lection of input-output vectors:     This inference process provides the relevance degree for all the considered m pages, independently on the actual nav- igation of the current user. In order to perform dynamic link suggestion, the recommendation module firstly identi- fies URLs that have been not visited by the current user, Le.

all pages such that b~ = o. Then, among unexplored pages, only the first top-N pages having the highest relevance de- gree are recommended to the user. In practice, a list of links is dynamically included in the page currently visited by the user.

3 Experimental results  NEWER was tested by carrying out a set of experiments on the log files from an Italian Web site of the Japanese movie Dragon Ball (www.dragonballgt.it). The choice of this site was due to its high daily number of accesses (thou- sands of visits each day), especially from younger people.

The considered log files contain user requests covering a time period of 12 hours (from 10:00 a.m. to 22:00 p.m.), for a total of 12,300 requests.

Firstly, the NEWER preprocessing step was applied to identify user behavior vectors from log files. Through this step, the interest degrees of each user for each visited page were evaluated and these values were mapped into a 200 x 42 behavior matrix.

Next, categorization of user behaviors was executed. We carried out several runs of CARD+ by setting different ini- tial number of clusters Cmax = (5, 10, 15). We observed that CARD+ provided data partitions with the same final number of clusters C = 5, independently on the initial number of clusters Cmax ? Figure 2 illustrates a graphical representation of the identified user categories. Here, each row represents a user category and each column represents a page. Different colors are used for different pages; for pages which are not visited the white color is used.

Once user categories were identified, the step of recom- mendation model discovery was applied. Firstly, a dataset of 200 input-output samples was created in the way de- scribed in section 2.2 (formula 10). Each sample of the dataset included 84 components (42 corresponding to the pages of each behavior vector and the remaining 42 calcu- lated by employing the fonnula 11). Successively, the infor- mation about the extracted user categories was used to ini- tialize the parameters of fuzzy rules and to derive an initial recommendation model. Finally, the neuro-fuzzy strategy was applied to learn the ultimate recommendation model. A neural network with 42 inputs (corresponding to the compo- nents of the behavior vector) and 42 outputs (corresponding to the relevance values of the Web pages) was considered.

The intemallayer of the network contains 5 units that com..

pute the fulfillment degree of each rule. In order to evaluate the quality of the recommendation model, a 10-fold cross-   Figure 2. Graphical representation of the identified user categories.

validation procedure was performed. Among the 10 cre- ated models, we choose a~ final recommendation model the model having the lowest error on the test set. The derived recommendation model is represented by a fuzzy rule base composed of 5 rules.

The last step of NEWER is to use the discovered rec- ommendation model to infer the relevance vector for a cur- rent user as described in section 2.3. Hence, the pages not yet visited by the current user were ordered on the basis of the corresponding relevance values and the 5 pages with the highest values were recommended.

In order to evaluate the effectiveness ofNEWER, we per- formed an evaluation sequence organized as follows. Web pages visited in each session of the test set were divided ran- domly into input set and measurement set. The input set was treated as active session and it was given in input to our rec- ommendation process to determine the recommended pages or recommended set. To measure the accuracy of the rec- ommendations provided by NEWER, we used the mettics Precision, Recall and F1 measure [5]. Higher values of these measures indicate better recommendation accuracy.

During the simulation experiments, for each behavior vector of the test set we considered all possible sub-vectors including a number ofpages between 2 and 8. For each sub- vector representing the active session, we determined the recommendations through the neuro-fuzzy inference pro- cess. Hence, the average values of the accuracy metrics were calculated. To evaluate the goodness of the obtained values, we compared NEWER with other three recommen- dation approaches proposed in literature:  ? The Nearest Profile (NP) based recommendation ap- proach [8].

? The K Nearest Neighbors (KNN) [8]. In our experi- ments, the values of K and N are respectively fixed to 10 and 5.

? The recommendation approach based on the fuzzyap-    Precision a user to belong to several categories with different mem- bership degrees.

Recall  (a)  4 5 6  Sub-vector size  4 Conclusions  In this paper we have presented NEWER, a neuro-fuzzy Web recommendation system which is able to dynamically suggest interesting pages to the currently connected users.

Application of NEWER on a highly-visited Web site has shown its validity in extracting fuzzy models useful for rec- ommendation. Comparative results highlight that the pro- posed NEWER system can be effective for recommenda- tion, leading to a quality of the generated recommenda- tions comparable and often significantly better than those of other recommendation approaches. The promising re- sults encourage the application ofNEWER to a wider range of Web data~ This is the subject of our on-going research projects.

-+-PYoposed NF -NP  KNN ~FARf44  ....-FARSP  1.2  0,8  ~ 0,6 0,'-  0,2  0,8  0.1 0,6  I 0,5 1 0." - 0,3  0.1  o  Sub..YedOr size  (b) References  Figure 3. Comparison of average precision (8), recall (b), F1 (c) per sub-vector size be- tween NEWER and four other recommenda- tion approaches.

proximate reasoning (FAR) proposed in [7]. For this approach two variants were implemented, considering two different combinations for the operators used for the t-normlintersection and t-conormlunion in the rec- ommendation inference procedure: max-min (FARSP) and sum-product (FARMM).

Figure 3 shows the comparative results. It can be ob- served that recommendations generated by NEWER are better than those obtained with the other approaches, es- pecially in correspondence to higher sub-vector sizes. The better performance ofNEWER for longer sub-vectors is due to the fact that longer vectors match more likely with dif- ferent user categories. In this situation, a neuro-fuzzy ap- proach is expected to be more effective, because it enables  [1] G. Castellano, C. Castiello, A. Fanelli, and C. Menear.

Knowledge discovering by a neuro-fuzzy modelling frame- work. Fuzzy sets and Systems, 149:187-207,2005.

[2] G. Castellano, A. Fanelli, and M. A. Torsello. Web user pro- filing using relational fuzzy clustering. In P.Y.Cao, H.Cheng, D.Hung, C. Kahraman, C.W.Ngo, Y.Ohsawa, M.G.Romay, M.C.Su, A. Vasilakos, D.Wang,and P. Wang, editors, In- formation Sciences 2007, pages 1433-1439. World Scientific Publishing Co. Pte. Ltd., 2007.

[3] G. Castellano. A. M. Fanelli,C. Menear, and M. A. Torsello.

Log data preprocessing for mining web browsing patterns.

In Proceedings of the 8th Asian Pacific Industrial Engineer- ing And Management Systems Conference (APIEMS 2007), Kaohsiung, Taiwan, December 2007.

[4] E. Frias-Martinez, G. Magoulas, S. Chen, and R. Macredie.

Modeling human behavior in user-adaptive systems: recent advances using soft computing techniques. Expert Systems with Applications, 29 (2):320-329, 2005.

[5] G. Karypis. Evaluation of item-based top-n recommendation algorithms. In Proceedings of the tenth International confer- ence on lnfomlation and knowledge management (CIKM01), pages 247-254, Atlanta, Georgia, October 2001.

[6] B. Mobasher. Web usage mining and personalization. In M. P. Singh, editor, Practical Handbook of Internet Comput- ing. eRC Press, 2005.

[7] O. Nasraoui and C. Petenes. Combining web usage mining and fuzzy inference for website personalization. In Proceed- ings of WEBKDD 2003: Web mining as premise to effective Web applications, pages 37-46, 2003.

[8] B. M. Sarwar, G. Karypis, J. A. Konstan, and J. Riedl. Appli- cation of dimensionality reduction in recommender system - a case study. In Proceedings ofthe WebKDD 2000Web Mining for E-Commerce Workshop at ACM SIGKDD 2000, Boston, 2000.

