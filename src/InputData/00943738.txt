Mining Fuzzy Sequential Patterns from Multiple-Item Transactions

Abstract  Transaction data in real-world applications usually consist of quantitative values, so designing a sophisticated data-mining algorithm able to deal with various types of data presents a challenge to workers in this research field. Since sequential patterns are also very important for real-world applications, this paper thus focuses on finding fuzzy sequential patterns from quantitative data. A new mining algorithm is proposed, which integrates the fuzzy-set concepts and the AprioriAll algorithm. It first transforms quantitative values in transactions into linguistic terms, then filters them to find sequential patterns by modifying the AprioriAll mining algorithm. Each quantitative item uses only the linguistic term with the maximum cardinality in later mining processes, thus making the number of fuzzy regions to be processed the same as the number of the original items. The patterns mined out thus exhibit the sequential quantitative regularity in databases and can be used to provide some suggestions to appropriate supervisors.

Keywords: data mining, fuzzy set, quantitative data, sequential pattern, transaction.

1. Introduction  Among the topics of data mining, finding useful sequential patterns is very interesting. A sequential pattern is an expression X-. Y, where Xi s  a set of items and Y is another set of items. It means in the set of transactions, if a customer buys all the items in X at some time, then he will buy all the items in Y at some other time with a high probability. It is thus concerned with inter-transaction patterns, which are ordered itemsets. In the past, several mining algorithms for finding sequential patterns were proposed. Most of them however focused on binary valued transaction data. Since transaction data in real-world applications usually consist of quantitative values, designing a sophisticated data-mining algorithm able to deal with various types of data presents a challenge to workers in this research field.

In this paper, we thus propose a fuzzy mining algorithm to find fuzzy sequential patterns from quantitative data. The proposed algorithm integrates the fuzzy-set concepts and the AprioriAll algorithm [SI.

It first transforms quantitative values in transactions into linguistic terms, then filters them to find sequential patterns by modifying the AprioriAll mining algorithm. The next quantitative transactions of a customer can thus be predicted according to hidher previous transactions. The patterns mined out thus exhibit the sequential quantitative regularity in databases and can be used to provide some suggestions to appropriate supervisors.

2. Review of Agrawal et al.?s data-mining algorithms  The goal of data mining is to discover important associations among items such that the presence of some items in a transaction or for a customer will imply the presence of some other items. To achieve this purpose, Agrawal and his co-workers proposed several mining algorithms based on the concept of large itemsets to find association rules or sequential pattems in transaction data [l-51. In addition to proposing methods for mining association rules from transactions of binary values, Agrawal et al. also proposed a method [SI for mining association rules from those with quantitative and categorical attributes.

Agrawal and Srikant also proposed the AprioriAll mining algorithm for finding sequential patterns from transaction data [ 5 ] .  Five phases are included in this algorithm. In the first phase, the database (D)  is sorted, with customer-id as the major key and transaction-time as the minor key. This phase thus converts the original transaction database into a database of customer sequences. In the second phase, the set of all large itemsets are found. In the third phase, each large itemsets are mapped to a contiguous integer. In the fourth phase, the set of integers mapped are used to find the desired sequences. In the fifth phase, the maximal sequences are then derived among the set of  0-7803-7@78-3/0U$10.00 (C)U)ol IEEE. Page: 1317    large sequences.

CID Transaction Time 1 May5 '99 1 May 17 '99 2 May 13'99 2 May19'99 2 May21 '99 3 May7'99 3 May 15 '99 4 May11 '99  3. Review of Fuzzy Set Concepts  purchased items (B92)(C,3)  ,(E,3) (DS)  (B72)(C,4) (D,9)  (A,7)(B98) (D,7)(E,9) (B,l)(C,3)  Fuzzy set theory was first proposed by Zadeh in 1965 [ 9 ] .  Fuzzy set theory is primarily concerned with quantifying and reasoning using natural language in which words can have ambiguous meanings. This can be thought of as an extension of traditional crisp sets, in which each element must either be in or not in a set.

Formally, the process by which individuals from a universal set X are determined to be either members or non-members of a crisp set can be defined by a characteristic or discrimination finction [9]. For a give crisp set A, this tinction assigns a value p~ ?x) to every x E X such that  1 if and only if X E A 0 if and only if x e A  Thus. the function maps elements of the universal set to the set containing 0 and 1. This kind of function can be generalized such that the values assigned to the elements of the universal set fall within specified ranges, referred to as the membership grades of these elements in the set. Larger values denote higher degrees of set membership. Such a function is called the membership function, PA by which a fuzzy set A is usually defined. This function is represented by  P A  :X+[O,11,  where [0, I ]  denotes the interval of real numbers from 0 to I ,  inclusive. The function can also be generalized to any real interval instead of [O,l].

A special notation is often used in the literature to represent fuzzy sets. Assume that X I  to x,, are the elements in fuzzy set A, and ,U, to are, respectively, their grades of membership in A. A is then usually represented as follows:  A=/X, 1x1 + , ~ 2  / x 2  +...+,U,, Ix,,.

An a-cut of a fuzzy set A is a crisp set A, that contains all elements in the universal set X with membership grades in A greater than or equal to a specified value of a. This definition can be written as:  The scalar cardinal@ of a fuzzy set A defined on a finite universal set X is the summation of the .

membership grades of all the elements of X in A.  Thus,  Among operations on fuzzy sets are the basic and commonly used complementation, union and intersection, as proposed by Zadeh.

(1) The complementation of a fizzy set A is denoted by T A ,  and the membership function of 1 A is given by:  P Y A  (x) =l -PA 9 v X?X.

(2) The intersection of two fuzzy sets A and B is denoted by A n B, and the membership function of A n B is given by:  (3) The union of hzzy  sets A and B is denoted by A U B, and the membership finction of A U B is given by:  The above fuzzy operations will be used in the proposed mining algorithm to find linguistic association rules.

4. The Approach with An Example  In this section, an example is given to illustrate the proposed mining algorithm for fuzzy sequential pattems. This is a simple example to show how the proposed algorithm can be used to generate interesting sequential pattems for customers' purchase behavior according to historical data. The data set, including 1 6 transactions, is shown in Table 1.

0-7803-7078-3/0V$10.00 (C)zoOl IEEE. Page: 1318    May25 ?99 1 (B,3)(C,5) There are five kinds of products (A, B, C, D and E) in this example. Each transaction includes a CID(customer ID), transaction time and some purchased items. Each item is represented by a tuple (item name, item amount). The data set in Table 1 is then grouped by customers? transaction time. Results are shown in Table 2.

Table 2: The data set grouped by customers ICIDI Items and Ouantities 1  Assume the fuzzy membership functions for the product quantities are shown in Figure 1.

0 1  6 , , Number of item Figure 1 : The membership functions used in this  example  In this example, the quantities purchased are divided into three fuzzy regions: Low, Middle and High. Thus, three fuzzy membership values are produced for each transaction according to the predefined membership functions. For the transaction data in Table I ,  the proposed mining algorithm proceeds as follows.

STEP 1 :  Transform the quantitative values of each transaction datum into h z z y  sets. Take the product B bought by customer 1 as an example. The quantity ?2? is converted into a fuzzy set (O.S/Low+O.2/Middle+O.O/High) using the given  membership functions (Figure 1). This step is repeated for the other items and customers, and the results are shown in Table 3. The notation item.term is called a fuzzy region.

Table 3: The fuzzy sets are in this example  STEP 2: Calculate the scalar cardinality of each item in each customer?s transaction data as the count value.

Here, the maximum operator is used for the same region of the item in a customer?s transaction data.

Take the region D.Middle as an example. Its scalar cardinality = (0.0 + mar(0.8,0.4) + 0.8 + 0.8 + 1.0 + 1 .O) = 4.4. This step is repeated for the other regions, and the results are shown in Table 4.

STEP 3: The fuzzy region with the highest count among the three possible regions for each item is found. Take item A as an example. Its count is 0.0 for Low, 0.8 for Middle, and 0.2 for High. Since the count for Middle is the highest among the three counts, the region Middle is thus used to represent the item A in later mining processes. This step is repeated for the other items. Thus, ?Low? is chosen for B,  ?Middle? is chosen for C and 0, and ?Highli is chosen E.

STEP 4: The count of any region selected in STEP 3 is checked against the predefined minimum support value a . Assume a is set at 2 in this example.

Since the count values of BLOW, C.Midde. D.Middle and E. High are larger than 2, these items are put in L,.

STEP 5 :  Set F I .

STEP 6: Generate the candidate set C,,, from L,. C2 is  0-7803-7078-3/0lf$l0.00 (C)U)ol IEEE. Page: 1319    first generated from L,  as follows: (B.Low, CMiddle), (B. LOH; D. Middlej, (B. Low; E. High), (C. Middle, D.Middle). (CMiddle, E. High), (D.Middle, E. High).

Customer (1) (3) 1 0.8 0.0 2 0.8 0.4 3 0.0 0.0  STEP 7: Do the following substeps for each newly formed candidate itemset.

(a) Calculate the fuzzy membership value of the  candidate itemset in each customer?s transaction datum. Here, the minimum operator is used for the intersection. Take (B.Low; C.Midd1e) as an example. Its membership value for Customer I is calculated as: min(0.8, 0.4)=0.4. The results for the other customers are shown in Table 5.

[(I) (3)l 0.0 0.4 0.0  iddle)  (b) Calculate the scalar cardinality (count) of each candidate 2-itemset in the transaction data.

Results for this example are shown in Table 6.

I 1 I 0.0 I 0.0 I 0.0  Table 6: The fuzzy counts of the itemsets in C, I  I  Itemset I Count B. Low, CMiddle I 2.6  Customer (3) (I) 1 0.0 0.0 2 0.8 0.8 3 0.0 0.0  B. Low, D. Middle  [( 3) ( I ) ] 0.0 0.8 0.0  (c) Check whether these counts are larger than or equal to the predefined minimum support value 2.

Two itemsets, including (B. Low, C. Middle), (D.Middle, E.High), are thus kept in L2. Customer 1 (3) I ( I )  STEP 8: IF L,+, is null, then do the next step; otherwise, set ~ r + l  and repeat STEPS 6 to 8. Since L2 is not null in the example, r=r+l=2. STEPS 6 to 8 are then repeated to find L3. C, is first generated from L2.

but no itemsets can be formed for C,. L3 is thus an empty set. STEP 9 then begins.

I [( 3) ( I ) ]  STEP 9: The large itemsets are mapped to contiguous integers and these integers are put in L,. The results are shown in Table 7.

2 I 0.8 I 0.8 3 I 0.0 I 0.0  Table 7: The large itemsets mapped to contiguous integers  I 0.8 I 0.0  STEP 10: Set z=1.

STEP 11: Generate the candidate set Cz+I from L2. C2 is first generated from LI as follows: [ ( I )  ( I ) J ,  [(I) (2)J,  (6)]. Note that the same combinations with different orders are thought of as different.

[(2) (Ill. [(I) @)I, [(3) (01 ..., [(j) (6)J F-5) 0)l. [(6)  STEP 12: Do the following substeps for each newly formed candidate sequence.

(a) Calculate the fizzy membership value of the  candidate sequence in each transaction datum.

Here, the minimum operator is used for the intersection. Take [(I)  (3)J as an examples. Its membership value for Customer 1 is calculated as: min(0.8, O.O)=O.O since no item 3 appears after item I .  The results for the other customers are shown in Table 8 and Table 9.

)I 0.6 0.0 0.0  3 1 1.0 0.6 0.6  The results for the other 2-sequences can be derived in similar fashion.

(b) Calculate the scalar cardinality (count) of each candidate 2-sequences in the transaction data.

Results for this example are shown in Table 10.

0-7803-7078-3/0l/$10.00 (C)U)ol IEEE. Page: 1320    Sequences Count Sequences Count [ ( I )  ( I ) ]  0.0 ((2) (2)] 1.0 [ ( I )  (2)J I .4 [(2) (3)J 1 .o r(2) (111 0.0 ((3) (2)J 2.4  (c) Check whether these counts are larger than or equal to the predefined minimum support value 2.

Three sequences, including [(3) (I)], [(6) (I)], [(3) (2)J, are thus kept in L2.

STEP 13: IF L,+, is null, then do the next step; otherwise, set r=r+l and repeat STEPS 11 to 13. Since Lz is not null in the example, ~ r + l = 2 .  STEPs 11 to 13 are then repeated to find L3. C, is first generated from L2, but no sequences are formed for C3. L3 is thus an empty set. STEP 14 then begins.

STEP 14: Check whether the pattems are redundant pattern. Since the sequence ((3) (IJJ, which is [(D.Middle) (B. Low)], belongs to [(6) (I)], which is [(D.Middle, E. High) (B.Low)], the pattern [(D.Middle) (B.Loiv,J is then deleted in this example. The following two sequential pattems are thus output to users:  Table 1 1 : The final sequential pattems and their codes  The two sequential patterns above are thus output as meta-knowledge concerning the given transactions.

5. Conclusion  In this paper, we have proposed a novel data-mining algorithm, which can process transaction data with quantitative values and discover interesting sequential patterns among them. The patterns can thus predict what products and quantities will be bought next for a customer and can be used to provide some suggestions to appropriate supervisors.

Although the proposed method works well in data mining for quantitative values, it is just a beginning.

There is still much work to be done in this field. Our method assumes that the membership functions are known in advance. In [6, 71, we also proposed some fuzzy learning methods to automatically derive the membership functions. In the future, we will attempt to dynamically adjust the membership functions in the proposed mining algorithm ?to avoid the bottleneck of membership function acquisition. We will also attempt to design specific data-mining models for various problem domains.

