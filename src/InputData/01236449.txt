A Distributed and Mobile Data Mining System  Frank Wang and Nu Helian

Abstract-Most of the popular data mining algorithms are designed to work for centralized data and they often do not pay attention to the resource constraints of distributed and mobile environments. In support of the third generation of data mining systems on distributed and massive data, we proposed an efficient distributed and mobile algorithm for global association rule mining, which does not need to ship all of local data to one site thereby not causing exc?essive network communication cost. The algorithm is implemented in PUSQL for coupling association rule mining with relational database system, well-used in organizations and communities. The experiments show that this algorithm implemented in PUSQL beats classic Apriori algorithm for large problem sizes, by factors ranging from 2 to more than 20, and this gap grows wider when the volume of transactions further grows up.

Keywords: distributed data mining, mobile data mining, PUSQL, Oracle cursor, relational database, Heterogeneous Services agent, communication overhead

I. Introduction With the explosion of the commodity internet and the  emergence of wide area high performance networks, mining distributed data is becoming recognized as a fundamental scientific challenge. The Internet, corporate intranets, sensor networks, and even scientific computing domains support this observation[l]. We are also witnessing increasing demands on mobile computing to provide the types of support required by a growing number of mobile workers. Such individuals require working as if in the office but in reality they are working from remote location including homes, clients? premises, or simply while en route to remote locations. The ?office? may accompany a remote worker in the form of laptops, palmtops, handhelds, embedded systems, and wearable computers, or other Internet access device. With the rapid expansion of cellular, wireless, and satellite communications, it will soon he possible for mobile users to access any data, anywhere, at any time. Advanced analysis of distributed data for extracting useful knowledge is the next natural step in the increasingly connected world of ubiquitous, distributed and mobile computing.

11. Algorithm Most of the popular data mining algorithms are  designed to work for centralized data and they often do not pay attention to the resource constraints of distributed and mobile environments. In support of the third generation of data mining systems on distributed and massive data, we proposed an efficient distributed and mobile algorithm[Z] for global association rule mining, which does not need to ship all of data to one site thereby not causing excessive network communication cost. In this algorithm the contribution from each transaction is comprehensively taken into account by growing a prefix tree for each transaction and enumerating all subsets of the transaction itemset. There is no need at all to store and re-scan the previously-scanned transactions, which will be discarded after a single pass[2]. The algorithm is implemented in PUSQL for coupling association rule mining with relational database system, well-used in organizations and communities. In each site, attributing to the integrity of the data structure designed in this algorithm, the locally enumerated itemset counters can be stored in a pair of local relational tables. The power of generating ad hoc queries in PUSQL ensures fast access to any desired counter. The local absolute support count for each enumerated itemset is first found. The global absolute support count for each itemset can then be determined by summing up, for each enumerated itemset, the local support of that itemset in all the distributed sites.

In. Architecture A distributed data mining system consists of a single  logical database that is split into a number of fragments, as shown in Fig.1. Each fragment is stored on one or more computers under the control of a separate DBMS, with the computers connected by a communication network (wiredly and wirelessly). Each site is capable of independently processing user requests that require access to local data (that is, each site has some degree of local autonomy) and is also capable of processing data stored on other computers in the network.

0-7803-7840-7/03/$17.00 0 2 0 0 3  IEEE.

-916  mailto:f.wana@londonmet.ac.uk   Figure 1 The architecture for a distributed and mobile data mining system. In this system. the data mining (DM) algorithm have been encapsulated into SQL Server stored prccedures.

As shown in Fig.1, with mobile database, users have access to corporate data on their laptop, PDA, or other Internet access device that is required for applications at remote sites. Depending on the particular requirements of mobile applications, in some cases the user of a mobile device may log on to a corporate database server and work with data there, while in others the user may download data and work with it on a mobile device or upload data captured at the remote site to the corporate database.

Our preliminary results indicate that OUT PUSQL implementation of our distributed ScanOnce algorithm is much faster than Apriori mining [3]. As shown in Figure 1, three desktop computers, one laptop computer and one pocket computer were used in the experiments. The desktop computers were Intel Pentium machine with Windows 2000 Advanced Server operating system and Oracle9i enterprise edition. The desktop computers were connected by the 10 Mbps MAN Network. The laptop computer and pocket computer roaming across the North Campus and City Campus of the London Metropolitan University, were used as mobile database platforms. Both of these computers were equipped with Wireless LAN cards (11 Mbps). The laptop (1.1 MHz CPU, 512MB RAM) was loaded with Oracle9i enterprise edition and Microsoft Access X P  whereas the pocket computer (Compaq iPAQ Pocket PC H3970, Windows CE 2.0, 400 MHz CPU, 64 hlB RAM, 288MB Flash ROM) was loaded with Wireless Database 4.0 (KelBran Software)[4]. Wueless Database supports a subset of the standard database SQL language.

This feature allows us to access large databases (up to 1GB data) remotely and create our own query for distributed data mining with the SQL query wizard, as illusQated in  Figure 2.



IV. Experimental Tests The experiments were conducted on a synthetic database, generated using the procedure described in [5-6]. In this data set, the maximum 'transaction size and average transaction size are set to 20 and 10, respectively The number of transactions in a single site ranges from 200,000 to 5 millions, which occupies up to 450 MB space. The experiments compared total mining time of distributed mining (Move Result) versus centralized mining (Move Data). For completeness we included the mining time on the mobile platform (see Fig.1 for reference). The total mining time is the time it takes to transfer any data (communication), build/transfer models, and score the validation set back at the control workstation. Our preliminary results indicate that OUT PUSQL implementation of our distributed ScanGnce algorithm is much faster than Apriori mining. Furthermore, distributed ScanOnce scales much better than Apriori. This is mainly because the wasteful operations of unnecessarily rescanning those previously-scanned subsets have been avoided by this new algorithm. It must be cautioned that error rates for distributed mining might be highly dependant on the organization ,of the data set and/or other factors. More extensive tests are currently under way.

The experiments show that this Dismbuted ScanOnce algorithm in PUSQL beats classic Apriwi algorithm, which requires repeated scans of the databases thereby shipping all of the data to one site and consequently causing excessive network communication overhead, for large problem sizes, by factors ranging from 2 to more than 20.

-917-    Acknowledgement The authors thank Mr. Kamran Raza, Mr. Kashif Munir,  Mr. Muhammad Azizur Rahman, Mr. Kevin Yang, Dr. Na Helian and Prof Algirdas Pakstas from London Metropolitan University, Dr. Jian'an Luan from Cambridge University, Dr. Yongqing Ma from Oxford University for their technical support in experiments.

Figure 2 The roaming pocket computer was used as mobile database platform.

