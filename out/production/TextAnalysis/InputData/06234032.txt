

Abstract: Apriori algorithm is an influential data mining algorithm which can mining the frequent sets of Boolean association rules. But its efficiency is not high and cannot do dynamic mining, for these reasons a new association rules algorithm which is suitable for dynamic database mining was proposed. Furthermore, the new algorithm is applied to the web log mining. Compared with original algorithm, experiments show that the performance of the new algorithm is improved to some extent.

Keywords: web log mining; correlation analysis; Apriori  algorithm

I.  INTRODUCTIONS The association rule mining is one of the most common data  mining tasks. It has a wide range of applications in E- commerce. The most famous algorithm is Item-to-Item collaborative filtering algorithm which was first proposed by Amazon[1]. Apriori algorithm is an influential data mining algorithm which can mining the frequent sets of Boolean association rules, it also be the hotspot of application and research both at home and abroad: Lili Kuang contrasted the ideas and disadvantages of Apriori algorithm and FP-Tree algorithm[2]; Ma Qiang used the binary representation for items and improved the generation of frequent itemsets, which greatly improving the efficiency of the algorithm with only one scan over the database[3]; In 2010, Xiaoyan Dai compared improved strategies and limitations of several mainstream improved Apriori algorithm [4]; There are many more Apriori researches on reducing the algorithm complexity and improving its efficiency[5-8].

Web log mining, which according to web access logs, can explore the relationship between user behavior and page content. There are mainly three purposes of web log mining researches at home and abroad[9]: performance analysis of website; improve the website design; understand the user access intent, the typical representative please refer to [10] and [11]. Apriori algorithm mining association rules only in static transactional database, but in actual data mining, the data in database are always changed, and transaction data and access logs are always updated. Therefore, it is necessary to research dynamic recommendation algorithm based on Apriori and achieve dynamic recommendation program for single item.



II. APRIORI ALGORITHM Apriori algorithm is based on the thinking of step search,  which is divided into two steps[12]: ?Generate all frequent item sets: One frequent itemsets is  an itemsets which support higher than minimum support (minsup); ?Generate all confident association rule from frequent  itemsets: One confident association rule is a rule which confidence level greater than minimum confidence (minconf);  The pseudo code of the Apriori algorithm processes as follows:  Function Apriori (T )      //T is itemsets  ?The first round search of itemsets  T , candidate 1- itemsets 1C T= .

?Generate frequent 1-itemsets 1F from 1C : 1 1{ | , . / min sup}f f C f count n F? ? ? .

?Start the cycle search.

?Generate kC from 1kF ? : Call the function candidate-gen  ( 1kF ? ).

? Traverse T , then nested traversal kC , when  1, ,c C t T c t? ? ? , .ccount++ ,  end the double-layer cycle.

?Generate frequent k-itemsets kF :  { | . / min sup}k kc C c count n F? ? ? .

? End cycle ? , return the collection of all, frequent  itemsets: kF? .

Candidate k-itemsets kC generating function can be divided into two steps of mergers and pruning [12]. The pseudo-code as follows: Function candidate-gen (  1kF ? ) // Candidate k-itemsets kC generating function  ?Initialize the candidate itemsets set kC : kC? ? .

?Start the cycle, find 1 2( , )f f which meet ?only the last one  different? and 1 2 1, kf f F ?? .

Innovation Fund of Beijing Academy of Agriculture and Forestry Sciences Institute of Agricultural Scientech Information.

? Connection step, according to the lexicographical, 1f and 2f  are combined to generate a new c .

?New item set c to kC : k kc C C?? .

?Pruning step: if c has 1k ? subset s , which meet 1ks F ?? , then delete c from kC .

?End the cycle?, back to the candidate, frequent itemsets  kC .

In this paper, Apriori algorithm was achieved by Apriori  improved strategy.



III. IMPROVED APRIORI ALGORITHM First of all, the principle and nature which recommended  algorithm is based on were introduced: Nature one: if users have similar interest, then the thing  one user interested anther user will be interested too. [13] Nature two: if the user is interested in certain things, then  similar things will also be interested too. [14] Collaborative filtering algorithm based on nature one, while  content-based recommendation algorithm based on nature two.

Apriori algorithm belongs to the latter.

Theorem one: frequent itemsets? all nonempty set must be frequently. [15]  Theorem two: non-frequent itemsets? superset is not frequent itemsets.[15]  These two theorems are used to determine the frequent itemsets? generation rules.

Web log is updated at any time. There is no need to generate all association rules at one time, just real-time mining related association rules for specific pages. At the same time, the user access of different pages have huge difference, all the pages use the same access threshold (support*data num) is not reasonable, which will lead to "rare items" problem[12]. Suppose you want to find the target page for C. the given minimal support is s = 15%. The diagram of the given algorithm is as flow:  ?Traverse the web log database, statistics users who has visit page C as user set (U). Hypothesis U has 5 members in all, which are recorded as 1u , 2u , 3u , 4u , 5u .

?Traverse the web log database, statistics visited pages for each user in U, get page-user set (T), it total has n  records.

Hypothesis specific records as shown in Tab. I, then n=13.

TABLE I.  PAGE-USER SET(T)  Page User Page User Page User A 1u  C 2u  C 4u B 2u  C 3u  A 5u C 1u  E 1u  C 5u A 3u  B 4u  E 3u D 1u  ?Constructing new data structure in form of [page set, users set, num, flag]. Traverse T statistical user set for each page in  set T: page included in page set, user record to user set, statistics user number of each page as num. if the page is C then flag is 1, or is 0. Then we can get 1-element set ( 1W ). It?s content as shown in Tab. II which generate from Tab. I.

TABLE II.  1-ELEMENT SET( 1W )  Page set User Set Num Flag  A 1u , 3u , 5u  3 0  B 2u , 4u  2 0  C 1u , 2u , 3u , 4u , 5u  5 1 D 1u  1(Delete) 0  E 1u , 3u  2 0 Because s n? =1.95, the page set with num less than 2  should be deleted. Page D should be deleted from 1W .

?Generate 2-element set ( 2W ) from 1W : merge page set  according to the dictionary order, user set intersection, flag do combined operation. The content of 2W is as shown in Tab. III which generate from Tab. II.

TABLE III.  2-ELEMENT SET( 2W )  Page set User Set Num Flag A,B  0(Delete) 0  A,C 1u , 3u , 5u  3 1  A,E 1u , 3u  2 0  B,C 2u , 4u  2 1 B,E  0(Delete) 0  C,E 1u , 3u  2 1 ?And so on, we can get 3-element set ( 3W ) and subsequent  element set (if any), the result is as shown in Tab.IV.

TABLE IV.  3-ELEMENT SET( 3W )  Page set User Set Num Flag  A,C,E 1u , 3u  2 1 B,C,E  0(Delete) 1  ?At last, output all element with flag is 1, then we can get all the association rules about page C which meet the minimum support degree s . The final result is as shown in Tab. V.

TABLE V.  ASSOCIATION RULES ABOUT PAGE C  Page set User Set Num Flag C 1u , 2u , 3u , 4u , 5u  5 1  A,C 1u , 3u , 5u  3 1  B,C 2u , 4u  2 1       Innovation Fund of Beijing Academy of Agriculture and Forestry Sciences Institute of Agricultural Scientech Information.

C,E 1u , 3u  2 1  A,C,E 1u , 3u  2 1

IV. EXPERIMENT AND RESULT ANALYSIS The following are data sets experiment and contrast for two  kinds of algorithms. The data sources from web access log of Beijing 12396 website. Hardware environment: CPU 2.93G, 1.93G memory. Software environment: Windows XP, Visual Studio 2008, Matlab R2011, and Microsoft SQL 2005.

Experiment 1: comparison of algorithm efficiency under different minsup  The data form web access log of 12396 websites from 2011 August to December, there are 13167 records, 6793 users and 3600 pages. The result of contrast is as shown in Fig. 1.

0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2           minsup(%)  T im  e co  st (m  s)    Apriori algorithm  Dynamic algorithm   Figure 1.  Algorithm execution time under different minsup.

From the diagram we can get: In the same data size, with minsup reduce gradually, Apriori algorithm execution time increases rapidly and the dynamic algorithm grow slowly.

What?s more, the time spending of improved algorithm always much less than Apriori algorithm.

Experiment 2: comparison of algorithm efficiency under different data volume  Set minsup to 0.006, The four log data sets A, B, C, D with amount of data in turn are 4859, 8214, 11758 and 13167.

Calculate running time of these two algorithms under different data sets. Experimental results are as shown in Fig. 2.

A B C D             Data volume Apriori algorithm  Dynamic algorithm   Figure 2.  algorithm execution time under different data volume  From the diagram we can get: In the same minsup, with the increase of data quantity, the time cost of Apriori algorithm increases rapidly but the dynamic algorithm is not. Moreover, the former is the nearly 10 times of the latter under each date volume.

During web log mining, there are two kinds of means to get a page association recommended rules (assuming page visit quantity over a certain period of time isn ):  ?Use Apriori algorithm to find all association rules over a certain period of time, and then find the target page. The time cost is : ( )Apriori find CT T n T= + ? .

?Use dynamic Apriori algorithm, only to find the target page related association rules. The time cost is: ( )dynamic Apriori CT n T ?= ? .

Over a certain period of time, when the page visit quantity less than 10% of total log record, the time cost of dynamic algorithm is always less than Apriori algorithm. The time cost of dynamic algorithm is not affected by independent access volume, more log data more obvious advantages. In conclusion, improved algorithm is applied to the Web log mining.



V. CONCLUSIONS This paper presents an association rule discovery algorithm  which is suitable for web log mining. The algorithm has the following innovation: ?For a particular page, greatly reduce the search range.

Can achieve real-time updates and improve the efficiency of the algorithm.

?Minsup has page pertinence, for the page with very small  click rate can also find its associated rules.

?Mark association rules with flag, convenient location to  the target page association rules.

The algorithm not only gave the solution of "rare item" problem, but also avoids the problem of ?combinatorial explosion". As shows in experiment, compared with Apriori algorithm, the algorithm's performance has improved.

