Intelligent Multi Agent Systems for Decision  Support in Insurance Industry

Abstract ? MAS (Multi Agent Systems), belong to the field of AI (Artificial Intelligence), the study addressing the methods of construction of complex systems using a large number of agents and adjusting their behavior to a particular problem.

MAS can be defined as groups of entities (agents) working together to solve problems not solvable by their individual skills and know-how. Business decisions are based on extraction of useful knowledge from different data sources.

Those data sources, usually called the big data, might be huge digital data sets such as an internal data warehouse or external sources like the web. In order to process the big data, one needs to have smart solutions, analytics services, programming tools and applications. Intelligent agents can perform certain tasks such as big data processing, information retrieval and the creation of OLAP (On-Line Analytical Processing) cubes which represent multidimensional data. Given that volumes of data grow continuously, insurance companies have to be able manage them.  The agent technology has the potential to become the key technology for management of ever-increasing amount of information. This paper describes how to develop MAS in order to gather useful knowledge from the data source and automate the specific process for better business decision.

Keywords: Multi Agent Systems, Artificial Intelligence, On-Line Analytical Processing, Decision Support, Big Data, Business Intelligence, JADE, OLAP, MAS, BI

I. INTRODUCTION In the second half of the last century information sciences  focused on data in general, and in particular on data collection, storage, transfer, sharing, analysis and, last but not least, data usage. Data volume increases on a daily level and we have become unable to store and analyze such amount. According to the Gartner?s analysis, the amount of data grows by 50% every year.  Gartner?s analysis proves that information has become one of the most valuable assets that organizations have. Investors know how valuable information-centered businesses are and new information- based revenue streams are becoming a mainstream process across different industries. The "Big Data" technology innovation is challenging the existing information infrastructure. Information management is a top priority for organizations around the world. [1]  The term ?Big Data? is used to describe large volumes of both unstructured and structured data, so big and complex that practically no one can use them with traditional management tools and applications for analysis. Text archive files, images, videos, social networks, e-commerce, medicine, the military, internet indexing, searching etc.

account for the enormous data increase.  Moreover, the  information industry shifts to mobile computing, provision of cloud and it relies on analysis of large volumes of data.

Modern trends pose serious difficulties in management of large data volumes, and this is especially true of business analytics data because standard techniques cannot support it.

New requirements expect from organizations to discover knowledge from their internal or external data sources which can help organizations to make better business decisions.

The process of knowledge discovery is an integral part of the Business Intelligence (BI) technology approach that has been used increasingly, especially in last few decades, when a lot of new applications on that can help organization to improve business process and make better business decisions appeared on the market.

In order to improve their decision making process, organizations have created the right environment to respond to these new challenges. The environment which enables organizations to extract and store extracted information is called the Data Warehouse (DW). The DW covers a group of technologies and techniques which help employees to handle data more easily. The Figure 1 below shows typical architecture for supporting business decision systems within the organization. In order to have an effective system, appropriate methods have to be developed, which will gather and process data from multiple different data sources and in different data formats, such as the web, text documents, binary, etc. Such data should be cleansed and should be stored in the organization?s data warehouse. Also, the data contained in the DW needs to be cataloged, maintained and corrected. Furthermore, the data warehouse needs to be updated as the new data comes in, for example, last month?s sales. [2]  Front-end applications  Search, Spreadsheet, Dashboard,  Ad hoc queries  Mid-tier servers  OLAP server, Enterprise search engine,  Reporting server, Data mining engines  Data Warehouse  servers  Relational DBMS, MapReduce engine, ...

Data movement  ETL (Extract, Transform, Load),  Complex transformation  Data sources  External or  internal  Figure 1 Typical decision support architecture  This paper presents information exchange between agents using a set of communication rules known as ontologies. The term ?ontology? applies to business terms and rules that enable people to manipulate the real business problems and make business decisions based on intelligent agents. Introducing intelligent agents into big data processing, especially for business decision support, can reduce human workload. This is mainly due to agents?  MIPRO 2014, 26-30 May 2014, Opatija, Croatia     independence, i.e. autonomous properties, which enable agents to act on behalf of humans in a business process, especially in the field of data acquisition and collection.

The following sections present an overview of the decision making technology process and agent-oriented technology programming approach using the JADE 1 technology (Java Agent Development Framework). The last section provides a simple example of exchange of business information between two agents that help the staff in an organization to make better business decision.



II. DECISION-MAKING TECHNOLOGY OVERVIEW The Figure 1 presents typical architecture for supporting  BI and knowledge discovery.  The data comes from different sources, structured or unstructured. Data sources might be of different quality and in different formats.

Sometime, the data might even be inconsistent. Problems of integrating, cleaning and standardizing such data are challenging but imperative because the necessary, successful environment exists.

The first step in establishment of architecture for a successful BI system as a basis for knowledge discovery and business decisions is collection of data from its source. The so-called ETL (Extract, Transform, Load) methods present the crucial procedure in the data gathering process.  These methods help to establish and correct problems in data quality. They also facilitate efficient loading of large data volumes to the Data Warehouse (DW). [2]  The DW is a collection of data and collection of decision support technologies that assist an employee with sufficient knowledge (executive, manager and analyst) to make better and faster decisions. Data can be stored in many different types of databases; however, the data in DW is stored on a single site. In order to create a DW, data should be extracted from the source, cleansed (free of errors), transformed (summarized) and loaded into a data store ? DW (ETL).

DW servers are divided from operational databases and they have their own database which is used only for decision support. Data stored in a DW share the following characteristics: Subject oriented ? data is logically organized around the main item, e.g. customers, sales, etc., Integrated ? all of the data organized around such an item is combined and can be analyzed together, Time variant ? historical data is maintained in historical form and Nonvolatile ? data is read-only, not updated or changed by users. [3]  Once data is ready for querying, i.e. cleansed, filtered and corrected, employees should be able to query and perceive it from multiple dimensions. The Online Analytical Processing (OLAP) enables operations like filtering, aggregation, pivoting, rollup and drill-down of multidimensional data. The main difference between DWs and the OLAP is a different data view. DWs are based on relational technology while OLAP uses a multidimensional   1 JADE is distributed agent platform created according to FIPA standards.

It is developed in the programming language Java (J2SE), and it is being  distributed via ?Telecom Italia?, available as an open source platform with LGPL license. Source: http://jade.tilab.com/  view of aggregated data. Use of a multidimensional view provides quick access to further analysis.  A data analyst, manager or executive can analyze data from different views, in a fast and interactive way. The OLAP systems have the ability to answer to the "who?" and "what?", but it is their ability to answer the "what if?" and "why?" questions that sets them apart from Data Warehouses. The OLAP, with its capabilities, transforms the DW into strategic information, moving data access from information to knowledge. All the applications that use the OLAP have to be able to deliver information just-in-time. [4] The OLAP systems work with very large databases, up to petabytes, and thanks to that feature, the OLAP can be appropriate for intensive workloads. In addition, it is more tolerant to ACID2 design philosophies [5]. The OLAP is nothing else but the multidimensional view of data in the DW. In multidimensional models a set of numeric measures exist that are subject to analysis. Such measures include sales, the budget, inventory etc. Dimensions represent the context for the measure. Examples of dimensions associated with the sale amount include the city, product name, date, etc. All dimensions uniquely determine the measure. Each dimension is further described by a set of attributes. For example, the Product dimension has the category of attributes and the industry of the product. The Figure 2 depicts the multidimensional view of the data.

Dimensions: Product, City, Date Hierarchical summarization paths  Industry  Category  Product  Country  State  CityDate  Product  City  Figure 2 Multidimensional data  The OLAP conceptual model has features such as aggregation of measures by one or more dimensions. This feature is one of the key features in the OLAP. Computing and ranking of the total sales of a policy by a broker or within a city can be examples of aggregation.  Another popular operation in the OLAP is comparison between two measures ? for example, the sales and budget aggregated by certain dimensions. One of the most important dimensions in the decision support analysis is time, for example, the trend analysis. [7]

III. MULTI-AGENT SYSTEMS The Agent Oriented Programming (AOP) is a software  paradigm that brings concepts from the artificial intelligence theory to the center of the distributed systems. The AOP essentially shapes the applications as collections of components called agents, characterized as autonomous, with the possibility of communication. Being autonomous as they are, they have the capability to handle complex tasks. Agents must be able to communicate, negotiate and   2 ACID represents design philosophies which focus on consistency and it is  traditional approach of databases. ACID means: A-Atomicity, C- Consistency, I-Isolation and D-Durability. [6]     cooperate in ?open? environment. Given that they have the ability of communication, they are able to interact with other entities, work for their own agenda and for agendas of other agents. The architecture of agent-oriented applications is exclusively peer-to-peer, implying that every agent is capable to initiate communication and to reply to requests at any time. A number of independent issues must be resolved when adopting an Agent system to solve specific domain problems - for example communication between agents.

Multi Agent Systems should be on the top of agent-oriented infrastructure as independent, allowing developers to focus on the business logic. [8]  A. The JADE architecture Applications developed on the JADE platform are  comprised of a set of components called ?Agents?, each bearing a different name. Agents perform tasks and they communicate via message exchange. Agents live at the top of the platform that provides the basic information, such as message delivery. Just as the methods, objects etc., the programming agents represent one form of programming abstractions. The difference between an agent and object is the fact that the object is a programming abstraction describing the methods and attributes of the programming component, while the agent is a software abstraction at an even higher level of abstraction, enabling the simple and powerful tool for construction of complex programming entities. Unlike objects defined by attributes and methods, the programming agent is defined by its behavior. This fact is very significant because it reduces the programming of agent systems to the specification of the certain agents? behavior.

The JADE is completely developed in the Java programming language. It simplifies the implementation of Multi Agent Systems respecting the FIPA3 (Foundation for Intelligent Physical Agents) rules, and via the graphical tools, it supports the development and testing phases. The agent platform can be distributed to several computers being controlled via graphical interface implemented in the JADE Framework. The programming agent needs to be: autonomous, mobile, purposeful, stabile, communicative and capable of learning. The JADE programming platform includes one or more containers. Containers can be executed on different hosts (computers, mobile devices etc.) making a distributed platform. Each container may contain one or more agents. Figure 3 [9] represents the basic elements of the JADE architecture. [8]  The Main container is a special form of container, capable of containing agents, but still very much different from other containers because the Main container is a place at which other agents register and it includes two different agents: the AMS (Agent Management System) represents an authoritative agent, the only one that is able to start and stop   3 FIPA (Foundation for Intelligent Physical Agents) is a nonprofit  standardization organization dealing with the standardization of the programming agents and agent platforms. FIPA standardizes the  architecture of agent systems, agent management, their communication etc.

the platform, and the DF (Directory Facilitator) represents the ?Yellow Pages?, as we might call it, a place used by agents to advertise their services, that the other agents can browse through to search for information, depending on their needs [9]. The JADE platform may contain multiple containers like Container 1, on the Host 3, which contains the Agents A2 and A3.

Agents can communicate transparently, depending on their location; for example A2 or A3 can communicate; as well as A1 and A2 and although they belong to different containers, they are on the same platform. Communication is possible between A1 and A5, even though they belong to different platforms. Communication is based on asynchronous passage of messages. The message format is determined by the ACL (Agent Communication Language), a language defined by the FIPA (Figure 4 [11]). [9]  Figure 3 JADE architecture  A FIPA message includes the following data: the Sender agent - sending the message, the Receiver agent ? receiving the message and the Message itself - intended for communication acts representing the sender?s intention. For example, when the agent sends the INFORM message, it wants to inform the receiver of the fact (e.g. INFORM ?It?s raining today?). When the agent sends the REQUEST message, it demands an action from the receiver. The FIPA differentiates between 22 possible communication acts, covering 95% (it does not support the remaining 5%) of the possible situations. Content represents information contained in the message. [9]  Transport information  Encoded message Message parameters  Message content  Envelope  Payload  Message  Content  Figure 4 FIPA Message Structure     An example of the FIPA-ACL (Agent Communication Language) message with the REQUEST performative:  (REQUEST :sender (agent-identifier :name Ivan) :receiver (agent-identifier :name Mark) :ontology travel-assistant :language FIPA-SL :protocol fipa-request :content ""((action  (agent-identifier :name Ivan)  (book-hotel :arrival 15/10/2006 :departure 05/07/2002 ... )  ))"" )  [Part of code from [8]]  (PROPOSE :sender (agent-identifier :name Main@MY_IP/JADE :addresses (sequence MY_URL/acc )) :receiver (set (agent-identifier :name Seller@MY_IP/JADE :addresses (sequence MY_URL/acc )) ) :content  "MAIN: Number of policies: 8 Premium: 2900.0 :reply-with Seller@MY_IP/JADE136 :conversation-id  policy )  [a part of the code from insurance example presented in the paper]  When a certain object is additionally described by a set of complex information, it is necessary to define the syntax for the receiver to be able to read the message content in order to obtain the necessary information. Ontologies represent abstract concepts and a relation for a specific domain. They can be shared and used many times across the internet by knowledge representation languages such as the Resource Description Framework (RDF) or Web Ontology Language (OWL).

According to the FIPA terminology, this syntax is known as the content language. The FIPA does not enforce these standards; they are recommendations how to communicate with AMS and DF agents ?most significant in the JADE architecture.

An example of the content language recommended by the FIPA:  (Policy :number 123456 :seller Ivan :insured Mark)  When the agent receives this string, it has to be able to convert the string in the appropriate format to understand the information contained in the string. It also has to be able  to share the meaning with the sender of the string and symbol concept (?Policy, number, seller, insured?) used for the structure expression. This set of concepts and symbols is known as ontology. The ontology is independent and inherently related to the corresponding research domain.

Ontology-supported work makes the JADE capable for complex content operation. Software developers can choose to work with JADE classes, JAVA serialization, XML, or with some other technology, depending on their needs. The classification offered by the FIPA is the one separating the ACL message into two sections: predicates and terms, as indicated in the Figure 5. [8]  Term  IRE Concept Primitive Agregate Variable  Agent Action  Element  Content Element List  Content Element  Predicate  Can be used as the Content of an ACL message  Can be True or False  Indicated entities (abstract or concrete)  Figure 5 Reference model  Predicates are expressions describing the status of a certain object and they can be true or false:  (Insured (Person :name Ivan) (Municipality :name Split))  Description of the insured person, ?person named Ivan? from ?the Municipality of Split?.

Predicates are used for the INFORM or QUERY-IF message content exchange, e.g. if two agents want to exchange some facts.

Terms are expressions identifying entities that exist in the real world. They can be abstract or concrete. They are classified into:  ? Primitives ? entities such as string and integers ? Concepts ? entities with complex structure  (Person :name Ivan :Age 30)  Concepts are referred to inside predicates:  (Policy :number 1234 :insured(Person :name Ivan))  ? Agents? actions: are special concepts that indicate action that can be perform by some agents.

(IssuingPolicy (Policy :number 12345) (Insured :name Ivan))  ? Aggregations are entities or groups of other entities  (Sequence (Person :name Ivan) (Person :name Mark))  ? IRE (Identifying referential expressions)  are expressions that identify the entity (or entities) for which a given predicate is true  ? Variables are terms frequently used in queries.

Agents have to be able to perform several competing tasks to respond to different requests. For this purpose, every agent has the possibility to implement different behavior types, ranging from those simple ones, performed only once to those performed until a certain condition is fulfilled, unless otherwise specified. The Figure 6 shows the JADE framework behavior hierarchy. [8] The behavioral state has to be contained in corresponding agents. Every agent cares about its behavioral state, such as the action completion and the action blockage.

Behaviour  Composite Behaviour  Simple Behaviour  FMS Behaviour  Sequential Behaviour  Parallel Behaviour  OneShot Behaviour  Cyclic Behaviour  Waker Behaviour  Ticker Behaviour  Figure 6 The Jade behavior hierarchy  The FIPA has specified interaction protocol stacks used for inter-agent communication. For every conversion, the JADE differentiates between the roles of the initiator and the agent replying (Responder) to the messages. The Figure 7 shows inter-agent communication structure. The Initiator sends the message, and the responder may reply with the message ?not understood?, refuse to reply with the message ?refuse? or agree with the message via ?agree?. If the agent replies with ?agree?, the message is sent so quickly that it can be considered as an unnecessary burden. [10]  communicative act  not-understood refuse reason agree  failure reason  inform Done(action)  Inform (iota x(result action) x)  Figure 7 The Interaction Protocol Homogeneous Structure

IV. INSURANCE MAS EXAMPLE This example comes from the Insurance domain and  describes one of many situations in which employees need information to make a decision about their business actions.

This is a problem not only for employees working in headquarters or static workers in other offices, but also for mobile employees. As the number of mobile and online users in the world continues to grow, so do the ways in which mobile users can gather the right information. All employees, ranging from a CEO to a seller, can request and obtain, automatically or on demand, a critical alert or information that is important for their business operations to their mobile phone or a smart phone. Every mobile phone equipped with appropriate software becomes a mobile agent capable of imitating communication with the headquarter agent who will respond to their queries.

To demonstrate this, we have developed two agents with different roles using the JADE architecture. One of them has a double role and represents the most important agent in the process since it discovers knowledge and upon discovering it, it sends it as information to mobile agents. Mobile agent is the second agent that only initiates communication.

The database includes two tables: one, titled ?Policies? includes the concluded policies, and the second, titled ?Persons? that contains data of the policy holders. The Figure 8 indicates the database structure:  PERSONS  IDPK  Surname  Place  Name  POLICIES  NumberPK  PersonFK  Price  Figure 8 Database structure  The Agent that discovers knowledge, called the ?Main? agent, obtains the statistical figures regarding the number of issued insurance policies and the realized premium. When the ?Main? agent finds the right information it sends it to mobile agents, known as the ?Seller? agents. The Main agent offers to the Seller agent available information that it has and offers the Seller agent to accept or refuse it, depending on the Seller?s needs. The Seller agent performs the ?Seller?behavior, sending the query on the schedule time passing through the corresponding communication steps (Figure 9). Every step requires corresponding behavior, depending on the message type.

The next code snippet covers a part of communication between the Main agent and the Seller agent.

if (messageRecieve.getPerformative() == ACLMessage.CFP){ messageAnswer.setPerformative(ACLMessage.INFORM); messageAnswer.setConversationId("policy"); messageAnswer.setContent("MAIN: Available ..."); //Sent message myAgent.send(messageAnswer); } else if (messageRecieve.getPerformative() == ACLMessage.ACCEPT_PROPOSAL){ messageAnswer.setPerformative(ACLMessage.PROPOSE); messageAnswer.setConversationId("policy"); messageAnswer.setContent("MAIN: Number ?"); //Send message myAgent.send(messageAnswer);}  In the first step, the Seller agent sends the CFP (Call for Proposal) request for the available statistics. The behavior defining the CFP message is ?SendCfpRequest?. The Main agent grasps that this is a CFP message and sends back the INFORM message, informing the Seller agent about the available statistics.

Figure 9 JADE Communication between Seller and Main Agent  The Seller agent accepts the proposal from the Main agent via ?ReceiveCfpRequest? behavior and returns the message ACCEPT_PROPOSAL. The behavior defining the proposal is ?CofirmRequest?, whereby the Main agent, using the appropriate methods, contacts the distributed databases and, by performing the queries (SQL select), the Main agent sends the corresponding information via the message PROPOSE. Then, the Seller agent accepts the statistics via the ?AcceptStatistics? behavior and prints them to the console.

After running the application, the console displays the following: --------------------------------------------------------------------- Agent container Main-Container@10.170.2.57 is ready.

-------------------------------------------------------------- SELLER: Request for statistic?

MAIN: Available statistics are number of sold policies and premium!

SELLER: Accept! Give me all statistics.

MAIN: Number of sold policies: 8 Premium: 2900.0 ***************************************

V. CONCLUSION Due to the large amount of information, intelligent  software agents organized in the Multi Agent Systems represent a solution to the problem of gathering, processing and using information. Intelligent software agents are a collection of technology that ensure development of advanced services because it enables creation of intelligent services, tailor-made to the needs of a user. By using software agents, certain tasks, otherwise performed independently by users, can now be automated. Intelligent software agents support business processes due to their great potential, especially in terms of processing and maintenance of large amounts of information stored in heterogeneous, dislocated information sources. Implementation of a business process solution through the Multi Agent System based on the JADE framework, such as the one presented in the paper, is straightforward and intuitive. With the development and spread of new mobile hardware, problems  such as detection of individual system entities and users and their communication are entering into a new phase. New trends and increase in the number of users of smart devices result in larger number of services these devices can provide. The fact that each user has a smart device in his/her immediate vicinity and that he/she can store new data at any moment, indicates the need to synchronize this data with other systems, as well as the need for various data access.



VI. REFERENCES [1] Information 2020: Big Data and Beyond  http://www.gartner.com/, Business Intelligence & Information Management, Featured Webinar  [2] An Overview of Business Inteligence Technology Communication of the ACM August 2011, Vol. 54, DOI: 10.1145/1978542.1978562, Surajit Chaudhuri, Umeshwar Dayal, Vivek Narasayya  [3] Data Warehousing, Data mining, OLAP and OLTP technologies are essential elements to support decision-making process in industries, (IJCSE) International Journal on Computer Science and Engineering, Vol. 02, No. 09, 2010, 2865-2873, G.Satyanarayana Reddy, Rallabandi Srinivasu, M.Poorna Chander Rao, Srikanth Reddy Rikkula, ISSN: 0975-3397  [4] OLAP Council http://www.olapcouncile.com  [5] Cloud-hosted databases: technologies, challenges and opportunities, Sherif Sakr, Springer Science+Business Media New York 2013  [6] CAP Twelwe Years Later: How the rules have changed, Eric Brewer, University of California, Berkeley, Computer magazine, February 2012.

