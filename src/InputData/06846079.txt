A GPU-based parallel computing framework for  accelerating the reconstruction of q-ball imaging

Abstract? High-angular resolution diffusion imaging(HARDI) relative to the diffusion tensor imaging(DTI) can resolve the complex fiber crossing of each voxel in the brain, however, the image reconstruction time is longer than conventional technology, therefore, to improve the performance is a very important work to do.

We used graphic processing unit (GPU) and CUDA to compute the spherical harmonic function on the reconstruction of QBI. It?s very useful on massive performance data(Bid Data). With the large number of matrix elements in GPU for parallel computing. By evaluating with different video cards, the improved performance showed 179 to 574 speed up through shared memory access for computation. Finally, the results wiil be used in an extension of the three-dimensional spatial visualization and probabilistic tractography.

Keywords? HARDI, GPU, CUDA, QBI,  Parallel computing.



I. INTRODUCTION This research is intended for the diffusion MRI  community, particularly for those interested in inferring brain connectivity using fiber orientation reconstruction.

Human has been able to thinking and learning through the brain connectivity in different function area in the brain.

Brain connectivity can achieve to communicate in order to complete the human activity behavior. Before the development of non-invasive medical imaging, only can understand the internal structure of the brain and neural network composed by dissecting an animal or a human brain after death, and the invasive behavior can?t work in vivo until the diffusion tensor such proposed MRI.

Diffusion MRI is currently the only reaction technology for the structure of the direction of the in vivo [1] . Because in three-dimensional space , the diffusion of water molecules in motion which tend to have a non- isotropic (anisotropy), means that the area affected by the restriction or organization , the non- performance of its isotropic will vary different.

The human nerve cell fibers in the brain (White matter) with a string non-isotropic and neurons (Gray matter) is weak, therefore the Professor  Basser  P.J. proposed diffusion tensor imaging, its can see how real changes in the brain.

Scholars through a diffusion tensor matrix to provide space for the diffusion and depicted ellipsoid expressed in the brain[2].

Fig. 1 Diffusion tensor matrices and ellipsoid[2].

However, there are many limitations in diffusion tensor module that can?t display their correct orientation. In other words, use ellipsoid to describe the diffusion of each voxel within the brain case is not sufficient to provide the information on the complex multi-directional, the situation shown in figure 2.

Fig. 2  fiber crossing  and kissing.

High angler resolution diffusion imaging (HARDI) techniques in the more recent research trend increases, the technology can be improved angular resolution and increased proliferation of b-value coding to get in as many directions within a single voxel proliferation situation [3].

2014 International Symposium on Computer, Consumer and Control  DOI 10.1109/IS3C.2014.287     Q-ball imaging (QBI) use Funk-Radon conversion rather than diffusion spectrum imaging (DSI) and because this method to retrieve only the surface of the sphere of sampling points, which can also improve the shortcomings of the sampling time is too long, its schematic shown in Figure 3.

Fig. 3  Q-Ball Imaging sampling.

Although QBI technology can effectively improve the diffusion hypothesis motion to solve complex situations voxels inside the multi-directional, so more complex render their neural structures in the brain, but it still takes time like a relatively long tradition of technology and establish the orientation distribution function (Orientation Distribution Function, ODF) in spherical harmonics caused by consuming relatively much computing phenomenon (Time Consuming) on  the huge amount of information generated by computation.

Thus, using the Graphic Processing Unit (GPU) to accelerate the reconstruction of  imaging, analysis, analysis, arithmetic operations, and so the application has become the trend, especially in the massive analysis(Big data), super computer, geography mining and so requires a lot of numerical analysis, GPU rather than the CPU has obvious advantages, there is no need to spend on its power-consuming too many resources, GPU use more transistors as the execution unit, Figure 4 shows two schematic comparison of those.

Fig. 4  CPU and GPU crystal structure chart..

The current mainstream of computer is that mainly logical CPU, and with the GPU's massively parallel computation to be developed, that the use of such CPU and GPU architecture to achieve heterogeneous parallel computing.

Compute Unified Device Architecture (CUDA) which NVIDIA launched after 2007[4], it is opens up the wave of high-performance computing, the transmission characteristics of its parallel computing can effectively improve their performance computing and analysis, a significant reduction in the time required for its operation, related applications in the field of data mining, earth science, geography, etc. have been planning to enhance its actual performance, and the use of GPU computing to accelerate tracking technique of nerve fibers have also been proposed in 2007 by scholars and obtain substantially enhance the operational effectiveness [5].

These are based on the CUDA architecture shown in Figure 5, the programming model are run with this framework.

CPU and GPU are both owned their independent memory, CUDA is same as the C on the handling the memory, but if you want to manipulate the display, then you need to be provide by the CUDA API to manage, which includes the release of the establishment, initialize memory and so on.

Fig. 5  CUDA architecture..

Since running GPU parallel computing needs to achieve through transfer between different memory to achieve, which is complex and need careful processing, and therefore, developers need to run the hardware architecture to its decision to develop parallel algorithms and regulatory control memory, so that each core on GPU in the process of reading the data, and the remaining core of the work is also being shared running, making parallel computing optimization, hardware developers need to have a certain degree of understanding before research and development can be the most efficient writing, Figure 5  is the internal memory of the multi-GPU architecture diagram.

CUDA does not need the graphics API, which uses a C- extended language to develop, so that developers do not need to spend too much time in the familiar with the new structure     and language, so is good news on the development , and the introduction of its chip memory, support random write and perform communication functions between threads[6].

The purpose of this study is to use the graphic processing unit to accelerate the reconstruction of the Q ball imaging, using spherical harmonic function to solve the spherical coordinates, spherical coordinates spherical harmonics solution of the Laplace equation.

However, whether it is from the image preprocessing to image reconstruction of ODF calculation even the brain neural network analysis of the probability of an extension of tracking their three-dimensional pathways surgery and reconstruction of the back end of the three-dimensional space which will cause a considerable burden on the computer, and thus run parallel architecture of the GPU to provide effective and low- cost solution to the problem posed for time consuming.

Q-ball imaging (QBI) has the capacity to recover complex orientation distribution of white matter fibers from an MRI voxel [7], however, the time required to reconstruct the orientation distribution functions (ODFs) for a whole brain QBI data is relatively long. In this study, we propose and implement a parallel computing framework to improve the efficiency of the ODF reconstruction using the modern graphic processing unit (GPU), which has a notable computing performance over the conventional central processing unit (CPU) in terms of floating-point computing and memory bandwidth . For our implementation, we apply the Compute Unified Device Architecture (CUDA) programming model [8] and we evaluate the performance on three computers to verify our algorithm.

Fig. 6  CUDA architecture.



II. MATERIALS AND METHODS First, we obtained the data from Yang Ming University  3T MRI and obtain T1-weighted images and  QBI images and reconstruct the data, Table 1 is the  QBI's image parameters.

In vivo human brain QBI data were acquired on a 3T  MRI scanner (Siemens, Germany) using a SE-EPI diffusion sequence with the following parameters: TR =9500 ms, TE = 123 ms, voxel size = 2 ? 2 ? 2 mm3, and b-value = 3000 s/mm2. The DW gradient scheme consisted of 162 directions generated by 4-folds tessellated icosahedrons. Sixty transverse slices were acquired parallel to the line defined by the connection between the anterior and posterior commissures. In this study, we used SH=4 for QBI reconstruction.

Table 1.  QBI parameters.

TR = 9500ms TE = 123ms  Matrix Size = 96 * 96 Direction = 162  Num of slice = 60 Voxel size = 2 * 2 * 2  According to the definition of spherical harmonics, whose spherical harmonics Y?? can be described as a linear function of, the order and phase factor consists of:  ?(?) = ? ? ?? ?	(?), ?  ???    ??? In the spherical coordinate system can be expressed as: ?	(?) = ?	(?, ?) = (?1)	 ?2? + 14? ?  ?? ?(? ? ?)!(? + ?)!? ?? ??	(????)??	?,  We use the GPU to accelerate the algorithm and the device information  below:  GPU framework: We develop our GPU acceleration algorithm on a 64-bits Windows 7 system using Microsoft Studio Visual C++ 2008 and CUDA 5.0 SDK.

Fig. 7 shows the global framework design. In the principle of spherical-harmonic-basis (SHB) QBI, the ODFs can be described by matrix manipulation of q-space diffusion signal and the spherical harmonic (SH) function.

Fig. 7  The flow chart of our GPU framework showing the transition of the QBI data and the results between CPU and GPU.

In our GPU framework, the former is delivered to the streaming processing (SP) units of GPU in parallel. The latter,which is derived from the diffusion gradient scheme, the     number of output ODF orientations, and the SH order, is computed in prior in the spherical coordinate system using the Moore-Penrose pseudo inverse approach. The SH function is then transferred from CPU to every SP units. Each SP uses multiple threads to perform parallel matrix operation, and then the output ODFs are transferred from the GPU shared memory to the CPU memory. The utilization of the shared memory can reduce the time and number of access to the global memory, and our algorithm can help to avoid the risk of data hazard caused by overloading of the shared memory in CUDA architecture. In addition, our algorithm allows us to define the number of threads for computation, which determines the computing block size shown in Fig. 8.  Each thread in the block is responsible for the calculation of a matrix (i.e. the block) element.

Evaluation: We examined the performance of our algorithm on three machines for comparison: The Machine I is equipped with a NVIDIA Tesla C2075 graphic card (448 cores, 1030 Gigaflops for single-precision floating-point performance and 575 MHz core clock) and an Intel(R) E5- 1607 CPU. The Machine II has a NVIDIA GTX 560 graphic card (192 cores, 595.2 Gigaflops for single-precision floating- point performance and 775 MHz core clock) and an Intel(R) i7-3770 CPU.

The Machine III is equipped with a NVIDIA GEFORCE 610M graphic card (48 cores, 142.08 Gigaflops for single- precision floating-point performance and 900 MHz core clock) and an Intel(R) i5-2450M CPU.

Fig. 8  The diagram of matrix operation using the multithreading technique in the SP unit.



III. DISCUSSION AND CONCLUSIONS We demonstrate that using the modern GPU technique  can remarkably improve the computing performance, and the GPU computing architecture developed in this study can significantly increase the efficiency of SHB-QBI reconstruction by a factor up to 500. This should therefore be beneficial to clinical applications since the results of ODFs and the relative quantities can be obtained for diagnosis right after QBI acquisition. In addition, we expect that our GPU framework would be particularly helpful to accelerate data  analysis for massive groups, such as those in the Human Connectome Project [6]. In the near future, we will combine and optimize this framework with our GPU-based probabilistic fiber tracking algorithm as well as the visualization toolbox. Although our current computing algorithm relies on the CUDA environment, we will soon extend it to be cross-platform using the Open CL standard.

