Mining Association Rules in OLAP Cubes

Abstract  On-line analytical processing (OLAP) provides tools to explore data cubes in order to extract interesting informa- tion. Nevertheless, OLAP is not capable of explaining re- lationships that could exist within data. Association rules are one kind of data mining techniques which finds associ- ations among data. In this paper, we propose a framework for mining association rules from data cubes according to a sum-based aggregate measure which is more general than frequencies provided by the COUNT measure. Our mining process is guided by a meta-rule context driven by analy- sis objectives and exploits aggregate measures to revisit the definition of support and confidence. We also evaluate the interestingness of mined association rules according to Lift and Loevinger criteria and propose an algorithm for mining inter-dimensional association rules directly from a multidi- mensional structure of data.

1 Introduction  Data warehousing and OLAP technology has known im- portant progress since the 90s. In addition, with efficient techniques developed for computing data cubes, OLAP users have become widely able to explore multidimensional data, navigate through hierarchical levels of dimensions, and therefore extract interesting information according to multiple levels of granularity. Nevertheless, the OLAP tech- nology is quite limited to an exploratory task and does not provide automatic tools to explain relationships and associ- ations within data. Users are usually supposed to explore the data cube according to multiple dimensions in order to manually find an explanation for a given phenomenon.

In the recent years, many studies addressed the issue of performing data mining tasks on data warehouses. Some of them were specifically interested to mining patterns and as- sociation rules in data cubes. For instance, Imielin?ski et al.

state that OLAP is closely intertwined with association rules and shares the goal with association rules for finding pat-  terns in the data [4]. Data mining techniques such as as- sociation rule mining can be used together with OLAP to discover knowledge from data cubes. The aggregate val- ues needed for discovering association rules are already pre- computed and stored in the data cube. The COUNT cells of a cube store the number of occurrences of the corresponding multidimensional data values. With such summary cells, it is straightforward to calculate the values of the support and the confidence of association rules.

The COUNT measure corresponds to the frequency of facts. Nevertheless, in an analysis process, users are usually interested in observing multidimensional data and their as- sociations according to measures more relevant than simple frequencies. In this paper, we establish a general framework for mining inter-dimensional association rules from multi- dimensional data. We use the concept of inter-dimensional meta-rule which allows users to guide the mining process and focus on a specific context from which rules can be ex- tracted. Our framework also allows a redefinition of the support and confidence measures based on the SUM aggre- gate functions over cube indicators (measures). Therefore, the computation of support and confidence according to the COUNT measure becomes a particular case in our proposal.

In addition to support and confidence, we use two other de- scriptive criteria (Lift and Loevinger) in order to evaluate interestingness of mined associations. These criteria reflect interestingness of associations in a more relevant way than what is offered by support and confidence. We developed an efficient bottom-up algorithm which adapts the traditional Apriori algorithm in order to handle multidimensional data.

This paper is organized as follows. In Section 2, we expose a state of the art about association rule mining from multidimensional data. In Section 3, we define the concept of inter-dimensional meta-rule, present the gen- eral computation of support and confidence based on mea- sures, and provide advanced evaluation of mined associ- ation rules. Section 4 describes our algorithm of mining inter-dimensional association rules and shows its efficiency with experiments. Finally, in Section 5, we conclude and propose some future research directions.

2 Related work  To the best of our knowledge, Kamber et al. [5] were the first who addressed the issue of mining association rules from multidimensional data. They introduced the metarule- guided mining which uses rule templates defined by users in order to guide the mining process of inter-dimensional association rules. Zhu divides the problem of mining as- sociation rules from data cubes to inter-dimensional, intra- dimensional, and hybrid association mining [10]. In [3], Chen et al. mine intra-dimensional association rules by adding features from other dimensions at multiple levels.

Extended association rules [8] consist of repetitive pred- icates by involving attributes from user defined non-item dimensions. Tjioe and Taniar [9] extract associations from multiple dimensions by focusing on summarized data. They prepare multidimensional data for the mining process by pruning rows in the fact table which have less than the av- erage quantity.

All the proposed approaches are restricted to the COUNT measure in the mining process of associations. In this paper, we use the notion of metarule-guided mining proposed by Kamber et al. [5] to guide a general process of mining inter-dimensional associations with non-repetitive predicates. The main contribution of our proposal consists in integrating the measures of a data cube in the computa- tion of the support and the confidence of association rules.

We also use advanced criteria in order to evaluate interest- ingness of mined associations. An Apriori-based algorithm is also adapted in order to handle multidimensional data.

3 The proposed framework  3.1 Notations and terminologies  Let C be a data cube with a non empty set of d dimen- sions D = {Di}(1?i?d) and a non empty set of measures M. Each dimension Di ? D encloses a non empty set of hierarchical levels. We assume that Hij is the j  th (j ? 0) hierarchical level in Di. The coarse level of Di, denoted Hi0, corresponds to its total aggregation level All. Let Hi be the set of hierarchical levels of dimension Di where each hierarchical level Hij ? Hi consists of a non empty set of members denoted Aij .

Let D? ? D be a non empty set of p dimensions {D1, . . . , Dp} from the data cube C (p ? d). The p-tuple (?1, . . . ,?p) defines a sub-cube on C according to D? iff ?i ? {1, . . . , p}, ?i ?= ? and there exists a unique j such that ?i ? Aij . A sub-cube according to a set of dimen- sions D? corresponds to a portion from the initial data cube C. It consists in setting for each dimension from D? a non empty subset of member values from a single hierarchical level of that dimension. Each cell from the data cube C rep- resents an OLAP fact which is evaluated in R according to  one measure M from M. We evaluate a sub-cube according to its sum-based aggregate measure. The sum-based aggre- gate measure of a sub-cube (?1, . . . ,?p) on C according to M ? M, noted M(?1, . . . ,?p), is the SUM of measure M of all facts in the sub-cube.

We define a dimension predicate ?i in a Di as the pred- icate ?a ? Aij? which takes a dimension member as a value. Let D? ? D be a non empty set of p dimensions {D1, . . . , Dp} from the data cube C (2 ? p ? d). We also define (?1 ? ? ? ? ? ?p) as an inter-dimensional predicate in D? iff ?i ? {1, . . . , p}, ?i is a dimension predicate in Di.

3.2 Inter-dimensional meta-rules  We consider two distinct subsets of dimensions in the data cube C: (1) DC ? D is a subset of p context dimen- sions; and (2) DA is a subset of (s+r) analysis dimensions.

An inter-dimensional meta-rule is of the following form:  In the context (?1, . . . ,?p) (?1 ? ? ? ? ? ?s) ? (?1 ? ? ? ? ? ?r)  (1)  (?1, . . . ,?p) is a sub-cube on C according to DC . It defines the portion of cube C to be mined. Unlike [5], our meta-rule allows the user to target a mining context by iden- tifying a particular sub-cube to be explored. We note that ?k ? {1, . . . , s} (respectively ?k ? {1, . . . , r}), ?k (re- spectively ?k) is a dimension predicate in a distinct dimen- sion from DA. Therefore, (?1 ? ? ? ? ??s)? (?1 ? ? ? ? ? ?r) is an inter-dimensional predicates in DA.

3.3 Measure-based support and confidence  Traditionally, the support (SUPP) of an association rule X ? Y , in a database of transactions T , is the probabil- ity that the population of transactions contains both X and Y [1]. The confidence (CONF) of X ? Y is the condi- tional probability that a transaction contains Y given that it already contains X . In the case of a data cube C, the ag- gregate values needed for discovering association rules are already computed and stored in C. In fact, a data cube stores the particular COUNT measure which represents precom- puted frequencies of OLAP facts. Nevertheless, with the COUNT measure, only number of occurrences of facts are taken into account to decide whether a rule is large (respec- tively strong) or not. However, in the OLAP context, users are usually interested to observe facts according to summa- rized values of measures more expressive than their simple number of occurrences. It is naturally significant to observe association rules according to the sum of these measures.

Let us consider a data cube of Sales by taking once the COUNT measure (Table 1(a)) and then the total profit mea- sure (Table 1(b)). In this example, with a minsupp = 0.2, the itemsets (? America ?, ? MP3 ?, ? 2004 ?) and (? Amer- ica ?, ?MP3 ?, ? 2005 ?) are large according to the COUNT    measure (grayed cells in Table 1(a)). Whereas these item- sets are not large in Table 1(b). The large itemsets accord- ing to the profit measure are rather (? Europe ?, ? Laptop ?, ? 2004 ?) and (? Europe ?, ? Laptop ?, ? 2005 ?).

Table 1. Sales cube according to the (a) COUNT and the (b) profit measure  2004 2005 America Europe America Europe  Desktop 1,200 800 950 500 Laptop 2,500 2,700 2,800 3,200 MP3 10,600 5,900 11,400 9,100  (a)  2004 2005 America Europe America Europe  Desktop $ 60,000 $ 33,000 $ 28,000 $ 10,000 Laptop $ 500,000 $ 567,000 $ 420,000 $ 544,000 MP3 $ 116,000 $ 118,000 $ 57,000 $ 91,000  (b)  In the OLAP context, the rule mining process needs to handle any measure from the data cube in order to evaluate its interestingness. Therefore, a rule is not merely evaluated according to probabilities based on frequencies of facts, but needs to be evaluated according to quantity measures of its corresponding facts. The choice of the measure closely de- pends on the analysis context according to which a user needs to discover associations within data. For instance, if a firm manager needs to see strong associations of sales covered by achieved profits, it is more suitable to compute the support and the confidence of these associations based on units of profits rather than on unit of sales themselves.

Therefore, we define a general computation of support and confidence of inter-dimensional association rules according to a user defined measure M ? M from the mined data cube. Consider a general rule R which complies with the defined inter-dimensional meta-rule (1):  R: In the context (?1, . . . ,?p) (x1 ? ? ? ? ? xs) ? (y1 ? ? ? ? ? yr)  The support and the confidence of this rule are therefore computed according to the following general expressions:  SUPP(R) = M(x1,...,xs,y1,...,yr,?1,...,?p,All,...,All)M(All,...,All,?1,...,?p,All,...,All) (2)  CONF(R) = M(x1,...,xs,y1,...,yr,?1,...,?p,All,...,All)M(x1,...,xs,All,...,All,?1,...,?p,All,...,All) (3)  where M(x1, . . . , xs, y1, . . . , yr,?1, . . . ,?p, All, . . . , All) is the sum-based aggregate measure of a sub-cube. Tra- ditional support and confidence are particular cases of the above expressions which can be obtained by the COUNT aggregation. Nevertheless, in order to simplify notations, we keep on refering to our generalized support and confi- dence with the usual terms.

3.4 Advanced evaluation of association rules  Support and confidence are the most known criteria for the evaluation of association rule interestingness. These cri- teria are the fundamental principles of all Apriori-like algo- rithms [1]. However, they usually produce a large number of rules which may not be interesting.

Let consider again the association rule R : X ? Y which complies with the inter-dimensional meta-rule (1), where X = (x1 ? ? ? ? ? xs) and Y = (y1 ? ? ? ? ? yr) are conjunctions of dimension predicates. We also consider a user-defined measure M ? M from data cube C. We de- note by PX (respectively PY , PXY ) the relative measure M of facts matching X (respectively Y , X and Y ) in the sub- cube defined by the instance (?1, . . . ,?p) in the context dimensions DC . We also denote by PX = 1 ? PX (re- spectively PY = 1 ? PY ) the relative measure M of facts not matching X (respectively Y ), i.e., the probability of not having X (respectively Y ). The support of R is equal to PXY and its confidence is defined by the ratio  PXY PX  which is a conditional probability, denoted PY/X , of matching Y given that X is already matched.

PX = M(x1,...,xs,All,...,All,?1,...,?p,All,...,All)  M(All,...,All,?1,...,?p,All,...,All)  PY = M(All,...,All,y1,...,yr,?1,...,?p,All,...,All)  M(All,...,All,?1,...,?p,All,...,All)  PXY = SUPP(R) = M(x1,...,xs,y1,...,yr,?1,...,?p,All,...,All)  M(All,...,All,?1,...,?p,All,...,All)  PY/X = CONF(R) = M(x1,...,xs,y1,...,yr,?1,...,?p,All,...,All) M(x1,...,xs,All,...,All,?1,...,?p,All,...,All)  There are two categories of frequently used evaluation criteria to capture the interestingness of association rules: descriptive criteria and statistical criteria. In general, one of the most important drawbacks of a statistical criterion is that it depends on the size of the mined population. In addition, it requires a probabilistic approach to model the mined pop- ulation. This approach assumes advanced statistical knowl- edge of users, which is not particulary true for OLAP users.

On the other hand, descriptive criteria are easy to use and express interestingness of association rules in a more natu- ral manner. In addition to support and confidence, we add the Lift (LIFT) [2] and the Loevinger criterion (LOEV) [6].

These two criteria are descriptive, take the independence of itemsets X and Y as a reference, and are defined on rule R as follows:  LIFT(R) = PY XPXPY = SUPP(R) PXPY  (4)  LOEV(R) = PY/X?PY  PY = CONF(R)?PYPY (5)  The Lift of a rule can be interpreted as the deviation of the support of the rule from the support expected under the independence hypothesis between the body X and the head Y [2]. For the rule R, the Lift captures the deviation from the independence of X and Y . This also means that the Lift    criterion represents the probability scale coefficient of hav- ing Y when X occurs. By opposition to the confidence, which considers directional implication, the Lift directly captures correlation between body X and its head Y . In general, greater Lift values indicate stronger associations.

The Loevinger criterion is one of the oldest used interest- ingness evaluation for association rules [6]. It consists in a linear transformation of the confidence achieved by cen- tering it on PY and dividing it by the scale coefficient PY .

In other terms, the Loevinger criterion normalizes the cen- tered confidence of a rule according to the probability of not satisfying its head.

4 Implementation, algorithm and experi- ments  We developed a Web application to mine association rules from data cubes according to our proposal. This appli- cation is a module evolving in a general Client/Server plat- form, called MiningCubes [7]. The platform enables con- nection to multidimensional data cubes stored in the Analy- sis Services of MS SQL Server 2000. A Mining Association Rule Module allows the definition of analysis dimensions DA, context dimensions DC , a meta-rule with its context sub-cube (?1, . . . ,?p) and its inter-dimensional predicates scheme (?1 ? ? ? ? ? ?s) ? (?1 ? ? ? ? ? ?r), the measure M used to compute criteria of association rules, the mini- mum support threshold minsupp, and the minimum confi- dence threshold minconf.

Traditionally, frequent itemsets can be mined according to a top-down search or a bottom-up search. The bottom- up approach complies with the antimonotony property of the Apriori algorithm [1] which states that for each non fre- quent itemset, all its super-itemsets are definitely not fre- quent. This property enables the reduction of the search space, especially when it deals with large and sparse data sets, which is particulary the case of OLAP data cubes. As summarized in Algorithm 1, we proceed by an bottom-up level wise search for large i-itemsets, where level i is the number of items in the set. We denote by C(i) the sets of i- candidates, i.e., i-itemsets that are potentially frequent, and F (i) the sets of i-frequents, i.e., frequent i-itemsets.

At the initialization step, our algorithm captures the 1- candidates from user defined analysis dimensions DA over the data cube C. These 1-candidates correspond to members of DA, where each member complies with one dimension predicate ?k or ?k in the meta-rule R.

For each level i, if the set C(i) is not empty and i is less than (s + r), the first step of our algorithm derives frequent itemsets F (i) from C(i) according to: (i) an item- set A ? C(i) should be an instance of an inter-dimensional predicates in DA; and (ii) an itemset A ? C(i) must have a support greater than minsupp.

input : C,DC,DA,DU , R, M, minsupp, minconf output: X ? Y, SUPP, CONF, LIFT, LOEV C(1) ? ?; for i ? 1 to (s + r) do  C(1) ? C(1) ? Aij ; end i ? 1; while C(i) ?= ? and i ? (s + r) do  F (i) ? ?; foreach A ? C(i) do  if A is an inter-dimensional predicates then SUPP ? COMPUTESUPPORT(A, M); if SUPP ? minsupp then F (i) ? F (i) ? {A};  end end foreach A ? F (i) do  foreach non empty B ? A do if A\B ? B complies with R then  CONF ? COMPUTECONFIDENCE(A\B, B, M); if CONF ? minconf then  X ? A\B; Y ? B; LIFT ? COMPUTELIFT(X, Y, M); LOEV ? COMPUTELOEVINGER(X, Y, M); return (X ? Y, SUPP, CONF, LIFT, LOEV);  end end  end end C(i + 1) ? ?; foreach A ? F (i) do  foreach B ? F (i) that shares i ? 1 items with A do if All Z ? {A ? B} of i items are inter-dimensional predicates and frequent then  C(i + 1) ? C(i + 1) ? {A ? B}; end  end end i ? i + 1;  end  Algorithm 1: Algorithm for mining association rules in a data cube  From each A ? F (i), the second step extracts associ- ation rules with respect to: (i) an association rule X ? Y must comply with the user defined meta-rule R; and (ii) an association rule must have a confidence greater than min- conf. The computation of confidence is also based on the user defined measure M according to formulas (2) and (3). When an association rule satisfies the two previous conditions, the algorithm computes its Lift and Loevinger criteria according to formulas (4) and (5). The compu- tation of support, confidence, Lift and Loevinger criteria are performed respectively by functions: COMPUTESUP- PORT, COMPUTECONFIDENCE, COMPUTELIFT and COM- PUTELOEVINGER which directly pick up required precom- puted aggregates from the data cube via MDX (Multi- Dimensional eXpression) queries.

Based on the Apriori property, the third step uses the set F (i) of large i-itemsets to derive a new set C(i + 1) of (i+1)-candidates. One (i+1)-candidate is the union of two i-itemsets A and B from F (i) that respects three conditions: (i) A and B must have i ? 1 commun items; (ii) all non empty sub-itemsets from A ? B must be instances of inter-    dimensional predicates in DA; and (iii) all non empty sub- itemsets from A ? B must be frequent itemsets.

According to the experiments1 presented in Figure 1, for a support and a confidence thresholds equal to 5%, we no- tice that the efficiency of the algorithm closely depends on the number of extracted frequent itemsets and association rules. The generation of association rules from frequent itemsets is more time consuming than the extraction of fre- quent itemsets themselves. In fact, an Apriori-based algo- rithm is efficient for searching frequent itemsets and have a low complexity level especially in the case of sparse data.

Nevertheless, the Apriori property does not reduce the run- ning time of extracting association rules from a frequent itemset.

0.1  0.2  0.3  0.4  0.5  0.6  0  200  400  600  800  1000  1200  # of association rules  0  20  40  60  80  100  120  140  160  # of frequent itemsets  Ru tim  e in  s ec  on ds  minsup = 5% minconf = 5%  Frequent itemsets Association rules  Figure 1. The running times of our algorithm according to # of frequent itemsets and # of association rules  5 Conclusion and perspectives  In this paper, we establish a general framework for min- ing inter-dimensional association rules from data cubes. We use inter-dimensional meta-rule which allows users to tar- get the mining process in a particular portion in the mined data cube. We provide a general computation of support and confidence of association rules that can be based on any measure from the data cube. This issue is quite interesting since it expresses associations which consider wide analysis objectives and do not restrict users? analysis to associations only driven by the traditional COUNT measure. We also propose to evaluate interestingness of mined rules with two additional descriptive criteria in order to express the rele- vance of rules in a more precise way than what is offered by the support and the confidence. We developed an efficient  1The experiments are conducted under Windows XP on a 1.60GHz PC with 480MB of main memory  bottom-up algorithm which adapts the traditional Apriori al- gorithm in order to handle the multidimensional structure of data.

Some future directions need to be addressed for this work. We plan to embed the measure in the expression of mined inter-dimensional association rules. In addition, we need to profit from the hierarchical aspect of cube dimen- sions to mine association rules at different level of granu- larities. Finally, we also have to cope with the visualization of mined association rules in the space representation of the data cube itself in order to make associations easier to inter- pret and to exploit.

