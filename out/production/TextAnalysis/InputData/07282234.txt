An Effective Approach to Mine Rare Items using  Maximum Constraint

Abstract? Rare association rule mining provides useful information from large database. Traditional association mining techniques generate frequent rules based on frequent itemsets with reference to user defined: minimum support threshold and minimum confidence threshold. It is known as support- confidence framework. As many of generated rules are of no use, further analysis is essential to find interesting Rules. Rare association rule contains Rare Items. Rare Association Rules represents unpredictable or unknown associations, so that it becomes more interesting than frequent association rule mining.

The main goal of rare association rule mining is to discover relationships among set of items in a database that occurs uncommonly. We have proposed a Maximum Constraint based method for generating rare association rule with tree structure.

Tentative results show that MCRP-Tree takes less time for rule generation compared to the existing algorithm as well as it finds more interesting rare items.

Index Terms? Rare Pattern Mining, Frequent Pattern, FP- Growth, Maximum Item Support Constraint.



I. INTRODUCTION Data mining provides various methods for discovering  correlations, patterns, trends or relationships from a large amount of data stored in repositories, corporate databases and data warehouses. It shows procedures for finding knowledge patterns which are hidden in large databases. Association rule mining, clustering, classification etc. are various techniques, used for extracting useful knowledge from repositories. Most of Researchers have focused on extracting useful frequent patterns using association rule mining. Reliable rules are very useful and needed in many number of areas.

Association rule mining is an essential data mining technique to find interesting associations between the entities (or items) in a database. It was proposed by Agrawal et.al. in 1993. Association rules are an important category of consistency and predictability that exist in a dataset.

Association rules provide a well-situated and efficient approach to recognize and characterize certain dependencies between various attributes in a database. In literature, it has been noted that there exists useful knowledge related to rare entities [4, 20].

Since the overview of association rule in [1], mining the association rules has been broadly studied in literature [2, 3].

Basic terminology of association rule mining is as follows. An  association rule is best expressed by means of the expression such that   . It shows that  occurrence of item X is higher than concurrence of item Y. X is known as the antecedent and Y, as the consequent.

The strength of association rule can only be calculated by means of its support and confidence [4]. Using support and confidence, a set of association rules can be extracted from the database. A rule is said to be strong if its support and confidence are greater than or equal to user defined minimum support and minimum confidence. Both frequent and rare association rules present different information about the database. Frequent rules focus on patterns that occur frequently, while rare rules focus on patterns that occur infrequently. In many applications, frequently occurred events are less interesting than rarely occurred events. However, frequent patterns signify the known and the expected associations while rare patterns suggest unexpected or previously unknown associations, which is more valuable to domain experts.

Example 1: The dataset shown in Table I (A). Assume a set of items I I1, I2, I3, I4, I5, I6, I7 . The dataset contains 10 transactions, so n=10. The set of items I1, I2  is a pattern. It occurs in four transactions. Its support S can be given as 1, 2 I ,I   0.4. An association rule from this pattern, say 2 1 will have confidence 2 1S I ,IS I  ..  1. If minsup = 0.4 and minconf = 0.75, the pattern I1, I2  is a frequent pattern and the rule 2 1 is a strong rule.

An itemset is said to be rare itemset if its support is   above  or equal to the minimum rare support threshold but less than the minimum frequent support threshold. Three possible types of rare itemsets are available: first, which are composed of rare items only, second contains both, rare and frequent items and third that has only frequent items which fall below the minimum support threshold. First two types of itemsets are known as rare-item itemsets. Rare-item itemsets are generally more interesting than itemsets of the third type, which we call non-rare-item itemsets. Experimental results are also available for that claims the importance and usefulness of rare-item itemsets.

TABLE I. (A) TRANSACTION DATASET (B) PATTERNS WITH SUPPORT GREATER THAN OR EQUAL TO 2. THE COLUMN TITLED ?S? REPRESENTS SUPPORT COUNT OF THE PATTERN. THE COLUMNS TITLED I AND II CORRESPONDS TO FREQUENT PATTERNS GENERATED IN ?SINGLE MINSUP FRAMEWORK? AND MAXIMUM CONSTRAINT MODEL. THE TERMS ?Y? AND ?N? IN THESE COLUMNS CORRESPOND TO FREQUENT PATTERNS GENERATED AND HAVE NOT GENERATED IN THE  (A) (B)  Tid Items T1 I1, I2 T2 I1, I3, I4, I5 T3 I3, I6, I7 T4 I1, I2 T5 I3, I6, I7 T6 I1, I3, I4 T7 I1, I2 T8 I3, I5 T9 I1, I2  T10 I3, I5  Pattern S I II I1 6 Y Y I3 6 Y Y I2 4 Y Y I5 4 Y Y I6 2 Y Y I7 2 Y Y I1, I2 4 Y Y I1, I3 2 Y N I1, I5 2 Y N I3, I5 4 Y Y  Pattern S I II I3, I6 2 Y N I3, I7 2 Y N I6, I7 2 Y N I1, I3, I5 2 Y N I3, I6, I7 2 Y N      A rare itemset consists of rare items. It can be obtained by setting a low support threshold but it leads to combinatorial explosion problem. Yet it is challenging to generate rare association rules using single support threshold based methods like Frequent Pattern Growth (FP-Growth) and Apriori. The problem of specifying an appropriate support threshold causes rare item problem. Using single minsup constraint to generate frequent patterns which have frequent and rare items raises the dilemma, called rare item problem. This problem is as follows [22].

1. We cannot find rare item, if minsup is very high.

2. For mining frequent and rare items, value of minsup  should be low. But it generates large amount of frequent patterns which are not useful.

Example 2: Let?s consider transactional dataset shown in Table I (A). With a high minsup=4, frequent patterns which consist of rare items are not found, i.e. I6, I7 . For generating frequent patterns which consist of rare items, we take low minsup=2. It generates too many uninteresting patterns along with frequent patterns, i.e. I1, I3 , I1, I5 , I1, I3, I5 .

To emphasize the ?rare item problem?, efforts have been  made in the literature to discover frequent patterns using ?multiple minimum support framework?. As per various user and application requirement, different models have been suggested in this framework. In Maximum constraint model [14], every item is specified with minimum item support (MIS). After that, a minimum support of pattern is denoted with the maximal MIS value among all its items. In this way, each pattern satisfies a different minimum support depending upon the items within it.

Example 3: Continue with Example 2, let MIS values for the items I1, I2, I3, I4, I5, I6 and I7 be 4, 4, 3, 3, 3, 2 and 2 respectively. The frequent patterns discovered by using maximum constraint model are shown in the fourth column of Table I (B). It is observed that the uninteresting frequent patterns which were generated with minsup = 2 in Example 2  had been pruned in this model as they failed to satisfy their respective minsup.

For finding rare association rules, maximum constraint model is more efficient. Mining frequent patterns using Apriori-like approach elevates performance problems.

Multiple scans were performed on a transactional dataset and a huge number of candidate pattern were generated.

The key contribution of this paper is an efficient algorithm called Maximum Constraint based Rare Pattern Tree (MCRP- Tree) that finds rare itemsets using tree structure with maximum constraint model. Unlike previous level-wise approach, MCRP-Tree does not generate and test all combinations of rare itemset. The proposed MCRP-Tree utilizes the prior knowledge i.e. item?s MIS value provided by the user at the time of input and discover only rare items from the transactional dataset. Tentative results show that proposed approach is more efficient. Proposed algorithm is an extension of RP-Tree that reduces number of association rules generated by pruning frequent patterns along with uninteresting items.

To our knowledge MCRP-Tree is a unique algorithm that uses maximum constraint model with tree structure.

The rest of the paper is organized as follows. In Section 2, we summarize the efforts made in the area of rare association rule mining. Section 3 describes basic concepts of rare association rule and presents the proposed approach, MCRP- tree for mining rare association rules. Tentative results are described with UCI datasets in Section 4. Finally Section 5 concludes the paper.



II. RELATED WORK Existing rare itemset mining algorithms are based on level-  wise approach, similar to the Apriori algorithm [5]. Apriori Algorithm employs iterative level-wise search for frequent itemset generation which uses a single minsup value at all levels to finding frequent itemsets. This algorithm is more useful for finding the frequent itemsets and not the rare itemsets except the case where the value of minsup is set to a lower value. It inherits the drawback of explosion of frequent itemsets generation and also consumes too much time, space     and memory for candidate generation process. It is a bottom-up approach.

Liu et al. [6] proposed MS-Apriori which is an extension of Apriori algorithm. MS-Apriori tries to mine frequent itemsets involving rare items. It assigns a minsup (MIS) value to each item and items having the MIS value higher than the lowest MIS value were used for generating frequent itemset. In that way this algorithm tried to overcome the rare itemset problem and was found more efficient than single minsup based algorithm. Rules which had Low support and high confidence were not identified by this algorithm. The reason for inefficiency of this algorithm was the removal of rules with higher MIS values.

Troiano et al. [7] analyzed the problem of bottom-up approach algorithms that searches through many levels. For reducing the number of searches the author proposed the Rarity algorithm that starts with identification of longest transaction from database and search rare itemsets in top-down approach.

It avoids lower layers which contains frequent itemsets.

Candidates (Rare itemsets) are pruned in two different ways.

Adda et al. [8] proposed AfRIM Algorithm that also uses top-down approach which is similar to the Rarity Algorithm.

Searches for rare items starts with the itemset having all items found in database. Pruning of candidates are same as Rarity Algorithm. It examined itemsets that had zero support, which was the major drawback of this algorithm.

Szathmary et al. [9] proposed two algorithms that can mine rare itemset. In those algorithms three type of itemsets were defined: minimal generators (MG), minimal rare generators (MRG), and minimal zero generators (MZG). MRG-Exp Algorithm used MRG for generating candidates in bottom-up fashion by using MGs. The MRGs represents a boundary that separated the frequent and rare itemsets. Other algorithm, ARIMA utilized these MRGs to generate the complete set of rare itemsets which was generated in MRG-Exp Algorithm.

When MZG reaches to border, this algorithm stops the search for non-zero rare itemsets. Because above that boundary there were only zero rare itemsets.

Koh et al. [10] proposed Apriori Inverse used to mine perfect rare itemsets. Except that, at the initialization, this algorithm was similar to the Apriori. Only 1-itemset that fell below minsup was used to generate two itemsets. Apriori- Inverse inverts the downward-closure property of Apriori. For allowing Apriori Inverse to find near prefect rare itemsets, Koh et al. also proposed several modifications.

Han et al. [11] proposed FP-Growth Algorithm which used frequent pattern tree (FP-tree) for storing transactions of database and reduce database scanning. One scan is for finding the items which satisfied minimum frequency support threshold; another scan is for initial FP-tree construction. This algorithm also supported multiple minsup framework.

Maximum Constraint Based Conditional Frequent Growth (MCCFP-Growth) Algorithm [12] is extension of FP-Growth algorithm. MCCFP-growth algorithm involves three steps: one is tree construction, second is compact MIS-tree derivation, and third is mining frequent patterns. This algorithm took more  time for database scan because of item pruning. It also occupied more memory space.

RP-Tree Algorithm [13] is a modification of the FP-Growth algorithm. Similar to FP-Growth algorithm, this algorithm performs database scan for counting support. In the second scan for building initial tree, RP-Tree used the transactions having at least one rare item. In this way, the transactions having non-rare items were not included in RP-Tree construction. This algorithm tried to provide complete set of rare-item itemset. RP-Tree is an efficient algorithm that uses the tree data structure and identifies most rare association rules.

Most of the algorithms used the fundamental Apriori approach which is single minsup based frequent pattern mining technique. It had potentially expensive pruning steps and candidate generation. Those algorithms try to find out all rare itemsets but they spent most of the time in searching for non- rare itemsets which tends to provide uninteresting association rules. To address the ?rare item problem?, ?multiple minsup framework? [6, 14?20] was used to discover rare association rules.  Different models were proposed in this framework.

They are: (i) minimum constraint model [6, 15, 17, 18] (ii) maximum constraint model [14].

? Minimum Constraint Model  In this model, every item has minimum item support (MIS). With the use of minimal MIS value among all items, minsup of pattern is represented. In this way, each pattern satisfies a different minsup value among the respected items within it. Instead of satisfying downward closure property, all pattern are satisfying sorted closure property [6]. As per sorted closure property, ?all non-empty subsets of a frequent pattern need not be frequent, only the subsets consisting of the item having lowest MIS value within it should be frequent?. Hence, based on this model Apriori-like [6, 17] or FP-growth-like [15, 18, 19] approaches consider frequent and infrequent patterns. The sorted closure property was briefly explored in [6].

? Maximum Constraint Model Maximum constraint model has been proposed in  [14]. In this model MIS values were given to each item and it is known as frequent pattern only if it satisfies MIS values of all the items. This model was capable to mine uninteresting patterns but, issue was that only Apriori-like approach was used with this model. As this approach was having performance problem, we cannot extend it. With this motivation, we propose tree like approach that uses this model for finding rare patterns.

The proposed Maximum Constraint based Rare Pattern  Tree (MCRP-Tree) is an improvement over existing algorithm in many ways. First is, it avoids expensive pruning step and item generation by using tree data structure based on FP-tree to find rare items. Second is, MCRP-Tree focuses on rare-item itemset which gives interesting rule and does not spend more time in finding non-rare-item itemsets which are uninteresting.

Third is, MCRP-Tree contains only rare items by excluding     the transactions which does not have rare items and also eliminate frequent items from the selected transactions. In the next section, we present the proposed approach which uses maximum constraint model for finding rare items.



III. MAXIMUM CONSTRAINT BASED RARE PATTERN TREE (MCRP-TREE)  A. Basic Concept: Rare Itemset The rare items are those that occur rarely in very few  transactions and are normally pruned out. But rare items have significant use in many domains. Support and confidence are the factors used to identify the rare items among the dataset.

Rare items have lower support value but value of confidence is higher.

The minRareSup threshold works as a noise filter. The items are considered as a noise if they fall below this threshold.

An itemset is called as rare itemset if it has support above or equal to the minimum rare support threshold (minRareSup) but less than the minimum frequent support threshold (minFreqSup).

For instance, suppose there are 4 items w, x, y, z   with supports w = 0.80, x = 0.30, y = 0.50, and z = 0.12, with minFreqSup = 0.15 and minRareSup = 0.05. If the itemset w, x, y  has a support of 0.09, then this itemset will be a non- rare-item itemset ((1) above) since all items are frequent, and its support lies between minFreqSup and minRareSup. The itemset w, z  will be a rare-item itemset ((2) above) assuming that the support of w, z   > 0.05, since the itemset includes the rare item z.

Formally, an itemset X is a rare itemset iff support minRareSup and support minFreqSup An itemset X is a non-rare-item itemset iff , support    support minFreqSup  An itemset X is a rare-item itemset iff , support    support The values of minimum rare support threshold  (minRareSup) and minimum frequent support threshold (minFreqSup) are set according to the characteristics of the dataset [13].

B. Maximum Constraint based Rare Pattern Tree (MCRP-Tree)  RP-Tree algorithm is a frequent itemset mining algorithm which is a modification of the FP-Growth algorithm. It performs only one database scan for counting item support.

RP-Tree uses the transactions which consist of at least one rare item for building tree. In this way, transaction that doesn?t have rare items cannot take part in RP-Tree construction. This algorithm requires minFreqSup and minRareSup in advance.

MCRP-Tree Algorithm shown in Algorithm 1 is the modification of RP-Tree algorithm. This algorithm accepts transactional dataset and similarly as RP-Tree, it perform only one database scan for counting support. With a prior knowledge of item?s MIS value, this approach discovers the rare items from the dataset. MCRP-Tree select only those  transactions which having at least one rare item in it. For example, if a, b, c  was the rare itemset for given database, then the transactions will have to contain at least one of a , b or c to avoid being pruned. At the time of tree construction, this approach takes only rare items and prunes other items from transaction. In this way, the proposed approach constructs only a rare item tree. For calculating MIS value for each item in the transaction dataset, Where,  is the support of item  in the dataset.  is the user specified lowest minimum item support allowed.  is used to control MIS value of items according to their support.

Range of  is 0 to 1.

During insertion of items into tree, order of the item should be according to the frequency of item in original dataset and not according to the pruned transaction dataset. It may be possible that rare items have higher support value than the frequent items. This is the reason behind not considering the support of pruned dataset. MCRP-Tree constructs conditional pattern base and conditional trees for each item existing in tree. In this way, MCRP-Tree will generate complete set of rare items.

Algorithm 1. MCRP-Tree Input: Dataset, minFreqSup Output: rareItemsets;  Initialization:  all unique items in ; countMIS(items) and countSupport(items);      | . sup . . sup  ;   | .  ;  ;  Mining:  ; for item i in tree do Build i?s conditional pattern-base and then i?s conditional FP- Tree ;    , ; end for  return rareItemsets;   MCRP-Tree Example:  Let us consider a transactional dataset as shown in Table I (A). Items 1, 3, 2, 5, 6, 7, 4 have support count 6, 6, 4, 4, 2, 2, 1 and MIS values 4, 4, 3, 3, 2, 2, 3 respectively. Value of Minimum Frequent Support is set to 5 (minFreqSup=5). An item is said to be rare if its support is less than the Minimum Frequent Support and greater than the respective MIS value of that item. So, 2, 5, 6, 7  are the rare items identified by this algorithm and are included in rareItems.

During the construction of MCRP-Tree, all the transactions are selected because each transaction has at least one rare item among rareItems. If the transaction does not have any rare item, it cannot contribute into the construction of a tree. In addition, since the support of 1, 3 is greater than minFreqSup and item 4 fails to satisfy MIS value constraint, they are ignored during construction of MCRP-Tree, as shown in Fig 2. The initial tree is constructed using RP-tree, which only ignores the items that falls below minRareSup=3, as shown in Fig 1. This RP-tree has 3 additional nodes that show frequent items as compared to the tree building using MCRP- Tree (shown in Fig 2). In addition, RP-tree does not contains 6, 7 rare items as it removes the items having support less than minRareSup which is constant for each item in database.

MCRP-Tree builds conditional pattern bases and conditional tree to find the rare-item itemsets for each rare item.

Fig  1. RP-Tree constructed from Dataset   Fig  2. MCRP-Tree constructed form Dataset

IV. RESULTS From the literature survey we can determine that all  algorithms can implemented in Java. With Brief survey, experimental result for number of itemset generated and Time taken for itemset generation by ARIMA, FP-Growth and RP- Tree algorithm can be found. Due to the computationally expensive pruning steps and candidate generation, time taken by ARIMA is significantly greater. From the experiment we can say that runtime of ARIMA is 32 times greater than FP- Growth in all datasets. RP-Tree generated far fewer itemsets for some datasets in comparison to FP-Growth in majority of cases [9, 11, 13].

MCRP-Tree is an extension of RP-Tree as it builds reduced tree with complete set of rare items and prunes all frequent nodes. With this approach we can reduce the time taken for itemset generation and can find complete set of rare items very efficiently as compared to the ARIMA, FP-Growth and RP- Tree algorithm. All existing algorithm spends most of the time finding rare items and as a result they identify non-rare or frequent items. For identifying complete set of rare items, proposed approach provides two constraints i.e., minimum Frequent support and MIS value. Proposed approach removes the frequent items from the transactions during tree generation and builds tree with only rare items known as MCRP-Tree. As insertion of node in the tree is computationally expensive, this approach significantly reduces the execution time as compared to others.

With the help of literature survey we can provide tentative results that compare Time taken for Itemset generation and number of itemset generated by proposed algorithm with existing algorithm (ARIMA, FP-Growth and RP-Tree). We can easily estimate that proposed algorithms required less than half time for execution and generate less no of itemset     Fig  3. Number of Itemsets generated   Fig  4. Time taken for Itemset generation

V. CONCLUSION Data mining is one of the largest and challenging areas of  research with the major topic ?Association Rule Mining?. Most association rule mining techniques concentrate on finding frequent rules. But rare association rules are sometimes more useful and interesting than frequent association rules.

Maximum Constraint Model is most effective model for finding rare items. However, mining rare itemset using Apriori- like approach raises performance issues. We present a new effective method for finding complete rare itemset from large database. To our knowledge, proposed MCRP-Tree algorithm is a unique method which uses tree structure with maximum constraint model to mine rare items. The MCRP-Tree algorithm will consider only the rare items while constructing the tree from the dataset. Thus, the tree which takes most of the time for insertion of node is avoided. As a result the processing time for mining complete rare items will be minimized. The effectiveness of MCRP-Tree is shown by the tentative results.

