An Association Rules and Sequential Rules Based Recommendation System

Abstract?Nowadays, more and more researches focus on how to provide products for customers based on their interests.

Recommendation system in electronic is one of the applications that are based on such mechanism.We designed and imple- mented an electronic commerce recommendation system used both association rules and sequential rules which is called ASRS(Association rules and Sequential rules based Recom- mendation System).Compared with conventional methods, more useful results can be found for using the ASRS.

Index Terms?Data-mining, Association rules, Sequential rules, Recommendation System.



I. INTRODUCTION  Data-mining can provide online products recommenda- tion, personalized web page, adaptive website services for e-commerce. One of the most common application using data-mining techniques for e-commerce is finding association relations between commodities. Base on such mechanism, the recommendation system in e-commerce has become one of the most successful application systems.

Recommendation systems allows a company to filter unnec- essary information, and therefore provide products for its cus- tomers based on their preference[1]. In Schafer?s paper, they create a classification of recommendation systems, including the interfaces they present to customers, the technologies used to create the recommendations, and the inputs they need from customers[2].

This paper has two primary contributions: 1)A description on combination of e-commerce and data-  mining, focused on technical, current situation of the commen- dation system.

2)A approach to designing and implementing an elec- tronic commerce recommendation system that based on asso- ciation rules and sequential rules mining.



II. RECOMMENDATION SYSTEM  Simply speaking, e-commerce recommendation system ap- ply statistical and knowledge discovery techniques to the problem of making recommendations during a live customer interaction and they are achieving widespread success in e- commerce nowadays[4].

In the following,there are a lot of methods that have been proposed for e-commerce commendation system.

A. Collaborative Filtering(CF)  CF first finds some customer whose purchase behavior is similar to that of the target customer, and predicts preference of the target user based on the similar users. GroupLens[3] and Ringo[4] are two earliest recommendation systems using CF algorithms. GroupLens help people find articles they will like in the available articles based on CF algorithms, while Ringo makes personalized recommendations for music albums and artists. However, it suffers from two major problems - the data sparseness and the scalability.

B. Bayesian Network  In Bayesian network, each node represents a discrete set of domain and connects with its parent?s nodes. The model not only can expresses implication relations between history data and new action of customers by Bayesian networks but also can give the parameter learning and adjusting for the model online[5].

C. Clustering Technology  The purpose of clustering is to describe target customer?s behavior by using a particular history customer. It seems a bit similar with CF. However, the biggest difference between it and CF is that the recommended reaction time reduces a lot.

This method try to partition items based on user rating data that was collected for the purpose of collaborative filtering, which will exist any type of content we are recommending[6].

D. Association rules  Association rules mining is to search for interesting rela- tionships between items by finding items frequently appeared together in the transaction database.A small number of cus- tomers? buying behavior will not greatly affect the results.

Thus, it can be used in the system that recommendation changes not so fast.

E. Sequential rules  In general, most of the technology introduced above neglect the sequence of purchase behavior. Sequential rules consider a way in which a customer?s purchase sequence evolve over time for the purpose of enhancing the quality of recommendations.

TABLE I A TRANSACTIONS DATABASE  TID T100 T200 T300 T400  T100 I1,I2,I5 I2,I4 I2,I3 I1,I2,I4  T500 T600 T700 T800 T900  I1,I3 I2,I3 I1,I3 I1,I2,I3,I5 I1,I2,I3

III. ASSOCIATION RULES ALGORITHMS  Association rules algorithms is aiming at discovering the relations among a large set of data items[7][8].If item B appeared frequently when item A appeared, then an association rules is denoted as A ? B (if A, then B). The support and confidence are two measures of rule. Support indicates that s% of transactions contain A  ? B .The confidence c states that c%  of transactions that contain both A and B.

For a rule X ? Y , where X ? I ,Y ? I ,X ? Y = ?,s and  c refer to the support and confidence, which are calculated as equation 1 and 2.

S = |X ? Y |  |D| (1)  C = |X ? Y | |X| (2)  A frequent-pattern tree can be designed as follows[7]: 1)It consists of ?null? node, a lot of subtrees which are  item-prefix, and plus a frequent-item-header table.

2)Each node in the item-prefix subtree consists of ID,  support count, and node-link. ID registers node, support count registers the number of transactions represented by the portion of the path reaching this node, and node-link points to the node in the FP-tree which has the same item-name, or null if there is none.

3)Each entry in the frequent-item-header table consists of ID, support count, and node-link. And node-link points to the first node in the FP-tree carrying the item-name.

According to the description above, we can construct FP- tree as follows:  1)Scan DB once, find frequent 1-itemset (single item pattern);  2)Order frequent items in frequency descending order; 3)Scan DB again, construct FP-tree: First of all, construct  conditional pattern base for each node in the FP-tree. If the conditional FP-tree contains a single path, simply enumerate all the patterns. Starting at the frequent header table in the FP-tree. Traverse the FP-tree by following the link of each frequent item. Accumulate all of transformed prefix paths of that item to form a conditional pattern base. Secondly, construct conditional FP-tree from each conditional pattern- base. For each pattern-base, accumulate the count for each item in the base. Construct the FP-tree for the frequent items of the pattern base. In the end, recursively mine conditional FP-trees and grow frequent patterns obtained so far.

In ASRS, there are three improvements in FP-Grow algo- rithm:  1)The node-link in each node points to parent node, rather  Fig. 1. FP-Tree  Fig. 2. Conditional FP-Tree  than sub nodes. This can improve the search efficient and avoid the situation that the number of nodes is uncertain;  2)The data structure of FP-Tree in ASRS can easily generate conditional FP-Tree and find path that has been given;  3)The codes that generate FP-Tree and conditional FP- Tree have high reusability.



IV. SEQUENTIAL RULES ALGORITHMS  Sequential rules discover frequent subsequences as patterns in a sequence database. The difference between it and asso- ciation rules is that the former is to find similarity between the transactions databases, and the latter is to find similarity in one transactions database.

As describe above, we define sequence mining as follows: Suppose I = {I1, I2, . . . , Im}be a set of items, where In is  a product in market. And I means a collect of all products.

Itemsets: E = {< A > |A ? I,A ?= ?} ,a transaction is a  subset of items. Sequence:S =< S1, S2, . . . , Sn >, where Si represents any transactions customer had at anytime anywhere.

A sequence < a1, a2, . . . , an > is call subsequence of another sequence < b1, b2, . . . , bm > only is there exist integers 1 ? j1 < j2 < jn ? m such that a1 ? bj1, a2 ? bj2, . . . , an ? bjn.

In PrefixSpan algorithm, (n+1)-length sequence patterns is generated by n-length recursively. First of all, the method  TABLE II ANOTHER TRANSACTION DATABASE  TID ID Items  1 AMBKCDEFGVFLHAHBSIBCLGH  2 AIGHGEHFREIBECD     scans the database to find all frequent items, each of which is 1-length sequence pattern. These are < A >: 2;< B >: 2;< C >: 2;< D >: 2;< E >: 2;< F >: 2;< G >: 2;< H >: 2;< I >: 2; and < pattern >: count represents the pattern and its associated support count. Then 2-length patterns are generate from 1-length patterns, such as < AF >: 2, < AB >: 2, < AC >: 2, < AH >: 2, < AG >: 2, and < AE >: 2. And the pattern < A ? ? ? ? ? ?B > and < AB > are the same. These patterns whose postfix- sub-sequences are A is called a projected database.3-length pattern with the prefix AE are found as both < AFB >: 2 and < AFG >: 2. The character B in < AFB > is created as a set of the postfix-sub-sequences for the characters MI. Similarly, others can be found by constructing projected databases with postfix-sub-sequences for < AB >,< AC >, and others.



V. RECOMMENDATION SYSTEM BASED ON ASSOCIATION RULES AND SEQUENTIAL RULES  Traditional recommendation systems that are based on as- sociation rules are collaborate-filtering-like, which means to recommend by studying association between customers. How- ever, sequential rules can also be used to discover customer?s purchase behavior. For example, a customer bought A,B,C, and bought D,E,F another day. No matter when customer bought, this reflects customers? interest. That is to say there is something connected between these products. Therefore, to identify the connections between products customer purchased these days is a meaningful result.

Based on the considerations above, we used both association rules and sequential rules to research this recommendation system.

A. Framework  The designation and recommendation processing is as fol- lows:  (1) is database table, which can store product that customer bought. It can be used as core registration form, including order No, customer ID, products, time. This function can transform different data from different website into database table with unified format.(2) is used as association rules mining. (3) is used as sequential rules mining. The rules are stored in a library after being weighted. It is the main basis of recommendation. And each rule is identified by a unique score. When customer buy products, commerce logic server will run products recommendation engine, finding n products that matching the requires best according to the scores. A registration is needed when recommendation finished, which is top-N broad.

It can be used as statistical information. Or select top n products or random products when products selected by rule library are not enough.

B. Recommendation strategy  Recommendation strategy plays a key role in e-commerce system. It can influence reaction time and recommendation quality directly.

Fig. 3. Flow chart  1) Generate rule library. It is consist of association rules and sequential rules. Score is recorded to balance importance of rule system generated. We define Score as follows:  For simple association rules:  Score = SupportAssoConfAsso (3)  For sequential rules:  Score = SupportseqConfseqWeight1 (4)  For both association rules and sequential rules:  Score = SupportAssoConfAsso+SupportseqConfseqWeight2 (5)  Weight is set to distinguish importance of different rules in recommendation system. We define Weight1 as 0.9, Weight2 as 0.7.

2)Rule is defined as: (i1, i2, . . . , in) ? d, where right item is single. The rule (i1, i2, . . . , in) ? (d1, d2, . . . , dn) is impossible to generate. Because the suppose and confident of (i1, i2, . . . , in) ? d1, (i1, i2, in) ? d2, . . . , (i1, i2, . . . , in) ? dn are definitely bigger than that of (i1, i2, . . . , in) ? (d1, d2, . . . , dn)  3)The inputs of system are products customer purchased, and outputs are recommendations. For instance, customers buy products (10,11,12,13), and then system will find rules whose left items are (10,11,12,13). The right items are found ordered by Score. During this processing, we use an ingenious method to make sure reaction time won?t delay when product number increases. We define an array RS[n], whose length is equal with the number of products. Its subscripts include all of the products. For example, when customer buy (10,11,12,13),     set RS[10], RS[11], RS[12], RS[13] as 1, the other as 0.

Scan the database , compare with RS array. If the right items of marched rule don?t exist in products purchased list.

( 10, 11 ? 121 is rule marched. 11, 12 ? 121 is not), they are back-up recommended items. Then calculate these items, the top n items in the list ordered by Score is needed.

These methods are nothing to do with numbers of items customers inputted. And it cost a lot of time to scan rule library and calculating the recommended items. Experiment shows that recommended reaction time is short (about 1s), which can supposed to be constants. That is why we don?t need (i1, i2, . . . , in) ? (d1, d2, . . . , dn).

4)In case that the products recommended are not enough, we will use a back-up products list to find other products, rather than reducing the threshold like [8].



VI. EXPERIMENTAL EVALUATION  A. Data sets  We used data from GroupLens Research Group, Depart- ment of Computer Science and Engineering, University of Minnesota. MovieLens in this Group is a typical web-based research recommender system.

There are five domains for each record, which are UserID, MovieID, Rating, Timestamp. UserID registers customers, ranging from 1 to 6040. MoiveID is marked as customer scored. Rating is a score, which can be 1,2,3,4,5. Timestamp is timestamp. There are 100 thousand records in the data we used, which record information about 1682 movies that 943 customers scored.

In ASRS, we use these data to simulate transaction data. Ev- ery transaction consists of movies that have same score. Every sequence consists of transactions that have same UserID. Thus different movies that have same score and different products that are bought through one transaction are also important.

B. Experimental Results  Our experiment shows that ASRS outperform better than algorithm which generated by computer automatically. And it also shows our method can provide recommendation informa- tion sufficiently and integrally and have a better recommenda- tion quality.

Experiment is performed on a 2500+AMD PC machine with 1 G main memory, running Microsoft Windows XP. All the methods are implemented using Microsoft Visual C++ 6.0.

As a result, system can only recommend 6 results based on association rules, which means rule library is unable to provide enough recommendation information. While there are 51 recommendation results based on sequential rules,However, ASRS can recommend 53 results. Because we use both asso- ciation rules and sequential rules, which provide more useful information for system, they are meaningful and necessary.

Now we conduct experiment that can be proved our system has better recommendation quality. We limit support and confident when generate rules. As a result, system gener- ates 27485 rules, which cover 1589 commodities in 1683 commodities. Fig.4 shows that the increasing of commodities  Fig. 4. Reaction time  won?t influence the quality of system.



VII. CONCLUSION  In this paper we describes the development of e-commerce recommendation system and the technology they used, put forward our design ideas based on the shortcoming of existing recommendation system. We used a highly efficient algorithm combine with FP-Growth in association rules mining algorithm and PrefixSpan in sequential rules mining algorithm. And we also designed a high response of recommendation strategy, which reflects the characteristics of the overall transaction data and does not need any on-line data-mining processing and won?t be influence when the number of commodities increasing. Our designation guarantees that ASRS has a good self-adaptation, and the experimental results also show that it can provide information more fully and completely, with good reaction time.

