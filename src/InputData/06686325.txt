Multidimensional Data Mining For Anomaly Extraction

Abstract?Due to heavy traffic the network monitoring is very difficult and cumbersome job, hence the probability of network attacks increases substantially. So there is the need of extraction anomalies. Anomaly extraction means to find flows associated with the anomalous events, in a large set of flows observed during an anomalous time interval. Anomaly extraction is very important for root-cause analysis, network forensics, attack mitigation and anomaly modeling. To identify the suspicious flows, we use meta-data provided by several histogram based detectors and then apply association rule with multidimensional mining concept to find and summarize anomalous flows. By taking rich traffic data from a backbone network, we show that our technique effectively finds the flows associated with the anomalous events. So by applying multidimensional mining rule to extract anomaly, we can reduce the work-hours needed for analyzing alarms and making anomaly systems more effective.

Index Terms?data mining; association rules; detection algo- rithm;

I. INTRODUCTION  The increasing count ability of huge network traffic flow triggers the possibility of unauthorized actions. As there are lots of anomaly detection techniques to detect the unauthorized actions like malicious attacks, threads. But as the traffic is very huge they fail to reduce the number of false positives or simplifying training and calibration. These anomaly detection techniques solve lots of problems using statistic, modeling and efficient data structures. Nevertheless, they have not yet gained widespread adoption, as a number challenges, like reducing the number of false positives or simplifying training and calibration, remain to be solved. The main problem in network is to identifying the traffic flows associated with an anomaly during a time interval with an alarm. We call finding these flows as the anomalous flow extraction problem or simply anomaly extraction. The goal of anomaly extraction at the high level is: 1.Gaining more information about anomaly alarm.

2.These identified anomalous flows can be used for a number of applications, like root-cause analysis of the event causing an anomaly, collecting network forensics, improving anomaly detection accuracy, and modeling anomalies.

A. Anomaly Extraction  The aim of system is to extract anomalies is described in Fig.1. In figure, events with a network-level footprint, like  Fig. 1. Event WorkFlow  attacks or failures, trigger event flows, which, after analysis by an anomaly detector, may raise an alarm.Here we have to extract anomalous flows from network traffic, which is along with the event flows. So to extract exactly all triggered event flow is very hard practically. However, knowing or quantifying if this goal is realized is practically very hard due to inherent limitations in finding the precise ground truth of event flows in real world traffic traces. The goal of anomaly extraction is to find a set of anomalous flows coinciding with the event flows.

A meta-data equivalent to an alarm would be provided by the anomaly detection system to counter the set of candidate anomalous flows.The candidate anomalous flows to the af- fected IP addresses or port numbers range can be restricted because of these meta-data. A model could be build to describe the normal flow characteristics and for identifying deviating flows, to determine anomalous flows. Because of huge vari- ability of flow characteristics ,building such a detailed model is very complex task. The approach of anomaly detection at the initial step of individual flows could be used by comparing flows during an interval with normal or passed interval flows and check for changes, like new flows that were not previously observed or flows with significant increase or decrease in their volume [8].



II. LITERATURE SURVEY  A brief explanation of anomaly detection is given in pre- viously appeared paper [3]. Most related to our, Silveira and Dioty [11] introduced a tool called URCA that searches for   DOI 10.1109/ICACC.2013.8    DOI 10.1109/ICACC.2013.8    DOI 10.1109/ICACC.2013.8     anomalous flows by interactively eliminating subsets of normal flows. URCA also classifies the type of a detected anomaly.

Nevertheless, it requires to repeatedly evaluating an anomaly detector on different flow subsets, which can be costly.

Compared to this work, we shows that simply computing frequent item-sets on pre-filtered flows is sufficient to identify anomalous flows. DoWitcher[14] is a scalable system for worm detection and containment in backbone networks. Part of the system automatically constructs a flow-filter mask from the intersection of suspicious attributes (meta-data) provided by different detectors. We also leverage suspicious attributes from an anomaly detector and study the anomaly extraction problem in more depth. We highlight that using the intersection can miss anomalous flows and find that the union of the meta-data combined with association rules mining give better results. Crovella and Diot [8]. use sketches to create multiple random projections of a traffic trace, then model the marginals of the sub traces using Gamma laws and identify deviations in the parameters of the models as anomalies. In addition, their method finds passable anomalous source or destination IP addresses by taking the intersection of the addresses hashing into anomalous sub traces. Compared to this work, we intro- duce and validate techniques to address the more challenging problem of finding anomalous flows rather than IP addresses.

We use SNMP data to detect network-wide volume anomalies and to pinpoint the original destination (OD) flow along which an anomaly existed. In contrast, our approach takes as input a large number of flow records, for example, standard 5- tuple flows, and extracts anomalous flows. An OD flow may include millions of both normal and anomalous 5-tuple flows and, therefore, can form the input to our methodology. We, use sketches to randomly aggregate flows as an alternative to OD aggregation. However, the work and evaluation focus primarily on anomaly detection. Association rules have been successfully applied to different problems on networking. Li and Deng [5] show how association rules can be used to extract intersection intrusion patterns from system calls and tcp dump logs. We describes heuristics for finding a minimal set of frequent item-sets that summarizes a large set flows.

Here we use association rule mining to find rare events that are suspected to represent anomalies in packet payload data.

Compared to all these studies, we show how association rule mining can be combined with anomaly detection to effectively extract anomalous flows. Hierarchical heavy-hitter detection methods group traffic into hierarchical clusters of high resource consumption and focus primarily on optimizing computational performance for summarizing normal traffic.

For example, they have been used to identify clusters of web servers in hosting farms. Hierarchical heavy-hitter detection is similar to frequent item-set mining in that both approaches find different forms of multidimensional heavy hitters. Compared to these studies, we learn that intelligently combining multidi- mensional heavy-hitters with anomaly detection enables us to extract anomalous flows. In addition, frequent item-set mining scales to higher dimensions better than existing hierarchical heavy-hitter detection methods. Finally, substantial work has  focused on anomaly extraction in backbone networks[9] [4] [2] as shown in figure 2.

Fig. 2. Apriori for mining anomalies

III. PROPOSED WORK  Fig. 3. Overview of proposed work  Our approach to the anomaly extraction problem is given in Fig.3. In network traffic there is a huge data set, in our system we collect those dataset by monitoring network traffic by using histogram technique to detect the anomaly in live network traffic. Here n is the number of histogram-based detectors monitor network traffic and then detect anomalies.

While detecting the anomaly, we took the union set of meta- data which is also provided by n detectors to pre-filter a set of suspicious flows. The flow pre-filtering eliminates a large fraction of the normal flows. Then on these pre-filtered data- set the system apply multidimensional association rule mining concept. This approach took one basic assumption as frequent item-sets in the pre-filtered data are often related as anomalous event.

A. Flow Prefiltering  Pre-filtering take all the flows which match the union of the meta-data that is Vj which is found by n detectors, where j= 1 to n are filtered. Pre-filtering is useful to remove a large part of the normal traffic. So this pre-filtering help to generates a substantially smaller dataset that results in faster processing as well as it improves the accuracy of multidimensional association rule mining by removing flows that could result in false-positive item-sets. In this approach we maintain flows     matching any of the meta-data instead of all the meta-data. In other words, instead of taking intersection of flows matching meta-data we take the union of the flows matching meta-data.

It is very important to take the union because recognized meta- data can be flow-disjoint, meaning that they appear in different flows, in this case intersection will give empty set.

B. Frequent Item-Set Mining  Association rule help to determine the items that are seen recurring together in a data set and widely used for market basket analysis. Market basket analysis considers fixed list of items for capturing the increase or decrease in inflation of specific market. The buying of fixed list items is referred as an item set. Association rule have two measures of rule, i.e Support and Confidence.Support is referred as all the transactions under analysis show that two or more items are purchased together and Confidence is referred as increased percentage of buying two or more items together. In this system, association rule must have to satisfy both, a minimum support threshold and minimum confidence threshold. These thresholds can be set by authorized persons.

Since now days data items and transactions are organized in multidimensional data, it is natural to extend mining frequent item-sets and their corresponding association rules to multidimensional data.It is very difficult to find strong associations among data items for low level dimensions so to get the better result multidimensional mining is very use- ful, whereas multidimensional association rules involve more than one dimension or predicate. Same method is used for multidimensional association rule, but by using same method only it will give better result.

To discover all association rules problems in a data set can further be splitted in two sub-problems.

1) Important challenge is to find frequent item sets which appear in more than a threshold number of transactions.

2) In this problem a frequent item-set imples a set of candidate association rule. E.g A frequent item set i1,i2,i3,i4 gives the candidate rule i1,i2,i3 ? > i4, i1,i3,i4 ? > i2 and i2,i3,i4 ? > i1.

In this paper we first find frequent item-sets to extract anomalous flows from a huge set of flows observed during a time interval. Then our assumption for applying frequet item- set mining to extract the anomalous flows is that anomalies typically result in large number of flows with similiar charac- teristics, for e.g I.P addresses, port numbers.

C. APriori Algorithm  APriori algorithm for multidimensional mining is shown below:  1.Find the set of frequent item sets from the item-set I=i1,i2 to in, here consider any subset of item-set also frequent i.e if AB is a frequent item set then A and B also a frequent item- sets.

2.Then iteratively find the frequent item-sets with cardinal- ity from 1 to k (item-sets) and use these frequent item sets to generate association rule. Here Ck is generated by joining  Lk-1 by itself. After joining prune step is used to avoid heavy computation due to large Ck.

3.Now for L- frequent item-set check, for (k=1;Lk!=Null ; k++) then Generate Ck from L-item sets.

4.Then foreach transaction t in database do increment the count of all candidates in Ck+1 that are contained in t.

5.Here Lk+1 is the candidates in Ck+1 with min-support and minimum support is calculated by the condition min-conf ? =support-count (l)/support-count(s).

6.Return the union of all item-sets, which are having fre- quent item sets. APriori is designed to operate on databases containing transactions, for example, collections of items bought by customers. Other algorithms are designed for find- ing association rules in data having no transactions or having no timestamps. As is common in association rule mining, given a set of item-sets (for instance, sets of retail transactions, each listing individual items purchased), the algorithm attempts to find subsets which are common to at least a minimum number of the item-sets. APriori uses a ?bottom up? approach, where frequent subsets are extended one item at a time a step known as candidate generation and groups of candidates are tested against the data. The algorithm terminates when no further successful extensions are found. The standard algorithm for discovering frequent item-sets is the APriori algorithm. APri- ori computes in each round the support for all candidate l- item-sets.



IV. EXPERIMENTAL RESULTS  Fig. 4. Outcome of our system  The figure4 shows the last outcome of our system when we perform multidimensional data mining. This system classify the anomalies as true or false positive, by performing the 15 days cross comparision and 200 anomalies in total. Here each anomaly is cross checked with our multidimensional technique.

By using multidimensional data mining technique, we re- duce the false positive rate. So we will get the better result with reduction in cost also.

Fig. 5. The X-Axis contains the details of Source and Destination IP adderesse and Y-Axis consists of total number of transactions.

The above graph shows the result of our system when the transaction count is increased. It shows the anomaly detection ratio when number of transaction craoss the minimum support level.



V. CONCLUSION  Anomaly extraction takes as input a large set of flows and aims at finding the flows associated with the event(s) that triggered an observed anomaly. It is very useful for finding the root cause of detected anomalies, which helps in anomaly mitigation, network forensics, and anomaly modeling. This paper introduces a histogram-based detector that provides fine- grained meta-data for filtering suspect flows. Furthermore, we introduced a method for extracting and summarizing anoma- lous flows. This method models flows as transactions and applies frequent item-set mining to find large sets of flows with identical values in one or more features. Using real anomalies and traffic traces from a medium sized backbone network, we showed empirically that thee extracted frequent item-sets pinpoint the root cause of the anomalies. In addition, frequent item-set mining produced very few false positives, which could be trivially filtered out by an administrator. The presented anomaly extraction approach is generic and can be used with different anomaly detectors that provide meta-data about identified anomalies. It reduces the work hours needed for the manual verification of anomaly alarms.

