201O 2nd International Conforence on Education Technology and Computer (ICETC)

Abstract-This paper presents an improved scheme over the  existing Port-Knocking and Single Packet Authorization by  employing One-Time Password to generate the authorization  tokens for the server to verify the authenticity of client before  allowing the deployment of dynamic firewall rules. This One  Time Knocking framework utilizes mobile networks such as  GSM or CDMA network as an out-out-band channel to create  a 2-factor authentication. Our improved scheme protects  against off-line and on-line dictionary and brute-force pass  word attack. It also provides a strong association between  Port-Knocking or Single Packet Authorization and the post  authentication connectivity between the client and server thus  stopping adversaries from hijacking the session by Man-In  The-Middle attacks.

Keywords-Port Knocking; Single Packet Authorization; 2-  Factor Authentication; One-Time Password

I. INlRODUCTION  In the last 10 years, there have been many developments  on the Internet. It continues to evolve. To-date, there exists  various online applications and services and new ideas are  still being built onto it. Together with uprising of the new  applications and services over the Internet, the amount of  sensitive information also become increasing. As a result,  there are now more attacks and security risks on the Internet  compared to 10 years back.

In response to that, security schemes and systems were  created and deployed to mitigate the attacks and risks. How  ever, the attacks have also got better. Malicious adversaries  have improvised their attacks from passive to active and  have recently become more automated [1] with the use of  trojans, worms and botnets. On most part, firewalls can be  used to block and slow down remote attacks coming from  these automated programs but it is not a perfect solution as  applications and services that bind to certain ports need to    remain opened to allow users to access remotely. If these  attacks are of zero-day [2], the servers running those appli  cations and services could be compromised even though  they are being shielded by firewalls.

Luckily there is a possible solution. Such attacks could  be protected by using Port-Knocking (PK) [3] on top of a  firewall. Due to some weakness found in the PK design, Sin  gle Packet Authorization (SPA) [4] was proposed as an im  provement over PK. Both PK and SPA work by allowing  firewall to set "Deny" as the default reaction for communica  tion send to all the ports. Only successful authentications  978-1-4244-6370-11$26.00  2010 IEEE  Hoon-Jae Lee, Hyotaek Lim  Department of Computer Engineering  Dongseo University  Busan, Korea  {hjlee,htlim}@dongseo.ac.kr  with the PKISP A daemon will allow authentic clients to pass  through the firewall and connect to the corresponding ports.

The mechanism will be explained in more depth in the later  sections of this paper.

In this paper, we proposed a framework that uses a One  Time Password (OTP) that is generated using Pseudo  Random Number Generator (PRNG). The OTP will then be  passed to the user who wishes to perform PKISP A authoriza  tion through SMS. Finally the OTP will be input to PKISP A  client to generate the authorization token and build up an  IPsec VPN tunnel.

The structure of this paper is organized as follows. We  will first go through a brief review on some cryptographic  primitives related to the content of this paper. Section III  discusses some related works of PK and SPA and their issues.

In section IV we describe our OTK framework. In section V,  we will explain how the security issues could be solved with  the new OTK scheme. We then analyze our OTK from secu  rity perspective and discuss any possible weakness in securi  ty. Finally we conclude by giving a sununary .



II. CRYPTOGRAPHIC PRIMITIVES  A. Cryptographic Algorithm  This could refer to a cipher (asymmetric or symmetric  which further divides into block or stream-based), one-way  hash function or pseudo random function [2]. These algo    rithms are used as building blocks of a cryptographic system.

B. Random Number Generator (RNG)  RNG produces a series of numbers that are random or  appeared to be random (unpredictable). There are 2 classes:  Pseudo-random (PRNG) and True-random (TRNG) [2]. A  PRNG is based on deterministic computations while TRNG  produces random number by sampling unpredictable physi  cal events. TRNG is usually built on top of hardware while a  PRNG can be more flexibly implemented in software with  the help of some cryptographic primitives, e.g. a block cipher  running on Counter Mode or a stream cipher which the ran  dom numbers produced are suitable for cryptographic pur  pose.

C. Keyed Hash Function  Also known as a Message Authentication Code (MAC)  V5-209  20i 0 2nd international Conforence on Education Technology and Computer (ICETC)  Client  Eve  (a) Default State  (b) Port-Knocking  PK  Accept  Inactive  Deny  (c) Authenticated  Figure 1. Port Knocking  algorithm. It uses one-way cryptographic hash function to  generate a MAC by feeding a message of arbitrary length  and a secret key [2]. Nonces may also be included. Unlike  the hash function which only provides integrity verification,  a MAC also provide authenticity verification assuming that  the secret key is only known by trusted entities.

D. Firewall  A firewall is a piece of software program running on a  computer system or a hardware device placed between a  protected network and an unprotected network that examined  all network traffic between these two networks [5]. It prohi  bits unauthorized inbound and outbound data packets based  on a set of predefined security policies, protecting the under  lying services or resources from being intruded by malicious  parties. Only trusted traffic is allowed to pass through the    firewall whereas restricted traffic is discarded.

E. IPsec  IPsec is an open standard protocol suite [6] used in net  work layer for Internet Protocol (IP) communications securi  ty control. Internet Authentication Header (AH) and Encap  sulating Security Payload (ESP) are two member protocols  available in IPsec, in which the formal offers data origin  authentication, integrity protection and against replay attack  while the latter offers the same services but with an addition  al confidentiality protection. Each of the protocols supports  transport mode or tunnel mode. In transport mode, the IP  packet payload is encrypted or authenticated; whereas in  tunnel mode, the entire IP packet (comprising of IP header  and payload) is encrypted or authenticated, creating a Virtual  Private Network (VPN) communication between the hosts.

Security Association (SA) is a collection of security rules  and parameters that is used by IPsec to protect network traf  fic. It can be managed manually or automatically. A pair of  SAs is required to create and coordinate at two end points in  a bi-directional communication. An IPsec implementation  must have at least one Security Policy Database (SPD),  where protection is provided based on rules set in the SPD.

Entries that defined security parameters associated with dif  ferent SAs are stored in a Security Association Database  (SAD). IPsec uses Internet Key Exchange (IKE) [7] protocol  to negotiate, establish and auto-manage SAs. It dynamically  establishes a shared state environment in IPsec as a replace  ment to the manual state handling.



III. RELATED WORKS  The first academic publication as research paper of the  idea of firewall authentication was back in 2002 [8] and was  then later coined as PK in 2003 [3]. The mechanism of PK  was initially a simple solution to allow concealment of net  work ports, depicted in Figure 1. Using PK daemon, firewall  rules can be dynamically modified based on the authenti  cated "knocking". SPA works similarly to PK by using a  single packet to perform authentication on the firewall and it  solved a few issues [4][9] in PK.

After the idea of PK and SPA were published, many  network administrators and researchers have worked on the  actual implementation. Jeanquier performed a thorough  V5-210     (5) SPA Client: Derive  client IPsec SA and  setup SAD/SPD  Internet  (8) TCP connection setup  & data exchange  (through IPsec VPN)  /' - -------- ----------,;t;,-;';/-Net;;,k --, I  I  I  I (7) SPA Daemon: Modify FW Rules,  ~ derive server IPsec SA and setup SAD/SPD ? o ? , 'r9)(j,  Firewall Server eety/)te  (with SPA Daemon) rt ""ef:> tr1rr;  \  Ie .........

v>  ?

-n  ?

?

0-  '0  ?

>.' ()  \  Application Server  (SSHD)  - (1) SMS Req uest----------_  User  _ ---------- ( 3b ) SMS OTP  (Out-of-band Channel) (2) CPRNG: Generate OTP  Transceiver RNG Server  \_-------------------------------,  Figure 2. One-Time Knocking Framework  analysis [9] and pointed out a few issues. One of them is the  password-based cryptographic keys. From the list in [10], we  found various existing works on PK and SPA but unfortu  nately most of them use static password to generate the re  quired knocks and only few are still being maintained for  continuous development. Furthermore only 2 out of 36 im    plementations, namely Cerberus [11] and COK [12] de  scribed that OTP was used in generating the knocks. Howev  er the OTP methods used in both implementations are based  on static password as well. This is a problem because once  the token is captured by the adversary, the adversary could  launch off-line password search using dictionary or brute  force method.

In Cerberus, its OTP is generated by hashing together 4  pieces of information: time-stamp (up to minute accuracy),  server seed, user's pass-code and the source IP address.

Timestamps can be easily deduced by matching the time of  sniffing the knock and the source IP is easily retrievable  from the IP packet header. The server seed and user pass  code remain static and are reused every time which nullified  the concept of one-time usage. The use of time-stamp how  ever provides a salt in the hashing process and stop replay  attack.

COK uses a different approach which OTP method is  based on hash chaining used in SlKey system described in  [13][14][15]. The user's password is hashed iteratively to  create a chain of outputs. Since each output of a secure hash  function is irreversible, by using these outputs in reverse  order, they become the OTPs. Similar to Cerberus, this OTP  method only stops replay attacks while vulnerable to offline  password search and stolen-verifier attack [16].

It is also worth noting that both implementations are no  longer being maintained and updated frequently. To-date,  fwknop [4] (SPA variant) is the most well-known implemen  tation that is still being actively maintained. Its authentica  tion tokens are generated using the method quite similar to  Cerberus. Newer versions of fwknop do support tokens to be  generated using asymmetric cryptographic algorithms of  which brute-forcing private keys that are very large in bit  size is much harder. However, the private keys can still be  stolen when used on computers that have been compromised  with trojans and key-loggers.

Another particular problem to be noted is the association  between the knock and the post-knocking connectivity to the  port opened by the knock. There is no guarantee that the  client who connects to the open port is the same client that  who is authenticated to the port since there is no linkage in  between. Using spoofed IP in a standard Man-in-the-Middle    (MITM) attack, adversary can masquerade as the original  client that is connecting to the open port while dropping all  further traffic from the original client to the server after it has  done the knocking. Current existing implementations have  no way to detect and stop this kind of hijacking.

In the later sections of this paper, we will use PK and  SPA interchangeably and either one of the terms refers to  both variants.

V5-211  IV.

ONE-DMEKNOCKING KJ will be used to encrypt data for SPA confidentialIty, K2  will be used to calculate MAC for SPA. K3 and K4 will be  A. Notations  ID  - User's identity  TS - Time-stamp  PSA - Parameters of an IPsec SA  m - Plain-text  mJ II m2 - Concatenation of ml and m2  K - Secret key K  E(K, m) - Encryption of m using key K  H(K, m) - MAC ofm using key K  KDF(K, S, 1) - Key Derivation Function that takes key  K and salt S and iterate i times  B. Proposed Scheme  Instead of having the users to choose a static password  which may or may not be strong and updated frequently, we  propose that to allow the system to generate random pass  word of sufficient length in real time by using a cryptograph  ically-secure PRNG. It is also possible to use a TRNG but it  would be costly. PRNG is easier to implement and would be  more flexible. Our proposed framework is simplified and  shown in Figure 2.

When user requires an OTP, request can be made by  sending SMS (in a certain format) to the server. In this sce  nario, the SMS channel is considered out-of-band (OOB).

Server will generate the OTP and pass it back to user through  the same OOB channel. User's mobile number needs to be  pre-registered with the server so that only requests from es  tablished, trusted number will be processed to avoid unau  thorized request from other sources. One example of such    SMS could contain:  REQOTP<ID>  It should be mentioned that unless the OTP is consumed  or the validity time exceeded, the RNG server should not  generate a new OTP. This is to protect the RNG server from  being spammed by SMS with spoofed mobile numbers. If  the server kept refreshing the OTP when it received SMS  requests for the same ID, then the user cannot pick the cor  rect OTP to be used. This leads to a DoS attack on user's  side. Although the RNG server can generate the OTP effi  ciently, the server may still suffer from DoS attack if the  OTP mechanism is not being protected in such way. SMS  reply from the server would include:  <Time-stamp>: <Random Port> <OTP>  Time-stamp allows the user to detect the freshness of  OTP and the SPA packet containing the authorization token  must be sent to the specified random port. Once the OTP and  the port is input to the SPA client, it will go through a Key  Derivation Function (KDF) such as PBKDF2 in PKCS #5  [17] to derive 4 more keys of sufficient size. The random  port will be used as salt/nonce in the KDF as follow:  KJII K211 K311 K4 = KDF(OTP, Port , 1)  where i ? 1000  used for IPsec VPN which will be explained shortly. The  SPA packet is shown as below:  SPA = ID II TS II E(KJ. PSA) II MACSPA  MACspA = H(K2' ID II TS II E(KJ, PSA  Using OTP together with KDF will further strength the  OTP and makes password search extremely hard. However,  this authorization token would not be secure if it is used  alone since adversary could always spoof the source IP to  hijack the connection. The security of this scheme relies on  the use of IPsec VPN to create a strong association for post  knocking connectivity. SA can be derived using the parame  ters passed in the SPA packet. The earlier derived K3 is then  used in VPN encryption and K4 is used for VPN integrity  calculation.

ESP = E(K3, header II m) II MACESP  MACEsP = H(K4' E(K3, header II m  After SAs are derived at both client and server, they are  then installed directly into Security Association Database  (SAD) and Security Policy Database (SPD) without the need    to go through the initial Internet Key Exchange (IKE)  process. The server does not need to reply any information  back to the client until the SPA packet is verified and client  has initiated VPN communication. This allows the firewall  that is being protected by PKiSP A to remain stealthy. Inter  net Security Association and Key Management Protocol  (lSAKMP) could still be used to refresh the SAs if required  throughout the VPN communication.



V. SECURITY ANALYSIS  We assumed that the adversary could perform MITM at  tack to allow eavesdropping and modification, the environ  ment that user performed port knocking is compromised with  trojan and key-loggers may not be cooperative with the same  adversary and captured data is not updated to the adversary  in real-time. After the user input the OTP, the knock is gen  erated and sent to the server. As soon as the SPA knock is  verified, a secure VPN will be immediately created in place.

Table I summarized the differences and the advantages of  our scheme compared to the schemes used in existing im  plementations. The details are explained in the following  subsections.

A. Replay Protection  Each OTP is used exactly once. Once the knock is sent  and verified, it is no longer valid for re-use. The IPsec tunnel  created for the post-knocking connectivity also protect its  communication from replay attack using a sliding window  over the sequence numbers of IPsec packets.

B. Strong Connectivity Association  Adversary may capture the knock and hijack the connec  tion after step (6) in Figure 2. However, to connect to the  open port in step (8), the adversary must be able to encrypt  V5-212  2010 2nd International Conforence on Education Technology and Computer (ICETC)  the IP packet using IPsec ESP mode with K3 and also calcu- dering these drawbacks, one should  decide whether or not to  late the correct MAC with K4 otherwise the packet will be trade off in order to gain a more secure  system.

dropped silently.

C. Password Search Resilience  In order to derive K3 and K4, adversary needs to know  what is the OTP being used. Dictionary-based password  search would not be meaningful since the OTP is randomly    generated. Brute-force search would not be feasible since  KDF is used and it only works for one particular OTP. As  sumed that adversary captured and dropped the encrypted  packets from the user in step (8), attempt to recover K3 and  K4 from the ciphertexts within a short time is nearly impossi  ble if the encryption and MAC algorithm used is secure.

D. Forward and Backward Secrecy  Since the next OTP is randomly generated and unpredict  able, there is no risk for any used OTP to be exposed. The  adversary could do no more than decrypting the communica  tion data that was encrypted using that particular OTP.

E. Key-stealing Resilience  In the case of OTP is recorded by trojan and key-loggers,  the OTP becomes invalid after the server authenticated the  knock from the user or after the time-out occurred at step (6).

Besides, the OTP will only get stored in the server for verifi  cation purpose during its active period. If the adversary ma  naged to launch a stolen verifier attack, the adversary cannot  masquerade as either the user or server at a later time as each  OTP only works within a short duration. The adversary will  not be able to compromise the future SPA authentications.

TABLE!. COMPARISON OF EXISTING SCHEMES AND PROPOSED  SCHEME  Protection against attacks Existing Proposed Schemes Scheme  Replav Attack Yes Yes  Dictionary Password Search No Yes  Brute-Force Password Search No Yes  Stolen-Verifier Attack No Yes  Connection Hijacking No Yes  'Except when fwknop uses asymmetric cryptographic algorithm

VI. CONCLUSION  The schemes used in the existing PKiSP A implementa  tion were flawed and vulnerable to password search and  MITM connection hijacking as well as stolen-verifier attack.

On top of that, there is no guarantee of backward and for  ward secrecy since the same keys are used. By utilizing ma  chine-generated OTPs, OOB communication and IPsec, we  have designed a more secure SPA authentication scheme that  withstands those attacks.

However, our scheme does have drawbacks. The direct  insertion of SAs into SAD and SPD is not supported in the  original IPsec design. The actual implementation of our    scheme may require tricky modification on the existing IPsec  protocol stack in the OS. Our scheme is also more complex  compare to the schemes used by existing implementations.

