Mining Direct and Indirect Weighted Fuzzy Association Rules in Large Transaction  Databases

Abstract?Association rule is an important research topic in data mining and knowledge discovery. Traditional algorithms for mining association rules are built on the binary attributes databases, which has three limitations. Firstly, it can not concern quantitative attributes; secondly, it treats each item with the same significance although different item may have different significance; thirdly, only the direct association rules are discovered. Mining fuzzy association rules has been proposed to address the first limitation. In this paper, we put forward an idea for mining indirect weighted association rules to resolve the other two limitations, and a discovery algorithm for mining both direct and indirect weighted fuzzy association rules by integrating these three extensions.

Keywords-direct weighted association rule; indirect weighted association rule; data mining

I. INTRODUCTION Association rule is an important research topic in data  mining and knowledge discovery, which is firstly proposed by R.Agrawal [1]. A association rule is formed as A?B, where A and B are disjoint item sets, the support of A?B and the confidence of A?B is no less than a user-specified minimum support and a user-specified minimum confidence respectively.

With the further research on the mining of association rules, it has been recognized that traditional algorithm for mining association rules has three limitations. Firstly, it can not concern quantitative attributes; secondly, only direct association rules are discovered; thirdly, it treats each item with the same significance although different item may have different significance.

In order to deal with quantitative attributes, R.Srikant put forward crisp set method for mining Quantitative Association Rules [2], further more, literature [3][4] put forward a fuzzy approach for mining quantitative association rules , which first transforms quantitative values in transactions into linguistic terms, then filters them to find association rules by modifying the AprioriAll mining algorithm.

In order to express significances of items, every item has be assigned with a weight, and algorithms for mining weighted association rules have been proposed in literature [5][6]. The downwards closure property of the mining association rules is no longer true in the context of mining weighted mining association rules, and algorithms for  mining association rules can not been directly applied into mining weighted mining association rules. We address this problem by setting a factor which relates minimum support with weighted minimum support so as to maintain a property that if a itemset is weighted frequent itemset under the weighted minimum support then the itemset must be a frequent itemset under the weighted minimum support.

Therefore, we can firstly find frequent K-itemset LK, and generate weighted K-frequent itemset WLK from LK.

During the discovery of association rules, only the frequent itemsets are considered while all the infrequent itemsets are ignored. Recently, researchers have recognized that some infrequent itemsets can provide very useful insight view into the data set, and a new kind of knowledge discovery problems called as indirect associations has been proposed [7][8]. Consider a pair of item x and y, which are rarely present together in the same transaction. If both items are highly dependent on the presence of another itemsets M, then the pair of x and y is said to be indirectly associated by M called as mediator.

In this paper, we propose an approach for mining both direct and indirect weighted fuzzy association rules by integrating fuzzy, weighted and indirect extensions to association rules.



II. PROBLEM DEFINITION Let I = {i1, i2, ? ,im} be a set of literals called items?  W={ w1, w 2, ? , w m } be a set of non-negative real numbers called weights, where wj is the weight of item ij for j=1,2,?, m. Let the database D = { t1, t2, ? ,tn } be a set of n transactions, where each transaction is a subset of I. A non- empty subset of I is called itemset. An itemset containing k items is called k-itemste. The support of an itemset X denoted as sup (X) is defines as the fraction of all transactions containing X in D. An itemset is frequent if its support is greater than a user-specified threshold minimum support. The minimum weighted support is denoted as wsup.

A. Fuzzy Association rules Most of discovery algorithms for mining association  rules focused on binary valued transaction data. Since transaction data in real-world applications usually contains quantitative values, traditional association rules for binary valued transactions should be extended to fuzzy association rules for quantitative valued transactions.

DOI 10.1109/FSKD.2009.72    DOI 10.1109/FSKD.2009.72     Generally, quantitative values consist of numerical values and categorical values. To transform into transaction data format, the domain of quantitative and categorical attributes should be partitioned into disjoint intervals, each of which is considered as a new attribute or term (we use attribute and term interchangeably in this paper) [2]. However, a sharp boundary problem results from the disjoint intervals. In order to solve this sharp boundary problem [3], fuzzy set theory has been introduced in the process of mining quantitative association rules, which results in a new category of association rules called fuzzy association rules [4].

In the context of fuzzy association rules, the support of an itemset can be counted as follows: for every transaction in the transaction database, take the fuzzy logic AND of the membership values of the items under consideration, and summate these numbers. Let the transaction database be D and an itemset X = {x1, x2, x 3, ? , xk} ? I. The support of a transaction t?D to the itemset X can be defined as  ?ki x ttX i1 )(),sup( == ? If we take the fuzzy logic AND as the product, the  support of X from the transaction database D is then defined as  ? ?? ? ?  = ==  SDs SDs  k  i x stXX  i1 )(),sup()sup( ?  The fuzzy association rules mining algorithm proposed in literature [3] first transforms each quantitative value into a fuzzy set with linguistic terms using membership functions.

It then calculates the scalar cardinality of each linguistic term on all the transaction data, and calculate the support of itemset, carry an iterative search approach to find large itemset. Each item uses only the linguistic term with the maximum cardinality in later mining processes, thus making the number of fuzzy regions to be processed the same as the number of original items. The algorithm therefore focuses on the most important linguistic terms, which reduces its time complexity. The mining process based on fuzzy counts is then performed to find fuzzy association rules from these large itemsets.

B. Weighted Fuzzy Association rules  In order to represent significances of items, every item has been assigned with a weight, and mining weighted association rules have been proposed in literature. However, the downwards closure property of the mining association rules is no longer true in the context of mining weighted mining association rules [5][6] and weighted fuzzy association rules, and algorithms for mining association rules can not been directly applied into mining weighted mining association rules. We address this problem by setting a factor which relates minimum fuzzy support with minimum weighted fuzzy support so as to maintain a property that if an itemset is frequent under the minimum fuzzy support then the itemset must be a frequent under the minimum weighted fuzzy support.

Definition 1?The weighted fuzzy support of itemset X denoted as wsup, )sup()(sup Xww  Xi j  j  ?= ? ?  , where  sup(X) is the fuzzy support of itemset X.

Definition 2 ? The weighted fuzzy support of  association rule (X,Y) is defined as )sup()(sup YXww  YXi j  j  ??= ? ??  , where sup(X) is the fuzzy  support of itemset X..

Definition 3?If the weighted fuzzy support of itemset  X satisfies wsup ? wminisup?the X is called as frequent fuzzy weighted itemset.

Definition 4?Let Len be the length of the longest transaction in the transaction database, the top-Len weights of the longest transactions be mw1, mw 2, ? , mw Len, set r =  ? =  Len  i imw   called as adjust factor.

Theorem 1?If WL is the set of frequent weighted fuzzy itemsets with the minimum weighted fuzzy support wminisup, and L is the set of frequent itemsets with the minimum fuzzy support r?wminisup, we have WL ? L.

Prove?For ? X?WL, by the definition of frequent weighted fuzzy itemset, we have  supmin)sup()( iwXw Xi  j j  ??? ?    So, ?  ?  ?  Xi j  j  w iwX supmin)sup(  Since ?? =?  ? Len  j j  Xi j mww  j 1  ?  ?? =  ?  ?? len  j jXi  j mw  iw w iwX  j  supminsupmin)sup(  And we have supminsupmin   iwr mw  iw len  j j  ?= ?  =    Hence? supmin)sup( iwrX ?? Thus, X is the set of frequent itemsets with the  minimum fuzzy support r?wminisup. Therefore, WL ? L.

According to the above theorem, if we take r ?  wminisup as the minimum fuzzy support, the set of frequent fuzzy itemsets L obtained by conventional association rules mining algorithm is a superset of frequent weighted fuzzy itemsets WL.

C. Indirect Fuzzy weighted Association rules  With the further research on the mining of frequent itemsets, it has been recognized that some infrequent itemsets can provide very useful insight view into the data set, and a new kind of knowledge discovery problems called as indirect associations has been proposed [7][8]. Consider a pair of item x and y, which are rarely present together in the same transaction. If both items are highly dependent on the presence of another itemsets M, then the pair of x and y is said to be indirectly associated by M called as mediator.

Definition 5: A pair of items x and y is said to be indirectly fuzzy weighted associated via a mediator sequence M, if the following conditions are satisfied:  (1) wsup({x,y})<ts; (2) There exists a non-empty set M such that:  (a) wsup({x}?M)>=tf, wsup({y}?M)>=tf, (b) dep({x},M)>=td, dep({y},M)>=td, where  dep(A,B) is a measure of the dependence between itemsets P and Q.

The thresholds ts?tf and td are called itempair weighted fuzzy support threshold, mediator weighted fuzzy support threshold, and dependence threshold, respectively. We usually set tf >= ts in practice.

In this paper, we use the denotation yx M?  to represent the indirect association rule between item x and y via mediator M, and use the IS measure [9] as the dependence measure for condition 2(b). Given a pair of itemsets A and B, its IS measure can be computed as the following equation:  )()( ),(),(  BPAP BAPBAIS  ? = ,  where P represents the probability that the given itemsets appeare in the transaction database.



III. DISCOVERY ALGORITHM FOR MINING DIRECT AND INDIRECT FUZZY WEIGHTED ASSOCIATION RULES  Association rule is an important research topic in data mining and knowledge discovery. Traditional algorithms for mining association rules are built on the binary attributes databases, which has two limitations. First, it can not concern quantitative attributes; second, only direct association rules are discovered. By introduced fuzzy set theory, mining fuzzy association rules has been proposed to address the first limitation. And the mining indirect association rules and mining weighted association rules to resolve the second limitation and third limitation, respectively. In this paper, we put forward a discovery algorithm for mining both direct and indirect weighted fuzzy association rules by combining these three approaches. Notations used in our algorithm are described as Table 1.

Our mining algorithm firstly transforms each quantitative value into a fuzzy set with linguistic terms using membership functions. It then calculates the scalar cardinality of each linguistic term on all the transaction data. Each item uses  only the linguistic term with the maximum cardinality in later mining processes, thus making the number of fuzzy regions to be processed the same as the number of original items. The algorithm therefore focuses on the most important linguistic terms, which reduces its time complexity. The mining process based on fuzzy counts is then performed to find fuzzy association rules from these large itemsets. The detail of the mining algorithm is described as follows.

TABLE I.  NOTATIONS  Notation Meaning n The total number of transactions in  d bm The total number of items Di Di is the ith transaction in D, 1? i ?n Ig The gth item, 1? g ?m Rgk The kth region of Ig, 1? k ? | Ig |, where | Ig  | is the number of fuzzy regions for item Ig g iv The quantitative value of item I  g in Di g  if The fuzzy set converted from giv gk  if The membership value of giv in region R gk  countgk The scalar cardinality of region Rgk maxcountg The maximum count value among countgk  lmaxRg The fuzzy region of item Ig with maxcountg Ck the set of candidate itemsets with k items Lk the set of large fuzzy itemsets with k items WLk the set of large weighted fuzzy itemsets  with k items  Sk the set of non-large weighted fuzzy itemsets with k items  minisup The predefined minimum fuzzy support lWminisup The predefined minimum weighted fuzzy  support value  wminiconf The predefined minimum weighted fuzzy confidence threshold  ts The predefined itempair weighted fuzzy support threshold  tf The predefined mediator weighted fuzzy support threshold  td The predefined dependence threshold Algorithm: MDIWFAR(Mining both direct and indirect  weighted fuzzy association rules) Input: A body of n transaction data, each consists of  customer ID, the purchased items with their quantities, a set of membership functions, minimum weighted fuzzy support threshold wminisup, minimum weighted fuzzy confidence threshold wminiconf, itempair fuzzy weighted support ts, mediator fuzzy weighted support threshold tf, and dependence threshold td;  Output: A set of direct weighted fuzzy association rules; A set of indirect weighted fuzzy association rules;     (1) Len = length_of(the longest of transaction in database D);  (2) MW={mw1, mw 2, ? , mw Len};/*Top-Len maximum weights of W */  (3) set r =  ? =  Len  i imw     (4) sup = r*wsup; (5) For the transaction database D, n is the number of  transactions in D, Di is the ith transaction in D; (6) Transform the quantitative value giv of each itemset  Ig appearing in Di into a fuzzy set g  if represented as  )( 2    gl  gl i  g  g i  g  g i  R f  R f  R f +++ using given membership  functions, where Rgk is the kth fuzzy region of item Ig, gkif is  g iv ?s fuzzy membership value in region  Rgk, and l is the number of fuzzy regions for Ig(k=1,2,3,?, l).

(7) Calculate the scalar cardinality of each attribute  region Rgk as ? == n  i gk  i gk fcount  .

(8) Find maxcountg= )(1 gkl  k countMAX = , where 1? g ?m and l is the number of regions for item Ig. Let maxRg be the region with maxcountg for item Ig. The maxRg will be used to represent the fuzzy characteristic of item Ig in later mining processes.

(9) Calculate the fuzzy support of a region maxRg (for g=1 to m) wfsup(maxRg)= maxcountg . Check whether the fuzzy support of a region maxRg, for g=1 to m, is larger than or equal to the predefined minimum weighted support threshold sup. If the value of maxcountg is equal to or greater than sup, put maxRg in the large 1-itemsets L1. That is L1={ maxRg | maxcountg ? sup, 1? g ?m }.

(10) If L1is null, then exit the algorithm; otherwise, do the next step.

(11) Set k=1, where k is used to represent the number of items kept in the current large itemsets.

(12) Generate the candidate set Ck+1 from Lk in a way similar to that in the apriori algorithm [1].

(13) Do the following substeps for each newly formed (k+1)-itemsets s with items (s1, s2, ? , sk+1) in Ck+1: (a) Calculate the fuzzy value sif for of s in each transaction Di as: )(1  s i  n i  s i fMAXf == , and  121 +??= kSi s  i s  i s  i ffff .

(b) Calculate the scalar cardinality of s  as ? == c  i s  i s fcount  .

(c) If counts is not less than the predefined minimum  fuzzy support threshold, Then { (?) put s in Lk+1; ( ? ) If the weighted fuzzy support of s  supmin)(1  iwcountsw sk i i  ?? += , put s in WLk+1;  (?) Else put s in Sk+1}; (d) Else put s in Sk+1;  (14) If Lk+1is null, then do the next step; otherwise, set k=k+1 and repeat Step 12 to Step 14.

(15) kkWLWL ?= ; kk SS ?= ; (16) For each itemset X?WL Do (17)    For each subset A?X Do (18)       X=X-A; (19)       If wsup(X)/Wsup(A)? wminiconf Then (20)         Output A?B; (21)       If wsup(X)/Wsup(B)? wminiconf Then (22)         Output B?A; (23)       } (24)    } (25) For each itemset s ? Sk { (26)    x = last_item(S); y = secondlast_item(S ); M = S ?  {x,y}; (27)    if (wsup(x, y)<ts AND dep({x},M)>=td AND  dep({x},M)>=td); (28)    Output yx M? .

(29)    }

IV. EXPERIMENT To test the performance of our proposed algorithm, we  have done some experiments. The computing environment is Intel Core 2 Duo E7300 2.66GHz, memory of 1G, operating system is Windows XP. The algorithm is implemented with C++. The synthetic experiment data set is generated by Assocgen [1] program of IBM Almaden research center. The meanings of used parameters are showed in Table 2.

TABLE II.  PARAMETERS  Symbol Meaning D Number of customers(=size of database) C Average number of transactions per Customer T Average number of items per Transaction NI Average size of Items in maximal potentially  large itemset N Number of items  We set C=10, T=5, NI =2500, N =10000, total number of customers D=100000, and the generated dataset is named as C10T5I25. The membership functions are shown as figure 1.

Figure 2 shows the algorithm executing time variance with minimum weighted fuzzy support decreasing from 1% to 0.2%, where the minimum weighted fuzzy confidence threshold is set to 70%, itempair weighted fuzzy support threshold ts, mediator weighted fuzzy support threshold tf     and dependence threshold and td are set to 5%, 70% and 80%, respectively. It shows that the algorithm increases with the declining of wsup.

Figure 1.  membership functions used in experiment  C10T5I25        1 0.8 0.6 0.4 0.2  Mininum Support  R u n  t i m e ( s )  MBDIWAP   Figure 2.  Execution times  To examine the scalability of algorithm we increased the numbers of transaction database D from 50,000 to 150000, with wsup =1%, min_interest =70%. The itempair weighted support threshold wts, mediator weighted support threshold wtf and dependence threshold and td are set to 5%, 70% and 80%, respectively. The results are shown in Figure 3. The executing time is increased almost linearly with the increasing of dataset size. It can be concluded our algorithm has a good scalable performance.

C10T5I15      50 75 100 125 150  Number of  Transactions  R u n  t i m e ( s )  MBDIWAP   Figure 3.  Scale-up: number of transactions.



V. CONCLUSION AND FUTURE WORKS In this paper, we addressed three limitations of  traditional algorithms for mining association rules by integrating fuzzy, weighted and indirect extensions to association rules. In order to deal with the problem that the downwards closure property of the mining association rules is no longer true in the context of mining weighted mining association rules, we introduce an adjusting factor r to generate minimum fuzzy support threshold by multiplying r with minimum weighted fuzzy support threshold. An algorithm for mining both direct and indirect weighted fuzzy association rules by integrating these three extensions.

The primary experiments demonstrated that the algorithm is efficient and scalable.

