An Intelligent Approach for Mining Frequent  Patterns in Spatial Database System Using SQL

Abstract?Mining frequent pattern from spatial databases systems has always remained a challenge for researchers.

However, the performance of SQL based spatial data mining is known to fall behind specialized implementation since the prohibitive nature of the cost associated with extracting knowledge, and the lack of suitable declarative query language support. In this paper, we proposed an enhancement of existing mining algorithm based on SQL for the problem of finding frequent patterns for efficiently mining frequent patterns of spatial objects occurring in space. The proposed algorithm is termed as Frequent Positive Association Rule/Frequent Negative Association Rule (FPAR/FNAR). This algorithm is an improvement of the FP growth algorithm.

Further an enhancement of the improved algorithm by a numerical method based on SQL for generating frequent patterns known as Transaction Frequent Pattern (TFP) Tree is proposed to reduces the storage space of the spatial dataset and overcomes some limitations of the previous method.

Index Terms?Spatial Database, Frequent Patterns, Association Rule Mining.



I. INTRODUCTION  Nowadays, spatial data mining [1] is a well defined domain of data mining. It can be described as the discovery of interesting, implicit and previously unknown knowledge from spatial databases. Several data mining techniques have been applied to discover knowledge from spatial databases.

In particular, Association Rule Mining (ARM) discovers spatial relationships and infer valid, novel, useful and understandable patterns for generation of rules [2][3].

Extensive efforts have been devoted to developing efficient algorithms for mining frequent patterns. So a couple of algorithms adopting the candidate generate-and-test approach are proposed. Apriori algorithm [2] is the first algorithm which uses the Apriori property to prune the search space. A hash based algorithm [8] reduces the number of candidate patterns. The pattern growth approach [4][5] tries to avoid the candidate patterns by constructing conditional databases for frequent patterns. The proposed algorithms differ mainly in how they represent the conditional databases that use a compact data structure [6] FP tree to represent the conditional databases, which is a combination of prefix-tree structure and node-links. FP- growth algorithm [6] is not efficient because each node still  needs to maintain a couple of pointers, which incurs a huge memory space requirement and the main memory consumption is usually hard to precisely predict. A variant of FP-growth is FPAR/FNAR algorithm. This algorithm shows significant performance improvements over FP- growth by constructing a tree that compresses and generates a set of generalized strong association rules for valid patterns and generated rules are higher as compared to invalid rules [7].

The problem of finding all frequent object sets can be solved in two ways likely to be chosen: using algorithms that employed sophisticated in memory data  structures, where the data is stored into and retrieved from flat files; and using algorithms that are based on SQL statements and extensions to query and update a database. Thinking of spatial database, where a lot of spatial objects are stored, it is quite hard to copy and execute memory programs for finding frequent object sets. One may want to avoid one at a time record retrieval from the database, saving both the copying and process context switching cost [7]. Therefore, we present a procedural schema for mining all frequent patterns taking advantages of database capabilities with appropriate SQL-Extensions for better performance.  One of  the  advantages  of  SQL-based mining  algorithms  is fast  and easy  development since  they  are  declaratively specified  as  a  set  of  SQL  queries. In this paper, we use structured query language (SQL) for frequent pattern mining. A sample dataset of spatial objects have been used to mine frequent pattern tree using the proposed numerical method known as TFP.



II. PROPOSED FRAMEWORK  In this section we propose a framework to mine frequent patterns of spatial objects. These spatial objects situated close to each other for a given sample space of Indian Cities. The presence of each spatial object is recorded against each city as a transaction. The spatial objects data set for each transaction is arranged based on the occurrence of higher ranked objects. Equal ranked objects are sorted in lexicographic ordering. Then threshold value of minimum support and confidence of frequent pattern determines valid association rules. The analysis is based on frequent spatial objects from Map Database and the correlation between     those objects. The layout of the proposed framework is given in Fig. 1. The proposed approach can be described as a sequence of processes. It extracts the spatial objects and its frequency of occurrences from the Map Database and builds a Sample Spatial Objects Datasets. The next process is to first we represent the frequent order list in form of numerical representation where each object in the transaction is represented as a prime value and then each transaction can be viewed by the product value of the prime dataset which compresses the transaction. Then the next step constructs a TFP tree using the numerical representation of each transaction dataset. The final step finds frequent spatial patterns with their respective support count by intersecting its numerical ordered list.

Fig. 1. Proposed Framework  A. Analysis of Proposed Algorithm  Based on the proposed algorithm we performed the test on a sample real time data base of 250 Indian cities taken as reference to validate the proposed framework in our study of spatial database system. TABLE I shows a sample of 07 spatial objects for 12 Indian cities. The spatial objects are as Museum (A), Zoo (B), Lake (C), Monument (D), River (E), Forest (F), and Hill (G). We have assumed a minimum support count greater than 4. Analysis process has the following steps as per the framework discussed before.

Step 1: Obtain Sample Spatial Dataset.

Step 2: Build Ordered list of objects in descending order of their frequencies.

Step3: Mapping Ordered List in form on numerical representation.

Step 4: Build a TFP Tree using numerical representation.

Step 5: Find frequent patterns and validate it against their respective support count.

TABLE I SAMPLE SPATIAL DATASET  TID Reference  City Positive Object 1 Bhubaneswar C,D,A,B,E,G 2 Bangalore B,F ,A,C,D 3 Ajmer A,C,D,E 4 Mumbai A,C,D,B,E,G 5 Chandigarh B,F, A,C 6 Trivandrum C,A,B 7 Delhi D,B,F,E,A 8 Ahmadabad A,C,D,B,E 9 Pune A,C,D,B,E,G 10 Mysore C,D,B,F,G 11 Nagpur A,C,D,B 12 Patna E,A,D,B  Each transaction is scanned once to find frequent object.

For example, in TID (1) {C, D, A, B, E, G} is a transaction list. So the object which is less than the minimum support is pruned. Now TID (1) can be viewed as a new transaction {A, B, C, D, E} which are arranged in descending order of their frequencies. The TFP-Tree is based on prime number characteristics which can makes use of both possibilities data compressing and pruning techniques to enhance efficiency. The ordered list of each transaction is mapped using prime-based data transformation technique as product value for each order list to reduce the size of transaction database which is shown in TABLE II.

