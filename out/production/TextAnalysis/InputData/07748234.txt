Mining Actionable Combined High Utility Incremental and Associated Patterns

Abstract?High Utility Itemsets(HUI) Mining, instead of Fre- quent Pattern Mining (FIM), has been an attractive theme in data mining domain for over a decade since it can be regarded as an alternative way for researchers to identify actionable patterns. In addition, the necessity of decision-making actions and behavior- oriented strategies based on large amount of informative data impels the significance of discovering actionable patterns to be widely admitted. The current HUIM research focus has been on improving the efficiency to make algorithms faster and more stable. However, the coupling relationships between items in given itemsets are ignored. For example, the utility of one itemset might be lower than the manager expected until one additional item takes part in; and vice versa, the utility of an itemset might drop sharply when another one joins in. What?s more, it is not occasional to find out that quite a lot of redundant itemsets sharing the same underlying item are presented based on existing academic HUI mining methods. Store managers would not make expected profits based on such results which makes the results not actionable at all. To this end, here we introduce a new framework for mining actionable patterns, called Mining Utility Associated Patterns (MUAP), which aims to find high utility incremental and strongly associated item/itemset with combined incorporating criteria. The outputs of this algorithm are convincing on real datasets as well as synthetic datasets.

Keywords - high utility patterns mining, Combined pattern mining, actionable knowledge discovery.



I. INTRODUCTION  As it has been proved that there exists a large gap between academic research topics and real world business and industrial challenges [1], the algorithms and approaches designed for academic purposes do not always satisfy real user needs in terms of solving business and industrial problems [1], [2].

Although algorithms such as UP-growth [3], CHUD [4] and d2HUI [5] can discover the complete set of high utility itemsets efficiently, they usually generate a large number of patterns, many of which are redundant and useless for making decision-oriented strategies. Real valuable patterns that managers or retailers might be interested in may be ignored or buried amongst thousands of similar patterns. In a word, they are not actionable.

Accordingly, the concept of actionable knowledge discov- ery is proposed by Cao [1], [6] to select patterns that deliver decision-making informative massages to managers and retail- ers. The process of mining such patterns is called discovering actionable patterns. Instead of mining those patterns of high frequency, the actionable knowledge discovery approach mines patterns of high probability for decision-making purposes and impact-targeted activities are discovered. Such patterns may  not be frequent but may lead to either impact-oriented excep- tional behaviours or impact-contrasted exceptional behaviours.

For business purposes, retailers or supermarket managers seek products that are more profitable than others, thus they make combined product strategies. Such combined products might not be of high utility or frequency, but the additional products may hold a strong association with the underlying product which can increase profitability. Thus they cannot be selected via academic approaches, which focuses on discover- ing frequent or high utility patterns. This is also a challenge for designing an actionable combined pattern mining framework especially in this work.

Designing an actionable representation of patterns to satisfy both utility and frequency criteria is a challenging task and extracting such patterns is even harder. The contributions of our proposed method include:  ? A combined framework for discovering actionable knowledge from a utility database. Based on a series of novel definitions such as utility growth which have never been used in previous work, we theoretically prove that the proposed representation is effective and the patterns discovered are really actionable and useful for decision-making.

? An efficient algorithm called MUAP(Mining Utility and Associated Patterns) is proposed for mining ac- tionable patterns of high utility increment and high de- pendence. We systematically analyse the relationship between underlying itemsets and derivative itemsets based on both utility and frequency criteria.

? Two effective strategies are applied to enhance the performance of MUAP. Based on the framework, we propose a global pruning strategy to generate utility increase patterns from underlying itemsets. An equation is also proposed as a local approach for selecting patterns with the highest weighted values, which is a hybrid measurement of both utility growth and dependence calculation.

The rest of this chapter is organised as follows. In section 2, we present two tables to describe some preliminaries and an extended comparison table is constructed based on an itemset?s utility, support and confidence. In section 3, we demonstrate the problem in this chapter including a case study and an abstract combined model. In section 4, we mainly talk about our MUAP approach in terms of two strategies. A global utility growth tree structure is proposed to select all the utility incremental candidates, and a local Coe strategy is proposed       to select one actionable pattern among a cluster of candidates composed of the same underlying itemsets. In section 5 we show some experimental results and we have a smart summary in section 6.



II. RELATED WORK  A. High Utility Pattern Mining (HUIM)  In 2004, the concept of High Utility Pattern Mining was first presented in [8]. During recent 10 years, quite large num- bers of approaches have been studied based on the Transaction- Weighted Utilization (TWU) and the property of Transaction- Weighted Downward Closure (TWDC), such as Two-Phase by Liu et al. [9], IHUP by Ahmed et al. [10], UP-Growth [3], CHUD for closed mining [11], TKU for top-k mining [12], d2HUP [13], and HUIM by Liu and Qu [14]. In addition, Cao et al. regarded this framework as an alternative solution for enhancing pattern actionability [7]. Regarding to existing more complex situations, the framework of mining high utility sequential itemsets and high utility episodes turns out to be distinguished, such as USpan [15] and UP-Span [16].

One of the recognized algorithms to discover high utility pattens is the UP-Growth.

However, because of the coincidences, sometimes the re- sults generated by those fast HUI mining algorithms are not reliable and representative for business people to take actions.

This shortage makes the algorithms more academic than prac- tical. Hence we proposed a balanced combined framework of both utility incremental and frequency associated criteria to avoid the occasional results from the utility measurement.

B. Combined Pattern Mining  ?Combined Association Rule (CAU)? is first proposed by [17] as a concept and was extended by [18] for further interpretation. Combined rules mining provides an alternative and fast access method for abstracting association rules from several large datasets. When solving real business problems, it is necessary to solve such scenarios that some of the features are not in the same dataset and it is not feasible to merge two datasets. For example, it?s not easy to merge two datasets with ?customer name, gender, age, suburb, nationality? and ? customer name, gender, annually income, debt, debt repayment method and repayment period? into one set if we only want to analysis the relation between age and debt. To construct pat- terns composed of related constituents from different datasets respectively is a more feasible way than merging two large datasets in data mining domain.

The high impacted and target oriented combined pattern was proposed in [2]. These patterns may not be frequent, but contain important business impaction that is applicable for making business strategies and taking actions. These patterns won?t be detected by existing academic pattern mining meth- ods which can only find patterns with high frequency. The basic structure of combined patterns is represented in (1). For the characters in each equation of (1), A is one itemset, B is another itemset, and C is the combined pattern consisting of both A and B. In business perspective, C can be the different levels of risk, the appearance of fraud or the existence of outliers. However, this structure so far is only applied in the frequency framework.

TABLE I. DATABASE SAMPLE  TID Transaction TU  T1 (A, 1) (C, 1) (D, 1) 8  T2 (A, 1) (B, 3) (C, 2) (F, 5) 24  T3 (A, 2) (B, 1) (C, 6) (D, 5) (E, 1) 60  T4 (B, 2) (C, 3) (D, 2) (F, 3) 18  T5 (B, 1) (C, 2) (F, 3) 9  TABLE II. PROFIT TABLE OF THE SAMPLE DATABASE  Item A B C D E F  Profit 5 4 1 2 30 1  ??? ??  A1 +B1 ? C1 A1 +B2 ? C2 A1 +B3 ? C3 ...

(1)

III. PRELIMINARIES  Table I and Table II can be regarded as an example. D = {T1, T2, ..., Tm} is a transaction dataset. I = {i1, i2, ..., in} is a group of finite and discriminative items. Each transaction Tc ? D (1 < c < m) containing a particular identifier TID is a subset of I. A transaction record can be regarded as a utility itemset. The quantity utility (QU) of ik in transaction Tc is composed of an item ik and its associated positive integer. It is denoted as q(ik, Tc) . In addition, the profit utility (PU) of an item in I is denoted as p(ik, I), which must be a positive number. The items in an itemset are different from those in a sequential itemset or data stream and is disordered.

In addition, these items are listed in alphabetical order without a loss of generality. An l-length itemset is defined as it contains l discriminative items, where X ? I. In this way, an single item is also an 1-length itemset.

Table I gives details to five separate transactions as well as their transaction utilities in a utility database. Take the third transaction as an example, this utility itemset is a 5-length itemset because it contains 5 utility items {A}, {B}, {C}, {D}and {E}. 2 is the quantity utility of {A} and denoted as (A, 2). The Transaction ID (TID) is denoted as Ti in the ith transaction. Table II illustrates the unit utility (or called profit) of each item. One thing that should be noted is that the unit utility of item {E} is extremely high.

Given two itemsets, Xo = {io1 , io2, ..., iom} and Xa = {ia1 , ia2 , ..., ian}, Xa contains Xo if and only if there exists integers 1 ? j1 ? j2 ? ... ? jm ? n such that iok = iajk for 1 ? k ? m, denoted as Xo ? Xa. This containment concept is also suitable for utility itemsets with the same denotation.

And also Xo is a sub-(utility-)itemset of Xa and Xa is the super-(utility-)itemset of Xo.

For example, transaction T2 has 4 items {A, B, C and F} with their quantity utility of {1, 3, 2 and 5} perspectively.

From table II, the unit profit of each utility item is {A, 5}, {B, 4}, {C, 1} and {F, 1}, thus the final utility itemset composed of each utility item in transaction 4 can be presented as T2 = {(A, 5) (B, 12) (C, 2) (F, 5)} and the transaction utility of this     TABLE III. AN COMPARISON TABLE OF ITEMSET SUPPORT, CONFIDENCE AND UTILITY (UTILITY INCREMENT)  Itemset(Pattern) Support Confidence Utility (Utility Increment)  {A} 60% Nil 20  {A ? E} 20% 33% 40 (20)  {E} 20% Nil 30  {E ? A} 20% 100% 40 (10)  {C} 100% Nil 14  {C ? B} 80% 80% 41 (27)  {C ? BE} 20% 20% 40 (26)  {CB ? E} 20% 25% 40 (-1)  itemset is 24. In addition, T5 is a sub-itemset of both T2 and T4 and its transaction utility is 9. Furthermore, the transaction weighted utility of itemset {B, C, F} is 51 because it appears in three transactions T2, T4 and T5.

Definition 1: In (2), the itemset U is called an Underlying Itemset, which keeps invariant in all equations. Vi is called an Additional Itemset and Ti is called a Derivative Itemset.

The roles that underlying itemsets and additional itemsets play can be exchanged in some cases, and the results may be different, which will be discussed in the next section.

C :  ??? ??  U + V1 ? T1 U + V2 ? T2 ...

U + Vn ? Tn  (2)

IV. PROBLEM STATEMENT  A. Case Study  According to the example in above tables, Table III lists the support, confidence, utility and utility increment in the brackets (if exists) of itemsets (here each rule is also an itemset and rule {C ? BE and rule {CB ? E} are the same itemset).

As is proved, the support of an itemset reduces when the itemset size (length) increases because of the Downward Closure Property (DCP) [19]. However, some patterns still contain more information than others.

On one hand, business sale strategies can be made based on a given underlying itemset and several related additional itemsets, and a best strategy will be generated from those candidates. For example, {C} is an item with utility of 14 and support of 100% because it appears in all the transactions.

{C ? B} holds a confidence of 80%, which is really high.

This association rule also represents a utility increment of 27, say, from {C} (whose utility is 14) to {BC} (whose utility is 41). By contrast, although itemset {B,C,E} is associated with a high utility increment from 14({C}) to 40, the association rule {C ? BE} maintains a low confidence of 20%, which means customers might not be likely to purchase {B,E} the same time they purchase C.

On the other hand, variety underlying itemsets with the same additional itemset lead to different analysis results. For example, the support of the itemset {A,E} is only 20%  support and the utility is 40. Two rules {A ? E} and {E ? A} can be generated with different confidences: 33% and 100%, perspectively. In addition, two component items {A} and {E} with their attributes are also listed in the table. To demonstrate this from a business perspective, when a retailer wants to make a promotion sale for product A, if he sells it with product E, the customer has a probability of 33% to purchase this product, but the profit of this product package will double from say 20 to 40. By contrast, when this retailer wants to make a promotion sale for product E with the same strategy, the customer might be highly likely to purchase A at the same time that E is purchased and the profit of this package thereby increases from 30 to 40.

B. An Abstract Model: A Representative Combined Pattern with Utility Increment and Strong Association  Here we illustrate the application of actionable Combined Patterns through identifying the Representative Combined Pat- tern from the Combined Representative Rule Cluster, which is shown in (3).

C :  { X0 +X1 ? Xa X0 +X2 ? Xb ...

(3)  Once a cluster of rules have been mined with combinations of the same underlying itemset and several additional itemsets, we begin to select the most interesting pattern among all the rules. This pattern has a balance of both the high utility increment from the underlying itemset to the derivative itemset and high association between the underlying itemset and the additional itemset. In the next section, we first propose a global strategy to discover all the utility increment patterns in the original database, then we demonstrate a local strategy of mining the most interesting combined pattern from a cluster of rules.



V. THE MUAP APPROACH  In this section, we mainly focus on Mining High Utility Increment and Strong Association Patterns. Our approach is based on two strategies: 1) One global strategy is proposed to discover all utility incremental patterns with clusters based on specific underlying itemsets; 2) One local strategy based on each cluster of patterns is proposed to measure the interest- ingness of each of the rules. This strategy is composed of a variety of additional itemsets and the same underlying itemset.

A. Mining Global Utility Incremental Itemsets Based on UG- Tree  UG-Tree: Our algorithm is proposed based on a tree structure with utility growth and association rule mining, thus all branches whose utility decreases would be discarded from the proposed UG-Tree the first time. The utility of node in a specific branch varies, which means the increment of utility might be negative. The pruning process starts from the external towards to the first node whose utility increment is positive.

This reorganized tree after above processing is called the UG- Tree, which is shown in Fig. 1.

Fig. 1. A UG-Tree with minimum utility = 0  TABLE IV. BASIC STRUCTURE OF EACH NODE  Composition Interpretation  N.na name of current node  N.ss support statistic of current node  N.u utility of current node  N.p parent node of current node  N.nl node link connects nodes with same name  The structure of a specific node N is shown in Table IV.

The Reorganized Table is displayed to describe the traversal process of a UG-Tree. Each row contains item?s name, value of TWU as well as a link presented in downward table. In addition, the name of nodes that connect each link is the same.

Construction of the UG-Tree: A UG-Tree can be finalized after only two scans of the dataset. In the first scan, items and their TWUs are generated via the computing of the transaction utility in each transaction and the each item?s transaction weighted utilization. The reorganized transactions and their RTUs are used to finalize the UG-Tree according to one more scan. Then all branches with utility decrement are discarded and presented in Fig. 1. Consequently, an UG-Tree is constructed with root R.

Definition 2: A transaction after the procedure of above reorganization is called a Rebuilt Transaction and its transac- tion utility is called rebuilt transaction utility (RTU), denoted as RTU(Tc).

A UG-Tree is presented in Fig. 1 with a minimum utility of zero as a threshold.

While the UG-Tree is retrieved, the support count of each item can be discovered via item.nl and applied to calculate the Factor W, and the utility of each itemset can also be found and prepared for the Factor C. The following subsections will give details to these two factors.

B. Mining Locally Interesting Patterns from Clusters of Pat- terns  Based on all the global utility incremental itemsets dis- covered by the UG-Tree, we reorganise the itemsets and form clusters of actionable combined patterns. Each cluster is composed of several derivative itemsets which are also combined patterns including one underlying itemset as well as several additional itemsets and these are described as (3).

Since there exists weakness in any single-measurement- based framework, we propose a combined mining approach to discover those really interesting patterns in business and industrial areas. To measure the interestingness of each com- bined pattern in order to select the most actionable one, we propose two parameters to value both the utility increment and the association relationship. Furthermore, we propose a coefficient to balance the importance of two values, Thus, in one cluster of derivative itemsets, the actionable pattern is a combined pattern with the highest coefficient value.

Definition 3: The impact of the additional itemset (?X) is proposed as an impact factor to value the utility growth within each actionable combined pattern, specifically, from the utility of the underlying itemset to the derivative itemset. It is denoted as I(?X ? X0), and defined as:  I(?X ? X0) = U(X)  U(X0) (4)  The purpose of this equation is to measure the ratio of increment from the underlying itemset to the derivative itemset in utility perspective. Here, U(X) indicates the utility of the derivative itemset X in the whole database.

Definition 4: The confidence is defined to measure the association relationship between the underlying itemset and the additional itemset. It is denoted as C(?X ? X0) and defined as:  C(?X ? X0) = Supp(X)  Supp(X0) (5)  Here, Supp(X) is the support of derivative itemset X , and Supp(X0) is the support of underlying itemsetX0. In addition,  Supp(X) = Supp(?X ? X0) (6)  Combined Coefficient of Additional Itemset to Underlying Itemset:  Definition 5: The combined coefficient of the additional itemset is proposed to measure the interestingness that is the degree of the effectiveness of manufacturing the derivative itemset from the underlying itemset, denoted as CoE(?X ? X0), defined as:  CoE(?X ? X0) = ?  I(?X ? X0) ? C(?X ? X0) (7)  This equation averages the value of I(?X ? X0) in (4) and the value of C(?X ? X0) in (5). It is easy to see     TABLE V. DATASETS INFORMATION  Name Transactions Counts Volume of Items Transaction Length  Chainstore31 1112949 46086 7.3  Retail42 88162 16470 10.3  c20d10k 10000 187 13  t20i6d100k 100000 658 13.7  that even though the utility from the underlying itemset to the derivative itemset increases a lot, it makes no sense if the association between the underlying itemset and the additional itemset is weak, which means customers might not purchase such products together in most circumstances.

In addition, for a specific underlying itemset X0, the higher CoE means that this itemset or product package is likely to attract customers and thus will be purchased together.

Among all additional itemsets, only the most interesting will be selected due to our approach.



VI. EXPERIMENTAL RESULTS  In this section, we introduce the experimental results to evaluate and analyze our proposed algorithm. The experiments processes with a memory of 16 GB as well as an Intel Core of 2.31 GHz. The algorithm is finalized in Java. Both real and synthetic datasets are applied to finalize the experiments. The datasets are Chainstore1, Retail2, c20d10k and t20i6d100k re- spectivelySome necessary parameters are presented in Table V.

A. Candidates Generated by Different Thresholds  In our experiment, the candidates are first generated by a global pruning strategy via the UG-Tree. Then, based on the different thresholds, various patterns are discovered. We do not set the specific confidence threshold or the impact threshold.

Only one parameter threshold is to be considered which is the CoE. The numbers of candidates and patterns discovered by each process are listed in table VI.

TABLE VI. UTILITY VARIATION SUMMARIZATION  Dataset: Retail UG-Tree TH0.6 TH1.1 TH1.15 TH1.2  Number of Candidates 2408 937 100 47 19  Dataset: ChainStore UG-Tree TH0.5 TH0.7 TH0.9 TH1.2  Number of Candidates 1150 34 29 22 5  Dataset: t20i6d100k UG-Tree TH1.0 TH1.1 TH1.2 TH1.5  Number of Candidates 3432 1484 410 67 10  Dataset: c20d10k UG-Tree TH1.4 TH1.5 TH0.9 TH2.0  Number of Candidates 2251 435 126 32 7  B. Utility Incremental Figures  We also plot some figures to show the utility increment of the patterns, specifically, from the underlying itemset to the derivative itemset. Two real datasets are applied with  1http://cucis.ece.northwestern.edu/projects/DMS/MineBench.html 2http://www.philippe-fournier-viger.com/spmf/index.php?link=datasets.php  different CoE thresholds. The patterns are ordered by the utility decrement of the underlying itemsets. Firstly three figures in Fig. 2 are extracted from retail with the threshold 1.2, 1.15 and 1.1, respectively. Secondly, three figures in Fig. 3 are selected from chainstore, with the threshold 1.2, 0.9 and 0.5, respectively.

(a) retail  (b) retail  (c) retail  Fig. 2. Experiments for utility incremental on retail

VII. CONCLUSIONS AND FUTURE WORK  Since there exists a big gap between the academic out- comes and business or industrial purposes in the data mining domain, common high utility or frequent patterns might be of no interest to the business world. In addition, those rare or low utility items might attract customers because of their rep- resentativeness. This chapter proposes an alternative approach     (a) chainstore  (b) chainstore  (c) chainstore  Fig. 3. Experiments for utility incremental on chainstore  to discovering patterns with strong association and high utility increment, which have proved to be useful. One efficient tree structure is proposed as a global strategy to select these utility increment itemsets. In addition, two factors used to measure both utility and frequency are proposed. Finally, the combined coefficient is discussed to measure the interestingness of each cluster of derivative patterns.

During the experiment process, an interesting pattern was discovered in that the derivative itemset can also be regarded as a new underlying itemset in the chainstore dataset. This might be an interesting area to explore in the future.

