

Abstract?DNA hybridization arrays simultaneously  measure the expression level for thousands of genes. A great challenge in the bioinformatics field is to discover gene interactions from such measurements and estimate gene networks. In this paper, we exploit data mining techniques for discovering interactions among genes based on multiple expression measurements. We present an application of the Apriori algorithm to extract temporal association rules from gene expression data. Furthermore, we address the problem of real value discretization by using both fixed thresholds and clustering techniques. Finally, we estimate the value of each rule by means of an appropriate quality index. Preliminary experimental results on Saccharomyces cerevisiae cell cycle gene expression data show the effectiveness of the proposed method.

Index Terms?Association rules, data mining, gene networks, microarray.



I. INTRODUCTION One of the most challenging problems in bioinformatics is to discover relationships and interactions among genes.

Genes are the code of proteins, which are fundamental components of all living cells. A gene is transcribed into the corresponding mRNA in the transcription process, and then it is translated into a protein. Depending on the amount of proteins required in the cell, different concentration of mRNA for different genes can exist. With the advance of molecular biology techniques, it has become possible to measure the gene expression level (concentration of mRNA) of thousands of genes simultaneously. DNA microarrays provide a simple way for collecting such data [12]. The final goal of many analyses is learning gene interaction networks, to describe and simulate how genes or groups of genes interact with each other, with activating or inhibiting mechanisms [15].

Particularly, a gene regulatory network aims at representing relationships that govern the rates at which genes in the network are transcribed into mRNA. Genes can be viewed as nodes whose expression levels are controlled by other nodes [14].

A commonly used data mining technique for finding relationships between different itemsets in a large dataset is association rule mining. Association rules have been widely used in the market basket analysis to represent sets of items that are likely to be purchased together.  In the analysis of gene expression data, an expression profile can represent a   E. Baralis, G. Bruno, E. Ficarra are with the Dipartimento di  Automatica e Informatica, Politecnico di Torino, Corso Duca degli Abruzzi 24, 10129 Torino, Italy (telephone: 0039-011-090-7084, e-mail: elena.baralis@polito.it, giulia.bruno@polito.it, elisa.ficarra@polito.it).

single transaction, and each gene a single item. While in market basket analysis any particular item is either purchased or not in a transaction, in an expression profile each gene is assigned a real value which specifies the relative abundance of that gene in the sample [13]. Hence, in applying association rules to gene expression data, there is the need to discretize the domain by defining appropriate value intervals. Binning the values helps to alleviate problems with noise, by focusing the analysis on the more general effects of genes. Usually gene expression data are binned into two levels, up-regulated (i.e. highly expressed) or down-regulated (i.e. inhibited) according to specific fixed thresholds. Sometimes there is also a third state (neither up nor down regulated) which is not considered in the analysis. Some works [11] propose general methods which can employ different discretization functions, but in practice they use only fixed thresholds. We do not assume arbitrary or uniform gene expression value distributions.

Instead, we exploit both fixed thresholds and clustering techniques to discretize real values.

By considering single-time-point expression data, it is possible to discover sets of co-regulated genes, which show a similar behavior under different conditions. This analysis does not consider regulations which happen with a time delay. Since there can be a significant delay between the expression of a regulator gene and its effects (i.e. the activation or inhibition of another gene), not all the genes that induct the expression level of a gene are necessarily observed in a single microarray. Some methods only consider the static gene expression profiles, so they cannot be used to interpret the time-delayed gene regulations.

Recently, researchers have addressed time-series expression data. Such data contain the expression level of genes at periodic time intervals, and thus hold rich information about relationships among them. For example, in [1] the authors identify temporal networks by using correlation among genes, considered as discrete signals.

However, the correlation, defined as the degree of similarity between two signals, can not represent the causality relationships between them.

Data mining techniques, such as association rules mining, have been successfully used to discover relationships among genes, but previous works have considered only contemporaneous or single time instance delay relationships [12][13][14]. Temporal association rules have already been used in the market basket context where they are also named inter-transaction associations [24].

The main objective of this work is to provide an easily interpretable, biologically meaningful, and computationally  Temporal Association Rules for Gene Regulatory Networks  Elena Baralis, Giulia Bruno, Elisa Ficarra  2008 4th International IEEE Conference "Intelligent Systems"       efficient method to support the inference of gene regulatory networks. Even if machine learning approaches can not infer by themselves biologically meaningful networks, such tools may aid scientists in suggesting, detecting and validating biologically relevant associations.

Our method infers association rules from gene expression time series datasets which represent interactions among genes. The temporal rules are in the form Gx(a)?Gy(b)+k. It means that if Gx is equal to a, then after k units of time Gy will be equal to b. Furthermore, we evaluate the accuracy of the rules by means of an appropriate quality index. We applied our method to the publicly available dataset of Saccharomyces cerevisiae [3] and we compare the results with similar works [1][11] to show the effectiveness of our approach.

The rest of the paper is organized as follows. Section II discusses previous work. Section III describes the proposed method to learn correlation relationships between genes by means of association rule mining. Experimental results and comparison on the yeast dataset are presented in Section

IV. Finally Section V draws conclusions and presents future developments of the proposed approach.



II. RELATED WORK Current technologies, such as gene microarrays, allow  measuring the expression level of tens thousands of genes in RNA sequences, which is indicative of how much protein will be produced by each gene in the cell.

Generally, it is difficult to find consistent patterns for gene expression. A learning system should facilitate extracting useful information from data for the sake of a better understanding and learning of new knowledge [7].

Nowadays, the inference, modelling, and simulation of gene regulatory networks are a fundamental topic in functional genomics [15]. A variety of computational intelligence and machine learning methods have been used for the modelling, analysis, and simulation of genetic regulatory networks in past years.

The classical approach towards genetic regulatory network modelling is based on the use of ordinary differential equations. For most biological networks this approach is difficult to follow because numerical simulation requires quantitative data on kinetic parameters and molecular concentrations, which are generally not available, even for well studied systems. In general, it is often more important to have a qualitative understanding of the dynamical properties than to be able to make precise quantitative predictions. Furthermore, precise and quantitative information is not available for most cases [8].

For these reasons, there has been a constant and growing interest in qualitative methods for modelling and simulation of genetic regulatory networks. Clustering algorithms represented one of the first approaches to identify regulatory modules by identifying groups of coexpressed genes [16]. However, determining the interactions that can exist among genes is not easy by using clustering results, especially if a gene participates in more than one network.

Within the area of machine learning, Boolean networks aim at inferring logical rules from a discretization of gene expression time series [17]. Even though these models can be easily applied, they depend on arbitrary discretizations  of the gene expression values, which impose strong assumptions and restrictions on the biological system.

Bayesian networks have also provided the basis for several approaches to the inference of gene networks [18].

These methods employ conditional probabilistic distributions for gene interactions modelling. The great number of parameters and the large quantity of data needed to make reliable inferences reduce their capability to infer complex networks.

Association rule discovery technique has been recently proposed for the analysis of gene expression data and has been proved to be successful in extracting new and informative relationships among sets of genes [2][13][14].

Nevertheless, these previous works focus only on contemporaneous or single time instance delay relationships and they do not discuss the effects of different discretizations.



III. METHOD We developed a method to learn relationships among  genes by means of association rule mining. It takes as input time-series gene expression data and it performs the following steps.

Discretization. The gene expression data are associated to an expression level by using a suitable function.

Different techniques are exploited.

Rule Extraction. The discretized data are organized in a time-delay matrix and analyzed by the Apriori algorithm, which extracts the association rules.

Filtering. Rules are reduced and evaluated by means of an appropriate quality index. The selected rules are the building blocks in the definition of a gene network.

These three phases are detailed below.

A. Discretization Although gene expression values belong to a continuous  range of real numbers, it is possible to define a finite expression state set for each gene by means of a discretization procedure. Discretization makes learning faster [9]. Furthermore, discrete features are closer to a knowledge-level representation than continuous ones, thus being easier to understand, use, and explain. Usually gene expression data are discretized into two values, i.e.

expressed and inhibited. In this case, both the degree of discretization and the computational cost are low. By using a higher degree the computational cost increases and the representation of the information is more accurate.

Previous works often use a fixed threshold at zero [11], at the average gene expression value [14], at other arbitrary values [13], or sometimes use k-means clustering [21]. To show how the results change by varying the discretization method, we tried different methods and varied the cardinality of values (two and three). Nevertheless, the model can be generalized to any number of states in a straightforward way.

We use the following discretization methods.

1. Fixed threshold. If the cardinality is two  levels, there is one threshold in 0; if the cardinality is three levels, there are two thresholds in 1 and -1.

2. K-means clustering. For each gene, the K-  12-3      means clustering algorithm computes two or three cluster centers and then each value is assigned to one of them.

3. Hierarchical clustering. For each gene hierarchical clustering divides values in two or three clusters.

Fig.1 reports the results of CDC20 discretization for 2 levels (left column) and 3 levels (right column), by using the three discretization techniques. Expression values with the same shape belong to the same level. For two levels, fixed threshold and k-means show a similar behavior, as also reported in Section III.B. For three levels, fixed threshold method concentrate almost all values in the middle level (only two points are outside). It is because the considered gene does not vary very much its concentration.

This is the main problem of fixed thresholds. Since the activation/inhibition thresholds can be different from gene to gene, setting global thresholds may fail in correctly discretizing values. Hence, clustering algorithms may be more effective in to automatically detecting them.

Fig. 1.  Effects of different discretization methods and level cardinalities on yeast cdc15 dataset for gene CDC20.

Once the discretization method has been applied, discrete  values are stored in a matrix, in which each element represents the expression level of each gene (row) in each time instant (column). For example, Table I shows a discrete gene matrix with M genes and N time instants.

B. Rule extraction Association rule discovery is an important data mining  technique, which is commonly used for local pattern detection in unsupervised learning systems. Association rules show attribute value conditions that occur together in a given dataset, which are useful for finding correlations among sets of items. Association rules are expressed in the form:  body ? head [support, confidence] where body (b) and head (h) are conjunctions of pairs  (attribute, value), which are also named antecedent and  consequent. Support (s) and confidence (c) of a rule are computed as:    n n  s bhbh =                                                                     (1)  b  bh  b  bh bh n  n s s  c ==                                                         (2)   where nbh is the number of data instances that contain  both body and head, n is the cardinality of the dataset, and nb is the total number of data instances containing the body [4]. nbh is also called absolute support, while the one in (1) is a relative value with respect to the total number of data objects.

Temporal association rules are extension of previously described association rules and consider also the time delay between the antecedent and the consequent. We define them as follows:  body ? head+k [support, confidence] where k is the time delay between the event represented  by the body and the one represented by the head.

To extract temporal association rules, we first built a  time-delay matrix, which captures the regulation between genes in W units of time. It is a N? (W+1)M matrix, in which each row is a time window and the columns contain the W corresponding values for each gene. A similar structure is used in [11]. For example, if we consider the discrete matrix in Table I and regulations among 2 time instances (i.e., W=2), we obtain the time-delay matrix in Table II.

TABLE I  DISCRETE MATRIX gene t1 t2 t3 t4 ? tN  g1 0 1 0 0 ? 1 g2 1 1 0 0 ? 0 g3 0 0 1 1 ? 0 g4 1 0 1 0 ? 1 ? ? ? ? ? ? 1 gM 0 0 1 0 ? 0     TABLE II TIME-DELAY MATRIX  g1+0 g1+1 g1+2 g2+0 ? gM+0 gM+1 gM+2 w1 0 1 0 1 ? 0 0 1 w2 1 0 0 1 ? 0 1 0 ? ? ? ? ? ? ? ? ? wN 1 NA NA 0 ? 0 NA NA   Then we extracted the association rules by applying the  Apriori algorithm [5] to the time-delay matrix. Apriori is a level-wise algorithm, which identifies frequent items and then expands them with one item at a time to generate larger itemsets. Extracted rules are expressed in the form (g1+k1=a)?(g2+k2=b). Currently we are considering only 2-itemsets to build rules (i.e., with a gene in the body and one in the head). Finally, the rules are transformed from the form (g1+k1=a)?(g2+k2=b) in the form g1(a)?g2(b)+k, where k =(k2-k1). Only rules with k greater or equal than 0,  12-4      g1 different from g2, a and b different from NA are considered.

C. Filtering In the filtering phase the rules are reduced and evaluated.

If two or more rules differ only for the k values (i.e., the time delay), the rule with the largest support and confidence values is considered.

Rule estimation is a critical task. Basically rules are evaluated on support and confidence values, but these indexes may fail in capturing the real interestingness of rules. Support prunes items that occur very infrequently in the data set, although they might produce interesting and potentially valuable rules. Confidence is sensitive to the support of the consequent. Consequents with higher support automatically produce high confidence values even if exists no association between the items. Such false rules can be detected by determining whether the antecedent and the consequent are statistically independent. This inspired a number of measures for association rule interest. One of them is lift (l), which calculates the ratio between the rule confidence and the support of the itemset in the rule consequent. It is computed as follows.

hb  bh  h  bh bh ss  s s cl  ? ==                                                       (3)   Lift ranges within (0, + ? ) and measures how far from  independence are the body and the head. Values near 1 mean that b and h are independent and the rule is not interesting. Values greater than 1 indicate that the evidence of b provides information about h, because body and head appear together more often than expected. The main problem of lift is that it is susceptible to noise. Rare itemsets with low support, which by chance occur a few times together, yield high lift values. To smooth the negative effects of such quality measures, we consider the square power of cosine, another rule quality measure [22], which we named ibh, defined as follows. It is the product of support and lift for each rule and we use it in rule evaluation.

hb  bh bhbhbh ss  slsi ?  =?=  (4)

IV. PRELIMINARY EXPERIMENTAL RESULTS To determine the effectiveness of the proposed method,  we analyzed the publicly available Saccharomyces cerevisiae cell cycle gene expression data [3]. The cell cycle process consists of four phases. In the first one, G1, the cell grows and commits to division. In the following S phase, the DNA is synthesized and chromosomes replicated. Then, there is a ?gap?, G2, before the last phase, M, in which chromosomes are separated and the cell is divided into two parts. After the M phase, the cell enters the G1 phase, hence completing a cycle. The process has been studied in great detail in the budding yeast and studies reveal that there are about 800 genes involved in it.

However, the number of key regulators that are responsible for the control and regulation is much smaller [6].

Some of the major players in cellular regulation are protein kinases, enzymes that activate or inactivate other proteins by transferring a phosphate group from ATP to the target protein. The protein kinases that coordinate the cell cycle are called cyclin-dependent kinases (CDKs). In the case of budding yeast, the only essential CDK is Cdc28. It binds with specific cyclin partners to form CDK/Cyclin dimers that phosphorylate specific target proteins. The cyclin partners that determine the targets of the CDKs are Cln1 and Cln2 which induce budding, Cln3 which initiates the ?start? event when cells grow to a critical size, Clb1 and Clb2 which are essential for successful mitosis, and Clb5 and Clb6 which are responsible for timely DNA replication.

A. Experimental setting We used the cdc15 dataset [3], which is the largest and  most studied, and we selected the twelve relevant genes listed in Table III, similarly to the second experiment reported in [1].

TABLE III  LIST OF TWELVE RELEVANT GENES IN THE YEAST CELL CYCLE.

Gene Id Description  CDC20 YGL116W Cell division control protein  CDC34 YDR054C E2 ubiquitin-conjuganting enzyme  CLB1 YGR108W Cyclin, G2/M specific  CLB2 YPR119W Cyclin, G2/M specific  CLB5 YPR120C Cyclin, B-type  CLB6 YGR109C Cyclin, B-type  CLN1 YMR199W Cyclin, G1/S specific  CLN2 YPL256C Cyclin, G1/S specific  CLN3 YAL040C Cyclin, G1/S specific  MBP1 YDL056W Transcription factor, subunit of the MBF factor  SKP1 YDR328C Core component of SCF-ubiquitin ligase complexes SWI5 YDR146C Transcription factor   It is known that some finite time delay is involved in  gene regulation, and this delay may be different for different gene pairs. However, in general it is possible to consider a maximum time delay interval, due to the limitation of the cell cycle time. Since the time of a single cell cycle of Saccharomyces cerevisiae is about 1.5 hours, it is reasonable to set the maximum time delay to be 40 minutes [1][10]. Since cdc15 data are collected with time slices of 10 minutes, we consider a time window (W) of 4 units.

We performed experiments by varying the number of discrete levels (two or three) and the discretization method (fixed thresholds, k-means clustering and hierarchical clustering). We exploited the clustering algorithm implementations in the R environment [25] and the Apriori [5] implementation provided by [26]. Minimum absolute support was set to 2 and minimum confidence to 50%.

Furthermore, we considered only rules with lift greater than one. Rules were ranked in decreasing order of ibh index.

The algorithm has been applied directly to the 12-genes subset, but the same results would be obtained if it was  12-5      applied to all the yeast dataset and then only the rules which involve the 12 genes were considered.

B. Evaluation We classified extracted rules in verified rules, i.e. gene  correlations for which evidence was found in biological literature, and unknown rules, i.e., correlations not found in biological literature.

As expected, the discretization method and the cardinality of levels widely affect the extracted rules. Fig.2 reports the number of verified and unknown rules, for two and three discretization levels, obtained by the three methods. On the x-axes the support*lift (ibh) value is reported. The histograms show the cumulative number of rules with an index value greater or equal than the reported value. Note that in this case we use the absolute support value (nbh) and not the definition in (1) for easier readability.

Fig. 2.  Cumulative number of verified and unknown extracted rules for increasing values of index.

A large majority of the ?best? rules found by each  method, i.e. the ones which have the highest index value (the right most bar in the diagrams), is verified. This holds also for rules with index greater than 9. These results confirm that our index correctly identifies as relevant the rules which are have been found in biological literature. By further decreasing the index value, the unknown rule number rises, hence adding less consolidated knowledge to the picture.

For two discrete levels, fixed thresholds and k-means show a similar behavior, as already discussed in Section

III.A. The number of verified and unknown rules is almost the same for different index values, while hierarchical clustering discovers less verified rules (only 4 for index greater than 9). For three discrete levels, fixed thresholds show less verified rules than other methods (only 5 for index higher than 8, while with the other methods about 15 verified rules are found), but also the number of unknown rules is low.

Table IV reports the extracted rules with a support*lift (ibh) greater than 7. Self-references rules are omitted. The left table lists the rules obtained by setting two  discretization levels (i.e., 1 for inhibited, 2 for expressed), the right table lists the rules obtained by setting three discretization levels (i.e., 1 for inhibited, 3 for expressed, and 2 for the intermediate state). For each rule, there is a ?*? for each method that detects it, and there is a ?*? in the Ref column if the rule is found in literature.

TABLE IV RULES EXTRACTED BY THE THREE METHODS (TH  FOR FIXED THRESHOLD, KM FOR K-MEANS AND H FOR HIERARCHICAL CLUSTERING) FOR 2 AND 3  LEVELS 2       3  Rule Th Km H Ref  Rule Th Km H Ref CDC34(1) ?SKP1(1) + 0 * * * *  CDC34(3) ?SKP1(3)+0  * * * CLB1(1) ? SWI5(1) + 0 * * * *  CLB1(1) ? CLB2(1) + 0 *   * CLB1(2) ? CLB2(2) + 0  *  *  CLB1(1) ? SWI5(1) + 0  * * * CLB2(1) ? SWI5(1) + 0 * * * *  CLB1(3) ? CDC20(3) + 2  * CLB2(2) ? CLB1(2) + 0 * *  *  CLB1(3) ? CLB2(3) + 0  *  * CLB5(2) ? CLB6(2) + 0 * * * *  CLB2(1) ? CLB1(1) + 0 *   * CLB5(2) ? CLB6(2) + 0   * *  CLB2(1) ? SWI5(1) + 0  * * * CLB5(2) ? CLN2(2) + 0  *  *  CLB2(3) ? CLB1(3) + 0  *  * CLB6(2) ? CLB5(2) + 0 * * * *  CLB5(3) ? CLB6(3) + 0  * * * CLB6(2) ? CLN2(2) + 0  *    CLB5(3) ? CLN1(3) + 1  * CLN1(2) ? CLN2(2) + 1  *  *  CLB5(3) ? CLN2(3) + 0   * * CLN2(2) ? CLB5(2) + 0  *  *  CLB6(3) ? CLB5(3) + 0  * * * CLN2(2) ? CLB6(2) + 0  *    CLB6(3) ? CLN2(3) + 0   * SKP1(2) ? CDC34(2) + 0 * * * *  CLB6(3) ? CLN2(3) + 1  * SWI5(1) ? CLB1(1) + 0 * * * *  CLN1(3) ? CLN2(3) + 0  * * * SWI5(1) ? CLB2(1) + 0 * * * *  CLN2(3) ? CLB5(3) + 0   * * CDC20(1) ? CLN1(2) + 0  * * *  CLN2(3) ? CLB6(3) + 0   * CDC34(1) ? MBP1(2) + 0 * * * *  CLN2(3) ? CLN1(3) + 0  * * * CLB1(1) ? CLB5(2) + 0   *   CLN3(3) ? CLB5(3) + 1  *  * CLB1(1) ? CLB6(2) + 0  * * *  CLN3(3) ? CLB6(3) + 1  *  * CLB1(1) ? CLN2(2) + 0 *  * *  MBP1(3) ? SKP1(3) + 3  * * CLB2(1) ? CLB6(2) + 0  *  *  SKP1(3) ? CDC34(3) + 0  * * * CLB2(1) ? CLN2(2) + 0 *   *  SWI5(1) ? CLB1(1) + 0  * * * CLB5(2) ? CLB1(1) + 0   * *  SWI5(1) ? CLB2(1) + 0  * * * CLB6(2) ? CLB1(1) + 0 * * * *  CDC20(1) ? CLN1(3) + 0  *  * CLN1(2) ? CDC20(1) + 0  * * *  CDC20(1) ? CLN2(3) + 0  * CLN2(1) ? CLB1(2) + 0 *  * *  CDC34(1) ? MBP1(3) + 0  * * * CLN2(2) ? CLB2(1) + 0 *   *  CLB1(1) ? CLB5(3) + 0  * * CLN2(2) ? SWI5(1) + 0 *   *  CLB1(1) ? CLB6(3) + 0   * * MBP1(1) ? CDC34(2) + 0 * *  *  CLB1(1) ? CLN2(3) + 0 * *  * MBP1(1) ? SKP1(2) + 0 * * * *  CLB1(3) ? CLN2(1) + 2   * * MBP1(2) ? CDC34(1) + 0   * *  CLB2(1) ? CLN2(3) + 0 *   * SKP1(2) ? MBP1(1) + 0 * * * *  CLB2(3) ? CLN1(1) + 1 *   * SWI5(1) ? CLN2(2) + 0 *     CLB2(3) ? CLN2(1) + 0   * * SWI5(1) ? CLN2(2) + 1  *    CLB5(3) ? CLB1(1) + 0  * * * CLB5(3) ? SWI5(1) + 0  * CLB6(3) ? CLB1(1) + 0   * * CLB6(3) ? CLB2(1) + 1 * CLB6(3) ? SWI5(1) + 1 * CLN1(1) ? CLB6(3) + 3 * CLN1(1) ? CLN3(3) + 2  * * * CLN1(3) ? CDC20(1) + 0  * CLN1(3) ? SWI5(1) + 1 * CLN2(1) ? CLB1(3) + 0  * CLN2(1) ? CLB2(3) + 0   * * CLN2(3) ? CDC20(1) + 0  * CLN2(3) ? CLB1(1) + 0 *  * * CLN2(3) ? CLB1(1) + 0   * * CLN2(3) ? SWI5(1) + 0   * * MBP1(1) ? CDC34(3) + 0  * * * MBP1(3) ? CLN3(1) + 3  * SKP1(3) ? MBP1(1) + 0  * SWI5(1) ? CLB5(3) + 0  * SWI5(1) ? CLN2(3) + 0   * * SWI5(1) ? CLN2(3) + 1  *   The vast majority of the rules are consistent with the  current knowledge for the cell-cycle gene expression patterns, as shown by the ?*? in the Ref column.

For example, for two discretization levels, for an index value greater than 10, each of the three methods obtains the rules CDC34(1)?MBP1(2)+0  and MBP1(1)?CDC34(2) +0, which reflect the inhibition relation among the CDC34 and MBP1 genes. Since CDC34 encodes the E2 ubiquitin conjugating enzyme required for proteolytic degradation, the genes CDC34 and MBP1 negatively influence each other [23].

Fixed thresholds and k-means also retrieve the following rules: CLB1(2)?CLB2(2)+0, CLB2(2)?CLB1(2)+0, CDC34(1)?SKP1(1)+0, SKP1(2)?CDC34(2)+0. Instead, hierarchical clustering gets the rules CLB5(2)?CLB6(2)+0 and CLB6(2)?CLB5(2)+0. These rules are found also by the other two methods, but have a lower index value. Such extracted rules are consistent with the current knowledge for the cell-cycle gene expression patterns. In fact, CLB1 and CLB2 are specific cyclins of the G2 phase and there is  2 levels - fixed thresholds    6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  2 levels - k-means clustering     6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  2 levels - hierarchical clustering   6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  3 levels - fixed thresholds    6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  3 levels - k-means clustering         6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  3 levels - hierarchical clustering   6 7 8 9 10  support*lift  cu m  ul at  iv e  nu m  be r o  f r ul  es  unknown verified  12-6      biological evidence that they are coexpressed in this process [20]. Furthermore the positive regulations between CDC34 and SKP1 denote that SKP1 is the E3 ubiquitin ligase which is needed for CDC34 essential function.



V. CONCLUSION In this paper we presented a method for learning gene  regulatory networks from multiple expression measurements. Our method is based on temporal association rule extraction and has been tested on the Saccharomyces cerevisiae cell cycle data, providing results consistent with previously published biological knowledge.

The experimental results highlight the effectiveness of our algorithm, even if results can give only hypotheses on the true biological relationships, since most of the regulatory interactions occur at the protein level and at present measurements about concentrations of proteins during the yeast cell cycle are not available.

The method can be generalized to any discretization scale and number of time delays in a straightforward way.

Although we have exemplified our approach on a relatively small subset of genes, it scales well to larger datasets.

Furthermore, time-course data are not the only type of data to which our approach is applicable. It is possible to explore various cases where potential dependencies between different experimental samples might occur.

Currently, we are investigating to use our method to deduce larger gene-interaction networks and extend the concept to rule longer than 2.

