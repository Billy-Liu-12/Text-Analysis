The Application Research of Data Mining in Alarm  Correlation about Telecommunication Network

Abstract?The data mining application to analysis of alarm correlation in the telecom network has been put out, the data mining algorithms of association rules and sequential patterns have been introduced, the comparing between two algorithms has been made, the analyzing & discussing of experimental result have been given with the alarming data of a certain network management center at Wuhan Telecom.

Keywords Telecommunication alarm, Alarm correlation, Data mining

I. INTRODUCTION In the telecommunication field, network equipments  produce large number of alarms, due to the complexity of telecom network; it is more difficulty for man to find the fault.

For the better diagnosis of faults, there is in need of analysis of correlation and compression of redundant alarms as well as orientation of fault. The objective of analysis of alarm correlation in network is to obtain the origins of faults by the data mining of alarm. The train of thought is: getting the new alarm actively by a certain algorithm, then analyzing and reasoning rapidly and accurately with the knowledge base to catch the root of fault and fix on the much probable malfunctions of network equipment or function service.



II. TELECOM DATA MINING The procedure of telecom data mining is finding the rule of  alarm correlation based on the historical alarms, then analyzing and forecasting the probable fault of network equipment.

A. Data collection and pretreatment The alarm data had been stored in the alarm database, but  this primitive alarm log could not be used directly to data mining. In general, the caught data is not integrated and not coherent. The process of data pretreatment try to fill in the vacant value, identify the isolated point, clean out the noise, and correct the inconsistent data. No matter what method has been adopted, some aspects of initial data must be considered: dynamicity, irrelative field, lost value, noise and uncertainty, redundancy.

Our solution is the processing of raw data by data extraction and data pretreatment. The first step is to extract the  data from the alarms produced by different equipment, to form the uniform data collection; the next is to deal with the extracted data, which includes the inspection of data integrality and consistency and elimination of noise or irrelative data or blank field as well as the decrease of data size.

The technique of data extraction is, for the data field what we want to extract, finding the corresponding field at every alarm table in the equipment alarm database and taking out the data what we want, putting it in new table; at the same time, going on the universal analysis and inspection of validity for initial data. For example, it is need repairing if the time stamp was lost in the mining of frequent rule; the field should be regarded as the redundant if the value is same for all the alarms, or the value is overabundant that is not the same for every different alarm field. Through the extraction, we could transform alarm data of different equipment with different format into uniform data collection fitting for the style of data mining.

B. The period of fault alarm mining The algorithm of data mining is the kernel of analysis of  alarm correlation. If the information storeroom of network alarm was regarded as the ordered set according to time, then sequential pattern mining could be used to find the frequent sequential pattern, and educe the association rules.

The primary aim of data mining is to find significative pattern. What is significative is difficult to form a judgment in general, that is determined by the particular case, and simultaneously it is depended on the domain expert to a large extent. There are some operations could be taken out by the user: sorting, grouping, pruning.

The last period is to apply the discovered rule into telecom network management, the worked rule is regarded as significative, and these rules are valuable in several aspects below:  a) The expert of network management may specify the associated operations by the mined association rule or frequent scenario rules, use it for association model of alarm interacted system and filtrate the redundant fault as well as locate the failure.

b) The mined rule perhaps reflects the unknown relations between the alarms, which represent the abnormity of network, for instance the wrong network configuration.

c) The mined rule may be served as network detecting.

We can find some unknown problem of network through the repeated running of mining algorithm for the emerging alarms.

To play rule?s a sufficient role in the real-time alarm filtration and association, some parameters must be adjusted in time on the basis of actual situation at the mobile telephone network or fixed telephone network as well as the opinions of domain experts.



III. CLASSIC MINING ALGORITHMS OF ASSOCIATION RULE In Sept. 1994, Agrawal put forward the Apriori algorithm;  it is a mining algorithm of power of influence about the frequent item set of association rule. Although it cut down substantially the size of candidate items and had better performance, also had the problem of efficiency in the data mining process of frequent item set, Jiawei Han developed another classic algorithm?FP-growth against with such deficiency, in which took a divide-and-conquer strategy based on FP-Tree, so as to produce no candidate items at the procedure of mining all the frequency itemset.

A. Apriori algorithm The key idea of Apriori algorithm was the recursive  technique, iterative approach of searching layer-by-layer: where k-item searched for (k+1) item, that is: firstly, finding out the set of frequent 1-item, writed as L1, then used to search L2 (frequent 2-item), L2 used to search L3, and so on, the process circulate until no frequent k-item could be found. Over here, every search of Lk needs scanning the database once.

For the sake of improving the efficiency produced by frequent itemset at every layer, Apriori algorithm made use of the famous Aprior property to compress the searching space.

Aprior property: all the non-null subset of frequent itemset must be frequent.

Before introduce the thought of Apriori algorithm, we define some symbols as below:  a) Lk: the set of frequent item (having minimum support rating)  b) Ck: the set of candidate k-item latent frequent itemset  The step of utilizing Lk-1 to find Lk as follows: ? the connecting step is: to search Lk produce the  candidate k-itemset Ck through the connection of Lk-1  itself, that is :  Ck = Lk-1?  Lk-1= {A?B|A,B?  Lk-1,|A ? B|=k-2}   (1) ? The pruning step: Ck is the superset of Lk, i.e. its  member may be frequent or non frequent, but all the frequent k-itemset is contained within Ck . Lk is determined by the count of each candidate at Ck through the scanning of database. According to the  Aprior property, any non frequent (k-1) itemset is not the subset of  frequent k-itemset , thus if the k-1 subset of candidate k-itemset is out the Lk-1 , then  the candidate is not frequent ,as a result it can be deleted from Ck , so then ,the number of candidate itemset is decreased greatly.

Apriori algorithm is described as below:  Algorithm: finding the frequent itemset on basis of iteration layer-by-layer generating from the candidate;  Input: Transaction Database D; the threshold with minimum support Min_sup;  Output: Frequent Itemset L of Transaction Database D.

B. Algorithm based on frequent pattern tree The idea of algorithm of FP-growth is as follows: by means  of scanning of transaction database twice, compressing the frequent itemset contained in each transaction at decreasing order of support rating into FP-Tree. It?s needless to scan the transaction database in the process of searching the frequent itemset, afterwards, but look up the FP-Tree and produce directly the frequent itemset by recursive invocation of FP- growth approach, thus it's not necessary to generate the candidate itemset in the searching process, and the execution efficiency of FP-growth was better than that of Apriori.

1) The structure of FP-Tree At first, we give the definition of FP-Tree as below:  a) Composed of a root node (expressed as? null?), a group of item prefix subtree of root nodes and an item header table.

b) Each node of item prefix subtree is made up of item name, the count of nodes and linked list of nodes, in which the count of nodes indicates the number of transactions passing through ,the link of node indicates the next node having the same item name in FP-Tree( if not, as empty).

c) Each entry of item header table consisted of an item name and a head of linked list, where the head pointing to the first item node of FP-Tree.

Construction algorithm of FP-Tree:  Input: Transaction Database DB; the threshold with minimum support Min_sup  Output: Frequent Pattern Tree  The procedure:  ?  Scanning the Transaction Database DB once, collecting the set F of frequent item and their support rating, then sorting F at decreasing order of support rating, the result was frequent item table L.

? Creating the root node of FP-Tree, marked as ?null?.

For every transaction of DB, do subsequent operations: sorting the frequent item of transaction according to the sequence of L, marking the sorted frequent item table as [p|P], where p is first element, and P is the    table of rest elements, then calling the function: Insert_tree [p|P] T .

The process described as follow:  If there is child N of T, getting N. item name =p. item name, then the count of N plus 1; else creating the new node N , setting the count as 1, linked to the parent T, besides it was linked to the node having the same item name by linked list . If p not empty, then calling recursively Insert_tree P, N .

In the process of construction, the scanning of database only need two times, the first searching the set of frequent item , the second sorting the frequent item and creating a branch for each transaction to construct the FP-Tree.

2) Frequent pattern mining based on FP-Tree After the construction of frequent pattern tree, the follow is  the data mining of FP-Tree. Beginning at the frequent pattern with the length as 1(initial postfix pattern), constructing the conditional pattern base, then we establish the FP-Tree, and do the mining recursively on the tree. The pattern increase is achieved through the connection of postfix pattern with frequent pattern generated from conditional FP-Tree.

The algorithm of frequent pattern mining based on FP-Tree:  Input: Transaction Database DB; the threshold with minimum support Min_sup  Output: the Complete Set of Frequent Pattern  Procedure FP_growth (Tree,? ): {  (1): if Tree contained only single path p  (2): then for every combination of all the nodes in path p expressed as ? do:  (3): producing pattern ? ? where its Support Rating =the minimum Support Rating of node in ? ;  (4): else for each ai in the item header table of FP-Tree reverse order  do {  (5): producing a pattern ? =ai ? its support= ai.support;  (6): constructing conditional pattern base then constructing the condition of ? : FP-Tree Tree ? ;  (7): if Tree ? ? ;  (8): then call FP_growth Tree ? ? } }  The algorithm of FP_growth includes two sections: the construction of FP-Tree and the data mining of frequent pattern FP-Tree. Generally speaking, the scale of FP-Tree is far less than that of original transaction database, and that of conditional pattern base is also less than original FP-Tree. So, system cost of FP_growth is far less then that of Apriori, in  which checked up a great lot candidate set. Owing to the adoption of divide and conquer method the scale of FP_growth is quite small and not exponential growth, even though the database may bring exponential frequent pattern.

C. The comparative analysis of Apriori with FP_growth The key problem of two algorithms is the searching of  frequent iemset , although there is big difference, the basic idea is same , i.e. on the basis of a certain rule to find frequent itemset and do the mining of association rules. Iterative approach layer ?by ?layer is used in Apriori, relative to it , using the structure of FP_Tree to store  compressively total transactions in database ,the construction of FP_Tree need only twice scanning of database, afterwards carrying through the process of frequent pattern mining based on FP_Tree, no scanning of database is in need during the course of data mining in FP_growth, at the same time, no maintenance of candidate set is in need, therefore speaking overall, FP_growth is faster than Apriori about factor of ten , besides the algorithm of FP_growth is valid and elastic with regard to  the long or short frequent pattern. Of course, there are some shortcomings in  FP_growth: it demands frequent construction & release of conditional pattern tree in the process of data mining, also demands the evaluation & read of subset for the nodes of single path while building the frequent itemset, if the nodes of path is too many, then the calculating spending will increase exponentially.



IV. EXPERIMENT AND ANALYSIS Experimental data is based on four thousands alarming data  of a certain network management center at Wuhan Telecom, due to the excel format of that, we must create database at first, and then read the records.

A. The operation of database 1) Install Mysql database:  Employ Phpnow1.4 to install APACHE2+PHP5+MYSQL5, using built-in  Phpmyadmin tool to conduct management of Mysql database.

2)  Create Mysql database: Use Phpmyadmin to create testing database: Mystat, and  create table (warns) to store the collected data.

3)  Install Mysql ODBC; 4) Create the data source of ODBC:  Utilize ?Data source tool (ODBC)? in ?Computer administration? to create user data source, and connect the Mystat in Mysql.

5) Make use of the technique of ADO, operate the database;  6) Import the alarm data to Mysql: a) Execute the data pretreatment in Excel file. Save the  data in ?alarming record.xls? as warns.txt, and delete the field name in table head, let the program read the file directly, get field data by ?TAB? as delimiter and insert the data to database.

b) Insert the new data to record set, update the database    c) Succeeding in insert data, examine the updated data by Phpmyadmin  7) Inquire about the Mysql data in the program.

B. The comparison of implementation result between Apriori and FP_growth We analyze four thousands alarming record of a certain  network management center at Wuhan Telecom with the help of Mysql database, and educe the conclusion:  With the same minimum support rating, the run time of Apriori is obviously longer than that of FP_growth; but along with accretion of minimum support rating, the candidate set & frequent set decrease, that time also decreases clearly.

On condition that the minimum confidence level was 0.5 and the number of transaction was 4168, the comparison of parameter with different support rating was given as below (TABLE I), where Ms represent Minimum Support (%), Ap represent Time of Apriori microsecond , Fp represent Time of FP_growth (microsecond , Fs represent Number of Frequent Set, Sr represent Number of Strong Association Rules.

TABLE I. THE COMPARISON OF ALGORITHM  Ms Ap Fp Fs Sr  40 16498 11260 16 18  50 16530 11272 16 18  60 15169 11242 7 5  70 12594 11177     0 0  80 12873 11216 0 0  90 12691 11239 0 0

V. CONCLUSION The algorithm of data mining in this paper is based on  frequent alarm, relative to it, non frequent alarm has not been discussed; at present, the mining algorithm of alarming correlation rule just aims at alarm data, and that performance data of network has definite relevance with alarm data.

Therefore, it?s good for improving the accuracy of correlation rule and forecasting the failure that combine the performance data with alarm data to conduct the research.

