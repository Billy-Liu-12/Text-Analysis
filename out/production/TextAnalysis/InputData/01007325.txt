Fuzzy Frequent Episodes for Real-Time  Intrusion Detection

Abstract  Data mining methods including association rule mining and frequent episode miniog have been applied to the intrusion detection problem. In other work, we have introduced modifleations of these methods that mine frvy association rules and frvy frequent episodes and have described off-line methods that utilize these fuzzy methods for anomaly deteetion from audit data. In this paper we describe another extension that uses frvy frequent episodes for near real-time intrusion detection. We lirst define fuzzy frequent episodes and then describe experiments that explore their applicability for real- time intrusion detection. Experimental results indicate that fuzzy frequent episodes can provide effeclive approrimate anomaly detection.



I. INTRODUCTION  The pervasiveness of computer networks in modem life and recent high-profile attacks against major Internet sites have prompted wide interest in improved security of computer networks including better methods for intrusion detection. Approaches to network intrusion detection are typically categorized as misuse detection or anomaly detection. Misuse detection systems look for known patterns of attack while anomaly detection systems look for deviations from normal behavior. A variety of data mining methods have been used in an attempt to automate the acquisition of patterns for both misuse and anomaly detection. Many research groups now advocate the fusion of information from a number of different detection modules [e.g. 2, 41. We describe on anomaly detection approach based on fuzzy frequent episodes that can provide evidence of intrusions in near real-time.

Frequent episodes have been used by several research groups to represent frequent sequential patterns in temporal data streams 14, 61. When the sequential patterns involve quantitative values, some sort of quantization is used to yield discrete attribute values. The quantization process can produce an artificial sharp boundary problem. Kuok, Fu, and Wong [3 ]  addressed this problem for association rule mining by developing methods for mining fuzzy association rules.

We have extended their approach to mine fuzzy frequent episodes [SI. In our previous work, we have used fizzy association NICS and fuzzy frequent episodes for off-line anomaly detection. In this paper, we explore the applicability of fuzzy frequent episodes for near real-time intrusion detection from network audit data. We first present a brief overview of frequent episodes and then describe our fuzzy extension to this data mining method. We then describe our method for real-time intrusion detection using fuzzy frequent  episodes and present preliminary experimental results that demonstrate the effectiveness of the approach.

11. THEORY  F?requent Episodes hkmila and ToivCnen [6) desoibed an algaitlnn to dismver  mhninal aanmuxs In Mamila and Toivoneds me(h0d [q.

suppose S =FJ, Ea .._ &i is an event sequence of n events and A=(iJp, ..., aJ is the w of all the event a t h i i  !%AI event E=@alEaa ... EaJ m S cansisb of m vahm fcu all the event amibutm.Eisalsoasc&tsdwahatime&unpdenotedby ET.A sinple d e p d e  P(e,,ea ...,q) m t s  a sequaaial oazorence of k event Variables whae d e, (/Si 5 k) 6 an event miableandforall i a n d j ( l s i < j s k ) , e + T < @  U d l y , k i s nnxhsmUathann,snl 5k<<n.WeuseBtnrep.esenanan?went variable cmsidng of q event m i  i.c, @(mb,=vi,.&2.v, .._, mq=$ whae (@.&I, @.&a ..., B.&d L A and I s q amand each vi( /Si  SqJ isawlwhthedcmainof amibute om;. An event variable Cis saidtohavean OCQOTWC~ m aneventEiffordi(I si5q~E(egatb$=eq.vi.

Mannila and Toivonep [6]  further an episode P(er,e2, ... e$ as occurring in interval [t,f7 if I 5 e1.T and 1? 2 ebT. An occurrence of P(el,e2, ... e$ in interval fi,t7 is defined as minimal if there does not exist another of occurrence of P(e1.q ,... ed in a subinterval [u,u?JCfi,t7. Given a threshold of window (representing timestamp bounds), the frequency of P(e1.q ,...e$ in the event sequence S is the total number of its minimal occurrences in any interval smaller than window. In order to find ?frequent? episodes, a second threshold, minfrequency, is used. An episode P(el.e >,...e*) is called frequent if frequency(P)/(n-k+l) 2 minfrequency. Since in our domain k << n ,  an episode is considered frequent if frequency(P)/n 2 minfiequency. Mannila and Toivonen?s algorithm [6]  for mining frequent episodes is similar to the Apnori algorithm[l] except for the difference between calculating episode frequencies and calculating itemset supports. Like association rules, episode rules can be directly established from frequent episodes. Given a frequent episode P(eJ.e2, ... e$, there will be a k-I non-empty ordered supepisodes P(e1,ez. ... e J c P  where I_Ci_Ck-l. Given another  * This material is based upon work supported by the Army Research Laboratory under Contract No.

DAAD1701C00110101005 and by DOD DEPSCoR under Contract No. N000140110678.

simple serial kquency qnxdes fmm event kqumczs based on  0-1803-7293-X/01/$17.000 2W1 I!XE 368 2001 iEEE international Fuzzy Systems Conference    threshold minconfidence, a simple serial episode rule of the form Pi+Qi, c, s, w can be constructed where:  P(el.ez,. . .eJ cP, Q(ei+j.ei+2 .... e*) = P-Pi cP, s=frequency(P) 2 minfrequency, c=fiequency(P)/frequency(PJ) 2 minconfidence, and w=window.

In our work, P,  and Qi are required to he within the same time window w .  The last episode rule Pk.~-@b is of the most interest since it can be used to predict the kIh event given the previous k-I events. We use this form of episode rules for real-time intrusion detection.

F k a y  Frequent Episodes The need to develop fuzzy frequent episodes comes from  the involvement of quantitative attributes in an event. We have modified the methods of Mannila and Toivonen [6] to incorporate the representation of quantitative attributes via fuzzy sets. Extending the notation of [6] in a manner similar to [3], given the set of event attributesA=(aI,o Z,..., a d ,  each attribute aj (I -Cj _C m) may be categorical or quantitative (fuzzy). Suppose f(aj) represents the maximum number of categories (if aj is categorical) or the maximum number of fuzzy sets (if aj is fuzzy), and m ( l ,v)  represents the  membership degree of v in the I f h  category or fuzzy set of ai.

If a, is categorical, mo,( l ,v )E{O, l } .  If a, is fuzzy,  0 s m ( / , v )  s 1 . For an event attribute, its categories or fuzzy sets can be mapped to consecutive integers. This allows an event variable e* to be expressed as ek(attrl=cl .attr2=c, ..., attrk=c*) where ek(attrl=cl ,attr2=c, ..., atlrk=c$ G A and for all j ( 1  s j a k) ,  1 5 cj S f(aJ. We define two event variables B(attrl = c1, attrz=c 2,...,attrp=cp/ and eQ(attrl' = cl,attr2'=c2 ,.... attrq'=cq/ to be homogeneous, if {B.attrl,S.attrz ,..., B.attrp} = {e'.attr1;eq.ottr2; .... eq.attr,7, which also indicates that p = q. It is obvious that an event variable is homogeneous to itself.

Given an event E=(E.ar. E.a2 ,.__, E . a d ,  E.aj ( I  S j  S m )  , represents a value of the j h  attribute and can be mapped to { ( / , m a ,  (I, E.aj ) )  1 for all I, 1 -C / S f (a j j ) .  However, if aj is fuzzy, the sum of all the memberships may not always equal one. A normalization nrocess is used as follows:  0,   [maj (1, E.a j )  if ai is categorical  For an event variable ek(attrl=cl, attr2=c2, ..., attrk=c$ where 1 5 k a m, its occurrence in E is no longer restricted to the values 0 or I .  Rather, it is defined as:  k occurrence(e', E )  - nrn'Z, , , , (ek .c , ,  E.(e'.attr,)).

The minimal occurrence of an episode is the product of the occurrences of its event variables. This means an event E may support several event variable occurrences due to the introduction of fuzzy sets. However, a side effect may arise due to very small membership values. For example, consider the event sequence (Ei. E2, Ej} within the window threshold.

A, B, C, and D are event variables in which A and B are homogeneous but A L B, and C and D are homogeneous but C + D. Suppose we have the following occurrences of the event variables:  1-1  occurrence(A,E,) = 0.8, occurrence(B,EJ = 0.2, occurrence(A,&) = 0.1, occurrence(B,&) = 0.9, occurrence(C,E3) = 0.9, and occurrence(D,E3) = 0.1.

Then the minimal occurrence of episode 64, C) will become 0.09 based on {&.A,E3.C} and not 0.72 that would be the value based on the non-minimal event sequence {EI.A,E3.C).

This means that the occurrence of an event variable with a very small membership may change the minimal occurrence ofan episode in the event sequence.

To address this problem, we introduce another user- specified tbreshold minoccurrence to represent the smallest allowable occurrence of an event variable. So, given an event variable ek, if occurrence(ek,E)<minoccurrence, it will not be considered to have occurred in E. The following normalization process will conducted to account for the deletion of these low membership occurrences:  if (occurrence(e",E) < leastoccurence)  else occurrence(e',E) =O  occurence(ek, E ) zeq occurenc<eq ,E)  occurrence(e",E)=  Here every eq is homogeneous to ek and occurrence(eq,E) Z minoccurrence. For instance, if leastoccurrence = 0.2, EI will contribute 0.8 to A and 0.2 to 8, E2 will contribute 1 to B, and E3 will contribute 1 to C. If /enstoccurrence is set above 0.5, for any event, only one event variable will he counted with a normalized occurrence of one.

Other than the difference in calculating the frequency (or minimal occurrence) of an episode, the algorithm for mining fuzzy frequency episodes is similar to Mannila and Toivonen's algorithm [6] for mining frequent episodes. More details are available in [ 5 ] .

111. REAL TIME MTRUSION DETECTION  Lee, Stolfo, and Mok [4] describe the use of frequent episodes to select features that will be significant for construction of real-time intrusion detection systems. We have previously described the use of fuzzy frequent episodes     in a similar fashion [5]. In addition, we have investigated the use of fuzzy episode rules directly for near real-time intrusion detection. In the Time-based Inductive Machine (TIM) proposed by Teng, Chen, and Lu [7], a sequential pattern with 100% certainty can be used to detect anomalies. For example, given a normal pattern like A - B - C + (D=IOO%), the sequence A - B - C - E will he marked as an anomaly since it is believed that A - B - C is always followed by D. In a similar fashion, we introduce the idea of using fuzzy episode rules with high confidence (e.g., 20.8) for anomaly detection.

Consider the event sequence S={EI,EI.....E.~.I~. the current event E,,. following S, and a fuzzy episode rule of the form R: el ,..., e*.I-%,c,s,w,, where k 2 1 andallei(I _Ci_Ck) areevent variables. For the episode {e, ,..., Q.,}, if its minimum occurrence in S is x (x > O), it then can be predicted, with confidence c, that {el,...ek-l,ek} will also have a minimal occurrence in S+(EnE.J with the constraint that e'occurs in the event E.. . Suppose the minimal occurrence of the episode in the sequence S+{E.J is y. y/x Z c should also hold. In this case, event E,,. is said to match the episode rule R. On the other hand, like TIM, if the episode {el ,..., ek.j has no minimum occurrence in S, or if x = 0, the episode rule R is said to be mismatched and indicates an anomaly. Our experiments demonstrate that a large window threshold (e.g., 15 seconds a w L 30 seconds) decreases the probability of mismatches.

The set of episode rules mined from training data is used to represent normal patterns. If the current event E,,, does not match any episode rule, it will be marked as an anomaly with some degree of belief. The confidence of an episode rule is usually less than 1 and provides a measure of the strength of the evidence of an anomaly. This approximate intrusion detection method evidence for anomalies that can be combined with evidence from other detection modules.



IV. WENMENTAL RESULTS The experiments described in this section were designed to  demonstrate the applicability of fuzzy episode rules in real- time intrusion detection. In the first experiment, intrusions of the probing type were simulated by use of mscan m the network of the Computer Science Department of Mississippi State University. Mscan is a software tool which can be used to scan multiple systems. Fuzzy episode rules were mined from 3 hours of training data with no intrusions for the feature of PN (the number of different destination ports during last 2 seconds). Since the simulated intrusions usually take 1 to 1.5 minutes, test data sets were established by collecting network traffic data for 3 minutes, with the goal of covering the duration of every simulated inhusion. Six test data sets were collected during 13:0&14:00, Tuesday, 30 March, 1999 and 13:o(t-14:00, Wednesday, 31 March, 1999. Among the six test data sets, TI', TZ', and T3' represent normal data sets, and T4', T5', and T6' represent data sets  with simulated mscan intrusions. The anomaly percentage of every test data set is calculated as follows. Suppose we are given a sequence of n events for testing. An event will be marked as an anomaly if, in the set of episode rules representing normal behavior, there is no episode rule that it matches. If the total number of anomaly events ism,  m n  anomalypercenfage = -* 100%.

Figure 1 shows results of the first experiment. Rule sets were mined using minconfidence = 0.8, minsupporf = 0.1, minoccurrence = 0.3 and window = 15s.

Test Data Sets  Fig. 1 Anomaly Percentages of Different Test Data Sets  These results demonstrate clear differences in the anomaly percentages of normal data and intrusion data. Since there are no simulated intrusions in TI', TZ', and T3', the anomaly percentages for this data actually represent false positive error rates. Further analysis of the results from T4', T5', and T6' shows that all have false positive error rates below 10%.

However, the false regative error rates are relatively high (about 40%). There are several reasons. First, only one feature, is., PN, is used. Second, the simulated intrusions are not evenly distributed along time according to this feature.

A second experiment was conducted in order to compare the intrusion detection performance, especially the false positive error rate, between fuzzy episode rules and non- fuzzy episode rules (by use of intervals). The same training data set and six test data sets as in the first were used. Both fuzzy episode rules and non-fuzzy episode rules were mined from training data for the feature of PN (the number of different destination ports during last 2 seconds), which was divided into three fuzzy sets (for fuzzy episode rules) or three intervals (for non-fuzzy episode rules): LOW, MEDIUM, and HIGH. Figure 6.10 shows a comparison of the false positive error rates on test data sets between fuzzy episode rules and non-fuzzy episode rules.

The experimental results demonstrate that the false positive error rates from fuzzy episode rules are less than for non- fuzzy episode rules. That is to say, the error rate of predicting a normal behavior as an intrusion is much lower for fuzzy episode rules than non-fuzzy episode rules.

TI '  T2' T5 T# TJ' T6' TsS( Data Sets  Fig. 2 Comparison of False Positive Error Rates of Fuuy Episode Rules and Non-Fuzzy Episode Rules  We have also conducted experiments to determine the cffect of the minconjidrnce threshold on the False positive and false negative error rates. Higher minronjidmw \,slues were found to result in higher false posttivc error rates and )owcr fake negative error rates. Our expenmcnts have also shown that a higher minconjiJence value will cause many more mismatches. This is because a higher minronjidence value will reduce thc number of episode  rule^ learned from training data, resulting in rule numbers so low that thc rules are not be sblc to cover pattern> rcpresenting all normal hehavior.



V. CONCLUSIOSS ,\ND W K E  WORK  Intrusion dctcction i j  an important but complex task for 3 computersvstcm. Many AI technique, have hccn widely used in intrusion detection systems. Data mining methods x e capable of extracting pntlerns automatically and adaptivcly Iron1 a large amount of'data Ashociation rulcs and frequent episodcs haw been uscd io mine training data to establish normal patterns for anomaly dctcction. We have shown that whcn ihc data involve quantitative dnribuies, the higher level of abstraction offered by fwzy the fuzzy counterparts of these mcthod, gcncrates more abstract and flexible p3tternt for anomaly detection.

Thurc are two main reasons for introducing fwzy logic for i n t r u h n  detection. First. mnny qumtitative features arc involvcd in intrusion dctcction. Fuzzy set theory provides 3 reasoneble md efficient uay to catcgoriic these quantitative fentures in order to establish high-led patterns. Second, se~'urity itself is fu7zy. For quantitative features. therc is no sharp delineation between normal operdtions and anomalies.

Furzy episode rulcs allow one to create the high-level sequential pattcrns representing normal behavior.

We have modified the procrdure of Mannila and Toiwnen [O]  for mining frequent episodes to learn fu77y frequent episodes. Wc use fuzzy frrqucnt episodes to extract patterns for temporal s t ~ t ~ ~ t i ~ a l  measurcments at a higher IcveI than the data level. We present a real-time intrusion detection method that uscs fu17y cpisodc rulcs and demonstrate that the  use of fuzzy frequent episodes reduces the error rate as compared to non-fuzzy frequent episodes. Dickerson and Dickerson [2] have also developed methods for using fuzzy logic to profile networks behavior. Their methods differ from ours in that they use data mining primarily for audit date reduction and their fuzzy rules are handcrafted.

In order to further evaluate the utility of this method, we plan to conduct experiments with additional audit data features. In other work, we have exploited genetic algorithms to tune the membership functions for fuzzy association rules and for feature selection. We will also apply these methods to the membership functions for fuzzy frequency episodes.

The architecture of our intelligent intrusion detection system as described in [SI supports the fusion of results from multiple deteciion modules by a decision module. We are exploring the use of fuzzy cognitive maps for this fusion process.

