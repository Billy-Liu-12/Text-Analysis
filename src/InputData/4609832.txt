Distributed Mining Model and Algorithm of Association Rules for Chain Retail

Abstract   Association rules discovery is the most important and demanding task of retail enterprises data mining. It has reflected the interesting related relation of products and is helpful to make correct decisions for retail enterprises.

The paper describes distributed mining technology which is suitable for retail enterprise mining, the paper analyzes its distributed management system from three aspects: 1.the communication bandwidth, 2.branch store?s quantity 3.the characteristics of local database, and divides chain retail enterprises into two types in term of their distributed management systems. Define two kinds of retail enterprises; they are chain retail enterprise based on massed learning and chain retail enterprise based on dispersed learning. In order to satisfy mining task for two kinds of chain retail enterprise, the paper proposes two mining models and corresponding algorithms, finally do two contrast experiments under the simulation distributed setting. From the results of experiments, two algorithms ran well on corresponding chain retail enterprises.

1. Introduction   Association rules discovery is the most important task of retail enterprises data mining. It is the basis for many business decisions such as goods basket design, choosing promotion strategy and commodity combination.

Recently, many interesting and efficient association rules mining algorithms and their applications have been proposed [1, 2, 3, 4], however, there are not many proposals for association rules mining of the chain retail enterprises.

Moreover, many papers have addressed the problem of mining association rules from distributed database, but they mainly concentrated on the algorithm[5,6,7], at my best knowledge, no proposal for distributed mining association rules of the chain retail enterprises. Research on mining association rules for chain retail enterprise is of great significance.

In the paper, after dozens of local retail enterprises? survey, we find that retail enterprises can be simply divided into two types according to their different distributed management systems. One type of retail  enterprises have many branch stores and the communication bandwidth is large, while the transaction data of each branch store is relatively small; the other have relatively few branch stores and the communication bandwidth is small, while the transaction data of each branch is relatively large. After carefully studying these two types of chain retail enterprises, we find that their locally frequent itemsets? integration are very different, so it is very unreasonable to adopt one mining approach. To solve this problem, the paper has presented two different mining models and algorithms which adapt to two types of chain retail enterprise respectively. Contrast experiments verify the correctness of the algorithm.

2. Distributed Mining of Association Rules   In the distributed system, there are several data sources  iD (i=1,2,?,n) and each iD  are partitioned on one  site iS (i=1,2,?,n).For the sake of discussing ,we give a  virtual dataset ,iD D= ?  | |iD is the number of  transactions in iD . | |D  is the number of transactions in D ,for any item X, X.sup is the support number of X in D ,and X.supi is the support  number of X  in iD .

Definition 1 given an itemset X, if . sup min sup | |X D? ? , X is said to be globally frequent itemset;  if . sup min sup | |i i  X D? ? , X is locally frequent itemset on  site i  S .

Lemma 1 if X is globally frequent itemset, then X  must be locally frequent in at least one site i  S [8].

Lemma 2 there are n sites in the distributed system.

Li( 1 i n? ? ) is the locally frequent itemsets on site  Si(1 i n? ? ), '   n  i iL L== ?  then '  L  must be the supersets of the global frequent itemsets L .

Proof: it can be proved easily by Lemma 1.

The main task of distributed mining of association  rules is: firstly parallel mine locally frequent itemsets on every site  i S ; secondly merge the local result to generate  2008 ISECS International Colloquium on Computing, Communication, Control, and Management  DOI 10.1109/CCCM.2008.129   2008 ISECS International Colloquium on Computing, Communication, Control, and Management  DOI 10.1109/CCCM.2008.129   2008 ISECS International Colloquium on Computing, Communication, Control, and Management  DOI 10.1109/CCCM.2008.129     the globally frequent itemsets; thirdly generate association rules from the globally frequent itemsets. In the chain retail enterprise, each branch store's local intranet system and the WAN system between branch stores and the main store constitute enterprise's distributed management system together.

3. Two Mining Model and Algorithm for  Chain Retail Enterprise   After investigating dozens of the local chain retail enterprises, we discover that though they all adopt distributed mining approach and the same decision? making pattern, the distributed management systems of different chain retail enterprises are very different, so it is unreasonable to use the fix mining method. Generally speaking, communication load and communication frequency are two main factors that affect mining efficiency for a distributed management system. We can analyze a distributed management system from three aspects: 1.branch store?s quantity; 2.the communication bandwidth; 3.the characteristics of the local dataset, characteristics includes whether it is dense or sparse, the amounts of transactions data etc. we define two kinds of chain retail enterprise in terms of its management system Definition 2 chain retail enterprise based on massed learning:       these enterprises have many branch stores and large communication bandwidth, while the transaction data of each branch store is relatively small.

It usually refers to the large-scale chain retail enterprise.

Definition 3 chain retail enterprise based on dispersed learning:     these enterprises have relatively few branch stores and small communication bandwidth, while the transaction data of each branch store is relatively large.

It usually refers to the small-scale chain retail enterprise.

For the enterprise designed by definition 2, as the large bandwidth and relatively small transaction on each branch store, the communication load plays little effect on the performance of mining, while communication frequency should be considered, and cuts communication frequency as far as possible. In order to satisfy it, the way of merging local results is directly sending the local results to the main store, and doing globally frequent prune there.

We called it massed learning, as doing globally frequent prune on one store.

For the enterprise designed by definition 3, as the relatively small bandwidth and relatively large transaction on each branch store, communication load will impact the efficiency of mining much, if merging local results is the same with previous way, the mining task may fail, due to large communication load. So the way of merging local results is every branch store sending its itemsets to other branch stores, and doing globally frequent prune on each branch store. We called it dispersed learning, as doing globally frequent prune on many stores.

3.1 Association Rule Mining for Chain Retail  Enterprise Based on Dispersed Learning   We designs the mining model for chain retail enterprise based on dispersed learning as below:   The model illustrates three steps of the distributed  mining. Step one: mine locally frequent itemsets on each branch store, and then generate local association rules.

The association rules are stored on the local rules database, and the local rules reflect the interesting related relation in the high amounts of commerce -transaction data, and are helpful to analyze customers shopping behavior and making correct decisions on branch store.

Step two: merge locally frequent itemsets, as figure 1  show, it needs communication between branch stores.

Step three: On main store, prune itemsets that are not globally frequent and generate global association rules from global frequent itemsets. The global association rules are stored on the globally rules database. The global rules are helpful to make correct overall decisions for the main store. Its corresponding algorithm CREDLM (chain retail enterprise based on dispersed learning mining) is as follows       CREDLM algorithm Input: distributed data sources ( 1, 2, ..., )iD i n= ;  minimum support threshold minsup Output: the globally association rule  (1) For i=1,2,?,n do{ (2) L(i)=Local-Mining( , min sup  i D )  (3) For j=1,2,?,n and j i?  do{ (4) Send L(i) to  j D  (5) if L(j) has been mined from j  D {  (6) ( )X L i? ?  if ( )X L j?  write down . sup jX  and mark X  (7) scan j  D and check L(i); }  (8) else{ (9) scan  j D and check L(i)  } }  (10)  receive(X.supi) ( ( )X L i? )  (11)  if .sup min supiX D< ?  then delete X }  // following code were performed on main store (12)  L=receive(X,X.supi) (13)  L ? Association rules }    3.2 Association Rule Mining for Chain Retail  Enterprise Based on Massed Learning   The paper designs the mining model for chain retail enterprise based on massed learning as below:       The model is very similar with previous model, their difference lies in the second step of distributed mining. In this model, branch stores don?t communicate with each other; they directly send their itemsets to the main store, then the main store communicates with some branch stores, collects the support of  the candidate globally itemsets which are infrequent on these stores. After accumulating the support of the candidate frequent itemsets for all branch stores, do globally frequent pruning on the main store. The communications are not very frequent, because branch stores don?t communicate with each other.

As two models are similar, we modify CREDLM algorithm to get the algorithm for this mining model. It is called CREMLM (chain retail enterprise based on massed learning mining) algorithm  CREMLM algorithm Modify the CREDLM algorithm?s pseudo codes from step 3 to step 11  (3)  Receive (i,L(i)) /* on main store, collect itemsets and their support from every branch  store */  } (4) For i=1 to n do { (5) C(i)={M| find infrequent itemsets for ith branch store  from the candidate frequent itemsets}; (6) Send (i,C(i)); /* send C(i) to ith branch store  */ (7) Scan dataset Di a time, and get support of itemset  which is in C(i) (8)  Receive (i,C(i)); /* on main store, collect  the support  of itemset which is in C(i) */ }  // on main store, prune itemsets that is infrequent (9) If . sup min_ supX DB< ?  delete X ( )X L?  4. Experience and Analysis   We carry out two sets of experiment. The first set compares CREDLM and CREMLM on a range of site     values in Ethernet-100 network which simulates the distributed setting that is large bandwidth and many sites; the second set compares CREDLM and CREMLM on a range of support threshold values in NON-LAN which simulates the distributed setting that is low bandwidth and high amounts of transaction data. We run our experiments  on a cluster of PentiumIII 1000MHZ CPU, 256MB Memory, 20GB HD PC (PC machine represents site) The two experiment are performed with synthetic databases produced by IBM Almaden[9], every database stores 100k transaction data, and adopt Apriori[10]algorithm to mine locally  frequent itemsets.

Figure 3 compare CREDLM and CREMLM on a range of site value in Ethernet-100 network when minsup=4%.

Figure 4 compare CREDLM and CREMLM on a range of support threshold values in NON-LAN when sites=10   The first experiment is designed to demonstrate that  CREMLM has performed better than CREDLM in a larger bandwidth and many sites distributed setting. As figure 3 shows, when n<10 (n represent site?s quantity) two algorithm execution's time disparity is very small, however, when n>10 two algorithm execution's time disparity is getting bigger and bigger as increasing the number of sites, because bandwidth between sites is very large in the LAN. So communication load isn?t the main factor to affect mining efficiency, while communication frequency becomes the main factor. CREDLM algorithm?s communication frequency complexity is O(n2), and CREMLM  algorithm?s communication  frequency complexity is only O(n).

The second experiment is designed to demonstrate that CREDLM has performed better than CREMLM in a  smaller bandwidth and more communication load distributed setting. As figure 4 shows the execution?s time is obviously longer than that in the first experiment. It is due to in NON-LAN environment, communication cost is higher than that in LAN environment. When minsup>0.75%, CREMLM has performed better than CREDLM, however, when minsup<0.75% CREDLM has performed better, because at very low threshold, each time communication load between sites by CREMLM algorithm are much larger than that by CREDLM algorithm.

5. Conclusions   Chain retail enterprise is composed of many branch stores, which stores large transaction data. The branch     stores constitute a distributed setting, so distributed mining is suitable for chain retail enterprise. The paper analyzes the distributed management of chain enterprise and defines two kinds of chain enterprise. To solve the mining task for the defining enterprise, the paper has presented two mining models and corresponding distributed mining algorithm. These two algorithms can mine all association rules both for every branch store and the main store, and are helpful to making correct decisions.

Future works regards improving mining efficiency on each branch store and decreasing the number of scanning database.

Acknowledgement   It is a project supported by the National Social Science Foundation of China (05BTJ019), foundation of National Natural Science of China (70671094), foundation of National Doctor Fund under (20050353003),Zhejiang Sociall Science Programming (06CGL29YBB),ZheJiang Science and Technology Plan (2007C24004)   References   [1] R Agarwal, C Aggarwal, V Prasad1. Depth first generation of long patterns1 The 2000 ACM-SIGKDD , Boston , MA , 2000 [2] Proc. of the 1st Workshop on Frequent Itemset Mining Implementations (FIMI?03). 2003  [3] J.Pei, J.Han, H.Lu, S.Nishio, and D.Tang, S.amd Yang. H-Mine:Hyper-Structure Mining of Frequent Patterns in Large Databases. In Proc. The 2001 IEEE San Jose, CA, USA, 2000 [4]Zaki MJ, Hsiao CJ. CHARM: An efficient algorithm for closed itemset mining. In: Grossman R, et al, eds.

Proc. of the 2nd SIAM Int?l Conf. on data mining.

Arlington: SIAM, 2002. 12~28 [5] D. W. Chemung. Han, V. T. Ng, A. W. Fu, and Y.

Fu. A Fast Distributed Algorithm for Mining Association on Parallel and Distributed Information Systems (PDIS'96), pages 31-44, Miami, FL, 1996 [6] D. W. Cheung, V. T. Ng, A. W. Fu, and Y. Fu.

Efficient Mining of Association Rules in Distributed Engineering,8:911-922, 1996.

[7] F. Coenen,P. Leng, and A. Shakil. T-trees Vertical Partitioning and Distributed Association Rule Mining. In Mining(ICDM'03), Melbourne, FL, November 2003.

[8] Ji-fu Zhang, Lian Zheng, Hong Shi elc. Study of Distributed Mining Association Rules Based on Meta- learn Technology. JOURNAL OF SYSTEM SIMULATION Vol.16 No.4 ,April ,2004 pp.696-699  [9] Srikant R. Quest synthetic data generation code. San Jose: IBM Almaden Research Center, 1994.

http://www.almaden.ibm.com/software/quest/Resources/i nde x.shtml [10]R.Agrawal and R. Srikant. Fast algorithms for mining association rules. In Proc. VLDB?94, pages 487? 499,    September 1994.

