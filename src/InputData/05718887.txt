High-Utility Rule Mining for Cross-Selling

Abstract In association rule mining, utility has recently been  regarded as a practical measure for a rule?s usefulness in that it can reflect the actual amount of output achieved by applying each rule. Even the same rule may have different utilities depending on how well the rule fits a specific business purpose. However, most recent studies have tried to apply a uniform standard to assessing rules disregarding this. This paper introduces high-utility rule mining (HURM) as an alternative approach. HURM proposes rule utility as a new measure for rules? usefulness. Rule utility, expressed in the form of a rule utility function (RUF), can be developed from three elements (opportunity, effectiveness, and probability) that are designed by considering a rule?s fitness to business purposes.

HURM algorithms were developed to meet each specific purpose by replacing RUFs. A cross-selling case was chosen to show how HURM can be applied to a particular business.

1. Introduction   Association rule mining (ARM) has been widely utilized in finding meaningful patterns from transaction data. The patterns are converted into association rules to be applied to business strategies. For instance, items always sold together can be displayed on the same shelves. On the other hand, if customers usually purchase an item after buying another, the former item can be placed on the list of items to be recommended to the customers who bought the latter item.

Association rules are applied to business strategies on the basis of their practical usefulness (e.g., revenue increase or profit maximization). If a business practically benefits from a rule, the rule has good reason to be considered useful to the business. From this viewpoint, the purpose of using ARM is to find rules that would provide a large output when applied to a particular business.

ARM studies have been developed around this concept. High-utility itemset mining (HUIM) [4, 9, 15, 16], which was introduced in one of the most recent ARM studies, is used to consider each item?s weight (e.g., price or profit per unit sale) and quantity in evaluating the usefulness of association rules. The reason is that rules including items with high prices  and/or large quantities can provide more desirable outputs than rules including items with low prices and/or small quantities. However, high-utility itemsets found in the HUIM processes may not guarantee useful association rules. In order to explain this in detail, two rules are presented as examples:  1:  ?   (  =  $35.00)  2:  ?   (  =  $35.00)  According to HUIM, itemset utilities are computed  for all of the items included in each rule: {bread, milk} and {wine, cheese}, respectively. Itemset utilities are written in parentheses after each rule. The calculation of itemset utilities is based on each item?s price (e.g., bread, $1.50; milk, $2.00; wine, $30.00; cheese, $5.00) and average quantity (e.g., bread, 10; milk, 10; wine, 1; cheese, 1). In the example, the other conditions (e.g., support and confidence) are assumed to be identical.

The above rules can be used for two possible purposes: packaging items and cross-selling. In the case of packaging, each package is expected to be composed of the items that are frequently sold together (e.g., {bread (10), milk (10)} and {wine (1), cheese (1)}). Item quantities in each package are specified in the parentheses after each item. Since both items in a package are sold together, all of the items contribute to the revenue simultaneously. The sales from both packages are the same ($35.00). Judging from the equivalent sales amount, Rules 1 and 2 can be considered equally useful. As the itemset utilities are also equivalent to each other, itemset utility properly evaluates the rule?s usefulness of packaging items.

On the other hand, if a cross-selling campaign is planned with the rules, items to be sold will be different from those in the item packaging case.

Association rules are utilized in choosing items to recommend to customers who purchased some items beforehand. If milk/cheese is expected to sell well with customers who have already purchased bread/wine according to the rules, milk/cheese can be chosen for the recommendation. Unlike the item packaging case, the cross-selling revenue depends on the sales from milk/cheese excluding bread/wine. Sales from milk with its average quantity will be greater than that of cheese regardless of the sales success rate (i.e., milk, $20.00; cheese, $5.00). The disparity between the sales amounts implies the difference of utilities between      Rules 1 and 2. If the same amount of recommendation cost is assumed in both rules, trying to sell milk will be more effective. A rule?s effectiveness is defined as ?the amount of output from the occurrence of a pattern expected by a rule.? Effectiveness can be the monetary amount of the sold products; it can also be the death rate or propagation speed in the case of disease or epidemics.

In addition to effectiveness, two more elements need to be considered in assessing a rule?s usefulness: probability and opportunity. As mentioned by Shen et al. [11], even a highly effective rule cannot give a large profit if the transaction of the rule rarely occurs.

Probability is defined as ?the proportion of the number of transactions including the consequent items to the number of transactions including both antecedent and consequent items.? Probability is similar to the concept of market chance or recommendation success rate in business. Opportunity is defined as ?the proportion of potential number of transactions including all the items in an association rule may happen.? Opportunity can be regarded as the concept of market size.

In this paper, rule mining is demonstrated with a cross-selling case to show how the proposed algorithm works in a specific business. Cross-selling is defined by the Oxford English Dictionary as ?the action or practice of selling among or between established clients, markets, traders, etc.? or ?selling an additional product or service to an existing customer.? In other words, cross-selling is an action to increase profit by selling additional products based on a customer?s purchase history. Each rule utility element is designed for profit maximization in cross-selling; they are then combined as a rule utility to be used in rule mining processes. In addition, a simulation and an experiment are used to show how the HURM algorithm works in the cross-selling case.

The rest of this paper is organized as follows.

Section 2 provides an overview of current studies on ARM. In Section 3, the HURM model is constructed, which was designed to adopt the concept of rule utility.

Experimental results for the HURM model are shown in Section 4. Finally, Section 5 offers limitations of the model and plans for future study.

2. Related work   Frequent rule mining [1], the first approach in  association rule mining (ARM) studies, introduced two frequency-based measures: support and confidence.

Support, denoted as ( ? ), means the ratio of specific transactions containing both Itemsets A and C; confidence, denoted as ( ? ) , means the strength of a rule. In terms of recommendations,  ( ? ) can be thought of as the success rate of selling C given A.

, , ? ?   ( %, %),  where s% is the support and c% is the confidence.

Since Agrawal et al. [1] introduced ARM for market basket analysis, a number of algorithms [2, 3, 6, 10, 17] have been proposed to improve performance.

These algorithms follow the apriori [2] and assume that each item?s weight is equal and that the quantity is 0 or 1. Their steps include reducing itemsets that do not reflect a frequent pattern by comparing their frequencies with a user-specified threshold denoted as minimum support.

In order to consider the difference of each item?s weight, Liu et al. [8] and Wang et al. [13] proposed algorithms that allow multiple minimum supports for various itemsets. However, these algorithms are limited in that each item?s minimum support needs to be specified by a user. In market basket analysis, it can be a great burden to determine the minimum supports for all of the items.

Tao et al. [12] indicated that traditional ARM methods cannot discover important rules with low support and heavy weight; instead, they generate less important rules with high support and light weight. To resolve this, they proposed weighted association rule mining (WARM), an approach that considers the weight of each item. Rather than allowing multiple minimum support rates, WARM does not need to convert each item?s weight into a minimum support threshold. However, WARM does not consider each item?s quantity.

Chan et al. [4] proposed high-utility itemset mining (HUIM), which predefines an objective function that a user wants to achieve and then finds useful rules that satisfy that function. By defining itemset utility in terms of price and quantity, the limitations of traditional ARM can be overcome. Yao et al. [16] applied HUIM to market basket analysis and have also proposed a method for HUIM. In order to improve the performance of mining processes, some studies [9, 15] have proposed efficient algorithms. However, itemset utility can explain only the current profit, not the profit expected in the future. Furthermore, itemset utility is calculated from all of the items, even though not all of the items have an effect on the profits.

Recently, some researchers have proposed a profit mining method [14] and introduced a profit-based business model for evaluating rule interestingness [5].

These studies use sales price, sales cost, and sales volume to calculate each rule?s profit. Since a rule?s profit can be expressed as [ ( ) ?  ( )]  ? , where Q is the sales volume, both price and quantity are used to do profit mining. In the formula, Price(P) ?      Cost(P) can be explained as the profit per unit sale.

Although this approach includes the factors that influence profit, it misses the important point that the quantity of each item differs from one itemset to others that include the item.

3. HURM model   Sections 3.1 to 3.3 describe the concepts introduced  in Section 1 in greater detail. Section 3.4 provides the comparison between existing ARM approaches and HURM.

3.1. Rule usefulness measure   Section 3.1 introduces HURM?s three elements (i.e., probability, opportunity, and effectiveness) and shows how to develop formulas with them. Then, rule utility is proposed as a new measure for an association rule that combines the three elements.

3.1.1. Opportunity and effectiveness. The widely used term itemset utility can be represented as the product of support and average transaction utility; transaction utility is calculated from the sum of the product of the weight and quantity of each item included in the itemset.

In HURM, the support of a rule, which means the number of transactions that include all the itemsets in the rule, is used as an estimate for the scale of transactions in the future. In terms of the rule?s usefulness for its purpose, it can be interpreted as the rule?s opportunity, denoted as ( ? ), which can represent the opportunity to apply the association rule in order to increase profit or to obstruct the spread of infectious diseases.

However, opportunity may differ from its support depending on the purpose of the association rule. For instance, the cross-selling opportunity of the rule, c ?  ( = 5%, = 60%) , is less than the support (5%) because the vaccine selling target is customers who have already purchased computers without vaccines: the percentage of those not purchasing computers. For this reason, a rule?s opportunity should be formalized to reflect the fact that the number of transactions that will happen can differ according to the purpose of the rule?s application.

Next, the average transaction utility can be interpreted as the average amount for the output of all transactions including the association rule. This means the rule?s effectiveness, denoted as ( ? ), when the transaction of the rule happens. As noted above, in terms of the purpose of an association rule?s application, not all the antecedent and consequent items determine its effectiveness. In the case of cross-  selling, only consequent itemsets contribute to the purpose of increasing profit. For this reason, each transaction?s effectiveness can be calculated from only the items   , influencing the amount of the output, as follows:  [ ( ) ? ( , )]  ,  where X is an itemset whose items are all included in transaction t.

A rule?s effectiveness, denoted as ( ? ), is calculated as the average transaction effectiveness and formalized as the following formula:  ( ? ) =  ? ? [ ( ) ? ( , )]  ( ? ) ,  where  is a transaction that includes all of the items in the rule ? , and  is the itemset that includes all effective items of the itemset ? .

3.1.2. Probability. Since the earliest ARM studies, confidence has been an important measure for association rules in that it can provide the probability of an association rule?s occurrences: if the transaction including all the antecedent items occurs, the transaction including all the consequent items is expected to happen with the probability of confidence.

A rule?s probability, denoted as ( ? ) , is important because it has an influence on decision- making.

Despite its importance, confidence has not been treated as seriously as support or utility in previous ARM processes. Frequent and/or high-utility itemset finding processes using support/utility have been more emphasized in that those processes greatly contribute to the improvement of ARM performance by reducing many candidate itemsets from the early stages of ARM processes. Moreover, confidence cannot be calculated from frequent and/or high-utility itemsets before antecedent and consequent itemsets are divided from the itemsets.

However, many candidate rules need to be evaluated after finding frequent/high-utility itemsets.

For instance, after finding a frequent/high-utility itemset with five items, 30 = combinations of rule generation are possible. For this reason, by including a rule?s probability into a combined rule utility measure, ARM performance can be improved. Furthermore, when antecedent and consequent itemsets? effectiveness to the association rules are different, they should be divided in the early stages of ARM to make confidence calculations easy.

Although confidence is a good mea is calculated from past transaction reflect the conditions under which the is applied. Conditions can obviously ch of the past depending upon the purpos example, confidence calculated from data of a product sold in a store may b the probability for the product w telemarketing. For this reason, the association rule should be reflected in th of a rule?s probability.

3.1.3. Rule Utility Function. Acc definition in Section 1, rule utility, den), should be measured by the expe output when the rule is applied to purpose. Mathematically, rule utility c by the product of the three elements i probability, opportunity, and effective utility function (RUF) can be defined as ( ? ) = ( ? ) ? ( ? ) ?   RUF consists of two parts: the fun  frequency, such as support and confi called the frequency part, and the fu item?s weight and quantity, which effectiveness part. Probability and converted into the functions of item while effectiveness is converted into t the items? weights and quantities.

In terms of its practical use, rule uti in that it provides a combined measur an association rule. As divided measu and itemset utility are inadequate in practical issues: marketers want to kn expected profit is acceptable as a though the probability of getting it is v versa. However, rule utility can preve providing a combined measure.

3.2. Extension and pruning strate   A rule utility should be assessed no the itemset but at the level of the rule, the extension and pruning processes a two phases (see Figure 1). In th consequents are first processed, and then handled for the given consequen consequent items first has the advant candidate itemsets in the early stage o and pruning process. This is because c alone determine effectiveness in many cross-selling.

asure, because it data, it cannot association rule  hange from those se of a rule. For  the transaction be different from when sold by purpose of an  the formalization  cording to the noted as ( ? ected amount of business for its  can be computed dentified above: eness. The rule s follows:  ? ( ? ) nction of itemset idence, which is unction of each is called the opportunity are mset frequency, the functions of  ility is important re for evaluating ures, confidence resolving some  now how much threshold even  very low, or vice ent confusion by  gy  ot at the level of so in this model are divided into he first phase, antecedents are  nts. Considering age of reducing of the extension  consequent items y cases such as  The extension and pruning (antecedents and consequents) de candidate consequent is to be exten process estimates the possible m from the extended itemset and co predetermined threshold of min denoted as MinUtil. In order to est rule utility from each itemset, should be formalized. Two types o can be induced from the rule util consequent pruning function (CP pruning function (APF).

Figure 1. Two phases of c antecedent exten   As with RUF, both CPF an  frequency and effectiveness parts derived from RUF. Each part need order to develop CPF and APF, as d  3.2.1. Extension and pruning of f repeated algorithm, antecede accomplished after consequent pru that the consequent itemset is set b undergoes pruning. In contrast, pruning is in process, its conseque determined. Therefore, frequency and ( ? )) that are related to cannot be set to fixed values. Inste to be changed into predictable maximize the rule utility. It als should have terms related only itemset. This can be done by ch related terms (e.g., ( )  and antecedent-unrelated terms. Conv the frequency and effectiveness below.

Support figures related to antec and ( ? )  ) need to be conv values or related only to conseque  g of the itemset etermines whether a nded or pruned. This  maximum rule utility ompares it with the nimum rule utility, timate the maximum a pruning function of pruning functions lity function (RUF): PF) and antecedent   consequent and nsion  nd APF consist of s because they are s to be considered in discussed below.

frequency part. In a ent pruning is uning, which means before an antecedent , when antecedent  ent itemset cannot be terms (e.g., ( )  o antecedent itemsets ad, those terms need e values that can so means that CPF  to the consequent hanging antecedent-  d ( ? )  ) into version methods for parts are explained  cedents (e.g., ( ) verted into constant ents for the pruning      process; confidence is not affected because it can be converted into the form of support.

First, antecedent support, denoted as ( ), can be converted in two ways depending on whether its direction of increase is the same as that of the rule utility. If the directions match, maximum antecedent support, denoted as [ ( )] , can provide maximum rule utility. Otherwise, minimum antecedent support, denoted as [ ( )], should be chosen.

According to the downward closure property, the following inequality is established; therefore, maximum antecedent support can be obtained from a 1-itemset and be used as a constant during consequent extension and pruning.

0 ( ? ) ( ) 1,  where X is any itemset = .

In the case of minimum antecedent support, however, a downward closure property is not established; therefore, zero or an already-scanned value can be used if there is any.

In the same way, the support of both antecedent and consequent, denoted as ( ? ) , can be converted in two ways. [ ( ? )]  can be replaced with [ ( )]  or 0 according to its direction of increase. This can be done based on the following inequality.

0 ( ? ) ( )  3.2.2. Extension and Pruning of Effectiveness Part.

The effectiveness part also needs to satisfy data for the extension and pruning process. However, a rule?s effectiveness, as shown in the following rules, does not meet that property.

?  , = (2.0 ? 2 2.0 ? 1 2.0 ? 6)/3 = 6.0 { , } ? , = (2.0 ? 6 2.0 ? 4)/2 = 10.0   Table 1. Example of mart transaction data Transaction Items in transaction tk  t1 { bread(3), milk(2)} t2 { bread(2), milk(1)} t3 { bread(4), milk(6), cheese(3)} t4 { bread(2), milk(4), cheese(2), wine(1)}   In such a case, the maximum rule effectiveness,  denoted as [ ( ? )] , can be replaced to meet the needed property. The maximum rule effectiveness can be obtained from the sum of the product of each item?s weight and maximum item quantity, denoted as [ ( , )] ; this means the  maximum quantity of each item through all transactions (e.g., bread, 4; milk, 6; cheese, 3; wine, 1. see Table 1).

[ ( ? )] =  [ ( ) ? [ ( , )]]  Maximum supports of 1-itemsets and the maximum  quantity of each item should be known from the early stages of the extension and pruning procedure. For this reason, they are stored by scanning transaction data before the procedure starts, as shown in Table 2; the total number of transactions is assumed to 100.

Table 2. Example of maximum supports of 1-  itemsets and maximum quantities of each item Item i max[sup(X)], X = {i} max[qty(i, X)], i X bread 0.04 (= 4/100) 4 milk 0.04 (= 4/100) 6  cheese 0.02 (= 2/100) 3 wine 0.01 (= 1/100) 1   3.3. HURM algorithm   shows the template algorithm for finding high-utility rules from a transaction database. The parameter MinUtil is a predetermined threshold for rule utility.

First, the high-utility rule set RH and set of pruned consequents are initialized to be empty. A set of candidate consequents CC and set of high-utility candidate consequents CH are initialized as all of the 1- itemsets (i.e., itemsets with only one item).

Then, for every consequent C in CC, or a set of candidate antecedents, AC is set to have all itemsets except C. For every antecedent A in AC, the rule ? is generated and then tested to see if it has high utility.

If the rule has high utility, it is included in RH. After every candidate antecedent A in AC is tested, A needs to be classified as extensible or not and then included into the extensible antecedent itemsets AH or set of inextensible antecedent itemsets AX.

After classification, AC is extended by generating the Cartesian product of AH by AH. Then, for a given C, a rule generated with every A in AC is checked again if it has high utility. This process is iterated until no candidate antecedent is generated by generating the Cartesian product. In order not to check inextensible candidate antecedents, every antecedent in AC is checked and pruned if it has already found inextensible itemsets that are stored in AX. The reason is that an itemset extended from inextensible itemsets can include inextensible itemsets. For example, if itemset { , }  is inextensible, itemset { , , } , which is extended from extensible itemsets { , } and { , }, is inextensible as well.

In the same way, candidate consequent itemsets are extended and pruned until no candidate consequent is generated after the extension and pruning process.

Procedure: High-Utility Rule Mining 1) I = { i1, i2, ? , in } // I: 1-itemset with all items2) // Initial Value Setting 3) for each item ik in I 4)     X = { ik } 5)     set sup(X) 6)     set max[qty(ik)] 7) next 8) CC = { { i1 }, { i2 }, ? , { in } } // Candidate Consequent set 9) CH = CC // High-utility Consequent Set Initializing 10) CX = ? // Inextensible Consequent Set 11) // Exclude Inextensible Itemsets 12) for each itemset C in CC 13)     if CP(A ? C) < MinUtil then 14)         CH = CH ? { C } 15)         CX = CX ? { C } 16)     end if 17) next 18) RH = ?  // High-utility rule set 19) do 20)     for each itemset C in CC 21)         AC = { I ? C }  // Antecedent Initializing 22)         AH = AC 23)         AX = ? 24)         do 25)             // Generate Rules 26)             for each itemset A in AC 27)                 if RU(A ? C) ? MinUtil then 28)                    RH = RH ? { A ? Cutil } 29)                 end if 30)             next 31)             // Prune Antecedent Set 32)             if AP(A ? C) < MinUtil then 33)                 AH = AH ? { A } 34)                 AX = AX ? { A } 35)             end if 36)             // Extend Candidate Antecedent Set 37)             AC = AH ? AH 38)             // Exclude Inextensible Itemsets 39)             for each itemset A in AC 40)                 if any itemset in AX ? A then 41)                     AC = AC ? { A } 42)                 end if 43)             next 44)         loop while |AC | > 0 45)     next 46)     // Prune Consequent Set 47)     if CP(A ? C) < MinUtil then 48)         CH = CH ? { C }  49)        CX = CX ? { C }50)    end if51)     // Extend Candidate Consequent Set 52)     CC = CH ? CH 53)     // Exclude Inextensible Itemsets 54)     for each itemset C in CC 55)         if any subset in CX ? C then 56)             CC = CC ? { C } 57)         end if 58)    next59) loop while |CC | > 0 Figure 2. Template algorithm   3.4. Existing approaches versus HURM   Useful rules should provide a large amount of output when they are applied to business. For this reason, ARM studies have tried to properly represent the output amount obtained from a rule. The evolution of ARM is closely related to the development of measures for output amount. Each ARM approach?s characteristics, including advantages and limitations, are illustrated in 3 as a comparison with the HURM model.

The frequency-based approach [1?3, 6, 10, 17] introduced support as a measure for a pattern?s frequency. However, support cannot explain the effect of each item?s importance, such as weight and quantity, on output amount. The weight-based approach [8, 12, 13] reflects each item?s weight in the calculation of the output amount. The itemset utility-based approach [4, 16] tried to consider each item?s quantity as well as its weight by introducing itemset utility as an integrated measure which is composed of three elements: support, weight, and quantity.

However, itemset utility still has some limitations related to its elements. First, support may not be the proper approach to predicting how many times a rule?s pattern will occur when the rule is used for a specific purpose. Second, all of the items in a rule may not contribute to the output amount. This is why the concepts of opportunity and effectiveness are proposed in the HURM model.

HURM?s characteristics can be summarized as follows. First, HURM is a purpose-driven approach.

Existing approaches do not consider the purpose of association rules; it does not matter whether the rules are intended for cross-selling or packaging items. The effectiveness of each item in a rule, however, is determined according to business purposes. A rule?s opportunity is also dependent on the rule?s purpose.

Second, HURM is predictive rather than descriptive.

While existing approaches have tried to explain the current amount of output from the repeated patterns,      HURM tries to predict whether the sa occur when the rule is applied.

Finally, HURM provides a unified utility). Existing approaches introduc measures of output amount and pr support and confidence by frequency-b or only the output amount (e.g., wei based approach, itemset utility by item approach). It may be uncertain whether with a large output or those with high p   Table 3. Characteristics of eac Approach Characteris  Frequency- based approach [1?3,6,10,17]  - Measure: support, con - Interests: frequency - Each item?s impo  considered.

Weight-based approach [8,12,13]  - Measure: weighted sup - Interests: patterns?  every item?s weight - Each item?s importa  considered.

Itemset utility- based approach [4,16]  - Measure: itemset utilit - Interests: pattern?s  every item?s weight an - Each item?s impor  considered.

- Describes but hardly  amount.

HURM - Measure: rule utility  - Interests: effective ite quantity, opportunity in applying rules  - Each item?s impor considered.

- Predicts output amoun  4. Experiments   This section describes a simulation conducted using the HURM model for market basket data. The simulation w small transaction dataset, while the conducted with a large dataset.

4.1. Cross-selling case   In this study, the HURM model w cross-selling case, one of the well-kno of ARM research. The purpose of A ?maximizing profit increase by searchin likely to be sold based on the latest tr For this purpose, three elements of r established, and RUF can be formali CPF and APF can then be set from RUF  Probability may be defined as ?th consequent items to be sold? in a cro  ame pattern will  d measure (rule ced the separate robability (e.g., based approach) ight by weight-  mset utility-based r to choose rules  probability.

h approach stics nfidence, and lift  ortance is not  pport frequency and  ance is partially  ty frequency, and  nd quantity rtance is fully  y predicts output  em?s weight and and probability  rtance is fully  nt  n and experiment cross-selling on  was done with a experiment was  was applied to a own applications  ARM was set as ng items that are ransaction data.? rule utility were ized from them.

F.

he possibility of oss-selling case.

Although probability may differ means of sale, confidence can be a substitutes exist:  ( ? ) =  Opportunity should be set base  of the cross-selling. For instance, monitors, cross-selling targets can who purchased desktop computers target size is represented by the sha Opportunity can be calculated as fo  ( ? ) = ( ) ? [1   Figure 3. Target of cr  Cross-selling is planned to incre  consequent items in each rule, effective items are all include Therefore, effectiveness can be form  ( ? ) =  ? ? [  ?  where ( ? )is the total num including the itemset ? , and pr each item , ( ), is replaced fo( ), in the original equation.

From the three elements, RUF c follows: ( ? ) =  ( ? ) ? [1 ( ? )? ? ? [  ? (   CPF can be obtained accordi  mentioned in Section 3.2. One inte in RUF for cross-selling is th confidence contributes not only to to the decrease of cross-selling pr( ? ),  enlarges profit, wh[1 ( ? )], diminishes p The profit-maximizing value of con obtained from partial differentiatio CPF can be formalized as follows:  ( ? ) = 0.25 ? [  r according to the a good estimate if no  ( ? ) ed on the target size in the case of LCD n be the customers without LCDs. The  aded area of Figure 3.

ollows: ( ? )]   ross-selling  ease profit by selling which means that  ed in consequent.

malized as follows: ( ) ? ( , )]( ? ) , mber of transactions rofit per unit sale of  or each item?s weight,  can be formalized as  )] ? ( ) ( ) ? ( , )]? ) ing to the methods  eresting phenomenon hat the increase in the increase but also rofits: the first term, hile the second term, rofit (see Figure 4).

nfidence (0.5) can be on by ( ? ).

( )]      ? [ ( ) ? ?   Figure 4. Relationship betwee and confidence in cross-s   Likely, APF, denoted as (  obtained as follows: ( ? ) =  ( ? ) ? [1 ( ? )] ? (? [ ( ) ? ? [   4.2. Simulation   A simulation was conducted on from market basket transactions. Tab transaction data, including each item every basket. Each item?s profit per un in Table 5.

The HURM processes are summar First, minimum utility, denoted as Min be 0.5, and consequents were initializ itemset, as shown in the first column o consequent?s CPF was calculated to de the consequent was to be extended or p sign (?+?) in the second column of CPF corresponding consequent is extensible  Then, 1-itemset antecedents wer consequent, as shown in the second col Rule utilities were calculated for each generated with determined antecedent itemsets. Rules with rule utilities equ than MinUtil were chosen (e.g., utility = 0.75).

Small transaction datase  baskets  ID Items in transaction Itembread egg m 1 salmon, wine 2 egg, salmon, wine  6 3 bread, salmon, wine 1 4 egg, salmon, wine  1 5 salmon, wine  [ ( , )]]   en rule utility selling ? ) , can be ( )( , )]] a small dataset  shows the m?s quantity in nit sale is shown  rized as follows.

nUtil, was set to zed for each 1-  of . Each etermine whether pruned. The plus F means that the .

e set for each lumn of .

h candidate rule and consequent  ual to or greater ? , rule et from market  m?s quantity milk salmon wine  2 1 1 1 1 1 1 1 1 1  ID Items in transaction bread e 6 bread, egg, milk 4 7 bread, egg, milk, salmon 2 8 bread, egg, milk 4 9 egg, milk, salmon 10 bread, milk 1   Table 5. Profit per unit sale  Item Profi bread egg milk  salmon wine   Table 6. Extension and prun  consequents Consequent max[Eff(A ? C)] max[  bread 6.00 0 egg 8.40 0 milk 8.00 0  salmon 10.00 0 wine 30.00 0   Table 7. Candidates for rules antecedents and 1-itemset  Consequent Antecedent Rule utili bread egg 0.75 bread milk 0.33 bread salmon 0.32 bread wine 0.12 egg bread 0.73 egg milk 0.53 egg salmon 0.87 egg wine 0.29 milk bread 0.52 milk egg 0.73 milk salmon 0.71 milk wine 0.00  salmon bread 0.60 salmon egg 0.67 salmon milk 0.60 salmon wine 0.00 wine bread 2.40 wine egg 4.00 wine milk 0.00 wine salmon 4.29  After rules with 1-itemset  selected, APF determined each an extensibility. Extensible antecede APF values higher than MinUtil, w plus sign in the second column of Given a consequent, extension an for antecedents were iterated until candidate antecedents were left.

Item?s quantity egg milk salmon wine 11 4 10 3 1 5 2  12 2 1  e of each item t per unit sale ($)  1.50 0.70 2.00 5.00  30.00  ning of 1-itemset s sup(A)] CP(A ? C)  0.70 1.05 + 0.70 1.47 + 0.70 1.40 + 0.60 1.50 + 0.70 5.25 +  s with 1-itemset t consequents ity AP(A ? C)  0.90 + 0.75 + 0.53 + 0.19 0.96 + 1.05 + 1.47 + 0.53 + 1.00 + 1.20 + 1.05 + 0.00 0.63 + 0.75 + 0.63 + 1.25 + 3.75 + 4.50 + 0.00 5.25 +  antecedents were ntecedent candidate?s ents, or those with were marked with a  f APF (see ).

nd pruning processes l no more extensible  Then, consequents      were also extended and pruned based on their CPF values. This process continued until no more extensible candidates were left. For each extended consequent, extension and pruning processes for antecedents were done again. Finally, sixteen rules were obtained after the iterative extension and pruning processes (see Table 8).

Table 8. High-utility rules generated by HURM  Rule Rule utility bread ? milk 0.52 egg ? milk 0.73 milk ? egg 0.53 salmon ? wine 4.29 bread ? egg, milk 1.45 bread, egg ? milk, salmon 0.73 bread, salmon ? egg, milk 0.65 egg ? bread, milk 1.65 egg ? milk, salmon 1.33 egg, milk ? bread, salmon 0.60 milk ? bread, egg 1.33 milk, salmon ? bread, egg 0.50 salmon ? bread, wine 2.70 salmon ? egg, wine 4.64 egg ? bread, milk, salmon 1.17 milk ? bread, egg, salmon 1.20   4.3. Experiment with large dataset   An experiment with a large dataset was performed to compare association rules generated by the HURM algorithm with those by the HUIM algorithm.

The experimental dataset was generated by the IBM Quest-Basket Synthetic Data Generator [18], which is widely used for performance tests in ARM studies. The dataset contains 677,605 transactions and 3,629 unique items. The average number of items per transaction is six. Because the dataset created by the data generator does not include each item?s weight and quantity, they were generated randomly (i.e., weight, $1.00 to $100.00; quantity, 1 to 10). The experiment was performed on an IBM-compatible PC with Intel Core 2 Duo P8600 2.40 GHz CPU and 1.98 GHz RAM.

The bars in  represent the top twenty association rules generated by the HURM algorithm.

Each rule is composed of two bars: red and blue. They are ranked by their rule utilities, which are displayed by the red bars in the rear row; their itemset utilities are denoted by the blue bars in the front row. Some differences between the two bars of a rule are noticeable (e.g., Rule 11), while some are insignificant (e.g., Rule 2). These differences stem mostly from the rules? effectiveness. Rule 2 consists primarily of effective items, while Rule 11 does not.

Some rules with low itemset utility (e.g., Rules 4 and 11) can be considered undervalued judging from their rule utilities. If rules are selected from their itemset utilities, such rules can be excluded and lose chances to be applied to business. On the other hand, if rules are overvalued, they may provide output amounts lower than expected.

Figure 5. Bar chart of top twenty  association rules ranked by rule utilities  5. Conclusion   This study was conducted to demonstrate how to discover rules that are useful when applied to a particular business. While a majority of ARM studies have focused on currently meaningful patterns, HURM tries to find rules suitable for a specific purpose. For this reason, HURM may be considered to be a novel trial. Rule utility, a new measure for the usefulness of an association rule, was newly proposed and defined.

Three elements were considered to measure rule utility: effectiveness, opportunity, and probability. These elements were described in detail to show that they are closely related with but different from the measures of former studies.

The most remarkable advantage of the HURM model is that rule utility can be defined as an RUF.

Rule utility needs to vary according to each business purpose, which can be accommodated by defining different RUFs. Three elements of rule utility can be developed as formulas in terms of business purposes; then, a desired RUF can be obtained by combining the formulas. RUFs are also used in rule mining algorithms after being converted into CPFs and APFs, which are essential pruning functions in extension and pruning algorithms.

HURM may have some limitations when developing RUFs. Incorrectly developed RUFs may yield useless rules. Without a complete understanding of business purposes, developing RUFs may seem difficult. Sometimes, in order to develop RUFs, additional information may be required. In the cross- selling case, transaction data may seem to be insufficient for developing RUFs. This is because other      factors such as cross-selling channels and item types can affect the probability. However, those factors and their influences on probability were not dealt with in this study.

On the other hand, studies for the algorithm?s performance need to be done in the future. The HURM algorithm introduced in this paper has room for performance enhancement. As is often the case with the existing approaches, enhanced algorithms may be expected to be developed in order to reduce the execution time.

An experiment with real-life data is planned for the cross-selling case in the near future. According to Kamakura et al. [7], a proper implementation of cross- selling can be achieved only if there is an information infrastructure that is designed to fit for the purpose.

The HURM model was developed for cross-selling in this study. Since an RUF was defined to fit for cross- selling, HURM should provide a qualified list of products and/or services that can satisfy marketers? needs for a marketing campaign.

6. References  [1] Agrawal, R., Imielinski, T., Swami, A.N., ?Mining association rules between sets of items in large databases?, In Proceedings of the 1993 ACM SIGMOD International Conference on Management of Data, Washington, DC, 1993, pp.207?216.

[2] Agrawal, R., and Srikant, R., ?Fast algorithms for mining association rules?, 20th VLDB Conference, 1994.

[3] Brin, S., Motwani, R., UIIman J. D., and Tsur, S., ?Dynamic itemset counting and implication rules for market basket data?, Proc. of ACM SIGMOD Conference on Management of Data, Arizona, 1997.

[4] Chan, R., Yang, Q., and Shen, Y. D., ?Mining high utility itemsets?, In Proceedings of the 2003 IEEE International Conference on Data Mining, Melbourne, FL, November 2003, pp.19?26.

[5] Chen, Y., Zhao, Y., and Yao, Y., ?A profit-based business model for evaluating rule interestingness?, Canadian AI 2007, LNAI 4509, 2007, pp.296?307.

[6] Han, J., Pei, J., and Yin, Y., ?Mining frequent patterns without candidate generation?, Proc. of SIGMOD, 2000.

[7] Kamakura, Wagner A, Michel Wedel, Fernando de Rosa, and Jose A. Mazzon., ?Cross-selling through database marketing: a mixed data factor analyzer for data augmentation and prediction,? International Journal of Research in Marketing 20, 2003, pp.45?65.

[8] Liu, B., Hsu, W., and Ma, Y., ?Mining association rules with multiple minimum supports?, Proc. of 1999 Int. Conf.

on Knowledge Discovery and Data Mining, 1999.

[9] Liu, Y., Liao, W.K., and Choudhary, A., ?A two-phase algorithm for fast discovery of high utility itemsets?, In Proc.

of the Pacific-Asia Conference on Knowledge Discovery and Data Mining (PAKDD), 2005.

[10] Park, J. S., Chen, M., and Yu, P.S., ?An effective hash based algorithm for mining association rules?, Proc. of ACM SIGMOD Conference, New York, 1995.

[11] Shen, Y., Z. Zhang, and Q. Yang., ?Objective-oriented utility-based association mining?, Proceedings of the 2002 426-433.

[12] Tao, F., Murtagh, F., and Farid, M., ?Weighted association rule mining using weighted support and on Knowledge Discovery and Data mining, 2003.

[13] Wang, K., He, Y., and Han, J., ?Pushing support constraints into frequent itemset mining?, In Proceeding of Sept 2000, pp.43-52.

[14] Wang, K., Zhou, S.Q., and Han, J.W., ?Profit mining: from patterns to actions?, Advances in Database Technology- -EDBT 2002, 2002, pp. 31-44.

[15] Yao, H., and Hamilton, H.J., ?Mining itemset utilities from transaction databases?, Data & Knowledge Engineering Volume 59, Issue 3, Including: ER 2003 - Selection of papers Conceptual Modeling, December 2006, pp. 603-626.

[16] Yao, H., Hamilton, H.J. and Butz, C. J., ?A foundational approach to mining itemset utilities from databases?, Proc. of Florida, USA, 2004, pp.482-486.

[17] Zaki, M. J., Parthasarathy, S., Ogihara, M., and Li, W., ?New algorithms for fast discovery of association rules?, Proc. of 3rd Conference on Knowledge Discovery and Data mining, California, 1997.

