Vertical/Horizontal Resource Scaling Mechanism  for Federated Clouds

Abstract?recently, big data computing in cloud systems is an important issue. Cloud computing tries to satisfy users? demands and provide services by sharing hardware and software resources.

Therefore, using the virtualization technology to enhance system performance is an important goal. In practical, single cloud cannot provide unlimited services with limited physical resources.

Therefore, this study proposes a vertical/horizontal resource scaling mechanism for federated clouds. When single virtual machine is unable to satisfy user requests, the proposed mechanism will allocate new resources in the federated clouds by vertical/horizontal scaling fashions. In general, horizontal scaling obtains more computing power by adding more virtual machines, and vertical scaling obtains more computing power by adding resources in the virtual machine. The vertical-scaling system not only enhances the system performance but also increases physics machine utilization. But the vertical-scaling system incurs the communication latency problem. Therefore, this study focuses on the vertical /horizontal scaling approach for reducing the minimum turnaround time and for improving the cost efficiency. Our study assessments the cloud computing capability by using cost efficiency (throughput/price per minute). Performance for NAS Parallel Benchmarks (for example, Parallel (EP), Conjugate Gradient (CG), Integer Sort (IS)) is evaluated. Experimental results show that our approach cloud reduce communication overhead and improve the resource utilization and throughput.

Keywords ? federated cloud, vertical scaling, horizontal scaling

I.  INTRODUCTION In recent years, cloud computing is a significant IT  development. Cloud computing could support convenience and efficient computing power. However, single cloud cannot provide unlimited services with limited physical resources in the datacenter. Therefore, obtaining unlimited resources from federated clouds is an important issue in dynamic provisioning.

Services in cloud computing could be classified into IaaS (infrastructure as a service), PaaS (platform as a service) and, SaaS (software as a service). Virtualization technology is the most important technology for cloud computing. Virtualization technology establishes the abstract layer above physical machines. By using virtualization technology, the cloud system integrates physics machines into the virtual resource pool.

In general, the resource scaling approach includes vertical scaling and horizontal scaling. Horizontal scaling obtains more computing power by adding more virtual machines, and vertical scaling obtains more computing power by adding resources in the virtual machine. When the load of requested services varies, the general resource auto-scaling  mechanism usually varies the required resources by increasing or decreasing the number of virtual machines (horizontal elasticity). However, in some cases, the vertical scaling approach by varying the resources in the virtual machine is necessary for reducing the communication overhead. By the way, when the load of services changes, the allocated virtual machines maybe need to be repacked for better performance.

Therefore, this study proposes a vertical/horizontal scaling mechanism for different resource scaling situations.

The proposed approach could improve the resource utilization and reduce communication overhead. Our approach includes two phases. The first phase analyzes the execution pattern of applications and the cost/efficiency of resources in the federated clouds. In the second phase, the proposed approach allocates resources according the cost/efficiency and the execution pattern of applications for improving system performance.

This paper is organized as follows. Section II discusses related work and motivation. Section III presents the proposed methodology. Section IV presents experimental results. Section V analyzes the results and evaluates the efficacy of this study.

The final section gives the conclusions and future works.



II. BACKGROUND AND MOTIVATION This section introduces the federated cloud [11] and  Rightscale. Cloud computing adopts the pay-as-you-go model by using virtualization technology. Virtualization technology [7] generates the abstract layer above cloud OS framework.

Therefore, users can use cloud services in any place.

Our work refers to Taiwan UniCloud [17] which consists of SSCloud (virtual machine leasing service), SSBOX (personal cloud storage), SSDB (SQL to NoSQL database service), and SSBDS (Big data service). The objective of UniCloud is to provide a cloud platform for education and research purposes among academic communities. Our approach focuses on resource vertical/horizontal scaling [16], so this study adopts horizontal elasticity scaling and vertical elasticity [9][12] scaling. When the load varies, the horizontal scaling approach scales up virtual clusters to improve performance and the vertical scaling one scales up the virtual machine type to improve performance. Therefore, our study makes decision according the communication behavior [14] [13].

Rightscale [5][6] is a multi-cloud management platform.

Rightscale could create virtual machines, migrate virtual     machines (in the same public domain), and resource auto scaling. Rightscale is powerful for management multi-cloud, but it cannot support the virtual cluster cross different clouds.

Our approach could create the virtual cluster cross different clouds. Although Rightscale and AWS could provide elasticity scaling, Rightscale and AWS don?t consider communication issues.



III. SYSTEM ARCHITECTURE Figure 1 shows our system architecture [10]. Our system  adopts the GRE tunnel to form the federated cloud.

Figure1. System architecture   The underlying architecture consists of different  independent clouds. Users can create the virtual cluster from different clouds in the federated system. The virtual clusters are built over different clouds in the federated cloud.

This architecture consists of the private cloud in NTHU (3 machines) and the one in NTCU (3 machines) based by using OpenStack. The OS is ubuntu 13.04, the hypervisor is KVM 3.5.0-23. The cloud OS is OpenStack (Grizzly). The hardware list is shown in Table 1. The machines in NTHU are Intel X5670 2.93GHz (24 cores) CPU with 24G RAM. The two machines in NTCU are Intel E5520 2.27GHz (16 cores) with 18G RAM.



IV. Methodology and result Before introducing the proposed mechanism, the function of finding the minimum cost is defined first. The proposed approach chooses the minimum cost (throughput/price) [15] from vertical and horizontal configuration, and the minimum passing by the user's SLA. The first step is to find the optimal configuration in terms of the number of VMs for horizontal/vertical scaling for applications with desired SLAs and with the minimum cost.

Minimize Cost  (1)  (2)   Where pi and ti are the price and the throughput of VM  type i respectively; n is the number of VM types; Treq is the throughput required to provide the desired performance, and ni is the number allocated instances of VM type i.

We will profile the communication pattern of applications first. Deciding the configuration of virtual machines depends on the following conditions:   1. Configure VMs in single cloud (Vertical).

2. When one cloud cannot satisfy the requirement of  applications, VMs are created in the same cloud as much as possible. If one cloud could not satisfy the resource requirement, we will create remaining VMs in other clouds (Horizontal).

3. When the resource in the federated cloud cannot satisfy the requirement of this application, then skip this application, select next application.

Table 1. Hardware specification of the experimental environment  Hardware  Information Software Version  Site CPU(processors) RAM OS Hypervisor OpenStack  NTHU Controller Compute1 Compute2  Intel X5670 2.93GHz * 24 Intel X5670 2.93GHz * 24 Intel X5670 2.93GHz * 24  24GB 24GB 24GB  Ubuntu 13.04 Ubuntu 13.04 Ubuntu 13.04  KVM 3.5.0-23 KVM 3.5.0-23 KVM 3.5.0-23  Grizzly Grizzly Grizzly  NTCU Controller Compute1 Compute2  Intel E5520 2.27GHz * 16 Intel E5520 2.27GHz * 16 Intel E5520 2.27GHz * 16  18GB 18GB 18GB  Ubuntu 13.04 Ubuntu 13.04 Ubuntu 13.04  KVM 3.5.0-23 KVM 3.5.0-23 KVM 3.5.0-23  Grizzly Grizzly Grizzly       Algo1. Horizontal vs. Vertical Filter_ Schedu Input C: Cloud of number Request: application request of resource T: application request turnaround time (SLA) Resource: cloud resource of free Loading: PM Utilization  When job come to portal Getting VC RCPU & RRAM & T (SLA) requ Profiling application and obtain communicati  Updating every cloud resource (CPU & RA If application communication weight ? 10% If the Ci resource of free ? request  If the biggest VM type ? reques Choosing the minimum cos Creating VM type (Single c Creating VC (Single cloud) Creating VC (Federal Clou  Else Choosing the minimum cos Creating VC (Single cloud) Creating VC (Federal Clou  Else Creating VC (Federal Cloud)  Else Creating VC (Federal Cloud)   Goal minimum cost    The proposed algorithm conside  conditions, where C is the number of turnaround time of requests with SLA; Requ requirement of applications; the goal of th obtain the minimum cost.

Table 2 shows the virtual machine type the VM prices in Amazon Elastic Compute EC2). Our approach considers five virtua (tiny, small, medium, large and xlarge). Bec in our system is heterogeneous, the price lower than the original one.

uling  )  uest ion weight AM & Loading )  %  t st cloud) )  ud)  st )  ud)  ers three above clouds; T is the  uest is the resource his algorithm is to  es, which refers to e Cloud (Amazon  al machines types cause the hardware may be higher or    Figure2. Turnaround  Figure3. Turnaround  Figure4. Turnarou  In this study, we adopts  small, medium, large, and xlarg  Table 2. Price of virtu  Type Site  Tiny Small  NTHU $2.93 $5.85 NTCU $2.27 $4.50   d time of CG (Class C)     d time of EP (Class C)     und time of IS (Class C)  OpenStack to provide the tiny, ge VMs for virtual clusters; and   ual machine per second    Medium Large Xlarge  $11.50 $23.00 $45.00 $9.00 $18.00 $35.00    NAS Parallel Benchmarks, including Embarrassingly Parallel in the cloud?, Future Generation Computer Systems,Vol 29, Issue 1, (EP), the Conjugate Gradient (CG) and the Integer Sort (IS), January 2013, pp. 218?229 are evaluated. Experimental results are shown in Figure 2, [3] Paul Marshall, Henry Tufo, Kate Keahey, ?Provisioning Policies for Elastic Computing Environments,?, IEEE International Parallel and Figure 3 and, Figure 4. In Figure 2, the turnaround time of the Distributed Processing Symposium Workshops, 2012,  pp.1085-1094? CG increases when the scale of clusters becomes larger. The [4]  D Bailey, E Barszcz, J Barton, D Browning, R Carter, L Dagum, R main reason is that IS has the irregular communication pattern, Fatoohi, S Fineberg, P Frederickson, T Lasinski, R Schreiber, H Simon, when the scale of clusters becomes larger, the benefit with V Venkatakrishnan and S Weeratunga , ?The NAS Parallel  Benchmarks? , RNR -94-007, 1994 March  more resources may be overcame by the communication ? [5] RightScale Cloud Management, RightScale, Inc. [Online]. Available: overhead. Therefore, it would be better to adopt the vertical http://www.rightscale.com/  scaling approach to improve performance. [6] RightScale Load Balance in the Cloud : Tools , Tips and Techniques, In Figure 3, because EP almost has no communication Inc. [Online]. Available: http://www.rightscale.com/  cost, our approach could enlarge VMs as much as possible, by [7] Ron C. Chiang and H. Howie Huang, ?TRACON Interference-Aware using vertical scaling. Therefore, the proposed algorithm omits Scheduling for Data-Intensive Applications in Virtualized the influence of communication, and only focuses on the Environments?, New York: ACM, 2011.

configuration with the minimal cost. [8] Lee R. ?Load-Balancing Tactics in Cloud?, Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), 2011 International In Figure 4, the communication in IS is stable, so the Conference on ,pp. 447 ? 454 proposed approach tries to enlarge the VM by vertical scaling [9] Xiaocheng Liu ; Inf. & Manage. Sch., Nat. Univ.ofDefense Technol., for avoiding communication overhead. ?Priority-Based Consolidation ofParallel Workloads in the Cloud? ,  shorter than that by using horizontal scaling. 9,September 2013  [10] Moreno-Vozmediano, R. , ?IaaS Cloud Architecture: From Virtualized V. C  Datacenters to Federated Cloud Infrastructures?,IEEEComputer  , Vol45 ONCLUSIONS AND FUTURE WORKS ,  Issue12, Dec. 2012 , pp. 65 ? 72.

Cloud computing could provide services to satisfy user?s [11] RajkumarBuyya, Rajiv Ranjan, and Rodrigo N. Calheiros, ?InterCloud: demand. When user?s demand increases, the cloud provider has Utility-Oriented Federation of Cloud Computing Environments for to get more and more resources to avoid SLAs. However, Scaling of Application Services ? , presented at the Proceedings of the  this study proposes a vertical/horizontal resource scaling [12] Rodrigo N. Calheiros, Adel NadjaranToosi, Christian Vecchiola, and mechanism to allocate resources in the federated cloud. RajkumarBuyya, ?A Coordinator for Scaling Elastic Applications Experimental results show that resource horizontal and vertical Across Multiple Clouds?,FutureGeneration Computer Systems, Vol. 28, scaling can improve the system throughput. No. 8, 2012, pp. 1350-1362.

In the future, our study will exploit the performance impacts [13] Jose Luis Lucas-Simarro, ?Scheduling strategies for optimal service deployment across multiple clouds? ,FutureGeneration Computer by analyzing the application behavior. In the meantime, we Systems, Vol 29, Issue 6, August 2013, pp. 1431?1441 will evaluate more and more benchmarks to identify the [14] Zaman,S., ?Combinatorial Auction-Based Dynamic VM Provisioning distinction between the horizontal and vertical scaling. and Allocation in Clouds? , Cloud Computing Technology and Science  A  Nov. 29 2011-Dec. 1 2011, pp. 107 ? 114 CKNOWLEDGMENT  [15] Beloglazov, A, ?Combinatorial Auction-Based Dynamic VM This study was sponsored by the National Science Council, Provisioning and Allocation in Clouds?, Parallel and Distributed 101-2221-E-142-001- and NSC 102-2221-E-142 -002, and 2013, pp.1366 - 1379 Delta Electronics Inc. under contract number: 101F2289A8.  [16] Mina S, ?A virtual machine re-packing approach to the horizontal vs.

vertical elasticity trade-off for cloud autoscaling?, CAC '13 Proceedings  R  of the 2013 ACM Cloud and Autonomic Computing , Article No. 6 , EFERENCES New York, NY, USA , 2013 [1] Michael, K.  and Miller, K.W., ? Big Data: New Opportunities and New [17] Wu-Chun Chung, Po-Chi Shih, Kuan-Chou Lai, Kuan-Ching Li, Che-  Challenges?, Computer  Vol:46 ,  Issue: 6 , June 2013, pp.22 ? 24 Rung Lee, Jerry Chou, Ching-Hsien Hsu, and Yeh-Ching Chung, [2]  Roberto R. Exp?sito , Guillermo L. Taboada , Sabela Ramos , Juan ?Taiwan UniCloud: A Cloud Testbed with Collaborative Cloud  2014, Boston, USA.

