Concise Representations for Approximate Association Rules

Abstract?The quality of association rule mining has drawn more and more attention recently. One problem with the quality of the discovered association rules is the huge size of the extracted rule set. Often for a dataset, a huge number of rules can be extracted, but many of them can be redundant to other rules and thus useless in practice. Mining non-redundant rules is a promising approach to solve this problem. In this paper, we firstly propose a definition for redundancy; then we propose a concise representation called Reliable basis for representing non- redundant association rules for both exact rules and approximate rules. We prove that the redundancy elimination based on the Reliable basis does not reduce the belief to the extracted rules.

We also prove that all association rules can be deduced from the Reliable basis. Therefore the Reliable basis is a lossless representation of association rules. Experimental results show that the Reliable basis significantly reduces the number of extracted rules.

Index Terms?Association rule mining, redundant association rules, closed itemsets, generator, certainty factor.



I. INTRODUCTION  One big problem in association mining is the huge amount of the extracted rules which severely hinders the effective use of the discovered knowledge. Moreover, many of the extracted rules produce no value to the user or can be replaced by other rules thus considered redundant. Many efforts have been made on reducing the size of the extracted rule set. The approaches can be roughly divided to two categories, subjective approach and objective approach. In the subjective approach category, one technique is to define various interestingness measures and only the rules which are considered interesting based on the interesting measurements are generated[2], [3]. Another technique in this category is to apply constraints or templates to generate only those rules that satisfy the constraints or tem- plates [1], [8], [10], [14]. In the objective approach category, the main technique is to construct concise representative bases of association rules without using user-dependent constraints.

A concise representative basis contains much smaller num- ber of rules and is considered lossless since all association rules can be derived from the basis. A number of concise representations of frequent patterns have been proposed, one of them, namely the closed itemsets, is of particular interest as they can be applied for generating non-redundant rules [9], [11], [17]. The notion of closed frequent itemset has its origins in the mathematical theory of Formal Concept  Analysis (FCA) introduced in the early 80s?[5], [15]. FCA has over the years grown to a powerful theory for data analysis, information retrieval, and knowledge discovery. The use of frequent closed itemsets presents a clear promise to reduce the number of extracted rules and also provides a concise representation of association rules [12], [18]. Even though the number of generated rules can be reduced drastically by only using frequent closed itemsets, however, a considerable amount of redundancy still remains. Our work will be in this category to construct concise representatives of association rules based on closed itemsets for effective redundancy reduction.

The redundancy elimination should consider three aspects: removing as much redundancy as possible; ensuring that the extracted rules retain the same inference capacity; and being able to deduce all associations. In this paper, we propose a concise representation basis of association rules, called Reliable basis. We adopt a similar definition of non-redundant association rules that have minimal antecedents and maximal consequents as defined by Pasquier et al. [12]. However, our definition relaxes or reduces the requirements to redun- dancy and thus much more redundant rules can be eliminated compared to Pasquier?s approach. Most importantly, in this paper, we show that the redundancy elimination based on the proposed Reliable basis will not reduce the inference capacity of the extracted non-redundant rules. The certainty factor (CF) is an important and popular used measure of belief to inference rules [13]. We prove that the redundant rules eliminated by our approach have less or equal CF belief values than that of their corresponding non-redundant rules which are extracted, and thus the elimination of such rules will not reduce the belief to the extracted rules. Moreover, we prove that the reliable basis is a lossless representation of association rules since all association rules can be deduced from the reliable basis.

The paper is organized as follows. The basic concepts of association rule mining are given in Section 2. In Section 3, we firstly propose a definition to redundancy and then discuss the elimination of the redundancy. Section 4 firstly introduces the proposed reliable association rule basis for extracting non-redundant rules, then presents a method to derive all association rules from the reliable basis. Experimental results are given in Section 5. Section 6 briefly discusses some related work. Finally, Section 7 concludes the paper.

TABLE I ASSOCIATION RULES (MUSHROOM DATASET, MINSUPP=0.8,  MINCONF=0.8)  Rules (supp, conf) 1 gill-attachment-f ? veil-type-p (0.97415,1.0) 2 veil-color-w ? veil-type-p (0.97538 ,1.0) 3 gill-attachment-f,veil-color-w ? veil-type-p (0.97317,1.0) 4 gill-attachment-f,ring-number-o ? veil-type-p (0.89808,1.0) 5 gill-spacing-c,veil-color-w ? veil-type-p (0.81487,1.0) 6 gill-attachment-f,gill-spacing-c ? veil-type-p,veil-color-w (0.81265,1.0) 7 gill-attachment-f,gill-spacing-c? veil-type-p (0.81265,1.0) 8 gill-attachment-f,gill-spacing-c,veil-type-p ? veil-color-w (0.81265 ,1.0) 9 gill-attachment-f ? veil-type-p,veil-color-w ( 0.97317,0.99899 ) 10 gill-attachment-f ? veil-type-p,ring-number-o (0.89808,0.92191) 11 veil-color-w ? gill-spacing-c,veil-type-p (0.81487,0.83544) 12 veil-color-w ? gill-attachment-f,gill-spacing-c,veil-type-p (0.81265,0.83317) 13 gill-attachment-f,veil-color-w ? gill-spacing-c,veil-type-p (0.81265,0.83506) 14 gill-attachment-f,veil-color-w ? veil-type-p,ring-number-o (0.8971,0.92183) 15 gill-attachment-f,ring-number-o ? veil-type-p,veil-color-w (0.8971,0.9989) 16 gill-spacing-c,veil-color-w ? gill-attachment-f,veil-type-p (0.81265,0.99728) 17 gill-attachment-f ? veil-color-w (0.97317,0.99899) 18 gill-attachment-f ? ring-number-o (0.89808,0.92191) 19 gill-attachment-f,veil-color-w ? gill-spacing-c (0.81265,0.83506) 20 gill-attachment-f,ring-number-o ? veil-color-w (0.8971,0.9989)

II. PROBLEM DEFINITION  Let I = {I1, I2, . . . , Im} be a set of m distinct items, t be a transaction that contains a set of items such that t ? I , T be a database containing different identifiable transactions. An association rule is an implication in the form of X ? Y , where X,Y ? I are sets of items called itemsets, and X  ? Y = ?. Association rule mining is to find out  association rules that satisfy the predefined minimum support (denoted as minsupp)and confidence (denoted as mincof) from a given database. The problem is usually decomposed into two subproblems: to find frequent itemsets and to generate association rules from those frequent itemsets. For the popular used Mushroom dataset (http://kdd.ics.uci.edu/), with minimal support 0.8 and minimal confidence 0.8, we can generate 88 association rules. Table I displays 20 of the 88 association rules.

The definition of closed itemsets comes from the closure operation of the Galois connection [5]. Let I denote the set of items and T denote the set of transactions, 2I and 2T are the power set of I and T , respectively. ?i ? I and ?t ? T , if item i appears in transaction t, then i and t has a binary relation ? denoted as i?t. The Galois connection of the binary relation is defined by the following mappings where X ? I , Y ? T :  ? : 2I ? 2T , ?(X) = {t ? T |?i ? X, i?t} (1) ? : 2T ? 2I , ?(Y ) = {i ? I|?t ? Y, i?t} (2)  ?(X) is called the transaction mapping of X . ?(Y ) is called the item mapping of Y . ? ? ?(X), called the closure of X , gives the common items among the transactions each of which contains X .

Definition 1: (Frequent Closed Itemsets) Let X be a subset of I . X is a frequent closed itemset iff ? ? ?(X) = X and X is a frequent itemset.

Definition 2: (Generators) An itemset g ? 2I is a generator of a closed itemset c ? 2I iff c = ? ? ?(g) and g ? ? ? ?(g).

g is said a minimal generator of the closed itemset set c if ?g? ? g such that ? ? ?(g?) = c.

TABLE II CLOSED ITEMSETS AND MINIMAL GENERATORS (MUSHROOM DATASET,  MINSUPP=0.8)  Closed itemsets Minimal Generators Support { veil-type-p } 1.0 {gill-attachment-f,veil-type-p} {gill-attachment-f} 0.97415 {gill-spacing-c,veil-type-p} {gill-spacing-c} 0.8385 {veil-type-p,veil-color-w} {veil-color-w} 0.97538 {veil-type-p,ring-number-o} {ring-number-o} 0.9217 {gill-attachment-f, {gill-attachment-f, veil-type-p,veil-color-w} veil-color-w} 0.97317 {gill-attachment-f,veil-type-p, {gill-attachment-f, ring-number-o} ring-number-o} 0.8981 {gill-spacing-c,veil-type-p, {gill-spacing-c, veil-color-w} veil-color-w} 0.81487 {gill-attachment-f,gill-spacing-c, {gill-attachment-f, veil-type-p,veil-color-w} gill-spacing-c} 0.81265 {gill-attachment-f,veil-type-p, {veil-color-w, veil-color-w,ring-number-o} ring-number-o} 0.8971  Definition 3: (Supports) The support of an itemset X , denoted as supp(X), is the percentage of transactions which contain X , i.e., supp(X) = |?(X)|/|T |.

For the Mushroom dataset, the closed itemsets and their minimal generators (minsupp=0.8) are given in Table II. From Definition 2, we can get that g ? c is true for any generator g and its closed itemset c.



III. REDUNDANCY IN ASSOCIATION RULES  A challenge to association mining is the huge amount of the extracted rules. Recent studies have shown that using closed itemsets and generators to extract association rules can greatly reduce the number of extracted rules [12], [17].

However, considerable amount of redundancy still exists in the extracted association rules based on closed itemsets. Therefore, techniques are needed to remove the redundancy for generating high quality association rules. An important issue related to redundancy elimination is the definition of redundancy. The scope of the redundancy must be carefully and fairly defined so that the reduction won?t cause information loss or reduce the belief to the resulting rules. Any information loss or belief degradation will cause the quality deterioration of the extracted rules, which makes the redundancy reduction not worthwhile.

In this section, we start with some examples to show the existence of redundancy in extracted rules, following that we give a definition of redundant rules to be removed, and then we prove that the elimination of the defined redundancy won?t reduce the belief to the extracted non-redundant rules. In Section 4, we describe a concise representation of the defined non-redundant association rules, from which all association rules can be derived.

A. Redundancy Definition  The rules in Table I are considered useful based on the predefined minimum support and confidence. However, some of the rules actually do not contribute new information. The consequent concluded by some rules can be obtained from some other rules without requiring more conditions but with higher or the same confidences. For example, in order to be fired the rules 5, 8, 13, and 20 in Table I require more     conditions than that of rules 2, 6, 11, and 9, respectively, but conclude the same or less results which can be produced by rules 2, 6, 11, and 9. That means, without rules 5, 8, 13, and 20, we still can achieve the same result using other rules.

Therefore, rules 5, 8, 13, and 20 are considered redundant to rules 2, 6, 11, and 9, respectively. Comparing to rules 2, 6, 11, and 9, the redundant rules 5, 8, 13, and 20 have a longer or the same antecedent and a shorter or the same consequent, respectively, and the confidence of the redundant rules is not larger than that of their corresponding non-redundant rules.

The following definition defines such kind of redundant rules.

Definition 4: (Redundant rules) Let X ? Y and X ? ? Y ? be two association rules with confidence cf and cf ?, respec- tively. X ? Y is said a redundant rule to X ? ? Y ? if X ? ? X , Y ? Y ?, and cf ? cf ?.

Based on Definition 4, for an association rule X ? Y , if there does not exist any other rule X ? ? Y ? such that the confidence of X ? ? Y ? is the same as or larger than the confidence of X ? Y , X ? ? X or Y ? Y ?, then X ? Y is non-redundant.

In terms of the size of antecedent and consequent, Definition 4 is similar to Pasquier?s definition of min-max association rules [12]. However, Pasquier?s definition requires that a redundant rule and its conrresponding non-redundant rule must have identical confidence and identical support, while Definition 4 here only requires that the confidence of the redundant rule is not larger than that of its corresponding non-redundant rule.

In the following subsection, we prove that the requirement relaxation to redundancy will not reduce the belief to the extracted non-redundant rules.

B. Reliable Redundancy Elimination The certainty factor theory were first introduced in MYCIN  [13] to express how accurate and truthful a rule is and how reliable the antecedent of the rule is. The certainty factor theory is based on two functions: measure of belief MB(X,Y ) and measure of disbelief MD(X,Y ) for a rule X ? Y , as given below.

MB(X, Y ) =  { 1 P (Y ) = 1 0 P (Y/X) ? P (Y ) P (Y/X)?P (Y )  1?P (Y ) otherwise (3)  MD(X, Y ) =  { 1 P (Y ) = 0 0 P (Y/X) ? P (Y ) P (Y )?P (Y/X)  P (Y ) otherwise (4)  where, in the context of association rules, P (Y/X) and P (Y ) are the confidence of the rule and the support of the conse- quent, respectively. The values of MB(X,Y ) and MD(X,Y ) range between 0 and 1 measuring the strength of belief or disbelief in consequent Y given antecedent X . MB(X,Y ) weighs how much the antecedent X increases the possibility of Y occurring. If the antecedent completely support the consequent, then P (Y/X) will equal to 1 thus MB(X,Y ) will be 1. MD(X,Y )=1 indicates that the antecedent completely denies the consequent thus the disbelief in the rule reaches its highest value. The total strength of belief or disbelief in the association captured by the rule is measured by the certainty factor which is defined as follows:  CF (X, Y ) = MB(X, Y ) ? MD(X, Y ) (5)  The value of a certainty factor is between 1 and - 1. Negative values represent cases where the antecedent is against the consequent; positive values represent that the antecedent supports the consequent; while CF=0 means that the antecedent does not influence the belief to Y . Obviously, association rules with high CF values are more useful since they represent strong positive associations between antecedents and consequents. Indeed, the aim of association rule mining is to discover strong positive associations from large amount of data. Therefore, we propose that the certainty factors can be used to measure the strength of discovered association rules.

Theorem 1 below states that the CF value of a redundant rule defined by Definition 4 will never be larger than the CF value of its corresponding non-redundant rules. It means that, the association between the antecedent and consequent of the non-redundant rule is stronger than that of the redundant rule.

Theorem 1: Let X ? Y and X ? ? Y ? be two associ- ation rules. If Y ? ? Y , and P (Y/X) ? P (Y ?/X ?), then CF (X,Y ) ? CF (X ?, Y ?).

Proof: From Equation (5) we have CF (X, Y ) - CF (X ?, Y ?) = MB(X, Y )-MB(X ?, Y ?)+MD(X ?, Y ?)-MD(X, Y )  1) Assuming that P (Y ?/X ?) ? P (Y ?). From condition Y ? ? Y , we have P (Y ) ? P (Y ?). Because P (Y/X) ? P (Y ?/X ?), so we have P (Y/X) ? P (Y ). In this case, MD(X ?, Y ?)- MD(X, Y ) = 0. To prove the theorem, we need to prove that MB(X, Y ) - MB(X ?, Y ?) ? 0. From Equation (3), we have: MB(X, Y ) - MB(X ?, Y ?) = P (Y/X)?P (Y )  1?P (Y ) ? P (Y ?/X?)?P (Y ?) 1?P (Y ?)  = (P (Y/X)?P (Y ))(1?P (Y ?))?(P (Y ?/X?)?P (Y ?))(1?P (Y ))  (1?P (Y ))(1?P (Y ?)) = P (Y/X)?P (Y  ?/X?)+P (Y ?/X?)P (Y )?P (Y/X)P (Y ?)?P (Y )+P (Y ?) (1?P (Y ))(1?P (Y ?))  Let ? = P (Y/X) ? P (Y ?/X ?), the above expression becomes: = ?+P (Y  ?/X?)P (Y )?(?+P (Y ?/X?))P (Y ?)?P (Y )+P (Y ?) (1?P (Y ))(1?P (Y ?))  = ?+P (Y ?/X?)P (Y )??P (Y ?)?P (Y ?/X?)P (Y ?)?P (Y )+P (Y ?)  (1?P (Y ))(1?P (Y ?)) = ?(1?P (Y  ?))+P (Y ?/X?)(P (Y )?P (Y ?))?P (Y )+P (Y ?) (1?P (Y ))(1?P (Y ?))  = ?(1?P (Y ?))+(P (Y ?)?P (Y ))(1?P (Y ?/X?))  (1?P (Y ))(1?P (Y ?))  Because P (Y ) ? P (Y ?) and P (Y/X) ? P (Y ?/X ?) which makes ? ? 0, we prove that the above expression ? 0. Hence, MB(X, Y ) - MB(X ?, Y ?) ? 0  2) Assuming that P (Y ?/X ?) ? P (Y ?). In this situation, we have two cases.

(i) P (Y/X) ? P (Y ) In this case, MB(X, Y )-MB(X ?, Y ?) = 0. To prove the theorem, we need to prove that MD(X ?, Y ?)-MD(X, Y ) ? 0.

From Equation (4), we have MD(X ?, Y ?)-MD(X, Y ) = P (Y  ?)?P (Y ?/X?) P (Y ?) ? P (Y )?P (Y/X)P (Y )  After expanding the above expression and eliminating identical dual terms, we have MD(X ?, Y ?)-MD(X, Y ) = P (Y/X)P (Y  ?)?P (Y ?/X?)P (Y ) P (Y )P (Y ?) .

? P (Y/X)P (Y ?)?P (Y/X)P (Y ) P (Y )P (Y ?) .

Again, since P (Y ) ? P (Y ?), we get MD(X ?, Y ?)-MD(X, Y ) ? 0.

(ii) P (Y/X) ? P (Y ) In this case, MD(X, Y )=0 and MB(X ?, Y ?) = 0. To prove the theorem, we need to prove that MD(X ?, Y ?)+MB(X, Y ) ? 0. Because P (Y ?/X ?) ? P (Y ?) and P (Y/X) ? P (Y ), from the equations (3) and (4), it is     true that MD(X ?, Y ?)+MB(X, Y ) ? 0  Combining the results of the above cases, we have CF (X, Y ) - CF (X ?, Y ?) ? 0, hence CF (X, Y ) ? CF (X ?, Y ?)  According to Theorem 1, the CF value of a redundant rule defined by Definition 4 is never higher than that of its corresponding non-redundant rule and thus the elimination of such redundant rules is reliable since it won?t reduce the belief to the extracted non-redundant rules.



IV. CONCISE BASES REPRESENTING NON-REDUNDANT ASSOCIATION RULES  Developing concise and lossless representations is a promis- ing way to improve the quality of the discovered associations.

Some work has been done in this area [6], [9], [12], [18].

Pasquier et al. [12] proposed two condensed bases to represent non-redundant association rules, which are defined as follows:  Definition 5: (Min-max Approximate Basis) Let C be the set of frequent closed itemsets and G be the set of minimal generators of the frequent closed itemsets in C. The min-max approximate basis is:  MinMaxApprox = {g ? (c\g)|c ? C, g ? G, ? ? ?(g) ? c} Definition 6: (Min-max Exact Basis) Let C be the set of  frequent closed itemsets. For each frequent closed itemset c, let Gc be the set of minimal generators of c. The min-max exact basis is:  MinMaxExact = {g ? (c\g)|c ? C, g ? Gc, g 	= c} Rules with confidence less than 1 are called Approximate  rules and rules with confidence equal to 1 are called Exact rules. For the 88 rules extracted from the Mushroom dataset mentioned above, there are 17 exact rules and 71 approximate rules. Based on the Min-max approximate basis and the Min- max exact basis, only 9 exact rules and 25 approximate rules, as displayed in Table III and Table IV, are extracted and considered non-redundant in terms of the redundancy definition given in [12]. However, under Definition 4, some of the rules extracted from the min-max bases are redundant such as rules 5, 6 and 7 in Table III which are redundant to rules 1 and 2 in the same table, and rules 21 to 25 in Table IV which are redundant to rules 17, 11, 10, and 16, respectively.

A. Reliable Bases  Corresponding to the two Min-max bases, we propose two more concise bases called Reliable bases as defined in Definition 7 and Definition 8. Using the Reliable bases, more redundant rules can be eliminated.

Definition 7: (Reliable Approximate Basis) Let C be the set of frequent closed itemsets and G be the set of minimal generators of the frequent closed itemsets in C. The Reliable  TABLE III NON-REDUNDANT EXACT RULES EXTRACTED FROM MIN-MAX EXACT  BASIS(MUSHROOM DATASET, MINSUPP=0.8, MINCONF=0.8)  Rules (supp, conf) 1 gill-attachment-f ? veil-type-p (0.97415, 1.0) 2 gill-spacing-c ? veil-type-p (0.8385,1.0) 3 veil-color-w ? veil-type-p ( 0.97538,1.0) 4 ring-number-o ? veil-type-p (0.92171,1.0 ) 5 gill-attachment-f,veil-color-w ? veil-type-p (0.97317,1.0 ) 6 gill-attachment-f,ring-number-o ? veil-type-p (0.89808, 1.0) 7 gill-spacing-c,veil-colo-w ? veil-type-p (0.81487 ,1.0 ) 8 gill-attachment-f,gill-spacing-c ? veil-type-p,veil-color-w (0.81265,1.0) 9 veil-color-w,ring-number-o ? gill-attachment-f,veil-type-p (0.8971, 1.0)  TABLE IV NON-REDUNDANT APPROXIMATE RULES EXTRACTED FROM MIN-MAX  APPROXIMATE BASIS (MUSHROOM DATASET, MINSUPP=0.8, MINCONF=0.8)  Rules (supp, conf) 1 veil-type-p ? gill-attachment-f (0.97415,0.97415) 2 veil-type-p ? gill-spacing-c (0.8385 ,0.8385) 3 veil-type-p ? veil-color-w (0.97538,0.97538) 4 veil-type-p ? ring-number-o (0.92171,0.92171) 5 veil-type-p ? gill-attachment-f,veil-color-w (0.97317,0.97317) 6 veil-type-p ? gill-attachment-f,  ring-number-o (0.89808,0.89808) 7 veil-type-p ? gill-spacing-c, veil-color-w ( 0.81487,0.81487) 8 veil-type-p ? gill-attachment-f,gill-spacing-c,  veil-color-w (0.81265,0.81265) 9 veil-type-p ? gill-attachment-f,veil-color-w,  ring-number-o (0.8971,0.8971) 10 gill-attachment-f ? veil-type-p,  veil-color-w (0.97317, 0.99899 ) 11 gill-attachment-f ? veil-type-p,  ring-number-o (0.89808,0.92191 ) 12 gill-attachment-f ? gill-spacing-c,veil-type-p,  veil-color-w ( 0.81265,0.83422) 13 gill-attachment-f ? veil-type-p,veil-color-w,  ring-number-o (0.8971,0.9209) 14 gill-spacing-c ? veil-type-p,veil-color-w (0.81487,0.97181 ) 15 gill-spacing-c ? gill-attachment-f,veil-type-p,  veil-color-w (0.81265,0.96917) 16 veil-color-w ? gill-attachment-f,  veil-type-p (0.97317, 0.99773 ) 17 veil-color-w ? gill-spacing-c,veil-type-p (0.81487,0.83544 ) 18 veil-color-w ? gill-attachment-f,gill-spacing-c,  veil-type-p(0.81265, 0.83317) 19 veil-color-w ? gill-attachment-f,veil-type-p,  ring-number-o (0.8971,0.91974) 20 ring-number-o ? gill-attachment-f,  veil-type-p (0.89808, 0.97436 ) 21 ring-number-o ? gill-attachment-f,veil-type-p,  veil-color-w (0.8971, 0.97329) 22 gill-attachment-f,veil-color-w ? gill-spacing-c,  veil-type-p (0.81265,0.83506 ) 23 gill-attachment-f,veil-color-w ? veil-type-p,  ring-number-o (0.8971, 0.92183) 24 gill-attachment-f,ring-number-o ? veil-type-p,  veil-color-w (0.8971,0.9989 ) 25 gill-spacing-c,veil-color-w ? gill-attachment-f,  veil-type-p (0.81265, 0.99728)  approximate basis is: ReliableApprox = {g ? (c\g)|c ? C, g ? G, ? ? ?(g) ? c,?(g ? ((c\c?) ? g?))  or conf(g ? (c\g)) > conf(g? ? (c?\g?)) where c? ? C, g? ? G, g? ? g, ? ? ?(g?) ? c?}  Definition 8: (Reliable Exact Basis) Let C be the set of frequent closed itemsets. For each frequent closed itemset c, let Gc be the set of minimal generators of c. The Reliable exact basis is:     ReliableExact = {g ? (c\g)|c ? C, g ? Gc,?(g ? ((c\c?) ? g?)),  where c? ? C, c? ? c, g? ? Gc?}  We have proved the correctness of the Reliable Exact Basis in [16]. The correctness of the above definition can be proved by the following theorems and properties.

Lemma 1: Let c ? C and C be the set of frequent closed itemsets, let g ? G and G be the set of minimal generators of the closed itemsets in C, and ???(g) ? c. If ?c? ? C, ?g? ? G, ???(g?) ? c?, g? ? g, g ? ((c\c?)?g?), and conf(g ? c\g) ? conf(g? ? c?\g?), then g ? c\g is redundant to g? ? c?\g?.

Proof: Let A = c\c? so that c ? A ? c? and A ? c? = ?.

Therefore, we have c\((c\c?)? g?) ? (A? c?)\(A? g?). From ? ? ?(g?) ? c?, we have g? ? c?. Since A ? c? = ?, then A ? g? = ?. So, c\((c\c?)?g?) ? (A?c?)\(A?g?) = ((A?c?)\A)\g?) = c?\g?.

That is, c\((c\c?)? g?) ? c?\g?. Because g ? ((c\c?)? g?), we have c\g ? c\((c\c?)? g?) ? c?\g?, hence, c\g ? c?\g?. Since c\g ? c?\g?, g ? g?, and conf(g ? c\g) ? conf(g? ? c?\g?), according to Definition 4, we can conclude that g ? c\g is redundant to g? ? c?\g?.

According to Modus tolen inference rule, i.e., if the consequent of an implication is false, the antecedent of the rule must be false, from Lemma 1, we get the following corollary:  Corollary 1: Let c ? C and C be the set of frequent closed itemsets, let g ? G and G be the set of minimal generators of the closed itemsets in C, and ? ? ?(g) ? c. If g ? c\g is a non-redundant rule, then ?c? ? C, ?g? ? G, ? ? ?(g?) ? c? and g? ? g, we have ?(g ? ((c\c?) ? g?)) or conf(g ? c\g) > conf(g? ? c?\g?).

Theorem 2: Let c ? C and C be the set of frequent closed itemsets, let g ? G and G be the set of minimal generators of the closed itemsets in C, and ? ? ?(g) ? c. g ? c\g is a non- redundant rule iff ?c? ? C, ?g? ? G, g? ? g, ???(g?) ? c?, and ?(g ? ((c\c?) ? g?)) or conf(g ? c\g) > conf(g? ? c?\g?).

Proof:  1) =?. The proof follows the conclusion of Corollary 1.

2) ?=. (i) Assuming that ?(g ? ((c\c?) ? g?)), we  get g ? (c\c?) ? g?, or g ? ((c\c?) ? g?) = ?, or (g?((c\c?)?g?) ? ((c\c?)?g?))?(g?((c\c?)?g?) ? g).

(1). In the case that g ? (c\c?) ? g? is true, assuming that g ? c\g is redundant, then we get, ?c? ? C, ?g? ? G, and ? ? ?(g?) ? c? (hence g? ? c?) such that g? ? g and c?\g? ? c\g.

From c?\g? ? c\g and g? ? c?, we have c? ? c?\g? ? c\g, i.e., c? ? c\g. Since ? ? ?(g) ? c thus g ? c, obviously we have c = (c\g) ? g and (c\g)?g = ?; also (c\c?)?c? ? c and (c\c?)?c? = ? are true. Therefore, we have (c\c?)?c? ? c = (c\g)?g, i.e.:  (c\c?) ? c? ? (c\g) ? g (a) Because c? ? c\g, (c\c?) ? c? = ? and (c\g) ? g = ?, after c? being removed from the left side of (a) and c\g being removed from the right side of (a), the  formula (a) becomes c\c? ? g. From g? ? g, we get (c\c?) ? g? ? g ? g? = g, i.e., (c\c?) ? g? ? g which contradicts to (c\c?) ? g? ? g.

Therefore, the assumption is false, i.e., g ? c\g is non-redundant.

(2). In the case that g ? ((c\c?) ? g?) = ? is true, g ? g? = ?, thus g ? g? is always false. Therefore, g ? c\g can?t be redundant to g? ? c?\g?.

(3). In the case that (g ? ((c\c?) ? g?) ? ((c\c?) ? g?)) ? (g ? ((c\c?) ? g?) ? g) is true, there must exist some x such that x ? c\c? and x 	? g or x ? g? and x 	? g. The former will make (c\g) ? (c?\g?) false and the latter will make g ? g? false. Therefore, g ? c\g will never be redundant to g? ? c?\g?  (ii) Assuming that conf(g ? c\g) > conf(g? ? c?\g?).

From Definition 4, we can directly conclude that g ? c\g is not redundant.

The generic representation resulting from coupling the Reliable Exact Basis with the Reliable Approximate Basis defines a more concise set of association rules which are non- redundant, sound and lossless. The algorithm to extract non- redundant exact rules based on the Reliable Exact Basis has been given in [16]. The algorithm to extract non-redundant approximate rules based on the Reliable Approximate Basis is given below:  Algorithm 1: ReliableApproxBasis(Closure) Input: Closure: a set of frequent closed itemsets  Generator: a set of minimal generators  Output: A set of non-redundant approximate rules.

1. approxRules := ? 2. for each c ? Closure 3. for each g ? Generator such that ? ? ?(g) ? c 4. if ?c? ? Closure, ?g? ? G such that ? ? ?(g?) ? c?  and g? ? g 5. we have ?(g ? ((c\c?) ? g?))  or conf(g ? c\g) > conf(g? ? c?\g?) 6. then approxRules := approxRules ? {g ? (c\g)} 7. end-for 8. end-for 9. Return appproxRules  For the Mushroom example dataset, 6 non-redundant exact rules are extracted based on the Reliable Exact basis and 21 non-redundant approximate rules are extracted based on the Reliable Approximate basis. Rules 5, 6, and 7 in Table III extracted based on the Minmax Exact basis and rules 22, 23, 24 and 25 in Table IV extracted based on the Minmax Approximate basis are considered redundant under the Reliable Exact basis and the Reliable Approximate basis, respectively, and thus eliminated.

B. Deriving Association Rules from the Reliable Bases  The proposed reliable bases are lossless, which means that from the bases we can construct all association rules without scanning the dataset. Algorithms have been proposed to derive all association rules from the Min-max bases [12] and the Reliable Exact basis [16]. In this section, we provide an algorithm that can derive all approximate rules from the Reliable Approximate basis.

As showed at the beginning of this section, the Min-max approximate basis, which is a super set of the Reliable approximate basis, still contains redundancy. Based on the definitions 5 and 7, the Min-max Approximate basis can be described as: MinMaxApprox = {g ? (c\g)|c ? C, g ? G, ? ? ?(g) ? c} = {g ? (c\g)|c ? C, g ? G,  (?(g ? ((c\c?) ? g?)) or conf(g ? c\g) > conf(g? ? c?\g?)) for all c? ? C, g? ? G, ? ? ?(g) ? c or (g ? ((c\c?)?g?) and conf(g ? c\g) ? conf(g? ? c?\g?)) for some c? ? C, g? ? G, ? ? ?(g?) ? c?}  = {g ? (c\g)|c ? C, g ? Gc, ?(g ? ((c\c?) ? g?)) or conf(g ? c\g) > conf(g? ? c?\g?) for all c? ? C, g? ? G, ? ? ?(g) ? c} ? {g ? (c\g)|c ? C, g ? Gc, g ? ((c\c?) ? g?) and conf(g ? c\g) ? conf(g? ? c?\g?) for some c? ? C, g? ? G, ? ? ?(g?) ? c?}  = ReliableApprox ? NonReliableApprox  Where  NonReliableApprox = {g ? (c\g)|c ? C, g ? Gc, (6)  g ? ((c\c?) ? g?) and conf(g ? c\g) ? conf(g? ? c?\g?) for some c? ? C, g? ? G, ? ? ?(g?) ? c?}  The following theorem showes that, for r2 : g2 ? c2\g2, c2 ? C and g2 ? G (i.e., r2 is a rule in MinMaxApprox), if for some c1 ? C and some g1 ? G, there is (g1 ? (c1\c2)? g2) and conf(r1) ? conf(r2), then we can deduce: r1 : g1 ? c1\g1 is a rule in NonReliableApprox. This means that, from a rule in MinMaxApprox, we could deduce a NonReliableApprox rule.

Theorem 3: Let C be the set of frequent closed itemsets and G be the set of minimal generators. For rules r1 : g1 ? c1\g1 and r2 : g2 ? c2\g2 where c1, c2 ? C, g1 , g2 ? G, ???(g1) ? c1, and ? ? ?(g2) ? c2. r1 is a NonReliable approximate rule iff (g1 ? (c1\c2) ? g2) and conf(r1) ? conf(r2).

Proof:  1) =? According to the definition of Min-max approximate basis, both r1 : g1 ? c1\g1 and r2 : g2 ? c2\g2 are Min-max approximate rules. If g1 ? (c1\c2) ? g2 and conf(r1) ? conf(r2), then ?(g1 ? (c1\c2) ? g2) must be false. According to the definition of Reliable approx basis, r1 	? ReliableApprox must be true. Therefore, r1 ? NonReliableApprox is true.

2) ?= Assuming that r1 : g1 ? c1\g1 ? NonReliableApprox. From Equation (6), we immediately get, g1 ? ((c1\c2) ? g2) and conf(r1) ? conf(r2) for some c2 ? C,, and g2 ? G.

We designed the following algorithm AllApproxFromReliable to derive all approximate rules from the Reliable Approx basis. The algorithm AllApproxFromReliable takes ReliableApprox as the initial value for MinMaxApprox. Steps 4-8 generate approximate rules from an approximate basis rule in current MinMaxApprox. Steps 9 to 14 deduce NonReliableApprox basis rules and add them into the current MinMaxApprox. Therefore, during the process of deriving approximate rules, we generates all NonReliableApprox rules so that MinMaxApprox will be completed progressively during the course. Theorem 3 ensures that we can deduce all NonReliableApprox basis rules.

On completion of executing Algorithm 2, MinMaxApprox will contains all ReliableApprox basis rules and also all NonReliableApprox basis rules. Steps 17 to 21 in Algorithm 2 derive all approximate rules from these basis rules, which performs the same task as the steps 11 to 17 in the approximate reconstruction algorithm proposed in [12].

Algorithm 2: AllApproxFromReliable(ReliableApprox) Input: ReliableApprox: reliable approximate basis Output: AllApprox: A set of all approximate association rules  1. AllExact := ?, MinMaxApprox := ReliableApprox 2. for i = 2 to maximum size of closed itemsets 3. for rule (r1 : a1 ? c1, r1.supp, r1.conf) ? MinMaxApprox  and |c1| = i 4. for subset c2 ? c1 5. if (r2 : a1 ? c2, r2.supp, r2.conf) 	? AllApprox 6. and r2.conf 	= 1//r2 is not an exact rule 7. then AllApprox := AllApprox ?  {(r2 : a1 ? c2, r1.supp, r1.conf)} 8. end-for 9. for each closed itemset c3 10. for generator a such that a ? a1 and a.closure ? c3 11. if a ? ((c3\(c1 ? a1))? a1) and r1.conf ? c3.suppa.supp 12. then MinMaxApprox := MinMaxApprox ?  {a ? (c3\a), c3.supp, c3.suppa.supp } 13. end-for 14. end-for 15. end-for 16. end-for 17. for rule (r1 : a1 ? c1, r1.supp, r1.conf) ? AllApprox 18. for each subset c3 ? c2 where c2 = a1.closure\a1,  (a1.closure).supp a1.supp  = 1 19. AllApprox := AllApprox ?  {a1 ? c3 ? c1\c3, r1.supp, r1.conf} 20. end-for     21. end-for 22.return AllExact

V. EVALUATION  We have conducted experiments to evaluate the effective- ness of the proposed Reliable approximate basis. This section presents the experimental results.

A. Datasets  We used the following three datasets from UCI KDD Archive (http://kdd.ics.uci.edu/). The Mushrooms dataset con- tains 8,124 records each of which describes the characteristics of one mushroom object. Each mushroom object has 23 attributes some of which are multiple value attributes. After converting the multiple value attributes to binary ones, the number of attributes of each object becomes 126. The Anneal- ing dataset contains 898 annealing instances (objects), each has 38 attributes. After converting multiple value attributes to binary ones, each object has 276 attributes. The Flare2 dataset contains 1,066 solar flare instances each of which represents captured features for one active region on the sun. Each flare instance has 50 attributes after the multiple value attributes are converted to binary attributes. The experiment is to find the associations among attributes for the three datasets.

B. Experiment Results  We have reported the evaluation result for the Reliable exact basis in [16]. In this section, we will evaluate the effectiveness of the proposed Reliable Approximate basis on eliminating redundancy. We have proved in Section IV that the Reliable bases are more concise than the MinMax bases and thus should contain less number of basis rules. We have also proved in Section IV that, from the Reliable bases, we can deduce all approximate association rules. In this experiment, firstly we confirmed that both the MinMax basis and the Reliable basis can deduce all approximate rules. For example, when Minsupp is 0.3, both bases produce 21,377 approximate rules for the Mushroom dataset as showed in Table V. Secondly, we tested the reduction ratio between the size of the MinMaxApprox basis and the size of the ReliableApprox basis for different Minsupp settings. For all tests, the minconf was set to 0.5. Table V, Table VI, and Table VII present the test results for the three datasets, respectively.

The experiment results showed that the reduction is considerable high. For instance, when Minsupp was set to 0.3, for the Annealing dataset, the MinMax basis contains 865 basis rules as showed in Table VI, while the Reliable basis contains 554 basis rules, the reduction ratio is 36%. In this case, 5,052 approximate rules can be deduced either from the MinMax basis or from the Reliable basis. For example, the following 9 rules in the MinMax basis are redundant to the reliable rule steel-A ? product-type-C,strength-000 (0.4844, 0.9886), therefore they are excluded in the Reliable basis:  TABLE V NUMBER OF APPROXIMATE RULES (MUSHROOM DATASET, MINCONF=0.5)  Approx rules derived MinMax Reliable Reduction Minsupp (MinMax,Reliable) Approx Basis Approx Basis Ratio  0.3 21,377 2,634 1,970 25% 0.4 2,528 465 361 22% 0.5 835 175 135 23% 0.6 228 59 52 12% 0.7 161 39 34 13% 0.8 71 25 21 16%  TABLE VI NUMBER OF APPROXIMATE RULES (ANNEALING DATASET, MINCONF=0.5)  Approx rules derived MinMax Reliable Reduction Minsup (MinMax,Reliable) Approx Basis Approx Basis Ratio  0.3 5,052 865 554 36% 0.4 1,835 435 296 32% 0.5 1,186 300 218 27% 0.6 416 137 102 26%  steel-A,carbon-00 ? product-type-C,strength-000, (0.47327, 0.9884) steel-A,hardness-00 ? product-type-C,strength-000, (0.30512,0.9821) steel-A,bore-0000 ? product-type-C,strength-000, (0.4655,0.9882) steel-A,class-3 ? product-type-C,strength-000, (0.3853,0.9858) steel-A,carbon-00,bore-0000 ? product-type-C,strength-000, (0.4543, 0.9879) steel-A,carbon-00,class-3 ? product-type-C,strength-000, (0.3775,0.9854) steel-A,hardness-00,bore-0000 ? product-type-C,strength-000, (0.3040, 0.9820) steel-A,bore-0000,class-3 ? product-type-C,strength-000, (0.3731,0.9853) steel-A,carbon-00,bore-0000,class-3 ? product-type-C,strength-000, (0.3653,0.9850)  The 9 rules listed above have the same consequent but a larger antecedent than that of the reliable rule steel-A ? product-type-C,strength-000. Both the support and confidence values , as indicated as (support, confidence) at the end of each rule, of these 9 rules are smaller than that of the reliable rule. Therefore, according to Theory 1, their CF value won?t be greater than that of the reliable rule. In real world problem solving, if we know that steel-A is true, by applying the rule steel-A ? product-type-C,strength-000, we can conclude that product-type-C,strength-000 is true. We don?t have to know hardness-00, class-3, or bore-0000, etc. in order to reach this consequence. That means, all the 9 rules are useless or redundant if we have the rule steel-A ? product-type- C,strength-000 at hand. Eliminating these redundant rules can greatly reduce the size of the discovered rule set, but the capacity of the rule base in solving problems remains the same.



VI. RELATED WORK  One approach on addressing the quality of association rules is to apply constraints to generate only those association rules that are interesting to users based on some constraints.

TABLE VII NUMBER OF APPROXIMATE RULES (FLARE2 DATASET, MINCONF=0.5)  Approx rules derived MinMax Reliable Reduction Minsupp (MinMax,Reliable) Approx Basis Approx Basis Ratio  0.3 7,604 1216 710 42% 0.4 2,420 644 479 27% 0.5 5,599 1081 730 32% 0.6 5,368 1203 687 43%     [10] and [14] proposed some algorithms that incorporate item constraints to the process of generating frequent itemsets. Also some works have been done on measuring association rules with interestingness parameters [3]. These approaches focus on pruning the association rules to get more general or informative association rules based on interestingness parameters. The approach proposed in [1] integrates various constraints into mining process including consequent constraint and minimal improvement constraint as well. The consequent constraint is used to restrict rules with certain consequent specified by the user, while minimal improvement constraint is used to simplify the antecedents of rules based on item?s contribution to the confidence and therefore prune association rules that have more specific antecedent but do not make more contribution to the confidence. Another approach is to use a taxonomy of items to extract generalized association rules [7], i.e., to generate rules between itemsets that belong to different abstract levels in the taxonomy, especially between high abstract levels aiming at reducing the number of extracted rules.

The approaches mentioned above aim at reducing the number of extracted rules and also improving the?usefulness? of the rules, but eliminating redundancy of rules is not a focus. The approaches proposed in [17] and [12] focus on extracting non-redundant rules. Both of them make use of the closure of the Galois connection [5] to extract non-redundant rules from frequent closed itemsets instead of from frequent itemsets. One difference between the two approaches is the definition of redundancy. The approach proposed in [17] ex- tracts the rules with shorter antecedent and shorter consequent as well among rules which have the same confidence, while the method proposed in [12] defines that the non-redundant rules are those which have minimal antecedents and maximal consequents. Our definition to redundant rules is similar to that of [12]. However, the requirement to redundancy is relaxed, and the less requirement makes more rules to be considered redundant and thus eliminated. Most importantly, we prove that the elimination of such redundant rules does not reduce the belief to the extracted rules and the capacity of the extracted non-redundant rules for solving problems will also not be reduced. The concept of non-derivable itemsets was introduced in [4]. The basic idea is to find lower and upper bounds on the support of an itemset based on the support of its subsets. When these bounds are equal, the itemset is considered derivable. The set of frequent non-derivable itemsets allows for deriving the supports of all other frequent itemsets and as such forms a concise representation from which all other frequent itemsets can be derived. Goethals proposed a method to derive non-derivable rules from the non-derivable itemsets [6]. The amount of the non-derivable rules is much smaller than the size of the entire rule set. However, it was not discussed whether the non-derivable rule set has the same capacity to solve problems as the entire rule set.



VII. CONCLUSION  One challenge problem with association rule mining is the redundancy in association rules which greatly affects the use  of the extracted rules in solving real world problems. The work presented in this paper aims at improving the quality of association rules by eliminating redundancy. In this paper, we proposed a relaxed definition of redundancy and a concise representation of association rules called Reliable basis. We theoretically proved and experimentally confirmed that the proposed Reliable basis can eliminate considerable amount of redundancy. Based on certainty factor theory, we also proved that the elimination of the redundancy using the proposed Reliable basis does not reduce the belief to the extracted rules.

Similar to the Min-max basis, the proposed Reliable basis is not only a concise but also a lossless representation of association rules. From the Reliable basis, all association rules can be deduced.

