Alarms Association Rules Based on Sequential Pattern Mining Algorithm

Abstract   Alarms association will play an important role in improving the service and reliability in modern telecommunication networks. As the network grows in size and complexity, the supervisors of network are finding it increasingly difficult to cope with the volume of alarm messages produced even from a single network fault. This paper introduces the related studies of alarms association and sequential pattern mining, presents a kind of arithmetic named EW(Effective Windows)-WINEPI, and a new alarms association analysis model based on this is designed, which can be used to forecast fault source.

1. Introduction   With the growing size of the communication networks, the rapid growth of the network bandwidth and speed, the network faults are inevitable. A single incident can lead to several notifications, when a single fault or invalidation happens in the network, a large number of alarm information may be produced, although the alarm information can help the network quickly and accurately position the fault, a large number of alarm information will also affect the fault position judgment and managers? reaction speed.

Alarms association rules could assist the network managers to accurately judge alarms? source, then the network managers can quickly and accurately position the fault.

Sequential pattern mining is an important subject of data mining, a further promotion of association rules mining, and it is also widely applied. The common characteristics of association rules can be used in sequential pattern mining, most methods of sequential  pattern mining use the Apriority like method, based on the characteristics of alarm communication network, this paper presents a new Apriority like method, and a integrated alarms association analysis model based on this algorithm is designed, so as to realize alarms information filtering and fault positioning.

2. Basic concepts  2.1. Alarms association   Definition 1 (Alarms and alarms sequence) An ?alarm? is a notification of a specific event and  like an abnormally or may not lead in defects, an alarm may or may not represent an error. The sequence are composed of a number of alarms is called alarms sequence; it has very strong relevance of the time.

Definition 2 (Alarms association) Alarms correlation is the analysis of alarms  correlation, the process of alarms? compression and conversion, substitutes a number of alarms for a more informative alarm. The main functions are as follows:  1)Alarms compression [A, A, ?, A] ?A: In compression phase, alarms are received in a time window and multiple occurrences of the same event, substituting the corresponding alarms for a single alarm [1].

2)Alarms filtering [A, B, C] ?A: Delete the alarms which fall short of the alarms correlation.

3)Alarms count [n?A] ?B: The substitution of a specified number of occurrences of an alarm, with a new alarm [1].

4)Alarms suppression [B, A, priority (A) < priority (B)] ?B: Suppression is a temporary inhibition of alarms referring to a given event, according to criteria (continuously evaluated by the correlation system)   DOI 10.1109/FSKD.2008.11    DOI 10.1109/FSKD.2008.11     related to the dynamic context of the network management process.

5)Alarms? time sequence relationship: The different alarms are reported according to a certain kind of time sequence.

2.2. Sequential pattern mining   Definition 1[2] (Sequence) An itemset is a non-empty set of items. A sequence  is an ordered list of itemsets. Without loss of generality, we assume that the set of items is mapped to a set of contiguous integers. We denote an itemset i by {i1,i2,?,ij?,im}, where i, is an item. We denote a sequence s by (s1,s2... ,sj,...,sn), where s is an itemset.

We denote a sequence ? by (?1??2???j???m), where ?j is a event. The length of a sequence is defined as the number of itemsets which are contained in the sequence, writing  | |j j  l ?=?   Definition 2 (Subsequence) Let ?, ? be two sequences. If there is a isotonic  mapping which can map the events of ? to the events of ?, we say that ? is a subsequence of ?, namely ? contains ?, writing ?? ?.

Definition 3 (The support for the sequence) Let ? be a sequence of database D, the support for  the sequence ? is defined as the fraction of total sequences of database D who support this sequence.

Definition 4 (Large sequence) A sequence with minimum support is called a large  sequence. Note that each sequence in a large sequence must have minimum support. Hence, any large sequence must be a list of itemsets.

Definition 5 (Episode) An episode is a pair ?(V,?), where V is a collection  of alarm predicates, and ? is a partial order on V.

Given a sequence of alarms S, an episode ?(V,?) occurs within S if there is a way of satisfying the alarm predicates in V using the alarms of S so that the partial order is respected. Figure 1 presents, as an example, the predicates and their partial order from an episode.

Definition 6 (Episode rules) Let ?, ? be two episodes, The implication   ???  denotes the relationship of them. We define confidence as strength of implication relationship, writing conf=fr(?,S)/fr(?,S), ?fr? is frequency. So we define episode rules as the implication relationship of two large episodes which with minimum confidence (minConf), writing ?=>?-?. The knowledge we finally submit to the users is episode rules.

Figure 1. An episode presented as predicates  and their partial order Definition 7 (Window) An alarms sequence in the alarms sequence S,  writing W(w,ts,te) ts< te, and the window W is composed of all of the alarms(A,t) which meet the request(ts?t?te). The width of the window W is defined as te-ts.

3. Sequential pattern mining algorithms  3.1. WINEPI algorithm   There is a vast set of methods used to alarms association, Agrawal, etc. first present the issue of sequential pattern mining [2], most sequential pattern mining algorithms are based on Apriori, so we call them Aprior algorithms, such as WINEPI, GSP [4] etc.; another kind of algorithm is the growing technology of sequential pattern which is based on database projection, like FP growing method. The research of algorithms in this paper is based on the former.

Because of the timing characteristics of alarms data, the episode rules mining is generally based on sequential pattern mining algorithm. WINEPI algorithm is the basic method of episode rules mining, its specific process is shown in Figure 2, the letters indicate the different types of alarms. The sliding time window with a length of w slides by unit step length from the initial moment of sequence S to the end, a set of windows W(S, w)is formed in this process. In order to enable the moment of alarm to be independent of the probability of that it is contained by windows, we stipulate that the first window Ws include and only include the first alarm of sequence, and the last window We include and only include the last alarm of sequence.

Figure 2. The process of WINEPI For any episode ?, we define its support in sequence  S fr(?,S) as: |{ ( , ) | W}|( , )  ( , ) W W S wfr S  W S w ?? ? ?=    A B  C D  E     In the formula, |W(S, w)| is the number of windows in W(S, w), according to reference [6], we can easily know that, 1e sT T w? + ? is total time of sliding, let sliding step-length(step) be unit time 1, then the number of windows in W(S, w) is as follow: | ( , ) | 1e sW S w T T w= ? + ?   3.2. EW-WINEPI algorithm   From the above analysis we can see that, the number of windows is total time of sliding, in fact, after the actual analysis of alarms sequence data, we see that the alarms are not in a row, and the time of interval between the two neighboring alarms may be very long. Thus, when the window slides by unit step length, a lot of empty windows (the window without alarm) will inevitably be produced, especially when a large amount of data is needed to process, the number of these windows must be very large. These windows are called noneffective windows in the analysis, and they will occupy a lot of resources. Therefore, in the analysis, these noneffective window should be removed, we only remain the effective alarms windows, so now the number of windows which are contained in W(S, w) is:  '| ( , ) | 1 | ( , ) |e sW S w T T w W S w= ? + ? ? In the formula, |W(S, w)| is number of noneffective  window. So we can see that the number of windows will be greatly reduced, at the same time,  support in sequence S fr(?,S) will be improved. The algorithm starts with the set of 1-sequences episodes and proceeds to larger episodes. The algorithm works iteratively: first a candidate collection Fi is generated, candidates are counted in the alarms sequence, when we count the candidates, the noneffective windows(i.e.

empty windows) should be ignored firstly, those occurring often enough are saved in the collection Li, and finally new candidates are generated again.

Essential for the efficiency of the algorithm is the following observation. If an episode does not occur frequently enough, then its father episodes which are more specific cannot occur frequently enough.

Therefore, the candidate collection Fi of episodes is built to contain only episodes whose all sub-episodes occur often enough. We define the above algorithm as EW(Effective Windows)- WINEPI algorithm.

3.3. The framework of EW-WINEPI   Input: the set of alarms? types, alarms sequence S, width of windows W, minimum support minSupp, minimum confidence minConf;  Output: the episode rules based on w, miniSupp, minConf in sequence S;  Algorithm: 1) Computing the set of large episodes F(S, w,  minSupp); 2) For every large episode ? in F(S, w, minSupp); 3) For every large episode ? in ?(cycle for) ; 4) If fr(?,S)/fr(?,S)?minConf, the output rule:  ?=>?-?.

4. Alarms association analysis model    Figure 3. Alarms association analysis model  Based on the above algorithm and combined with mature alarms association processing technology, I     designed a new alarms association analysis model, as shown in Figure 3.

1) Alarms Database Alarms database is used to store underlying  effective alarms data.

2) Data Import For mining alarms correlation rules, we can import  alarms tables from alarms database to mining database.

3) Data Preprocessing After the preprocessing of appointed alarms tables  by data preprocessing module, users can convert the data tables into the mining unified data format.

4) Alarms Correlation The module converts and compresses alarms by  alarms correlation analysis such as alarms compression, alarms filtering, alarms count, etc.

5) Sequential Pattern Mining The module calls sequential pattern mining  algorithm EW-WINEPI, mines the selected unified format data in the tables of mining database, and then outputs all of episode rules which meet the given parameters.

6) Post Processing The main function of this module is to compile the  results of mining into the form which is easy to understand and view for users, including the grouping, sorting and conversion for rules.

7) Expert Evaluation and Data Testing Because we are often not satisfied with the result of  episode rules mining, we have to mine the data for  many times to finally find the best result. The function of expert evaluation and data testing is to select valuable rules and add them to the rules knowledge warehouse; it can also adjust the parameters for the next time mining.

8) Rules Knowledge Warehouse This module is used for the storage of alarms  correlation rules which are mined by rules engine, and it can also store the episode rules proposed by the communication experts.

5. Model analysis   In order to verify the performance and efficiency  of alarms association analysis model, we do some experiments to evaluate and analyze the model in this paper.

The procedures are programmed by SQL Server and Visual C++. The alarms data comes from the communication network management system of an electric power company, the total number of alarms records is 158408, and these alarms records occurred in three months. The simple samples of alarms records are as shown in Table 1.

Do experiments with the alarms data, Table 2 shows the results of episode rules mining under different window(w), minimal support (minSupp), minimal confidence(minConf).

Table 1. The samples of alarms records   Table 2. The results of episode rules mining  From the Table 2 we can see that, when w becomes wider, the number of episode rules becomes larger, this is because when w becomes wider, the time range of finding episode rules also becomes larger; but when minSupp and minConf increase, the number of episode rules becomes smaller, it shows that, when the applicability of the rules(depends on minSupp) and  intensity(depends on miniConf) is stronger, the number of episode rules which meet the request is smaller.

6. Conclusions   This paper presents an improved sequential pattern mining algorithm which is called EW-WINEPI.

Combined with mature alarms correlation processing technology, We designed a new alarms correlation analysis model, and the experiments have proved that we can find a certain mount of episode rules by this method, also can be used to assist network managers to position the fault quickly and accurately.

