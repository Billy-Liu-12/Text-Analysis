Using Sequential and Non-Sequential Patterns  in Predictive Web Usage Mining Tasks

Abstract  We describe an efficient framework for  Web personaliza- tion based on sequential and non-sequentialpattern discov- ery fmrn usage data. Our experimental results performed on real usage datu indicate that more restrictive panerns, such as contiguous sequential patterns (e.g.. frequent navi- gational paths) are more suitable for predictive tusks, such as Web prefetching, which involve predicting which item is accessed next by a user), while less constrained patterns, such as frequent itemsers or general sequential patterns are more effective alternarives in the context of Web personal- izarion and recommender systems.

1. Introduction  Web usage mining techniques [9], that rely on offline pattern discovery from user transactions, can be used to solve scalability problems associated with personalization systems based on standard collaborative filtering. In addi- tion, user models discovered through data mining, can cap- ture more fine-grained information. such as the inherent or- dering among accessed pages, than standard techniques af- ford.

However, using more fine-grained information about users' navigational histories as part of pattern discovery does not necessarily translate to more effective personaliza- tion. Furthermore, techniques that may prove effective for predictive tasks such as prefetching, may not necessarily be appropriate in the context of personalization.

In this paper we present a scalable framework for Web personalization based on both sequential and non-sequential pattern mining from clickstream data. Our framework in- cludes efficient data structures for storing frequent itemsets or sequential patterns combined with algorithms which al- low for effective real-time generation of recommendations.

We have conducted a detailed comparative evaluation,  0-7695-1754-4/02 $17.00 Q 2002 IEEE 669  based on real usage data, of both sequential and non- sequential patterns in terms of their effectiveness and suit- ability for personalization tasks. We distinguish between two different evaluation methodologies, one suited for eval- uation of personalization effectiveness, and the other de- signed for evaluating the performance of predictive tasks such as Web prefetching (which involve predicting which item the user will access next during hisher navigation).

Our empirical results show that more restrictive patterns, such as contiguous sequential patterns (e.g., frequent nav- igational paths) are more suitable for predictive tasks such as Web prefetching (which involve predicting which item the user will access next during hisher navigation). On the other hand, less constrained patterns, such as frequent item- sets or general sequential patterns are more effective alter- natives in the context of Web personalization.

2. Preprocessing and Pattern Discovery  The overall process of Web personalization, generally consists of three phases: data preparation and transfor- mation, pattern discovery, and recommendation. In tradi- tional collaborative filtering approaches, the pattern discov- ery phase (e.g., neighborhood foimation in the k-nearest- neighbor) as well as the recommendation phase are per- formed in real time. In contrast, personalization systems based on Web usage mining [6,7], perform the pattern dis- covery phase offline. Data preparation phase transforms raw web log files into clickstream data that can be processed by data mining tasks. The recommendation engine consid- ers the active user session in conjunction with the discov- ered patterns to provide personalized content.

Web usage preprocessing 151 ultimately result in a set of n pageviews, P = { p ~ ; p l , '  .. :pn), and a set of m user transactions, T = { t ~ >  t z : .  . . ~ tm}, where each t i  E T i s  a subset of P. Conceptually, we view each transaction t as an I-length sequence of ordered pairs:  t = ( ( P ; : 4 P ; ) ) ,  ( P L  .i@:))*. .. : ( d l  4 4 ) ) )  1  mailto:mobasher,hdai,tluo,miki}@cs.depaul.edu   where each p:  = p j  for some j E {l, . , . ,n}, and w(p:) is the weight associated with pageview p: in the transaction t (usually binary weights are used in the context of associa- tion rule and sequential pattern discovery).

We focus on three data mining techniques: Association Rule mining (AR) [ I ,  21, Sequential Pattern (SP) [31, and Contiguous Sequential Pattern (CSP) discovery. CSPs are a special form of sequential patterns in which the items ap- pearing in the sequence must be adjacent with respect to the underlying ordering. In the context of Web usage data, CSP?s can be used to capture frequent navigational paths among user trails [IO]. In contrast, items appearing in SP?s, while preserving the underlying ordering, need not he ad- jacent, and thus they represent more general navigational patterns within the site. Frequent item sets, discovered as pan of association rule mining, represent the least restric- tive type of navigational patterns, since they focus on the presence of items rather than the order in which they occur within user session.

3. Personalization With Sequential and Non- Sequential Patterns  The recommendation engine takes a collection of f r c quent itemsets or (contiguous) sequential patterns as input and generates a recommendation set by matching the cur- rent user?s activity against the discovered patterns. We use a fixed-size sliding window over the current active session to capture the current user?s history depth. Thus, the slid- ing window of size n over the active session allows only the last T L  visited pages to influence the recommendation value of items in the recommendation set. We call this sliding window, the user?s active session window.

The recommendation engine based on association rules matches the current user session window with frequent itemsets to find candidate pageviews for giving recommen- dations. Given an active session window w and a group of frequent itemsets, we only consider all the frequent itemsets of size lwl + 1 containing the current session window. The recommendation value of each candidate pageview is based on the confidence of the corresponding association rule whose consequent is the singleton containing the pageview to be recommended.

In order to facilitate the search for itemsets (of size Jwl + 1) containing the current session window w ,  the fre- quent itemsets are stored in a directed acyclic graph, here called a Frequent ltemset Graph. The Frequent Itemset Graph is an extension of the lexicographic tree used in the tree projection algorithm of [I]. The graph is organized into levels from 0 to k, where IC is the maximum size among all frequent itemsets.

Each node at depth d in the graph corresponds to an item- set, I, of size d and is linked to itemsets of size d + 1 that  contain I at level d + 1. The single root node at level 0 corresponds to the empty itemset. To be able to match dif- ferent orderings of an active session with frequent itemsets, all itemsets are sorted in lexicographic order before being inserted into the graph. The user?s active session is also sorted in the same manner before matching with patterns.

Given an active user session window w ,  sorted in lexico- graphic order, a depth-first search of the Frequent Itemset Graph is performed to level JwJ. If a match is found, then the children of the matching node n containing w are used to generate candidate recommendations. Each child node of n corresponds to a frequent itemset w U {p}. In each case, the pageview p is added to the recommendation set if the support ratio u(w U { p } ) / u ( w )  is greater than or equal to a. where a is a minimum confidence threshold. Note that u(w U {p})/u(w) is the confidence of the association rule w + {p}. The confidence of this rule is also used as the recommendation score for pageview p .  It is easy to ob- serve that in this algorithm the search process requires only O(lw1) time given active session window w.

The recommendation algorithm based on association rules can be adopted to work also with sequential (respec- tively, contiguous sequential) patterns. In this case, we focus on frequent (contiguous) sequences of size JwJ + 1 whose prefix contains an active user session w. The can- didate pageviews to be recommended are the last items in all such sequences. The recommendation values are based on the confidence of the patterns. A simple trie structure is used to store both the sequential and contiguous sequential patterns discovered during the pattern discovery phase.

Depending on the specified support threshold and win- dow size, it might be difficult to find large enough itemsets or sequential patterns that could be used for providing rec- ommendations, leading to reduced coverage. This is panic- ularly true for sites with very small average session sizes.

In order to overcome this problem, we use all-kth-order method proposed in [SI in the context of Markov chain mod- els. The order of the Markov model corresponds to the number of prior events used in predicting a future event.

Our recommendation framework for contiguous sequen- tial patterns is essentially equivalent to kth-order Markov models. however, rather than storing all navigational se- quences, we only store frequent sequences resulting from the sequential pattern mining process. The notion of all- kth-order models can also easily he extended to the con- text of general sequential patterns and association rule. We extend our recommendation algorithms to generate all-kth- order recommendations as follows. First, the recommenda- tion engine uses the largest possible active session window as an input for recommendationeugine. If the enginecannot generate any recommendations, the size of active session window is iteratively decreased until a recommendation is generated or the window size becomes 0.

4. Experimental Evaluation  We conjecture that more restrictive patterns, e.g., CSP, may he better suited for predictive applications such as Web prefetching which involve predicting a user?s next immedi- ate access to a page. This is in contrast to personalization tasks which involve prediction a (broader) set of pages to he recommended to the user based on hidher previous ac- cess patterns. Thus, we propose two different evaluation methodologies. which here we shall call NEXT and ALL, respectively. The NEXT method evaluates recommendation effectiveness by comparing the system?s predictions with a user?s immediate next action, while the ALL method com- pares the predictions against all of the user?s remaining ac- tions (accesses to pageviews) in the duration of a session.

The experiments were performed on real Web usage data from 3 different commercial and non-commercial sites. The results shown helow represent selected experiments from only one of these data set: the full set of results and ex- periments are included in the full paper and available upon request.

For all experiments, we performed IO-fold cross- validation. In each iteration, each transaction 1 in the evalu- ation set was divided into two parts. The first 71 pageviews in t were used for generating recommendations, whereas, the remaining portion o f t  (target sec) was used to evalu- ate the generated recommendations. Given a window size w 5 n, we select a subset (or a subsequence in the case of SP or CSP) of the first n pageviews as the surrogate for a user?s active session window. denoted by ast .

Both All and NEXT evaluation methods take ast and a recommendation threshold T as inputs and produce a set of pageviews as recommendations. The recommendation set contains all pageviews whose recommendation score is at least T. The NEXT method compares the generated rec- ommendations with the immediate next pageview in the re- maining portion of the transaction t .  On the other hand, the ALL method compares the recommendation set to all of the pageviews in the remaining portion of t. The pre- cision measure represents the ratio of matches between the recommendation set and the target set to the size of recom- mendation set. The coverage measure represents the ratio of matches to the size of the target set. Finally, for a given recommendation threshold T. the mean over all transactions in the evaluation set is computed as the overall evaluation score for each of the measures in hoth evaluation methods.

Figure 1 depicts the results for the all-kth-order versions of the three recommendation methods for hoth data sets. In these comparisons, we also included the precision and cov- erage of the standard k-Nearest-Neighbor (kNN) technique for standard collaborative filtering. The value of k was cho- sen based sensitivity analysis for the best performance in terms of coverage and precision.

0.1 02 0.3 Ob OS 0.6 01 0.8 OB <  0.5  . $ 01 1 0.3  0.4  0.1 02 0.3 0.4 0.5 0.0 0.7 0.1 0.8 1  Rsomm.nd.tlamn.hgld  Figure 1: Recommendation Effectiveness Using Varying- Sized User Histories Based on the ALL Method  The results show that, in this case, SP will have similar (or better) performance than CSP in terms of hoth cover- age and precision. This phenomenon is likely due to the fact that varying window sizes has a more dramatic impact on the precision of CSP than on SP or AR. The AR mod- els also performs well in the context of personalization. In general, the precision of AR model is lower than SP, hut it does provide better overall coverage. The comparison to kNN shows that all of the techniques presented in this pa- per, outperform kNN in terms of precision. In general, kNN provides good coverage (usually in par with the AR model), hut the difference in coverage is diminished if we insist on higher recommendation thresholds (and thus more accurate recommendations).

We also compared the precision and coverage of AR, SP, and CSP based on the NEXT evaluation method. To pro- vide a better basis for comparison of these results to those based on the ALL method, we use the same support thresh- old and window size parameters as those used in Figure 1.

The results are shown in Figure 2.

The results show that, in this context, the CSP model provides much higher precision levels that hoth SP and AR,     0.1 0.2 0.3 0.4 0.5 0.8 0.1 0.8 0.0 I Rcomm.nddM lhr..hold  , 0.1 0 1  0.3 0.4 0.5 0.8 0.7 0.8 0.9 1  Rsanm.nddlon Thr.*ho!d  Figure 2 Comparison of Precision and Coverage Based on the NEXT Evaluation Method  while achieving coverage levels that are in par with the SP model. Indeed, at high recommendation thresholds, the coverage of CSP is  similar to better than that of the SP model. The precision levels of the AR model are too low to make it a reasonable candidate for this type of applica- tion.

5. Discussion and Conclusions  Our overall conclusion based on the aforementioned re- sults is that the SP and the AR models. generally provide the best choices for personalization applications. The CSP model can do better in terms of precision, hut the cover- age levels, in general, may he too low when the goal i s  to generate as many good recommendations as possible. On the other hand, when dealing with applications such as Web prefetching in which the primary goal is to predict the user's immediate next actions (rather than providing a broader set of recomendations), the CSP model provides the best choice. This is particularly true in sites with many dynam- ically generated pages (such as the one used in these ex- periments), where often a contiguous navigational path rep-  resents a semantically meaningful sequence of user actions each depending on the previous actions.

