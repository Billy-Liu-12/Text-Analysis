A Novel Association Rule Decision Algorithm Based on Ant Colony Optimization Algorithm for

Abstract?Optimization of automatic control is very important in ball mill pulverizing system and a novel association rule deci- sion algorithm based on ant colony optimization algorithm (ACO) is proposed for improving the control performance. The proposed algorithm, based on ACO, formulates the association rule decision problem as an optimization problem. In the algorithm, a new pheromone matrix is defined on the construction of the problem, and an effective heuristic values assignment approach, which is used with the knowledge of controlled plant, is proposed. The fitness function is established on the system control quality, such as the overshoot, the settling time and the steady state error. We performed the experiments on a mined association rules base of ball mill pulverizing system. Simulation results verify that the proposed algorithm can find the best association rule to optimize the system control performance.



I. INTRODUCTION  Optimization of automatic control is an important issue in Ball Mill Pulverizing System [1]. Operating optimization is to find the best working condition in current running state.

It means determining the best set values of the controlled variables. Generally, set values of the controlled variables are given by the manufacturers or determined by the field testing. However, the best set values, which make industrial process running more steadily and efficiently, will shift with the running environment changes. Therefore, tracing the best set values of industrial process becomes a research focus.

Researchers have proposed many methods in this field. Genetic algorithm is an effective method and it may be easily falling to over convergence or low convergence [2]. Neural network does not depend on mathematical model, and the standard data for training are not easily to get [3]. Fuzzy optimization algorithm can decide the optimization searching step by the field data, but the membership functions and the fuzzy rules require expert knowledge.

Data mining is a new technology to mine information and knowledge from the field data [4]. We can mine the association rules from the field database of the controlled plant, in form of ?if . . .then. . .?. The antecedent represents controlled variables values, as the consequent represents the system status. First, we query the existing AR base to confirm current system status. Then we anti-query the AR base with the consequent part to select the best rule to set values of the controlled variables for good control performance. In the anti-querying process, more than one association rule would  be found. Therefore the decision of an appropriate association rule for good control performance, in the following, is referred to as AR decision problem. Some researches [5], [6] have proposed different schemes for learning the relations of fuzzy inputs and fuzzy outputs, and they are limited to selecting a small number of significant fuzzy if-then rules to construct a compact fuzzy classification system with high classification power using optimization models. The AR decision problem can be regarded as a combinational problem, which is a bit different and can not be easily solved. Ant colony optimization (ACO) is a new paradigm of bio-inspired algorithms that has shown very good behavior when solving hard combinatorial optimization, and many studies on this topic are still being pursued [7], [8].

We propose a novel association rule decision algorithm based on ant colony optimization for ball mill pulverizing system. The AR decision problem is firstly formulated as an optimization problem, and the ACO is applied to the optimization problem. In the algorithm, the new pheromone matrix definition and the heuristic values assignment are proposed for the AR decision problem. The fitness function is established on the control quality of ball mill pulverizing system, such as the overshoot, the settling time and the steady state error. The rest of this paper is organized as follows. Section 2 summarizes some important background information. The proposed decision algorithm is introduced in Section 3. Section 4 presents the simulation results. Finally, section 5 conclusions the paper.



II. BACKGROUND INFORMATION  The schematic representation of a ball mill pulverizing system is shown in Figure 1. The ball mill is fed with raw coal.

At the same time, the hot air and recycle air are blown into the ball mill to dry and deliver the coal powder. After pulverizing, the coal powder is transferred into the coarse classifier and fine classifier. The unqualified powder is fed back into the ball mill for further pulverizing while the accepted powder is stored in the pulverized coal bunker.

Output capability, which includes pulverizing capability, drying capability and air draft capability, mainly represents the efficiency of ball mill pulverizing system. Drying capability and air draft capability can be represented by measuring the outlet temperature and the inlet negative pressure, respectively.

DOI 10.1109/CSSE.2008.1171     Fig. 1. Ball mill pulverizing system  Although pulverizing capability can not be measured directly, it is related to ball mill load. The ball mill load is the ratio between the volume of coal powder in the mill and the interstitial volume of the static ball charge. To control the ball mill pulverizing system to work at the optimal state means setting the three controlled variables values to get a high output capability.

Association rules, which represent the relationships between the three controlled variables and system output capability, can be mined from the field database to build the AR base. Fuzzy sets can represent the association rules in a natural and human- understandable way, when quantitative attributes are involved [9]. Then the fuzzy AR base is built, a part of fuzzy AR are shown in Table 1. In the table, X1, X2, X3 and Y present the linguistic variables of ball mill load, outlet temperature, inlet negative pressure and pulverizing system output capability, respectively. The set of fuzzy linguistic variables are adopted as {NB, NM, NS, ZO, PS, PM, PB}, NB, NM, NS, ZO, PS, PM and PB represent negative big, negative middle, negative small, zero, positive small, positive middle and positive big, respectively.

TABLE I EXAMPLE OF FUZZY AR BASE  IF THEN NO. X1 X2 X3 Y 1 PM PM NS PM 2 PS PS PB PM 3 NB NB NB NB ... ... ... ... ...

Let A1i, A2i, A3i and Bi be linguistic terms, the fuzzy AR structure can be written as:  ARi: IF X1 is A1i and X2 is A2i and X3 is A3i ,THEN Y is Bi  For example, it is assumed that the current measured values of ball mill load, outlet temperature and inlet negative pressure are transformed to fuzzy sets as NB, NB, NB, respectively.

Then we query the fuzzy AR base, as Table 1 shows, with the antecedent set {NB, NB, NB}, and find AR3 as the matching AR. The corresponding consequent set NB represents the current pulverizing system output capability. Since the system control objective is to get high output capability, namely, Y should be PB, we anti-query the fuzzy AR base and find AR1 and AR2. We have two groups of set values of ball mill load,  outlet temperature, and inlet negative pressure as {PM, PM, NS} or {PS, PS, PB}. The controller can control the controlled variables be the set values. After the system is steady, the ball mill pulverizing system will get a high output capability value, PB, with either of the two ARs. Because the set values of three controlled variables in AR1 and AR2 are different, the selection of the two ARs will lead to different system control performance.



III. AR DECISION ALGORITHM BY ACO  In the paper, an AR decision Algorithm based on ACO for the ball mill pulverizing system is proposed. The block diagram of the Algorithm is shown in Figure 2. bml, ot and inp are the measure values of the ball mill load, the outlet temperature and the inlet negative pressure, respectively.

bmlsv , otsv and inpsv are the set values of bml, ot and inp.

Fig. 2. AR decision algorithm based on ACO  In the AR decision problem, more than one association rule will be found. Let Ri, i=1,. . ., r, be a found AR, and r is the number of found association rules. The combination of the three variables in Ri is AR antecedent combination Aci.

Moreover we define the candidate AR antecedent combination is from the set Ac={Ac1,...,Acr}. For each consequent value, one of the r candidate AR antecedent combinations is chosen.

If c is the number of consequent values in the AR decision problem, then we have to decide the best one from a total of rc AR decision combinations. This leads to a combinational optimization problem.

One selected controlled variables antecedent combination of all association rules corresponds to one ant move. For example, in Figure 3 there are four consequent values denoted by B1- B4, and four candidate AR antecedent combinations Ac1-Ac4 for each consequent value. The ant moves through B1, B2, B3, and stops at B4 from the initial state. A bold line marks the tour of this ant. The node visited by ant is selected as the antecedent of the association rule. For the whole AR decision constructed by the ant in Figure 3, the selected antecedent parts in B1, B2, B3 and B4 are Ac1, Ac3, Ac2, Ac4, respectively.

In the initial of the algorithm, a colony of ants is generated and placed in the nest, and a terminal condition is defined as the total number of searching iterations. Searching for the best one among all AR decisions is based on the pheromone level, which is stored in a pheromone matrix shown in Figure 3, the size of the pheromone matrix is c?r and each entry in the matrix is denoted by ?ij , where i=1,. . ., c and j=1,. . ., r. When     Fig. 3. AR decision constructed by an ant tour, and the pheromone matrix  the ant arrives at the consequent value Bm, selection of the candidate AR antecedent combinations of Bm+1 is according to ?m+1j , j=1,. . ., r. At iteration t, the transition probability for selecting AR antecedent combination Acj in consequent Bi is defined by  Pij(t) = ?ij(t)[?ij ]?  r? j=1  ?ij(t)[?ij ]? (1)  where ? controls the relative weight of pheromone level and heuristic value. Computing the heuristic value ? usually requires apriori information about the problem instance. In the AR decision problem, a fuzzy AR base is constructed, which presents the apriori knowledge about the ball mill pulverizing system. So we use the confidence values of the fuzzy AR base to present the heuristic value ?.

The pheromone trails ?ij on the ant tour are updated according to the control performance of the constructed AR decision. There are three controlled variables in AR base, so when ant k completes a tour, we evaluate the system control  quality by a fitness function E= 3?  j=1  (Ei ? E)2, Ei is defined  as: Ei = (1 ? e??) ? (?i + eiss) + e?? ? lg(tis) (2)  where eiss, ? i and tis present the steady state error, the  overshoot and the settling time of system response for the i-th controlled variable, respectively. The weight coefficient ? ?(0.8, 1.5). A lower value indicates better control quality.

For each iteration, as in the ACS [10], if a new global best ant is found in this iteration, then pheromone trails on the tour traveled by the global-best ant are updated; the new pheromone trail ?ij(t + 1) is updated by  ?ij(t + 1) = (1 ? ?)?ij(t) + ??ij(t) (3)  where ? ?(0, 1), is the pheromone trail evaporation rate, and ??ij(t) = 1/Eglobal?best. Otherwise, no pheromone update is performed in this iteration. When the terminal condition is satisfied, the ants will find the best values combinations of controlled variables according to the pheromone level and heuristic values.



IV. THE SIMULATION AND RESULTS  Simulation is performed in Matlab 7.6 to test the feasibility and effect of the proposed algorithm. We apply the ACO to the fuzzy AR base shown in Table 1. The number of ants is set to 10, ?ij(0) is set as positive constants. The fitness function values on each iteration is shown in figure 4. The algorithm converges to a solution at about 275 iterations. After 350 iterations, the algorithm finds AR2 as the best AR to get high output capability.

Fig. 4. The fitness function values on each iteration  A futher experiment is performed to test the system re- sponses of the working condition presented by AR2 and rule AR1. The system transfer function of ball mill pulverizing system is introduced in [11]. The responses of ball mill load, the outlet temperature and the inlet negative pressure are represented by RBML, ROT and RINP, respectively.

According to the working condition presented by AR2, we set values of the three controlled variables to 0.5, 0.6 and 0.6, respectively. As Figure 5 shows, RBML, ROT and RINP enter the steady state after about 821s, 1252s and 982s, respectively.

The overshoot of ROT is about 0.025, and RBML is not more than 0.45. Moreover, the steady state errors of RBML and ROT are about 0.05 and 0.025.

According to AR1, the set values of ball mill load, the outlet temperature and the inlet negative pressure are 0.7, 0.7, and 0.4, respectively. The simulation results are shown in Figure 6. RBML, ROT and RINP enter the steady state after about 1159s, 1544s and 1185s, respectively. The overshoot of ROT is about 0.07, and RBML is not more than 0.66. Moreover, the steady state errors of RBML and ROT are about 0.04 and 0.07, respectively.

The simulation results show that the ball mill pulverizing system have a better control performance in the working     Fig. 5. Simulation results of AR2  Fig. 6. Simulation results of AR1  condition presented by AR2.



V. CONCLUSION  In this paper, a novel AR decision algorithm based on ant colony optimization for ball mill pulverizing system is pro- posed. The algorithm has some advantages as follows. First, based on the ACO, the algorithm can find the best working condition presented by the specific association rule. Second, the parameters in the proposed algorithm are easily to choose by using the ACO algorithm scheme. Third, the heuristic values represent the knowledge of ball mill pulverizing system very well. And the algorithm converges to a solution quickly by using the heuristic values. Simulations results also verify the feasibility and effect of the algorithm. As further work, we propose to use the local search to improve the performance of the algorithm.

