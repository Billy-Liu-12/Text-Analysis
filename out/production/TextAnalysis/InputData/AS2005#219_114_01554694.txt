

Abstract- Many applications deal with knowledge in the form of 'if-then rules.' In numerical data spaces the condition part of such rules is often based on intervals where the values of single variables are allowed to be within the ranges of the intervals. The interval rules can be interpreted geometrically as hyper rectangles. They can be derived heuristically by adaptive learning. In a previous approach we used cuts of membership functions of neuro-fuzzy rules for the pre-initialization of interval rules, that were reduced in their dimensions. As we showed before, such rules can be optimized by evolutionary or by ant colony algorithms to a problem-specific criterion.

Here, we demonstrate how interval rules in the chemical area of virtual screening can be optimized to characterize molecules as novel drugs. Mainly, a comparison between evolutionary and ant colony optimization is given, with and without using the neuro-fuzzy pre-initialization of interval borders. The results show that pre-initialization is more useful for the evolutionary optimization paradigm.

1 Introduction  Knowledge in the format of if-then rules is useful in many application areas. Many learning approaches are known, decision tree rules [Mitchell97], association rules [Agrawal94], generalization rules [PaetzO2], fuzzy rules [SpiegelO2], or neuro-fuzzy rules [Mitra2000]. For example not new, but more and more emergent application areas are bioinformatics [Selbig99], cheminformatics [DeLis2004], or medicine [Barro2002] beside others.

In the chemical area of virtual screening [LyneO2], [BohmOO] rules are needed that restrict the number of all available molecules to a clearly smaller number of bioactive molecules. The filtered molecules are potential drug candidates. Since it is not possible to test all the available molecules on their activity in a laboratory, the virtual approach helps decreasing costs by preselection of the most promising molecules.

Since the dimensionality of the molecules' property vectors is high, a selection of the most important features  is desired. We used a neuro-fuzzy system, FDDA (Fuzzy- Dynamic Decay Adjustment) [Huber95], [Paetz2001], to learn heuristic interval rules as the cuts of the corresponding membership functions. This approach gave us hyper rectangles of a clearly lower dimensionality. Since these rules are adapted heuristically they need not to be optimal.

Our optimality critrion is the enrichment factor, which is the number of bioactive molecules divided by their a priori probability. An evolutionary approach (EVO) [Paetz04] as well as an ant colony optimization (ACO) approach [PaetzO5] was able to increase the enrichment factors of the rules. For a comparison we have to deal with statistical meaningful individuals or ants. An analysis about the number of statistical meaningful ants is given.

Our evolutionary optimization approach mutates and recombines interval borders considering single dimensions. We used a strategy where children and parents may survive. The ACO optimizes the path length between two edges of a formal graph by natural ants [DorigoO4]. Every time an ant is walking on a sub-path, the pheromone concentration is increased. Over time sub- pathes with higher pheromone concentrations become more attractive for following ants. In our ACO rule approach for interval rule optimization we used an underlying Markov graph, where every direction (?) of a dimension was coded as a layer of states. Since we wanted to obtain a precision of two decimals, we designed the same number of 101 states (0.00, 0.01, 0.99, 1.00) per layer which was also comfortable to implement.

However, the optimization strategies might find the optimal rules without pre-initialization of the interval borders of the rules. To demonstrate how the optimization benefits by their pre-initialization, we compare the resulting enrichment factors of the best rules with EVO and ACO with and without pre-initialization by classifying the bioactivity of molecules with respect to twelve different drug targets.

In the next section, the chemical data and the corresponding learning task are described. The usage of the neuro-fuzzy system for initialization of interval rules      is presented in Section 3. The optimization algorithms EVO and ACO for interval rule optimization are explained in the Sections 4 and 5. The comparative results and necessary statistical considerations are given in Section 6, followed by a conclusion in Section 7.

2 The Chemical Data  In life science 'virtual screening' defines the process of searching for a small number of molecules with desired properties out of a magnitude of molecules. The properties (e.g., topological information, charges) are coded in descriptor vectors [TodesciniOO]. One important task is to find bioactive molecules, so called 'ligands,' that bind strongly to drug targets. Drug targets are larger molecules that are part of disease processes. The bioactive ligands inhibit the functioning of the drug targets in the processes.

For our work, we used descriptor vectors for each molecule that codes the two-dimensional information of the molecular graph [Schneider99]. Five different properties of an atom or atom group are coded: (d) hydrogen-bond donors, (a) hydrogen-bond acceptors, (p) positively charged atoms/groups, (n) negatively charged atoms/groups, and (1) lipophilic atoms/groups (1). Since two atoms are connected by a number of single bonds, the pairs ddO, daO, dpO, dnO, dlO, aaO, apO, anO, alO, ppO, pnO, plO, nnO, nlO, 110;...; dd9, da9, dp9, dn9, d19, aa9, ap9, an9, a19, pp9, pn9, p19, nn9, n19, 119 can be considered when using bond lengths between 0 and 9.

The dimensionality of the descriptor vectors is 150. The molecular database contains 4705 molecules with their activity class labels for different drug targets [SchneiderP03]. The drug targets are listed in Table I.

TABLE I DIMENSION OF THE DRUG TARGET DATASETS AFTER DIMENSION  REDUCTION (DIM.) AND DIMENSIONALITY OF THE RULE WITH THE HIGHEST EF. ACE = ANGIOTENSIN CONVERTING ENZYME, COX2 =  CYCLOOXYGENASE 2, CRF = CORTICOTROPIN RELEASING FACTOR (ANTAGONISTS), DPP = DIPEPTIDYLPEPTIDASE, GPCR = G PROTEIN  COUPLED RECEPTOR, HIV = HUMAN IMMUNODEFIENCY VIRUS PROTEASE, HOR = HORMONE RECEPTORS, MMP = MATRIX METALLOPROTEINASE, NK = NEUROKININ RECEPTOR, PPAR = PEROXISOME PROLIFERATOR-  ACTIVATED RECEPTOR, SEC = SECRETASE, THROM = THROMBIN. THE A PRIORI PERCENTAGE OF THE DATA IS NOTED IN THE SECOND COLUMN.

Drug A priori Dim. of Dim. of target percentage dataset support  rule ACE 0.94% 23 7 COX2 2.00% 20 4 CRF 1.34% 18 4  DPP IV 0.53% 24 5 GPCR 34.90% 19 8 HIV 1.23% 23 5 HOR 4.48% 24 5 MMP 1.64% 21 4 NK 2.51% 19 12 PPAR 0.74% 13 9 SEC 0.94% 20 9  THROM 4.00% 17 7  3 Pre-Initialization of Interval Rules and the Learning Task  In the last section we derived a high-dimensional representation for molecules. The general tasks, considering molecule data, are classification of the whole data, identification of relevant features, and rule generation. With respect to rule generation especially the best rules are interesting.

The FDDA type neuro-fuzzy network [Huber95],  [Silipo99], [Paetz2001] is capable of performing all the tasks in a heuristic manner. By considering the cuts of the fuzzy membership functions, that are hyper trapezoids, interval rules R are obtained with the format:  if (ANDi1,...,, var1 in (ai, b1)) then class c (1)  If ai is -00 or b1 is +00, then the interval border is not relevant for the interval rule in Formula (1). If both borders are infinite, then the dimension is not relevant for the rule. Fortunately, the interval rules have usually a much lower number of relevant interval borders than 2n, where n is the dimensionality of the data. Since a small number of interval borders is efficient for a prospective virtual screening in the application phase, we generally used the reduced feature set with m < n features as the starting point for optimization of the interval rules. The search space for optimization is then composed of 2m << 2n interval borders only.

The pre-initialization with the FDDA neuro-fuzzy  system is done by training the m-dimensional data after feature reduction. The network topolgy of the FDDA is a common two-layer feedforward network architecture. The input is fully connected to the first layer neurons. This layer is composed of neurons with trapezoidal membership functions as activation functions. The neurons belong to exactly one class, here 'bioactive' or 'inactive.' All neurons of each class are connected to a summation neuron in the second layer. During training the interval borders of the upper and lower rectangles (core and support rectangles) are adapted geometrically by expansion (core rectangle) and shrinking (support rectangle) procedures. Starting with only one neuron, further neurons are inserted during training whenever no already inserted neuron of the same class as the actual training data sample covers the data by its support rectangle. In the following support rules of the format in Formula (1) are considered.

We used three measures for rating the performance of an interval rule R [Paetz2005(2)]. The frequency freq(R) is defined in Formula (2) as the number of samples sr,c that are elements of the (support) hyper rectangle divided by the number s of all the samples in the whole dataset.

freq(R) = Srec/ S (2)  The confidence conf(R) of rules for class 'bioactive' is defined in Formula (3) as the number of samples Srec, active of class 'bioactive' that are elements of the hyper rectangle divided by the number of samples in it.

conf(R) = Srec, active / Srec (3)  Multiplied by hundred the indices could be interpreted as a percentage. The measures were calculated on the test data, not on the training data. The third measure considers the a priori probability pactive of the 'bioactive' samples in the dataset. The enrichment factor ef(R) is defined as the confidence of R for class 'active' divided by Pactive.

ef(R) = conf(R) / pactive  To get an idea of the rules, we give the rule for the ACE dataset that has the best ef under the constraint of a minimum frequency of 0.008 (0.8%) in the training data.

More details can be found in [Paetz2005(2)]. The rule R is given by  if dd > 0.00 and ppO < 0.50 and nnO 2 0.00 and pnl < 0.25 and da3 > 0.38 and nn7 2 0.00 and n18 < 0.36 then class 'bioactive'  with freq(R) = 1.1%, conf(R) = 26.7%, and ef(R) = 28. In this case the rule R uses only seven features, each one with a single interval border, so that seven directions need to be optimized with EVO or ACO.

4 The Evolutionary Algorithm for Optimization of Interval Rules  Evolutionary algorithms were used for optimization of the fuzzy terms in fuzzy rules or for membership function tuning. For an overview see [Cordon2004]. In our approach for optimizing the interval rules, every finite interval border is coded in an m-dimensional array, that represents one individual, cf. Algorithm 1. Mutation is done by adding values of normal distributions N(0,(Y) for varying single borders. Recombination is done by either calculating the mean of two corresponding borders of two individuals or by chosing one of the two values [Paetz2004].

Algorithm 1 (EVO): begin initialize individuals; select the 50% fittest ones as starting population; while not maximum number of generations reached do  calculate mutated individuals; calculate recombined individuals; calculate fitness for all individuals; select fittest individuals for the next generation  (parents and children may survive); end  We chose the following parameter settings for the experiments: number of individuals: 20. (dim. of best rule), survival rate: 0.5, mutation rate: 0.5 (survived individuals considered), recombination rate: 0.5 (survived individuals  considered) maximum number of epochs: 15, break when S.D. of  efs is lower than X = 0.05 (for GPCR X = 0.01, because ef is lower due to higher a priori probability in this case, cf.

Table I).

The fitness calculation is based on the ef of a rule individual R. To avoid too small rules, the fitness on the training data is set to "-1" if the frequency of R is too low. Here, the training frequency threshold is 0 =0.008 (0.8%).

fef ,freq(R) .60 (5) fitness(R) -=i_1 freq(R) < 0  In Section 6 we give the results of two initialization modes, with and without pre-initialization of the interval borders by the neuro-fuzzy system. In the next section we describe the idea of how to apply the ACO metaheuristic to interval rule optimization.

5 The ACO Approach for Optimization of Interval Rules  Ant colony optimization (ACO) was introduced in 1996 [Dorigo96], [DorigoO4]. Only a few approaches were concerned with optimization of fuzzy rules with ACO [Parpinelli2002], [GaleaO4], [SchockaertO4]. Our aim is not the optimization of the fuzzy terms, but the optimization of the neuro-fuzzy interval rules by ACO ('ACO-IntRule') [PaetzO5]. Figure 1 shows the construction graph that corresponds to the ACO.

Every layer s1, i = 1, ..., n, in Fig. 1 represents a positive or a negative direction in one dimension. We assumed two decimals precision, so that we modeled 101 states for every layer I (0.00, 0.01, ..., 0.99, 1.00). For example the number of the different values in the relevant dimensions are 2, 2, 2, 4, 61, 5, 38 for the ACE dataset.

Fig. 1 The construction graph for ACO-IntRule.

Again, Formula (5) was used for fitness calculation of single ants with a support threshold on training data 0= 0.8%. The pheromone-update was done in the usual way, cf. Formula (6).

<) new=(1 p) - Tl),old + p fitness11) (6)  Algorithm 2 presents the main steps of ACO-IntRule [Paetz2005].

Algorithm 2 (ACO-IntRule) begin Init parameter settings; antcycle = 1; while not maximum number of ant cycles do for all ants Ri do  calculate fitness(Ri) on training data; end % for all for all layers do update pheromones C y) new.

calculate transition probabilities pvf new; end % for all increment antcycle;  end %while calculate fitness(R,) on test data and select fittest rule;  Parameter settings are: number of ants is 500, initialization of pheromones with enrichment factor of the best rule, initialization of transition probabilities with identical values, pre-initialization of ant distribution with a normal distribution of values in one direction considering the interval borders, or with a uniform distribution (in the case without pre- initialization with respect to the interval borders), maximum number of ant cycles set to 30, evaporation factor p = 0.3. More details can be found in [Paetz2005]. Especially, a higher number of ants is needed compared to the number of individuals, and a lower number of ants led to less performant results.

6 Comparative Results  With the parameter settings for EVO (Section 4) and ACO-IntRule (Section 5) we performed experiments. For training (testing) the same 50% data were used as for training (testing) the neuro-fuzzy system in every of the four cases:  1) EVO without pre-initialization, 2) EVO with pre-initialization, 3) ACO-IntRule without pre-initialization, and 4) ACO-IntRule with pre-initialization.

The minimum training frequency 0.8% and the minimum test frequency 0.5% of one rule were used to assure a general statistical meaning of the rules. These thresholds were determined heuristically. In Table II the results of the EVO are presented. In the right column we mark a result as better with (w) or without (wo) pre- initialization if the difference is greater than one (GPCR greater than 0.1).

TABLE II COMPARISON OF THE ENRICHMENT FACTORS (EF). RESULTS WITH (W) AND WITHOUT (WO) PRE-INITIALIZATION. EVOLUTIONARY OPTIMIZATION (EVO), USING THE NEURO-FUZZY ALGORITHM WITH 235 2 TEST DATA ENTRIES.

FOR GPCR DATA WITH ONE DECIMAL PRECISION. THE FREQUENCY (ON THE TEST DATA) IS GIVEN IN BRACKETS. * NO RESULT WITH FREQ 2 0.5%  WAS OBTAINED.

Drug target ACE COX2 CRF  DPP IV GPCR HIV HOR MMP NK PPAR SEC  THROM  ef (freq) EVO wo 41 (1.1%) 28 (0.8%) 40 (0.6%) 40 (0.8%) 2.3 (1.8%) 22 (0.6%) 22 (1.2%) 51 (0.8%) 21 (0.6%) 26 (0.9%) 23 (0.4%)* 22 (0.8%)  ef (freq) EVO w  44 (0.9%) 31 (0.7%) 32 (0.6%) 40 (0.8%) 2.8 (1.3%) 49 (1.0%) 22 (1.2%) 51 (0.8%) 21 (1.1%) 34 (0.5%) 40 (0.7%) 21 (0.7%)  w or wo  w  w  wo  w/wo w  w  W/wo w/wo w/wo w  w  w/wo  In eleven of twelve cases the ef was equal to or higher with pre-initialization than without, considering EVO.

Only in the CRF case EVO performed better without pre- initialization. It seems that in this case a not optimal local maximum was obtained with pre-initialization. It is remarkable that the ef of the interval rules could not be increased in five cases with pre-initialization.

To compare the results of the ACO an investigation of the number of statistical meaningful ants was necessary.

Using EVO all individuals converged to the same local optimum and had no test frequency below the threshold.

Using 500 ants, not all ants achieved a test frequency equal to or above the threshold, although a too low training frequency was penalized. Thus, for every dataset we considered a plot of the test ef values of the 500 ants.

The resulting curve is depicted for the ACE dataset in      Fig. 2, and for the SEC dataset in Fig. 3 (without pre- initialization). In the latter case more ants are statistical meaningful.

120j .; ..-1--  100F      0 100 200 300 400 Ant number  l1   Fig. 2 Enrichment factors (ef) on test data for the 500 ants, sorted by their training ef (ACE data, without pre-initialization).

TABLE III STATISTICAL MEANINGFUL ANTS WITH AND WITHOUT PRE-INITIALIZATION.

Drug IS ISI target wo w ACE 70 89 COX2 372 362 CRF 317 327  DPP IV 265 290 GPCR 378 350 HIV 270 269 HOR 443 451 MMP 145 159 NK 484 470 PPAR 494 492 SEC 455 422  THROM 410 409  Table IV shows the results, considering only the statistical meaningful ants. The best efs together with the test frequencies are listed.

80r  70-   30~  0 100 200 300 400 500 Ant Number  Fig. 3 Enrichment factors (ef) on test data for the 500 ants, sorted by their training ef (SEC data, without pre-initialization)  The ants were sorted decending by their training fitness. The test ef gets smaller as long as the training frequency threshold criterion was fulfilled. With too small frequencies the ef increases clearly. Thus, only, the ants are called statistical meaningful if they are in the set S, composed of the first ants where the ef does not increase clearly. In Figure 2 seventy of the 500 ants were statistical meaningful. Out of the set S the ant with maximum ef was determined, only considering the ants with test frequency above 0.5% as for the individuals in EVO. We have not yet considered this rigorous scheme in [PaetzO5]. In Table III the number of statistical meaningful ants is given for all datasets with and without initialization.

With pre-initialization in most of the cases a similar number of statistical meaningful ants was obtained. In some cases the numbers are different, but not significantly higher for one initialization mode.

TABLE IV COMPARISON OF THE ENRICHMENT FACTORS (EF). RESULTS WITH AND  WITHOUT PRE-INITIALIZATION. ANT COLONY OPTIMIZATION (ACO), USING THE NEURO-FUZZY ALGORITHM WITH 2352 TEST DATA ENTRIES. FOR GPCR DATA WITH ONE DECIMAL PRECISION. THE FREQUENCY (ON THE  TEST DATA) IS GIVEN IN BRACKETS.

Drug target ACE COX2 CRF  DPP IV GPCR HIV HOR MMP NK PPAR SEC  THROM  ef (freq) ACO wo 38 (1.3%) 33 (0.8%) 44 (0.5%) 58 (0.6%) 1.8 (0.6%) 34 (0.5%) 22 (1.1%) 51 (0.8%) 16 (1.2%) 24 (1.2%) 49 (0.6%) 22 (0.8%)  ef (freq) ACO w  43 (1.1%) 38 (0.7%) 44 (0.5%) 58 (0.6%) 1.5 (0.6%) 34 (0.5%) 22 (0.9%) 51 (0.8%) 12 (1.1%) 32 (0.7%) 43 (0.6%) 22 (0.8%)  w or wo  w  w  w/wo w / wo wo  w/wo w/wo w/wo wo  w  wo  w/wo  In most cases ACO performed equally well with and without pre-initialization. There are three cases where ACO with pre-initialization performed better. We conclude, that in the ACO case pre-initialization can be useful, but it is more important when using EVO (cf.

Table II).

TABLE V NUMBER OF BEST RULES WITH AND WITHOUT PRE-INITIALIZATION.

pre-initialization EVO ACO mode w 1+1+1 1+0.5  +0.5+0.5 +0.5+0.5 +0.25+0.25+0.25 +0.25+0.25+0.25  = 4.75 = 3.25 wo 0.5+0.25 1+0.5  +0.25+0.25 +0.5+0.25 = 1.25 +0.25+0.25  = 2.75   -1- I  I     To compare the number of best rules found by ES or ACO with or vithout pre-initialization, the point for one best rule was divided by the number of equal results, cf.

Table V. For example, if ACO performs equally with and without pre-initialization, both modes got 0.5 points.

EVO in mode w performed best and generated in three cases the best rule solely. EVO in mode wo achieved the best results only together with other modes. Using ACO, pre-initialization was not that important as it was for EVO, although a slight performance gain was achieved with it. Without pre-initialization ACO is a better choice than EVO which is not the case when using pre- initialization. In this case EVO performed better.

Standard distance measures for CATS2D descriptor vectors were used to calculate enrichment factors in virtual screening [Fechner2003]. These ef values and the improvement factors of our optimized approaches are given in Table VI. EVO without pre-initialization performed worst on average.

TABLE VI IMPROVEMENT FACTORS COMPARED TO EF VALUES OF STANDARD  SIMILARITY MEASURES. * GPCR WAS NOT CONSIDERED FOR MEAN AND STD CALCULATION BECAUSE IT WAS NOT AVAILABLE WITH A DECIMAL  PRECISION IN THE ORIGINAL CASE.

Drug ef EVO EVO ACO ACO target wo w wo w ACE 23 1.8 1.9 1.7 1.9 COX2 13 2.2 2.4 2.5 2.9 CRF 12 3.3 2.7 3.7 3.7  DPP IV 14 2.9 2.9 4.1 4.1 GPCR* 2 1.2 1.4 0.9 0.8 HIV 17 1.3 2.9 2.0 2.0 HOR 9 2.4 2.4 2.4 2.4 MMP 8 6.4 6.4 6.4 6.4 NK 10 2.1 2.1 1.6 1.2 PPAR 11 2.4 3.1 2.2 2.9 SEC 8 2.9 5.0 6.1 5.4  THROM 11 2.0 1.9 2.0 2.2 mean 2.7 3.1 3.2 3.2 (std) (1.3) (1.4) (1.7) (1.6)  The algorithms were implemented in Matlab. EVO took several hours of computing time, ACO was six times slower. The runtime could be speed up to a factor of order 0(101) by using compiled program versions.

7 Conclusion  Interval rules can be applied efficiently in virtual screening. Earlier, we proposed the generation of interval rules by cutting rectangulars from trapezoid membership functions. The shapes of the membership functions were adapted by neuro-fuzzy learning. These interval rules were not optimal with respect to the enrichment factors that indicates the number of bioactive molecules in the rule compared to their a priori probability. Thus, we designed an evolutionary approach and an ant colony approach to optimize the enrichment factors.

Since the two optimization schemes are quite different, we gave a comparison of the results that we have achieved. While EVO uses individuals, that are mutated and recombined, probabilities for the pathes of the ants need to be calculated in the ACO case. Both optimization schemes depend on parameter settings. For ACO we needed to calculate the number of statistical meaningful ants after training. It cannot be fully excluded that other settings would lead to other results, but general trends were outlined. The pre-initialization of the interval borders increased performance in the EVO case clearly, so that it can be recommended. In the ACO case pre- initialization led only to slightly better results. Overall, if no pre-initialization procedure is available, ACO can be applied directly. Otherwise, EVO with pre-initialization performed best on average. The results are plausible due to EVO's property to get stuck in a local optimum.

EVO is not based on the idea of discrete states, so that  mutation and recombination can be applied in a continuous manner. Since ACO-IntRule was designed with discrete states, the next step is to develop a variant with individual numbers of states per layer to generate a more suitable construction graph with an adapted number of state nodes per layer.

