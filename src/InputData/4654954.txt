- 1788 -

Abstract: Classification rule mining is an active data mining research area. Most related studies have shown how binary valued datasets are handled. However, datasets in real-world applications, usually consist of fuzzy and quantitative values. As a result, the idea to combine the different approaches with Fuzzy Set Theory has been applied more frequently in recent years. Fuzzy sets can help to overcome the so-called sharp boundary problem by allowing partial memberships to the different sets, not only 1 and 0. On the other hand, Fuzzy Sets Theory has been shown to be a very useful tool because the mined rules are expressed in linguistic terms, which are more natural and understandable for human beings.

This paper proposes the combination of Fuzzy set theory and ?Genetic Network Programming? (GNP) for discovering fuzzy classification rules from given quantitative data. GNP, as an extension of Genetic Algorithms (GA) and Genetic Programming (GP), is an evolutionary optimization technique that uses directed graph structures as genes instead of strings and trees; this feature contributes creating quite compact programs and implicitly memorizing past action sequences. At last, experimental results conducted on a real world database verify the performance of the proposed method.

Keywords: association rule mining, classification, fuzzy association rules, fuzzy membership functions, genetic network programming.

1. INTRODUCTION  The integration of two areas of computer science, namely data mining and evolutionary algorithms have be- come more and more popular in recent years. Data Min- ing, defined as the extraction of knowledge from large amounts of data [1], goes beyond simple analysis and contribute greatly to business strategies, knowledge bases and scientific research. The motivation for applying evo- lutionary algorithms to data mining is that evolutionary algorithms are robust search methods which perform a global search in the space of candidate solutions. In contrast, most rule induction methods perform a local, greedy search in the space of candidate rules. Intuitively, the global search of evolutionary algorithms can discover interesting rules and patterns that would be missed by the greedy search performed by most rule induction meth- ods [2]. In this paper, we give emphasis to discovering comprehensible association rules, which are potentially useful for classification problems.

Classification is one of the several tasks of data min- ing, and it is a very important area of database learning field in the real world. It has many applications and pro- cesses, for instance: identifying credit level of credit card users, diagnosing some kinds of diseases of a patient, etc.

Related to the data mining field, classification is defined as the process to build a model in order to describe and distinguish data class or concept, in such a way to clas- sify data whose class is unknown into appropriate data class [1]. One of the comprehensible models used is the classification rules model. A classification rule is nor- mally expressed as IF-THEN rule, in the following way: IF [term1 AND term2 AND ... ] THEN [consequent].

Each term of the condition is a triplet [attribute, operator, value]. The rule consequent is the result of classification,  that is the class value of the attribute that belongs to.

Several methods have been proposed for generating  fuzzy if-then rules from quantitative data using evolution- ary algorithms. For instance, Ishibuchi et al. [3] have proposed a fuzzy classification rules?s algorithm. Their method consists of two phases: fuzzy partition of a pat- tern space into fuzzy subspaces and determination of a fuzzy if-then rule for each fuzzy subspace. The fuzzy par- tition by a simple fuzzy grid was employed. Because the performance of a fuzzy system strongly depends on the choice of a fuzzy partition, they also proposed an idea to simultaneously employ multiple fuzzy partitions in a sin- gle fuzzy system. The main drawback of this method is that the number of fuzzy if-then rules are enormous. In order to select a small number of significant fuzzy if-then rules a genetic-algorithm-based approach was proposed in [4]. Therefore, the rule selection problem is formu- lated as a combinatorial optimization problem with two objectives: to maximize the number of correctly classi- fied patterns and to minimize the number of fuzzy if-then rules. A set of fuzzy if-then rules is coded into a string and treated as an individual in genetic algorithms. The fit- ness of each individual is specified by the two objectives in the combinatorial optimization problem.

Moreover, a method for extracting classification as-  sociation rules using ?Genetic Network Programming (GNP)? was proposed [5], [6]. GNP [7], [8] is a novel evolutionary optimization technique, which uses directed graph structures as gene instead of strings (Genetic Al- gorithms) or trees (Genetic Programming) . Therefore, GNP is applicable to more complex problems. The main features of the proposed method are as follows: us- ing GNP, rule extraction is done without identifying fre- quent itemsets as Apriori-like mining methods. As a re- sult, interesting association rules are extracted in a short  SICE Annual Conference 2008 August 20-22, 2008, The University Electro-Communications, Japan  PR0001/08/0000-1788 ?400 ? 2008 SICE    - 1789 -  time. While most data mining techniques use the sup- port/confidence framework to measure the significance of the rules, GNP method also employs the ?2 statistic mea- sure. The GNP?s structure makes the support, confidence and ?2 measurements easy to calculate. The extracted as- sociation rules are stored in a pool through generations, that is, GNP individuals evolve in order to store new in- teresting rules in the pool. Finally, the algorithm is able to extract easily positive and negative association rules.

In this paper, we extend the above research and in-  tegrate it with Fuzzy Set Theory in order to find fuzzy classification rules from given quantitative data. The mo- tivation to introduce fuzzy sets is that they provide the required tools in order to deal with different data struc- ture. For instance, in traditional quantitative approaches, the quantitative attributes are split into intervals and the elements are either members or nonmembers of those in- tervals. This leads to an under or overestimate the values that are close to the borders of such crisp sets. This is called the sharp boundary problem. Fuzzy sets can help to overcome this by allowing a partial membership to more than one set. The membership of an item is defined by a membership function. Objects can thereby be the members of more than one set and therefore give a more realistic view on such data. On the other hand, Fuzzy Sets Theory has been shown to be a very useful tool in associa- tion rule mining because the mined rules are expressed in linguistic terms, which are more natural and understand- able for human beings. The linguistic representation is mainly useful when those discovered rules are presented to human experts for examination.

2. GNP FOR DISCOVERING FUZZY CLASSIFICATION RULES  This section presents our GNP-Fuzzy method devel- oped for the clasification task of data mining. At first, the extraction of fuzzy association rules using GNP is ex- plained. After, the use of fuzzy membership functions and its evolution is described.

2.1 Extraction of the association rules using GNP  2.1.1 Genetic Network Programming (GNP) GNP [7], [8] is a novel evolutionary optimization tech-  nique, which uses directed graph structures as gene in- stead of strings (Genetic Algorithms) or trees (Genetic Programming). The basic structure of GNP is shown in Fig. 1. GNP is composed of three types of nodes in a network: a start node, judgment nodes (diamonds), and processing nodes (circles) are linked together on the graph. Judgment nodes are the set of J1, J2, . . . , Jp, which work as if-then type conditional branch decision functions, they return judgment results for assigned in- puts and determine the next node. Processing nodes are the set of P1, P2, . . . , Pq, which work as action/processing functions. In this paper, the only role of the start node is to determine the first node to be executed. The fea- tures of GNP are described as follows. First, it is possi- ble to reuse nodes; because of this, the structure becomes  Fig. 1 The basic structure of GNP individual  compact. Second, GNP can find solutions of problems without bloat, which can be sometimes found in Genetic Programming (GP), because of the fixed number of nodes in GNP. Third, nodes that are not used at the current pro- gram executions will be used for future evolution. Fourth, GNP is able to cope with partially observable Markov processes.

The following genetic operators are executed in GNP.

? Selection: The individuals preserved to the next gen- eration are selected according to the fitness of each individual. Roulette, tournament and elite selection are established in GNP.

? Crossover: Is the genetic operation that generates two new offspring by exchanging the genetic infor- mation between two parents [see Fig. 2]. Crossover operator affects two parent individuals. All the connections of the uniformly selected correspond- ing nodes in two parents are swapped each other by crossover rate Pc. One point crossover, several points crossover and uniform crossover are estab- lished in GNP.

? Mutation of the connection: Is executed in one in- dividual and a new one is generated [see Fig. 3].

Each node branch is selected with the probability of Pm1 and the selected branch is reconected to another node.

? Mutation of the content: Each node function is se- lected with the probability of Pm2 and the selected function is changed to another one.

2.1.2 GNP Structure for Association Rule Mining The proposed algorithm first transforms each quanti-  tative value of the database into a fuzzy set with linguis- tic terms using the combination of trapezoidal and tri- angular fuzzy membership functions [Described in sec- tion 2.2]. Then, GNP evaluates the fuzzy attributes using judgment nodes and calculates the measurements of as- sociation rules using processing nodes [5], [6]. The mea- surements include support, confidence and ?2 value. In addition, each judgment node examines the class ?Z =C? at the same time. The association rules are represented as the connections of judgment nodes. Fig. 4 shows a basic structure of GNP for classification rule mining.

P1 is a processing node and is a starting point of asso- ciation rules. Each processing node has an inherent nu-    - 1790 -  Fig. 2 Crossover  Fig. 3 Mutation  meric order (P1, P2, ..., Ps) and is connected to a judg- ment node. Yes-side of the judgment node is connected to another judgment node. Judgment nodes can be reused and shared with some other association rules because of GNP?s features. No-side of the judgment node is con- nected to the next numbered processing node. The total number of tuples moving to Yes-side at each judgment node is calculated for every processing node, which is a starting point for calculating association rules. All GNP individuals are searched in parallel at the same time.

In Fig. 4, N is the number of total tuples, and a, b, c and d are the numbers of tuples moving to Yes-side at each judgment node; a(C), b(C), c(C) and d(C) are the number of tuples moving to the Yes-side at each judgment node that satisfy the class.

Fig. 4 GNP structure for classification rule mining with fuzzy items.

2.1.3 Measurements of the Association Rules using GNP We define important fuzzy association rules by the  ones which satisfy the following:  ?2 > ?2min, (1) support ? supmin. (2)  Where, ?2min and supmin are the minimum ?2 and sup- port values given by supervisors. The extracted fuzzy as- sociation rules are stored in a pool all together through generations. When an important rule is extracted by GNP, the overlap of the attributes is checked and it is also checked whether an important rule is new or not, i.e., whether it is already in the pool or not. If the rule is new, it is stored in the pool with its support, confidence and ?2. Even if the association rule is not new, the asso- ciation rule with higher ?2 value is stored, then, the pool is updated in every generation and only important associ- ation rules with higher ?2 values are stored Table 1 shows an example of the support and confi-  dence measurements of the fuzzy association rules for Fig. 4.

In [6] the traditional support-confidence framework  was extended by calculating ?2 for correlation used in classical statistics [9]. The ?2 is defined as follows. Let support(X) = x, support(Y ) = y, support(X ?Y ) = z and the number of database tuples equal N. If events X and Y are independent then support(X ?Y ) = xy. Table 2 is the contingency of X and Y : the upper parts are the expectation values under the assumption of their indepen- dence, and the lower parts are observational.

Table 2 The contingency of X and Y .

Y ?Y ?row X Nxy N(x? xy)  Nz N(x? z) Nx ?X N(y? xy) N(1? x? y+ xy) N(1? x)  N(y? z) N(1? x? y+ z) ?col Ny N(1? y) N  ( N: the number of tuples)    - 1791 -  Table 1 Support and confidence of association rules.

association rules support confidence  A1 High? A2 Low b/N b/a A1 High? A2 Low?A3 Mid c/N c/a  A1 High? A2 Low?A3 Mid?A4 High d/N d/a A1 High?A2 Low? A3 Mid c/N c/b  A1 High?A2 Low? A3 Mid?A4 High d/N d/b A1 High?A2 Low?A3 Mid ? A4 High d/N d/c  Now, let E denote the value of the expectation under the assumption of independence and O the value of the observation. Then the ?2 statistic is defined as:  ?2 = ? AllCells  (O?E)2 E .

(3)  We can calculate ?2 using x, y, z and N of Table 1 as follows:  ?2 = N(z? xy)2  xy(1? x)(1? y) . (4)  This has 1 degree of freedom. If it is higher than a cutoff value (3.84 at the 95% significance level, or 6.63 at the 99% significance level), we should reject the inde- pendence assumption.

2.1.4 Fitness and genetic operators of GNP The number of processing nodes and judgment nodes  in each GNP individual are determined based on exper- imentation according to the number of attributes pro- cessed. All GNP individuals in a population have the same number of nodes. The connections of the nodes and the functions of the judgment nodes at an initial genera- tion are determined randomly for each GNP individual.

Fitness of GNP is defined by  F = ? r?R  {?2(r)+10(n(r)?1)+?new(r)} (5)  The terms are as follows: R: set of suffixes of extracted important association rules satisfying (1), (2) in a GNP individual  ?2(r): ?2 value of rule r.

n(r): the number of attributes in the antecedent of  rule r.

?new(r): additional constant defined by  ?new(r) =  ? ?new (rule r is new) 0 (rule r has been already extracted)  (6)  ?2(r), n(r) and ?new(r) are concerned with the impor- tance, complexity and novelty of rule r, respectively. The fitness represents the potential to extract new rules.

Three kinds of genetic operators are used in our pro-  posed method; crossover, mutation-1 (change the con- nection of nodes) and mutation-2 (change the function  of judgment nodes). When mutation-2 is carried out, it is possible to use the frequency of the attributes of all extracted rules, or rules extracted in some of the latest generations. We define the probability of selecting the attribute Fiq(Ai) for judgment nodes by the following:  Pgiq = ng(Fiq(Ai))+C  ?k?K ?q?Qk(n g(Fkq(Ak))+C).

(7)  Where, Pgiq is the probability of selecting Fiq(Ai) using the information on the association rules extracted in the latest g generations, where Fiq(Ai) is the qth membership func- tion of fuzzy attribute Ai. ng(Fiq(Ai)) is the frequency of the attribute Fiq(Ai) in the rules extracted in the lat- est g generations. K is the set of suffixes of attributes.

Qk is the set of suffixes of the membership functions of fuzzy attribute Ak. If no rules are extracted in the recent ggenerations, then Pgiq is equal to the inverse of the total number of attributes. C is a constant given by the super- visor.

2.2 Fuzzy Membership Functions for Handling Quan- titative Data Our algorithm first transforms each quantitative value  of the database into a fuzzy set with linguistic terms us- ing the combination of trapezoidal and triangular fuzzy membership functions spaced symmetrically and equally as shown in Fig 5. Once a GNP individual starts search- ing association rules as explained in the above section, the membership values are employed to determine the movement from one judgment node to another, that is, a random number is generated and compared to the fuzzy membership values. If the random number is smaller than the fuzzy value then move to the next judgment node, otherwise, move to the next processing node. Therefore, fuzzy values are used as a probabilities for determining which node to select. For instance, Table 3 shows an example of a small database with two attributes: Age and Salary, then, using the membership functions defined in Fig. 6 it is possible to obtain Table 4, that is, the fuzzy membership values that will determine the move- ment from one judgment node to another in GNP individ- uals.

that will determine the movement from one judgment  node to another in GNP individuals.

The parameters of the membership functions ? , ? and  ? described in Fig. 5, are evolved by using non uniform mutation proposed by Michalewicz [10]. This operator reduces the disadvantages of random mutation. The mu-    - 1792 -  Fig. 5 Definition of the fuzzy membership functions Table 3 A sample database  TID Age Salary 1 24 2500 2 30 4000 3 35 3500 4 50 5000  (a) (b)  Fig. 6 Membership functions of age and salary at- tributes.

tation of the parameters allows the shifting of the coordi- nates of the trapezoid and triangular vertices, performing a more global search in the space of candidate member- ship functions. This mutation operator is defined as fol- lows.

For each individual Xtp in a population of t-th gener-  ation, create the following offspring Xt+1p through non- uniform mutation.

if Xtp = {x1,x2, . . . ,xl} is a chromosome, then the off-  spring Xt+1p = {x?1,x?2, . . . ,x?l} becomes as follows:  x?k =  ? xk +?(t,UB? xk), if a random ? is 0; xk??(t,xk?LB), if a random ? is 1.

(8)  xk is selected for the mutation, LB and UB are the lower and upper bounds of the variable xk. The function ?(t,y) returns a value in the range [0,y] such that ?(t,y) approaches to zero as the generation number t increases.

This property causes this operator to search the space uni- formly initially (when t is small), and very locally at later generations. This strategy increases the probability of generating a new number closer to its predecessor than a random choice at later generations. We use the follow- ing function:  ?(t,y) = y.(1? r(1? tT )? ), (9)  where, r is a uniform random number from [0, 1], T is the maximal generation number, and ? is a system pa-  Table 4 Database with membership values  TID Age Salary Young Middle Old Low Medium High  1 0.8 0.2 0 0.75 0.25 0 2 0.5 0.5 0 0 1 0 3 0.25 0.75 0 0.25 0.75 0 4 0 0.5 0.5 0 0.5 0.5  rameter determining the degree of dependency on the it- eration number. In this paper, ?= 5.

Therefore, the futures of the proposed method com-  pared to other methods are as follows:  ? While most of the data mining algorithms measure the rules by using the support/confidence frame- work, in the proposed method the support, confi- dence and ?2 values are calculated very easily tak- ing into advantage the GNP?s structure.

? It is clarified that classification rules are extracted without identifying frequent itemsets used in most Apriori data mining algorithms, therefore, our method extracts important rules sufficient for user?s purpose in a short time.

? Extracted association rules are stored in a pool all to- gether through generations in order to find new im- portant rules.

? Discover suitable membership functions using an evolutionary method.

? Fuzzy membership values are used for the movement from one judgment node to another.

? Parameters of the membership functions are evolved using non uniform mutation in order to obtain new association rules by performing a more global search in the space of candidate membership func- tions.

? The pool is updated in every generation replacing an association rule with lower ?2 value by the same as- sociation rules with higher ?2 value.

? The final result of the evolutionary process is a fuzzy rule set and a set of fuzzy membership functions.

3. EXPERIMENTAL RESULTS  The database Abalone from UCI Machine Learning Repository was taken in order to evaluate the perfor- mance of our proposed method. The dataset has 4177 records and consists of 8 quantitative attributes and 1 nominal attribute. The quantitative attributes are: length, diameter, height, whole weight, shucked weight, viscera weight, shell weight and rings. The nominal one is the at- tribute sex. Nine attributes are partitioned into three fuzzy attributes: large, middle and small. The attribute rings is the value to predict, which denotes the age of abalone. In order to make classification, it is required to mine fuzzy association rules such us: If (Ai isFiq(Ai))??? ?? (Aj isFjr(Aj)) ? (Z =C)    - 1793 -  where, Fiq(Ai), ...,Fjr(Aj), are qth membership func- tions of fuzzy attribute Ai, ...,Aj, respectively, and the C is the class (C = 0,1,2, ...K).

For instance, If (A1 is Large) ?(A2 is Small) ?(A5 is Medium) ?  (Z = 0).

The number of GNP individulas in the population  is 120. The number of processing nodes and judg- ment nodes are 10 and 78, respectively. We use ?2 = 6.63, supmin = 0.1, and ?new = 150. The probability of crossover and mutation are Pc = 15/78, Pm1 = 1/3 and Pm2 = 1/5 (78 corresponds to the number of judgment nodes). The number of changing the connections of the processing nodes at each generation is 5. The simula- tions were executed for 100 generations and 10 trials are studied here for all the experiments changing the random sequences. All algorithms were coded in Java. Experi- ments were done on a 1.50GHz Pentium M with 504MB RAM.

We randomly select 90% of the records of the database  as a training set and 10% of the records are used for the test set. Since we have 3 classes, i.e.,C = 0,1,2, we mined 903 interesting fuzzy association rules for class 1, 821 fuzzy association rules for class 2 and 958 fuzzy as- sociation rules for class 3. The number of rules per class are the average value in 10 trials. Then, we find the num- ber of rules that satisfy each test record class by class [See Table 5]. Concretely speaking, each attribute in the test set obtains their membership values from the fuzzy table and select the highest value. This highest value defines if the attribute is small, medium or large, then the items of the antecedent of the rules are compared with the items of the above highest value and verify if they match com- pletely. After that, the number of rules that satisfy the test record is counted class by class. Then, the class with the highest number is assigned to the test record, as it is shown in Table 5.

Table 5 Example of the class prediction of the records.

Record Class1 Class2 Class3 Prediction 1 24 5 17 Class1 2 30 90 3 Class2 3 75 35 89 Class3 4 15 50 7 Class2  The classification accuracy is calculated as follows:  Accuracy= Number of records correctly classified Total number of records in the test set  (10)  We get the classification precision 77.55% on the test set. Although the classification precision is not perfect and should be improved further, we claim that the clas- sification precision is acceptable in this high dimensional system with nine attrihutes.

4. CONCLUSION  Compared with traditional classification rules, fuzzy rules provide good linguistic explanation and can deal  with both discrete and quantitative attributes. It pro- vides an alternative approach by reducing the complex- ity of rules and covering more important attributes in the rules. In this paper, a method for discovering fuzzy classification rules using GNP has been proposed. We have performed experiments and estimated the perfor- mance of the GNP based method. Further experiments are required to determine the effectiveness of the result- ing fuzzy membership functions when increasing or de- creasing the number of fuzzy sets defined for every at- tribute in the database.

