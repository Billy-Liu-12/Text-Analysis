Mining Multidimensional Fuzzy Association Rules of  Alarms in Communication Networks

Abstract?In the modern communication network, a fault will bring more than one alarm, an alarm may be caused by different faults vice versa. The relationship between faults and alarms is not accurate but fuzzy, which can not be described and understood using traditional Boolean logic. Also, crisp association rules use sharp partitioning to transfer numerical attributes to binary ones, and can potentially introduce loss of information due to these sharp ranges. As fuzzy sets provide a smooth transition between member and non-member of a set, fuzzy association rules use fuzzy logic to convert numerical attributes to linguistic terms. We first analyze the meanings of each field of network alarms. Then define a fuzzy judge language set as domain set to describe the relationship between the field and the root alarm. After that we integrate fuzzy membership function values and weights of every field of alarm to change alarm database to fuzzy alarm database. At last, we come up with a new fuzzy association rules mining algorithm, which generalizes the popular frequent itemsets based algorithm. The advantages and efficiency of the new algorithm are shown by experiments on a communication network database with alarm transaction records.

Keywords- Communication Networks; Fuzzy Set; Fuzzy Membership Function; Fuzzy Association Rule

I.  INTRODUCTION Data mining is the science of extracting implicit, previously  unknown and potentially useful information from the content of large databases. Mining association rules in networks can find out effective alarm rules which reflect the faults in networks rapidly. It is also validated that the system which provides the user the compact alarm rules with complete information is valuable and useful for fault diagnosis, localization as well as recovery in networks. To the best of our knowledge, this is the first attempt to utilize fuzziness in alarm correlation analysis mining. Applying fuzzy association rules to realize automatic and intelligent of network management can accurately diagnose and locate root alarms, as a result shorten the system recovery time, therefore has a significant meaning.

The rest of this paper is organized as follows. Section covers the background and the related work of our research.

Section presents the proposed multidimensional fuzzy weighted association rule mining (MFWARM) method.

Experimental and comparison results are reported and  discussed in Section . The conclusion and future work are described in Section .



II. BACKGROUND AND RELATED WORK  A. Association Rules Mining association rules is one of the most intensively  studied models for data mining. The basic task in mining for association rules is to determine the correlation between items belonging to a transactional database. In general, every association rule must satisfy two user specified constraints: support and confidence. So, the target is to find all association rules that satisfy user specified minimum support and confidence values. We also call them strong rules to distinguish from the weak ones.

B. Degree of Membership  Given an attribute x and let 1 2  { , ,..., } kx x x x  F f f f= be a set of k fuzzy sets associated with x. Each fuzzy set  jx f in xF  has a corresponding membership function, denoted x j  f? , which represents a mapping from the domain of x into the interval[0,1] . Formally, : [0,1]  x j f xD? ? .

For a given value v of x, if ( ) x j  f v? =1 then v totally and  certainly belongs to fuzzy set jx  f . On the other hand, x j  f?  means that v is not a member of fuzzy set jx  f . All other values between 0 and 1, exclusive, specify a ?partial membership? degree for v.

C. Fuzzy Association Rule Definition After mapping quantitative alarm databases into fuzzy ones,  the fuzzy support of the itemset X is defined as,   1 1,  1( ) ( ) jl  j  mN  f ij i j l F  F Support X v N  ? = = ?  ? = ?        (1)     where N is the number of all records, m is the length of X and ( )  jlf ij v?  means the ? thl ? fuzzy set membership degree for  the ? thj ? item of X in the ? thi ? transaction.

Given two itemsets  11 2 { , ,..., }mX x x x= and 21 2{ , ,..., }mY y y y= ,  the fuzzy support and the confidence for the fuzzy association rule X=>Y are defined as,   1 2  1 1, 1,  1( ) ( ( ) ( )) j jll  j j  m mN  f ij f ij i j l F j l F  F Support X Y v v N  ? ? = = ? = ?  ? = ?? ? (2)  and ( )( )  ( ) F Support X Y  F Confidence X Y F Support X ?? =  ? (3)

III. THE PROPOSED MULTIDIMENSIONAL FUZZY WEIGHTED ASSOCIATION RULES MINING APPROACH  This section includes two parts. The first part is to fuzzify each numerical attribute for alarms into several linguistic terms specified by their membership functions. Then convert the initial data set to fuzzy database by combining membership degrees and weights of all the attributes. The second part provides a fuzzy association rule mining algorithm which can be broken into two steps: find the set of all frequent itemsets with fuzzy support over a threshold, generate all fuzzy association rules with fuzzy confidence over the minimum confidence.

A. Attributes of Alarms As our research is based on the communication system,  there are specific evaluation attributes selected to describe the alarm in communication network. Here we choose:  1) The nodes which occur alarms in the network Obviously, the alarm sent by node which has more  communication routes need to get more attention. By using routing number of nodes to describe the status of them in communication network, we consider both dynamic and distribution of the network. When network topology changing, the relationship between alarm node and root node will change accordingly.

Let 1 2{ , ,..., }nN N N N= be a set of nodes, and the associated routes with them are 1 2{ , ,..., }N nR r r r= where ir is the routing number of node iN . As for fuzzy linguistic terms 1 2{ , ,..., }N kF f f f= , each fuzzy set based on number of routes go through every node is:  ( )  Nk  n  k f j j j  f r r? =  =                        (4)  On the other hand, the fuzzification of each node represent as:  ( ) , 1,2,...,  N j  k  i f i j j  N r f i n? =  ? = =           (5)  and 1 2{ , ,..., }nN N N N? ? ?? =  is corresponding fuzzy node sets.

2) The links where transmit alarms in the network The position of alarm links in network topology is one of  the most important factor, we also use the routing number get through Links to illustrate the state of links in the network.

When a link fails, data transmitted by the link will be affected, the more the routing number is, the greater the impact on the network will be.

Let 1 2{ , ,..., }lL L L L= be a set of links and the related route set is 1 2{ , ,..., }L lR r r r= . For the fuzzy region defined before, the fuzzy sets depend on routing number should be:    ( ) Lk  l  k f j j j  f r r? =  =                           (6)  Also we can get fuzzy link sets as:    ( ) , 1,2,..., L j  k  i f i j j  L r f i l? =  ? = =               (7)  3) The level of alarms In general, there are four levels of alarms: critical, major,  minor and warning, which we use number 4, 3, 2, 1 respectively to show the relative significance among different values of them.

Intuitively, alarm with higher level is closer to the root alarm, i.e. more likely to be the root alarm. If level set is  1 2{ , ,..., }pLv Lv Lv Lv= , the membership function of it for a given fuzzy set is:   ( ) Lvk  p  k f j j j  f lv lv? =  =                       (8)  With the same process, fuzzy alarm level sets are:   ( ) , 1, 2,..., Lv j  k  i f i j j  Lv lv f i p? =  ? = =            (9)  4) The probability density of alarms in a time window Since our alarm transactions are extracted by time windows  with fixed length of 5 seconds, alarm probability densities namely numbers of the same alarm occurs in unit time are used to illustrate the relationship between root alarm and them.

Suppose alarm i happens c times within t seconds, the density of it will be i c t? = (times per second). As for density set 1 2{ , ,..., }qP ? ? ?= , utilizing the membership function in its domain to get fuzzy set like:      ( ) Pk  q  k f j j j  f ? ? ? =  =                   (10)  Accordingly, the fuzzy alarm density sets express as:   ( ) , 1, 2,..., Pj  k  i f i j j  f i q? ? ? =  ? = =           (11)  B. Fuzzifying Numerical Attribute into Linguistic Terms One way of determining membership functions of these  linguistic terms is by expert opinion or by people's perception.

However it depends on the knowledge and experience of field experts, which have the subjective and man-made elements are not always precise and complete, and usually change a lot.

Fuzzy clustering based on self-organized learning can also be used to generate membership functions. Following is an algorithm for generating certain type of membership functions.

Let S be the considered data set of attribute x. We intend to cluster S into k linguistic terms  jx f , j=1,2,?,k. In this paper,  we assume the type of membership to be triangular. Each linguistic term  jx f will have the triangular membership  functions as follows:   1 1  1 1  ( ) ( )  ( ) ( ) ( )   xj  j j j  f j j j  a s a a s  s a a a ? + +  ? ?  ? ? =  ? ?   1 1    , ; , 1  ,  , 1 , ; , 1  j j  j j  j j  j j  s a j k s a j  a s a j k  a s a j  s a j k s a j  + ?  +  ?  ? ? ? ?  < < ?  < < ?  ? = ? =  (12)  The only parameters need to be determined are the k centers 1 2( , ,..., )ka a a . At the initial time, we set k centers distribute evenly on the range of S. Later, the centers will be adjusted like:  1) Randomly take a value s from S and search for an integer m that satisfy: ,1n n n nm js a Min s a j k? = ? ? ?              (13)  2) Put 1 ( )n n n nm m ma a s a? + = + ? and keep other centers  unchanged, where n is the iteration time and ?  is the learning rate. Usually, we set ?   to 0.5.

Let 1 2( , ,..., )kA a a a= , the iteration ends when ( , ) js Sd S A Min s a?= ?               (14)  converges.

For simplicity, all attributes? membership functions subject to the same linguistic terms of fuzzy sets, i.e.

{ , , , , }AttributeF J E H M N F= =  , which means extremely near, near, medium near, not near and far away root alarm from left to right, respectively. Therefore, all the k values aforementioned equal to 5.

C. Integrate Fuzzy Membership Degrees and Weights of Attributes to Set up Fuzzy Alarm Database After calculating proper membership functions of all  attributes, an alarm with multidimensional attributes is represented as ?Composite Item? in fuzzy database. However, it increases the complexity from ( )O n to ( * )O k n compare with crisp database.

In modern networks, some of the alarms' attributes that have different types and QoS requests result in different treatment of alarms. Therefore, the weight of alarms may affect the accuracy and validity of the results directly. Since it is important to know both the degree of relative significance among different values of one attribute and the degree of relative significance among all evaluation attributes, we propose a way to integrate grades of membership as well as weights of attributes together and build a single dimension fuzzy set of each alarm to denote its proximity degree with the root alarm. The suggested method enables to construct objective and effective fuzzy membership sets of alarms which are more flexible, natural and understandable.

Here we format fuzzy relationship matrix of an alarm with evaluation attributes as follows:  1 2 3 4 5  1 2 3 4 5  1 2 3 4 5  1 2 3 4 5  n n n n n  l l l l l R  lv lv lv lv lv ? ? ? ? ?  =              (15)  For the main information fields of alarms, we consider to determine their weights ( , , , )n l lv ?? ? ? ? ?= by the experience and knowledge of network experts. With these weights, we realize a comprehensive evaluation of all information to obtain the overall distribution of fuzzy relationship between fuzzy alarm and root alarm as: A R?? = ? , where ?  is the fuzzy relationship operator and  we apply Zedah operator in this paper.

D. Fuzzy Association Rule  Mining Algorithm In this section, we proposed an algorithm for mining fuzzy  association rules called MFWARM, which has the following inputs and outputs.

Inputs: A database D of the transactions T, each has alarm itemset with m attribute values and corresponding weights? , two threshold values min supf ? and minf conf? , a set of membership functions F.

Output: A list of fuzzy association rules.

1. MFWARM(D, D? ,? ,F, min supf ? , minf conf? ) 2. D? =Mapping(D,? ,F) 3. 1C =Set of 1 itemsets in fuzzy database D?  4. L = 1L ={ 1X X C? and ( )F Support X? ? minsupf ? }     5. Delete item i from D? if 1i L?  6. For(k=2; 1kL ? ? ? ; k++) begin  7. kC =generate candidates( 1kL ? )  8. Prune transaction t  in D?  if t k<  9. kL ={ kY Y C? and ( )F Support Y? ? minsupf ? }  10. kL L L= ? 11. End  12. l L? ? generate set of candidate rules 1 2{ , ,... }nR r r r? =  13. R ={ r r R?? and ( )F Confidence r? ? minf conf? }

IV. PERFORMANCE STUDY All the experiments were performed on a 1.66GHz Core 2  PC with 1GB of main memory, running under Windows XP professional. The algorithm is coded in Java on Eclipse 3.1 development platform.

A.  Generation of Synthetic Alarm Database In our research, we use synthetic database which has  specific topology of communication network to evaluate the performance of different algorithms. After generating alarms, attributes that reflect the faults were picked out to form an alarm item in transactions and redundant alarms were got rid of by alarm compressing. Here also comes to a problem of alarm synchronization which settled by setting time window and slip length. The alarm pretreatment is carried out to transform the alarm database into fuzzy alarm database and get data ready for fuzzy association rules mining.

For each alarm, it has two aspects: one is fixed information such as alarm node (source), alarm link (address), alarm level etc. and the other is fuzzy information i.e. the distribution for linguistic terms of fuzzy sets { , , , , }J E H M N F= . Table 1 shows example alarms in fuzzy database as combination items.

B. Experimental Results In order to control different parameters in the experimental  setup, we use membership functions and weights formed above in the experiment. We study the effect of different values of min supf ? , number of transactions and items, on the processing time for proposed approach to analyze its scalability.

TABLE I.  EXAMPLE OF ALARMS IN FUZZY DATABASE  Name source Address Level Count Fuzzy membership  A 2 202.11.11.1 Major 1 (0.5,0.6,0.5,0.4,0.1) B 15 202.11.25.2 Critical 3 (0.9,0.7,0.4,0.3,0.1) C 3 202.11.14.1 Major 1 (0.6,0.7,0.8,0.3,0.2) D 11 202.11.13.1 Warning 1 (0.2,0.3,0.3,0.4,0.6) E 10 202.11.19.2 Minor 2 (0.3,0.4,0.5,0.8,0.3)  A performance study is carried out for the four algorithms: general fuzzy association rules mining algorithms?  GFARM, weighted fuzzy association rules mining algorithm?MFWARM, level-based fuzzy association rules mining algorithm?LBFARM, and level-based crisp association rules mining algorithm?LBCARM.

The first one treats every attribute of alarms equally and defines the membership degree of alarms as the lowest values among all attributes in each fuzzy set. The second one is suggested algorithm with expert predefined attribute weights  (0.6,0.4,0.8,0.5)? = . The third one uses the same fuzzy alarm database with our method but traditional level wise mining way. The last one finds Boolean association rules in original alarm database with usual minimum support and minimum confidence.

First of all, Fig.1 compares the number of frequent itemsets for different min supf ? . As the value of minimum support increases, the number of frequent itemsets decreases. On the other hand, the curves that correspond to standard ARM extract higher number of itemsets than those of fuzzy ARM. This is because the frequent itemsets generated more accurately reflect the true patterns in the data set than the numerous artificial patterns using crisp boundaries in standard ARM.

Then, Fig.2 displays the decreasing trend of the execution time when the support threshold increases. The execution time decreases because of less searching time. We experienced, MFWARM is about 13.3% to 18.4% and 17.5% to 32.7% faster than LBFARM and LBCARM, respectively. Besides, GFARM is more sensitive to the change of min supf ? than MFWARM since unweighted items affected more easily.

In the following, we generate transactions ranging from 1K to 10K to examine how methods scale up and compare the performance of them. Fig.3 indicates that not only the whole execution time of MFWARM is better than LBFARM, but also with increase of transactions the increasing scope of execution time of MFWARM is less than that of LBFARM, which implies our algorithm is more scalable than others.

After that, the next experiment deals with relationship between the number of frequent itemsets involving some given alarms and their weights are plotted in Fig.4. Here we let the respective weight of the three items (alarm1, alarm2, alarm3) vary, while weights of other alarms hold constantly. Figure 4 shows the number of frequent itemsets grows with the increase of the average attribute weights, which is as we expected. This also means users' subjective preference can be added into the procedure of data mining by adjusting weights.

At last, the curves plotted in Figure 5 demonstrate the change in the number of association rules for different values of minf conf? . The number of rules represented by each of the four curves decreases as the value of the minimum confidence increases. This is quite consistent with our intuition. In addition, it can be easily noted that the curve labeled LBCARM is smoother than all the other curves, i.e., the minf conf? values have large effect on the number of rules mined from databases with fuzzy sets.

Figure 1.  Number of frequent itemsets vs min supf ?            Figure 2.  Execution time with min supf ? scale-up          Figure 3.  Execution time with transactions scale-up              Figure 4.  Number of frequent itemsets vs weights            Figure 5.  Number of association rules vs minf conf?

V. SUMMARY AND CONCLUSIONS The contributions in this paper are:  ? The concept of ?Composite Item? namely multidimensional attributes of alarms in communication network ? Reduce the size of alarm databases using novel pruning strategy which enables us to generate the interesting frequent itemsets with fewer passes and higher speed ? Design proper fuzzy membership function of each attribute by triangular functions to cluster numerical values into k linguistic terms ? Given unique fuzzy set for every alarm by integrating fuzzy membership function values and weights of all attributes.

Experimental results have demonstrated our MFWARM outperforms the classical level-based algorithm. We also found that different rules could be discovered according to weighted or unweighted inputs by users. In the result, the number of rules having alarms with heavy weights is much more than that of rules having light ones. Obviously, we use the algorithm to obtain the interesting rules from the user?s point of view.

Besides, how to build a knowledge representation model by combining fuzzy theory and fuzzy inference technology to get the root alarms in communication network can be further considered.

