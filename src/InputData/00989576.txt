Discovering Representative Episodal Association Rules from Event Sequences  Using Frequent Closed Episode Sets and Event Constraints

Abstract  Discovering association rules from time-series data is an important data mining problem. The number of potential rules grows quickly as the number of items in the antecedent grows. It is therefore dificult for  an expert to analyze the rules and identib the useful. An approach for  generating representative association rules for  transactions that uses only a subset of the set of frequent itemsets called frequent closed itemsets was presented in [6]. We employ formal concept analysis to develop the notion of frequent closed episodes. The concept of representative association rules is formalized in the context of event sequences. Applying con- straints to target highly signi$cant rules further reduces the number of rules. Our approach results in a sign@cant re- duction of the number of rules generated, while maintaining the minimum set of relevant association rules and retaining the abili9 to generate the entire set of association rules with respect to the given constraints. We show how our method can be used to discover associations in a drought risk man- agement decision support system and use multiple climatol- ogy datasets related to automated weather stations'.

minimizing the number of association rules discovered [2].

Most of these approaches introduce additional measures for interestingness of a rule and prune the rules that do not sat- isfy the additional measures, as a post-processing step. A set of representative association rules, on the other hand, is a minimal set of rules from which all association rules can be generated, during the actual processing step. Usually, the number of representative association rules is much smaller than the number of all association rules, and no additional measures are needed for determining the representative as- sociation rules [4].

Recently, Saquer and Deogun developed a different ap- proach for generating representative association rules [6].

Similarly, Zaki [8] used frequent closed itemsets to gener- ate non-redundant association rules in CHARM.

We use closure as the basis for generating frequent sets in the context of sequential data. We then generate se- quential association rules based on representative associa- tion rule approaches while integrating constraints into our approach. By combining these techniques, our method is well suited for time series problems that have groupings of events that occur close together in time, but occur relatively infrequently over the entire dataset. We apply this technique to the drought risk management problem.

1. Introduction 2. Frequent Closed Episodes  Discovering association rules is an important data- mining problem. The problem was first defined in the con- text of the market basket data to identify customers' buy- ing habits [ 11. The problem of analyzing and identifying interesting rules becomes difficult as the number of rules increases. In most applications the number of rules discov- ered is usually large. Two different approaches to handle this problem have been reported: 1) identifying the associ- ation rules that are of special importance to the user, and 2)  'This research was supported in part by NSF Digital Government Grant No ,EIA-0091530 and NSF EPSCOR, Grant No. EPS-0091900.

Our overall goal is to analyze event sequences, discover recurrent patterns of events, and generate sequential associ- ation rules. Our approach is based on the concept of repre- sentative association rules combined with event constraints.

A sequential dataset is normalized and then discretized by forming subsequences using a sliding window [ 5 ] .  Using a sliding window of size 6, every normalized time stamp value xt is used to compute each of the new sequence values yt-6/2 to ylt+6/2. Thus, the dataset has been divided into segments, each of size 6. The discretized version of the  0-7695-1119-8/01 $17.00 0 2001 IEEE 603  mailto:cse.unl.edu mailto:f@smsu.edu mailto:tadesse@unlserve.unl.edu   time series is obtained by using some clustering algorithm and a suitable similarity measure. Each cluster identifier is an event Qpe, and the set of cluster labels is the class of events E .

The newly formed version of the time series is referred to as an event sequence. An event sequence is a triple ( tB ,  t o ,  S )  where tB is the beginning time, to is the ending time, and S is a finite, time-ordered sequence of events [5].

p is the step size between each event, d is the total number of steps in the time interval from time t g  to time to, and D = B + dp.  Each et, is a member of a class of events E, and t ,  5 tz+l for all i = B ,  . . . , D - l p .  A sequence of events S includes events from a single class of events E.

A window on an event sequence S is an event subse- quence W = {e t7 , .  . . , e t k } ,  where t B  5 t,, and tk 5 tD + 1 [5]. The width of the window W is width(W) = t k  - t,.

The set of all windows W on S, with width(W) = wzn is denoted as W ( S ,  win).  The width of the window is pre- specified.

An episode in an event sequence is a combination of events with a partially specified order. The type of an episode is parallel if no order is specified, and serial if the events of the episode have a fixed order. An episode is injec- tive if no event type occurs more than once in the episode.

We extend the work of Mannila et al. [5] to consider closed sets of episodes. We use formal concept analysis as the basis for developing the notion of closed episode sets [6]. Informally, a concept is a pair of sets: set of objects (windows or episodes) and set of features (events) common to all objects in the set.

That is, s = (etn 1 Q / 3 + I S , ,  eto+np, ' ' . etr3+dp = et,, 1, where  Definition 1 An episodal data mining context is defined as a triple (W(S ,  win) ,  E ,  R )  where W ( S ,  win) is a set of all windows of width win defined on the event sequence S , and E is a set of episodes in the event sequence S ,  and R C w x E.

Definition2 Let (W,E,R)  be an episodal data mining context, X C W ,  and Y C E. Define the mappings a, p as follows: p : 2'" -+ 2", Q : 2E -+ 2'",  p ( X )  = { e  E E I (w, e )  E R b' w E X } , a (Y )  = {w E W 1 (w, e )  E R b ' e  E Y } .

The mapping p ( X )  associates with X the set of episodes that are common to all the windows in X .  Similarly, the mapping a ( Y )  associates with Y the set of all windows containing all the episodes in Y .  Intuitively, p ( X )  is the maximum set of episodes shared by all windows in X and a(Y)  is the maximum set of windows possessing all the episodes in Y .

It is easy to see that in general, for any set Y of episodes, p(a(Y))  # Y .  A set of episodes Y that satisfies the condi- tion p(a(Y))  = Y is called a closed set of episodes [6].

The frequency of an episode is defined as the fraction of windows in which the episode occurs. Given an event sequence S ,  and a window width win, the frequency of an episode P of a given type in S is:  I w E W ( S ,  win) : P occurs in w I f r (P ,  S ,  win) = I W ( S , w i n )  I  Given a frequency threshold min.&-, P is frequent if f r ( P , S ,  win) 2 min-fr.  A frequent closed set of episodes (FCE) is a closed set of episodes that satisfy the minimum frequency threshold. Closure of an episode set X C E ,  denoted by closure(X), is the smallest closed episode set containing X and is equal to the intersection of all frequent episode sets containing X .

To generate frequent closed target episodes, we develop an algorithm called Gen-FCE, shown in Figure 1.  Gen- FCE is a combination of the Close-FCI algorithm [6], the WINEPI frequent episode algorithms [ 5 ] ,  and the Direct al- gorithm [7]. Gen-FCE generates F C E  with respect to a given set of Boolean target constraints B, an event sequence S, a window width win, an episode type, a minimum fre- quency minyr, and a window step size p .  The Gen-FCE algorithm requires one database pass during each iteration.

I )  Generate Candidate Frequent Closed Target Episodes of length I (CFC1.a);  2 )  k = l ; 3) while (CFCk,a # 8) do 4)  Read the sequence S, one window at a time,  let F C E k , a  be the elements in CFCk?B with a new closure, and with a frequency 2 minfr  5)  6) k + + ;  Generate Candidate Frequent Closed Target Episodes CFCk+l.Bfrom FCEk,t3  7) return U,=1 k -  1 (FCE,,p.closureandFCE,,B. f requency);  Figure 1. Gen-FCE algorithm.

We incorporate constraints similar to the Direct algo- rithm [7]. This approach is known to work well at low minimum supports and in large datasets [7]. This approach requires an expensive cross-product operation, so for dis- junctive singleton constraints, the candidate generation al- gorithm is used [5] .

3 Representative Episodal Association Rules  We use the set of frequent closed episodes F C E  pro- duced from the Gen- FCE algorithm to generate the repre- sentative episodal association rules that cover the entire set of association rules [4].

The cover of a rule r : X + Y ,  denoted by C(r) ,  is the set of association rules that can be generated from r. That     is, C(r : X + Y) = { X U U  + V 1 U , V  Y, U n V = 8, and V # 8). An important property of the cover operator stated in [4]is that if an association rule r has support s and confidence c, then every rule r? E C(r ) has support at least s and confidence at least c.

Using the cover operator, a set of representative associ- ation rules with minimum support s and minimum confi- dence c, RAR(s ,  c),  is defined as follows: RAR(s ,  c) = {r E AR(s ,c )  I fir? E AR(s ,c ) ,  r # r? and r E C(r?)}. That is, a set of representative association rules is a least set of association rules that cover all the association rules and from which all association rules can be generated.

Clearly, AR(s ,  c) = U{C(r )  I r E RAR(s ,  c )} .

Gen-REAR shown in Figure 2, is a modification of the Generate-RAR [6] that generates R E A R  for a given set of frequent closed episodes FCE with respect to a minimum confidence c.

min-fr  0.05 0.10 0.15 0.20 0.25  1) FCE; 2 )  while(k > 1) do 3) Generate REARk, by adding each rule X + Z \ X such that (Z.support/X.support 2 c and X + Z\X is not covered by a previously generated rule  5) return REAR;  k = the size of the longest frequent closed episode in  4) k + + ;  Candidates Freq. Closed Iters time ? Episodes (SI  17284 3950 6 6932 4687 629 5 205 1704 229 4 10 807 102 4 1 567 58 3 1  Figure 2. Gen-REAR algorithm.

Using our technique on multiple time series while con- straining.the episodes to a user-specified target set, we can find relationships that occur across the sequences.

4 Empirical Results  We are developing an advanced Geospatial Decision Support System (GDSS) to improve the quality and acces- sibility of drought related data for drought risk management [3]. Our objective is to integrate spatio-temporal knowledge discovery techniques into the GDSS using a combination of data mining techniques applied to geospatial time-series data by: 1 )  finding relationships between user-specified tar- get episodes and other climatic events and 2) predicting the target episodes. The REAR approach will be used to meet the first objective. In this paper we validate the effective- ness of the REAR approach to find relationships between drought episodes at the automated weather station in Mead, NE, and other climatic episodes, from 1989-1999. We com- pare it  to the WINEPI algorithm [ 5 ] .  We use data from nine sources, including satellite vegetation data and precipitation and soil moisture data.

We experimented with several different window widths, minimal frequency values, minimal confidence values, for  both parallel and serial episodes. When using constraints, we specified droughts as our target episodes. The experi- ments were ran on a AMD Athlon 1.3GHz PC with 256 MB main memory, under the Windows 2000 operating system.

4.1 Gen-FCE vs. WINEPI  Tables 1 and 2 represent performance statistics for find- ing frequent closed episodes in the drought risk manage- ment dataset for Mead, NE with various frequency thresh- olds for injective serial drought episodes with a 2 month window using the Gen- FCE and WINEPI algorithms, re- spectively.

Table 1 min-fr  0.05 0.10 0.15 0.20 0.25  Gen-FCE serial episode performance.

Candidates Freq. Closed Iters time  Episodes (s) 525 77 3 2 335 24 2 1 153 10 2 1 93 6 2 0 83 5 2 0  Gen-FCE performs extremely well when finding the drought episodes. The number of frequent closed episodes decreases rapidly as the frequency threshold increases. For the sample dataset at a frequency threshold of 0.10 and a window width of 2 months, Gen-FCE produces 6 frequent drought serial episodes while WINEPI produces 1600% more ( 102) episodes.

Because we are working with a fraction of the possi- ble number of episodes, our algorithms are extremely ef- ficient. When finding all frequent drought episodes for the sample dataset using a window width of 5 months, the running time was 1 second for Gen-FCE and 6 hours for WINEPI. This illustrates the benefits of using closures and constraints when working with the infrequently occurring drought events.

As the window size increases, so does the frequent episode generation time and the number of frequent     episodes. When using drought constraints, the increase is at a much slower pace than WINEPI. For the sample dataset and a window width of 3 months, Gen-FCE produces 53 frequent drought serial episodes while WINEPI produces 5779% more (3 1 16) episodes.

4.2 Gen-REAR vs. WINEPI Association Rules  We next experimented with finding association rules in the drought risk management dataset for Mead, NE with various confidence thresholds and window widths using the Gen-REAR and WINEPI AR algorithms for injective par- allel and serial episodes. The number of rules decreases rapidly as the confidence threshold increases and increases rapidly as the window width widens. In all cases, Gen- REAR produces fewer rules than the WINEPI AR algo- rithm. Using the Gen-REAR approach, all the rules can be generated if desired, even though the meaning of the addi- tional AR?s is captured by the smaller set of REAR?s.

Gen-REAR performs extremely well when finding drought episodal rules as shown in Table 3. The number of REAR?s decreases rapidly as the confidence interval in- creases. For the sample dataset at a confidence threshold of 0.20 and a window width of 2 months, Gen-REAR pro- duces 24 drought parallel episodal rules while WINEPI AR produces 20892% more (5038) rules. With the same param- eters, Gen-REAR produces 14 drought serial episodal rules while WINEPI AR produces 16257% more (2290) rules.

Table 3. Gen-REAR parallel and serial rules.

\I I Parallel 1 Serial fl L  Confidence Distinct Distinct threshold rules rules  0.20 24 14 0.25 24 12 0.30 19 9 0.35 13 7 0.40 10 6 0.45 8 5  Confidence threshold   A5 the window width widens, Gen-REAR overwhelm- ingly produces fewer rules than the WINEPI algorithm. The number of REAR?s increases as the window width. For the sample dataset at a window width of 3 months, Gen- REAR produces 30 parallel drought episodal rules while WINEPI AR produces 53763% more (16159) rules. With the same parameters, Gen-REAR produces 8 serial drought episodal rules while WINEPI AR produces 24825% more (1994). The savings are obvious. The Gen-REAR algorithm finds the drought REAR?s for all reasonable window widths and confidence levels on the Mead, NE drought risk man- agement dataset in less than 30 seconds. As the window  widens, the WINEPI AR algorithm quickly becomes com- putationally infeasible to use for the drought risk manage- ment problem.

5 Conclusion  This paper presents Gen-REAR, a new approach for gen- erating representative episodal association rules. We also presented Gen-FCE, a new approach used to generate the frequent closed episode sets that conform to user-specified constraints. Our approach results in a large reduction in the input size for generating representative episodal associ- ation rules for targeted episodes, while retaining the ability to generate the entire set of association rules. We also stud- ied the gain in efficiency of generating targeted representa- tive episodal association rules as compared to the traditional WINEPI algorithm on a multiple time series drought risk management problem.

