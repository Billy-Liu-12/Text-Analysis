Uncertainty Rule Generation on a Home Care Database of Heart Failure Patients

Abstract In this paper we present the Uncertainty Rule  Generator tool and the algorithm used. This data- mining tool generates uncertain@ rules as apart of the Knowledge Discovery in Databases process and is tested upon a home-care datobase containing data fiom congestive heart failure patients over a period of approx. 10 months.

This algorithm can handle dynamic dato without the need of recovering the itemsels @om the beginning, This is highly appropriate for a home-care monitoring system, where new recorh are constantly added, Moreover it can deal with missing values, since it uses flexible metrics, similar to those of other Association Rule algorithms. Finally this algorithm computes a Certainty Factor for each atracted rule, which is representative of ils eficiency. In a firture step, this atracted rule can be used on newly entered data, in order lo predict the missing values, while its Certainty Factor will allow the exact estimation of error in this prediction.

1. Introduction Knowledge Discovely in Databases (KDD) is of  increasing interest for medicine, because it can extract the knowledge hidden in big medical databases by discovering regularities and exceptions. A well-known KDD technique are the association rules [1,2], which relate the presence of items in transactions. One classic example is the rules extracted from the content of market baskets. In this example, items are the things bought in a market and transactions are the whole market baskets containing several items. The association rules describe which things are usually bought together with other things.

Common to the association rules are also the uncertainty rules. The form of those rules is easy to understand ?IF A THEN B WITH CF?, where A, B are the itemsets and CF is the certainty factor. The role of the certainty factor is to represent the efficiency of each rule, that is how ofkn it is applied. This feature makes similar rules more appropriate for relative  sciences, like medicine.

Currently, most of the existing algorithms [1,2] for  generating associations among the attributes describing the data in a database have a number of shortcomings: they mandate multiple passes over the initial database assuming a static database. However, many applications in medicine require generating ~ associations in dynamic databases, where new records are constantly being added (e.g. in our case a home- care monitoring system). Furthermore, the aforementioned algorithms cannot deal with missing values.

In dynamic databases, it is hard to maintain the discovered rules, since the continuous updates may not only invalidate some already existing rules but also produce other rules relevant. To date, some solutions to this problem are presented in the literature 13-51. but the need for dealing effectively with missing values still exists.

In this paper we present the Uncertainty Rule Generator (URG) tool and the algorithm used, namely LJRG-2, which is an evolution of 161, for incrementally updating the uncertainty rules when new records are added, even if the database contains missing values.

2. Helpful defmitions Let I be a set of items and T a set of transactions  with items in I, both assumed to be fiate. Let ?IF X THEN Y WITH CF? be an uncertainly rule, where X,YcI, X,Y#0 and XnY=0. This rule means ?CF% of the transactions in T that contain X, contain also I??.

The main idea upon tackling the problem of missing values is to ignore records containing missing values for each corresponding itemset separately, in order to avoid missing important information.

Definition 1: We note B(2) the subset of B containing 2, i.e B(Z)=(weB/G w).

Definition 2: If a transaction teT contains missing values for at least one item of 2, then t is disabled for 2 in the database B. We note B,&) the subset of B disabled for 2.

As a consequence, the metrics probability and conditional probability have to be calculated taking in  Let B be a Database and 2 a set of items.

02764547103 $17.00 0 XI03 IEEE 765 computers io cnrdlolm u)(u;30:765-768.

account the tramactions disabled for each itemset in a rule. Below, new defGtions for the above metrics are given, fully compatible with [7].

Definition 3: The Probability PX of an itemset X in a  database B with missing values is:  Definition 4: The Conditional Probability Pm or Certainty Factor (CF) of the rule ?IF X THEN Y? in a database B with missing values is:  3. Method The used URG-2 algorithm from the URG tool  generates relations between the data for a heart failure patient in an understandable form. The more important advantages of this algorithm for a home-care monitoring system are that it:  Can handle dynamic data without the need of recovering the already existing itemsets from the beginning.

Can deal with missing values, since it uses flexible metrics.

Computes for each extracted rule a certainty factor, which represents its efficiency.

The algorithm consists of two ~arts.  The first  art scans the-data and fmds the existing itemsets. h e second part generates the unc?ertainty rules whose probability and conditional probability are higher than a user-specified threshold.

3.1. Itemset generation algorithm Our idea is to preprocess the database and create the  itemsets with the information needed for uncertainty rule generation. Once the itemsets are created there is no further need to access the original database again.

The main aim of the first part, the Itemset Generation algorithm (IC) is to be able to deal with dynamic databases. As mentioned above, in a home- based care monitoring system, where new records? are added very often, the need for this kind of algorithm is high. Updating the itemsets when the database is changed is fast and simple without the need of recovering the itemsets from the beginning. In addition, the facts that it makes only one pass over the initial data set and that it deals.with missing values are some other important advantages for the IG algorithm.

We present a novel idea for generating the itemset.

The IC algorithm stores the needed information into two list structures with itemsets, one for the itemsets with missing values and one for the itemsets without missing values. In Figure 1 we show the main idea for the IC algorithm.

Itemset-Gmera tion-algorithm I for all records R in Database B do 2 if R is the first record 3 then add R as the first node 08 4 else scan each node in the list to  find common values with R  IO I 1   16 endfor Figure I .  1G Algorithm  if a node with the common values already exists then increase by one n,.count else add a new node nm  if R contains missing values then if a node already exists that bas the same common values and the same missing values then increase by one mk.count else add a new node mp  if there is no node exactly matching R in the list then if R contains no missing values  then add at the end of the list a new node nm with all values of R  else add at the end of the list a new node m, with all values of R  The itemset generation algorithm creates smaller itemsets than other algorithms, for example the ones based on the apriori algoritlh. Thus, if the itemset {a, b, c)  is found in 5 records, then the itemset {a, b]  will not be mined unless it is found in more than 5 records.

This way, no redundant rules are mined.

3,2. Rule generation algorithm The main aim of the second part is to mine from the  already generated itemsets those uncertahty rules whose probability and conditional probability are higher than thresholds specified by the user. The used mtrics are,pose in Definitions 3 and 4. The needed informahon?is taken from the list data structure. In Figure 2 the main smcture of the Rule Generation algorithm (RG) is described. The defmitions of the symbols that are used in Figure 2 are in section 2.

Rule-Generation-algorithm I for each node n, in the Itemset List with  no missing values do 2 find IB( - [B&)(  if the Probability Px of n, is high enough then number of items i c l for all possible combinations of the attributes, that have i items at right, find those with high enough Conditional Probability Pny  6 , endfor 9 endfor Figure 2. RG Algorithm  if at least one item was found then i+t  and goto 5    4. The home care system The database that was used for this study was  collected at the Lab of Medical Informatics in Thessaloniki, Greece. It consists of records of patients who participated in the Citizen Health System (CHS) project between September 2001 and January 2003 [8].

CHS is a home care system constructed around an automated Contact Center functioning as a server.

Patients can communicate with it via a variety of interfaces, like public telephone, Internet or a mobile device. In this project patients record with the help of electronic microdevices and transmit to the Contact Center the values of their vital parameters (continuous variables), and yesho answers to simple questions regarding mostly the occurrence of certain symptoms (boolean variables). In such a database, missing values are due mainly to technical problems or improper use of the various interfaces and are considered random.

During the period of this study, 11 Congestive Heart Failure (CHF) patients participated for 8-13 months and were sending once a week their ECG and tbree times a week values of the parameters described in Table 1. The primary purpose was to monitor the condition of the patients and help them avoid hospital readmissions.

Table I. Values transmitted to the Contact Center.

Vital parameters (continuous) Systolic blood pressure Diastolic blood pressure Pulse Weight Temperature Questions asked (boolean) Did you feel breathless during the night?

Are your feet swollen?

Do vou feel more tired todav?

-  Do you have dyspnoea today?

Did you take your heart failure medication?

5. The URG tool Since medical data is highly confidential,  transferring it from the Contact Center was avoided, so as not to compromise its safety. For this purpose, a clienu'server architecture was used in the implementation of the URG tool, were the use of the client is password-protected, as well. More specifically, the queries are defmed on the client but are executed on the server. Only the results are returned from the server to the client so as to be viewed by the user.

An intuitive Graphical User Interface (Figure 3) was designed to help the physician-user choose one of the available patients and also select among the corresponding parameters the ones that will be used in  the rules to be mined.

Since the URG algorithm works with categorical data, the answers to the questions were used as such, but the numeric data were transformed into 3 categories (low, medium, high) in order to correspond with the usual categorization physicians use in their everyday practice. The cut-off scores applied are customized for each patient and each parameter and can be selected by the physician. The latter can either choose specific values for each categorization or can rely on statistical information (like average, st. deviation, and percentage of values in a normal distribution) provided by the tool in order to define the ranges of the categories in a uniform way (Figure 4).

Average. 79.28 s, Oevintioiv 3.55  ' 1 ,  .

Figure 4. Definition of categories  The user can also set the probability and conditional probability thresbolds that will decide which of the rules mined will be finally viewed. The results screen presents the corresponding rules in an easily comprehensible way along with a sunumfy  of the data, the categories and the metrics used.

6. Results The standard metrics of 10% minimum probability  and 75% minimum conditional probability were     applied to generate rules for the values transmitted by the 11 CHF patients of the study. For comparison purposes, the data of each numeric variable of each patient was categorized so that the middle 40% of the values, according to the normal distribution, would fall in the medium category, while the low and high categories would cover 30% of the values respectively.

Using these metrics a mean of 3668.4 ruleslpatient were mined (ranging from 2606 to 5528). The number of rules depended on the variance of the data transmitted by each patient, especially their answers to the questions, while it was not correlated with the number of contacts, due to the categorization method.

The most relevant, i.e. logical or interesting, of those rules were selected by one of the authors, a medical doctor. Some of the induced rules represent everyday knowledge in medicine or can be explained by common sense. For example, in patient number 1 (#1) low systolic blood pressure (SBP) occurred together with low diastolic blood pressure (DBP) or with low pulse, as well (CF 75% and 81.8% respectively); while patient #4 used to report together breathlessness during the night with dyspnoea and tiredness during the day (CF of their combinations from 80% to 100%).

Other rules were more interesting, in the way that they predict subjective symptoms based on objective signs or vice versa for a specific individual, e.g. patient #7 reported feeling tired, when either his SBP, DBP or pulse were high (CF 87.8%. 86.7% and 86%) or a combination of the three at once. Patient #11 in the same way, complained about daytime dyspnoea whenever his DBP was up, his pulse was rapid or his feet where swollen (CF 78.6%, 75% and 90.9%). On the other hand, for patient #8 the elevation of her SBP could be ?predicted? by her tiredness and the swelling of her feet (CF 88.9% for both), which of course tended to o c a  simultaneously (CF 80.6%). These rules may indicate to the patients a way to avoid or understand the appearance of disturbing symptoms or ?foresee? relatively elevated values of their vital parameters.

Of course, given the limitations and specifics of the available data, and the biases of the expert choosing the importance of the rules mined, the induced rules should not be considered as applicable to all CHF patients.

This paper should only be viewed as a methodological study suggesting how to use this new algorithm on similar databases.

7. Conclusions Contrary to previous algorithms mentioned before,  the ability of URG to generate associations in dynamic databases combined with its effective manipulation of missing data makes it ideal for medical applications, l i e  home care centers, as it is already demonstrated.

At the present time, work is done on several points to  improve the use of rules in URG. One point is to try to determinate the optimum thresholds and categorization criteria. As the URG tool will become more automated, the physician will have the opportunity to concentrate more on the interpretation and evaluation of the rules.

Another point will be the use of this algorithm to fill the missing values on newly entered data in dynamic databases, enabling URG to become a tool for the data cleaning step of the KDD process.

Acknowledgements This work was supported in part by the EC projects  ITV and by the program PROMESIP funded by the Ministry of Education (EPEAEK I).

