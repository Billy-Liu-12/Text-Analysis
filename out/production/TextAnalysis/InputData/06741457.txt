Efficient Data Delivery based on Content-Centric  Networking

Abstract? Content-centric networking has been recently proposed to define a new networking architecture where the content itself becomes the core of communications rather than the address or location. In terms of availability and efficient delivery of data, content-centric networking has been the main focus to a great extent. Currently, the content-centric networking architecture for the wireless environment is not yet clearly defined. In this paper, we propose a possible architecture for multimedia content delivery in the wireless environment, which is based on content-centric networking. We also present simulation results to show that the proposed architecture works well in the wireless network.

Keywords ? multimedia, content naming, data delivery

I.  INTRODUCTION The Internet has been greatly successful ever since its creation and has become a highway for globalization and an effective means for networking various devices and distributing services and knowledge. Its size, complexity, and the role it plays in the modern world have far exceeded the initial expectations. It is now a complicated and constantly expanding structure that has become an essential part of our lives, work, communications, and entertainment. The high complexity and expansion of the structure imply more exchange of contents, collaboration, and interactions. To meet the needs of various applications such as voice/video over IP, crowdsourcing, social networks, and video sharing, researchers are trying to define a new Internet architecture which can support high availability, heterogeneity, mobility, security, and so on. Due to the rapid advancement of the Internet and wireless mobile technologies, mobile Internet users are able to access multimedia data and social information in a fast manner, and stay connected with various mobile applications and services.

Basically, there are two types of approaches to access multimedia content on the Internet. The first one is based on the improvement of the current host-based Internet architecture i.e., content delivery network (CDN) and peer-to-peer (P2P) network. The second one is based on a content-based Internet architecture, i.e., information centric networking (ICN) or content-centric networking (CCN) architecture.

CDN is built on top of the IP?s host-to-host communication model where several dedicated servers store all the data published. Contents exist in multiple copies within strategically dispersed cache servers close to the user. So CDN increases the hit ratio of the content and also minimizes the service delay in delivering the requested content. However, CDN can be inefficient as it has the central authority to control content dissemination in an IP-to-IP communication model.

P2P is a distributed network model in which each node (peer) acts as a client and also as a server. With the P2P model, services and contents are shared among the interconnected peers. P2P is also an IP-based networking paradigm which causes the similar concern on the host-to-host communication model.

Typically, users are not much interested in the location itself from which contents are provided, but instead they are more interested in how soon they can access the desired content. To focus on this objective and to overcome the challenges in the massive amount of content distribution, CCN or ICN has recently gained much interest in the research community.

Nowadays a large volume of multimedia contents are exchanged on the Internet and comprise about 60% of the total Internet traffic. Wireless networks are also becoming overloaded with multimedia contents due to the increasing number of mobile devices such as laptops, tablet PCs, and smart phones and are facing various communication challenges to provide efficient, reliable, infrastructure-independent, and scalable content delivery services. To provide efficient content delivery, it has been emphasized to focus on the content itself and decouple the content from the host in various research projects, e.g., NDN, PERSUIT, DONA, and NetInf. However, the CCN architecture is not yet clearly defined in the wireless environment. In this paper, we propose an architecture for multimedia content delivery in the wireless environment, which is based on content-centric networking. The rest of the paper is organized as follows. Section II describes the recent work related to content-centric networking, and Section III presents an architecture for content delivery in the wireless network. Section IV discusses performance issues, and Section V concludes the paper.



II. RELATED WORK There is a growing interest in content-centric networking for efficient content delivery. DONA [3] introduces data centric networking by replacing the concept of DNS in the traditional host-based Internet architecture. DONA proposes a flat, self- certifying name based approach. Each node is associated with a public-private key pair and its content is named using the form of node?s public key: the node?s signature of data. These names are application independent, unique, and ensure content integrity. DONA employs the Resolution Handler (RH) server to index the content provided by the content provider, and hosts are attached with a RH and make a query to the RH for requesting the content. Consequently, DONA reduces the applicability of name-based networking because it is actually location-based, always connected to a RH, and also for each connection it requires session re-establishment.

Network of Information (NetInf) [4, 5] follows the similar naming approach as DONA and also relies on a name resolution service. The published content objects of the content provider use a self-certifying identifier to the locators for later content discovery. NetInf uses Multilevel DHT (MDHT) [6] for name resolution and content lookup and also for global routing in the DHT area. However, NetInf reduces its scope by increasing its dependency on the name resolution system which is responsible for managing registration, updates, and accumulation of names. It requires a re-binding for the wireless environment similarly to DONA.

PERSUIT [2] proposes a publish/subscribe architecture that is comprised of three key components: Rendezvous, Topology and Routing. A Rendezvous Network (RN) comprises Rendezvous components which are interconnected by Rendezvous Identifier (RI) and Scope Identifier (SI) in a tree structure. The RN is responsible for publications and defines its scope based on the RI and SI.  The RN makes a name resolution on a request that can map an identifier to a published content. Then the Topology component constructs a path to the content source and the Routing component transfers the content using the source routing mechanism [7].

Similarly to NetInf, it also follows the name resolution based routing structure.

CCN [1] is based on the communication to find the nearby locations where the content is available instead of the source- destination communication scenario. Therefore, CCN can provide anytime, anywhere communication with any available content. In CCN, contents are accessed using hierarchically arranged name components that are generated by the content providers. An Interest Packet which includes the content name is broadcast towards all the available content providers? CCN nodes. Any node that has the original or a replicated copy of the requested content can respond to the request by sending the content.



III. AN ARCHITECTURE FOR EFFICIENT DATA DELIVERY IN THE WIRELESS ENVIRONMENT  Although CCN is a promising architecture for efficient data delivery, it is still an evolving concept. In this section, we present a possible CCN-based architecture for content delivery in the wireless environment.

A. Content Naming    Fig. 1. Naming   The main principle of CCN is that a content is accessed  using the content name rather than the host address, and thus content naming is a very important issue in CCN. With the exponential growth of multimedia contents on the Internet, it is difficult to find and organize relevant contents in an efficient way. Therefore, it is important to provide a universal naming scheme that is flexible and provides a low delay in retrieving or identifying the content. Our proposed architecture follows a hierarchical structure for content naming, e.g., ?/hufs.ac.kr/videos/miss_imp.mpeg /V<1, 2>/S<1, 2>?. V and S represent version and segment, respectively, and the number of naming components is not limited. It is fully flexible for the content provider and takes the shape shown in Fig. 1. The CCN content names also implicitly contain the SHA-256 digest of the content to provide unique and data integrity.

B. The Node Model Each node in the network has three basic functional  elements for content-centric communication: Content Store (CS), Forwarding Information Base (FIB), and Pending Interest Table (PIT) as in [1].

CS maintains the relation between the content name and stored content at the local cache of a CCN node. In our proposed architecture, we divide the CS into two elements CS Index (CSI) and CS Repository (CSR). CSI holds the content name, Content Memory Pointer to the CSR, the Time-to-Live (LV), and the Number of Accessed Times (NAT). CSR holds the corresponding content only. We extended the traditional CS for increasing the flexibility of content management and content replacement. The basic structure of CS is shown in Fig.

2.

FIB contains the necessary information to forward an Interest Packet to the appropriate next hop, which is similar to the routing table of the host-based network architecture. It contains all the next hop interface IDs for each reachable content. The basic structure of FIB is shown in Fig. 3.

PIT is a fundamental structure to preserve the state of the received Interest Packet. It records all incoming interface IDs for unsatisfied Interests so that it can satisfy the Interest later as soon as the content is available. Each PIT entry also holds the Time-to-Live (LV) to maintain its freshness. The basic structure of PIT is shown in Fig. 4.

Fig. 2. Content Store (CS)     Fig. 3. Forwarding Information Base (FIB)     Fig. 4. Pending Interest Table (PIT)    C. Components of the Proposed Architecture      Fig. 5. Proposed Architecture    The proposed CCN architecture is comprised of Smart Base Stations (SBS), Smart Routers (SR), Content Servers, and Mobile Devices as shown in Fig. 5. There is no centralized intelligent controller, and the mobile devices are connected with SBSs using the X1 wireless interface. SBSs are connected  to SRs using the X2 wired interface, and Content Servers are connected to the SRs using the X3 wired interface. The main reason for distributing the intelligence among the base stations in our proposed architecture is to reduce the response time for content delivery even during the handover. All the components in the figure follow the basic structure of the CCN node model.

D. Routing CCN enables content name based routing without knowing  the host address. This means that the contents are disseminated across the network; mobile devices retrieve the desired content by requesting with the appropriate content name; the content will be provided from the most appropriate content source.

? Message Type: CCN uses two types of messages for communication, namely, Interest Packet and Data Packet.

The Interest Packet is used to request for a particular content, and the content provider provides the requested content based on the content name. The Interest Packet contains the content name and other identifiers, e.g., type, version, author, etc. Data Packets are used to transmit the requested content to the requester as a response to the Interest packet. Data Packets also contain the digitally signed information for protecting the content and respecting the content publisher.

? Content Publication: Content Providers may allow only valid requesters to access and store data by publishing the data items with a valid name. Each content is assigned a unique attribute for different categories of data items.

? FIB Entry Manipulation: The FIB prefix is learned in two ways. First, the content provider may broadcast or multicast the content prefix to the nearby neighbors. Second, each node may learn the FIB prefix using the response of the pending Interest Packet.

? Content Request: Content requesters broadcast an Interest Packet to the nearby SBSs or SRs with the desired content name. A SBS or SR receives the Interest Packet, looks up its CS for the requested content. If a matching content is found, then it will be sent out via the arrival interface as a response to the Interest Packet. If the matching content is not found in the CS, a lookup is performed in the PIT. If there is an already existing PIT entry for the corresponding Interest Packet for the same arrival interface, the Interest Packet is discarded and the lifetime of the PIT entry is updated. If there is an already existing PIT entry for the corresponding Interest Packet but the arrival interface is different, then a new PIT entry for the arrival interface is added to the PIT and the Interest Packet is discarded. If there is no matching PIT entry, then a lookup is performed in the FIB. If there is a matching entry found in the FIB for the requested content, a new PIT entry is added to the PIT by assigning the lifetime that adjusts the time-to-live (LV) of the PIT entry, and the Interest Packet is forwarded to the interfaces available in the FIB. An Interest Packet is forwarded to a single interface using the round-robin fashion to reduce the response time for the same content from different providers. It also makes faster retrieval of a large volume of multimedia contents by requesting small chunks of the contents from different content providers. If     there is no match found in the FIB, the Interest Packet is discarded, which means that there is no way to satisfy the content request. As shown in Fig. 6, Steps 1-5 and 9 are related to the content request.

? Contents Retrieval: Contents are delivered back to the content requester using the forwarding route of the Interest Packet to the content source. When a Data Packet is received by the base station or router, it looks up its CS. If a matching entry for the received content is found on its CS then it discards the content because the content is duplicated and received previously. If there is no corresponding matching entry in the CS, it looks up its PIT to find any Interest unsatisfied for the corresponding content. If there is a match in the PIT, the content is stored in the CS and forwarded to the interfaces in the PIT. After successful forwarding, the PIT entry is removed.  If there is no match found in the PIT, the content is discarded and not processed further. As shown in Fig. 6, Steps 6-8 and 10 are related to the contents retrieval.

?   Fig. 6. Routing in the Proposed Architecture

IV. SIMULATION RESULTS We implemented the proposed architecture using NS-3 and CCNx [1] on a Linux Ubuntu environment. The primary goals of our implementation were to show the performance characteristics of the proposed architecture with respect to CCN functionalities in the wireless environment and to ensure that the proposed architecture works well with the CCN functionalities in the various wireless networks, e.g., Wi-Fi, LTE. The proposed architecture delivers the content to the requesters that are interested in the particular content in a fast manner. We used Response Time as a key performance indicator, and it is normally measured from the time at which a user requests a content to the time at which the content is provided. Note that the network capacity and types of traffic flows may affect the response time. Another key performance indictor is throughput, which is calculated using the total number of bytes received by the content requesters per unit time.

A. Scenario 1 Fig. 7 shows a heterogeneous network simulation topology  for Scenario 1 where the content server has a 6MB file, and remote user devices want to get the file. All user devices with number 1 start to download the file at 10 sec, and all user  devices with number 2 start to get the file at 13 sec. Scenario 1 is to show how well the proposed architecture works with the smart base stations when the mobile clients download the file.

Fig. 7. Simulation Topology 1        Fig. 8. Simulation Result 1     Fig. 8 shows the result of simulation based on Scenario 1. It takes almost 19 seconds for all the user devices to download the file at 10 sec. However, the file transfer time, i.e., response time, is much shorter than the download at 10 sec because of caching at smart base stations. When the file download happens simultaneously at 10 sec, the channel which connects the content server and the router suffers from traffic congestion.

However, for the second attempt to download the file at 13 sec, the user devices got the file from their base station rather than the content server.

Fig. 9. Simulation Topology 2      B. Scenario 2 Fig. 9 shows the second simulation topology for Scenario 2  where a 6MB file is contained in the content server and UEs download the file simultaneously from the content server.

While increasing the number of UEs, we measured the average download time for the content. Fig. 10 shows the simulation result for Scenario 2 where we compared the performance of CCN-based architecture (ccn_results) and the current Internet architecture (tcp_results). As shown in the figure, as the number of UEs is increased, the performance of the CCN- based architecture is better in terms of average download time.

Fig. 10. Simulation Result 2

V. CONCLUDING REMARKS In this paper, we proposed a possible architecture for multimedia data delivery in the wireless environment, which is based on content-centric networking. The key components of the architecture include smart base stations, routers, and content access mechanisms. The proposed architecture can provide efficient data delivery and therefore reduce the  response time significantly. We also presented simulation results to show that the proposed architecture works well in the wireless network.

