This full-text paper was peer-reviewed and accepted to be presented at the IEEE WiSPNET 2016 conference.

Abstract? A social networking site such as Facebook, Twitter, and Linked In generates a terabyte of data. The Frequent Itemset Mining (FIM) is most well known technique to extract knowledge from data. Mining terabytes of data using Frequent Itemset Mining technique on a single computer is not efficient.

MapReduce framework is used for mining such large data in a parallel manner. MRApriori, IMRApriori, BigFIM, ClustBigFIM, MREclat are used for Frequent Itemset Mining with MapReduce framework. In this paper we have discussed different Frequent Itemset mining algorithms with MapReduce framework and compared in terms of scalability, speedup and execution time.

Index Terms ?Frequent Itemset Mining (FIM), MapReduce framework, Apriori algorithm, Eclat algorithm, Social network data

I.  INTRODUCTION Frequent Itemset Mining (FIM) is most popular technique  in data mining and data analysis for extract frequent itemset  from dataset. Frequent Itemset Mining is very useful in some  data mining task such as association mining, multidimensional  patterns mining, sequential pattern mining, correlation, and  many other mining tasks [1].

Social networking sites generate terabytes or more data per  day. This type of data referred as Big Data which have high  volume, high velocity and high verity of information. It would  be lucrative for companies for knowing the words that are more  occurring in particular discussion. Dataset size of social  networking sites is very large which is not mining with single  computer. Because it have limitation like RAM, processor and  storage space.

Mining such large data needs parallelization for improving  performance. But when parallelization used several issues such  as load balancing, data partition and data distribution, job  assignment and job monitoring occurs [1]. For effectively  handle such issues MapReduce framework used.

MapReduce framework is proposed by Google in 2014 for  processing large amount of data in distributed manner [2].

MapReduce model is a programming model and written in C++  [3]. It handle load balanced, fault tolerance, data distribution  and partition very effectively so that user only focus on the  mining algorithm [1]. It has 2 function, map function and  reduce function. Map function on each node take input as  key/value pair and give local frequent itemset in key/value pair  which is given o the reduce function as a input. Reduce  function combine key/value pair and generate global key/value  pair [1, 3].

Fig. 1 Hadoop based MapReduce Architecture [2]  Hadoop MapReduce is a software framework for parallel  processing of large dataset on multiple computer nodes.

Hadoop is an open source framework proposed by Google for  store and process Big Data in a distributed manner using  number of computer with simple programming model [3].

Hadoop Distributed File System (HDFS) store and process Big  Data. HDFS is high fault tolerance and designed using low-  cost hardware [2]. MapReduce splits whole dataset into  number of equal sized blocks and distributed it to the multiple  nodes. Map function fetch key/value pair from HDFS and  generate intermediate key/value pair. These key/value pair is  given to the reduce function for combine value for same key  which are fetched from multiple nodes. These whole  procedures are shown in Fig. 1.



II. RELATED WORKS Several Frequent Itemset Mining Algorithms with  MapReduce framework are introduced to extract frequent  itemset from Big Data. Here we discuss some of FIM  algorithms and compared in terms of speedup scaleup and  execution time.

This full-text paper was peer-reviewed and accepted to be presented at the IEEE WiSPNET 2016 conference.

A. MapReduce Apriori algorithm (MRApriori) MRApriori algorithm is based on Hadoop-MapReduce  model for extracting frequent itemset from large dataset.

MRApriori algorithm has 2 phases for extracting frequent  itemset from large dataset [3]. MapReduce library splits whole  dataset into equal sized splits and allocate split to computation  nodes. In phase 1 each node apply Apriori algorithm to their  splits with partial minimum support count equal the minimum  support count multiplied by number of transaction in the splits.

And generate intermediates key/value pair where key is partial  frequent itemset and value is partial count. These intermediate  key/value pair is given to reduce function. Reduce function  gives partial frequent itemset list (Lp) [3].

As shown in Fig. 2 Lp is given as input to Map workers  (nodes) in phase 2. Then Map function of each nodes count  occurrence of each element of partial frequent itemset (Lp) in  split and give output as key/value pair where key is element of  Lp and value is total occurrence of key in split. These key/value  pair given to reduce function as an input and it combine value  of same key and give global frequent itemset as a key/value  pair where key is global frequent itemset and value is total  occurrence in whole dataset [3].

Fig. 2 Data flow of MRApriori algorithm [3]  MRApriori algorithm gives high speedup and scaleup as it  use MapReduce model but it requires more execution time  because of more partial frequent itemset in Lp.

B. Improved MapReduce Apriori algorithm (IMRApriori) IMRApriori algorithm modify the reduce function of phase  1 of MRApriori algorithm. In reduce function of phase 1  estimate support count as follows [1].



X.globalsupportCount ? (X.supportCount + (((s x Di) x  (M - Nx))              (1)  Where s is given minimum support threshold, Di is split of  dataset, M is total number of mapper and Nx is number of  mapper outputting frequent itemset X.

Due to estimated support count number of key/value pair in  Lp is less as compare to MRApriori algorithm so it take less  execution time in phase 2 for finding global frequent itemset  [1]. All other step for extracting frequent itemset is same as  MRApriori algorithm.

C. BigFIM BigFIM algorithm is combination of Apriori and Eclat  algorithm for mining frequent itemset from large dataset. It  has 3 steps for mining frequent itemset [4].

1) Generating k-FIs: BigFIM solve the problem of large tid-lists by generating k-FIs using Apriori algorithm. In this  step each mapper node receive split of dataset and then it  apply Apriori algorithm to generate local frequent itemset and  given to the reduce function. Reduce function combine local  frequent itemset, purned some itemset due to less support  count compare to minimum support count and generate global  frequent itemset. This global frequent itemset is redistribute to  mapper as a candidates itemset for next level of Apriori  algorithm. This procedure can be continuing k times to find k-  FIs.

2) Finding Potential Extensions: This step generate global tid-list for (k+1)-FIs. Mapper fined local tid-list for k-FIs and  gives it to reduce function. Reducer combines local tid-lists  and makes global tid-list and assign complete prefix group to .

3) Subtree Mining: This step apply Eclat algorithm to prefix groups and generate (k+1)-FIs.

BigFIM overcome the problem of Dist-Eclat such as it not  requires whole dataset in memory to mine Subtree. So BigFIM  gives high scaleup but speedup is low because of when  candidate itemset is more in greater depth, than it not fit into  main memory.

D. ClustBigFIM                     Fig. 3 Block diagram of ClustBigFIM algorithm [2]  ClustBigFIM algorithm is combination of k-means, Apriori  and Eclat algorithms [2]. As shown in Fig.3 k-means  clustering algorithm apply to input dataset and generate     This full-text paper was peer-reviewed and accepted to be presented at the IEEE WiSPNET 2016 conference.

number of clusters. Then apply 3 step of BigFIM algorithm as  we discussed above.

Due to first apply k-means algorithm and apply Apriori  algorithm to separate cluster, less candidate itemset fit into  memory which overcome speedup limitation of BigFIM.

E. MREclat MREclat algorithm use Eclat algorithm with vertical layout  dataset [5]. Advantage of vertical layout dataset as compare to  horizontal layout dataset is that it has not requires over  scanning whole dataset for finding frequent itemset. MREclat  is MapReduce based Eclat algorithm for mining frequent  itemset from large dataset. It has 3 steps for extract frequent  itemset [5].

1) The Initial Step: Map function of this step convert transaction database (Horizontal database) into vertical  database. Reduce function give frequent 2-itemset and their  tid-lists.

2) Balanced Group: For good load balance partition items into balanced groups based on weight of each item.

Weight of each item is calculated using following equation.

wi =                       (2)  Where n is the number of frequent 2-items prefixed by A.

We sort those frequent 2-itemsets prefixed by A in the lexicographic order, and use  to denote the length of list of the jth frequent 2-itemset.

After we compute all the w for each frequent 1-itemset, we sort the tuples consisted by the frequent 1-itemset and its  weight by the value of weight in a descending order. Then  MREclat uses a greedy strategy to divide the tuples into  groups, each group associated with an id.

3) The Redistribution and Parallel Eclat Step: Map function of this step redistributes frequent 2-itemset with same  prefix into same node. Reduce function find frequent 2-itemset  with its prefix using Eclat algorithm.



III. COMPARATIVE ANALYSIS Comparison of various MapReduce based FIM algorithm  shown in table I. As shown in table I MRApriori and  IMRApriori algorithm gives high speedup and high scaleup  because it uses MapReduce framework and require less number  of scan to extract frequent itemset. But IMRApriori algorithm  take less execution time as compare to MRApriori algorithm.

In IMRApriori algorithm number of partial frequent itemset in  Lp is less so phase 2 of IMRApriori algorithm take less  execution time to extract frequent itemset from dataset.

TABLE I. COMPARISON OF MAPREDUCE BASED FIM ALGORITHM  Algorithm Speedup Scaleup Execution Time  MRApriori High High More  IMRApriori High High Less  BigFIM Low High Less  ClustBigFIM High High More  MREclat High High More    BigFIM gives high scaleup as it not require whole dataset  for mining a sub tree in Eclat algorithm. But it gives low speed  up as in greater depth size of candidate itemset increase which  is not fit into memory for mining k-FIs using Apriori.

ClustBigFIM overcome the problem of low speedup of  BigFIM such as using k-means algorithm for generate cluster  and then apply other step of BigFIM. But ClustBigFIM takes  more execution time as it needs to execute k-means, Apriori  and Eclat.

MREclat algorithm gives high speedup and scaleup because  it use a vertical layout dataset in which it require less number  of scan as compare to horizontal layout dataset. But MREclat  algorithm takes more execution time because it require to  convert horizontal layout dataset to vertical layout dataset first  and then after apply another steps.



IV. CONCLUTION In this paper we analyzed and studied various FIM  algorithms such as MRApriori, IMRApriori, BigFIM,  ClustBigFIM, MREclat used with MapReduce framework for  mining Big Data. IMRApriori algorithm gives better result in  terms of speedup, scaleup and execution time.



V. REFERENCES [1] Farzanyar, Zahra, and Nick Cercone. "Efficient mining of  frequent itemsets in social network data based on MapReduce  framework." In Proceedings of the 2013 IEEE/ACM Analysis and Mining, pp. 1183-1188. ACM, 2013.

[2] Gole, Sheela, and Bharat Tidke. "Frequent Itemset Mining for Big Data in social media using ClustBigFIM algorithm."  on, pp. 1-6. IEEE, 2015.

[3] Yahya, Othman, Osman Hegazy, and Ehab Ezat. "An efficient implementation of Apriori algorithm based on Hadoop-  Mapreduce model." InProc. of the. 2012.

[4] Moens, Sandy, Emin Aksehirli, and Bart Goethals. "Frequent  itemset mining for big data." In Big Data, 2013 IEEE  [5] Zhang, Zhigang, Genlin Ji, and Mengmeng Tang. "MREclat: An Algorithm for Parallel Mining Frequent Itemsets." In Advanced pp. 177-180. IEEE, 2013.

