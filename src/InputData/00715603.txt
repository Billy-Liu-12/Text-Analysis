FOOM: A Fuzzy Object-Oriented  Modeling for Imprecise Requirements

Abstract-  One of the foci of the recent develop- ment in object-oriented modeling (OOM) has been the extension of OOM to fuzzy logic to  capture and analyze informal requirements that are imprecise in nature. In this paper, a novel approach to object- oriented modeling based on fuzzy logic is proposed to formulate imprecise requirements along four di- mensions: (1) to extend a class by grouping objects with similar properties into a fuzzy class, (2) to en- capsulate fuzzy rules in a fuzzy class to  describe the relationship between attributes, (3)  to  evaluate the membership function of a fuzzy class by considering both static and dynamic properties, and (4) to model fuzzy associations between classes. The proposed ap- proach is illustrated using the problem domain of a meeting scheduler system.

Keywords: Fuzzy logic, imprecise requirements, object-oriented modeling technique.



I. INTRODUCTION  One of the foci of the recent developments in objecboriented modeling (OOM) has been the ex- t,ension of OOM to fuzzy logic to capture informal requirements that  are imprecise in nature. Rum- baugh and his colleagues have argued that  OOM is a way of thinking about problems using models orga- nized around real-world concepts which are usually espressed in natural languages. As Zadeh pointed out, in [14], it  is evident that  almost all concepts in or about natural languages are almost fuzzy in na- ture. Several researchers such as Dubois e t  al. [4]!

George et  al.  [6] and Lano [ll] have further advo- cated that object classes with fuzzy memberships values are therefore a natural representation frame- work for real-world concepts.

As a continuation of our previous work 1121 in using fuzzy logic as a basis for formulabing im- precise requirements, we propose, in the paper, a fuzzy object-oriented modeling technique (FOOM) t.o capt,ure and analyze imprecise requirements. In FOOM, we have identified several kinds of fuzziness that. are required to model imprecise information in- volved in user requirements: (1) classes with impre- cise boundary t,o describe a group of objects with  similar attributes, similar operations and similar re- lationships; (2) rules with linguistic terms that are encapsulated in a class to describe the relationships between attributes; (3) ranges of an attribute with linguistic values or typical values in a class to define the set of allowed values that  instances of that  class may take for the attribute; (4) the membership de- gree (i.e. ISA degree) between an object and a class, and between a subclass and its superclass (i.e. AKO degree) can be mapped to the interval [O,  11; and (5) associations between classes that an object instance may participate to some extent.

In the next section, different kinds of fuzziness rooted in FOOM are fully discussed in Section 11.

Related work is described in Section 111. The ben- efits of our approach is summarized in Section IV.

The notations used throughout the paper is an ex- tension of Unified Modeling Language (UML).

11. FUZZY OBJECT-ORIENTED MODELING A .  Inside a Fuzzy Class  Traditionally, a class is used to describe a crisp set of objects with common attributes, common opera- tions and common relationships. In order to model the impreciseness rooted in user requirements, we extend a class to describe a fuzzy set of objects (called a fuzzy class), in which objects may have similar attributes, similar operations and similar re- lationships, for example, a set of interesting books or a class of clever students. In the meeting scheduler syst,em, the class ImportantPartmpant is modeled as a. fuzzy class, that  is. a part,icipant, may be an important one to a degree.

A fuzzy class in FOOM is an encapsulation of a number of properties that  can be classified as static properties or dynamic ones'. Static properties are viewed as integral features of an object. t,hat exist, for its lifetime including identifier. attributes and operations. On the other hand, dynamic properties  approach [SI.

We have adopted this classification scheme from Zenith  0-7803-4453-7/98 $1 0.00 0 1998 IEEE   http://csie.ncu.edu    A-  Fig. 1. An Example of a Fuzzy Class  are optional for an object and can be short-lived such as fuzzy rules2 and fuzzy relationships.

Since a fuzzy class is a group of objects with simi- lar static properties (i.e., attributes, operations) and similar dynamic properties (i.e., relationships and rules), the membership degree of an instance to a fuzzy class is dependent on the properties, especially the values of attributes and the values of link at- tributes. In our example, the degree that a person belongs to  the class ImportantParticipant depends on his status and his role in the meeting he attends.

The domazn of an attribute is the set of all values the attribute may take, irrespective of the class it falls into; whereas, the range of an attribute in a class is defined as the set of allowed values that  a member of a class may take for the attribute. The range of an attribute ai in the class C is denoted as R.(ai, C). In FOOM, the fuzziness in the range of an attribute in a class may be due to either a linguistic term or a typical value.

e A class may be fuzzy for the linguistic values its attributes can take. For example, the class YoungMan has a fuzzy range for the attribute age ,  since a person may take y o m g  or very young as values for his age.

The range of an attribute is fuzzy because some of its values are deemed as atypical (i.e. less possible than other values), there- fore, each value the attribute may take is as- sociated with a typical degree3. In our exam- ple, the class ImportantParticipant has  a fuzzy range {s tudent /0 .4 ,  sta f f/0.7, facultyll} for the attribute status. which means that  a faculty is typically an important participant, and a stu- dent is an important participant with a typical degree of 0.4.

Using fuzzy rules is one way to deal with impreci- sion where a rule's conditional part, and/or the con- clusions part. contains linguistic variables. Fuzzy rules are a n  optional feature for a fuzzy class in  FOOM and are thus classified as a dynamic prop- erty. Fuzzy rules can be used to describe the internal relationship between attributes inside a class. For example, rules in Figure 1 describes the relationship between the attributes role and padicipant impor- tance.

B. Fuzzy Classification  We extend crisp class memberships to  fuzzy class memberships by allowing the existence of perceptual fuzziness. The notion of inheritance and its impact on the perceptual fuzziness are also elaborated.

B. l  Subclassing and Subtyping Inheritance plays an important role in object-  oriented analysis and design. Generally, inheritance is separated into two different concepts: implemen- tation inheritance and subtyping inheritance. Im- plementation inheritance refers to  the sharing of representation and implementation code between a subclass and its superclass. In contrast, subtyping refers to  some kind of conformance between a sub- class and its superclass in terms of their interfaces.

Subclassing is concerned with how a class is im- plemented, that is, a new class is constructed from a parent class by reusing some or all of the par- ent's operations [l]. In general, a subclass can be constructed through extension, redefinition and re- striction. On the other hand, a type defines an ab- stract interface and can be viewed as the specifica- tion of objects behavior. In the specification level, the subtype-supertype relationship can be defined in terms of the weak form of the principle of substi- tutability.

Subclassing and subtyping are not necessarily re- lated [l], namely, a subclass may be of different typ- ing relationships: subt.ype, same type or supertype, to its superclass. In FOOM, a subclass is guaran- teed to  be either a subtype or a same type of its superclass, that  is, the weak form of the principle of substitutability is maintained.

B.2 R.elationship between Classes and Subclasses  As the weak form ofsubstitutability is maintained in FOOM, a subclass is constructed through e s k n d - ing new operations, redefining the inherited opera- tions, or modifying the inherited attribute ranges.

In the first two cases, since an instance of a sub- class possesses all properties that its superclass has.

it is also an instance of its superclass, namely, the AKO degree is equal to 1. In the case of modifying the inherited attribute ranges, the attribut,e range in the superclass may include the attribute range in the subclass to some extent, that is, an instance  'Encapsulating rules in an object is also proposed in SOMA 181. . -  'The notion of typical values is adopted from [4]. of the subclass can be an instance of its superclass      to a degree. Therefore, we will focus our attention on the case of modification for computing the AKO degree below.

The perceptual fuzziness is investigated by eval- uating its static properties and dynamic properties.

The criticality of an  attribute indicates the relevance of the attribute tp a perceptual fuzziness. For ex- ample, the attribute participant importiince is more relevant than the attribute status while examining if a participant is an  important one, therefore, it is as- signed a higher criticality. To determine the critical- ity of attributes, we utilize the Analytic Hierarchy Process, which compares pairwise attributes accord- ing to their relative criticality. We use C R I ( a i ,  C) to denote the criticality of an  attribute a, to  the perceptual fuzziness for the fuzzy class C.

The membership degree of a class in its superclass has to account for the criticalities of the attributes and the degree of inclusion of the range of each at- tribute of the class in that  of its superclass. Sup- posed that the class C is a superclass of the class D.

The membership degree of the class C in the class D is denoted as A K O ( D ,  C), and defined as  A K O (  D ,  C )  = C R I ( a , ,  C )  x AKO, ,  ( D ,  C ) + a , E A t t ( C )  E ,  EA( C )  b J E A t t (  <C,EI, >)  where A ( C )  is the set of classes associated with C,  A t t ( C )  is the set of attributes in C ,  and Att(< C, Ek >) is the set of link attributes in the associ- at,ion < C ,  Ek > which is established between the classes C and Ek. The degree AKO, , (D,  C) is the AKO degree with respect t o  (wrt) the attribute ai and A K O b j ( D , C )  refers to  the AKO degree wrt to the link attribute b j .  Both static properties (object attributes) and dynamic properties (link attributes) are required for computing the membership degree of an object, in a class.

To calculate AIiO,,(D, C), we need to examine whether the fuzziness of R(ai,C) is of the type of linguistic terms or typical values. In the case of linguistic terms, the membership degree is defined as the fuzzy inclusion of R(ai,  D )  into R(ai, C ) :  AKO, ,  ( D ,  C )  = I N C r ( R ( a , ,  C ) I R ( a , ,  D))  The degree of inclusion of fuzzy sets is defined as  In the case of typical values, the membership de- gree is defined by a fuzzy inclusion based on Godel's fuzzy implicat,ion:  ,4fi-Oa, ( 0 , C )  = I N C G ( R ( ~ , ,  C:)IR(a,.  0 ) )  The fuzzy inclusion I N C c j i l l B )  between the fuzzy sets A and I3 is defined as:  I N C G ( A I B )  = i n f ~ ( ~ ( l g ( ~ )  - P A ( S ) )  Note that INC(R(a;,C)IR(ai,D)) = 1 if  the attribute a; in the subclass is included in the corresponding range of its superclass. More specif- ically, the subclass inherits attributes from its par- ents by specializing their ranges.

Similarly, to  calculate AKOb, (D, C), we also need to examine whether the fuzziness of R ( b j  , < C,  Ek > ) is of the type of linguistic fuzziness or typical val- ues. In the case of linguistic terms, the membership is defined as the fuzzy inclusion of R ( b j  , < D ,  Er: >) into R(b, , < C, Ek >):  t f S , P R ( a , , D ) ( S )  5 PR(a,,C)(S), that is, the range of  A K O b , ( D , C )  = I N C I ( R ( b , , <  C , E k  >)IR(b,,< D , E k  >))  In the case of typical values, the degree is defined as I N C G ( R ( ~ , ,  < c , E k  >)IR(b,, < D,Ek >)).

B.3 Relationship between Classes and Objects  The class membership between an object and a class is crisp, that is, the ISA degree of an object to a class is either 1 or 0. In FOOM, a perceptual fuzziness between an object and a class is allowed.

An object may belong to a class to a degree. In the meeting scheduler system, a person may belong to the class ImportantPartzcapant to some extent.

The perceptual fuzziness of an object to a class is investigated by evaluating its static properties and dynamic properties. In our example, the member- ship degree of a person to the class ImportantPartac- zpant can be obtained by checking his status and his partzczpant zmportance in the meeting he attends.

The membership degree of an object 2 in a fuzzy class G is denoted as I S A ( 2 ,  C), and defined as:  I S A ( z , C )  = C R l ( a , , C )  x I S A , , ( z , C ) + a , E A t t ( C )  ( C R I ( b , . C )  x I S A b J ( z , C ) ) E,+ EA( C )  b )  E Att(  C,EI ,  )  The degree I S A a , ( z ,  C) is the membership degree of the object z in the class C with respect to (wrt) the attribute ai, and ISAbJ (z, C) refers to the mem- bership degree wrt to the link attribute b j .

To calculate ISA,, (2, C), we also need to examine whether the fuzziness of R(a; ,C)  is of the type of linguistic terms or typical values. In the case of linguistic terms, the membership degree is defined as the degree of inclusion of the value of ai of x int.0 the range of ai in C,  that is,  I S & ,  (z, c) = I]VCr(R(a, .  C)lv(R,, Z))  where V ( a , ,  z) is the value of z for a,. In the case of typical values, the membership degree is defined  To calculate the membership degree wrt to a link attribute. we also need to check to see whether the  as P R ( a , , C ) V ( a i J ) .

Fig. 2. An Exampk of Perceptual Fuzziness-for ISA Rela- tionship  fuzziness of the range of the link attribute?s values is of the type of linguistic terms or typical values. In the case of linguistic terms, the membership degree is defined as the degree of inclusion of the value tha t bj takes for the link < x, e > into the range of bj in < C,  Ek >, where e is an instance of Ek connected with the object x:  I S A s j ( x ,  C )  = I N C r ( R ( a ; ,  < C ,  Ek > ) l V ( a ; ,  < z, e >))  In the case of typical values, the degree is defined as  In our example, supposed that  we have the follow- PR(a,  , < C , E k > ) V ( %  1 x).

ing information in the meeting scheduler system:  R ( s t a t u s ,  I P )  = ( s tudent l0 .4 ,  s t a f j l 0 . 6 ,  f a c u l t y l l . 0 ) R(pi, < IP ,  Mee t ing  >) = important V ( s t a t u s ,  J o h n )  = student ,  V ( r o i e ,  J o h n )  = s t a j f V ( p i ,  < J o h n ,  MlOl  >) = less important C R l ( s t a t u s ,  I P )  = 0.3, C R l ( p i ,  I P )  = 0.7  where p i  is the abbreviation of the attr ibute par t ic ipate  i m p o r t a n c e ,  and IP is the abbreviation of the class I m p o r t a n t p a r t i c i p a n t .  To calculate the membership degree of a participant John to the class IP (abbreviated as I F ) ,  we first calculate the mem- bership degrees wrt the attributes status and pi.

ISA,t,t,,(John, I P )  = ~ ~ f y ~ ~ ~ ~ ~ ~ , l p ) ( s t u d e n t )  = 0.4; and  ISA,;( J o h n ,  IF?) = INC(important1iess  impor tan t )  = 0.6  Therefore, we have ISA(John,  I P )  = 0.54. I t should be noted tha t  the importance degree of John is dynamically determined by the meeting he at- tends. The  example above describes that:  ?John is a more or less important participant (since the degree is 0.54) for the meeting M101?.

C. Associat ions In traditional object-oriented approaches, only  crisp associations are introduced, namely, an object either participa.tes in an association or not at all.

A n  association A between classes C1 and Cz can be defined as a set of links:  A ( C I , G Z )  = {(< Z . Y  >)lz E c i , ~  E Cz}  An association in FOOM is defined by a set of links and their corresponding degree of participatzon reflect. the intensity that  2 and y participate in the association. Supposed that -4 is an association be- tween class C1 and C.??, we define  A ( C I , C 2 )  = l ( ( z . Y ) . P A ( z , Y ) ) l z  E cl,Y E c2)  where p ~ ( z ,  y) is the degree of participation of the link < x , y  >. In  our example, if the degree of par- ticipation ~ p r e f e r ( i ~ , ~ o c a t i o n ) (  J o h n ,  L102)=0.9, it means that the degree John prefers the location L102 is 0.9.

111. RELATED WORK A number of researchers have reported progress  towards the successful integration of fuzzy logic and object-oriented modeling, which can be classified into three categories based on their intended mod- eling purposes:  A. Knowledge representation for AI  systems.

Lano has proposed to combine fuzzy reasoning  and object-oriented representation for the real-world information [ll]. A knowledge base is organized as a class hierarchy for representing concept categories, each class corresponds to a fuzzy set, whose mem- bership functions is the proximity metric defined for the class. Learning is the process that  transforms a knowledge base and a new example to a new knowl- edge base.

To support an approximate reasoning in sys- tems based on prototypical knowledge representa- tion, Torasso and Console have defined a formal- ism for the representations and a general evaluation mechanism to deal with the form of knowledge [13].

Each frame has three kinds of weighted attributes: necessary, sufficient and supplementary. The  evalu- ation mechanism is based on fuzzy logic: the fuzzy match between prototypical description and sets of da ta  is based on possibility theory and the relevance measure of each slot.

B. Data modeling for database systems.

In [4], Dubois and Prade have advocated that classes can be intensionally described in terms of at- tributes which are distinguished between the range of allowed values and the range of typical values.

The  degree of inclusion between a class C1 and a subclass Cz is computed by comparing the ranges or the typical ranges of C1 with the ranges or the typical ranges of Ca. Three kinds of inheritance are proposed: typical inheri tance,  normal inheritance and atypical inheritance.

In [9], the problem of object recognition is viewed as a classification problem? which is characterized by an objected-oriented knowledge representation and control strategies based on fuzzy pattern matching procedures. Taxonomies of classes are represented by hierarchies of frames. Which class matching the unknown object is decided by fuzzy matching theory based on possibility theory. The  matching process is seen as a quantification of similarity and differ-      ences of both objects, and the computation of these measures strongly depends on the types of the pro- totypes and object fields and the weight of each field.

Bodogna e t  al. [2],propose a Fuzzy Object Ori- ented model for management of crisp and fuzzy data. Their work develops a fuzzy graph-based data model, which intends to generalize a graph model so that imprecision $nd uncertainty can be-managed at different levels. To formulate imprecise queries and retrieve precise or imprecise object with a degree of plausibility associated with them, fuzziness in man- aged in two level: imprecise in the data  themselves and knowledge of the data, i.e., uncertainty in the information on the data.

C. Object-oriented modeling for conventional sofl- ware systems.

George et  al. have utilized the ranges of fuzzy values of classes and objects for computing the de- gree of inclusion and membership, respectively [6].

To measure the class memberships, a similarity met- ric is formulated to measure the nearness between at,tributes? values in a superclass and its subclasses.

Graham [7] has focused on the derivation of un- known values of attributes through the use of a- kind-of relation (AKO), generalized modus ponen and defuzzification techniques [7]. In Graham?s work, the notion of an object is extended to that of a fuzzy object in two ways: (1) attributes? values may be fuzzy, and (2) AKO is a matter of degrees.

The AKO degree between classes is assumed to be known by a system, and unknown attributes? values are derived through AKO, generalized modus ponen and defuzzification techniques.

In [lo], the focus has been on the representation of uncertain information based on a generalized fuzzy sets notation. Gyseghem et al. represent. fuzzy in- formation as fuzzy sets and uncertainty by means of generalized fuzzy set. A generic class Fuzzy-Set is introduced to capture fuzziness associated with at,tributes. Uncertain information is modeled by a kind of generalized fuzzy sets in which each element of the universe is associated with a fuzzy truth value {p,ltrue, n/ false}.

However, none of these work is devot.ed to the development of an object-oriented technique for in- formal requirements. but either t,o the formulation of class memberships (e.g. [4], [TI), or t,o the rep- resenta.tion of prototypical knowledge as in  [13]. [9].

Furthermore, features of object orientation are not.

fully explored in these work. Types of fuzziness i n consideration are also somewhat limited.



IV. CONCLUSION As was pointed by Borgida et al. [3], a good re-  quirement modeling approach should take the prob- lem of describing natural kinds into account; fur- thermore, Zadeh have indicated that almost all con- cepts in or about natural languages are almost fuzzy.

In this paper, we have proposed an approach to in- corporating fuzzy concepts into object-oriented sys- tems for modeling imprecise requirements. Our ap- proach offers two major benefits: (1) extending tra- ditional object-oriented techniques by incorporating different kinds of fuzziness that. are rooted in user requirements; and (2) providing a more flexible ap- proach to evaluating the class memberships by tak- ing both static and dynamic properties into account.

ACKNOWLEDGE  This research was supported by National Sci- ence Council (Taiwan, R.O.C.) under grants NSCS?i- 22 13-E008-0 19.

