Reliable On-Demand Geographic Routing Protocol  Resolving Network Disconnection for VANET

Abstract? High mobility of vehicular node which is one important feature of VANET makes high dynamics of topological structure for vehicular network, leads to frequently disconnection of multi-hop route in ad hoc network, and brings big challenges to reliability of routing algorithm and quality of data transmission. Thus we propose a position-based routing algorithm for VANET called on demand geographic routing (ODGR), which suits for highway scenarios. ODGR uses two new mechanisms to make sure information about positions of the destination nodes and neighbors valid and accurate when choosing next hop, and finally guarantee the reliability of routing algorithm: (1) ODGR uses two independent messages to realize update of position information about the destination.

(2) ODGR uses the idea of on-demand to build the neighbor table. We compare the performance of AODV and ODGR using network simulator NS-2, with a specialized node mobility model simulator called VanetMobiSim to produce realistic vehicular movement trace. The final results prove that: on the highway, when node moves with acceleration of 4.9m/s2 and at max speed of 50m/s, ODGR outperforms AODV by a factor of 1.7.

Key words: vehicular ad hoc network, position-based routing, on-demand, multi-hop route, node mobility model

I. INTRODUCTION Vehicle Ad hoc Network (VANET) is distributed,  self-organizing communication network built up by moving vehicles, and is thus characterized by very high mobility of nodes and limited degrees of freedom in nodes movement patterns. Communication between vehicles could improve traffic safety for drivers and passengers. As a result of the high dynamics, routing of data in VANET is a challenging task. By now, the routing protocols proposed for VANET can be classified into two categories: the topology based and the position based. Ad hoc On demand Distance Vector routing protocol (AODV) [1] and Greedy Perimeter Stateless Routing (GPSR) [2] are typical representatives for them. However, both have shortcoming in the state of the high mobility. Much cost will be taken on establishing and maintaining the routes in AODV. Moreover, the convergence rate of route algorithm affects the quality of the data transmission seriously. The greedy forwarding may cause the problem of local maximum. Furthermore GPSR doesn?t  consider affection brought by the movement; the location service mechanism is very complex.

In this paper, we propose a position-based protocol suiting for the case of VANET in highway environment called On Demand Geographic Routing (ODGR). It differs from other routing protocols in two characteristics which solve the problem of inexact position brought by high mobility: (1) Using two substantive messages mechanism to maintain the destination position information, the first one is transferred  between destination node and its neighbor nodes, the second one is transferred during the nodes except for destination node. (2) Constructing neighbor list with on demand idea, that is, the node applies for constructing neighbor list when it needs to access neighbor list, which can decrease the loading and the inaccuracy caused by high mobility and constructing neighbor list initiatively.

The researcher of Nanjing University studied the position-based protocol used for VANET in 2004[3], and discussed the exiting problems. In 2007, Jiang Hao et al. in Wuhan University started researching transmission control protocol in VANET [4], and proposed the objective and the design elements of transmission control protocol in VANET.

At present, the topology based and the position based routing protocol are mainly used for VANET. National research institutions of VANET routing protocol mainly concentrated in these two kinds of routing, and verified their research findings through a large number of experiment.

The remainder of the paper was structured as follows.

In Section 2 we introduced the ODGR algorithm. The five messages were described in Section 3 and the simulation results and analysis were shown in Section 4. Finally, section 5 concluded our paper.



II. ODGR ALGORITHM The basic idea of ODGR is this: When the node needs  to forward data packet, it will select the node nearest destination node from the neighbor list in real time.

ODGR algorithm is unique in: (1) ODGR uses two independent messages to update the destination node     location information of each node; (2) ODGR draws on the AODV?s on-demand idea to establish neighbor list to ensure the timeliness of the information in neighbor list. The purpose of ODGR using these two properties is to ensure that the location information of destination and neighbor node is accurate when the routing is constructed, thus improve the quality of data transmission.

In VANET, we can deploy additional electronic equipment in the vehicle nodes?GPS receiver. In this way, each node can obtain their own location coordinates through their equipment and GPS positioning system.

A. The management of destination node location ODGR uses two independent messages to update the  destination node location information storing in each node:  The message transferred between destination node and its direct neighbor nodes: Destination node periodically broadcasts query message which records location information of its direct neighbor.

The message transferred among other nodes excepting destination node: other nodes broadcast dstInfo message to their neighbor nodes regularly to make the message storing in the nodes uniform.

Fig. 1 shows the node location information management mechanism in ODGR. Firstly, destination node D broadcasted query message to tell its neighbor A, H, I and J its location information. Then node A sends dstInfo message to its neighbor K, L, M to tell them the destination node location information.

Figure 1.  Two message mechanisms in ODGR  Two independent message mechanisms in ODGR algorithm can play a role when network partition appears. If the scenario as Fig. 2 appears, node A, X, Y and Z can also exchange destination node location information by sending dstInfo message to each other.

Figure 2.  Node distribution at a time  B. The management of neighbor list In ODGR algorithm, each node adopts message  passing mechanism to set up a neighbor list, which lets one node maintain the neighbor node location information.

In ODGR, each node sets up a temporary neighbor list in real time when they have data to send.

The method setting up neighbor list in ODGR is obviously different from that in GPSR protocol which sets up it by neighbor nodes sending HELLO messages actively, and this method can ensure the information in neighbor list a newest one. So ODGR algorithm doesn?t exit the problem resulting from the inaccuracy due to the untimely information in neighbor list as the GPSR protocol.

C. Retry mechanism The retry mechanism in ODGR is triggered when the  greedy forwarding doesn?t find suitable next-hop. The retry mechanism is operated in accordance with the following two stages: (1) Only increasing reserved time to wait for setting up the neighbor list. (2) Sending new neighbor request message to rebuild neighbor list totally.

D. Algorithm flow The whole algorithm includes four parts: Greedy  forwarding; management of destination node location information; management of neighbor list; retry mechanism.

Greedy forwarding inherits the idea of position based routing algorithm. In the other three parts, ODGR has distinction with previous algorithm specifying the fast-moving characteristic of VANET network. The flow as following Fig. 3:   Figure 3.  The four parts of ODGR  OGDR algorithm firstly gets neighbor list information and destination node location information from the module of ?neighbor list management? and ?destination node location information management?, which will be used by ?greedy forwarding? module; then, ?greedy forwarding? decides next-hop based on this information. If greedy forwarding failed, retry mechanism started.



III. ODGR MECHANISM  A. Destination node location information request message Destination node location information request (dstreq)  is broadcasted as the method AODV sending routing request.

Destination node will start sending its location updating information and updating the destination node location information of each node when it receives the request    message.

struct hdr_odgr_dstreq {  u_int8_t type;     // Message type  int id;           // Destination node number  int length;        // Message length  };  Destination node location request message is represented by struct hdr_odgr_dstreq, as shown above.

B. Destination node location updating message Destination node location updating message (query  message) is transmitted between destination node and its direct neighbors. The message is used to update the destination node location information of its direct neighbor nodes. The dstInfo message mentioned as follows transmitted between other nodes helps this message spread in the whole network.

struct hdr_odgr_query {  u_int8_t type;       // Message type  float x;            // Node abscissa  float y;            // Node ordinate  float timestamp;    // Timestamp  int length;         // Message length  };  Destination node location updating message is represented by struct hdr_odgr_query, as shown above.

C. Interactive destination node location information Interactive destination node location information  (dstInfo message) is transmitted during other nodes excepting for destination node. It makes the destination node location information in each node up to date through exchanging destination node location information maintaining in each node.

struct hdr_odgr_dstinfo {  u_int8_t type;         // Message type  int id;               // Node number  float x;              // Node abscissa  float y;              // Node ordinate  float timestamp;       // Timestamp  int length;        // Message length  };  Interactive destination node location information is represented by struct hdr_odgr_dstinfo, as shown above.

D. Neighbor request message Neighbor request message (NREQ message) and  neighbor response message (NREP message) following are used to set up neighbor list by one node.

The node having data to send broadcasts NREQ message to its direct neighbors when it will set up neighbor list, and the neighbor nodes will unicast a NREP message to this node when they receive NREQ message.

It is represented by the struct hdr_odgr_nerq as follows:  struct hdr_odgr_nerq {  u_int8_t type;       // Message type  int length;          // Message length  };  E. Neighbor response message Neighbor response message (NREP message) is  unicasted to the request node when a node receive NREQ message. NREP message that a node sends includes its own location information. It is represented by struct hdr_odgr_nrep as follows.

struct hdr_odgr_nrep {  u_int8_t type;       // Message type  float x;            // Node abscissa  float y;            // Node ordinate  int length;         // Message length  };

IV. SIMULATION RESULTS AND ANALYSIS  A. Simulation settings In this paper, we simulate our algorithm in NS-2[5] and  evaluate its performance. We measure the impact of AODV and ODGR on the network throughput and the packet loss rate in different scenarios.

We use VanetMobiSim [6-7] to generate node moving scenario as follows Fig. 4:   Figure 4.  The scenario used in experiment  In our scenario, there are 30 vehicle nodes located in a    10000*300 square meters area. Each node moves with acceleration of 4.9m/s? until it reaches the max speed of 50m/s. In our simulation scenario, there exists CBR flow which synchronously runs from 50 to 550 seconds with packet size of 256 bytes and interval time of 0.25s; each node?s maximum transmission power is set as 0.2818w, and coverage is 250m. The simulation time is 600 seconds.

B. Throughput comparing ODGR with AODV We use the numbers of data packets successfully  delivered in 600s simulation seconds to show the throughput.

Fig. 5 presents the throughput result. We can see that, the throughput of ODGR is larger than that of AODV. In different moving scenarios, the throughput of AODV and ODGR has similar fluctuation trend, however, ODGR shows smaller amount of fluctuation than AODV.

Figure 5.  The throughput transferring data between different nodes in  the same scenario  C. End-to-end packet loss rate comparing ODGR with AODV  Fig. 6 shows the result of end-to-end packet loss rate.

AODV?s rate is between 2.4% and 9.35% when transferring data between the eight different pairs of node. However, the rate of ODGR is between 0.6% and 2.65% when the data is transferred in any pair of node.

Figure 6.  Packet loss rate transferring data between different nodes in  the same scenario  Obviously, we also can see that, in different moving scenarios, AODV incurs significantly higher end-to-end  packet loss rate than ODGR. The gap between them is approximately 2-7 times.

D. Performance analysis conclusion Through comparing the throughput and end-to-end  packet loss rate of ODGR and AODV, we can see that ODGR is more suitable for a highway environment than AODV. ODGR has small fluctuation when any pair of node transfers data.

To sum up for the Internet multimedia applications of VANET in highway environment, ODGR?s data transferring performance is better than that of AODV while vehicle nodes move at speed of limit 50m/s, acceleration 4.9m/s?.



V. CONCLUSIONS In this paper, a new position-based routing protocol  ODGR is proposed for highway vehicular communications.

ODGR features the novel use of node location information to resolve the unreliability caused by the fast-moving nodes.

The experiment results have proved that ODGR can supply high-quality data transmission even though vehicle nodes are moving on highway at speed limit of 50m/s, acceleration 4.9m/s?.

Since ODGR is a position-based routing protocol proposed based on the special demand of VANET, it suits for highway environment and exits high delay problem. If ODGR algorithm is used in other applications of VANET, such as, security alarm, it should be improved to reduce the delay.



VI. ACKNOELEDGEMENT This research was supported in part by the Tianjin NSF  Project (grant No. 08JCYBJC14200) and the National High Technology Project of China (863 grant No.

2007AA01Z220). The authors will thank Shi Xue for her help. We would thanks also to Qingfen Pan for helpful language and grammar.

