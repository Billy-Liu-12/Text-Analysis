

Abstract?Databases are used among various areas for storage of large data items. Viewing data from this large dataset became a difficult task. Hence, data mining was introduced to retrieve and view the necessary data. Data mining is a process of  extracting the large databases, these databases are mostly scattered among various websites where security is required. These databases are divided into various categories such as horizontally distributed databases, vertically distributed databases and hybrid distributed databases. When this data size increases, there exists data leakage, less security, etc. The distributed databases are shared among various servers where insecurity occurs. To secure databases when sharing data in a database various methodologies were being used. Earlier there exists a trusted third party who performs various cryptographic primitives and the trusted third party acts as an intermediate between the sites in which the probability of data leakage increases. Hence, this paper proposes a new protocol to reduce the data leakage and to improve the security of the horizontally distributed databases. The outcome of the proposed architecture provides methods where no trusted third party is required, the sites themselves communicate each other for a secure mining as well as enhanced security. This proposed architecture covers almost all the disadvantages occurred in the previous algorithms and has been implemented in the synthetic employment office database.

Keywords-Association Rules; Distributed Computation; Distributed Databases; Frequent Item Sets; Privacy Preserving Data Mining.



I. INTRODUCTION Data Mining is a technology which is used to extract  large quantities of large data sets. Mining the association rule is an important data mining problem in finding an association between the different attributes in the given large data sets. There are various techniques used to solve the mining of association rule problems such as FP tree etc.

Data Mining is a process of  analyzing the databases that are designed to explore data (usually large amounts of dataset are being used that are  also known as "big data") in search of the most consistent and relevant patterns and the and/or relationships that are  systematic between the variables, and then to validate by applying the detected patterns for the findings.

The problem of mining the horizontally distributed databases with the algorithm based on association rules with security has been studied here for the several sites which are holding the homogeneous databases (database share same schema holds different entities). The goal is to find association rules based on support and confidence.

An association rule has two parts, an antecedent (if) and a consequent (then). An antecedent is an item found in the data. A consequence is an item that is found in combination with the antecedent. Association rules are thus created by analyzing the data for frequent patterns and using the criteria support and confidence to identify the most important relationships. Association rule mining is thus a process of mining the databases based on the association rules. This association rule is purely based on support and confidence.Support formula concludes how frequently the database occurs. Whereas confidence concludes how home many times the database is used.

(i.e.) based on if/then statement. The formulae to compute support and confidence are ,   ;                         (1) ,    ;             (2)  Thus the association rule is a process of taking together the values of support and confidence and giving the best results of secure mining. A distributed database that consists of two or more data files  located at different sites on a different network. Because the database is distributed, different users are allowed to access the databases  without any interference with one another. However, the secure mining of association rules in horizontally distributed databases must periodically synchronize the scattered databases to make sure that they all have consistent data.

In this problem the inputs are partial databases and the outputs are list of association rules in unified databases with support and confidence.

There are various protocols used for this problem. This paper proposes a protocol for secure computation of the union of private subsets. The proposed protocol improves in terms of simplicity, efficiency and privacy.



II. RELATED WORK If there are m websites that hold private inputs say x1,  x2,......, xm. They wish to securely compute the inputs y=f (x1, x2,?...., xm) for a public function f. There exists a        trusted third party, the website would surrender to him all the inputs and he will perform a function evaluation and send to them the output. In the absence of such third party, we need to devise a protocol for the solution (output) so that these websites run on their own in order to get the required output y. Kantarciolgu and Clifton studied that problem and devised the protocol for secure computation of the inputs that are held by different websites. This part of the protocol is the most costly, to implement we rely upon various cryptographic primitives. This is the part where data leakage occurs when websites extract protocol information.

Gayatri K et al (2014) proposed Secure Mining of Association Rules in Horizontally Distributed Databases Using FDM and K&C Algorithm. In their work they used FDM algorithm and Unifi-KC algorithm. Also the efficiency, computational cost and communication cost were compared in that paper. Privacy in data mining had attained and clearly explained in that paper. In their work they concluded that FDM algorithm is sufficient compared to Unifi-KC algorithm. Future work is to devise an efficient protocol for inequality verifications that uses the existence of semi-honest third party and another in the implementation of the techniques to the problem of distributed association rule mining in vertical setting.

Pattnaik Dr. Prasant Kumar et al (2014) proposed Privacy Preservation in Distributed Database. To provide the security to the distributed database, they proposed hash based secure sum cryptography technique without trusted party and another concept proposed in that paper was trusted party, one of the middle party control all the details of the all the party presents in the distributed database environment because when the Party to find the global result, that result may be frequent or infrequent.  They proposed that work with the following objectives  ? To compare the result, privacy preserving technique with and without trusted party for horizontally partitioned data.

? To provide high security for data parties with percentage of data leakage is zero by using the Apriori algorithm.

After comparing the result, it was proved that data leakage with trusted party is more as compared to without trusted party. Privacy also more in without trusted party as compared to with trusted parties.

Sonal Patil et al (2014) proposed Overview of secure mining of association rules in horizontally distributed databases. This paper explains the overview of the topic, secure mining of association rules in HDD (Horizontally Distributed Databases). Distributed database is a database in which the storage devices are not all attached by a distributed DBMS. It may be stored in multiple computers located in the same physical location over a network of interconnected computers. Association rule is a method to find the relation between variables in large databases these horizontally distributed databases are stored where the association rule is applied to provide secure mining.

Jayanti Danasanal et al (2012) proposed Mining Association rules for horizontally distributed databases using the CK secure sum technique. Mining the horizontally portioned databases using an algorithm called  CK secure sum protocol is hash based. It computes association rules of homogeneous databases. The proposed work taken the database as horizontally partitioned and distributed among sites and the total number of sites is greater than two. The sites are considered as trusted sites and all the sites contain their own private data and no other sites will be able to know other site?s data. Considered four sites m1, m2, m3, m4 where the sites  interchange its position to another by following the algorithm.

The secure sum protocol  is based on changing neighbors in each round of computation based on its segments. The site s1 is selected as the protocol initiator site which starts the computation by distributing the first data segment. The site traverses towards sn in each round of the computation. The number of parties to this protocol must be two or more.When the summation of  all  the rounds is completed the sum is announced by the protocol initiator site. The advantage of this protocol is it addresses more than two sites and communication cost is less. The disadvantage is that the sites have same schema each site does not have information on different entities. This paper addresses the problem of computing association rules within a scenario of the homogeneous database. We here assume that all the sites are having the same schema, but each site does not have information on various entities.

The main goal is to build association rules that hold globally while limiting the information shared about each site. Many proposals have been sited to implement SMC.

SMC is used in various large scale databases which are in need  to preserve privacy to the private data of different sites.

Assaf Ben-David et al (2008) proposed FairplayMP-A system of secure multiparty computation. FairplayMP is a system of secure computation which is one the greatest achievement of cryptography. This fairplayMP operates by receiving a high level language description and configuration file description of the participating websites.

The algorithm used is BMR (Beaver Micali Rogaway) protocol which runs for the purpose of constructing a number of communication rounds. The language used is SFDL (Secure Function Definition Language). The advantage is that secured multiparty is used which helps to compute data between websites. It?s a slow process.



III. PURPOSE AND SCOPE OF THE PROPOSED WORK The concept of privacy is required when the data is  distributed in a distributed database environment, i.e. when several sites holding homogeneous databases (database share the same schema but hold information on different entities) need privacy, so that unauthorized person will not be able to decrypt and view any data.The main goal is to find all association rules with support at least s and confidence at least c, for all minimum support size s and confidence level c, that hold unified databases.

This protocol has been proposed for secure mining of all the association rules in a horizontally distributed database environment. The protocol is based on Fast Distributed Mining (FDM) Algorithm, which is the current leading protocol, which overcomes the disadvantages of various other algorithms such as apriori, FP tree etc.. This protocol improves simplicity and efficiency as well as privacy. In addition, it is simpler and more efficient in terms of communication and computational cost.



IV. PROPOSED SYSTEM AND PROPOSED ARCHITECTURE The proposed system focuses on the security as well to  avoid data leakage of data. While extracting data from the distributed database systems more number of irrelevant data may be retrieved. To avoid this, earlier algorithms such as FP tree, etc. was used which lead to more amount of data leakage. In this paper, AES (Advanced Encryption standard) algorithm is used to ensure security and to encrypt and decrypt the data while inserting and retrieving.

AES takes very less time to encrypt and decrypt.

Figure 1 illustrates the architecture of the proposed system. Now a days N number of users access the network for recruitment by companies. The proposed work is projected as a website, which includes the recruitment process in companies located in various places such as  Chennai, Madurai, Ramanathapuram,  etc.  where various users register their marks, contact details, qualifications, etc. In such cases, earlier there exists a trusted third party who maintains the database of the employees who seek a job. This trusted third party may steal the data of employees and their sensitive information. So in this paper, the proposed architecture replaces the trusted third party and applied algorithm for the role of trusted third party. The algorithm (make association rule) selects the employee who are all eligible for the role and store it under the database in server as of the area. Here the data is mined and faked item sets are added and stored under encrypted area. When the particular admin logins, he must send an offer letter through the mail, once mail sends he will view the decrypted candidates.



V. PROPOSED ALGORITHM  A. Fast Distributed Mining Algorithm This algorithm is an unsecured distributed version of  Apirori Algorithm. The main idea is that locally s frequent item sets must be s frequent in atleast one of the sites.

Globally, each website reveals its local s frequent items and then the website checks each of them to see globally they are s frequent.

The FDM algorithm proceeds as follows:  Step 1: Initialization  Step 2: Candidate set selection  Step3: Local pruning  Step4: Unifying the candidate item sets  Step5: Computing local supports  Step6: Broadcast Mining Results  1) Initialization: Websites already jointly calculated the item sets and the goal is to proceed and calculate fsk.

The websites that are going to share secure information has jointly calculated the item set(hash function). Now in initialization stage we have to calculate fsk. That is, set of all item sets (item set of size k) that are s frequent in the data set.

2) Candidate Set Selection: Each website calculates the set of all (k-1) item sets. All the locally frequent item sets are gathered as a set and (k-1) is calculated. All the globally frequent item sets are gathered as a set and (k-1) is calculated. Apriori algorithm has been applied to generate candidate k itemsets.

3) Local pruning and Unifying the Candidate Item Sets: These two steps are implementation stage. In local pruning (i.e. ck) all the locally s frequent item sets are retained the candidate item sets are unified and the   Figure 1.  Proposed Architecture        websites together calculate the union of broadcast(cs k, m) and unified candidates(i.e. U m-1 m).

4) Computing Local Supports: This is the alternate protocol used to compute the local support of all the items in (cs k).

5) Broadcast Mining Results: This step is the experimental process. Each website broadcasts the local support that is computed by every website. From that everyone can compute global support of every itemsets (csk). This consists of global support of all globally frequent k itemsets.

B. Formal Statement of the Problem ? Let I = {i1, i2,?, im} be a set of literals, called  Candidates. Let D be a set of transactions, called selection. Where each transaction T is a set of Candidate such that T ? I.

? A transaction T contains X, a set of some Candidate in I, if X ? T.

? An association rule is an implication of the form X ? Y, where X ? I, Y ? I, and X ? Y = ?.

? X ? Y holds in the transaction set D with confidence c if c% of transactions in D that contain X also contain Y.

? X ? Y has support s in the transaction set D if s% of transactions in D contain X ? Y.

C. Association rules based on Apriori Algorithm and FDM: The steps are given below 1. L1 = {large 1- Candidates sets};  2. For (k = 2; Lk-1 ? ?; k++ ) do begin  3. Ck = apriori-gen (Lk-1); // New candidates  4. For all transactions t ? D do begin  a. Ct = subset (Ck, t); Candidates contained in t.

b. For all candidates c ? Ct do  i. c. count++;  5. End  6. Lk = {c ? Ck | c.count ? minsup}  7. End  8. Answer = ?k Lk;  9. The apriori-gen function takes as argument Lk ? 1, the set of all large (k?1) itemsets. It returns a superset of the a set of all large k itemsets.

10.  Items are Degree, Gender, Circle.

11.  First, in the join step, we join Lk?1 with Lk?1:  12.  Insert into Ck  13. Select p. Degree1, p. item2,?, p. itemk?1, q.

itemk ? 1  14. From Lk?1 p, Lk?1 q  15. where p.item1 = q.item1, ?, p.itemk?2 = q.itemk?2, p.itemk?1 < q.itemk?1  16. Next, in the pruned step, delete all itemsets c (Ck such that some (k?1) -subset of c is not in Lk?1  17. Result items stored with encrypted.



VI. IMPLEMENTATION OF PROPOSED SYSTEM The proposed algorithm has been implemented in the  Synthetic Employment Office Database. Web Application has been created to show the result of this implementation.

The application has been developed using the Microsoft Visual Studio 2010 as a development tool, ASP .Net as Web Technology, Coding is written using C# .Net (Framework version 4.0) and MySQL Server 2008 as Backend tool.

The following phases are included in the implementation of web application.

? Initial registration  ? Creating an account  ? Confirm Registration  ? Login  ? Registering academic details (For different sites)  ? Updating academic details (For different sites)  ? Renewal (For different sites)  ? Creating association rules  ? Securely storing private union of subsets  ? Request to View securely mined data  ? View original data.

A. Initial Registration Initial Registration is a process to register you with the  application. To register some personal details such as your mail id is to be given and enter the displayed captcha given in the application. After that, a link in the approval of the registration  will be sent to the registered email id.

B. Creating Account After receiving the registration, click on it in your  browser to register as a new account.

C. Confirm Registration The confirmation link  sent to the registered mail id  once confirmed. Eligibility to login into your employment office account will be given.

D. Registering Academic Details After successful login, you can register your academic  details. See to that you are provided with a  valid certificate number in the asked field. Users from different circle can enter their records by correctly choosing their circle.

Figure 2.  Login and Confirm Registration        E. Updating Academic Details Records of the user must be frequently updated till  their post graduate degree.

F. Renewal User has to renew the account once in 2 years for  maintainence of user details.Each and every user has an expiry date based on the date of account creation.

G. Creating Association Rules For data mining, admin will follow the FDM algorithm  based on the association rule. The union of all private subsets will be done by using association rule.(In this employment office application association rule formed for the eligibility of a candidate for the job).

? Here we join Lk?1 with Lk?1  ? Insert into Ck  ? Select p. Degree1, p. item2,?, p. itemk?1, q.

itemk?1 from Lk?1 p, Lk?1 q  H. Securely Storing Private Union of Subset These subsets will be in encrypted earlier in the  process when the user does the (Registering academic details) process. It is made secure by adding faked item sets, to avoid third party to view the original count. It will be stored in a different table (new table).

? where p.item1 = q.item1, ?, p.itemk?2 = q.itemk? 2, p.itemk?1 < q.itemk?1

I. Request to View Securely Mined Data If the respective circle?s admin wants to view, the  mined data (short listed candidate), the admin have to provide their circle?s key to retrieve the data. While retrieving, the faked item sets will be removed and the decrypted data will be viewed.

? Next, in the pruned step, delete all itemsets c (Ck such that some (k?1) subset of c is not in Lk?1  ? Result items stored in encrypted form.

J. View Original Data After getting the original count, the data will be  decrypted and an admin will send mail to all candidates for interview. Users can also see this in the account by clicking my job tab.

The overview of the implementation is described in Figure 4. The association rule mining is implemented in a horizontally distributed database using an employment office recruitment database which consists of various database storage that are used for mining. One is the user registration database and the other is an administrators mined database, which are horizontally distributed as shown in the figure. In a user registration database the work of the user is to register and login and to register the qualification to get relevant jobs. On the other hand the administrator who selects employees based on their  requirement with the help of association rules and store it under the encrypted database and later decrypt to view the selected employees.



VII. RESULTS AND DISCUSSIONS  A. Screen Shots The administrators of the website are the responsible  persons to create the association rules. To do secure mining, while creating association rules they have to choose the number of combinations to form an association rule and then permitted to do data mining based on their requirements. Figure 5 explains the choices given for creating association rules.

Figure 4. Implementation Overview   Figure 5.  No. of Combinations to create Association Rule  Figure 6.  Rebuild Association Rules   Figure 3.  Renewal of Registered User        Figure 6 explains how the required input is given based on the number of combinations selected by the administrators. Based on the inputs submitted in that combinations the corresponding candidates? details are mined and stored in encrypted databases. Figure 7 illustrates how the encrypted mined data are displayed to the administrator.

While comparing the performance of the algorithm used in the proposed system with the FDM KC algorithm, it shows the best results in terms of time efficiency and computation cost. The proposed protocol is high in performance as it secures mined databases in its temporary storage. Thus, the server need not be hit every time when the data are required. Figure 8 describes the performance analysis of the proposed system with respect to the computational time.



VIII. CONCLUSION AND FUTURE WORK Thus, the protocol is built for the horizontally  distributed databases based on various association rules which rely on FDM algorithm. This protocol is high in efficiency and performance and highly focusing on the security of the databases.

In future, this protocol can be enhanced based on various association rules with vertically or horizontally or  hybrid distributed databases with the recent algorithms that have been developed to reduce the communication cost, to mine a large data set and to increase the privacy.

