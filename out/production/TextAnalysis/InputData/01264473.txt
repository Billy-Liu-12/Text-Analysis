MINING CONDITIONAL HYBRID-DIMENSION ASSOCIATION RULES ON  THE BASIS OF MULTI-DIMENSIONAL TRANSACTION DATABASE

Abstract: In this Paper, we present such an idea of mining hybrid-  dimension association rules which meet the definite condition on the basis of multidimensional transaction database. First, we simply introduce the general algorithm for mining association rules. Second, we give a brief analysis about the classical algorithm for mining single-dimensional association rules. Based on the analysis, we stress on the discussion about how to expand and improve the algorithm, and then design an algorithm for mining hybrid-dimension association rules which meet the definite condition from multidimensional transaction database. Last we give a simple example to explain the implement of the algorithm.

Keywords:  Apriori algorithm; Hybrid-dimension association rules Multidimensional transaction database; Association rules;  1 Introduction  Originally, the association rules were advanced for discovering the interesting association relationships among huge amounts of business transaction records. Association rule mining is a two-step process.

Find all frequent itemsets within transaction database.

Generate strong association rules from the frequent itemsets.

Among those, the searching for the frequent itemsets  is the key step. Because it?s easy to generate rules from frequent itemsets, nearly all the algorithms for mining association rules are designed on how to find the frequent itemsets more rapidly and more efficiently.

In 1993 ??I , R. Agrawal and some others presented the algorithm for mining the simplest form of association rules - single-dimensional, single-level, Boolean association rules. It is called Apriori Algorithm. The Apriori employs an iterative approach known as a level- wise search to generate each frequent itemset. However, during the frequent itemsets generation we need proceed    with a great deal of repeated natural join. That will bring abundant candidates. Moreover, it?s necessary to repeatedly scan the database for finding frequent itemsets, which meet the minimum support count. Therefore the run-time of the Apriori will increase by index grade 12? with the increase of transaction item quantity.

From then on, in order to improve the efficiency of the Apriori, many variations of Apriori algorithm have been proposed that focus on improving the efficiency of original algorithm. In 1994 ? 3  , R.Agrawa1 and some others presented the extending algorithm of the Apriori-- AprioriTid. The AprioriTid employs the same thought to generate candidate itemsets. But the difference is as follows: When it scans the database repeatedly to count the support of candidates, the AprioriTid scan the whole transaction database only during the first time. In later scanning, a candidate transaction database formed in the last scan will substitute the original transaction database. Therefore the transactions need to be scanned are decreased dramatically, the searching space of the transaction database is compressed, and the implementation efficiency of the algorithm is improved drastically. Besides, the DHP algorithm based on the Harsh Technology was also presented, as well as FP-tree algorithm-a kind of algorithm without candidate generation. Anyway, since R. Agrawal and some others first presented the association rules mining, the researchers have devoted to research all kinds of algorithm for mining association rules. And many research achievements have been taken out.

As we know, the Apriori was presented for single- dimensional association rule mining. It can only mine the relevancy among transaction items. However, when we come to the practical business application, we need colligate the itemsets, which built the business transactions, with some other relevant information (such as customers? information, information of the products?) to proceed with the association analysis. Thus we obtain guidance to help the high-grade managers of the corporation to make some business decisions such as production decision, invention  0-7803-7865-2/03/$17.00 02003 IEEE 21 6  mailto:kiqjannie@hotmail.com    decision and sales decision.

If we take each database attribute or each Warehouse  dimension as a predicate, we could divide association rules into two kinds--single dimensional rules and multidimensional rules, according to the numbers of predication involved in the rules. The single dimensional rules mainly deal with the intra dimension associations.

And the multidimensional rules deal with the inter dimension associations as well as intra dimension associations. As for multidimensional association rules, we could hrther divide them into inter dimension association rules and hybrid-dimension association rules according to the show-up times of the predicate in the rules.

0 Inter dimension association rules are the multidimensional association rules which have no repeated predicates, an example of such a rule is the following:  Age (X,?20.. .29?) A occupation (X,?student?)  Here the predications ?age?, ?occupation? and ?buys?  0 Hybrid-dimension association rules are multidimensional association rules with repeated predications. An example of such a rule is the following:  Age (X,?20.. .29?) A buys (X,?laptop?) => buys (X,?printer?).

For the above analysis, in this paper we present a thought that mines hybrid-dimension association rules on the basis of multidimensional transaction database. And we set definite condition restricts to the hybrid-dimension association rules mined. When we design the hybrid- dimension association rule mining algorithm, we stress on the extension and improvement of the Apriori Algorithm- the simple Single-dimensional mining algorithm. Therefore, the following text will give a brief analysis to the Apriori.

=> buys (X,?laptop?),  refer to three different attributes.

2 The Apriori Algorithm  The classical Apriori algorithm presented by R.

Agrawal and some others employ an iterative method to find all the frequent iemsets. First, the frequent 1-itemsets LI is found according to the user-specified minimum support threshold, then the L1 is used to find frequent 2- iemsets L2, and so on,, until there is no new frequent itemsets could be found.

After we find all the frequent itemsets using Apriori, we could generate the corresponding association rules, according to the second step in the process of association rules mining. Thus we find the association relationships among transaction items.

The initial aim of the Apriori is to find the relevancy among the transaction items in the business transaction database. Because these transaction items belong to the same attribute field in the transaction database, the Apiiori finds the relevancy among the different values of the same attribute. That?s so-called intra dimension association.

However, when we proceed with the Hybrid-dimension association rules mining, we need not only find relevancy among different values of the same attribute, but also find the relevancy among all the values of different attributes, which is denoted inter dimension association. And we set definite conditional restrict to the hybrid-dimension association rules mined from multidimensional transaction database. The restrict is: in the rules, the predicates represent the main attribute (the attribute refers to the transaction itemset) can occur many times, but the other predications refer to subordinate attributes (some other relevant attributes) can only occur once. Therefore, to achieve our aim, we make appropriate expansion and improvement to the traditional Apriori algorithm, and design an algorithm for mining hybrid-dimension association rules, which meet the definite condition, from multidimensional transaction database.

3 Conditional hybrid-dimension association rules mining  The generation of frequent itemsets is the core of all the association rules mining algorithms. We stress on this key part when we design the algorithm for mining hybrid- dimension association rules.

3.1 Improvement to joining process  There are still two steps to generate of the frequent itemsets and frequent predicate sets (we unify the appellation as frequent itemset in the following). The two steps are joining and pruning. We make corresponding adjustment and improvement when proceed with joining:  (1) The join generating candidate 2-itemsets Cz We find frequent 1-itemsest based on each attribute, at  the same time we mark items belong to every main attribute.

So we can say that the marked items are the items of main attributes and unmarked items are the subordinate items.

When we search for C2, if both of the two joining items are marked items, we could proceed with intra-dimensional join between the items as well as inter-dimensional join, but only proceed with inter-dimensional join on the other occasions.

(2) The join on other occasions When generate frequent itemsets directly according to  21 7    the join mode of the Apriori, it would occur intra- dimensional join as well as inter-dimensional join. But from the above analysis we know there are some restrictions to the generation of intra-dimensional join and inter-dimensional join. Therefore we make the following modifications to the joining step of the Apriori:  Supposing 11 and 12 are itemsets in Lk-I, the notation 141 refers to thejth item in li. (e.g., ll[k-1] refers to the first to the last item in 11 ). By convention, we assume that items within transaction and itemset are sorted in lexicographic order. We could take two steps to find Lk :  Differentiate the intra-dimensional join and inter-dimensional join; the method is to make judgement before joining the two random (k-1)- itemsets. If all the items within the two (k-1)-itemsets are belong to the main attribute, we proceed with intra-dimensional join, and proceed with inter- dimensional join on other occasions.

0 Implement join I k - l  Da I k - l  , and choose the corresponding joining condition according to the character of the join (intra-dimensional join or inter-dimensional join).

If it?s the inter-dimensional join, it should meet the following condition:  The items from the 2th to the (k-1)th in 11 are the same as the items from the 1 th to the (k-2)th in 12, and l1[1]<l2[k-1], writing as joining form is as follows: (1,[2]=12[ 13) n (1,[3]=12[2]) n . . . n (I1[k-l]=12[k- 21) n (Zl[1]42[k-l]), the joining result is ll[l]l2[1]. . .12[k-2]l2[k-l].

If it?s intra-dimensional join, it should meet the condition:  The first (k-2) items of 11 and 12 are in common, writing as joining form is as follows:  21) n (l1[k-1]<l2[k-1]). The condition (ll[k-1]<12[k-1]) simply guarantee against repetition. The joining result is 11[ 1]11[2]. . .ll[k-l]Z2[k-1].

(I/[ 1]=12[ 11) n (1/[2]=12[2]) n . . . n (ll[k-2]=lz[k-  3.2 The compressing of transaction database  In.the step of searching for frequent itemsets, it need scan the whole transaction database to calculate the support count of candidates?. In order to compass the transaction database being scanned and to improve the implementation efficiency of the algorithm, we employ the method, which is presented by R. Agrawal in his paper 13], to find association rules rapidly. The main thought of this method is to find out the transactions including three more frequent 1 -itemsets from the original business transaction set, after   21 8  finding out frequent 1 -itemssets. Then rebuild business transaction database with these transactions. The rebuilt database is compressed, and then the run-time will be shortened if we run the relevant algorithm on it.

3.3 The conditional restriction in hybrid-dimension association rules  After obtaining the frequent itemsets, we can generate the hybrid-dimension association rules by the general method of generating association rules from the frequent itemsets. Because, in the process of generating frequent itemsets, we make both intra-dimensional join and inter- dimensional join, as well as the conditional restrictions of proceeding with joining, all of the generated frequent itemsets have such a character: the values within main attribute field occur many times, while the values within subordinate attribute fields occur no more than one time.

Accordingly, the generated rules include many predicates, and maybe include the same predicate. So form the hybrid- dimension association rules.

4 Actualization of the algorithm  According the above analysis, we design the  (1) Finding out frequent 1-itemset L1.

(2) Compass the original transaction database  according to the located frequent 1 -itemsets.

(3) Generate candidate 2-itemsets C2 from frequent 1-  itemsets LI.  Here is the process: Differentiate the two random frequent 1 -itemset ll,l2(ll,12 E Ll), which are going to proceed with natural join. If 1, and l2 are both subordinate attributes, the join is not allowed, and the connection is allowed on other occasions.

(4) Generate frequent 2- itemsets from candidate 2- itemsets.

(5) Start from frequent 2- itemset, take advantage of the iterative approach to generate frequent k-itemsets L k from frequent (k-1)-itemsets &,(k>3). Before making the natural joining to generate candidate k-itemsets Ck, differentiate the intra-dimensional join from the inter- dimensional join first, then proceed with the join under certain condition.

following actualization flow of the algorithm:  (6) Generate association rules from frequent itemsets.

Figure 1 shows the logic flow of the improved Apriori  Algorithm. Figure 2 and Figure 3 give the actualizing flow of the main process. -     I) L 1 = find-fi-equent-l-itemsets@); 2) //compress the transaction database, according  /I to the generated fiequent l-itemets D?= trans-compression@);  3) //generate candidate 2-itensets Q=apriori_genl (L. 1);  4) //generate hquent 2-itemsets L~find_hquent_2_itensets@?);  5) //generate candidate k-itemsets& i?omkequent /I@-1)-itemsets Lk- I for (k=3 ; L k - i  # 6 ;  k++) do  6) //generate all the candidate k-itemsets& by joining  7)  Begin  Ck = apriori-gen(Lk-1); //use the Aprion property to eliminate //candidates having a subset that is not fkquent for each transaction t E D?do  8) 9) Ct =subset@, t); 10) 11) c.count i+, 12) end 13) //all those candidate k-itemsets  begin (the t equal to each Record)  for each candidates c E G do  L.k =f c E ck I c.count + minsup} / I  C i  satisfying minimumsupport formthe /I set of ii-equent k-itemets Lk  End 14) Answer = U k Lk; 15) // generatc*rules fromall ikquent itensets  16) genrulesfi, Lk) For each large itemets Lk?Answer, &>2) do  ..............................................

Figure 1 The logic flow of the improved Apriori  Algorithm  p r o c e d u r e  { C[k]  = n u l l ;  a p r i o  ri-gen I(Lk-i :freq u e n  t - i t e m s e t s )  f o r  e a c h  11 E Lk-I  f o r  e a c h  12 E Lk.1 if is In nerJo in  (11 ) o r  is In nerJo in  (12) // i f l i  or12 c a n  m a k e  i n t r a d i m e n s i o n  jo in  // i s InnerJo in( l1)  is a b o o l f u n c t i o n ,  1 1  is parameter , / / i t s ? f u n c t i o n  is t o  j u d g e  w h e t h e r  / / a n  i tem l i c a n  m a k e  i n t r a d i m e n s i o n  j o i n ,  / / i f t h e  re turn  v a l u e  is ?true?,  it?s a l l o w e d .

t h e n  {  c = Ir DO 1 2 ; I n s e r t i n t o C [ k ] :  }  f o r e a c h  c E C[k]  f o r e a G h  (k-1) -subse t  s o f c  if S E  L k - l t h e n  d e l e t e  c f rom C[k];  ......................................................................

Figure 2 Apriori_genl() progress flow The following text gives a simple practical example to  explain the generating process of the frequent itemsets, which are obtained from hybrid-dimension association rules mining.

procedure apriori-gen(Lr.i:frequent-itemsets)  { C[k] = null; for each 11 E Lk-i  for each 12 E Lk-I if then //if make intradimension join {if ( I ~ [ l ] = I z [ l ]  A(I1[2]=12[21)A ...

not (islnnerJoin(1l)) and not (isInnerJoin(l2))  A (I1[k-2]=h[k-Z])A ( Ii[k-l]< h[k- l ] ) then {  c = 11 DO 1 2 ; Ins ertin t o C [ k 1 ; 1  else //if make interdimension join  { if(l1[2]=12[I])A (11[3]=12[2])A ...

A (Ii[k-1]= 12[k-2])A( Ii[ l]< 12[k-l])  then { c = 11 pa 1 2  ; InsertintoC[k];}  } for each c E C[k]  for each (k-1)-subset s of c if s CZ Lk-i then delete c from C[k];  }  Figure 3 Apriori-genl() progress flow  21 9     5 Experiment  In figure 4(a), we show a multidimensional transaction database Product Order, which includes two subordinate attributes: Age. Area and one main attribute OrderID. In order to simplify the implement process of algorithm, we preprocessed some attributes before algorithm executes, which are shown as figure 4(b) and (c), and the finding of frequent itemset is proceeded on the basis of the relation table which has been preprocessed. We suppose the minimum support threshold is 0.4, figure 5 shows the process of searching for frequent itemsets in detail. In the figure, we eliminate the candidates generated in each step.

For each generated frequent itemset, we find that it meet the character of the frequent itemsets which are generated by means of hybrid-dimension association rules mining algorithm. Thus, we can easily generate corresponding hybrid-dimension association rules from the generated frequent itemsets.

For example: In figure5, {b,2,II,I2} is a frequent itemset. We can generate such a hybrid-dimension association rule: b A 2 A I ,  I, (support=28.6% ,  Age(X,?40. . .48?)AArea(X,?shanghai?)AOrderID(X,?711?)=> OrderID(X,?I;?) (support=28.6% 9 confidence=66.7%).0bviously, in this rule the subordinate attributes Age and Area appear at most once, and the main attribute OrderID appears many times, which meets our restriction. This further testifies that it is feasible to mine hybrid-dimension association rules on multidimensional transaction database by means of the improved Apriori algorithm.

confidence=66.7%) 9 i.e.:  - ID        -  Age  33.. 39  33.. 39  33.. 39  40.. .48  40.. .48  33.. 39  40.. .a  Pmhctorder  Area  beijing  beijing  s w  s w  s w  beijing  beijing  ( a )  33.. 39 I 40.. .48 1 ; - ID  W r I D  Age Area W r I D  (a Figure 4 A multidimensional transaction databa      L4 i temset ,  support count + {b,2,11,13:2},  L1 Lz  I Itemset:  i te mse t:  support count  {b,2,11:3}, {b,2,13:2}, { b,I I , I 3  :2}, { 2,I I ,I3 :2} ,  { a:4} ,{ b:3}, { 1:3},{2:4},  { 13 :4},{ I4:2), 1 {a,l:3},{a,I2:4}, {a,13:2},{b, 2 : 2}, { b,Ii :3) ,{ b,I3 :2}, { 1, 12:2},{2,11:2}, 12, 12:2},{2, I3:2), relevance of OrderID itemsets. But , if we make a hybrid- dimension association analysis, the result of analyzing not only include the relevance of OrderID itemsets, but also include the relevance of customers? information, eg: Age, Area. Thus when we proceed with predictions on the product order of customers? by means of the result of association analysis, obviously, the conditions included in the antecedent of multidimensional association rules is more abundant, and will bring better prediction result. Here is the main aim that we design the algorithm for mining hybrid-dimension association rules.

Whereas, in this paper we only expand the Apriori algorithm from function in order to mine multidimensional association rules. For the implement efficiency of the algorithm, we make a little consideration, i.e. compressing the transaction database. Therefore, the further work is to optimize the algorithm, and increase the implement efficiency of the algorithm.

Acknowledgements:  This paper is supported by national HTRDP 863(NO.

2002AA4 12020) and Jiangsu Natural Science Fund (BK200204).

