Fuzzy Data Mining for Discovering Changes in Association Rules over Time

Abstract - Association rule mining is an important topic in data mining research. Many algorithms have been developed for such task and they typically assume that the underlying associations hidden in the data are stable over time. However, in real world domains, it is possible that the data characteristics and hence the associations change significantly over time. Existing data mining algorithms have not taken the changes in associations into consideration and this can result in severe degradation of performance, especially when the discovered association rules are used for classification (prediction). Although the mining of changes in associations is an important problem because it is common that we need to predict the future based on the historical data in the past, existing data mining algorithms are not developed for this task. In this paper, we introduce a new fuzzy data mining technique to discover changes in association rules over time. Our approach mines fuzzy rules to represent the changes in association rules. Based on the discovered fuzzy rules, our approach is able to predict how the association rules will change in the future. The experimental results on a real-life database have shown that our approach is very effective in mining and predicting changes in association rules over time.



I. INTRODUCTION Association rule mining is concerned with the discovery of  interesting association relationships among different attributes in databases [ l ,  3, 14-15]. Many algorithms have been developed for this task. They typically assume that the underlying associations hidden in the data are stable over time and they therefore mine rules from the whole database.

However, in real world domains, it is possible that the data characteristics and hence the underlying associations hidden in the data change significantly over time. For example, there may be an interesting association between two attributes at time t l ;  but the association is no longer interesting at time t2.

Data mining without taking the changes over time into consideration can result in severe degradation of performance, especially when the discovered association rules are used for classification (prediction).

For example, given a database containing the buyhell transactions of properties in Hong Kong in 1997, our task is  to predict the price of properties in 1998 given their characteristics such as building age, direction, size, etc. In this case, we mine a set of association rules fiom the transaction data in 1997 and then use the discovered rules to predict the price of properties in 1998. Nevertheless, it is well known that there is an upward trend in the price of properties in or before 1997 but the trend has been changed from upward to downward afterwards in Hong Kong. This renders the rules discovered from the buyhell transaction data in 1997 do not hold in 1998 and hence the prediction will not be accurate and the rules will not be useful to the user.

Since it is common that we need to predict the future based on the historical data in the past, the mining of changes in association rules is an important problem. Nevertheless, existing data mining algorithms are not developed for this task. In this paper, we introduce a new fuzzy data mining technique to discover the regularities about changes in association rules over time. Our approach employs residual analysis [4-81 to distinguish interesting changes in association rules fiom uninteresting ones. The interesting changes are represented by fuzzy rules, which can then be used to predict the changes in association rules in the future.

By predicting the changes in association rules, we are able to provide accurate classification (prediction) based on the historical data.

In Section 11, we provide the related work. An overview of the proposed approach and the details of how to mine and predict changes in association rules are given in Section I11 and IV, respectively. To evaluate the performance of our approach, we applied it to a real-life database, which contains all buyhell transactions of flats in a large private real estate in Hong Kong fiom 1991 to 2000. The experimental results are presented in Section V. Finally, in Section VI, we conclude this paper with a summary.

This paper is organized as follows.

11. RELATED WORK Association rule mining is originally defined in [l] over  Boolean attributes in market basket data and has been extended to handle categorical and quantitative attributes [ 151.

In its most general form, an association rule is defined over attributes of a database universal relation, T. It is an implication of the form X 3 Y where X and Y are conjunctions of conditions. A condition is either Ai = ai  0-7803-7280-8/02/$10.00 02002 IEEE 890    where ai E dom(Ai) if Ai is categorical or Ai E [Ii, ui] E 93 if Ai is quantitative. The association rule X a Y holds in T with support defined as the percentage of tuples satisfying X and Y and confidence defined as the percentage of tuples satisfymg Y given that they also satisfy X .  An association rule is interesting if its support and confidence are greater than or equal to the user-specified minimum support and minimum confidence, respectively.

To handle quantitative attributes, many data mining algorithms (e.g., [12, 151) require the domain of these attributes to be discretized into crisp intervals. The discretization can be performed as a part of the algorithms (e.g., [15]) or as a pre-processing step before data mining (e.g., [12]). After the domain of quantitative attributes has been discretized, algorithms for mining Boolean association rules (e.g., [ l ,  3, 141) can be used to discover rules in the discretized data. The discovered association rules can be used later for user examinations and machine inferences, e.g., classification [ 121. Existing data mining algorithms typically discover association rules from the whole database. If there are additions, deletions, or modifications of any tuples in the database after the discovery of a set of association rules, one can mine the whole set of association rules from scratch or use some incremental updating techniques (e.g., FUP [9]) to update the discovered association rules.

To deal with the data collected in different time periods, the active data mining technique has been proposed in [2] to mine rules from the database in each time period. These rules together with their parameters (e.g., support and confidence) are stored in a rule base. The changes in each parameter over time (called history) are represented by recursively combining a set of symbols (called elementary shapes) using shape operators. The rule base can then be queried using predicates that select rules based on the shape of the history of some or all parameters. This technique, which provides a means to represent and to query the shape of the history of parameters for the discovered rules, is not developed for mining and predicting changes in rules over time.

A statistical approach has been proposed in [13] to distinguish stable, semi-stable, and trend rules from unstable ones discovered in different time periods. A rule is stable if it does not change a great deal over time whereas it is a trend rule if it indicates some underlying systematic trends. The semi-stable, stable, and trend rules are found based on z statistic, chi-squared statistic, and run test, respectively.

Again, this approach, which finds the rules that do not change significantly in different time periods (stable and semi-stable rules) and the rules that indicate some systematic trends (trend rules) based on a number of statistical tests, is not developed for mining and predicting changes in rules over time.

Furthermore, a framework has been proposed in [ I l l  for measuring the difference between two datasets (called deviation). It makes use of a data mining algorithm to build two models, one from each dataset. The difference between  the models is used as the measure of deviation between the underlying datasets. The deviation measure employed in the framework can intuitively be considered as the amount of work required to transform one model to the other. Although the datasets can be collected in different time periods and hence this framework can be used to measure the difference between the models over time, it is not developed to discover the regularities about changes in the models and it is therefore not developed to predict the changes.

111. AN OVERVIEW OF THE PROPOSED APPROACH We provide an overview of our approach for mining  changes in association rules in the following.

First of all, a set of data is collected in each time period and they are stored in a database. Let us suppose that there are n time periods, tl, ..., t,, and in each time period, a set of data, Di, i E { 1, ..., n } ,  is collected and stored in a database, D. The granularity of the time periods is application dependent. Given the database D, we can therefore divide it into a number of partitions, D I ,  ..., D,,, according to the time periods, tl, ..., t,,, in each of which the corresponding database partition is collected.

Secondly, the domain of quantitative attributes is discretized using any discretization technique (e.g., [lo]) and a set of association rules, Ri, i E { 1, . . . , n ) ,  is discovered in each database partition, Di, i E (1, ..., n } ,  using any association rule mining algorithm (e.g., [ l ,  3, 14-15]). This results in a rule set, R = RI  v ... v R,.

Thirdly, the missing supports and confidences of association rules in R are found. Let us consider the case that a rule, r E R, appears in Ri but not in Rj, i # j ,  because r does not satisfy the minimum support and/or minimum confidence constraints in Di. However, for our approach to mine the changes in association rules in tl, ..., t,,, the supports and confidences of each rule in R in t l ,  . . ., t,, are required. We therefore scan D once to find all the missing supports and confidences of each rule in R in all time periods.

Finally, after the supports and confidences of all rules in R in all time periods have been obtained, we can mine a set of fuzzy rules to represent the changes in association rules during the period from tl to t,,. Using the discovered fuzzy rules, we can predict how the association rules are changed in  Since the first and the third steps are straightforward and the user can choose any discretization technique and any association rule mining algorithm for the second step, we will not further discuss them in this paper. In the next section, we will focus on the details of the final step.

tn+l.



IV. MINING CHANGES IN ASSOCIATION RULES For each rule, r E R, we have a sequence of supports,  S = (s,, ..., s,,) where si E 10, 11, i = 1, ..., n,  and a sequence of confidences, C = (cl, ..., cn) where ci E [0, 13, i = 1, ..., n, such that si and ci are support and confidence of Y in time  0-7803-7280-8/02/$10.00 02002 IEEE 891    period ti, respectively. S can be converted to a set of subsequences, SI, . . ., S, - + I, where Si = (si, . . ., Si + - I), i = 1, . . ., n - w + 1, by sliding a window of width w across the sequence. Similarly, C can be converted to a set of subsequences, CI, . . ., Cn - + I ,  where C; = (c;, . . ., c; + - I), i = 1, ..., n - w + 1, by sliding a window of width w across the sequence. We can then mine a set of fuzzy rules in SI, . . ., S n - w + l  (CI, ..., C,,-,,,+I) and predict the support (confidence) of r in t, + 1, i.e., s, + 1 (c, + I), using the discovered fuzzy rules.

For simplicity, we only discuss how to mine fuzzy rules in subsequences SI, . . . , S, - + I and how to use the discovered rules to predict the value of s, + in the rest of this section. It is easy to extend the description to mine fuzzy rules in subsequences C1, . . . , C, - + 1 and to predict the value of c, + 1.

A. Linguistic Terms Given subsequences SI, . . ., S, - + I where S; = (si, ...,  si + ,,,- i = 1, . .., n - w + 1, we define a set of linguistic terms over [0, 13, which is the domain of each s;, i E 1, . . ., n.

Let us denote the linguistic terms as &, v = 1, . . ., h, so that a corresponding fuzzy set, L ,  can be defined for each &. The membership function of L, is denoted as pLv and is defined as:  The fuzzy sets L,, v = 1 , . . . , h, are then defined as:  L, =j;+ for all x E [0, 13. The degree of membership of some value x E [0, 11 with some linguistic term & is given by pLV (x) .

Using the above technique, we can represent s;, i E { 1, . . . , n - w + 1 }, by a set of linguistic terms, L = { & I v = 1, . . ., h} .

Since each linguistic term is represented by a fuzzy set, we have a set of fuzzy sets, L = {tY I v = 1, ..., h } .  Given a subsequence, Si, i E { 1, . . ., n - w + 1 }, and a linguistic term, & E 4 which is, in turn, represented by a fuzzy set, L, E L, the degree of membership of sj, j E { i ,  . . ., i + w - l}, in Si with respect to L;I is given by ,uLv (si).

si in S; can be represented by a set of ordered pairs, gj, such that  & = {(LI, &I),  . . ., ( 4 1 7  &h)} where pui. =pL, (si) , v = 1, ..., h, and S; can be represented by a fuzzy subsequence, Gi, such that  G. = (s.

I 8 1 ,  ..., giw)  wheregi j=g;+j-I , j= 1, ..., w.

Let Q, be a subset of integers such that Q, = U,, ..., j,} wherejl, ..., j ,  E (1, ..., w -  l ) , j l  f ... # j,, and 14 = U 2 1.

We further suppose that gip= {gjj  Ij E q}. Given any g; ,  it is  associated with a set of linguistic terms, L*, k = 1, ..., h".

Each L* is defined by a set of linguistic terms, {L, I (L,, &;+j-~),) E gij ~j E P A  v E (1, ..., h l } .  The degree, ILe (G;) , to which Gi is characterized by the term + is defined as:  R'~(Gi)=min({~(i+j-l)v I ( G , ~ ( i + j - l ) v ) ~  gij A ~ E  Y ~ A V E  I1,...,hI))  For any subsequence G;, i E (1, ..., n - w + l}, let oLqLp* (Gi) be the degree to which G; is characterized by the linguistic terms & and L* where & E L, q E { 1, ..., h} ,  is associated with gi,. okqC (Gi) is defined as:  We further suppose that degLqL+ is the sum of degrees to  which G;, i = 1, .. ., n - w + 1, characterized by the linguistic terms & and L+ degLwqL* is given by:  n-wtl  i=l  B. The Fuzzy Data Mining Algorithm It is important to note that a fuzzy rule can be of different  orders. A first-order fuzzy rule can be defined to be a rule involving one linguistic term in its antecedent; a second-order rule can be defined to have two; and a third-order rule can be defined to have three linguistic terms, etc. Our approach is given in Fig. 1.

1) Fl = { first-order fuzzy rules}; 2) for ( d = 2 ;  IFd-11 f & d + + )  do  T =  {each linguistic term in the antecedent of I 1 1 E F d - forall Q composed of d elements in T do  q + 6) calculate degL using (2);  7) forall kq, L& do 8) begin 9)  if interesting(&, L&) then 10) 1 1 )  end 12) end 13) F = u F d  ;  I d  Fd = Fd U rulegen(&, Le);  ~ ~~ ~~  Fig. 1. The hzzy data mining algorithm  To mine interesting first-order rules, our approach makes use of an objective interestingness measure introduced in Section C below. ARer these rules are discovered, they are stored in F1 (Fig. 1). Rules in F I  are then used to generate second-order rules that are then stored in F2. F2 is then used to generate third-order rules that are stored in F3 and so on for 4th and higher order. Our approach iterates until no higher order rule can be found.

0-7803-7280-8/02/$10.00 02002 IEEE 892    The function, interesting(&, L*), computes an objective measure to determine whether the relationship between & and L* is interesting. If interesting(&, Lek) returns true, a fuzzy rule is then generated by the rulegen function. For each rule generated, this function also returns an uncertainty measure associated with the rule (see Section D). All fuzzy rules generated by rulegen are stored in Fthat will then be used later for prediction or for the user to examine.

C. Discovering Interesting Rules in Fuzzy Subsequences In order to decide whether a relationship between a  linguistic term, L*, and another linguistic term, &, is interesting, we determine whether  sum of degrees to which records characten zed by L* and Lw sum of degrees to which records characten zed by Ld  (3) pT(Lw "*) =  is significantly diflerent from  (4) sum of degrees to which records characterized by &  M P'(& ) =  h h" where A4 = y , y , d e g , u j L *  . If this is the case, we consider  the relationship between L* and & interesting.

The significance of the difference can be objectively  evaluated based on the idea of the adjusted residual [4-81 defined as:  j=1 i=l  where z,.+# is the standardized residual [4-81 and is given  by:  where ehq+ is the sum of degrees.to which records are  expected to be characterized by L+ and &. It is defined as: h" h  and yLqL6 is the maximum likelihood estimate [4-81 of the  variance of zL and is given by: w9 @  0-7803-7280-8/02/$10.00 02002 IEEE  If dLwqL6 > 1.96 (the 95 percentiles of the normal distribution), we can conclude that the discrepancy between Pr(& I L*) and Pr(&) is significantly different and hence the relationship between L* and & is interesting.

Specifically, the presence of L* implies the presence of .&.

In other words, it is more likely for a record having both L* and &.

D. Uncertainty Representation  linguistic term, ~wq,  we can form the following fuzzy rule.

Given that a linguistic term, Lgk, is associated with another  where CO++ is the weight of evidence measure that is  defined as follows.

Since the relationship between L@ and & is interesting, there is some evidence for a record to be characterized by Lq given it has L+ The weight of evidence measure is defined in terms of an information theoretic measure known as mutual information. Mutual information measures the change of uncertainty about the presence of & in a record given that it has L* is, in turn, defined as:  (9)  Based on mutual information, the weight of evidence measure is defined in [4-81 as:  wLWq6 can be interpreted intuitively as a measure of the  difference in the gain in information when a record with .+ characterized by & and when characterized by other linguistic terms. The weight of evidence measure can be used to weigh the significance or importance of hzzy rules.

E. Predicting Unknown Values Using Fuzzy Rules Given a subsequence, d = (a,, ..., a,,,) where q E [0, 11,  j = 1, ..., w, a,,, is the value to be predicted. d can be represented by a fuzzy subsequence, d'  = VI, . . ., ,Ow) where     P, is a set of order pairs, ((4,  PL, (aj) 1, ..., (Lh, PL, (a,) 11, j = 1 , . . ., w. The value of a, is given by the value of p,,,. To predict the correct value of pw, our approach searches the fizzy rules with 6 E L as consequents. For any combination of values, ab. w E p, of d, it is characterized by a linguistic term, L*, to a degree of compatibility, AL& (d)  , for each k E { 1, . . ., h"}. Given those rules implying the assignment of &, L~ *LWq [oLwqL&] , for all k E (c { 1, . . ., h"}, the evidence for such assignment is given by:  %.,a+, = c %wqL@ . AL@ (4 (1 1) ks 4"  Suppose that, of the w - 1 values excluding A, only some combinations of them, All, ..., Ail, ..., 44 with & I =  {P, I j E { 1 , . . ., w - 1 } } are found to match one or more rules, then the overall weight of evidence for the value of to be assigned to LH.4 is given by:  BEDRM LIVRM PRICE  i=l  Number of bed rooms Number of living rooms Price nf the flat  As a result, the value of is given by { ( L I ,  q), ..., (4, q), . . ., (&, a)}. In order to assign a crisp value to &, the following method is used.

Given linguistic terms L1, . . ., 4 and their overall weight of evidences q, ..., a, let ,U; (x) be the weighted degree of membership of x E [0, 11 to the fuzzy set L,, q E { 1 , . . . , h } .

p' (x) is given by: 4  where x E [0, 13 and q = 1, ..., h. The defuzzified value,  F - ' ( U L , ) ,  which provides an appropriate value for c&, is  then defined as:  h  q=l  where pkuu (x) = max(& (x), p ;  (x)) for any fizzy sets X and Y.



V. PERFORMANCE ANALYSIS To evaluate the performance of our approach, we tested it  on the property database provided by the Hong Kong ofice of a worldwide property valuation company. The property database is extracted from the data warehouse maintained by the company. It contains the details of all buyhell  transactions of flats at Whampoa Garden in Hong Kong during the period between 199 1 and 2000. Whampoa Garden, which is one of the largest private real estates in Hong Kong, has been developed into 12 separate phases and there are 88 residential towers comprising 10,43 1 flats.

The database consists of 1 1,176 records in total. Each of these records represents a buyhell transaction of a flat and is characterized by 11 attributes. Of these attributes, 3 are categorical and 8 are quantitative. These attributes are summarized in Table 1.

TABLE 1 .  ATTRIBUTES IN THEproperty DATABASE.

DERV-SIZE BUILD-AGE I Building age  I Size of the flat I 0w I Size of hav window I  The domain expert from the company aims at predicting the value of PRICE of a flat based on other attributes. To perform this task, we first divided the property database into 10 partitions, D1, ..., DI0, where Dl contains the buyhell transactions in 1991, 0 2  contains the buyhell transactions in 1992, etc. We then dmretized the domain of quantitative attributes into 5 intervals using [lo] and made use of Apriori [3] to discover 9 sets of association rules, RI, ..., Rg, from the first 9 database partitions, D1, . . ., Dg. After that, we scanned the 9 database partitions once to find the missing supports and confidences of the discovered association rules, R = R I  v . . . v R9. Finally, we applied the fuzzy data mining algorithm described in Section IV to discover a set of fizzy rules, which represents the regularities about changes in the support and confidence of each association rule in R.

Using the discovered fizzy rules, we predicted how the support and confidence of each association rule in R changed.

This resulted in a set of association rules, RI,, such that the support and confidence of each rule in R;, is predicted based on the changes in the association rules discovered in the time period between 1991 and 1999. We then used CBA [12] to predict the value of PRICE in each record in the last database partition, Dlo, using R;, . Specifically, given a record in Dlo, CBA classifies it into one of the 5 intervals and the mid-point of this interval is considered as the value of PRICE predicted by CBA.

In our experiments, we used the percentage error as a performance measure. Let N be the number of records in Dlo.

For any record, ZE Dl0, let t,be the target value of PRICE in z and or be the value predicted by CBA. The percentage error, error, is defined as  0-7803-7280-8/02/$10.00 02002 IEEE 894    To hrther evaluate the performance of our approach, we used the association rules discovered in 0 9  (i.e., R9) to predict the value of PRICE in the records in D ~ o .  Furthermore, we also divided D l o  into two datasets, one for training and the other for testing. The training dataset contains 80% of records in Dl0 and the testing dataset contains the remaining 20% of records. We then discovered a set of association rules, RIO, from the training dataset and used these rules to predict the value of PRICE in the records in the testing dataset. This step is repeated ten times. It is important to note that the prediction of the value of PRICE in the records in the testing dataset based on the association rules discovered in the training dataset is the ideal case because the training and testing datasets are randomly selected from DIO and they are therefore homogeneous.

All the experiments were performed on a Sun Ultra 5 workstation with 64 MB of main memory running Solaris 2.6.

In our experiments, we set the minimum support to 1% and the minimum confidence to 50% for the mining of association rules. We also set the width of the sliding window, w, to 5. The experimental results are given in Table 2.

TABLE 2. EXPERIMENTAL RESULTS ON THEproperty DATABASE.

Rule Set R9  R;?  Percentage Error 16.7% 15.1% .? I  RIO I 14.2% I As shown in Table 2, the rule set produced by our  approach (i.e., R;, ) obtained better accuracy than the rule set discovered in 0 9  collected in 1999 (i.e., R9) in predicting the value of PRICE in the records in Dlo collected in 2000.

Although the performance of our approach is not as good as the ideal case (i.e., RIO), the experimental results shown that our approach is able to improve the performance of a data mining algorithm by discovering and predicting the changes in rules over time.



VI. CONCLUSIONS Existing data mining algorithms typically assume that the  underlying associations hidden in the data are stable over time and they therefore discover association rules from the whole database. However, it is possible that the data characteristics and the associations change significantly in different time periods. Although it is an important problem, existing data mining algorithms have not taken these changes into consideration. In this paper, we introduced a fuzzy approach for mining and predicting how the association rules changed over time. To evaluate the performance of the proposed approach, we have applied it to a database containing all buyhell transactions of flats in a large private real estate in Hong Kong during the period between 1991 and  2000. The experimental results shown that our approach is very effective in mining and predicting changes in association rules in such a way that it can improve the performance of existing data mining algorithms, especially when the discovered rules are used for classification (prediction).

ACKNOWLEGMENTS The research was supported in part by PolyU Grant, A-  P209 and G-V918.

