Mining Self-adaptive Sequence Patterns Based on the Sequence Fuzzy Concept  Lattice

Abstract   Traditional algorithms in mining sequence patterns only discover the frequent sequences satisfying the minimum support threshold minsup; however, these methods don?t consider the importance of actual sequences. In order to mine the important sequence patterns satisfying users? many demands, this paper presents a new algorithm called SASeqP for mining self- adaptive sequence patterns based on sequence fuzzy concept lattice. The algorithm firstly introduces the weight for each item in sequences. On the basis of the weight, we define the sequence fuzzy formal context and sequence fuzzy concept lattice. After these, we define self- adaptive sequence patterns and the self-adaptive coefficient that may dynamically adjust the minimum support threshold minsup. At last, this article presents the new algorithm SASeqP for mining self-adaptive sequence patterns. The experimental results show that the algorithm SASeqP has excellent performance on the time- spatial complexity.

1. Introduction   Since R.Srikant and R.Agrawal put forward to mine frequent sequences, mining sequence patterns has been one of main researches in data mining. And it has been widely applied in the action analysis of customer buying, analysis of network visiting, the early diagnosis of disease, analysis of DNA sequence patterns, and other fields.

At present, many scholars at home and abroad have presented various algorithms to detect sequence patterns.

These methods of mining sequence patterns may be approximately divided into two types: one is these algorithms based on the candidate sequence generation- test, for instance, AprioriAll[1], GSP[2], SPADE[3], and so on. The other is these methods based on sequential growth, for example, FreeSpan[4], PrifixSpan[5], etc.

Above-mentioned two types of algorithms can mine the sequence patterns satisfying the minimum support threshold minsup. However, these methods don?t consider the importance of sequences and items, i.e., most of the frequent sequences which above-mentioned two types of algorithms detect may be unimportant for users? attention.

Though some sequences don?t satisfy the minsup, they are  very valuable for users. For example, in intrusion detection, most users? sequential visiting modes belong to a normal mode on the website, whereas examiners expect to gain abnormal users? sequential visiting modes. In DNA sequences, some special diseases may depend on some abnormal gene sequences, or some sequence patterns are not so important for users? demand that they don?t need to be detected. Therefore, it is very essential for algorithms mining sequence patterns to adjust self- adaptively to detect sequence patterns of satisfying users? require. However, the existing mining algorithms don?t take account of the feature not to mine the frequent sequences meeting users? needs.

The concept lattice[6] that?s the core data structure of formal concept analysis only scans once in database to successfully construct the lattice structure. And it may strongly describe knowledge and hierarchical relation between conceptions. We only need to store the maximal common subsequence in the concept lattice. As a result, the concept lattice can reduce the generation of redundant sequences to save much space. Therefore, in order to solve above-mentioned problem of mining sequence patterns, the paper presents a new algorithm called SASeqP for mining self-adaptive sequence patterns based on sequence fuzzy concept lattice. We firstly introduce the weight value for each item in sequence database and define the sequence fuzzy formal context and sequence fuzzy concept lattice. On the basis of sequence fuzzy concept lattice, then we define self-adaptive sequence patterns and the self-adaptive coefficient that may dynamically adjust the minsup. The experimental results show that algorithm SASeqP has excellent performance on the time-spatial complexity.

2. Basic concepts   In mining of frequent sequences, let an itemset be I=(i1, i2,?, in), where the ij(j=1, 2,?, n) represents an item. A sequence S is an ordered list of itemset, denoted as S=<s1, s2,?, sm>, where sk(k=1, 2,?, m) is an itemset, and Isk ? .

The number of items in sequence S is called the length of sequence S, i.e. ?  ??  = mk  ksS  |||| . A sequence Sa=<a1, a2, ?,  an> is called a subsequence of another Sb=<b1, b2, ?, bm>, and the Sb is called a super-sequence of the Sa, denoted as  Second International Symposium on Intelligent Information Technology Application  DOI 10.1109/IITA.2008.235   Second International Symposium on Intelligent Information Technology Application  DOI 10.1109/IITA.2008.235   Second International Symposium on Intelligent Information Technology Application  DOI 10.1109/IITA.2008.235         ba SS ? , if there exists integers 1?i1<i2<?<in?m such that  11 i ba ? ,  22 i ba ? ,.?,  nin ba ? . A sequence database SDB  is a set of 2-tuples (Seq_ID, S), where Seq_ID is a sequence- id and S is a sequence. If a sequence S is contained in a sequence Sc, then calling the sequence Sc supports the sequence S. The number of sequences supporting sequence S is called the support of sequence S, denoted as Sup(S). Given a minsup, if Sup(S)?minsup, then calling sequence S is a sequence pattern, or frequent sequence in the SDB.

For example, Table 1 shows a SDB with four sequences.

Sequence <(ac)(d)> is a subsequence of the first sequence <(ac)(d)(e)(a)(f)> and the third <(e)(abc)(bde)(f)>. So, the two sequences in Table 1 support the sequence <(ac)(d)>. If minsup=2, then the sequence <(ac)(d)> is a sequence pattern.

Table 1 A sequence database SDB Seq_ID Sequence  1 <(ac)(d)(e)(a)(f)> 2 <(e)(a)(b)> 3 <(e)(abc)(bde)(f)> 4 <(f)(a)(ef)(g)>   3. Sequence fuzzy concept lattice  3.1. Sequence fuzzy formal context   On the basis of the fuzzy formal context and fuzzy concept lattice[7] (basic concepts refer to literature [7]), this paper expands them so that they can organize and denote sequence patterns effectively. Considering the algorithm is to mine important sequence patterns and items, and delete the unimportant items, therefore, we introduce the weight value for each item in the SDB.

Meanwhile, the SDB is transformed to sequence fuzzy formal context based on the item standard weight and item-position sets in sequences.

Definition 1 In sequence database SDB, let the set of all items be I=(i1, i2,?, in), for any item ij?I(j=1, 2,?, n), calling the IW(ij) is the weight of item ij and calling the IWV=(W(i1), W(i2),?, W(in)) is a weight vector that itemset I corresponds to, where the W(ij) satisfies the 0?W(ij)?1.

In SDB, weights of items may be specified by users? require, or experts from relevant fields, as shown in Table 1, IWV(a, b, c, d, e, f, g)=(0.9, 0.1, 1, 0.25, 1, 1, 0.2).

Definition 2 In the SDB, let a sequence S be <s1, s2,?, sm>, the times of any item ij?I appearing in sequence S is called item frequency, denoted as INumS(ij); the position set of any item ij?I appearing in sequence S is called item- position set, denoted as IPosS(ij), where j=1, 2,?, n.

For instance, there is a sequence <(e)(abc)(bde)(f)> whose sequence-id is 3 in sequence database SDB. For each item in the sequence <(e)(abc)(bde)(f)>, the item frequency and item-position sets are respectively the following: INum3(a)=1, INum3(b)=2, INum3(c)=1, INum3(d)=1, INum3(e)=2, INum3(f)=1; IPos3(a)={2}, IPos3(b)={2, 3}, IPos3(c)={2}, IPos3(d)={3},  IPos3(e)={1, 3}, IPos3(f)={4}.

Definition 3 In sequence database SDB, for a sequence S=<s1, s2,?, sm>, let the set of items included in sequence S be Item(S), then for )(SItemi j ?? , calling the  ? ?  = )(  )()]()([)( SItemi  jSjjsr iIWiINumiIWiIW  is the weight  of item ij relative to other items in sequence S. For short, relative weight of item ij, where j=1, 2? |Item(S)|.

In definition 3, when the length of sequence S is longer, the relative weight of each item in sequence S will be smaller. Therefore, it is very necessary for the relative weight of each item to carry out the process of the standardization, as follows.

Definition 4 In the SDB, for a sequence S=<s1, s2,?, sm>, if )(SItemi j ?? , its relative weight is )( jsr iIW , then calling the ))((max)()(  |)(|1 ksrSItemkjsrjsr iIWiIWiFIW  ?? = is the  standard weight of relative weight of item ij. For short, standard weight of item ij, where j=1, 2, ?, |Item(S)|.

On the basis of the standard weight of items and item- position sets, this paper expands the definition of fuzzy formal context in order to denote sequence pattern with weight. The sequence fuzzy formal context (for short, SFFC) is a quadruple ),,,( IPRMGSFFC = , where the G is the set of sequence-id, i.e. object set; the M is the set of all items in SDB, i.e. attribute set, and all items in the M are listed in the sequence of dictionary; for Gg ??  and  Mm?? , the R satisfies R(g, m)=FIWgr(m), which represents the standard weight of item m relative to other items in sequence g; the IP is a set of item-position sets IPosS(ij) of all items in each sequence.

The Table 2 is the sequence fuzzy formal context transformed by SDB in the Table 1, where the meanings of parameters m?  and m?  refer to the literature [7].

Table 2 Sequence fuzzy formal context SFFC R a b c d e f g  1 1 {1,4}   0.6 {1}  0.1 {2}  0.6 {3}  0.6 {5}    2 0.9 {2} 0.1 {3}      {1}      3 0.5 {2} 0.1  {2,3} 0.5 {2}  0.1 {3}  {1,3}  0.5 {4}    4 0.5 {2}       0.5 {3}  {1,3}  0.1 {4}  m? 0.3 0.1 0.4 0.1 0.5 0.3 0.3 m? 1.0 0.9 0.7 0.8 1.0 1.0 0.8   3.2. Sequence fuzzy concepts   In fuzzy formal context[7] ),,( RMGK = , for any )(GPA? and any )(MPB ? , the extension A and intension  B of fuzzy concept ),,,( ??BAC =  should satisfy the closure operations BA =? and AB =? . Likewise, in         sequence fuzzy formal context ),,,( IPRMGSFFC = , it should satisfy these two closure operations, too.

Definition 5 In the SFFC, let any sequence set be GidididSset  tkkk ?= },...,,{  , where || Gk j <? (j=1, 2, ?, t;  t<|G|), a set of common subsequences of all elements in the Sset is denoted as ComSS(Sset); for  )(SsetComSSsubs ?? , all subsequences and super- sequences of the common subsequence subs in the ComSS(Sset) are called a expand-reduced set in the Sset, denoted as ExpRSset(subs).

Definition 6 In the SFFC, let any sequence subs be in the set ComSS(Sset), i.e. )(SsetComSSsubs ?? , for a sequence )(subsExpRS Ssetx ?  and the discretional sequence Sy belonging to the set }{\)( xSset SsubsExpR , if there doesn?t exist the yx SS ? , then calling the sequence Sx is the maximal common subsequence in the ExpRSset(subs). The set composed of all maximal common subsequences in the set ComSS(Sset) are denoted as  }),...,,({ 21 tkkk  idididMCS .

For example, in Table 2, according to definition 6, we  can gain the following sets: MCS({1})={<(ac)(d)(e)(a)(f)>}; MCS({1,3})={<(e)(a)(f)>,<(ac)(d)( f)>,<(ac)(e)(f)>} Definition 7 In the SFFC, the closure operations of the  Galois connection are the following: ?1 for )(GPA ?? :  )}),(),(,()(|{)( mm mgRsItemmAgAMCSssA ?? ????????=? ?2 for a sequence set T:  )}),(),((),(|{)( mm mgRsItemmgsTsGggT ?? ??????????=? Where the MCS(A) represents the maximal common  subsequence set of the sequence set A, the Item(s) represents the set of all items in sequence s.

In the definition 7, if A={1, 3}, then ?(A)={<(e)(a)(f)>, <(ac)(d)( f)>, <(ac)(e)(f)>}; if T={<(a)>, <(e)(a)>}, then ?(T)={1, 2, 3}.

Definition 8 In the SFFC, if a quadruple ),,,( ??TAC = satisfies the following three conditions:  ?1 sequence object set )(GPA?  and the T is a sequence set in the SFFC;  ?2 ?(A)=T, ?(T)=A; ?3 fuzzy parameters ?  and ?  are respectively:  ? ?  = Ts  sSW T  )( ||  1?  and ||))(( 2 TsSW Ts ? ?  ?= ?? , where  the || T  is not zero, i.e. 0|| ?T ; Then calling the quadruple ),,,( ??TAC =  is a  sequence fuzzy concept in the SFFC, where A is called the extension of the C and B is called the intension of the C, the variable ?  is the average membership of maximal common subsequences the extension of the C corresponds to; it embodies the degree that the C assembles subsequences. The variable ?  is the average grade that  intensions of the C deviate from the average; it embodies the divergent degree of intensions of the C.

Definition 9 In sequence fuzzy formal context SFFC, given two discretional sequence fuzzy concepts  ),,,( 11111 ??TAC = and ),,,( 22222 ??TAC = , for any s2 belonging to the T2, there always exists the 11 Ts ?  such that 12 ss ?  or 21 AA ? , then calling the C1 is a sequence fuzzy sub-concept of the C2, symmetrically, the C2 is a sequence fuzzy hypernotion of the C1, denoted as 21 CC ? .

In the SFFC, the partial order between these sequence fuzzy sub-concepts and sequence fuzzy hypernotions induces a lattice structure called the sequence fuzzy concept lattice (for short, SeqFCL), denoted as FL(SFFC).

We improve on the lattice?s incremental construction algorithms in the literature [7] to construct the SeqFCL and the SeqFCL of the sequence fuzzy formal context Table 2 is shown in Figure 1.

Figure 1 SeqFCL of the context Table 2   4. Self-adaptive sequence patterns  4.1. Description of the self-adaptive sequence   On the basis of sequence fuzzy concept lattice, self- adaptive sequence patterns use the weight of sequences to adjust the user-specified minsup self-adaptively so as to discover the sequence patterns satisfying users? demands.

Definition 10 On sequence fuzzy concept lattice, let a sequence S be the <s1, s2,?, sm>, for Ssk ?? , let the itemset sk be the (ik1, ik2, ?, || kski ), then calling the  ??? == =  = m  k k  m  k  s  j kj siIWSSW  k   ||   ||)()(  is the weight of sequence S.

Lemma 1 Let a sequence S be the <s1, s2,?, sm>, i.e.

S=<s1, s2,?, sm>, then its weight SW(S) must satisfy the inequation 0?SW(S)?1.

Proof: According to definition 1, we know the 0?IW(ikj)?1 is to set up, thus, for Ssk ?? , the inequation  ||)(0 ||  k  s  j kj siIW  k  ?? ? =  is to set up, therefore, the inequation  ??? == =  =+++?? m  k km  m  k  s  j kj ssssiIW  k    ||  |||)|...|||(|)(0  is also         correct, i.e. 1||)(0  ||  ?? ???  == =  m  k k  m  k  s  j kj siIW  k . Consequently,  the proposition is demonstrated to be right.

Because sequence patterns need to embody the  importance, therefore, the algorithm in this article should adjust the minsup self-adaptively according to users? demands, and the unimportant sequences should be detected less.

Definition 11 For a sequence S=<s1, s2,?, sm>, if there exists a real number ?  and 10 ?? ? , when ??)(SSW , sequence S is considered to be important; when  ?<)(SSW , sequence S is deemed to be valuable, then calling the ?  is an importance threshold of sequence S.

Definition 12 On sequence fuzzy concept lattice, for a sequence S=<s1, s2,?, sm>, if the ?  satisfies the following two properties:  ?1 when ??)(SSW , the support Sup(S) of sequence S satisfies Sup(S)?? minsup and 0? ? ?1;  ?2 when ?<)(SSW , the support Sup(S) of sequence S satisfies Sup(S)?? minsup and supmin11 ?< ? ;  Then calling the ?  is the self-adaptive coefficient of the minsup of sequence S. For short, self-adaptive coefficient.

If a sequence S satisfies the Sup(S)?? minsup, then calling the sequence S is a self-adaptive sequence pattern (for short, SASP).

By the ? , the algorithm in this article may dynamically adjust the minsup of sequences; furthermore, it can mine valuable sequence patterns meeting users? needs. The value range of the ?  satisfies the supmin10 ?? ? , but it is also made certain according to specific applications. The ?  in this article is defined as follows:  ??  ? ? ?  <+? ?  = ? ?  ? ? )(  supmin 1)(  supmin 1supmin  )()(  SSWSSW  SSWSSW (1)  In the light of the equation (1), when each item is treated equally in the SDB, i.e. for each item ij, IW(ij)=1, then the ? is always one. Under the condition, the mining of self- adaptive sequence patterns is namely the mining of traditional frequent sequences. Therefore, the algorithm in this article has better function than traditional ones.

Lemma 2 If the self-adaptive coefficient ?  satisfies  ??  ? ? ?  <+? ?  = ? ?  ? ? )(  supmin 1)(  supmin 1supmin  )()(  SSWSSW  SSWSSW , then supmin  10 ?? ? .

Proof: ?1 when ??)(SSW , then according to Lemma 1, 1)(0 ?=?? SSW?? , it?s correct by all appearances.

?2 when ?<)(SSW , because 0 supmin  1supmin <? ?  , therefore,  the ?  is a monotone decreasing function about the SW(S); therefore, when SW(S)=0, the ?  can gain the maximum  value, i.e. supmin1max =? ; when ?=)(SSW , the ?  can obtain the minimum value, i.e. 1min =? , thus the ?  satisfies the supmin11 ?< ? . In conclusion, supmin10 ?? ? , Therefore, the proposition is correct.

4.2. Mining of the self-adaptive sequence   On sequence fuzzy concept lattice, the algorithm SASeqP in this paper may detect traditional sequence patterns and self-adaptive sequence patterns swiftly. The detailed description of algorithm SASeqP is the following: Algorithm 1 Procedure SASeqP (FL(SFFC), minsup, ?) Input: sequence fuzzy lattice FL(SFFC),  minsup, ? Output: self-adaptive sequence set SASSet  1: Begin 2:    VISITED?? 3:    for each node C=(A, T,? , ? )?FL(SFFC) do 4: for each s?T and s?VISITED do 5:           Calculate weight of sequence s SW(s) by IWV 6:           Sup(s)?|A|  {the support Sup(s) of sequence s  is at least |A|} 7:           for each Cp parent node of C do 8:               if s?intent(Cp) and extent(Cp)?? then 9:               Sup(s)?|extent(Cp)|  endif  10: Endfor 11:           if SW(s)?? then 12:             ??SW(s) 13:             if Sup(s)??minsup then 14: SASSet?(s, SW(s))   endif 15: else 16:     ??((minsup-1)/?minsup)*SW(s)+1/minsup 17:              if Sup(s)??minsup then 18: SASSet?(s, SW(s))  endif 19: Endif 20: VISITED?s 21: Endfor 22: Endfor 23: End   5. Experimental analysis   In this section, we experiment on a random-generating sequence set to test the efficiency and capability of algorithm SASeqP. We carry out algorithm SASeqP using Python2.5.1.

The experiments are performed on the CPU2.8GHz Intel Pentium VI machine with the 512MB main memory, running Linux system. In these experiments, let the sequential importance threshold ? be 0.5.

In the following Figure 2 and Figure 3, the number of items, |M|, is 20; the number of sequences is 100. The average probability that every sequence object possesses items is 0.3; the thresholds m?  and m?  of each item attribute m and the weight of items are generated randomly between the value 0 and 1.

In the Figure 2, it reveals that the time complexity of algorithm SASeqP is how to be varied when the minimum support threshold minsup is changed. By the Figure 2, we may see that the time complexity of the algorithm SASeqP becomes gradually small along with the increase of the minsup.

Figure 2  time complexity of SASeqP increasing with  minsup  In the Figure 3, It shows that the number of self- adaptive sequence patterns which are mined by algorithm SASeqP is how to be changed when the minsup is varied.

By the Figure 3, we can see that when the minsup increases, the number of SASP will reduce quickly, this is because that the important sequence patterns are in small quantities in the whole sequence database SDB and many unimportant sequences which are perhaps frequent are pruned by the condition Sup(S)? ? minsup.

Figure 3 the relation between minsup and the number of SASP  In the Figure 4, the |M| is 20, the average probability that every object possesses items is 0.4; weights of items are generated randomly between the value 0 and 1, the minsup is 1%. The expression 0=?  represents that the threshold  m?  of every attribute is 0, the 1=?  represents that the threshold  m?  of every attribute is 1. Likewise, the meanings of the expression 3.0=? , 9.0=?  and 5.0=? ,  6.0=?  are the same as above-mentioned 0=?  and 1=? .

By the Figure 4, we can see that when the threshold  m?  is close to the threshold m? , the number of self- adaptive sequence patterns become relatively small. So, the algorithm SASeqP can satisfy users? demand and reduce the generations of redundant sequence patterns. Therefore, it may save much storage space.

Figure 4 the relationship between the number of objects and  SASP under different thresholds  6. Conclusions   It is feasible for algorithm SASeqP to mine sequence patterns satisfying users? needs. The experiments also show that algorithm SASeqP has excellent performance on the time-spatial complexity. How to actualize the parallel or distributed mining of self-adaptive sequence patterns will be the next step of research.

