On the Mining of Substitution Rules for Statistically Dependent Items

Abstract  In this paper: a new mining capabiliiy, called mining of substitution rules, is explored. A substitution refers to the choice ma& by a customer to replace the purchase of some items with that of others. The process of miningsubstitution rules can be decomposed into twoprocedures. Thejirstpm- cedure is to identrfv concrete itemsets among a large num- ber of frequent itemsets, where a concrete itemset is a fre- quent itemset whose items am statistically dependent. The second procedure is then on the substitution rule genera- tion. Two concrete itemsets X and Y form a substitution rule, denoted by XD Y to mean that X i s  a substitute for L ifand only $ ( I )  X and Yare negatively correlated and (2) the negative association rule X+ 7 exists. In this papec we derive theoretical properties for the model of substitu- tion rule mining. Then, in light of these properties, algo- rithm SFM (standing for substitution rule mining) is de- signed and implemented to discover the substitution rules efficiently while attaining goodstatistical sign$cance. Em- piricalstudies ampeformedto evaluate thepeformance of algorithm SRMpmposed. It is shown that algorithm SRM produces substitution rules of very high qualify  1. Introduction  Various data mining capabilities have been explored in the literature [S, 7, 141. Among them, the one receiving a significant amount of research attention is on mining as- sociation rules [2]. Given a database of sales transactions, the goal of mining an association rule is to discover the rela- tionship that the presence of some items in a transaction will imply the presence of other items in the same transaction.

Note that in addition to the association rules, the data in a transaction database also possesses some other consumer purchase behaviors. Specifically, it is important to under- stand the choice made hy consumers, which, corresponding to the purchase of some items instead of that of others, is termed substitution in this paper. For example, in a grocery  store, the purchase of apples may be substituted for that of pears. Intuitively, the substitutes are of analogous proper- ties and therefore are often possible choices for customers.

However, in some cases, the substitutes could be formed due to purchasing purposes. For example, the purchase of roses may be substituted for that of a Teddy bear and a box of chocolates. The mining of substitution rules in a transac- tion database, same as that of association rules, will lead to very valuable knowledge in various aspects, including mar- ket prediction, user behavior analysis and decision support, to name a few. Despite of its impoltance, the mining of substitution rules, unlike that of association rules, has been little explored in the literature.

Mining negative association rules of the form X -+ y, where means the absence of itemset Y, is useful for the mining of substitutive itemsets, since in a negative associa- tion rule, the presence of the antecedent itemset implies the absence of the positive counterpart of the consequent item- set, meaning that X could be a substitute for Y. It is noted that some efforts were elaborated upon the mining of nega- tive association rules. In [IS], the taxonomy of items is in- troduced and a heuristic of using similarity among items in the same category is utilized to facilitate the mining of nega- tive association rules. On the other hand, a constraint-based approach is adopted in [3]. Notice, however, that in the neg- ative association rule mining, the dependency of items in an itemset is not considered since the itemset frequency is the only measurement when generating frequent itemsets. In contrast, to discover substitution rules, one should first de- termine possible itemsets which could be choices for cus- tomers. The purchasing frequency, i.e., support of an item- set, is not adequate to identify these possible substitutes.

The dependency of items has to be examined to identify concrete sets of items which are really purchased together by customers. Specifically, a frequent itemset whose items are statistically dependent is called a concrete itemset in this paper. Note that if a frequent itemset is not concrete, that itemset is likely to consist of frequent items which, though appearing together frequently due to their high in- dividual occurrence counts, do not possess adequate depen-  0-7695-1754-402 $17.00 Q 2002 IEEE 442    dency among themselves and are thus of little practical im- plication to be used as a whole in either the antecedent or the consequent of a substitution rule. In addition, the neg- ative correlation of two itemsets should be verified if these two itemsets are considered to be substitutes for each other.

Without considering these aspects, the mining of negative association rules is not applicable to the mining of substitu- tion rules.

Consequently, we develop in this paper a new model of mining substitution rules. The process of mining substitu- tion rules can be decomposed into two procedures. The first procedure is to identify concrete itemsets among a large number of frequent itemsets. The second procedure is on the substitution rule generation. Two concrete itemsets X and Y form a substitution rule, denoted by XDY to mean that X is a substitute for Y, if and only if ( I )  X and Y are negatively correlated and (2) the negative association rule X - +  7 exists. Without loss of generality, the chi-square test [8] is employed to identify concrete itemsets by statistically evaluating the dependency among items in individual item- sets. Moreover, the Pearson product moment correlation coefficient [8, 1 I ]  is utilized to measure the correlation be- tween two itemsets. Explicitly, we derive theoretical prop- erties for the model of mining substitution rules. Then, in light of these properties, algorithm SRM (standing for sub- stitution rule mining) is designed and implemented to dis- cover the substitution rules efficiently while attaining good statistical significance. For comparison purposes, a com- panion method which is extended from algorithm Apriori, called algorithm Apriori-Dual, is also implemented.

Extensive experimental studies have been conducted to provide many insights into algorithm SRM proposed. The quality of substitution rules in terms of statistical measure- ments is also evaluated. It is shown by experiments that al- gorithm SRM significantly outperforms algorithm Apriori- Dual. It is noted that algorithm SRM produces substitution rules of very high quality as measured by the correlation and the violation ratio [I]. The advantage of SRM is even more prominent when the transaction database is sparser.

The rest ofthe paper is organized as follows. The frame- work of mining negative association rules is explored and the model of substitution rule mining is presented in Section 2. Algorithm SRM and an illustrative example are described in details in Section 3. Several experiments are conducted in Section 4. This paper concludes with Section 5.

2. Model of Substitution Rule Mining  To facilitate OUT discussion, we shall first review the framework of negative association rules mining in Section 2.1. The model of substitution rule mining is then presented in Section 2.2.

2.1. Mining of Negative Association Rules  Same as in most prior work on mining association rules 12, 51, an itemset is a set containing one or many items. The support of an itemset X, denoted by SX, is the hction of transactions containing X in the whole dataset. The item- sets which meet the minimum suppolt constraint are called frequent itemsets or large itemsets [SI. An association rule is an implication ofthe form X+Y with XnY=o, where X and Y are both frequent itemsets. The support of the rule X-Y, i.e., Sup(X-+Y), is SxUy, and the confidence of the rule X-+Y, i.e., ConG-tY), is w. Given a large data- base of transactions, the goal of dining association rules is to generate all rules that satisfy the user-specified con- straints of minimum support and the minimum confidence, i.e., Sup(X-+Y)>MinSup and Conf(X+Y)>MinConf.

Definition 1: An itemset X is positive if and only if it con- tains no complement items, i.e., X=(il, i*, ..., ik) where i j is an item for 1 _< j 5 I C .  On the other hand, the negative itemset is an itemset containing one or more complement items. If a negative itemset is composed by complement items only, i.e., {il, i ~ ,  _.., ib}, then this itemset is pure negative and can be denoted by x.

A negative association rule refers to an association rule of which either the antecedent itemset, the consequent item- set, or both are negative. An example of mining negative itemsets through a naive approach is given below for illus- trative purposes.

Example 1: Consider the transaction database in Table l(a). We first append the complement items to each trans- action as shown in Table I(b). For example, the transaction with TID=l, i.e., {a, c, d} in Table l(a), becomes {a, 6, c, d, E ,  9 in Table I(b). The resulting database in Table I@) is the input to the itemset generation algorithm.

Table I. (a) The original transaction database; (b)  _ _  -  After complement items are added  Given that MinSum.3, all the frequent itemsets can then be discovered from Table l(b) as summarized in Ta- ble 2. Note that we are only interested in those complement items whose positive counterparts are frequent for market basket analysis. As a result, the complement item T is not shown in Table 2, since the item e is not frequent.

Table 2. Frequent iternsets generated from the database in Table lfb) fMinSu~=0.3)  Clearly, with this straightforward addition of comple- ment items into the database, the mining of negative asso- ciation rules can be performed by directly using methods devised for mining conventional association rules. How- ever, this benefit may not be able to justify several draw- backs of this naive approach in practice. First, excessive storage space is required to store complement items and also the additional itemsets resulted. Next, many of the frequent itemsets generated are composed of complement items only. These itemsets are usually of little use in real applications. Finally, extra database scans are needed for the mining process. In real applications, this naive approach will suffer a prolonged execution time and make mining of negative association rules an infeasible task.

Once the negative itemsets are generated, one can dis- cover all negative association rules in a straightforward manner. For two itemsets X and Y where YCX, the rule Y+(X-Y) is output if the required MinConf is satisfied.

However, for our purpose of discovering substiMion rules, two positive itemsets are required to form a substitute pair.

Thus, the algorithm Apriori-Dual, i.e., a companion method extended from algorithm Apriori, is proposed to generate only rules whose antecedent is positive and consequent is pure negative, i.e., X - 7 whereX and Y are positive item- sets.

Algorithm Apriori-Dual I /  Input: MinSup and MinConf I /  Procedure of generating allfrequent itemsets, including / I  the negative ones 1. append the complement items whose positive counterpart  2. generate the set of frequent (positive and negative) items,  3. remove the negative items whose positive counterpart is  4. fork 2 2 do{ 5. generate the candidate set of k-itemsets from Lk.1, i.e.,  6. if (Ck is empty) then break; 7. scan the transactions to calculate supports of all candi-  is not original present to each transaction;  i.e., LI;  not frequent from LI;  c k  = Lk.1 M Lk.1;  date k-itemsets; 8. Lk = { C?Ck 1 sc 2 MinSup }; 9. I 11 Procedure ofnegative association rule generation 10.foreach negative itemset X in Lks do{ 11. let Y be the largest pure negative itemset that Y c X; 12. if (X-Y) is not an empty set // (X-Y) is positive 13.

14.

15.)  if (Conf((X-y) - 7) 2 MinCont) output the rule (X-7) - 7;  As pointed out before, the problem formulation of the negative association rule mining is different from that of the substitution rule mining. In addition, since complement items are appended to the original transaction database, the computation cost of algorithm Apriori-Dual is, as con- formed by OUT experimental results, very high. These draw- backs reduce the practicability of using algorithm Apriori- Dual for identifying substitute itemsets. Consequently, a new algorithm for mining substitution rules is proposed and will be described in later sections.

2.2. Mining of Substitution Rules  As mentioned before, the process of mining substitution rules can be decomposed into two procedures. The first one is to identify concrete itemsets among large amounts of itemsets. The second one is on the substitution rule gen- eration. The chi-square test [SI is employed to identify concrete itemsets by statistically evaluating the dependency among items in individual itemsets. Also, the Pearson prod- uct moment correlation coefficient [S, I I ]  is utilized to mea- sure the correlation between two itemsets.

2.2.1. Identification o f  Concmte Itemsets. Concrete item- sets are those possible itemsets which could be choices for customers with some purchasing purposes. To qualify an itemset as a concrete one, not only the purchasing fre- quency, i.e., support of an itemset, but also the dependency of items has to be examined to declare that these items are purposely purchased together by customers. One common approach is to evaluate the dependence among items in an itemset by the chi-square test 14, 10, 131. Specifically, the chi-square value for an itemset can be derived in terms of supports and expected supports of its corresponding item- sets, as stated in Theorem 1 below.

Theorem 1: Let X={xl, xz, ..., xk} be a positive k-itemset, the chi-square value for X is computed as  where n is the number of total transactions, Y+ denotes the positive itemset where all complement items in item- set Y are replaced by their positive counterparts, e.g., {a,6Pft={a,b,c) where a, b and c are positive items, and EI = n S, is the expected support of I.

,E I     P m f i  Since the itemset X is of size k and the presence of an item in each transaction is 0-1 valued, a correspond- ing 2 x 2 ~  . . . x 2  k-dimensional contingency table can be constmcted. Each dimension of this contigency table cor- responds to the presence of an item, i.e., xi ? X, in each transaction. The values of these cells are exactly the sup- ports of itemsets (%, s, ..., Zi}, {%, 4, ..., xk}, ..., (XI, x2, ..., xk)  and the summation ofthese values is n, i.e., the number of transactions. Also, the corresponding itemsets above can be formulated as {Y I Y?=X). The chi-square value is then computed by  (0, -E.)? Chi(X) = c c E E c l l .  E= ?  where 0, is the observed value and E, is the expected value of cell c in the contingency table. For any itemset I and its corresponding cell c that I+=X, we have  0, = n  x WandE. = n  x nS., . E l  With some algebraic manipulations, we have  = n x  [( Q.E.D.

I ?  IY 1V.X)  To utilize the chi-square test to verify whether the oc- currences of given items are dependent, two contradictive hypotheses are made H,,: The occurrences of all items(xl-xk) are independent,  { HI: & is rejected.

With Theorem 1, to declare the dependency among items in an itemset X, or to support hypothesis HI, the chi-square value for X is required to be no less than a threshold, i.e.,  In addition, it follows from advanced statistics and infor- mation theory [9] that corresponding degree of freedom for this test can be denoted by  C W X )  2 x:f(x),a ?  d f ( X )  = n ( u , )  - [.(vi) - 11 - 1 = 2* - k - I  where c(v,) is the number of categories in dimension i, i.e., c(v,)=2 for all dimensions since the presence of an item in each transaction is 0-1 valued.

We comment that the results derived in Theorem 1 are essential for our mining of  substitution rules and are not subsumed by the work in [4]. In 141, it was stated that ?if S is correlated with significance level a, any superset of S is also correlated with significance level a.? From Theorem 1 in 141, one may mistakenly assume that the chi-square test for itemsets at a given significance level is upward closed (as stated in Theorem I in [4].) However, as also noted in [6], this upward closure property is not fully correct. Ex- plicitly, the first statement of the proof of Theorem 1 in 141 ?The key observation in proving this is that not matter what k is, the chi-squared statistic has only one degree of free- dom? which its subsequent proof is based upon is not true, thereby leading to incorrect conclusions. A counterexample of Theorem 1 in [4] is given in the Appendix for interested readers. Specifically, as opposed to what Thwrem 1 in [4] suggests, all correlated itemsets, rather than only minimally correlated ones, should be discovered. This in hun justifies the necessity of our development of the process to identify concrete itemsets in this paper.

Without loss of generality, a concrete itemset is thus d e fined to be a frequent iternset which is positively correlated given a significance level (Y (usually a = 0.05). if it con- tains more than one item. Note that the significance level of a concrete itemset is expected to be at least no less than that of its subsets. For example, if the itemset {flashlight, battery) has a quite high chi-quare value, then its super- set, e.g., (flashlight, battery, pencil), could still have a high chi-square value ( > x % ~ ~ , , , )  even though pencil is not so correlated with the other items.

Definition 2: A positive frequent itemset X={xl, x2, ..., xk] is called a concrete itemset, if and only if ( I )  k=l, or (2) k22,  Sx > Sz, and Cht(X)  t x ; m , . ,  where n S,, corresponds to the expected support for itemset X, and x $ ( ~ ) , ,  is the value of chi-square distrib- ution with degree of freedom df(X) at probability a. Note that SX > n Sz, is required to ensure that all x, E X are positively correlated.

The value of x&xp can be obtained by the table look- up. As mentioned ear ier, the usual value a = 0.05 is used in this study for statistical significance. Considering itemset (a, d) in Table 2 for example, Sod = 0.3 > S. x s d  = 0.6 x 0.3. Also, the chi-square value for [a, d) is  =.EX  *,EX  %,EX  0.5? 0.22 0.3? =IO x (- +O+- + - - I ) 0.5 x 0.7 0.5 x 0.7 0.5 x 0.3     Thus, {a, d} is a concrete itemset.

2.2.2. Testing of Negative Correlation. To evaluate the correlation between two concrete itemsets, we adopt the measurement of Pearson product moment correlation coef- ficient [SI. Theorem 2 states that the correlation coefficient of two itemsets can be determined by their supports.

Theorem 2: Let X and Y be two itemsets with X n Y = 0 .

The correlation coefficient of X and Y can be formulated in terms of their supports. Explicitly,  Proofi Since variables corresponding to occurrence of items in a transaction database are all 0-1 valued, it follows that  EX=EX'=Sx, EY=EY2=Sy and E ( X Y ) = S x y  where E stands for the expected value. According to the definition of correlation coefficient, we have  c 4 x ,  Y ) J V a r ( X ) .  V a r ( Y )  - E [ ( X  - E X ) ( Y  - E Y ) ] J E [ ( X  -EX) ' ]  E [ ( Y  -  E ( X Y )  - ( E X ) ( E Y ) \ / [ E X 2  - ( E X ) ' ] .  [EY' - (EY)']  SXY - s x  . SY  -  - -  - - J [ S x  - (SX)'][SY - (SY)?

J s x ( l - s x ) s Y ( l  - S v ) Q.E.D. SXY - s x  . SY - -  Note that when both variables to be correlated are binary as in this case, we may use the phi coefficient of correlation as stated in [ l l ,  121 instead ofp(X,Y) in Theorem 2. How- ever, the phi coefficient of correlation and the Pearson prod- uct moment correlation coefficient are in fact algebraically equivalent and give identical numerical results. Therefore, for notational simplicity, we employ p(X,Y) to express the results of Theorem 2.

Consequently, a substitution rule can be defined as be- low.

Definition 3: Given two itemsets X and Y and X n Y = 0 ,  X is a substitute for Y, denoted by XDY, if and only if ( I )  both X and Y are concrete, ( 2 ) X  andY arenegatively correlated, i.e., p(X,Y)<-p,i, 5  0 (usually pmi,=0 for simplicity), and  Sup(X+ y)>MinSup and Conf(X+ y)>MinConf.

(3) the negative association rule X+ V is valid, i.e.,  3. SRiW Substitution Rule Mining  Given the definitions of concrete itemsets and substitu- tion rules, a detailed description of algorithm SRM for min- ing substitution rules is given.

Algorithm SRM I/ Input: MiiSup, MinConf; and pmi.

I/ Procedure of identifving concrete itemsets 1. generate the set of all frequent (positive) items, i.e., Li,  and assign Lt to the set of concrete itemsets; 2. fork  33 ddf 3. generate the candidate set ofk-itemsets from Lk.1, i.e.,  = Lk.1 w Lk.1; 4.

5.

if ( 4  is empty) then break, scan the transactions to calculate supports of all candi-  ~~  date k-itemsets; Lk = { C ? c k  I s, 2 MinSup.1; foxtach frequent itemset X in Lk do{  6.

1.

8.

9.

10. ) 11.)  13. if(p(X, Y )  < -p,3  if (Sx > n SZi) && (Chi(X) 2 X & ~ , J =,EX  add X to the set of concrete itemsets;  /I Procedure of substifution rule generation 12.foreach pair of concrete itemsets X, Y do{  14.

15.

16.)  The execution of algorithm SRM can be best understood by the example below.

Example 2: Consider the transaction database in Table I(a). Algorithm SRM first performs the procedure of iden- tifying concrete itemsets, i.e., operations from line 1 to line I 1  in algorithm SRM. Given MinSup=0.2 and Min- Conf=0.7, the frequent itemsets can be first obtained as in Table 3.

The dependency among items in these frequent itemsets is then evaluated. By Definition 2, chi-square tests of con- creteness are performed on each k-itemset for k>2. The chi-square values of these frequent itemsets are also shown in Table 3 where only two frequent 2-itemsets are found concrete. Note that (a, c, d} fails to pass the test since @({a, c, d})=23-3-1=4 and Chi({a,c,d}) = 6.38 < x~ ,o .os  = 9.49.

Table 3: Frequent (positive) itemsets, their supports  and chi-square values generated from Table l(a)  if (Sup(X - v) > MinSup) && (Conf(X+ Y) 2 MinConf) 11 X + 7 is valid  output the substitution rule X D Y,  (concrete  0.2  a, c, d 0.2  Next, in the procedure of substiMion rule generation, i.e., operations from line 12 to line 16 in algorithm SRM, the candidate substitution pairs can then be generated by     0.85 0.9 0.95 1 1 . m  1.1 Viobtion Ratio  (a) Violation ratio distribution curve for results of D b a ~  M  0.85 0.9 0.95 1 l.M 1.1 Viobtion Ratio  (b) Violation ratio distribution curve for results of Dspm  Figure 1. Violation ratio distribution curves  joining on these concrete itemsets. By examining the sup port, confidence and correlation of these candidate pairs, substitution rules can be generated as in Table 4.

Table 4: Substitution rules discovered with MinSup=0.2, MinConf=0.7. and pmin=-O.5  -0.65 -0.65 -0.65  4. Experimental Results  The simulation model of our experimental studies is de- scribed in Section 4. l. The quality of substitution rules gen- erated is evaluated in Section 4.2.

4.1. Simulation Model  As mentioned in Section 2.1, mining negative associa- tion rules by appending complement items to the original transaction database incur both an excessive storage space and a huge computational cost. Without the process of gen- erating rules with the required form as adopted by Apriori- Dual, the computation time of the naive approach for gen- erating negative association NI- is shown by our exper- iments to be longer, in several orders, than those of both the algorithms Apriori-Dual and SRM. Therefore, only the  algorithms Apriori-Dual and SRM are being compared in following experiments.

We use two synthetic datasets, i.e., Ddenae and DapVae, generated by a randomized transaction generation algorithm in [16]. The values of parameters used to generate the datasets are summarized in Table 5, where both the dense and the sparse dataset distributions are considered.

Table 5. Parameter settings of the  synthetic datasets  T I  IO I 5 I Average size of transactions I Ddenac I D.,.,.. I Meaning  1 1  50 I 100 I Number of items D I 10,000 I 10,000 I Numberoftransactions  4.2. Evaluation of Rule Quality  To evaluate the quality of a substi&tion rule, we may count the number of transactions which contain only one of the substitutive itemsets in the rule, i.e., the antecedent or the consequent. Hence, the violation ratio proposed in [I] is adopted. Specifically, a pair of substitutive itemsets is said to be in violation if exactly only one of them is present in a bansaction. The violation ratio is defined as the ratio of the number of real violations to the expected number of vi- olations. Thus, the latgerthe value ofthe violation ratio of a rule, the more likely its antecedent and consequent itemsets are substitutes for each other. Note that the violation ratio of an interesting substitution rule should be lager than one.

SRM (D-"sa) {mi 6 1 m -  0.8 0.1 0 0. I 0.1 0 -0.1  Correlation Correlation  Figure 2. Quality matrix in the dense dataset  Apriori-Dual (Dswe) 1.2  6 1  6 1 m  5 5  0.8 0.8 0.1 0 -0.1 0.1 0 -0.1  Correlation Correlation  Figure 3. Quality matrix in the sparse dataset  Experiments on the two datasets are conducted with MinSup=15% (Ddenee), MinSup=lO% (Dsprse) and Min- Conl%O%. The distribution curves for results of both sparse and dense datasets are depicted in Figure 1. Note that the percentage of population rather than the actual num- ber of rules is used as the measurement for vertical axes in both cham. Also, to provide a remarkable index for eval- uating the quality of rules, proportions of interesting rules, i.e., whose violation ratios are largerthan I,  to uninteresting ones are also presented as pie charts in Figure 1. Note that more than half ofrules generated by algorithm Apriori-Dual in both datasets have a violation ratio less than one. In con- trast, more than 98% of rules generated by algorithm SRM are interesting for both datasets. Also note that algorithm Apriori-Dual favors dense databases while algorithm SRM performs well in each dataset, showing that algorithm SRM is more adaptive and robust.

The resulting rules by Apriori-Dual and SRM for both datasets are plotted in Figure 2 and Figure 3, where each point corresponds to a rule produced. The y-axis indicates the violation ratio and the x-axis shows the correlation ofthe antecedent and the consequent itemsets of the rule. Each figure is divided into four areas. In the upper right area,  the rules are the most interesting ones among those in all areas due to the negative correlation of the antecedent and the consequent of each rule and high violation ratios.

Note that rules generated by algorithm Apriori-Dual and algorithm SRM are subsets of negative association rules. It can be seen from Figure 2 and Figure 3 that algorithm SRM can generate the most appropriate ones on the basis of neg- ative association rules.

5. Conclusions  In this paper, a new mining capability, called mining of substitution rules, is explored. The notion of evaluating the dependency among items in a concrete itemset proposed in this paper offers another dimension for itemset selection (in addition to the one of using the support threshold), thereby being able to lead to more interesting results in the suhse- quent rule derivation based on these itemsets. We have de- rived theoretical properties for the model of substitution rule mining and devised a technique on the induction of positive itemset supports to improve the efficiency of support count- ing for negative itemsets. In light of these properties, al- gorithm SRM is proposed to discover the substitution rules     efficiently while attaining good statistical significance. It i s  shown by empirical studies that algorithm SRM not only has very good execution efficiency but also produces sub- stitution rules of very high quality.

