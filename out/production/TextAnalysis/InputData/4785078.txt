Association Rule based Context Modeling for Web Service Discovery

Abstract   Web service is essential in achieving dynamic business process. With the dramatically increased number of web services advertised in UDDI, Web Portal or Internet, how to locate the best web service according to a user?s re- quirement is becoming more and more important, which calls for efficient and effective web service discovery me- chanism. Considerable efforts have been attained in solv- ing this problem among them semantic based approaches show encouraging result. However, when several seman- tically equivalent web service candidates are returned by matchmaking process, how to discern which one is the most suitable one is a real challenge. This paper presents a framework by which provider?s context and user?s con- text has been explored to help understand the real need of a user. This framework uses association rule for context modeling of provider and user from web service composi- tion perspective. After modeling context, a ranking ser- vice is invoked to compare web service candidates with user?s requirement and then the best suitable potential web service will be selected.

1. Introduction   Currently, web services are advertised in Universal Description, Discovery, and Integration registry (UDDI) [1], Web portals such as XMethods [2] and Internet, being retrieved by Search Engines [3]. With such dramatically increased and heterogeneously available web services, how to find a suitable one with respect to user?s require- ments is becoming an essential task in web service based applications, which is called web service discovery.

A lot of efforts have been attained in solving web ser- vice discovery problem, e.g. interface matchmaking [4], and structure matchmaking [5]. These approaches mainly study the syntactic structure of the WSDL [6] files and find possibly matched web services. However, as indi- cated by Sivashanmugam et al. [7], lack of semantic in- formation is the other important inhibitor because similar structure does not guarantee similar function or behavior and also the other way around. Several approaches have been proposed to add semantic information into web ser- vice discovery process, e.g. DAML-S [8], WSDL-S [9], WSML [10], OWL-S [11]. Though adding semantic in-  formation into web service discovery process can alle- viate semantic heterogeneities, there also exist pragmatic heterogeneities [12], which occur when customers and providers have different way to implement domain specif- ic process even they have similar terminology.

Considering the following scenario, there are two web services and both of them provide vehicle rent service.

The first web service W1 provides mainly sedans rental, several SUVs rental and few minivans rental services.

The second web service W2 provides few sedans rental service and mainly bus rental service. Obviously these two different web services have different target customers, but their WSDL file will be probably similar from seman- tic perspective. Customers will be happy if more informa- tion beneath semantics can be provided in WSDL file to help them select most suitable web services. Unfortunate- ly it is not easy. We believe that the reasons are because of 1) limit information contained in WSDL file. Accord- ing to Li et al. [13], average size of nearly 74% WSDL file are less than 10K and 67% WSDL files have less than 50 description words. 2) Variety of web service customers and providers background. There are no standards to state such domain or process information in WSDL file, differ- ent web service providers may not know exactly how to advertise their services precisely.

From the above scenario we can find an important question arising here, indicated also by [14]. Among a set of semantically equivalent web service candidates, which one is best suitable as to the customer?s needs, or how to achieve personalized web service discovery? To solve this problem, it is necessarily noted that the web service dis- covery process needs to understand more information such as users preference, domain information and etc be- sides semantic interoperability. Among lots of possible approaches, context awareness is one of the candidates for personalized web service discovery. By using context information to assist describing provider and customer, web service discovery process can be more user-centered.

However, context is too complicated to be modeled properly since it could include everything around the ap- plications. Traditionally the context has been defined as location, speed, time and similar physical attributes. In this paper, the context of a web service has been defined from different viewpoint as the dependency between the web service and other web services in the repository.

DOI 10.1109/CEC/EEE.2008.58   10th IEEE Conference on E-Commerce Technology and the Fifth IEEE Conference on Enterprise Computing, E-Commerce and E-Services  DOI 10.1109/CEC/EEE.2008.58   10th IEEE Conference on E-Commerce Technology and the Fifth IEEE Conference on Enterprise Computing, E-Commerce and E-Services  DOI 10.1109/CEC/EEE.2008.58     This paper is organized as follows. Section 2 will in- troduce background information about context and con- text aware web service applications. Section 3 and 4 will discuss the possibility of building context for intention capture. In section 5, the proposed context model for web service discovery and the mechanism to build providers? and customers? context information will be depicted. Sec- tion 6 will give the proposed context matchmaking me- chanism and the re-ranking method for implementing context awareness and section 6 will gives conclusion and discuss future work.

2. Background  2.1. What is Context?

Context awareness is becoming more and more impor-  tant in SOA and web service based systems for adaptabili- ty and personalization. However, context is not easily to be defined and modeled since context is a very broad and diverse concept. Different researchers have introduced different definitions of context.

[15][16] try to define context by enumerating valid attributes in the context such as location, noise, identity, time, date and other related information. Different from enumeration of attributes of context, Anind K. Dey for- mally gives following definition of context: Context is any information that can be used to characterize the situ- ation of an entity. An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applica- tions themselves [17]. He further points out that one of the important features of context awareness is the ability to predict and capture user?s intention, which is the main research issue in this paper.

2.2. Context aware web service   A context modeling method by using enumerating  attributes is proposed in [18], where context information is defined as different attributes and a tool is implemented to construct attribute based context information. [19][20] propose a multi-level context approach for personalized web service discovery. They define context from user, web service and resource perspective and define corres- ponding U/W/R context, respectively.

Medjahed and Atif adopt a broad definition of context and further categorize context into either client-related or provider-related group [21]. A context-sensitive frame- work to facilitate web service discovery process in [22], in which context is defined as user profile, such as place, temperature, age, and then achieve personalized web ser- vice provision. In [23], context has been mentioned as current time and user?s current location for web service composition. Along with user?s preference, they present  encouraging adaptive provision of web services. [24] pro- vide an enhanced UDDI registry with context information to facilitate the match and retrieval process. In their ap- proach, they use ontology to model user?s context. [25] proposes a context framework to integrate context infor- mation and provide personalized web service. In their approach, context is defined by different types and can be transmitted as a SOAP header block between client and provider. [26] work out a context profile to accommodate context arguments about service execution status. They also define a context function to indicate the sensitiveness of a certain service to certain context. By using context profile and calculating context function in runtime, the proposed system can sort return services and select the best service in current context.

The above context definitions and related application are mainly concern about environment of web service and users. These approaches also define context by enumerat- ing some attributes. Apart from environment context, to achieve personalized and adaptive web service application, there is other important context that is used to capture user?s intention [17].

As indicated by [27], the first step in web service dis- covery is to study user?s intentional goal. However, the typical method for a user to retrieve web service is to use several keywords to represent the user?s requirement.

With such limit information, it is difficult to understand user?s real intention and provider?s to some extent. Fur- thermore, from web service provider?s perspective, cur- rently the size of a WSDL files is normally limited. That means registered web services do not contain more infor- mation than basic function interface as well.

Therefore, we believe to achieve personalized web service discovery, we need to understand more beneath the keywords from user and WSDL file from provider.

However, as indicated by [28], there is always a lot of information that users cannot explicitly express. Thus, how to collect implicit information beneath user and envi- ronment is becoming important. Actually, to understand user?s intention beneath is one of the most important re- search issues, not only in web service application domain.

[29] proposes a domain specific web service discovery method, which use web service class to specify a set of web services sharing similar domain interest. With this method, user can find more suitable web service and get better matchmaking throughout. However, domain infor- mation is not easy to categorize in advance. [30] propose a system to satisfy user?s need by using other users? simi- lar decisions from past experience. The proposed frame- work keeps history of user-system interaction and use these log information to recommend decision. Though the authors do not mention context concept, we think the im- plicit information beneath users? explicit requirements they try to capture does reflect essentials of user context.

3. Context from intention perspective      Context defined in this paper can be interpreted by fig-  ure 1. Normally Input I1, I2, I3?Im will be abstracted for- mally to output O1, O2, O3?On. During the process, some useful information will be lost either explicitly or impli- citly. This is because user may not the expert in dealing with information abstraction. Furthermore, the real word cannot always be formally modeled and abstracted.

Therefore, if context information is available when deal- ing with output, it will be helpful to recover the real meaning that input represents.

In web service discovery process, this kind of context is useful to capture the intention of web service users and providers. From users perspective, users will normally submit several keywords for web service discovery. The context will be then useful to understand the real intention beneath these keywords. On point of view of providers, the WSDL file though includes more information than just keywords, it is still necessary to understand provid- er?s context to capture provider?s suitability.

4. Association rule based context modeling   It is learned that context for intention capture is not easily defined and modeled due to the large number of explicit or implicit factors affecting information abstrac- tion. In this paper, we will try to define context from web service composition perspective.

As we know, integrating web services into a business process has difficulties in terms of reliability, availability and performance. Particularly, in real applications it is quite common when a business calls for a certain service but no single web service can fulfill the requirement, which leads to the need of services composition.

Typically, web service composition can be seen as a process to find a new service S, which consists of a set of component web services {S1, S2, S3?Sn}. Each compo- nent web service is mapped to a set of real web services {Si1, Si2, Si3?Sim}. Figure 2 is an example of web service composition process, where S1, S2 ? S7 are component web services and S21, S22 are real web services that can be invoked at run-time.

Since most retrieved web service will join some com- position process, we can consider that the web service discovery is served for web service composition. Howev- er, if we look the process conversely, we can also argue  the web service composition process may provide some useful information for web service discovery.

In defining context from composition perspective, we need to define context for provider and user individually.

1). From web service provider?s perspective, we can de- fine context as a collection of web services to which the web service is related. 2). From user?s perspective, we can define context as a collection of web services with which the retrieved web service will join together.

Our approach is based on the finding that there always exists some dependency among web services in the regi- stry to some extent. Some works have reported and elabo- rated usage of dependency in web service discovery and composition applications. For example, [31] argues there are service pattern in web service application and propose a mechanism to capture the patterns. [32] propose a tool to discovery web service dependency.

In this paper, we will employ association rule to get the dependency among web services and then define such dependency as context for web service selection intention.

Association rules are statements of the form A->B, where A ? I?B ? I, and A?B?? , I = (I1, I2, . . . In) is item set in the data collection. It means that if we find all of items of item set A, then we have a good chance of find- ing the items of B. Given any association rule, its support and confidence should be above certain thresholds.

The support of association rule A->B means the fre- quency of the rule and is defined as follows:  n BABAPB)support(A- ||)( ?? ==> (1)  where || BA? represents the number of transactions containing not only items in A but also items in B?n is the number of all transactions in the data collection.

The confidence describes the probability of finding B on the condition of A. It reflects the association degree between A and B and defined as:  || ||)|(  A BAABPB)(A-confidence ?==> (2)  Association rule describes the probability of the asso- ciations among different objects. In the task of web ser- vice discovery, it is considered that different web services are not independent to each other. The implicit associa- tions always happen among different web services and reflect certain composition of different web services.

Processor I1, I2, I3?Im O1, O2, O3?On  Context  Figure 1. Context for information processing  S1 S2 S3  S21 S22  S4  S5  S6 S7  Figure 2. Web services composition     Inspired by the idea above, association rule technique is applied for mining web service dependency, or context.

The main idea is to utilize the association rules among different web services to identify the dependence between the given web service and other web services. Formally, given the web service Si, select the web service set S? = {S1, S2,?, St} that satisfying: confidence(Si -> S') > ?.

This paper adopts the most classic Apriori algorithm [33] to identify all useful association rules. The process can be divided into the following three steps:  1. Constitute frequent web service composition trans- action datasets D, which consists of a certain number of composition transactions implemented with web services in the repository. D is defined as D = {T1, T2, T3, ?, Tm}.

Each Ti contains a set of web services invoked in that transaction and Ti = {S1, S2, S3?Sk}, where Si is a web service invoked in that composition transaction. Therefore, we can get a web service set S including all web services invoked in all composition transactions;  2. Apply Apriori algorithm to find all the association rules from the frequent web service composition sets that satisfy the minimum confidence threshold;  3. Select all the association rules and the left part of each is the singleton.

5. Context aware discovery framework   As indicated in figure 3, the implementation of pro-  posed context aware web service discovery framework consists of three fundamental components, from user, provider and re-ranking perspective, respectively. The whole discovery process is depicted as following:  1. To submit web service query. The user submits the query through this step.

2. To build user?s context. This step will deal with us- er?s web service query and find the related web services with which the required web service will join to achieve a composition process.

3. Semantic matchmaking. This step will employ se- mantic matchmaking approach to find a set of semantical- ly equivalent web service candidates. In this paper, we select OWL-S based approach.

4. Mining web service dependency. Association rule will be employed to find the web service dependency in the repository, as depicted in previous section. This process will be executed off-line and updated regularly.

4. To build web service candidate context. Each re- trieved web service candidate will be studied to find its context by studying the web services dependent on it.

After this step, each web service candidate will get a vec- tor containing a set of heavily dependent web services.

5. Context matchmaking. This step will study the us- er?s context and each web service candidate?s context and compare with each other based on context matchmaking methods, which will be described in next section.

6. Web service candidate re-ranking. Each retrieved web service candidate will be compared with web service query and its context by combining semantic similarity and context.

In previous section, we have discussed the possibility of building context for user and provider. Now the most important problem to be solved is how to use the context information to facilitate context awareness in web service discovery process. In the next section, we will describe is proposed context matchmaking mechanism and re- ranking method.

6. Ranking Mechanism   Similar with the ranking idea adopted in information retrieval, web services here that match the submitted query most is discovered through the similarity ranking.

The main idea is to rank web services according to their relevance to query. Here, it is realized through two-phrase ranking.

In the first phrase, the traditional semantic equivalence based discovery approach is adopted to filter non-relevant web service. Web services are therefore ranked according  Semantic Equivalence  Context Equivalence  Web service Candidate Context  Web Service Query  Web service repository    Query Context  Figure 3. Context aware discovery framework  Web services in the composition  Semantic web service discovery  Semantically equivalent  web services  Association rule based mining  Web service dependency  Offline  Semantic based Ranking  Context based Ranking  Context matching  Web Service Ranking     to their semantic relevance. In fact, the purpose of the first phrase ranking is to find semantically equivalent web ser- vice candidates. Based on the ranking obtained in the first phrase, the second phrase that mainly considers context equivalence is implemented. In this phrase, service con- text is referenced and then realize the relevance re- ranking.

Let S = {S1, S2,?, Sn} be a web service collection and Q = {T1, T2,?, Tm} consisting of several keywords be the submitted query. By implementing OWL-S based ap- proach, web services in S can be semantically ranked and the ranking result is formed as RankingSemantic = {Si, ?, Sj,?, Sk}.

To further evaluate web service relevance, context equivalence of the top m web services in the ranking list achieved above is further evaluated. Assuming QC = {QC1, QC2,?, QCs} contains the related web services with which the required web service join together, SCi = {SCi  1, ? SCi t} includes the web services heavily depen-  dent with web service candidate Si in RankingSemantic, where each SCi  j = { SCi j,1, ?, SC i  j,v,}satisfies confidence(Si -> SCi  j) > ?, the context equivalence of Si is then evaluated as:  || |SC|  ...

||  |SC|  || |SC|)(Ranking  t i  ,  i  ,  i  ,Context    QC QCCF  QC QCCF  QC QCCFS  t ii  ii  ii  SCS  SCS  SCSi  ?  ?  ?  ?  +  +?  +?=   (3)  Synthetically considering the semantic equivalence and context equivalence of web service Si, the relevance of Si to query Q is finally defined as:  )(Ranking)-(1 )(Ranking  )S Q,Relevance(  Context  Semantici  i  i  S S  ? +?=  ? ?  (4)  where ?represents the weights of the relevance factors, namely semantic equivalence and context equivalence. ? can be valued by empirical approach.

7. Conclusions   Web service discovery is one of the fundamental prob- lems in web service based applications. A lot of efforts have been attained in this problem among them semantic based web service discovery methods has shown encour- aging performance. However, after retrieving a set of se- mantically equivalent web service candidates, which one is the best suitable with respect to user?s requirements is a potential challenge. In this paper, we studied the possibili- ty of employing context awareness into web service dis- covery process and proposed a framework to build con- text for users and providers to capture user?s real need and  capture the provider?s real intention to some extent. The context in this paper is built by using association rule to mining the frequent pattern from web service composition history. After that, a re-ranking mechanism is proposed for ranking the semantically equivalent web service can- didates. It is anticipated that the proposed framework will help to alleviate the confusion for users in selecting the right web service during the web service discovery.

8. References  [1] UDDI, ??The UDDI Technical White Paper??, http://www.uddi.org/pubs/Iru_UDDI_Technical_White_Paper.p df.

[2] Xmethods, http://www.xmethods.net  [3] H. Song, D. Cheng, A. Messer, and S. Kalasapur, ??Web Service Discovery Using General Purpose Search Engines??, In Proceedings of ICOS?2007 conference, USA, 2007, pp. 265-271.

[4] G. Tretola, and E. Zimeo, ??Structure Matching for Enhanc- ing UDDI Queries Results??, In Proceedings of SOCA?2007 conference, Newport Beach, California, USA, 2007, pp. 21-28.

[5] E. Stroulia, and Y. Wang, ??Flexible Interface Matching for Web-Service Discovery??, In Proceedings of 4th WISE confe- rence, Rome, Italy, 2003, pp. 147-156.

[6] E. Christensen, F. Curbera, G. Meredith, and S. Weerawara- na, ??Web Services Description Language (WSDL) 1.1??, W3C Note, 2001.

[7] K. Sivashanmugam, K. Verma, A. Sheth, and J. Miller, ??Adding Semantics to Web Services Standards??, In Proceed- ings of ICOS?2003 conference, USA, 2003, pp. 395-401.

[8] A. Ankolekar, M. Burstein, J. Hobbs, O. Lassila, D. Martin, D. McDermott, S. McIlraith, S. Narayanan, M. Paolucci, T.

Payne, and K. Sycara, ??DAML-S: Web Service Description for the Semantic Web??, In Proceedings of 1st ISWC conference, Sardinia, Italy, 2002, pp. 348-363.

[9] W3C, ??Web Services Semantics --- WSDL-S??, http://www.w3.org/Submission/WSDL-S/  [10] J. de Bruijn, Holger Lausen, A. Polleres, and D. Fensel, ??The Web Service Modeling Language WSML: An Overview??, In Proceedings of 3rd ESWC confenrence, Budva, Montenegro, 2006, pp. 590-604.

[11] D. Martin, M. Paolucci, S. McIlraith, M. Burstein, D.

McDermott, D. McGuinness, B. Parsia, T. Payne, M. Sabou, M.

Solanki, N. Srinivasan, and K. Sycara, ??Bringing Semantics to Web Services: The OWL-S Approach??, In Proceedings of 1st International Workshop on Semantic Web Services and Web Process Composition, San Diego, California, USA, 2004, pp.

26-42.

[12] S. Overhage, ??On Specifying Web Services Using UDDI Improvements??, In Proceedings of 2002 Net.Objectdays Work- shops, Germany 2002, pp. 535-550.

[13] Y. Li, Y. Liu, L. Zhang, G. Li, B. Xie, and J. Sun, ??An Exploratory Study of Web Services on the Internet??, In Pro- ceedings of ICOS?2007 conference, USA, 2007, pp. 380-387.

[14] E. Tamani, and P. Evripidou, ??A Pragmatic Methodology to Web Service Discovery??, In Proceedings of ICOS?2007 con- ference, USA, 2007, pp. 1168-1171.

[15] B. Schilit, N. Adams, and R. Want, ?Context-Aware Com- puting Applications?, In Proceedings of 1st IEEE Workshop on Mobile Computing Systems and Applications, 1994. pp. 85-90  [16] P. Brown, J. Bovey, and X. Chen, ?Context-aware applica- tions: from the laboratory to the marketplace?, IEEE Personal Communications, Vol. 4, No. 5, 1997, pp. 58-64.

[17] A. Dey, ?Understanding and Using Context?, Personal and Ubiquitous Computing, Vol. 5. No. 1, 2001, pp. 4-7.

[18] C. Lee, and A. Helal, ??Context Attributes: An Approach to Enable Context-awareness for Service Discovery??, In Proceed- ings of 2003 Symposium on Applications and the Internet, Or- lando, Florida, USA, 2003, pp. 22-30  [19] Z. Maamar, S. Most?faoui, and Q. Mahmoud, ??Context for Personalized Web Services??, In Proceedings of the 38th Annual USA, 2005.

[20] Z. Maamar, G. AlKhatib, S. Most?faoui, M. Lahkim, and W. Mansoor, ??Context-based Personalization of Web Services Composition and Provisioning??, In Proceedings of 30th EURO- MICRO Conference, Rennes, France, 2004, pp. 396-403.

[21] B. Medjahed, and Y. Atif, ?Context-based matching for Web service composition?, Distributed and Parallel Databases, Vol. 21, No. 1, Springer, 2007, pp. 5-37.

[22] J. Kuck, and M. Gnasa, ?Context-Sensitive Service Discov- ery meets Information Retrieval?, In Proceedings of 5th IEEE nications Workshops, White Plains, New York, USA, 2007, pp.

601-605.

[23] Q. Sheng, B. Benatallah, Z. Maamar, M. Dumas, and A.

Ngu, ?Enabling Personalized Composition and Adaptive Provi- sioning of Web Services?, In Proceedings of 16th CaiSE confe- rence, Riga, Latvia, 2004, pp. 322-337.

[24] S. Pokraev, J. Koolwaaij and M. Wibbels, ?Extending UD- DI with context-aware features based on semantic service de- Web Services, Las Vegas, Nevada, USA, 2003, pp. 184-190.

[25] M. Keidl, and A. Kemper, ?Towards Context-Aware Adaptable Web Services?, In Proceedings of the 13th Interna- tional Conference on World Wide Web - Alternate Track Papers & Posters, New York, USA, 2004, pp. 55-65.

[26] N. Luo, J. Yan, M. Liu, and S. Yang, ?Towards Context- Aware Composition of Web Services?, In Proceedings of 5th GCC conference, Changsha, Hunan, China, 2006, pp. 494-499.

[27] W. Balke, and M. Wagner, ?Towards Personalized Selec- tion of Web Services?, In Proceedings of the 12th International Conference on World Wide Web - Alternate Paper Tracks, Bu- dapest, Hungary, 2003.

[28] A. Dey, and G. Abowd, ?Towards a Better Understanding of Context and Context-awareness?, In Proceedings of 2000 Conference on Human Factors in Computing Systems Workshop on The What, Who, Where, When, and How of Context- Awareness, Hague, Netherlands, 2000.

[29] D. Rocco, J. Caverlee, L. Liu, and T. Critchlow, ?Domain- specific Web Service Discovery with Service Class Descrip- tions?, In Proceedings of ICOS?2005, USA, 2005, pp. 481-488.

[30] N. Kokash, A. Birukou, and V. D'Andrea, ?Web Service Discovery Based on Past User Experience?, In Proceedings of 10th BIS conference, Poznan, Poland, 2007, pp. 95-107.

[31] Q. Liang, J. Chung, S. Miller, and Y. Ouyang, ?Service Pattern Discovery of Web Service Mining in Web Service Regi- stry-Repository?, In Proceedings of ICEBE'2006, Shanghai, China, 2006, pp. 286-293.

[32] S. Basu, F. Casati, and F. Daniel, ?Web Service Dependen- cy Discovery Tool for SOA Management?, In Proceedings of SCC?2007 conference, USA, 2007, pp. 684-685.

[33] R. Agrawal, and R. Srikant, ?Fast algorithms for mining association rules?, In Proceedings of the 20th VLDB Conference, 1994, pp. 487-499.

[34] J. Hipp, U. Guntzer, and G. Nakhaeizadeh, ?Algorithms for association rule mining: a general survey and comparison?, SIGKDD Explorations, Vol. 2, No. 1, 2000, pp. 58-64.

[35] C. Zhang, and S. Zhang, S, ?Association Rule Mining Models and Algorithms?, Springer-Verlag, Berlin Heidelberg, 2002.

