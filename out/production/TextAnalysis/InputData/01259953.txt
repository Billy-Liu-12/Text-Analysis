INCREMENTAL UPDATE FOR FUZZY ASSOCIATION RULES

Abstract: In practice, many databases are not static but changeable.

When some records are added or deleted in a database, it could potentially invalidate some existing rules or introduce new rules. Thus, maintenance of the association rules is an important problem. An incremental update algorithm for the fuzzy association rules is presented; this algorithm uses the last mining results to maintain the collection of frequent fuzzy attribute sets and its negative border along with their support count incrementally. The experimental results show that the incremental update algorithm can effeetively save the time due to avoiding the repeated cost introduced by doing mining task directly in the whole database.

Keywords:  Association rules; Incremental update  1 Introduction  Data mining; Fuzzy clustering; Negative border;  The mining of association rules is one of the most important issues in the field of data mining. The problem of mining Boolean association rules is introduced in [1,2].

Parallel mining and weighted mining of Boolean association rules have also been studied in [3,4]. In practice, many databases are not static but changeable. When some records are added or deleted in a database, it could potentially invalidate some existing rules or introduce new rules. Thus, maintenance of the association rules is an important problem. Ref. [SI introduces the problem of maintaining Boolean association rules and gives the FUP algorithm that can maintain Boolean association rules when new transactions are added into a database. Ref. [6] proposes a more general algorithm, FUP2, which can maintain Boolean association rules when some records are inserted, deleted or updated in the database. Ref. [7] uses negative borders to maintain rules. Ref. [8] proposes an incremental algorithm for maintaining constrained Boolean association rules.

Recently, people have got interested in quantitative attributes. The problem of mining quantitative association  rules is introduced in [9]. The algorithm in [9] finds association rules by partitioning the amibute domain, combining adjacent partitions, and then transforming the problem into a binary one. Although this mining algorithm for quantitative association rule can solve problem introduced by quantitative attributes, it introduces some other problems. The first problem is that eqni-depth partitioning cannot embody the actual distribution of the data. The second problem is caused by the sharp boundary between intervals.

Ref. [IO] uses fuzzy set to soften partition boundary of the domains, and presents the concept of fuzzy association rules, but it does not present partitioning algorithm which can embody the actual distribution of the data and does not present the mining algorithm for fuzzy association rules which fits for large databases. Ref. [Ill uses linguistic clouds to soften partition boundary of the domains, and presents mining algorithm for association rules with linguistic cloud models. Ref. [I21 uses the relational fuzzy c-means algorithm to partition the quantitative attributes into several fuzzy sets, then the problem of mining fuzzy association rules is introduced by combining fuzzy sets.

The relational fuzzy c-means algorithm can embody the actual distribution of the data. Furthermore, fuzzy sets can soflen partition boundary. But combining fuzzy sets can obtain excessive fuzzy association rules, so the mining algorithm cannot fit for large database.

Liu, Hsu and Ma [''I propose classification based on associations (CBA), which uses iterative method to find the frequent and accurate possible rule set and then uses method of elicitation to build classification system. But it is important to note that the intervals involved in quantitative association rules may not he concise and meaningful. A fuzzy approach that can be used for mining interesting rules for classification with degree of membership is in [14,15].

This approach represents the revealed regularities and exceptions using linguistic terms. The use of linguistic terms allows human users to understand the discovered rules better because of the affinity with the human  0-7803-7865.2/03/$17.00 02003 IEEE    knowledge representation. Furthermore, this approach is capable of finding interesting relationships among attributes without any subjective input required of the users.

Some results show that the classification methods in [14,15] have good accuracy and interpretability than C4.5 and CBA.

In this paper, Apriori algorithm is first improved for mining fuzzy association rules, and this improved mining algorithm can fit for large database. Then, an incremental update algorithm for the fuzzy association rules is presented; this algorithm uses the last mining results to maintain the collection of frequent fizzy attribute sets and its negative border along with their support count incrementally. The experimental results show that the incremental update algorithm can effectively save the time due to avoiding the repeated cost introduced hy doing mining task directly in the whole database.

The rest of this paper is organized as follows. In section 2, Apriori algorithm is improved for mining fuzzy association rules. In section 3, an incremental update algorithm for fuzzy association rules is presented. The conclusions are drawn in section 4.

2 An algorithm for mining fnzzy association rules  Let T =(t, , t , , . . . , t . )  'be a relational database, f j represents the j-th record in T, let I = ( i , , i 2 , . - , i m )  be the attribute set where i j  denotes a Boolean, categorical or quantitative attribute, t j [ i k ]  represents value of the j-th record in attribute ik . Values of the record in attribute need to be partitioned into several fuzzy sets for mining fuzzy association rules.

Let A, and A, be two values of the record in Boolean attribute, then two values can be partitioned into two fuzzy sets A, and A,, where  I , x = A , = (O,x = A,  Categorical attribute with fewer values can be Partitioned into several fuzzy sets with the same method.

We adopt fuzzy c-means (FCM) algorithm [I6] to partition quantitative attribute into several fuzzy sets. Comparing with [12], there are two differences. One is that FCM algorithm costs less time than the relational fuzzy c-means algorithm, another is that fuzzy sets are not expressed with normal fuzzy numbers as in [ 121.

In order to mine fuzzy association rules, we consmct a new database through original database T. In this new  database, attributes are fuzzy sets; values of the record in attributes are obtained as follows: Let i: be a fuzzy set of attribute;, , i: is an attribute in new database. Value of q e j-th record in attribute i: is i:(t,[ik]) , i : ( t j [ ik ] )  I s membership degree of t j [ ; * ]  with respect to fuzzy set i: .

In this new database, because attributes are fuzzy sets, we call attributes fuzzy attributes next. Let I still be the fuzzy attribute set, let t , (y , )  represent value of the j-th record in fuzzy attribute y ,  , t j ( y , )  falls in [OJ]. Let  x= t y , , - , y p ) c 1 y = tYp'lr....Yp+q) c I  X n Y = Q A fuzzy association rule is an implication of the form Y .  The support and confidence of fuzzy association  Definition 1: Let fuzzy attribute set  X rule are defined as Ref. [12].

X = ( y ,  , . . . , y , )  c1,thesupportofXisdefinedasfollows  where, t f i t j ( y m )  is called the support count of 1=11-1  fuzzy attribute set X .  Fuzzy attribute sets with at least a minimum support are called frequent fuzzy attribute sets.

Definition 2: The support of X 2 Y is defined' as follows:  f: H t j ( Y J sup = j = l m = ,  n Definition 3: The confidence of X =) Y is defined as  follows:  Because t j ( y k )  falls in [OJ], we can know that all subsets of a frequent fuzzy attribute set must also be frequent according to definition 1. With the above finding, it is easy to modify Apriori algorithm ['I to mine fiizzy association rules.

In this section, we will discuss an Abalone database from UCI Machine Learning Repository, which bas nine attributes, 4177 instances. The quantitative attributes including length, diameter, height, whole weight, shucked weight, viscera weight, shell weight and rings are respectively denoted as 11, ..., IS. To simplify, we mine the fuzzy association rules with the consequent IS. The attribute sex is a categorical attribute with three values: M, F and I. Three values are partitioned into three fuzzy sets       M, F and I. Fwzy set M is defined as:  The definitions of fuzzy set F and I are similar. Each quantitative attribute is partitioned into three fuzzy sets: large, middle and small, which are denoted them as integer I ,  2 and 3. Each element in fuzzy association rules is represented by <attribute: fuzzy set> such as 4 1 :  I>.

Figure I shows the time for mining frequent fuzzy attribute set with different minimum support (Not including the cost of the FCM algorithm).

ai5 a i  0 . ~ 6  o -%m  Figure 1. Costing time  3 lncremental update for fuzzy association rules  In practice, the database is updated frequently rather than static. After being inserted, deleted and updated, new fuzzy association rules will present and some others will become inapplicable. So the fuzzy association rules must he maintained. Update can he looked as a process of two steps that delete old records first and then insert new ones.

So we only consider the two conditions, insert and delete.

In order to find fuzzy association rules in the updated database, a naive way is directly to run mining algorithm again. Since there exist much unnecessary repeated computing cost, the efficiency of this method is lower. An incremental update algorithm for fuzzy association rules is presented in this section. This algorithm uses the last mining results and incrementally updates fuzzy association rules to avoid the repeated cost introduced by doing mining task directly in the whole database. Because fuzzy association rules can be easily obtained from tkequent fuzzy attribute sets, the rule maintenance problem becomes the problem of maintaining frequent fuzzy attribute sets.

3.1 Addition of new records  When new records are added to the database, some old frequent fuzzy attribute sets can potentially become infiequent in the updated database. Similarly, some old  infrequent fuuy attribute sets can potentially become frequent. In order to solve the update problem efficiently, the membership value of fuzzy sets in the new records should be known. One approach is using FCM algorithm to cluster again in the updated database. But when the volume of data is very huge, this approach will cost much time.

Because the problem of updating fuzzy association rules usually assumes that only few new records are added to the database, we can consider that the original cluster centers vi will not change approximately. So we can compute the membership value directly by the equation  ut = 1 / x ( d , ,  / d l ) 2 i ( m - ? ) , i  = 1,2,. . . ,c Definition 4: The negative border NBd(FL) of a  collection of fuzzy attribute sets FL is defined as follows: Given a collection FL c P ( F )  of fuzzy attribute sets, closed with respect to the set inclusion relation, in which F is the collection of all fuzzy attributes and P ( F )  denotes the subset space of F, the negative border NBd(FL) of FL consists of the minimal fuzzy attribute sets X E F not in FL.

In the rest of this section, DB denotes the original database, db denotes the added records and DE+ denotes the updated database. Also FLDu , FLdb and FLDB+ denote the collection of frequent fuzzy attribute sets and NRd(FLDa) , NBd(FLdb) and NBd(FLDB?) denote the negative border of the original database, incremental database and the updated database. We maintain the collection of frequent fuzzy attribute sets and its negative border along with their support count in the database.

On one hand we check if there exist some old frequent fuzzy attribute sets to become infrequent in the updated database. Let f E F L ~ ~ ,  since we know the support count forfin DB and db, the support count forfin D R u d b  can he easily obtained. Iffdoes not have minimum support in D B u d b ,  it is removed from FL? .

On the other hand some new fuzzy attribute sets may become frequent in the updated database. There exist two conditions:  (I) If none of the fuzzy attribute set inNRd(FLDB) gets the minimum support, no new fuzzy attribute set will he added to FLDB?.

(2) If some fuzzy attribute sets in NBd(Ff?)  gets the minimum support, move them to FL?? and recompute the negative border. If  )=I  FLDB? U NBd(FLnB?) # FLD8 U NBd(FLDn)  We have to find the negative border closure of FLDB* and scan the entire database (DE) once to find the updated frequent fuzzy attribute set and its negative border. Further      detail can be obtained in [7].

Algorithm 1 An incremental update algorithm lor  frequent fuzzy attribute sets Input: the original collection of frequent fuzzy  attribute sets and its negative border along with their fuzzy support count; cluster centers of each quantitative attribute; db; minimum support  Output: updated frequent fuzzy attribute sets and its negative border  I .  Compute membership values of each record in db according to the original fuzzy cluster centers, and then compute the frequent fuzzy attribute sets in db.

2. Compute support count of the original collection of frequent fuzzy amibute sets and its negative border in db. '  3. Compute the total support count of tbe original collection of frequent fuzzy attribute sets and its negative border in DBudb. Check if they have minimum support, add them to updated frequent fuzzy attribute sets.

4. For each frequent fuzzy attribute set in db, if it is presented in original negative border, check its total support.

If it has minimum support, add it to updated frequent fuzzy attribute sets.

5. Compare FLDB' with FLDB, if they are not equal, recompute the updated negative border, else terminate the algorithm.

6. Compare FL?' U NBd(FLDB') with FLDn U NBd(FLDB), if they are not equal, recompute the closure of updated negative border, and scan the whole database once to obtain the final updated frequent fuzzy attribute set and compute its negative border.

3.2 Experimental analysis  In the Abalone database, we select 4000 records to conslruct the original database, remain 177 records as added records to construct the incremental database db. Set minimum fuzzy support to be 0.22 and minimum fuzzy confidence to be 0.5, total 11 fuzzy association rules listed in table 1 are obtained using incremental update method and mining the whole database respectively. The results are equal. The former 10 rules are presented in the original database and the last rule is an added rule. These results show that incremental update method can discovery the updated fuzzy association rules. Tlie experiment an3 aone at PI1 233MHZ with 32M RAM, the time for mihing in the whole database is 389 seconds, while the incremental update method only use 2 seconds. Ohviously, incremental update method can effectively save the time.

Table 1 Fuuy association rules  I Incrementalupdatemining I Mining in the whole 1  4 Conclusions  In this paper, Apriori algorithm is improved for mining fuzzy association rules, which improved mining algorithm can fit for large database with many quantitative attributes.

Then, an incremental update algorithm for fuzzy association rules is presented. This algorithm uses the last mining results and incrementally updates fuzzy association rules to avoid the repeated cost introduced by doing mining task directly in the whole database.

Acknowledgements  This work was supported in part by the National Natural Science Foundation of China (NSFC) (60073012), National Grand Fundamental Research 973 Program of China (2002CB312000), National Research Foundation for the Doctoral Program of Higher Education of China, Natural Science Foundation of Jiangsu Province, China (BK2001004), Opening Foundation of State Key Laboratory of Software Engineering in Wuhan University, and Opening Foundation of Jiangsu Key Laboratory of Computer Information Processing Technology in Soochow University.

