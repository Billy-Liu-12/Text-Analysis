2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

Abstract? The range of applications of Wireless Sensor Networks (WSNs) is increasing continuously despite of their serious constraints of the sensor nodes? resources such as storage, processing capacity, communication range and energy. The main issues in WSN are the  energy consumption and the delay in relaying data to the Sink node.

This becomes extremely important when deploying a big number of nodes, like the case of industry pollution monitoring. We propose an artificial neural network based energy-efficient and robust routing  scheme for WSNs called ELDC. In this technique, the network is trained on huge data set containing almost all scenarios to make the network more reliable and adaptive to the environment. Additionally, it uses group based methodology to increase the life-span of the  overall network, where groups may have different sizes. An artificial neural network provides an efficient threshold values for the selection  of a group?s chief node and a cluster head based on back propagation technique and allows intelligent, efficient, and robust group  organization. Thus, our proposed technique is highly energy-efficient  capable to increase sensor nodes? lifetime. Simulation results show that it outperforms LEACH protocol by 42%, and other state-of-the- art protocols by more than 30%.

Keywords?Group-Based Networks, Load balancing, Prolonging  Network Life, Residual energy, Sleep mode.



I. INTRODUCTION  ireless Sensor Networks (WSNs) consist of tiny and cheap sensing nodes focused on collecting environmental data. They can be used in a variety of  environmental monitoring and control systems like surveillance, disaster management, outdoor climate, indoor temperature, and industrial pollution [1]. Sensor nodes are  usually scattered and operate on a set of limited resources. The environmental pollution can be monitored and controlled from remote locations continuously with high precision using small sensor nodes forming a WSN [2]. Usually the techniques for air quality monitoring like gas chromatography (GC) are bound by installation expenses, time, and durability of the  installed devices. Therefore, all the desired data cannot be collected from a vast field and may not be available for a long period.

Currently, the industry air pollution monitoring system is becoming more feasible by using latest advances in WSNs technology. The deployment of such system integrated with  WSN technology decreases costs, time and allows us to quickly reconfigure the system. Moreover, networked sensors in industry air pollution monitoring system enable low-cost and continuous environment observation. Sensors monitor the environment and send directly or indirectly, through other sensor nodes, the acquired data to the main control center. The  main problem in such case is how to increase the life-span of the network as far as possible by keeping in notice that sensor nodes are non-rechargeable.

Normally, industry environment monitoring implies big areas, which requires deploying large number of nodes for the good coverage, detection probabilities and minimize the false alarm rate. Some works have proven the benefits of group based networks [3]. In group based networks, each group has  its own group ID and a central node is selected in each group.

Any node can keep the record of the group IDs of the whole network. Every node forwards its data to its neighbors towards the destination node. The nodes lying on the borders of the groups, known as border nodes, facilitate group member nodes to communicate with other groups? nodes. Moreover, different  groups may have different routing protocols.

A lot of research work has been done on cluster based  networks, which is a subset of group-based networks, to improve the network performance. In cluster based approaches, each cluster has a cluster head (CH) considered as the main node of the cluster and its duties are to communicate with  other clusters and the base station (BS). As CHs carry out more tasks, they are usually selected by considering their remaining residual energy (RE) [4]. Generally, the CHs nearer to the BS have more workload due to more traffic, so they tend to waste their battery earlier. This problem is classed the ?energy hole problem?. For this purpose, an efficient and  intelligent topological technique is required to perform the most demandable task of polluting monitoring accurately in harsh, inaccessible, and operates autonomously [5].

The proposed protocol is named as An Artificial Neural Network based Energy-Efficient and Robust Routing Scheme for Pollution Monitoring in WSNs (ELDC). It achieves its  objectives using Artificial Neural Networks (ANNs). These networks are arithmetic algorithms, which are capable to learn complicated mapping between input and output by considering training performed under supervision, or they can categorize input data in an unsupervised manner. The advantages of using ANNs are, they help in selecting the Chief node, which  identify the node in a cluster having energy less than the threshold, in a cluster. Additionally, they minimize the time of selection, ingesting a little energy resources while performing computation, communication, and storage etc., and perform the desired task of pollution monitoring efficiently and effectively as well [3,5]. This work makes the network more  intelligent, robust, and energy-efficient, and hence increases its life-span and decreases its end-to-end delay  Our propose, ELDC, protocol extends our previous protocol, EEMDC [6], by adding some advantageous features of both EEUC [5] and group-based energy saving techniques [6-8]], and train it with different scenarios using Adaptive Reasoning  Theory (ART), which is an adaptive and intelligent type of ANNs. The mixture of well-studied features help in equally utilizing the energy consumption of all nodes [6], and hence  ELDC: An Artificial Neural Network based Energy-Efficient and Robust Routing Scheme for Pollution Monitoring in WSNs  Amjad Mehmood , Zhihan Lv  , Jaime Lloret  , Muhammad Muneer Umar  1,3   Institute of Information Technology, Kohat University of Science & Technology, Kohat, Pakistan  Department of Computer Science, University College London, UK  Integrated Management Coastal Research Institute, Universidad Politecnica de Valencia, Spain  amjadiitkust@gmail.com,  lvzhihan@gmail.com,  jlloret@dcom.upv.es,  muneerumar@hotmail.com,  W  mailto:jlloret@dcom.upv.es   2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing  increases the life-span of the overall network. Since it?s a group based protocol, therefore it suggests a new type of node in the network on the boarder level named Chief Node. After training session, ANN based on back propagation (BP)  provides an efficient threshold value. Using this values, it identifies the nodes with lower energy than a threshold in order to put them in sleep mode.

The remainder of the paper is structured as follows. In section II, we briefly discuss the work already done in this area of study. We present our proposed intelligent protocol in  section III. The algorithms and flow charts are explained in section IV. Simulation results are shown in section V. Section VI concludes the paper and draws our future work.



II. RELATED WORK  A lot of work has been contributed for making WSNs more energy efficient. In LEACH [10], communication from nodes to CH and CH to nodes is single hop, and it uses the probability of selecting CHs. CH selection is performed after  one round [7]. In order to improve the energy consumption, a technique of forming a chain of sensor nodes was proposed in PEGASIS [11]. Sensor nodes have to find a close node to the CH in the same cluster, which creates multi-hop communication. Zeynali et al. [12] propose a hierarchical routing protocol (HRP) aiming of prolonging the network life.

There are protocols in which sensor nodes select their coordinator and use a multi-hop communication system, are presented in [10-13].

Banimelhem et al propose an extension of LEACH protocol, called pLEACH, is presented in [13]. It defines the mechanism for selecting the CH based on the highest RE. Gou et al. [14]  propose energy balancing LEACH algorithm for WSNs. It determines the optimal number of CHs based on the energy consumption of the network and chooses optimal CHs based on network load balancing. Younis et al. [15] present Hybrid Energy efficient distributive protocol (HEED). It is also an extension of LEACH protocol. It runs as a multi-hop routing  protocol when the CH communicates with the BS. Its CH selection mechanism is based on calculating the intra-cluster communication cost. In HEED, every node works individually and it does not give any idea about the size and density of the network. Some hierarchical clustering protocols came into the scenario in [15]. For each node, they consider its weight, its  distance from other nodes as well as its energy.

Lee at el. suggest DECSA protocol [16], it divides the  network into three levels, each one having its own CHs. The CHs of the third level communicate with the CHs of the second level, the CHs of the second level communicate with CHs of the first level, and the CHs of the first level send the  data to the BS. Singh et al. propose EAMC protocol [17], it is an energy-aware hierarchical clustering algorithm that has the ability to reduce the communication complexities. In this protocol, CH selection is performed in keeping with higher residual energy than its competitor nodes in a cluster. After a specific period of time, the CH roles is shifted to other nodes  to make a better balance of energy consumption between them.

This is idea increases the energy efficiency, but it does not reduce the number of CHs in the WSN. Karaboga et al. [18] suggest an artificial bee colony (ABC) protocol. It is a swarm  based optimization technique. It is applied on clustering used for monitoring purposes. It optimizes the selection process of CHs.

Sharma et al. [19] propose Enhanced LEACH with ANN  protocol. It uses the concept of selecting CHs on the basis of maximum amount of energy left with the node. It chooses CH amongst the node is radial basis network function. Hence, it provides better results in comparison to LEACH and LEACH- C protocols. Kumar et al. [20] propose Time difference of arrival (TDOA) scheme based on ANN. It explains that it is  very important to know the exact location of node for the efficient routing of packets and location aware services. It can help in determining the distance between sensor nodes and bases station. This information is used for training and testing of the ANN. Khediri et al. [21] propose O-LEACH. It improves LEACH and LEACH-C protocols by electing the  CH in agreement with the residual energy of nodes dynamically. Simulation results show that it achieves longer stability than LEACH and LEACH-C protocols. Nokhanji et al.

[22] contribute EADC protocol. It utilizes a threshold value to send data from the CH to the BS. CH can send data directly to the BS if the threshold value extracted from the proposed  protocol is greater than the distance of these two network nodes, i.e. CH and BS. On the other hand, if the distance is higher than a threshold amount, it uses those CHs which have higher energy on the path as a relay node to send data to the BS. Ye et al. [23] presents a clustering scheme called as EECS.

It is proposed in the context of energy efficiency. This  protocol has been used in applications where data gathering is required. The CH selection criterion depends on the outstanding RE of the network nodes. In DDAR [24], authors control the level of energy consumption by analyzing the remaining energy, distance, and dynamic number of CHs in the network. In the setup phase, each node sends its  information like outstanding energy to the BS, which in turn determines the best possible candidate CH from the available nodes in the network.

EEUC [5] demonstrates how unequal clustering based on the size of the cluster and number of nodes in a cluster can be efficient to reduce the energy consumption of the network.

EEUC keeps the size of the cluster big when the cluster is far away from the BS, but introduces more inter-cluster communications, which results in more energy consumption.

The clusters near to the BS are smaller in size, but they are over-burdened with relay jobs of its predecessor clusters, which also increases its chances of death. EEUC mechanism  proposes the basic sizes of the clusters of the network, and it is also the CH selection algorithm. The effort of EEUC is aimed to balance the energy consumption of all nodes.

Recently, we proposed an energy-efficient multi-level and distance aware clustering (EEMDC) mechanism for WSNs [6].

In EEMDC there are three logical layers in network divided  by area factor. Layering depends on hop count. In other words, it is the distance from the BS. The practice shows that its efficiency is better than previous approaches. Table 1 show a comparison table with the discussed protocols.

Clustering  Protocol  Clustering  methods  Routing  Type  Cluster  Size  Energy  Efficiency   Additional  features  Location  awareness  Connectivity  of CH to BS  LEACH [10 ]  Distributed Cluster based  variable Very Low Fairness No Single-hop    2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing  HEED [15] Distribute Cluster based  variable Moderate Load Balancing  No   Multi-hop  DDAR [24]  Centralized Cluster based  variable Good Load Balancing  Yes Multi-hop  EEMDC [6] Hybrid Cluster based  variable V. High Load Balancing  No Multi-hop  EEUC    [5] Distributed Cluster based  variable Good Load Balancing  No Multi-hop  ELDC (proposed  one)  Distributed Group based  variable V. High Load Balancing  No Multi-hop  Table 1: comparison between different state-of-the-art protocols  After the review of these systems, we have observed that none of them is a dynamic group based network with layered structure, which increases the scalability while decreases the energy consumption. These features are mainly needed in industrial WSN. Moreover, we also include an Artificial  Neural Network for selecting nodes with higher roles.



III. PROPOSED TECHNIQUE  Inspired in EEUC [5], we propose a group based protocol that includes the idea of dynamic sizes of clusters. The implementation of a group based network with layered structure for WSN shows a positive change in the energy consumption of the network. Each group communicates with other groups through the border node nearest to the destination  group (instead of using CH connections) [24], which let us have very large WSNs for industrial pollution monitoring.

This paper implements the mechanism of EEUC on group based network with different communication techniques and having no CH. Groups replace clusters in our scenario, and border nodes are kept responsible for communication with  other groups. Moreover, the duty cycle of the sensor nodes, which consume more energy as compared to others, is changed. The system is based on a pair of queues, which make sensor nodes to switch into sleep mode if their consumption exceeds a threshold [25]. When the network begins, every node calculates its number of neighbors to which it can send  packets directly through one hop. This process is performed at each layer separately, as the proposed protocol is following a three- layered structure.

Each group, identified with a group-ID, selects a central node by estimating the diameter of the network and selecting the node at the center of the diameter (diameter is known  because it is estimated from the beginning and every time the topology grows). Moreover, when the network begins, the node with most number of neighbors becomes the chief node of that specific layer (in case of draw, it is selected the node whose group-ID is higher). By this process the system has three nodes claiming themselves as chief nodes due to the  three-layered structure. All nodes send information about their remaining RE along with their IDs (called node-ID) and their neighbor nodes? IDs to their group's central nodes. The central nodes pass them to the border node of that group and they forward the information to the chief node of its layer. This process is performed to maintain the RE of all the nodes at  almost equal by implementing few algorithms discussed below.

The tasks which are performed by a chief node include: I) Collect the value of the remaining RE of all the nodes  within the layer.

II)  Calculate the average energy on the basis of the  information available.

III) Calculate the energy threshold, which is estimated as  a function of the average energy, and compare with the value  of ANN, which is provided by Figure 2.

IV) Store REST and NEXT queues in its memory.

The algorithm procedure is as follows (it is explained in the  flow chart diagram of Figure 1. First, each node checks and  compares the threshold value with the RE of all nodes.

Figure 1: Time until the last node dies       Figure 2. Chief node and Clsuter head selection process       Figure 1. Flow Chart Diagram                    Figure 2. Chief node and Cluster head selection process   The value of threshold is always kept smaller than the value provided by the ANN system. In case the value of Threshold is greater than the value, then that node will be skipped from the process.  If it finds the value lesser than the threshold, then it saves that node?s ID in the REST queue. When it finds another node, whose energy is lesser than the threshold, then  an additional check is performed. This check verifies that the node, which is a candidate to be in REST queue, is a neighbor of those who are already in REST queue. If its neighbor?s ID is found in the REST queue, then the node is kept it in NEXT queue. The nodes which are in the REST queue sleep till the end of current iteration (see Algorithm 1). Then, the procedure  is repeated during a period T1. Next iteration begins scanning the NEXT queue and swapping one by one to the REST queue.

When the remaining (RE) of the chief node is lower than a threshold, a new chief node is selected based using an Artificial Neural Network (ANN).

A. ANN for Chief Node Selection  An ANNs based Intelligent techniques are being  implemented for monitoring the environment with successful  Distance from CH  Residual Energy  No of neighbor  Distance from CN  Traffic Load  Health status  SNR  CH/CN    2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing  results, but most of them are implemented in the monitoring process, not in the network organization process. Our system selects Chief Node (CN) and CH based on ANN technique.

The ANN system takes the following parameters as an input  remaining energy, the number of neighbor nodes, the amount of data that is being transmitted, the amount of signal interference measured by Signal Noise Ratio (SNR), distance of node from CH, distance of CH from Chief nod or boarder node, distance of the boarder node to the next Chief node or the BS, traffic load on the particular path, and the probability  of health status of the particular path. The real data set for the selection of CH and Chief Node (CN) is obtained by arranging 20 real nodes according to group based approach as shown in the Figure 2. In order to make the network more robust and energy efficient, the network is trained for almost all possible conditions.

For the training of the network, the popular type of neural network architecture called back propagation (BP) with three layers are used. It helps training nodes towards the pattern matching and selection of nodes having the most suitable resource patterns. Initially the training process outputs the list of nodes which satisfy the energy metric criteria. The whole  network is covered by using this process in an iterative manner. To reduce the redundancy only adjacent nodes are monitored and marked. The training module enables the selected nodes to find for a set of their adjacent nodes that they monitor. At the end of whole process, the two most suitable nodes with their values are selected (as explained by  the formula in Algorithm 2). The node having the highest output value is as a CN, whereas the second highest is considered as CH. After receiving these threshold values, the algorithm 3 uses it. The node estimates the sum of the products of weights with each parameter Z. Then, it adds the biases of each node to the calculated sum. Finally, it is  estimates the output for each node according to an equation shown in Algorithm 2. Using the condition ? (WKZK)  n K=1  >  threshold, and defining the perceptron's bias, b??threshold, as  a measure of how easy it is to get the perceptron to output 1, we will obtain next output.

?????? = { 0 ?? ? (????)  ? ?=1 + ? ? 0  1 ?? ? (?? ??) ? ?=1 + ? > 0  (1)  The output of a sigmoid neuron is estimated as follows.

?(?) =  1+??? (2)  where x=-? (?? ??) ? ?=1 -b   In training, we consider the learning rate is equal to 0.05, and  maximum 1000 epochs are used with each input vector to minimize the error between target output and actual output.

Dataset used to train the network is consisted of 5000 of input vectors having all flows needed to be considered nodes as Chief node or normal node, as mentioned above. After completion of training, updated values of weights and biases  are used by ELDC to distribute the input vectors in desired category in testing phase. Extensive simulations with different RE energy values were carried out for the selection of Chief node or normal node flows.

Algorithm 1. Chief Node Selection Algorithm  Input: RE, Neigh, Node-ID  Output: maximal. Node-ID  1. set maximal. Value ?   0 2. maximal. Node-ID ?  Null 3. for each node i from 1 to N  4.    C1 ? (RE ? 1) + (Neigh ? DW) 5.    if C1 ? maximal. Value 6.       then set maximal. Node-ID = i  7.    end if 8. end for 9. return maximal. Node-ID  Algorithm 2. Chief Node Selection Algorithm using ANN  Input: weights, biases, network pattern  Output: Out1, Out2,  // Propagated the input forward through the network:  1. for all nodes in the Hidden layer //Calculate sum of product of weights and inputs to the node  2. Calculate  ewf(WZ) < ?(? (WKZK ) n K=1  ) // 3. Add the Biases of each node to the calculated sum  //Calculate the output f(x) for each node  4. Calculate f(x) < ?  1+e?x   5. end for 6. for al l  nodes in the Output layer  //Calculate the sum of product of weights and inputs to the node  7. Set OutPut ?f(WZ) = (? (WKZK) n K=1  ) 8. Add the Biase of each node to the calculated sum  //Calculate the output f(x) for each node  9. Calculate f(x) < ?  1+e?x   10. end for 11. Output Layer: Node1 ouput:out1, Node2 ouput:out2;  12. if (out1> out2) 13. Return (?Selected as Chief node?) 14. else  15. Return (?Works as a regular node?) 16. end if  Algorithm 3. Chief Node Functionality Algorithm  Input: Node-ID, NodeEnergy, Neighbor-ID  Output: Stores Node-ID in REST and NEXT Queues  1. Set Total-Energy ? 0 2. for node i from 1 to N  3.    Set Total-Energy ? Total-Energy + node(i). Energy 4. end for 5.    Set Avg-Energy? Total-Energy / N;  6.         threshold ? f(Avg-Energy) 7. for each node j from 1 to N 8.    if (node(j). energy <= threshold)  9.        for each node in REST 10.          if REST. Node-ID = node. Neighbor-ID 11.              then Store Next?node-ID  12.              else Store REST? node-ID 13.          end if 14.       end for  15.    end if 16. end for each   Sensor Node         Routes data to BS  Central Node  Layer separator  Base Station  Groups of layer 1, 2 and  Figure 3. Message Flow Diagram        2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing  Sensor Node  Routes info (Node ID, RE,  Neighbor nodes ID?s)   Chief  Node  Sends back (Rest or Next)  commands to a specific node if  required  Central Node  Layer separator   Base  Station      Groups of layer 1, 2 and 3  Figure 4. Chief Node Process Diagram  While implementing a network by using EEUC mechanism, BS calculates the distance between itself and the nodes. It facilitates the creation of non-overlapping clusters with different sizes. EEUC technique utilizes unequal clustering mechanism and inter-cluster multi-hop communication. In such case the CHs receive data from all the nodes in a cluster  and forward it to the BS. Clusters nearer to the BS are preferred to be smaller in size to reduce energy consumption in the multi-hop communication among clusters. CHs collectively forward the received data packets from all cluster nodes to the BS. Moreover, a three-layered structure of EEMDC is followed. A delay factor for those nodes, which  consume more energy, is introduced. The system uses this factor to send a sleep command to a specific node. In the beginning, each node counts its neighbor (Neigh) nodes through which it can send packets directly by on-hop.



IV. PROCESS FLOW DIAGRAMS  A. Process Flow Diagrams  When a node becomes a chief node, it takes some responsibilities which are briefly described in this section.

B. Algorithm Describing Chief Node's Functionality in ELDC  After a specific time T1, all nodes send their remaining energy information to the chief node of its layer, which estimates their average energy and the threshold in order to know in which  queue the node should be placed in (REST or NEXT).

Algorithm 3 describes the procedure.

C. Message Flow from Sensor node to BS in ELDC  Sensors sense data from the environment and send them to the border node of the directly or through multiple hops [24].

The border node forwards the data to another border node of  another group, which is closest to the BS. The data transmission is made towards the BS as shown in Figure 3 and Figure 4.

Figure 5: Time until the first  node dies    Figure 6: Time until the last node dies  D. Selection of a Chief Node  When a chief node?s remaining RE reaches to its critical level then it invokes the selection process of a new chief node. In Algorithm 1, RE is used to show the remaining energy of a node. Neigh indicates for number of neighboring nodes. The  value DW, a positive number, is used to put the importance factor weight in the neighbors? number to specify the chief nodes selection. The algorithm takes the RE, number of neighbor nodes and the nodes IDs of nodes to be considered as chief nodes. For each node i and a value Ci is obtained using its RE and Neigh. The highest value of DW causes higher  variations in the values of C?s. In case of larger number of neighbor nodes, the number the value of DW is preferred to be smaller. We used DW=8 in our experiments. At the end of code the highest C is returned in the form of an object maximal which keeps the node?s ID for chief node?s selection.

E. Chief Node Processing in ELDC  The information, consisting of its node-ID, its remaining RE and the node-IDs of the neighbor nodes, is sent by all nodes to the chief node of that layer. The chief node performs its estimations as reported by the formula given in the flowchart and algorithm. Then, it replies to those nodes whose remaining energy is lower than the threshold value and sends a command  either of REST or NEXT.

The functionality of a chief node is described in algorithm 3.

The chief node receives the information regarding the remaining energy of all the nodes and sums it up to an object total energy. Then the number of nodes divides the total energy to calculate the average energy. The threshold is  obtained by applying a function on the average energy. We used a simple technique by taking the threshold equal to half of the average energy. In the next segment, all the energies of all the nodes are compared with the value of threshold. The nodes having lesser or equal energy level compared with the threshold are kept in the REST while in this process the  neighbors are also checked in the REST queue. If found, then the specific nodes are transferred to the NEXT queue.

F. Analyzing Power Consumption  The proposed algorithm uses Heinzelman et al. for power consumption [7]. In this approach, it's considered that the main factor of power consumption is data communication,  which further depends on two factors: data reception and transmission. The model demonstrates the power to transmit a bit to a distance of d is: Pt(d)=a1+a2*d  (3)  Where the parameters a1 and a2 depend on the transmitter circuitry, and n is the path loss exponent for the environment,  which often has a value between 2 and 4. In our model a1, 2,    2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing  and n are considered to be 50 nj/bit/m , 100 pj/bit/m^2 and 2,  respectively.

In our model, the energy consumption is a constant value per bit for data reception. It is assumed as constant with B and  values equals 50 nj/bit.

It is assumed for our experiments that all sensor nodes are sensing the environment and generating traffic at a fixed rate.

Therefore, total power consumption for receiving and forwarding a bit to the next hop equals: Pf(d)=B+a1+a2*d  n (4)  If the remaining battery energy is denoted as ei for the sensor node i, then the lifetime of the node i is as follows: li= ei/((rri*B) + (rri+rgi) *(a1+a2*di  n ))                (5)  Where rri is receiving data rate to node i, rgi is the data generated rate in node i and di is the transmission range.



V. SIMULATION  The simulations have been performed using OMNET as a simulator and Castalia as a plugin for the WSNs?  environments. The reason behind selecting the simulator is its layered style, depicting real sensor environments truly, and availability of the object-oriented paradigm?s features. Table 1, shows the parameters used to perform the simulations. Let?s briefly explain the parameters used in the simulation. Initially simulation is performed on an area of 100m* 100m and then it  is increased to 500m*500m, in order to experience the effect on protocol during dense environment. Each node has assigned initial energy of 12 joules. The packet header size is 25 bytes, which contains packet related information.  The data packets contain information that is exchanged during the communication.  The number of node parameter invites for  spare and dense environments and their effect on the simulation results. The control packet size parameter is used for exchanging control information between the nodes. The broadcast size packet parameter reveals the size of the packet.

The round length paper tells about the duration of each round while the Eelec parameter stands for electronic energy using by  the sensor nodes for communication.

Simulation Parameter Value  Network Area 100m*100m to 200m*300m  Initial Energy 12 Joules  CH Percentage  0.05  Packet header Size 25 byte  Data Size 500 byte  Number of Nodes 100 to 500 nodes  Simulation Time 500 Sec  Control Packet Size 100 bit  Broadcast packet size 25 bytes  Round Length 20 sec  Eelec 50 nj/bit  Efs   10 pj/bit/m4  Table 1: Parameters used in simulation The results show that ELDC outperforms some of the most  important cluster based protocols suggested for WSNs.

Initially, the experiments are started by taking 50 nodes with 3 layers. The nodes? distribution per each layer is made by using the formula Layer_1= ? (Total number of nodes), Layer_2 = 1/3(Total number of nodes) and Layer_3=Total number of nodes ? number of nodes in (Layer_1 + Layer_2). The  experiments gave optimal results with this formula of distribution. The experiments ended with 100 nodes having 50  nodes in layer 1, 32 nodes in layer 2 and the remaining 18 nodes in layer 3. The number of nodes per group are kept approximately equal in all the layers. With hundred nodes, each group are assigned 8, 9 or 10 nodes.  The network is  divided into different number of groups and clusters for experimented protocols. With LEACH protocol the network is divided into 20 equal clusters each having 5 nodes. While rest are divided with an unequal ratio of 5% to 10% of all nodes per group or cluster. Figure 5 shows the time given when the first node dies in LEACH, HEED, DDAR, EEUC, EEMDC  and our proposal (ELDC). Results show that ELDC protocol improves than all the studied protocols. The first node of LEACH dies at 88  th second. The HEED, DDAR, EEVC and  EEMDC have values 98.9, 210.87 and 310.8 sec in this experiment. ELDC gives the highest time for first node?s death i.e. 360 seconds.

Figure 6 presents the time until the first node dies.  It shows that last node of ELDC dies at 1338.1 sec while in case of LEACH, HEED, DDAR, EEUC, and EEMDC it is about 810.84 sec, 999.6 sec, 1109.79 sec, 1161.88 sec, and 1223.52 sec respectively. So, it clearly shows that ELDC is giving better results than the others.

Figure 7 shows the energy consumption of the studied protocols along the time. The simulation results show that ELDC consumes 23% less energy than LEACH, 9% less energy than HEED, 6% less energy than DDAR, 5% less energy than EEUC, and 2% less energy than EEMDC. So ELDC outperforms the conventional protocols.

Figure 8 shows the number of nodes alive along the time. This simulation shows that the ELDC has 90 nodes alive after 800 s.

But LEACH, HEED, DDAR, EEUC, and EEMDC have 1, 61, 72, 80, and 85 of nodes alive, respectively, after 800 s. Hence, ELDC is better than the other protocols.

Figure 9 shows that ELDC has increased lifetime over its  competitor protocols, such as Enhance Leach (E-LEACH) with ANN, EEMDC, HEED, DDAR, and LEACH-C. Finally, Figure 10 illustrates the amount of energy consumed by ELDC with respect to its competitor protocols or a session of 1000 rounds. It shows that ELDC consumes lesser amount of energy than its competitors? protocols.

Figure 7: Energy Consumption as a function of the time.

0 5 0 1 0 0 1 5 0 2 0 0 2 5 0 3 0 0 3 5 0 4 0 0 4 5 0 5 0 0 5 5 0  EN ER  GY C  O N  SU M  ED (J  O U  LE S)  Time (Seconds)  LEACH HEED DDAR EEVC EEMDC ELDC    2168-6750 (c) 2016 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TETC.2017.2671847, IEEE Transactions on Emerging Topics in Computing   Figure 8: Number of Nodes Alive as a function of the time  Figure 9: Number of nodes dying with respect to number of   Figure 10: Energy consumed with respect to number of rounds

VI. CONCLUSION AND FUTURE WORK  In this paper, we have proposed a new an intelligent protocol  called ELDC. The main features of the propose protocol are: It includes advantages of both EEMDC and EEUC mechanisms and avoid their limitations; It incorporates the features of group based protocols, which help nodes dying earlier as compared to cluster based nodes, hence, it enhances its life- span; Moreover, it uses ANN for training the protocol by  taking into account the following parameters such as residual energy, distance of node from CH, distance of CH from Chief nod or boarder node, distance of the boarder node to the next Chief node or the BS, traffic load on the particular link, and the probability of health status of the particular path.  All these factors make this protocol different from the existing state-of-  the-art protocols, e.g., LEACH, HEED, EEMDC, DDAR, and O-LEACH etc. Therefore, performance evaluations of this protocol show that all nodes decrease their RE at the same pace. If some nodes consume their energy quickly, then the other nodes support them and let them be in sleep mode by sending sleep commands after every round. Additionally, we  have also presented a selection plan for the chief node, which includes features from industrial environments. It is needed when very large networks (thousands of nodes in one layer) is going to be implemented and it helps to combat the problem of scalability.

Further work will be focused on securing chief nodes as the  current proposal does not address any measurement for securing the chief nodes from external attacks by adding an authentication mechanism in sensor nodes and securely routing the data to Sink [25].

