A Logic of Attribute Containment

Abstract  We present a logic of if-then rules such as ?if all at- tributes of an object are among those from A then they are among those from B.? The attributes can either be yes/no attributes, such as male and has all wheel drive, or graded attributes, such as red and good performance which apply to objects to certain grades. We assume an abstract non- numeric framework in which the grades form a particular bounded partially ordered set equipped with aggregation operators. For such framework, we provide basic syntac- tic and semantic notions, describe complete non-redundant sets of the if-then rules, and a logic for reasoning with such dependencies with its ordinary-style and graded-style com- pleteness.

1 Introduction  1.1 Problem setting  Logical calculi for reasoning about binary (yes-or-no) at- tributes are one of the thoroughly studied areas which play a foundational role for acquisition, elicitation, and model- ing of knowledge. Various aspects, such as extraction of various types of formulas from data or devising syntactico- semantically complete systems of deduction rules have been intensively studied in the past. Particular attention has been paid to various types of if-then rules, see e.g. [12] for logic of binary attributes and its connection to functional depen- dencies; [9] and [5] for description and algorithms for ex- traction of the smallest complete set of if-then dependencies from binary data; [14] for an overview of association rules, [13] for related logical calculi, and [11] for somewhat for- gotten but a rather deep treatment of data dependencies of which association rules are a particular example. Most of the previous work was done in the framework of binary at-  tributes. In practice, numerous attributes are graded (fuzzy), rather than binary.

The present paper develops foundations of reasoning about data which contains graded (fuzzy) attributes, i.e. for attributes such as red or good performance which apply to objects to degrees. The paper is a continuation of our previ- ous work, see e.g. [4] for an overview [3] for computational aspects. In this paper, we present a general logical calculus of if-then rules A ? B for graded attributes which read: if all attributes of an object are contained in A then they are contained in B. We assume that the scale of grades to which attributes apply to objects form a particular partially ordered set bounded by 0 and 1 equipped with truth func- tions of many-valued logical connectives. An example of such scale is the unit interval [0, 1] or a two-element chain {0, 1}, but we neither assume numerical character of the grades, nor that the grades are linearly ordered. If 0 and 1 are the only grades, our framework becomes a logic of containment of binary attributes.

For this framework, we introduce basic syntactic and se- mantic notions, covering two basic meanings of contain- ment of graded attributes (Section 2), describe complete non-redundant sets of if-then rules (Section 3), and a logic for reasoning with such dependencies with its ordinary- style and graded-style completeness (Section 4). Due to the limited scope, we omit proofs or include just sketches. The next section provides preliminaries.

1.2 Preliminaries  We use complete residuated lattices as our structures of grades (truth degrees). These structures are well-known in mathematical fuzzy logic [2, 8, 10], to which we refer for further properties. A reader familiar with these notions may skip this section. A complete residuated lattice with a truth-stressing hedge (shortly, a hedge) is an algebra L = ?L,?,?,?,?, ?, 0, 1? such that ?L,?,?, 0, 1? is a com- plete lattice with 0 and 1 being the least and greatest ele-  2008 International Symposium on Knowledge Acquisition and Modeling  DOI 10.1109/KAM.2008.107     ment of L, respectively; ?L,?, 1? is a commutative monoid (i.e. ? is commutative, associative, and a? 1 = 1? a = a for each a ? L); ? and ? satisfy so-called adjointness property (accounts for ?good? modus ponens [10]):  a? b ? c iff a ? b? c (1)  for each a, b, c ? L; hedge ? satisfies  1? = 1, (2) a? ? a, (3)  (a? b)? ? a? ? b?, (4) a?? = a?, (5)  for each a, b ? L, ai ? L (i ? I). Elements a of L are called truth degrees. ? and? are (truth functions of) ?fuzzy con- junction? and ?fuzzy implication?. Hedge ? is a (truth func- tion of) logical connective ?very true?, see [10].

A common choice of L is a structure with L = [0, 1] (unit interval), ? and ? being minimum and maximum, ? being a left-continuous t-norm with the corresponding ?.

Three most important pairs of adjoint operations on the unit interval are ?ukasiewicz (a? b = max(a + b? 1, 0), a? b = min(1 ? a + b, 1)), Go?del (a ? b = min(a, b), a ? b = b if a > b, a ? b = 1 if a ? b), Goguen (a ? b = a ? b, a ? b = b/a if a > b, a ? b = 1 if a ? b).

Another common choice for L is a finite chain such as L = {a0 = 0, a1, . . . , an = 1} ? [0, 1] (a0 < ? ? ? < an) with ? given by ak?al = amax(k+l?n,0) and the corresponding ? given by ak ? al = amin(n?k+l,n). Such an L is called a finite ?ukasiewicz chain. Another possibility is a finite Go?del chain which consists of L and restrictions of Go?del operations on [0, 1] to L.

Two boundary cases of (truth-stressing) hedges are (i) identity, i.e. a? = a (a ? L); (ii) globalization:  a? = {  1 if a = 1, 0 otherwise. (6)  A special case of a complete residuated lattice with hedge is the two-element Boolean algebra ?{0, 1},?,?,?,? , ?, 0, 1?, denoted by 2, which is the structure of truth degrees of the classical logic. That is, the operations ?,?,?,? of 2 are the truth functions (interpretations) of the corresponding logical connectives of the classical logic and 0? = 0, 1? = 1. Note that if we prove an assertion for general L, then, in particular, we obtain a ?classical/binary version? of this assertion for L being 2.

We define the usual notions: an L-set (fuzzy set) A in universe U is a mapping A : U ? L, A(u) be- ing interpreted as ?the degree to which u belongs to A?.

If U = {u1, . . . , un} then A can be denoted by A = {a1/u1, . . . , an/un} meaning that A(ui) equals ai for each i = 1, . . . , n. Let LU denote the collection of all L-sets in  U . The operations with L-sets are defined componentwise.

For instance, the intersection of L-sets A, B ? LU is an L-set A ? B in U such that (A ? B)(u) = A(u) ? B(u) for each u ? U , etc. Binary L-relations (binary fuzzy rela- tions) between X and Y can be thought of as L-sets in the universe X ? Y . That is, a binary L-relation I ? LX?Y between a set X and a set Y is a mapping assigning to each x ? X and each y ? Y a truth degree I(x, y) ? L (a degree to which x and y are related by I). An L-set A ? LX is called crisp if A(x) ? {0, 1} for each x ? X . Crisp L-sets can be identified with ordinary sets. For a crisp A, we also write x ? A for A(x) = 1 and x 6? A for A(x) = 0. An L-set A ? LX is called empty (denoted by ?) if A(x) = 0 for each x ? X . For a ? L and A ? LX , a? A ? LX and a? A ? LX are defined by  (a?A)(x) = a?A(x) and (a? A)(x) = a? A(x).

Given A, B ? LU , we define a subsethood degree  S(A, B) = ?  u?U ( A(u)? B(u)  ) , (7)  which generalizes the classical subsethood relation ?.

S(A, B) represents a degree to which A is a subset of B.

In particular, we write A ? B iff S(A, B) = 1. As a con- sequence, A ? B iff A(u) ? B(u) for each u ? U . Fur- ther properties of residuated lattices can be found in [2, 10].

Throughout the rest of the paper, L denotes an arbitrary complete residuated lattice with a hedge.

2 Basic concepts of syntax and semantics  Let Y be a set of (symbols of) graded attributes. A fuzzy attribute implication (over Y ) is an expression  A? B,  where A, B ? LY (A and B are fuzzy sets of attributes).

Fuzzy attribute implications (FAIs) are our basic formulas.

The intended meaning of A? B is:  if all attributes of an object are contained in A then they are contained in B.

In a graded setting, having an attribute is a matter of degree. Hence, validity of A ? B is naturally a matter of degree as well. We need to be careful about the meaning of containment. We provide a general semantics which covers two appealing meanings of containment: bivalent containment and graded containment. Let M be a fuzzy set representing attributes of object x, i.e. M(y) is a degree to which x has attribute y. By ||A ? B||??M , we denote the truth degree of A ? B for x (we attach the superscript ?? in order to distinguish our semantics from that of [4]). Our aim is to capture the follow- ing intuitions: For a bivalent approach to containment,     ||A ? B||??M = 1 (A ? B is fully true) means: if M ? A then M ? B.

Note that M ? A means that M(y) ? A(y) for all y ? Y . For a graded approach to containment, ||A ? B||??M = 1 means:  S(M, A) ? S(M, B), i.e. a degree to which M is contained in A is less than or equal to the degree to which M is contained in B, cf. (7).

Both of the approaches can be obtained as particular cases of a general definition which uses a hedge:  Definition 1 A degree ||A? B||??M ? L to which A? B is valid in M (M is a fuzzy set of attributes of some object) is defined by  ||A? B||??M = S(M,A)? ? S(M,B) (8)  Now, one can easily check that for ? being globaliza- tion and identity, this definition meets the above-described intuitive requirements regarding the bivalent and ordinary approach to containment. Note also that ||A ? B||??M is a general degree, possibly different from 0 and 1.

We are going to evaluate FAIs A ? B in data tables with graded attributes. Such tables can be regarded a triplets ?X, Y, I? where X and Y are sets of objects (rows) and at- tributes (columns), and I : X ? Y ? I is a fuzzy rela- tion with I(x, y) being interpreted as the degree to which attribute y applies to object x.

Definition 2 LetM be a collection of fuzzy sets M ? LY .

A degree ||A ? B||??M to which A ? B is valid inM is defined by  ||A? B||??M = ?  M?M ||A? B||??M (9)  A degree ||A ? B||???X,Y,I? to which A ? B is valid in a data table ?X, Y, I? with graded attributes is defined by  ||A? B||???X,Y,I? = ||A? B||??{Ix|x?X}, (10)  where Ix denotes the ?row of x?, i.e. Ix(y) = I(x, y).

There is a close relationship between our semantics of FAIs and certain Galois-like connections and the lattices of their fixpoints whose basic version was studied in [6]: For ?X, Y, I?, introduce operators ? : LX ? LY and ? : LY ? LX by  A?(y) = ?  x?X(A(x) ? ? I(x, y)), (11)  B?(x) = ?  y?Y (I(x, y)? B(y)), (12)  for A ? LX and B ? LY . Put B(X?, Y ?, I) = {?A, B? |A? = B, B? = A} (the set of fix- points) and Int(X?, Y ?, I) = {B | ?A, B? ? B(X?, Y ?, I) for some A} (so-called intents). The  following theorem shows a basic connection between our semantics and [6]. It say that validity of A ? B in a data table ?X, Y, I? coincides with validity in the system of its intents and with a degree of containment of A?? in B.

Theorem 3 For a FAI A ? B and a table ?X,Y, I? with graded attributes,  ||A? B||???X,Y,I? = ||A? B|| ?? Int(X?,Y ?,I) (13)  = S(A??, B) (14)  Proof. Omitted due to lack of space.

We use this connection for characterization of complete  sets of FAIs.

Let us now turn to theories and models. In graded set-  ting, a theory naturally consists of formulas to which we attach grades [7, 10]. That is, a theory of FAIs is a fuzzy set T of FAIs. The degree T (A ? B) to which A ? B belongs to T can be seen as a degree to which we assume the validity of A ? B. From another point of view, T can be seen a fuzzy set of implications extracted from data such that T (A ? B) is a degree to which A ? B holds true in data. If T is an ordinary set, we call it a crisp theory, and write A ? B ? T if T (A ? B) = 1 and A ? B 6? T if T (A? B) = 0.

For a theory T , the set Mod(T ) of all models of T is defined by  Mod(T ) = {M ? LY | for each A, B ? LY : T (A? B) ? ||A? B||??M }.

That is, M ? Mod(T ) means that for each attribute impli- cation A ? B, a degree to which A ? B holds in M is higher than or at least equal to a degree T (A ? B) pre- scribed by T . Particularly, for a crisp T , Mod(T ) = {M ? LY | for each A? B ? T : ||A? B||??M = 1}.

A degree ||A ? B||??T ? L to which A ? B semanti- cally follows from a fuzzy set T of attribute implications is defined by  ||A? B||??T = ?  M?Mod(T ) ||A? B||??M .

We need the following lemma which says that validity to a degree can be reduced to validity to degree 1 (we omit proof due to lack of space):  Lemma 4 For A, B,M ? LY and c ? L,  c ? ||A? B||??M iff ||A? c? B||??M = 1.

Lemma 4 enables us to reduce the concept of a model of theory (fuzzy set of FAIs) to the concept of a crisp theory (ordinary set of FAIs):     Lemma 5 Let T be a fuzzy set of FAIs and A, B ? LY .

Define an ordinary set c(T ) of FAIs by  c(T ) = {A? T (A? B)? B |A, B ? LY  and T (A? B)? B 6= Y }.

Then we have  Mod(T ) = Mod(c(T )), (15) ||A? B||??T = ||A? B||??c(T ). (16)  Proof. Directly using Lemma 4.

Furthermore, Lemma 4 enables us to reduce the concept  of semantic entailment from a theory to the concept of en- tailment from a crisp theory:  Lemma 6 For A, B ? LY and a fuzzy set T of fuzzy at- tribute implications we have  ||A? B||??T = ? {c ? L | ||A? c? B||??T = 1}.

Proof. Using Lemma 4.

Therefore, we have:  Corollary 7 For A, B ? LY , T and c(T ) as in Lemma 5,  ||A? B||??T = ? {c ? L | ||A? c? B||??c(T ) = 1}.

We use Corollary 7 when proving a graded version of completeness theorem for our logic.

3 Non-redundant bases  In this section, we describe non-redundant bases of ta- bles ?X,Y, I? with data attributes.

Definition 8 A set T of FAIs is called complete in ?X, Y, I? if ||A ? B||??T = ||A ? B||???X,Y,I? for each attribute implication A ? B. If T is complete and no proper subset if T is complete, then T is called a non-redundant basis (of ?X, Y, I?).

It follows that if T is complete, every A? B from T is valid in ?X, Y, I? to degree 1 and for any other C ? D, the degree to which C ? D is valid in ?X,Y, I? equals the de- gree to which T entails C ? D. That is, non-redundant sets are minimal sets of FAIs with complete information about validity of FAIs in the data.

The following theorem characterizes complete sets.

Theorem 9 T is complete iff Mod(T ) = Int(X?, Y ?, I).

Proof. Omitted due to lack of space.

Definition 10 Given ?X, Y, I?, P ? LY is called a system of pseudo-intents of ?X, Y, I? if for each P ? LY we have: P ? P iff P 6= P?? and ||Q ? Q??||??P = 1 for each Q ? P with Q 6= P .

In what follows, P denotes a system of pseudo-intents.

We need the following two lemmas (proofs omitted).

Lemma 11 Let T = {P ? P??|P ? P}. Then Mod(T ) ? Int(X?, Y ?, I).

Lemma 12 For any A, M ? LY we have ||A ? A??||??M = 1 for each A ? LY and M = M??.

Theorem 13 T = {P ? P??|P ? P} is complete.

Proof. We show that  ||A? B||??T = ||A? B||??Int(X?,Y ?,I)  for each FAI A ? B. Completeness of T is then a consequence of (13). By Lemma 12, each intent M ? Int(X?, Y ?, I) is a model of T , proving the ?-part. The ?-part follows from Lemma 11. ?  The following theorem is the main result of this sec- tion. It says that in order to get a non-redundant basis of ?X, Y, I?, it is sufficient to compute a system of pseudo- intents of ?X, Y, I? (cf. also Section 5).

Theorem 14 T = {P ? P??|P ? P} is a non-redundant basis.

Proof. By Theorem 13, T is complete. Now we are going to show the non-redundancy. Take T ? ? T . Clearly, there must be P ? P s.t. P ? P?? does not belong to T ?. In ad- dition to that, we have ||Q ? Q??||??P = 1 (Q ? P, Q 6= P ) by Definition 10, i.e. P ? Mod(T ?). On the other hand, P /? Mod(T ) since ||P ? P??||??P = S(P, P?? 6= 1).

That is,  ||P ? P??||???X,Y,I? = ||P ? P ??||??T 6= ||P ? P??||??T ?  i.e. T ? is not complete, showing the non-redundancy of T .

?  If the scale L of grades is finite and ? is globalization, the non-redundant basis T given by pseudo-intents is the smallest one in terms of the number of FAIs it contains:  Theorem 15 Let L be a finite residuated lattice with ? be- ing globalization. Let T ? be complete in ?X, Y, I?, where Y is finite. Then |T | ? |T ?|, where T = {P ? P??|P ? P}  Proof. Omitted due to lack of space.

4 Completeness theorems  In this section, we introduce an axiomatic system for our logic and prove completeness theorems. First, we introduce deduction rules and a notion of a proof from a set T of FAIs.

Second, we prove that A ? B is provable from a set T of FAIs iff A ? B semantically follows from T in degree 1 (ordinary completeness). Third, we introduce a concept of a degree |A? B|??T of provability of A? B from a fuzzy set T of FAIs and show that |A ? B|??T = ||A ? B||??T (graded completeness).

4.1 Deduction rules  Our axiomatic system consists of the following deduc- tion rules.

(Ax) infer A? A ?B, (DCut) from A? B and B ? C ? D infer A ? C ? D,  (Sh) from A? B infer c? ? A? c? ? B for each A, B,C, D ? LY , and c ? L. Rules (Ax)?(Sh) are to be understood as usual deduction rules: having FAIs which are of the form of FAIs in the input part (the part preceding ?infer?) of a rule, a rule allows us to infer (in one step) the corresponding FAI in the output part (the part following ?infer?) of a rule. (Ax) is a nullary rule (axiom) which says that each A? A?B (A, B ? LY ) is inferred in one step. Rules (Ax)?(Sh) resemble Armstrong rules from database theory [12].

Remark 1 If ? is globalization, (Sh) can be omitted. In- deed, for c = 1, we have c? = 1 and (Sh) becomes ?from A ? B infer A ? B? which is a trivial rule; for c < 1, we have c? = 0 and (Sh) becomes ?from A ? B infer Y ? Y ? which can be omitted since Y ? Y can be in- ferred by (Ax).

A ? B is called provable from a set T of FAIs using a set R of deduction rules, written T `R A ? B, if there is a sequence ?1, . . . , ?n of fuzzy attribute implications such that ?n is A? B and for each ?i we either have ?i ? T or ?i is inferred (in one step) from some of the preceding for- mulas (i.e., ?1, . . . , ?i?1) using some deduction rule from R. If R consists of (Ax)?(Sh), we say just ?provable . . . ? instead of ?provable . . . usingR? and write just T ` A? B instead of T `R A? B.

A deduction rule ?from ?1, . . . , ?n infer ?? (?i, ? are fuzzy attribute implications) is said to be derivable from a set R of deduction rules if {?1, . . . , ?n} `R ?. Again, if R consists of (Ax)?(Sh), we omit R. We omit the proof of the next lemma:  Lemma 16 The following deduction rules are derivable from (Ax) and (DCut):  (Ref) infer A? A, (Wea) from A? B infer A ? C ? B, (Add) from A? B and A? C infer A? B ? C, (Pro) from A? B ? C infer A? B, (Tra) from A? B and B ? C infer A? C,  for each A, B, C,D ? LY .

4.2 Ordinary completeness  In this section, we show that deduction rules (Ax)?(Sh) are sound and we prove their completeness.

A deduction rule ?from ?1, . . . , ?n infer ?? is said to be sound if for each M ? Mod({?1, . . . , ?n}) we have M ? Mod({?}), i.e. each model of all of ?1, . . . , ?n is also a model of ?.

The following lemmas are needed to prove our complete- ness theorems. The proofs are technically involved and we omit them due to lack of space.

Lemma 17 Each of the deduction rules (Ax)?(Sh) is sound.

A set T of FAIs is called: semantically closed if ||A ? B||??T = 1 iff A ? B ? T , i.e. if T = {A ? B | ||A ? B||??T = 1}; syntactically closed if T ` A ? B iff A ? B ? T , i.e. if T = {A? B |T ` A? B}. The following lemma is almost immediate.

Lemma 18 A set T of fuzzy attribute implications is syn- tactically closed iff we have:  (Ax)-closure A? A ?B ? T , (DCut)-closure if A ? B ? T and B ? C ? D ? T then A ? C ? D ? T ,  (Sh)-closure if A? B ? T then c? ? A? c? ? B ? T  for each A, B, C,D ? LY , and c ? L.

Lemma 19 Let T be a set of fuzzy attribute implications. If T is semantically closed then T is syntactically closed.

Lemma 20 Let T be a set of fuzzy attribute implications, let both Y and L be finite. If T is syntactically closed then T is semantically closed.

Corollary 21 If L and Y are finite, a set T of FAI, T is syntactically closed iff T is semantically closed.

Theorem 22 (ordinary completeness) Let L and Y be fi- nite. Let T be a set of fuzzy attribute implications. Then  T ` A? B iff ||A? B||??T = 1.

Proof. Sketch: Denote by syn(T ) the least syntactically closed set of fuzzy attribute implications which contains T . It can be shown that syn(T ) = {A ? B |T ` A ? B}. Furthermore, denote by sem(T ) the least semantically closed set of fuzzy attribute implications which contains T . It can be shown that sem(T ) = {A ? B | ||A ? B||??T = 1}. To prove the claim, we need to show syn(T ) = sem(T ). As syn(T ) is syntactically closed, it is also semantically closed by Corollary 21 which means sem(syn(T )) ? syn(T ). Therefore, by T ? syn(T ) we get  sem(T ) ? sem(syn(T )) ? syn(T ).

In a similar manner we get syn(T ) ? sem(T ), showing syn(T ) = sem(T ). The proof is complete. ?  4.3 Graded completeness  We now turn to a graded version of the completeness theorem. Note that Theorem 22 can be read as providing a syntactic characterization of entailment in degree 1, i.e. of ||A ? B||??T = 1. However, entailment comes in degrees: in general, ||A? B||??T is a degree not necessarily equal to 0 or 1. Our aim is to capture ||A? B||??T syntactically. For this purpose, we introduce a notion of a degree |A? B|??T of provability of A? B from a fuzzy set T of FAIs. Then, we show that |A ? B|??T = ||A ? B||??T , which can be understood as a graded completeness (completeness in degrees). Note that graded completeness was introduced by Pavelka, see e.g. [7, 10] for detailed information.

For a fuzzy set T of FAIs and for A ? B we define a degree |A ? B|??T ? L to which A ? B is provable from T by  |A? B|T = ? {c ? L | c(T ) ` A? c?B}, (17)  where c(T ) is defined as in Lemma 5. This makes use of the reduction of general entailment from fuzzy sets of FAIs to entailment in degree 1 from crisp sets of FAIs, established in Corollary 7. The we get:  Theorem 23 (graded completeness) Let L and Y be fi- nite. Then for every fuzzy set T of fuzzy attribute impli- cations and A? B we have |A? B|??T = ||A? B||??T .

5 Further issues  We provided several results regarding a logic of attribute containment for graded attributes. Main results established in the paper are a description of non-redundant bases of data tables with fuzzy attributes and completeness theorems for such logic. We omitted several issues which we plan to in- clude in the full version. Most importantly: model-theoretic results related to an efficient checking of entailment, com- putation of non-redundant bases, and illustrative as well as real-world examples.

