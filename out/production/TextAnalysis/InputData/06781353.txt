An Effective Algorithmic Approach for Cost

Abstract - Cloud computing is offering efficacy oriented IT services to users throughout the world. It enables the hosting of assorted applications from user, scientific, commercial as well as business domains. The core inspiration following Cloud Computing is that the entire system can be controlled as well as worked using simply an HTTP client. The cloud user is required to have only a web based client to make exertions with Cloud Systems and all its applications, including office apps, business modules or personal information systems. It is applied to both modern and obsolete systems. An Open Source Platform designed to hold a wide assortment of Web Applications. Cloud Operating Systems was thought of its new definition that everything inside it can be accessed & acquired from everywhere inside a Network. All the user is required to do is login into Cloud Operating Application server with a normal web client, and access to the desktop, with your documents, applications, movies, music and all etc. Cloud Operating Systems lets you upload your files and work with them regardless of your location.

It contains almost all applications such as Word Processor, PDF reader, Address Book and many more developed by the Cloud developers and Cloud vendors. Cloud Storage provides the web based users with storage space and make user friendly and timely acquire and store data, which is mainly the foundation of each type of cloud applications. However, there is requirement of deep analysis on how to optimize cloud storage aiming at improvement of data accessing and data storing performance. In this paper, we have proposed the mathematical description as well as the algorithmic approach for cloud storage optimization and as an objective optimization problem which is solved by our proposed optimized algorithm; as a result the data is distributed in appropriate nodes with the best efficiency. The simulation or investigational results demonstrate the performance of the algorithms analogous to MapReduce Hadoop technology in BigData paradigm.

Keywords: Cloud Based Distribution; Cloud Algorithms; Cloud Computing; Cloud Storage; Optimization.



I. INTRODUCTION  Using Cloud Computing applications, the users can access assorted database resources via the Internet from anywhere, for as long as they need, without complications about any maintenance or management of actual cloud resources.

Further, cloud databases are very active and scalable. Cloud computing is much different from grid computing, utility computing. Cloud computing is one new distributed computing mode after grid computing and pervasive computing. Cloud computing is mainly defined as   Dr. Chander Kant  Assistant Professor, Deptt. of Comp. Sc. & AppJ., Kurukshetra University  Kurukshetra, India  Email: ckverma@rediffmail.com  "A standard and promising computing paradigm residing with huge data and all services in massively scalable data centers in the cloud and can be accessed from any connected devices over the internet"  Its effort is to build a virtual infrastructure providing users with remotely computing and storage capacity [1-3]. Up to 2006, there have been some of the more successful cloud facilities, such as Amazon's Elastic Compute Cloud [4], IBM's Blue Cloud [5], Nimbus [6], OpenNebula [7], and Google's Google App Engine [8]. Cloud storage is one of the most promising features of cloud computing. It provides space in cloud for data storage with the ease and time bound access to user, such as a user's has its own local storage but now with much increased reliability. Simple Storage Service (S3) built on Amazon EC2 as well as the Google File System [9]. Most companies have been automating data center tasks for years in an effort to improve efficiency, save time, instill consistency, reduce errors, and cut costs. They've used virtualization to consolidate and automate specific infrastructure elements.

They've begun to automate routine processes: provisioning, configuration, and patching. [10] Other enormous key features of Cloud Apps includes Virtual Assistant, Live Chat: Virtual Assistant, Escalation, Live Chat: Page Peek, Customer Portal: Widget Migration, Customer Portal: Connect Object, Explorer, Agent Desktop: SSO Identity Provider, Mobile Agent App: Smartphone Client, Mobile Agent App: Mobile Knowledge, App Builder: SAML 2.0 Token, Infrastructure: Incident Thread Masking, Cloud Operations: Expanded Data Center Footprint. [11]  Fig. 1: The Transformation of the Information Economy Continues [12]    A. Cloud Computing defines  ? Paradigm that store and manages a huge infrastructure for providing elastic and dynamic operating environment.

? Facilitate user to execute all his requirements on user's machine as an on-line application stored somewhere on the cloud and run through any web browser from any location.

? An Internet based computing environment on pay per use basis means you pay only for resources that you use.

The data center is an essential commercial asset that connects all high performance servers, applications and all storage services. Businesses rely on their data centers to support critical construction operations and drive greater competence and throughput. In isolation, the data center is the main key component that needs to be planned and managed carefully to meet the growing performance demands of users and applications [13].

B. Generic Examples of Cloud Computing  ? Amazon's Elastic Computing Cloud (EC2) offering computational services that enable people to use CPU cycles without buying more computers  ? Amazon's Simple Storage Service (S3) provides all storage services.

? Nirvanix facilitating organizations to store data and documents without adding even a single on-site server  ? SaaS companies like Salesforce.com providing CRM services, which helps clients in managing customer information without installing specialized software  Cloud computing allows organizations to reassess IT and reinvent the way they do business. By adopting cloud philosophies, businesses can rapidly integrate and distribute services diagonally cloud environments, increasing efficiency, improving business agility and turn down costs [14].

c. Different Services Offered By Cloud Computing  Cloud computing service providers categorize their cloud services according to three fundamental models: Infrastructure as a service (IaaS), platform as a service (PaaS), and software as a service (SaaS) where IaaS is the most basic and each higher model abstracts from the details of the lower models.

? Infrastructure As A Service (IaaS)-Network Architects  In this most basic cloud service model, cloud providers offer computers - as physical or more often as virtual machines, raw (block) storage, load balancers,  firewalls, and networks. IaaS service providers supply these resources on demand from their large pools installed in datacenters. Local Area Networks including IP addresses are part of the offer. For covering connectivity of wide area, the Internet can be used or - in carrier clouds - dedicated Virtual Private Networks (VPN) can be configured.

? Platform As A Service (PaaS)-Application Developers  In the PaaS model, cloud providers deliver a computing platform and/or solution stack typically including operating system, database, execution environment, programming language and web server.

Now application developers are free to develop and run their software solutions on a cloud platform without the cost and complexity of buying and managing the underlying hardware and software layers.

? Software As A Service (SaaS)-End Users  In this model, cloud providers install and operate application software in the cloud and cloud users access the software from cloud clients. Now cloud users need not to manage the cloud infrastructure and platform on which the application is executing. It eliminates the need to install and run the application on the cloud user's own computers simplifying maintenance and support.

Infrastructure Operating Systems relies on Universal Command Interface to plug-in any data plane devices. Unified Controller orchestrates the execution of Virtualized Infrastructure Function - Control functions; Service delivery functions are separated from the core devices [15].

D. Different Types Of Clouds  ? Public Cloud  Public cloud or external cloud defines cloud computing in the traditional mainstream sense, whereby resources are dynamically provisioned on a fine? grained, self-service basis over the Internet, via web applications/web services, from an off-site third-party provider who shares resources and bills on a fme? grained utility computing basis.

? Private Cloud  Private cloud and internal cloud are neologisms that some vendors have recently used to describe offerings that emulate cloud computing on private networks.

These products claim to "delivers benefits of cloud computing without much effort". It also improves data security, reliability and corporate governance concerns.

? Hybrid Cloud  Hybrid cloud environment is the collection of multiple internal and/or external providers "will be typical for most enterprises".



II. IMPROVED ALGORITHMIC APPROACH FOR CLOUD STORAGE vnTH COST OPTIMIZATION FACTORS  1. CurrentSolution <- StorageSpaceRemaining Set CostOverhead=MinCost;  2. h <- TotalFilesUploaded  3. n <- 0  4. Upload New Files while (T < Set(Time)) if (n==h) Check CurrentSolution If (Cost (CurrentSolution) > CostOverHead) Terminate with Unsuccessful Attempt else Calculate per A1B Cost on Cloud Server  5. UPDATE CurrentSolution and h  6. if(h>=MaxFileThreshold) OR (CurrentSolution <= MinSpaceThreshold)  Terminate with Success Analyze Reports for CostOverHead else Go To Step 4  7. Update n  8. End

III. SIMULATION RESULTS AND COMPARISON GRAPHS  In the following simulation, we have developed a cloud based dashboard for uploading of files in multiple formats.

The execution or simulation has been implemented for both existing as well as proposed optimized algorithm to test the accuracy and integrity of the results.

It is clearly seen from the results (fig. 2, fig. 3, Table I, Table II) that the algorithmic approach in our proposal IS giving better results as compared to classical approach.

Table I. Traditional Approach (Classical Files Uploading)  File Name File Type I Application Type File Size in KB Time Stamp Cost Factor Upload I Execution Time (USD) (In Microseconds)  X280N.zip appl icationlx -zi p-compressed 0.3681640625 KB Monday 16th of September 2013 1.07676744 1.07640790939 02:30:24 PM  8.zip appl icationlx -zi p-compressed 328.866210938 KB Sunday I st of September 2013 1.33251143 1.0113530159 08:41 :30 PM  M923MB.zip appl icationlx -zi p-compressed 5.7587890625 KB Saturday 31 st of August 2013 1.06810594 1.06248211861 03:33:52 PM  XM923MB.zip appl icationlx -zi p-compressed 6.3798828125 KB Wednesday 28th of August 2013 1.02915049 1.02292013168 11:59:19 AM  T able II. Proposed Algorithmic Approach analogous to MapReduce Technology in HadooplBigData  File Name File Type I File Size in KB Time Stamp Application Type  X280N.zip appl icationlx-zip- 0.3681640625 Monday 16th of September 2013 02:30:44 PM  compressed  8.zip appl icationlx-zip- 328.866210938 Sunday 1st of September 2013 08:36:06 PM  compressed  M923MB.zip appl icationlx-zip- 5.7587890625 Saturday 31st of August 2013 03:34:11 PM  compressed  XM923MB.zip applicationlx-zip- 6.3798828125 Wednesday 28th of August 20 13 11 :59:4 I AM  0 4  compressed  C l o u d v ?? Tr Cll cIIU o.? ... . ' A'Ppf'oa O h (lDt.ouUOf"l ,.. .. fY'I ????? 0 .fT1plr'tCO' con-tp". ,. , .. on) )II; AM'. ; At,."..p ?? v .... )(,. t Rx.cu:llon TtlfT.Io.

Execution Time  0.000718116760254  0.0287008285522  0.0938999652863  0.0335 14022827 I  _ nKitiilOr"lat ..... p R o d u L.

Cost Factor  (USD)  0.00107765  0.34985924  0.09952378  0.03974438  -,-; ,nnln.:w l .

0:>  C_ea.nJon An!? fnpt  Fig.2. Cloud vs. Traditional Approach (Execution time based empirical comparison) X Axis: Attempt, Y Axis: Execution Time     C,loud Vs. T r .3dit J ono:t t Approach (Cos:! F4lIct:or B.:IIsed Emp.iric31 Corn p3.rison l X Axis: Att.ft"lpt I V Axis: Cos t F oetor  1 2   0 0  Execution Attempl 1 Execut ion AttelTlrpl 2 execution Attem pt 3 E xecution Atlernpl: 4  _ Traditional Approocn _ MapR.ed:uc.e  Tectvlool ogy Based  Fig.3. Cloud vs. Traditional Approach (Cost factor based empirical comparison) X Axis: Attempt, Y Axis: Execution Time

IV. EXECUTION CODE  <?php  error Jeporting(O);  function rmdir Jecursive($dir) (  foreach(scandir($dir) as $jile) {  if ('. , === $jile II ', , ' === $jife)  }  }  continue;  if (is _ dir("$dirl$jile ")) rmdir Jecursive(,,$dirl$file ");  else unlink("$dirl$jile");  rmdir($dir);  if($ _FILES["zip -.lile'] ["name']) (  $jilename = $ _FILES["zip -.lile '] ["name '];  $source = $ _FILES["zip Jzle,] ["tmp _name '];  $type = $_FILES["zipJzle']["type'];  $fsize = $_FILES["zip-.lile']["size'];  $name = explode(". ", $filename);  $accepted _types = array('applicationlzip', 'applicationlx-zip-compressed: 'mul tipartlx-zip', 'applicationlx-compressed');  false;  foreach($accepted_types as $mime_type) (  if($mime_type == $type) {  $okay = true;  break;  }  }  $continue = strtolower($name[}j) == 'zip' ? true :  if(!$continue) {  }  $message = liThe jife you are trying to upload is not a .zip jife. Please try again. ";  1* PHP current path *1  Spath = dirname(_FILE---.J. '/'; II absolute path to the directory where zipper.php is in  $jilenoext = basename ($jilename, '.zip'); II absolute path to the directory where zipper.php is in (lowercase)  $jilenoext = basename ($jilenoext, '.ZIP'); II absolute path to the directory where zipper.php is in (when uppercase)  $targetdir = Spath . $filenoext; II target directory  $targetzip = $path . $filename; II target zip file  1* create directory if'not exists: otherwise overwrite *1  1* target directory is same as jilename without extension *1  if (is _ dir($targetdir)) rmdir Jecursive ( $targetdir);  mkdir($targetdir, 0777);  1* here it is really happening *1  if(move _uploaded Jzle($source, $targetzip)) {  $zip = new ZipArchiveO;  $time} =microtime(true);  $x = $zip->open($targetzip); II open the zip jile to extract  f ($x === true) (  $zip->extractTo($targetdir); II place in the directory with same name  $zip->closeO;  unlink($targetzip) ;  }  $extime = (microtime(true )-$time} );  $message = "Your .zip file was uploaded and unpacked.

<br><br><div align=center style=Jont-weight: bold; background-color: red; color: white; padding:     10px'>Execution I Upload Time : ".(microtime(true)? $time1). "<Idiv>";  include _ once("conn.php");  $timestamp=date("l jS lof F Y h:i:s A");  mysq l_query("insert into optimized(jilename, filetype, jilesize, timestamp, executiontime) values(,$filename', '$type', '$fsize: '$timestamp: '$extime')'');  } else {  }  ?>  $message = "<div style='background-color: red; color: white; padding: 2px'>Only Compressed ZIP File is allowed <br>for simulation and testing as MapReduce Technology<ldiv>";  }  <!DOCTYPE html PUBLIC "-IIW3CIIDTD XHTML 1. 0 Transitionall lEN" ''http://www. w3. orglTRlxhtml1 IDTDlxhtml1- transitional. dtd">  <html xmlns= ''http://www. w3.orgI1999Ixhtml">  <head>  <meta http-equiv="Content-Type" content = "textlhtml; charset=UTF-8" I>  <title> Unzip a zip file to the webserver<ltitle>  <Ihead>  <body>  <div align=center style = ''padding: 20px; border: 2px solid red; border-radius: 20px; background-color: skyblue; font? family: arial; font-weight: bold">  Proposed Algorithmic Approach analogous to MapReduce Technology in HadooplBigData  <Idiv>  <div align=center style = ''padding: 20px">  <?php if($message) echo "<p>$message</p>"; ?>  <form enctype= "multipart!form-data" method= ''post'' action="">  <label> Choose a zip file to upload: <input type = "file" name= "zip Jzle" I> <Ilabel>  <br l>  <input type = "submit" name= "submit" value = "Upload" I>  <!form>  <Idiv>  <div align=center>  <iframe src="opt.php" height=400 width=900 frameborder=O> <Iiframe>  <Idiv>  <Ibody>  <Ihtml>  <?php  error Jeporting(O);  include _ once("connphp '');  $q=mysq'-query("select * from optimized order by id desc'');  echo "<table border align=center cellpadding= 1 O><tr bgcolor=wheat> <td> Name < td> File Type < td> FileSize in KB<td>TimeStamp<td>Execution Time<td> Cost Factor (USD)<td>Delete";  while ($r=mysql Jetch _object($q))  (  echo "<tr> <td>". $r-> filename;  echo "<td>". $r-> jiletype;  echo "<td> ".($r->filesizel(l024));  echo "<td> ".$r->timestamp;  echo "<td>". $r->executiontime;  $cost=($r->executiontime + ($r->filesize)/(l024* 1024));  echo "<td> ".number Jormat($cost, 8);  echo "<td> <a href=delphp?id=". $r->id. If> Delete<la>";  }  echo "<Itable>";  ?>  <html>  <head>  <script type = "textljavascript" src="https:/lwww.google.comljsapi"> <I script >  <script type = "textljavascript">  google.load("visualization", "1", (packages:["corechart''] });  google.setOnLoadCallback( drawChart);  function drawChartO (  var data = go ogle. visualization.arrayToDataTable([  ['Execution Attemp( 'Traditional Approach', 'MapReduce Technology Based'],  ['Execution Attempt 1: 0.17878, 0.0123122j,  ['Execution Attempt 2: 0.238787, 0.024234j,  ['Execution Attempt 3: 0.323, 0.02322j,  ['Execution Attempt 4: 0.234, 0.0242412j  j);     var options = {  title: 'Cloud Vs. Traditional Approach (Execution Time Based Empirical Comparison) X Axis : Attempt I Y Axis : Execution Time'  };  var chart = new google. visualization.LineChart(document.getElementById(,c hart_div,));  chart.draw(data, options);  }  </script>  <script type = "text!javascript">  google.load("visualization", "1", (packages:["corechart'7});  google.setOnLoadCallback( drawChart);  function drawChartO {  var data = google. visualization.arrayToDataTable([  {'Attempt', 'Traditional Approach: 'MapReduce Technology Based],  {'Execution Attempt 1', 0.3, 0.3 J,  {'Execution Attempt 2', 0.012, 0.0244J,  {'Execution Attempt 3', 0.04234, 0.01322J,  ('Execution Attempt 4', 1.024, 0.0412J  J);  var options = {  title: 'Cloud Vs. Traditional Approach (Cost Factor Based Empirical Comparison) X Axis : Attempt I Y Axis : Cost Factor'  };  var chart = new google. visual ization.LineChart( document. getE lementBy 1 d('c hart_div2,));  chart.draw(data, options);  }  </script>  </head>  <body>  <div align=center id="chart_div" style="width: 1200px; height: 600px; "></div>  <div align=center id= "chart _ div2" style = "width: 1200px; height: 600px;"></div>  </body>  </html>  <?php  session _startO;  $timel =microtime(true);  ?>  <link rel= "stylesheet" href= "./css/style.css" type= "textlcss">  <table>  <tr>  <td valign=top>  <?php  error Jeporting(O);  Slink = mysql_connect(,localhost', 'root', '') or die(mysq'-errorO);  $db _selected = mysq '-select _ db (,cloud', Slink) or die (mysq'-errorO);  echo "<div style='background-color: red; color: white; padding: 10px; text-align: center'> User Logged In  If . $userprojilename=$ _SESSION["username '7;  echo "</div> <div align=right style='background-color: black; color: white'> <strong> <a href=signoutphp style = 'border-radius: 10px; color:white'>Sign Out</a> </strong> </div>";  $q=mysq'-query("select * from uploads bronze where username='$userprojilename' order by id desc'');  echo "<div style='background-color: silver; border-radius: 20px; font-family: arial; text-align: center; font-size: 12pt; font-weight: bold; padding: 1 Opt'> Current Files and Documents on Cloud Storage </div> <table style=Jont-size: 9pt' border cellpadding=5 celispacing=O bordercolor=b/ue align=center><tr bgcolor=skyblue style=Jont-weight: bold; text-align: center; font-family: arial; font-size: 9pt'> < td>FileName < td>File Type / Application Type<td>FileSize<td>Date and Time<td>Delete<td> Cost Factor (USD) <td> Upload / Execution Time <br> (In MicroSeconds) If;  while ($r=mysql Jetch _object($q))  {  echo "<tr style='font-size: 8pt'> <td> If;  echo $r-> filename;  echo "<td>";  echo $r-> filetype;  echo "<td>";  echo (($r->ji/esize)/1024). " KB";  echo "<td width = 1 00>";  echo $r->timestamp;  $id=$r->id;     echo "<td>";  echo "<a href=delete.php?id=$id&username=$r? >username> <strong> Delete<lstrong> <Ia>";  echo "<td>";  $cost=($r->executiontime + ($r->jilesize)l(1 024* 1024));  echo number Jormat($cost, 8);  echo "<td>";  echo $r->executiontime;  }  echo "<Itable>";  ?>  <td valign=top>  <?php  function foldersize($dir)(  $count _size = 0;  $count = 0;  $dir_array = scandir($dir);  foreach($dir _array as $key=>$Jilename)(  if($jilename!=" .. " && $jilename!=".")(  if(is _ dir($dir. "f". $Jilename))(  $new Joldersize = foldersize($dir. ''/''. $Jilename);  $count _size = $count _size + $new Joldersize[O};  $count = $count + $newJoldersize[1};  }else if(isJzle($dir. "I".$jilename))(  $count_size = $count_size + Jilesize($dir. "I".$filename);  $count++;  }  }  }  return array($count_size,$count);  }  $lid=$ _ SESSION["username '7;  $sample = foldersize("'/".$lid);  II "Folder Size : " .  $sample[O} . " Bytes <Ibr>" ;  Ilecho "File Count : " .  $sample[1} . " Files <I br>" ;  $bytes=$sample[O};  $kilobyte = 1024;  $megabyte = $kilobyte * 1024;  $num=number Jormat(($bytes I $megabyte),3);  $t=50.00;  $remain=$t-$num;  echo "<div align=center> <div style='background-color: black; padding: 20px; color: white; font-family: arial; width: 300; text-align: center; font-size: 12pt; border? radius: 20px; box-shadow: 10px 10px 1 Opx yellow'> Bronze Plan : Cloud Usage Meter<ldiv><br>";  echo "<div style='background-color: skyblue; padding: 20px; font-weight:bold; height: 50px; font-family: arial; width: 300; text-align: center; font-size: 18pt; box-shadow: 10px 10px 10px yellow'> Disk Remaining size<br> <font size=6 color=black style='text-shadow: 5px 5px 5px yellow'>".$remain. ' MB<lfont><ldiv><ldiv>';  ?>  <input type="hidden" value="<?php echo $remain;?>" id= "rval" I>  <script type = "text/javascript" src="./js/jqueryjs"> <Iscript>  <script type = "text/javascript">  $(document).ready(fimctionOr  $('#f)?change(functionOr  var f=thisfiles[O);  var r=50;  var siz=(f.size IlffileSize);  var cval=$(,,#rval',). valO;  var bval=cval-f;  var sizmb = (siz I (1024* 1 024)).toFixed(2);  });  });  <I script>  var flag=true;  if(cval<sizmb)(  flag=false;  }  alert(''file size high '');  window. location. reloadO;  return Jlag;  <form method= "post" enctype= "multipartlform-data" action="savejile.php" style="background: none repeat scroll 0 0 #EEEEEE;  padding: 10px; text-align: center">  <input name="uname" type="hidden" value="<?php echo $lid;?>" I>  <br> <br>     <div align=center> <div align=center style = "background? color: red; color: white; border-radius: 20px; font-size: J2pt; padding: 20px; font-family: arial; width: 500px"> Uploading Panel for Virtual Disk Drive on Cloud</div> </div>  <br> <br>  <input id=''j'' name=''jile'' type=''jile'' style="border: Jpx solid red; "/>  <br> <br>  <div id=ajaxloader style='display: none; background? color: white'> <img src=ajaxloader.gif> <br>  <font color=red size=4> <strong> Uploading in Progress ...

Please Wait</div>  <input type="submit" value="Upload Document" id="subm" style=''padding: 20px; border-radius: 20px" onClick= "ajaxloader.style. display = 'block",!>  </form>

V. CONCLUSION  In this manuscript, a cost effective algorithm to optimize cloud storage algorithm is proposed and simulated with effective results. The proposed approach for cloud storage optimization effectively distributes data to the appropriate cloud servers with optimization in terms of the cost and execution time. Now a days, using such cloud-based interconnection i.e. cloud computing may be more precisely described as computing with many isolated clouds of services to which technology clients can plug into individually.

Virtualization and SOA offered in cloud flood the enterprise with the ideas consisting of all loosely coupled services running on scalable and centralized infrastructure. Now even the big enterprise giants are thinking seriously to have a node in the cloud. It's the future trend with a far-out horizon. But among big Meta trends, cloud computing is the complex one to debate in the long term. It is a technology which took the software and business world to the new horizon. The much deserved excitement over it will prolong for years to come.

