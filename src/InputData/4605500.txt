

Abstract: An association rule mining algorithm called FP-Growth can help to mine frequent itemsets and derive interesting rules. An implementation of this algorithm and its application in intelligent transportation system are presented. Experimental results show that the algorithm can provide effective decision support for traffic management.

Key Words: FP-Growth, Frequent Itemsets, Intelligent Transportation System  1 INTRODUCTION  Applying the data mining technology to the Intelligent Transportation System to mine the deep-level and predicted information that beneath the massive data is very significant for traffic management department to watch and control the road condition and traffic volume ,take timely and relevant measures to clear the traffic jam thus to reduce the occurrence of traffic violation and traffic accident. This paper mainly studies on the application of data mining technology on the Intelligent Transportation System. It uses one association rule mining algorithm called FP-Growth to discover interested rules from traffic violation data.

2 DESCRIPTION OF ASSOCIATION RULE MINING ALGORITHM  2.1   Association Rules Mining  Association rules mining can be defined formally as follows [1]: Let I={ i1,i2,?,im} is a set of literals, or items. X is an itemset if it is a subset of I. D={ti ,ti+1,?tn} is a set of transactions, called a transaction database, where each transaction t has a tid and a t-itemset t = (tid, t-itemset). A transaction t contains an itemset X iff, for all items, where i X , i is a t-itemset.

There is a natural lattice structure on the itemsets 2I , namely the subset/superset structure. Certain nodes in this lattice are natural grouping categories of interest.

An association rule is the implication X Y, where itemsets X and Y do not intersect. Each association rule has two quality measurements, support and confidence.

The support for a particular association rule X Y is a proportion value that both X and Y occurs in transaction D.

That is, support =P(X Y). The confidence of the association rule X Y is a percentage value that shows how frequently Y occurs among transactions D containing X. The confidence of the association rule indicates how reliable this rule is. In other words,  confidence = P(Y|X)= P(X Y)/P(X). Minimal support (minsupp) and minimal confidence (minconf) are given by users or experts. Then X Y is a valid rule if  (1) supp(X Y) minisupp, (2) conf (X Y)  miniconf, where ?conf (X Y) ? stands for the confidence of the rule X Y while ?supp(X Y)? stands for the support of the rule X Y.

2.2  FP-Growth  Association rule mining can be divided into two problems: Find all frequent itemsets and generate association rules. It first finds all frequent itemsets that have a support greater than the user-specified minimum support. Then it finds association rules above the user-specified minimum confidence among every large frequent itemset. Typical association rule mining algorithms are Apriori and FP-Growth.

FP-Growth algorithm is put forward by Han.JW etc. in 2000. It need not construct candidate itemsets, but generates frequent itemsets. The whole database is condensed to a much smaller FP-Tree and is scanned only twice. For the reason, FP-Growth algorithm has good performance of efficiency and retractility compared to the Apriori algorithm. Also it fits for mining patterns in different length. For traffic management system need to store large amounts of data, FP-Growth algorithm is proposed to mine association rules.

The following is a description of the algorithm, as in Ref.[2]  Algorithm  FP-Growth Input  A FP-tree built from the DB with respect to  the given minimum support threshold.

Output: The complete set of frequent itemsets.

Call FP -Growth(FP -tree, null).

procedure FP-growth(Tree ) if Tree contains a single path P then for each combination (denoted as )of the nodes in  the path P     generate pattern  with support=minimum support of nodes in ;  else for each 1 in the header of Tree do { generate pattern = 1  with support = 1.support; construct -conditional pattern base and  -conditional FP- tree Tree ; if Tree  then call FP-growth(Tree , ); }  2.3  Implementation of FP-Growth algorithm  We implement FP-Growth algorithm at the environment of VC++. VC++ offers a Standard Template Library(STL). Some algorithms of it can help to delete objects, sort objects, count and compare them with other to find special objects. Those executable algorithms can cut down great amounts of work.

3 APPLICATION OF ALGORITHM  3.1  Data Preprocessing  In this paper, we explore the application of data mining technology in intelligent transportation system. FP-Growth algorithm is used to mine traffic violation records. data preprocessing is required to improve the performance before FP-tree construction algorithm is adopted to construct an FP-tree from the transaction database firstly.

Background database of the transportation system is  Oracle 9i. We choose 600000 entries of traffic violation records accumulated in 2005 from the database of one traffic management department at random.

There are many continuous attributes in the database such as peccancy time and driving experience. However, itemsets discrete data are required in association rules mining to produce frequent, so it is necessary to treat those existing data beforehand. To improve mining efficiency, a generalization-based data pretreatment is used in our experiment.

For example, month data are generalized to M1-M12 which corresponding to 12 months. Days are turned to D1(the first ten days of a month), D2(the middle ten days of a month), D3(the last ten days of a month). Time data are divided into 6 periods of time according to traffic status, They are T1(5:01-9:00), T2(9:01-12:00), T3(12:01-14:00), T4(14:01-17:00), T5(17:01-20:00) T6(20:01-5:00). Age of drivers are generalized to N1(<20), N2(20-29), N3(30-39), N4(40-49), N5(50-59), N6(>=60) by interval. Driving experience are generalized to L1(<1 year), L2(1-2 years), L3(2-3 years), L4(3-5 years), L5(5-10 years), L6(10-20 years), L7(>=20 years) considering requirements.

Other data such as car types, peccancy type, peccancy place, driver gender are identified by pseudocode which can be found in the database. Data pretreated are showed in Tab.1.

Tab.1  Part of Data Pretreated  plate number  car types  peccancy type  peccancy date month  peccancy date day  peccancy time  hour peccancy place age gender Drivingexperience  E  14 1201 M12 D1 T2 101040000000 N4 1 L1  E  02 1109 M4 D2 T4 957990006000 N3 1 L1  E  01 1027 M6 D1 T5 957990006000 N3 2 L5  3.2  Data Mining and Analysis  There are 6358 entries of records after data pretreatment.

3207 frequent itemsets are generated through pattern mining when minimum support is set to 0.01, and the largest one contains 6 items. For an example, support of Item 1303 is 32%, which means it is a typical traffic violation behavior. By referring to relevant tables, we can come to the conclusion that overspeed is the major cause of traffic violation. Part of item 1303 is showed in Tab.2.

Tab.3 presents part of the effective association rules that have been derived from the largest frequent itemset when minimum confidence is set to 0.35.

Tab. 2  Part of the largest frequent itemset that mined  NO. Item Support 1 (1,N3,M3,D1,T2,02,1303)  male, aged 30 to 40 years, early March, 9:00AM~12:00AM, small car, overspeed   2 (1,N3,M3,D1,T2,104,1303) male, early March, 9:00AM~12:00AM, small car, 104 national road, overspeed   3 (1,N4,M2,D3,T2,02,1303) Male,aged 40 to 50 years, late February, 9:00AM~12:00AM, small car, overspeed   4 (1,N3,M3,D3,T2,02,1303) Male,aged 30 to 40 years, late February,  9:00AM~12:00AM, small car, overspeed      Tab.3  Part of association rules generated from the largest frequent itemset  NO. Rule Support Confidence 1 1,N3,M3,D1,T2,02->1303 (66)  1.0% (66/131) 50%  2 1,N3,M3,D1,T2,10104->1303 (64) 1.0%  (64/95) 67%  3 1,N4,M2,D3,T2,02->1303 (70) 1.1%  (70/121) 58%  4 N3,T2->1303 (391) 6.1%  (391/1130) 35%  5 T2->1303 (898) 14.1%  (878/2592) 35%  6 1,N3,M3,D3,T2,02->1303 (67) 1.0%  (67/130) 52%  7 1,D3,02,95799->1303  (71) 1.1%  (71/103) 69%  8 95799->1303  (746) 11.7%  746/1855 40%  9 1,N3,M2,65299->1101 (71) 1.1%  (71/199) 36%  10 1,M3,02,65299->1101 (67) 1.0%  (67/187) 36%  11 1,M1,02,65299->1101 (66) 1.0%  (66/175) 38%  12 N3,02,10104->1071 (65) 1.0%  (65/186) 35%  13 1,M1,02,10104->1071 (64) 1.0%  (64/185) 35%  14 1,N4,M2,65299->1101 (80) 1.3%  (80/217) 37%  By analyzing the results of mining, we can get rules as follows: Rule 1: The probability that male drivers aged 30 to 40 driving small cars are caught overspeed between 9:00AM and 12:00AM in early March is 50% while support is 1.0%.

Rule 2: The probability that male drivers aged 30 to 40 are caught overspeed in 104 national road between 9:00AM and 12:00AM in early March is 67% while support is 1.0%.

Rule 3: The probability that male drivers aged 40 to 50 driving small cars are caught overspeed between 9:00AM and 12:00AM in late February is 58% while support is 1.0%.

Rule 4: The probability that rivers aged 30 to 40 are caught overspeed between 9:00AM and 12:00AM is 35% while support is 6.1%.

?? Rule 8: The probability that drivers are caught overspeed in suburbs is 40% while support is 11.7%.

?? Rule 12: The probability that drivers aged 30 to 40 driving small cars are not wearing seat belts in 104 national road is 35% while support is 1.0% .??  3.3  Patterns Evaluation  From the above patterns that have been mined, we can come to the conclusion that there is a large possibility that cars overspeed in the suburbs since peccancy place 95799 is in the suburbs. This is because these places have broad roads, few buildings and people, and are lack of control.

Moreover, it is obvious that drivers at 30 to 40 are inclined to overspeed between 9:00am and 12:00am because this period of time is the rush hour and not emphasis is placed on the management. Therefore it is proposed to strengthen police force during the time.

4   CONCLUSION  In this paper, an algorithm called FP-Growth is proposed to discover association rules. It is implemented at the environment os VC++. Also presented is its application in traffic violation records to mine frequent itemsets and interesting rules. It is showed by experiments that the method we used is effective and the results are useful for traffic management department to make decision.

