Sequential Pattern Mining with Inaccurate Event in Temporal Sequence

Abstract    In true-life, the existence of many events which are occurred in the interval may cause uncertainty in events ordering. The inaccurate event has been introduced for sequential pattern mining to improve accuracy of computing support threshold. In this paper, we store a sequence in the chain table. Sequence with inaccurate event can be expressed expediently. Besides, precise support is introduced to evaluate the probability of a pattern contained in a sequence. And the probabilistic ordering is employed to handle overlapping events. In essence, probabilities of generated candidate pattern contained in an inaccurate sequence are computed. The maximal value in probabilities is selected as precise support of the sequence. The sum of all inaccurate sequence precise supports in the database is computed. If the ratio value between the sum and the length of database is not less than predefined minimum threshold, the generated candidate pattern is called frequent pattern. So some infrequent patterns might be turned to be frequent and some interesting patterns could not be missed.

Performance analysis shows the accuracy of discovering  frequent patterns is improved.

* This work is supported by the Natural Science Foundation of Hebei Province P.R.China, NO. F2008000888.

Keyword: inaccurate event, temporal sequence, sequential pattern   1. Introduction   The problem of sequential pattern mining was first developed by Agrawal and Srikant[1]. Since then, mining works had been done in sequential pattern discovery [2, 3]. The time attribute was introduced for the transaction by Srikant and Agrawal[4]. To relax the rigid definition of supermarket transactions, they dynamically combined transactions happened inside a marginal interval (ignore their orders). However, the order of such events may not be ignored in many other domains. The frequent episodes were discovered from telecommunication event sequences by Mannila et al[2].

But they only considered events with an accurate timestamp. Subsequently, the uncertainty was introduced into pattern discovery in temporal event sequences by Maria E.Orlowsk et.al[5]. The uncertainty model was defined and an algorithm was presented to discover interesting pattern in the sequence database with inaccurate event. But they only considered one type of inaccurate event.

Recently, study of uncertain temporal information also has evolved greatly. Efficient methods were presented by P.Papaterou et al[6] to find frequent arrangements of temporal intervals using both breadth   DOI 10.1109/NCM.2008.93       first and depth first search techniques. A new algorithm ARMADA also was presented to discover frequent temporal patterns and to generate richer interval-based temporal association rules by E. Winarko et al[7].

Subsequently, a maximum gap time constraint was introduced to get rid of insignificant patterns and rules so that the number of generated patterns and rules can be reduced by E. Winarko and J.F. Roddick[8]. In addition, a unifying view of temporal concepts and data models to distinguish time point-based methods and interval-based methods was proposed by F.

Morchen[9].

Traditional sequential mining approaches[1,2,4] are based on support model. They only work for accurate events. So the uncertainty of the events order is not considered. If this kind of uncertainty is ignored, some frequent patterns might be missed in some application fields. In this paper, the structure which employs chain table is developed to represent the data which contain inaccurate events expediently. And to improve accuracy of computing inaccurate sequence support threshold, precise support is employed to evaluate the significance of a pattern.

The rest of the paper is organized as follows: the section 2 illustrates design and construction of chain table. Section 3 discusses categories and probability computation of inaccurate events. Section 4 describes the algorithm of handling inaccurate events. Section 5 shows the performance analysis. Finally, a conclusion is given in Section 6.

2. Design and construction of chain table   Each event in a sequence is a node in the chain table.

Name and occurred time of event are recorded in the node. Nodes are linked according to time sequence.

Node of inaccurate event is recorded with start time and end time. They are inserted into chain table by start time. And the node with end time of inaccurate event also is inserted, therefore the end position of inaccurate event can be found.

So a chain table is defined as follows: ? It consists of nodes.

? A node in the chain table has two fields: item and link: item records the name and occurred time of the event. link links to the next item in the chain table.

? The nodes are linked in the chain table by time.

The node which contains event (e,ts,te) is the node of inaccurate event, where [ts,te] represents occurring interval of inaccurate event e.

Based on the definition, construction algorithm of the chain table is as follows.

S is a sequence with inaccurate events. L is a pointer.

Algorithm: the chain table construction Input: sequence database with inaccurate events Output: chain table CT Method: 1. Create header node: the link is labeled as ?null?.

2. For each item i?S 3.  while(L!=null) 4.   If (find item i?s position) then 5.    { Create the node of item i.

6.       Item i is inserted.

7.       L points the first item of chain table.

8.         i++; } 9.   Else  L++; 10. end Sequences with inaccurate events are given as follows: a             b      e    c  S1  t1    t3-?    t2     t3    t4    t (a) S1 with an inaccurate event    (b) Chain table of S1  Figure 1. S1 with an inaccurate event and its  chain table    b         c         a     e   f   g S2 t1  t4-?  t2  t6-?  t3   t4   t5  t6  t  (a) S2 with overlapping intervals  a:t1 e:t3-?,t3 b:t2  e:t3 c:t4        (b) Chain table of S2  Figure 2. S2 with overlapping intervals and its  chain table  Obviously, interval [t6-?, t4] is overlapped interval of inaccurate events e and g.

3. Categories and probability computation of inaccurate events  3.1. Categories of inaccurate events   The events which are occurred in intervals have four possibilities? ? The interval of inaccurate event is contained in two certain neighborhood timestamps, then the order of events is certain, the computation is not needful.

? The timestamp of certain event is contained in the interval of inaccurate event, then the uncertainty of the order between events is generated. When intervals of inaccurate events are not overlapping, sequence is segmented several sections and probabilities of possible order are computed.

? When intervals of inaccurate events are overlapping, probabilities of possible order are computed according to probabilistic ordering.

Precise support of generated candidate pattern is computed in the whole database, then compared with predefined minimum support threshold (denoted as s), if the precise support is not less than s, the potential frequent pattern is discovered.

Given an accurate event (ei,ti) and an inaccurate event (ej,tjs,tje),the order between them is uncertain iff ti ?(tjs,tje); Otherwise, it is certain. Sequence S is called a flexible-order sequence, iff at least an inaccurate event (e,ts,te) is contained in sequence S. Otherwise, S is called a fix-order sequence. A symbol ?[ ]? is used in the sequence to delimit uncertain intervals definitely.

Given S=S1. S2?.Sm and P=p1.p2?.pm, where the length of Si equals to the length of pi( P stands for sequential pattern ). The precise support of P in S is defined as  P_sup(P,S)= i i 1 i m  s(P , S ) ? ? ?         (3-1)  The range of precise support is [0,1]. If P_sup(P,S)>0, we call S contains P.

If there are several support values which generated candidate pattern in a sequence, we select the maximal value as the sequence precise support.

MP_sup(P,S)=Max{P_sup(P,S?i), P_sup(P,S?j)}  (3-2)  where 1?i<j?m  3.2. The probability computation of non- overlapped intervals   In figure 1, the sequence S1 has the uncertain interval (t3??, t3), it is a flexible-order sequence.

Chain table of S1 is segmented as (a,t1),[(b,t2), (e, t3??, t3)],(c,t4). It is also represented as c1.c2.c3, where c1=(a,t1), c2=[(b,t2), (e,t3??, t3)], c3=(c,t4). Assume ts= t3?? and te=t3. Because event b occurs in the interval of inaccurate event e, ? becomes a discrete random variable x. P(x) is the probability of possible pattern. d(e,t) is the density function of the inaccurate event. The probability of p =<b,e,c> equals to one of e happened in the interval between b and c.

Table 1. The probability of possible pattern  x <e,b,c> <b,e,c> P(x) t 2  t 3 s  d ( e , t ) * d t? t 3 e  t 2  d (e , t ) * d t?  ?  Given a sequence S, it can be segmented as s1=<(a,t1),(b,t2)>, s2=<(c,t3),(e,t4-?,t4)>, s3=<(d,t5)>, s4=<(f,t6),(g,t7-?,t7)>.

S a  b       c     e  d         f    g t1 t2  t4-?  t3  t4   t5  t7-?  t6   t7  t  Figure 3. Inaccurate sequence of non- overlapped intervals  Given a pattern P=<b,a,e,c,d,g,f>,it can be segmented as P1.P2.P3.P4=<b,a>.<e,c>.<d>. <g,f>, P_sup(P,S)= 0,  b:t1 e:t4-?,t4 c:t2 g:t6-?,t6  a:t3e:t4 f:t5 g:t6       because P_sup(P1,s1) = 0. If the pattern P?=<a,b,e,c,d,g,  f>, P_sup(P,S)= t 3 t 6 t 4 t 7  d ( e , t ) d t d ( g , t ) d t ? ? ? ?  ?? ? ,  because  P_sup(P1 ,s1) = 1.

? Assume two inaccurate events e are contained in S.

S? a  b        c    e  d         f     e  t1 t2  t4-?  t3  t4  t5  t7-?   t6  t7  t Figure 4. Inaccurate sequence with two  inaccurate events e Given a pattern P=<c,e>, S?1=<[(c,t3),(e,t4-?, t4)]>  and S?2=<(c,t3), (e, t7-?, t7)> contain pattern P, the precise support of P in S? is Max{P_sup(P,S?1),  P_sup(P,S?2)}= Max { t 4  t 3  d (e, t )dt? ,  1} =1.

In the fix-order sequence S, the sequence segment of S, ?S, is a pattern. Based on above depiction, P_sup(P,S)=1 if P is contained in ?S. Otherwise, P_sup(P,S)=0. It is identical to the traditional support.

3.3. The probability computation of overlapped intervals   Uncertain instant of inaccurate event occurring can be represented by a certain interval, so temporal relation of inaccurate event occurring can be translated into relation of certain intervals.

Definition (Probabilistic ordering)  Let any two inaccurate events e and g uncertain intervals be ? =[s1,e1] and ? =[s2, e2], Probabilistic  ordering of e and g is PO_R.

i j i j PO _ R . P[ ] P[ i]*P[ j]  ??????< ?? = ? < ? = ?= ?=?    (3-3)  PO_R is used to compute the possibility of ? occurring before ? . In this paper, PO_R is called  assuring threshold, PO_R is a real number in [0,1]. As a rule, the more the value of PO_R is bigger(approaching 1), the more ? occurs before ? ,  and P_sup(P,S)=PO_R.

Definition (assuring threshold of simultaneous relation)  When inaccurate event e with the short interval is  contained in inaccurate event g with the long interval, we call it as simultaneous relation.

Let any two inaccurate events e and g uncertain instants be ? =[s1,e1], ? =[s2,e2]. Assume that? and ? meet simultaneous relation and compute assuring  threshold S_R.

i j i j S _ R P[ ] P[ i]*P[ j]  ??? ??? = ?? = ?? = ?= ?=?     (3-4)  S_R is called assuring threshold, S_R is a real number in [0,1]. As a rule, the more the value of S_R is bigger(approaching 1), the more the possibility of simultaneous relation between? and ? is bigger. And their overlapping uncertain instant ? = ? ? ? =  [s3,e3], where s3=max(s1,s2),e3=min(e1,e2).

Considered chain table of sequence shown in figure  2, the precise support threshold is computed as follow.

Given any two inaccurate events (e,t1) and (g,t2).

Case ? When t1 ? [t4-?,t2], P1=<b,e,c>, P(e) =  t 2  t 4  d ( e , t ) d t ? ? ?  ,there are three possibilities for g.

(1) Given a pattern P=<b,e,c,g,a,f>,P2=<g,a,f>, t2?[t6-?,t3], P(g) = t 3  t 6  d ( g , t ) d t ? ? ?  , then p_sup(P,C) =  P(e)*P(g).

(2) Given a pattern P=<b,e,c,a,g,f>, P2=<a,g,f>, t2 ? [t3,t5], P(g)= t 5  t 3  d (g , t )d t? , then P_sup(P,C)=  P(e)*P(g).

(3) Given a pattern P=<b,e,c,a,f,g>, P2=<a,f,g>, t2 ? [t5,t6],  P(g)= t 6  t 5  d ( g , t ) d t? , then P_sup(P,C) =  P(e)*P(g).

Case ?  When t1 ? [t2,t6-?], P1=<b,c,e>, P(e) = t 6  t 2  d ( e , t ) d t ? ?  ? , there are three possibilities for g.

(1) Given P2=<g,a,f>, t2 ? [t6-?,t3], P(g)= t 3  t 6  d ( g , t ) d t ? ? ?  , then P_sup(P,C)= P(e)* P(g).

(2) Given P2=<a,g,f>, t2?[t3,t5], P(g)= t 5  t 3  d (g , t )d t? ,  then P_sup(P,C)= P(e)* P(g).

(3) Given P2=<a,f,g>, t2?[t5,t6], P(g)= t 6  t 5  d ( g , t ) d t? ,  then P_sup(P,C)= P(e)* P(g).

Case ? When t1? [t6-?,t3], P1=<b,c,e>, there are three possibilities for g.

(1) When t2 ? [ t6-?,t3], P=<b,c,e,g,a,f>, the       probability of e before g is computed according to (3-3), then P_sup(P,C)=PO_Re.g.

(2) When t2?[t3,t5], P2= <a,g,f>, P(e)= t 3  t 6  d ( e , t ) d t ? ? ?  ,  P(g)= t 5  t 3  d (g , t )d t? , then P_sup(P,C) = P(e) * P(g).

(3) When t2?[t5,t6], P2= <a,f,g>, P(e)= t 3 t 6  d ( e , t ) d t ? ? ?  ,  P(g)= t 6 t 5  d ( g , t ) d t? , then P_sup(P,C) = P(e) * P(g).

Case ? When t1?[t3,t4].

(1) Given P=<b,c,g,a,e,f>, t2 ? [t6-?,t3], P(e)=  t 4  t 3  d ( e , t ) d t? , P(g)= t 3  t 6  d ( g , t ) d t ? ? ?  , then P_sup(P,C) =  P(e) * P(g).

(2) Given P=<b,c,a,e,g,f>, t2?[t3,t4], the probability of e before g is computed according to (3-3), then P_sup(P,C)=PO_Re.g.

(3) Given P=<b,c,a,e,g,f>, t2 ? [t4,t5], P(e)=  t 4  t 3  d (e , t )d t? , P(g)= t 5  t 4  d (g , t )d t? , then P_sup(P,C)= P(e) *  P(g).

(4) Given P=<b,c,a,e,f,g>, t2 ? [t5,t6], P(e)=  t 4  t 3  d (e , t )d t? , P(g)= t 6  t 5  d (g , t )d t? , then P_sup(P,C)= P(e) *  P(g).

Case ?  Assume that events e and g meet simultaneous relation. If P=<b,c,e,a,f> or P=<b,c,g,a,f>, ? ?[t6-?, t3], according to (3-4) P_sup(P,C)=S_Re.g.

If P=<b,c,a, e,f> or P=<b,c,a,g,f>, ? ? [t3,t4], according to (3-4) P_sup(P,C)=S_Re.g.

Given a pattern P and a sequence database D, the precise support of P in D is defined as  P_sup(P,D) = 1 i N iP _ su p ( P , S ) N  ? ??      (3-5)  where N=|D | Given a predefined minimum support threshold s, if  P_sup(P,D) ? s, P is a frequent pattern.

4. The sequential pattern mining algorithm with inaccurate events (IE-SPM)   The algorithm is an improvement upon U_Apriori in reference[4]. Inaccurate events with non-overlapped and overlapped intervals are considered.

Algorithm: IE-SPM  Input: a database D with chain table, e and f types events with density functions d(e,t) and d(g,t),and a threshold s Output: pattern whose precise support is not less than s Method: 1.F1 = {frequent 1-patterns}; 2.  If ( e and g is overlapping) 3.    Pre-compute intervals of overlapping; // consider two inaccurate events and overlapping  intervals 4.  Else  Pre-compute intervals; 5. For (k =2;Fk-1=? ;k ++) do 6.  Generate candidate pattern set Ck from Fk-1; 7.  for sequence Si?  D do 8.    for Pj?Ck do 9.    Pj.P_sup+= Max_match (Pj,Si);} 10. Fk = {Pj | Pj?Ck ?Pj.P_sup/ |D| ?s}; 11. Frequent pattern set= k  k F? ;  12. end When intervals are not overlapping, we represent the  sequence the same as reference[4]. When intervals are overlapping, we add [s_j, e_j] to represent them where s_j is the index of the first frequent event in overlapped intervals and e_j is index of overlapped intervals position. For each sequence S, an overlapped intervals list o_ intervals is used to represent intervals of overlapping. After pre-computing, a sequence is represented as a triplet [sid, S,o_intervals].

5. Performance analysis  We analyze the performance of algorithm by an exam- ple.

a           b     e     c S1    t1   t3-?   t2    t3     t4   t  a             e    b    c S3  t1     t2-?   t2    t3   t4  t  a      e    b     c S4     t1     t2    t3    t4  Figure 5. A mining dataset A mining dataset with 3 sequences is shown in       Figure 5. Let the minimum support count be 3.

Considering a sequential pattern P = <e, b, c>, if we ignore the uncertainty, only S3 and S4 contain P. The support count of P is 2, which is less than 3. So P is infrequent pattern and will not be in the mining result.

However, besides S3 and S4, S1 may also have some probabilities to contain P. If these probabilities are considered and the number of S1 is two, P could be frequent. Obviously, if we ignore the uncertainty in sequential pattern mining, the potential frequent pattern may be missed. Especially, when the number of inaccurate sequences contained in the database is large, then large numbers of potential interesting patterns may be missed. Therefore, by algorithm IE-SPM, the accuracy of discovering frequent patterns can be improved.

But we can discover algorithm IE-SPM to be much more complex than traditional sequential mining algorithm. So the running time may be increased.

Especially the more the predefined minimum support is lower, the more the potential patterns are handled, so the running time increases. Owing to considering probabilities of inaccurate events order, some interesting patterns can not be missed. So the computation of discovering frequent patterns is more accurate, however, at the cost of increasing the running time.

6. Conclusions   In this paper, by employing storage structure of chain table, sequence which contains inaccurate events can be stored expediently. Compared with previous method of sequential pattern mining with uncertainty, two different inaccurate events are considered. The precise support is introduced to evaluate the probability of inaccurate events order. The probabilistic ordering is employed to compute sequence precise support of two overlapped intervals, and simultaneous relation between two inaccurate events is considered to evaluate possible simultaneous events. By an improved  algorithm IE-SPM, the potential frequent pattern can be discovered, so some interesting patterns can not be missed. Performance analysis shows that computation of discovering frequent patterns is more accurate by considering uncertainty. But the running time is increased.

7. References  [1] R. Agrawal and R. Srikant, ?Mining sequential patterns?,  In Proc.11thICDE, 1995, pp.3-14.

[2] H. Mannila, H. Toivonen, and A. I. Verkamo,  ?Discovery of frequent episodes in event sequences?,  Data Mining and Knowledge Discovery, 1997, pp. 259 -289.

[3] J. Yang, W. Wang, P. S. Yu, and J. Han, ?Mining long  sequential patterns in a noisy environment?, In SIGMOD  Conference, 2002, pp.406-417.

[4] R.Srikant and R.Agrawal, ?Mining sequential patterns:  Generalizations and performance improvements?, In Proc.

5thEDBT, 1996, pp. 3-17.

[5] Xingzhi Sun, Maria E.Orlowska, and Xue Li,  ?Introducing Uncertainty into Pattern Discovery in Temporal  Event Sequences?, Proceedings of the Third IEEE   2003, pp. 299-306.

[6] P. Papaterou, G. Kollios, S. Sclaroff, and D. Gunopoulos,  ?Discovering frequent arrangements of temporal intervals?,  In Proc. ICDM, 2005,pp.354-361.

[7] E. Winarko and J.F. Roddick, ?Discovering Richer  Temporal Association Rules from Interval-based Data?, Proc.

and Knowledge Discovery, Copenhagen, Denmark, 2005,  pp.315-325.

[8] E. Winarko and J. F. Roddick, ?Armada - an algorithm  for discovering richer relative temporal association rules  from interval-based data?, Data & Knowledge Engineering,  Amsterdam, Netherlands, 2007, pp. 76-90.

[9] F. Morchen, ?Unsupervised pattern mining from  symbolic temporal data?, ACM SIGKDD Explorations  Newsletter, ACM, New York, USA, 2007, pp.41-55.

