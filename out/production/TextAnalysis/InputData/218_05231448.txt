Mining Global Exceptional Rules in Multi-database

ABSTRACT:  In multi-database there are four category patterns which refer to frequent itemsets or association rules. Exception rules have been defined as rules with low support and high confidence. Exceptional patterns reflect the individuality of branches and provide valuable knowledge about database patterns, so it is very important to make special policies for these branches. For multi-database mining, gaining global exceptional patterns from local patterns is the necessary process. In this paper, we mainly discuss the exceptional association rules mining. When mining exceptional rules in multi-database may be cause knowledge conflicts, we resolved these conflicts by correlation and designed an algorithm MGER-MDB. Finally uses the example to explain this algorithm.

KEYWORDS: multi-database mining; exception rules; pattern synthesize

I.  INTRODUCTION Database mining has emerged as a major application  area for an efficient discovery of the previously unknown and potentially useful patterns in large databases. Mining association rules in database has received much attention recently. Association rule is an implication if the form X?Y, where X and Y are database itemsets. Negative association rule is an implication of the form X??Y, ?X?Y, ?X??Y, where X and Y are database itemsets, ?X, ?Y are negations of database items. Two measures have been developed to evaluate association rules, which are support and confidence.

Association rules with high support and confidence are referred to as strong rules. Exception rules have been defined as rules with low interest and high confidence.

With the development of the communication network technology and distributed database systems, multi-database mining plays a major role in the process of extracting knowledge from different data sources. Multi-database mining has been recently recognized as an important research topic in the KDD community.

Multi-database mining is different from mono-database mining because of their different data structure. So we can not mine multi-database using the technique in mono- database mining. The first process of multi-database mining is classified the databases. If we integrate all the transaction databases into a single one, at last perhaps we will not find rules because integrating all the databases involves in some irrelevant information. The second process is mining local patterns by the techniques of mono-databases; in the end, all  the local patterns will be analyzed and evaluated in order to find out the valuable information.

Patterns in multi-database can be divided into four categories.

(1) Local patterns. Local patterns are mined from each  branch. Local patterns are frequent itemsets or association rules. Their function is to provide local databases? data features to the head company to make decision.

(2)High-voting patterns. This kind of patterns is supported by most subsidiary companies. They reflect the common features among subsidiary companies. According to these patterns; the head company can make decisions for the common profits of branched.

(3)Exceptional patterns. These patterns are highly supported by only a few branches; that is to say, these patterns have very high support in these branches and zero support in other branches. They reflect the individuality of branches, And according to these patterns, the head company can adjust measures tolocal conditions and make special policies for these branches.

(4)Suggesting patterns. These patterns have fewer votes than the minimal vote but are very close to minimal vote. Sometimes it is useful for decision making.

In [1], authors proposed a model of identifying global exceptional patterns in multi-database mining, but they can not consider the knowledge conflicts when mining exception positive and negative association rules. So in this paper, we mainly discuss mining global exception rules and resolve the knowledge conflicts   within   databases by correlation.

The main contributions of this paper are as follows: 1. We proposed synthesis correlation to resolve knowledge  conflicts.

2. An algorithm MGER_MDB is proposed to discover  global exceptional rules in multi-database.

The rest of this paper is organized as follows. Section 2  describes the related work of multi-database mining. A model for identifying exceptional patterns is proposed in Section 3. Section 4 designs an algorithm for identifying global patterns. Section 5 is experimental and analyze and Section 6 is conclusions and future work.

2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Application  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Applications  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Applications  DOI 10.1109/IFITA.2009.445   2009 International Forum on Information Technology and Applications  DOI 10.1109/IFITA.2009.445

II.  RELATED WORK [2] proposed a means of searching for interesting  knowledge in multiple databases according to a user query.

Mining only works on the selected data. Wu et al. [3] discuss the classification of databases, which is a prerequirement for multi-database mining. Liu et al. in their paper [4] have attacked the problem of identifying databases relevant to a particular data-mining task in multiple databases. They have proposed a measure of relevance and have given an algorithm for identifying relevant databases. Blanchard et al.

[5] have proposed a rule focusing methodology for the visual post processing of association rules. This approach relies on rule interestingness measures, on a visual representation and on interactive navigation among the rules. Zhong et al. [6] have proposed a way of mining peculiarity patterns from multiple statistical and transaction databases. Wu and Zhang [7] in their paper have described the process of synthesizing high-frequency rules from different data sources based on the data source weights. There have been a few research papers considering exception rules in databases. In [8] the deviation analysis has been employed to distinct interesting exceptions.

In [9] the information theory measures have been adopted and the interest of the exception rules has been evaluated basing on the according common sense rule..



III.  MINING EXCEPTIONAL RULES IN MULTI-DATABASE  A.  Resolve conflicts by correlation In business sense, different branches have different  power to vote for global decision-making. The branches which have high volume of business will have and should have a greater say in determining global policies based on global patterns. So in [10] the author made a fair assumption that a large number of transactions imply high volume of business, for example, if there are two databases D1 and D2 ?if D2 has twice the number of transactions of D1, then effective vote for D2 will be two as compared to one of D1.

This approach is in tune with the practice followed in the real world applications.

Let D1, D2?Dm be m different databases from one class of the branches of a large company, Num (Di) is the number of transaction of Di, the weight of Di as follows:   ( )  ( ) I  i D m  i i  N u m D  N u m D ?  =  = ?   Knowledge conflicts   within   databases     may occur  when mining both the positive and negative exceptional association rules simultaneously, For example: if X?Y, X??Y, ?X?Y , ?X??Y in different databases respectively, here ,we do not consider the form Y? X, ?Y? X, Y??X, ?Y??X. The rules of the form X?Y, ?X??Y and?X?Y, ?X??Y are mutually contradictory. We can select valid rules by synthesis correlation of frequent itemsets X, Y in each database after synthesizing.  We define synthesis correlation is corr?(X, Y)  ( , ) ( )  ( ) ( )X Y supp XY  corr supp X supp Y  ? ?  ? ?  = (1)  supp? (X) =?1?supp1 (X) +?2?supp2 (X) +?+?m ? suppm (X)  Where supp ?(XY), supp ?(X), supp ?(Y) are the support of frequent itemsets XY, X, Y in each database after synthesized.

(1) If corr?(X, Y)>1, we mine rules of the forms X?Y and  ?X??Y.

(2) If corr?(X, Y) <1, we mine rules of the forms X??Y  and ?X?Y.

(3) If corr? (X, Y) =1, there are no rules generated.

B. Mining exceptional rules After resolved conflicts, we can mine exceptional rules in  multi-database. Given n databases D1, D2?Dn, they represent the databases from n branches of a large company.

Let LR1, LR2?.LRn be the corresponding local rules which are mined from every database; and minsuppi   be the user specified minimal support in the database Di (i=1, 2?.n) For each rule R, its support in Di is denoted by suppi(R). We define the average vote of local patterns in the databases as follows.

( )   ( )  ( )  Num GR  i i  Num R AverVotes  Num GR == ?   Where GR means the global rules, it is the set of all rules  from each database and removed conflicts, which is GR={LR1?LR2??.?LRn} and Num (GR) is the number of rules in GR, We regard the AverVotes as a boundary, if a rule?s vote  that is  the number of the branches that vote for the rule, is less than the  AverVotes then it will be considered as a candidate exceptional rule, otherwise as a high-voting rule. We use CER to denote the set of candidate exceptional rules and define the global support of a rule as follows.

( )  ( )  1,  ( ) 1( )  i  Num R i i  i i i  G Num R  i i R D  Supp R minsup minsupSupp R  ?  ?  =  = ?  ? ?=  ?  ? (2)  In [1] author assume all the databases play the same role in helping the head company to make decisions, so they have the same weight. But in real application, it is not reasonable, so we assign the weights for each database.

Where, suppG(R) means the global support of a rule, Num(R) is the number of databases which support the rule, ?i the weight of database Di. We set the minimal global support threshold minsuppG(R), if the SuppG(R) cannot meet the threshold and we remove it. The greater of SuppG(R), the more significant the rule will be.

Because different databases have different data information, we cannot simply say that 0.6 is greater than 0.3 in two databases whose minimal support is 0.5 and 0.1 respectively; this is because the two databases? minimal supports are different. In [1] author use the distance between a rule?s support and the corresponding database?s minimal support as a measure.

( )( )  i i  i  Supp R m insupS R m insup  ?= ?  The higher the support of a rule in a subsidiary company, the more interesting the rule will be.



IV. ALGORITHM DESIGN Algorithm: MGER-MDB  Input: LRi: set of local rules; ?i: the weight of Di minsupi: minimal support threshold inDi(i=1,2,?.n); minsuppG(R): minimal global support threshold.

Output: ER: the set of exceptional rules  (1)GR ?{LR1?LR2???LRn}, CER=? (2)If (there are contradictory rules in GR) then { calculate synthesis correlation of contradictory rules by equation (1) If corr?(X, Y) >1 then { GR?GR?{?X?Y, X??Y} ;} If corr?(X, Y) <1then { GR?GR?{X?Y, ?X??Y} ;}} (3)For each rule R in GR do count R?s votes, Num (R)  ( )  ( )  ( )  Num GR  i i  Num R AverVotes  Num GR =? ?   If (Num (R)< AverVotes)  CER=CER?R   (4) For each candidate exceptional rule R in CER do ( )  ( )  1,  ( ) 1( )  i  Num R i i  i i i  G Num R  i i R D  Supp R minsup minsupSupp R  ?  ?  =  = ?  ? ??  ?  ?   If SuppG(R)< minsuppG(R) ER=CER?R (5) Output ER Step (1) generates the set of association rules from each  database. Step (2) check the knowledge conflict and remove the conflict rules. Step (3) generates the candidate exceptional rules. Step (4) is to calculate the all candidate exceptional rule?s SuppG(R) and get the exceptional rules.

Step (5) outputs all the exceptional rules

V. EXPERIMENTS AND ANALYZE In order to demonstrate the method? correctness, we  given an example:  Table1 are  the databases and local association rules, from it we can get GR={A?B, B??C, C??D, E?F, A?D, C?D, A??B, B?E}, A?B and A??B, C??D and C?D is inconsistent. So we must select the valid rules by correlation. The weight of databases is 0.25, 0.15, 0.1, 0.4, and 0.1, respectively. we get the corr?(A,B)>1,corr?(C,D)<1 by Equ(1),so A?B and C??D are valid rules. After resolved the knowledge conflict, the GR={A?B, B??C, C??D, E?F, A?D, B?E}, AverVotes=14/6=2.33.After pruning by AverVotes, CER={ C??D, E?F, B?E },The suppG(R) value of each rule in CER are calculate by Equ(2)shown as follows: SuppG(C??D)=0.279,SuppG(E?F)=0.2978 SuppG(B?E)=0.5.If we set the minsuppG(R) =0.25, so the exception association rules are C??D, E?F, B?E.

TABLE1.THE DATABASES AND THE LOCAL ASSOCIATION RULES   database Num(Di) minsuppi  rule suppL suppR supp  D1 0.25 0.4  A?B 0.6 0.8 0.6 B??C 0.8 0.3 0.4 C??D 0.7 0.3 0.6 E?F 0.5 0.6 0.5  D2 0.15 0.25 A?B 0.5 0.4 0.3  B??C 0.4 0.5 0.25 A?D 0.5 0.6 0.4  D3 0.1 0.3 C??D 0.7 0.6 0.6 A?B 0.4 0.5 0.4  B??C 0.5 0.3 0.3  D4 0.4 0.3 C?D 0.6 0.8 0.4 A?D 0.5 0.8 0.5  A??B 0.5 0.4 0.3  D5 0.1 0.2 E?F 0.8 0.7 0.7 A?D 0.5 0.6 0.5 B?E 0.6 0.8 0.6

VI.  CONCLUSIONS AND FUTURE WORK Exceptional patterns reflect the individuality of branches,  it is very important to make special policies for these branches when mining the positive and negative exceptional rules simultaneously, there are knowledge conflicts will be caused, we resolves these conflicts and mined the exceptional rules form multi-database. How to reduce the number of the association rules is the future work.

