A Robust Image Watermarking Algorithm Based on

Abstract-It is more likely to prevent the watermark from .JPEG-compression attack, when it is emhedded into the low- frequency coefficients of DWT. However, embedding the watermark with the same intensity into them may distort the watermarked image to a large extent. To solve this problem, a novel robust image-watermark algorithm is proposed with the characteristics of selective embedding intensity based on the non- uniform partition. Meanwhile, as a balance for filtering attacks, the watermark bits arc also embedded into the high-frequency coefficients which have a big magnitude. Besides, in order to increase the anti-cropping function and the security of the algorithm, Arnold Scrambling Algorithm is applied before the watermark is embedded. The results of the experiments have showed that this algorithm is robust against noising attack, filtering attack and cropping attack, especially the JPEG- compression attack and no obvious distortion appeared in the watermarked image.



II. THE CALCULATION OF THE EMBEDDED INTENSITY BASED ON THE NON-UNIFORM  RECTANGULAR PARTITION OF IMAGE  Paper [4] proposed the algorithm of the non-uniform rectangular partition of image according to the pixel gray values. When the initial partition, the bivariate polynomial and the error control value are all determined, this adaptive partition algorithm can be applied to do the non-uniform rectangular partition of image. As an example, we choose =10,7,4 and 1, and the following figures show the partition results and the number of rectangles within each 8*8 sub-area of the image.

Figure 1. Partition results and the number of rectangles within each 8*8 sub- area of the image when & = 10  Figure 2. Part ition results and the number of rectangl es within each 8*8 sub- area of the image when =7  Figure 3. Partition results and the number of rectangles within each 8*8 sub- area of the image when =4   Figure 4. Partition results and the number of rectangles within each 8*8 sub- area of the image when =1  The four groups of figures show that: if the error is too big, the texture characteristics of image cannot be made out obviously; if it is too small, the number of rectangles in each 8*8 sub-area becomes almost 16. After many experiments, the texture characteristics of image for general images can be described in a good way, when the error is between 4 and 7.

The smallest partition size is 2*2=4(pixels), so the maximum number of rectangles in each 8*8 sub-area is 8*8/4=16, and the minimum number is one.

Here the Normalized Correlation Coefficient (NC) is used to scale the similarity between the original watermark and extracted watermark. The definition ofNC is given by  (I)  Where W(x,y) is the original watermark and W' (x,y) is the extracted watermark.

In order to deduce the embedded intensity formula according to the rectangle number within each sub-area, the analysis is conducted between the watermarked image and extracted watermark after applying the uniform-intensity embedding in the coefficients of LL3 after three level wavelet decomposition as in Figure 5. The host image is a 256*256 standard gray image of Lena. The watermark is a 32*32 binary image.

u., HLj HL2  LH) HHj HL1  Uh HH2  LH1 HH1  Figure 5. Third level wavelet decomposition    TABLE II. W ATERMARKED IMAGES AND EXTRAC TED WAT ERMARKS AFTER A PPLYING TilE UNIFORM- INTENSITY EMBEDDING

IV. EXPERIMENTAL RESULTS  In order to test the feasibility and effect of the proposed algorithm, many experiments have been carried out. Here are the experimental results for the value of fi=O.OI. The bivariate polynomial and the error control value G =4. The host image is a standard 512*512 gray image of Lena and the watermark is a 32*32 binary image. The PSNR of watermarked image is about 38dB and the NC of the recovered watermark is 1 without attacking. Table III gives the performance comparison between this scheme and paper[5] after some typical attacks. As we can see, all of recovered watermarks with better BER (Bit Error  b. Let LLobe the original image I, LLI be the low-frequency- coefficient Matrix of the first level of wavelet decomposition of the original image. Find the value ofp by the formula M/L=2P? Treat the LLp as the initial partition and specify the value of control error G , do the non-uniform rectangular part itioning for LLp, calculate the number of partitioned rectangles in each 2P *2P sub-area and store it into the array of RNO, follow the formula 2 to find out each intensity which is stored in the array Intensity[iJ]'  c. Embed the scrambled watermark bits into each coefficient of Ll.; If the watermark bit is one, then LLp [iJ] = LLp [iJ]*(1+ Intensityji.jj), otherwise LLp [iJ] = LLp [iJ]*(I- Intensityjijl). Here iJ ~ L.

d. Let T=0.015*maximum coefficient in LLn, find the first L*L coefficients in HLj,LHI,HH], ... , HLp,LHp,HHp. If the number is not enough, adjust T=0.9T and try again until the requirement is met. All satisfied coefficients are stored in the set of {HFN}. Embed the scrambled watermark bits into each satisfied coefficient in the set of {HFN} by the following formula: If the watermark bit is one, then HFN[s] = HFN [s]*( 1+  0.6), otherwise HFN [s] = HFN [s]*(1-0.6). s=I ,2, ... L*L.

e. Do the inverse of DWT transform and forms the  watermarked image 1'.

The extraction algorithm of watermark is described as follows: a. Do the DWT for both the original image and watermarked  image. LLpand LLp' are low-frequency coefficients of the p-th level of wavelet decomposition of them.

b. Compare each of LLp[iJ] and LLp,[iJ], if the difference between them is greater than 0, then the corresponding extracted watermark bit should be I, otherwise it is o. This process can extract all the scrambled-watermark bits into the array W/(i,j).

c. Find the first L*L coefficients in HL],LH1,HH ],... , HLp, LHp, HHp and HLI ',LHj',HH j', ... , HLp',LHp',HHp' which are greater than the threshold value of T. Store them into the sets of {HFN} and {HFN'}.

d. Compare each of {HFN} and {HFN'}, if the difference between them is greater than 0, then the corresponding extracted watermark bit should be 1, otherwise it is O. This process can extract all the scrambled-watermark bits into the array W2(i,j).

e. The final extracted scrambled-watermark bits are in Wand equal to 0.5* Wli,j) +0.5 *W2(i,j)  f. Use the same key k and the Arnold method to de-scramble the pixel-location of W(i,j) and thus recovering the watermark as W' .

omomOlJl'i Embedding  Intensity  Watermarl<ed  Ima;e  PSNR=30dB PSNR=36 dB PSNR=45 dB  Recovered  WaterJll3)k after MUST MUST ..MUSt JPE G-compresmon ~~A ~~A ~~}i  attack( Q=40) NC=l NC=l NC=O.9532  Table II shows that the PSNR of watermarked image is 45dB when the uniform intensity is 0.01 , but the anti-1PEG- compression function becomes worse with only 0.9532 ofNC in the extracted watermark. It is in opposite way while the uniform intensity is 0.06.

In fact, this situation can be improved by the configuration of the different embedding intensity, according to the texture distribution of the image. Firstly , the host image (M*N) is non- uniformly partitioned, the control error G is between 4 and 7, then the number of partitioned rectangles within each 8*8 sub- area, according to the partition grids , is obtained. The numbers of these rectangles are stored in the array RNO[iJ], the embedded intensity of each sub-area is calculated by the following equation:  Intensity[iJ] = 0.01 + RNO[iJ]*fi/16 (2)  where i~ (M/8), j ~ (N/8), Intensity[iJ] is the watermark embedding intensity array for each 8*8 sub-area of image.

With the value of each intensity, the embedding and extraction algorithm of watermark are derived in the following section.

Here the value of {3 makes the intensity more flexible with a range generally between 0.01 and 0.04.

On the other hand , as a compensation for some filtering attacks, we also embed the watermark bits into the high- frequency coefficients of DWT with a big magnitude comparing with the maximum value of the low-frequency coefficients. After many experiments, we concluded that if the we set the threshold value as T=a*max{LLp}, a is between 0.01 and 0.04, and among the high-frequency coefficients HL],LH],HH], ... , HLp,LHp,HHp, we can find first L*L (size of the watermark) satisfied valuesf>T) in which we embed the watermark bits. The embedded intensity we used is a uniform one between 0.5 and 1 for general image. Here p is the wavelet decomposition level.



III. THE EMBEDDING AND EXTRACTION ALGORITHM OF WATERMARK  Suppose the host image is 1 with size of M*M and W is the watermark whose size is L*L(where M/L=2P) . The embedding algorithm ofwatermark is described as follows.

a. Specify the key k, applying the arnold scrambling algorithm to scramble the pixel-locations of the watermark.

Rate). The NC values of extracted watermarks after these attacks are also given in table III.

TABLE III. PERFORMANCE COMPARISON BETWEEN THIS SCHEME AND PAPER [5] AFTER SOME TYPICAL K ITACKS.

Att ack T his Pap er Recovered T his Pap er Pap er 151 Ty pe (NC) Wate rmark (HER) (HER)  ? F~1" 1/4  0.9646 1'1 ~ .', I  0.0566 0.05664 Cropping ~'-i...L. f1 / 1L "  .,. '~T" "~'" 5% I., li- .

Ga ussian 0.8897 ':'1 .9 r  0.1748 o17773 Noise :~~}J-~~  t _..I. "i" I ?  1% Salt & MUST Pepper 0.9835  ~f-fA 00254 0.16895  noise  Median MUST Filtering 0.9987  ~NA 0.0020 0.15234  (3*3)  Ga ussian MUST Filter ing 1.0000  ~f-fA 0 0.035 16  (3*3)  0.9974 MUST  0.0039 0.00586Sha rpening $'-'I-!- ??rooT-po,  0.9779 MUst  0.0332 0.05273Blurring  ~MA  From the table above, we can see the effect of the proposed algorithm which controls the embedding intensities according to texture characteristic based on non-uniform rectangular partition. In general, the PSNRs of the watermarked images are above 38dB and it is robust against nosing attack, filtering attack and cropping attack. The attack types are similar to those in paper [5] but the effect is better. In order to test the ability of anti-JPEG-compression attack of this algorithm, another kind of experiment (jJ is also 0.01) is done and the results are shown in table IV. Table IV shows the performance between this algorithm and paper [5] after JPEG-compression attack with different QF. The BERs of the recovered watermarks are smaller and generally below 0.02 and the corresponding NC values are always greater than 0.98 for QF ~25. This proves that this algorithm is very robust against JPEG-compression attack. The whole anti-attack performance of this algorithm is effective without obvious distortion in the watermarked image.

The value of fJ can be chosen according to the real situation by user thus enhancing the feasibility of this algorithm.

TABLE IV. PERFORMANCE COMPARISON BETWEEN THIS SCHEME AND PAPER [5] AFTER JPEG-COMPRESSION ATTACK  JPEG Thi s Paper Recovered Thi s Paper Paperl51 Q F (NC) Watermark (HER) (HER)  90 1.0000 MUST  0 0.0019 If:ilA  70 1.0000 MUST  0 0.01758 ~f-fA  50 0.998 1 MUST  0.0029 0.04492 ~f-tA  30 0.99 11 MUST  0.0137 0.12012 ~fij1\  25 0.9917 MUST  0.0127 0.16113 ~f-fA  15 0.9696 "Mtj0T  0.0469 No operation "~Ff/~ !'.',S'r"H"I "  10 0.9436 11-:" r: 0.0859 No operation ~ f~;;:

V. CONCLUSION  Image can be partitioned into different sub-rectangles with different texture characteristics by the algorithm of adaptive non-uniform rectangular partition. This paper proposes a new non-uniform intensity embedding method according to the number of partitioned rectangles in each sub-area after the above partition is performed. The embedding position is the low-frequency coefficients of DWT thus improving the anti- JPEG-compression attack function of the watermarking. The watermark bits are also uniformly embedded into the high- frequency coefficients with a big magnitude comparing with the maximum value of low-frequency coefficient thus further improving the anti-filtering function. After the test of some general attacks, the experimental results prove that the proposed watermarking algorithm is feasible and effective, the whole anti-attack function is satisfactory and the anti-JPEG- compression function is strong.

