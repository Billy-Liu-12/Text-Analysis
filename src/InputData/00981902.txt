Extraction of Primitive Motion and Discovery of Association Rules  from Motion Data

Abstract In past several years, human motion data is practi-  cally used in some domains such as SFX movies, CGs and so on. Motion data is captured by motion cap- ture system which captures the position of sensors on body joints, so we can get motion data as 3-0 time series data. Since, motion data is multi-stream data of time series for 17 body parts, the amount of data is huge. Furthermore, motion data is expensive: cre- ators must pay much time and labor to get motion data. Motion database can help those creators to pro- duce motion data with less cost. The database, how- ever, requires content-based retrieval method because it is dificult to identify the motion by using keyword approach. Consequently we will introduce association rules which represent dependency between body parts.

Association rules represent the motion of body parts and can be used as visual tags. For example, associ- ation rule discovered from motion data about walking is "when right arm is up, left hand and left knee are down".

In this paper, we will introduce Q method to discover dependency between body parts as association rules.

Association rules consist of symbols uniquely represent basic patterns. We call basic patterns as primitive mo- tions. Primitive motions are extracted from motion data by using segmentation and clustering processes.

Finally, we will discuss some experiments to discover association rules from multi-stream of motion data.

1 Introduction In past several years, time series data became im-  portant in various applications. It includes a sequence of real numbers which represent values at  time points, such as price of stocks, weather patterns, sales inde- cators. I t  is basically a series of one dimensional data, and thus the existingt works until now have focused on indexing or seraching onedimensional sequences of data [Z] .

Human However, we treat human motion data.

motion data is a three dimensional data. Thus, the efficient retreival for voluminous and complex infor- mation, which is the intrinsic characteristic of human motion data, is getting increasingly important.

On the other hand, human motion has the following features:  body parts Motion is the combination of postures. For exam- ple, we swing both arms to keep walking straight.

In this experiment, stepping left foot forward causes swing of right arm. We must pre-define the set of postures so as to represent the motions data. . contents in the time flow There is tendency that certain movement likely to occurs after another movement. For example, once we raise our hands, we probably put our hands down in certain interval of time. But it is difficult to detect borders in consecutive move- ments.

Human motion data has the above dependencies, then it should be treated as multi-stream [.SI. Find- ing structure in multi-stream of data is an important problem. That is, multi-stream includes unexpectedly frequent or infrequent co-occurrences among different streams. This means that an event on one stream is related to other events on other streams which seem to be independent from the former event. We call this dependency motion association rule.

However, it is an expensive task to discover mo- tion association rules because of the huge amount of the motion data. Furthermore, the number of streams of the motion data is large. In order to find motion association rules and reduce the cost of the task, we convert the high dimension multi-stream motion into sequences of symbols of lower dimension. Each sym- bol represents a basic content and motion data that can be expressed as the set of the primitive motions.

IEEE International Worksop on Robot and Human Interactive Communication 0-7803-7222-0/01/$10.0002001 IEEE  - 200 -  mailto:uehara}@ai.cs.kobe-u.ac.jp   It is necessary to clarify how we recognize motion to define primitive motions. However, there are some problems to find it. To deal with these problems, it is necessary to consider the following topics:  1. Ambiguity of finding the borders between primi- tive motions: the definition of borders for move- ment is unclear. It is necessary to define borders in consecutive movement.

2. Reconstructivity of motion by using primitive mo- tions: every motion is represented as the combi- nation of primitive motion.? For example, ?taking 2 steps? and ?taking 20 steps? is composed by the same motion ?stepping?. This means ?stepping? is the construction of primitive motions such as ?moving left foot forward? and ?moving right foot forward?.

In order to solve these problems, we will introduce the segmentation method. Segmenting means produc- ing a piecewise approximation of the data (i.e. piece- wise polynomial, piecewise splines etc.). The tech- nique for the segmentation of human motion data have received considerable attention if these patterns are planar 141. The goal of our research is to simplify the general shape of the motion data with a few perceptu- ally significant breakpoints. Generated segments will have semantics summarizations of human motion.

2 Human motion data as multi-stream  Qbwsbm(md 5:nght-e 12: nght eitoa 1: ?ppr tor- I: I& mkh 1 3 : l & R e l h 2: nSht hip ):rkhtcdubone ~.l:neht&at 9: IrR Yp 9:imrouub- 15.1.u-n 4 right knee 10: tight dodder  15: m k 5 le* *nee 11: I& &adder l ?  brad  Figure 1: Body parts used for the experiment  The motion captured data have various information of the body parts. This means that captured motion data can be represented by the 3 dimensional time series stream, representing positions of major body joints. Figure 1 shows the body parts used in motion capture system. We can get data for the following body parts: lower torso, upper torso, the root of neck,  head, roots of collar bones, shoulders, elbows, wrists, hips, knees and ankles. Moreover, body parts have the tree structure as shown in Figure 1.We set the sampling rate to 120 (timeslsec).

To get time series of 3-D motion data, we use an optical motion capture system. This system consists of six infra-red cameras, 18 infra-red ray reflectors, and a data processor. The procedure to get time se- ries of motion data is as follows: The act,or puts 18 markers on the selected body joints and performs an action in the field of the installed cameras as shown Figure 2. The recorded actions are processed in order to calculate the SD locations of the reflecectors.

-j%!TP=STP=? -? -y . -  Figure 2: The motion capture system  Figure 3 shows an example of the motion data which represents ?after one finished raising one?s right hand, one starts lowering the left hand?.

-5- ight .Rabing Lbe ?ght hand? ?(aiaingthe ti&  1- IAuW i Position of the right h q d  Tme HiQht ~ ?barering the ien hand? i ??loUeriog the Len hand?  pw Position of the w% le& hand Time Figure 3: An example of correlation in multi-stream of human motion  The example shows that the motion data has fea-  unfixed temporal interval between events on each stream: Consistent contents on each stream do not always occur in fixed temporal interval. For instance, ?raising the right hand? and ?lowering the left hand? occur twice in each stream, how- ever, temporal interval of occurrences between  tures as multi-stream, such as:  -201 -    ?raising the right hand? and ?lowering the left hand? are different (T1 # T2).

To define the borders, the huge amount of the mo- tion data, and the personal characteristics of the actor should be considered.

3 Content-based automatic symboliza- tion by using curve simplification  Generally, the human motion consists of 3 states: occurrence, transition and termination. Occurrence represents a change of speed from zero to a posi- tive value, transition represents increase or decrease of the speed .and termination represents a change of the speed from a positive value to zero. Thus, each change in the speed of a body part can be considered as a breakpoint. We will divide motion data into segments at  those breakpoints where velocity changes. Those detected breakpoints are candidates for segmentation.

For this reason, the algorithm calculates the vari- ance between all the candidate breakpoints. However the variation of the curves for motion data between these breakpoints is small and include noise made by unconscious movement which is independent from oc- currence of the changes of contents. The unconscious movement is mainly caused by the vibration of the body parts. Noisy breakpoints generate meaningless segments, such as a too short time and tiny move- ments. Such segments need to be reduced, because they include no significant content of motion. Thus, we need to remove these breakpoints by evaluating time scale and displacement of positions.

We employ Minimal Distance Percentage Principle ( M D P P )  [6]. MDPP is an intuitive smoothing process and evaluate time scale and displacement of break- points. This algorithm can remove breakpoints such as too short time and tiny movement. As a result, segments which generated by remaining breakpoints is meaningful since the interval between twice of them is larger or there is an important movement. MDPP is defined as follws: Given a sequence of breakpoints (t1,zi) , ( tM,zM),  a minimal time T and a mini- mal ratio of amplitude P, if  the breakpoints (ti,zi) and (ti+l,zi+l) will be re moved. where z,,, is the maximum position and zmin is the minimum position.

Figure 4 shows how MDPP works. We set param- eters T = 0.5 and P = 0.5. Black and white circles represent breakpoints detected by the change of speed.

Time  Figure 4: Discrement of breakpoints b y  using MDPP  MDPP is calculated using the above formula and re- moves each two breakpoints under the threshold, in this case T = 0.5 and P = 0.5. Thus, white circles are removed and black circles remain as proper break- points.

MDPP is executed in x, y, and z-axis respectively, that is, MDPP evaluates breakpoints of each axis as one dimension. We have a 3-D data, then we should calculate a spatial distance between breakpoints. Fig- ure 5 shows the motion data in the space.

After removing the noisy breakpoints of each axis by using MDPP, the breakpoints of each axis are in- tegrated in 3-D space. Figure 5 represents the break- points detected by our algorithm. One of the original candidate (?L? in Figure 5 )  was removed because the change of contents does not occur at  the candidate breakpoint.

z  Figure 5: Discernment of breakpoints b y  spatial rela- tionship  The algorithm works as follows: let us consider the sequence of three candidate breakpoints. First, the distance from the first breakpoint (?F?) to the last breakpoint (?L?) is calculated, then the longest dis- tance between the first breakpoint and the last break- point is located. If the most distant point from both ?F? and ?L? is not the midpoint ?M?, it means the midpoint is not a breakpoint. Thus, the midpoint is removed from the candidate set. Finally, we can ob-  - 202 -    tain black circles in Fig 5 as a result.

4 DTW as an evaluation measure for motion data  Human voice has a finite number of phonemes, but human motion does not have pre-defined patterns and the number of primitive motions is unknown. Thus, we employ a simple and powerful unsupervised learn- ing algorithm, Nearest Neighbor (NN) algorithm [l] for clustering primitive motions. It can be represented by the following rules: classify an unknown pattern and choose the class of the nearest cluster by mea- sureing the distance.

Our data is a time series data of human motion which has a sequence of arbitrary length. So we must evaluate the similarity between sequences of different length in time series. To align the time series,we em- ploy the ?Dynamic Time Warping? method (DTW) (21 which was developed in speech recognition domain.

When we applied the DTW on our motion data, the best correspondence between two time series was found. Although voice wave is one dimension, motion data is three demension. So we extend DTW to apply 3-D time series data.

We will explain how DTW calculates similarity be- tween two time series. Assume two discrete time series A and B are given as follows:  A = ai ,..., a; ,..., a M B = bi ,..., b j ?  ..., b,v (1)  where a; and bj  are the ith and j t h  factors of A and B. The similarity between A and B is given by the following formulas.

x = xoi -x*i ,  Y = y.< -yaj, z = zai - 2 b j d i .  i3 = J X 2 + Y 2 + Z 2  (2)  Si-1.j-2 + 2di,j-1 + di,j S;-2, j -1 + Zdi-i,j + d;,j  Si,, = min Si-l,i-l + 2di,j  S1,i = di,i (3)  i D(A,B) = SM,N  However, the similarity calculated by DTW does not always correspond to  our intuition, because of an extreme matching of two patterns and disregarding similarities of x, y, and z-axis respectively. In order to modify it we add the following formulas.

s1,j = SiJ = M (4)  (5)  where Nail is the number of dimension and N,,, is the number of dimension under the threshold.

By using DTW as evaluation measure, nearest neighbor based algorithm takes the following phases: The algorithm calculates distances between the new data and the already existing clusters. Then the al- gorithm finds the nearest distance, and compares that distance to  the given threshold. If it is smaller than the threshold, the algorithm classifies the new data to the cluster that gave the smallest distance. If not, it makes a new cluster for the new data.

Figure 6 shows the process of clustering A, B, C and D. In this example, given threshold is 100, and the table in Figure 6 represents distances between two data. For instance, the distance between data A and data B is 90.

1. For a given data A, the algorithm creates a new cluster for the data A (see phase (a)).

2. For the next data B, the algorithm calculates the distance between the new data B and the already existing cluster (only A). The distance between B and A (90) is smaller than the given threshold (loo), then algorithm classifies B in the already existing cluster (see phase (b)).

3. For the next data C, the distance between C and A (50), is smaller than the threshold, and the distance between C and B (150), is larger than the threshold, so the algorithm splits the cluster includes A and B into two clusters. In other words, the algorithm clas- sifies A and C in the same cluster and makes a new cluster for B (see phase (c)).

4. Finally, for the next data D, the cluster including C should be the cluster for D, because the distance between D and C (40) is the smallest for D. But the distance between D and A (150), is larger than the threshold, so the algorithm splits the cluster including A and C into two clusters, one includes C and D, and the other includes only A.

As a result, there will he three clusters, one includes C and D, the other includes only A, and the last includes only B.

However, the weak point of this algorithm is that the construction of clusters strongly depends on the first data, which we call ?seed?. That is, our algorithm receives input from the time series data, and maintains  - 203 -    Figure 6: Clustering algorithm  one current cluster. Depending on the received input, the early clusters may be incorrect, requiring revision to make it consistent with new input.

Figure 7 shows the effect of seed. In Figure 7 (a), we give the data (A, B, C and D) in the alphabetic order, that is, we give data A as seed. In Figure 7 (b), we give the same data in the reverse order, that is, we give data D as seed. The result of clustering in Figure 7 (a) does not correspond to that in Figure 7 (b). Thus, construction of clusters depends on seed, and, this might cause a misclassification.

Therefore, we apply the merging method to reduce the dependency on seed. Merging combines two ex- isting clusters when a cluster splits. An example of merging occurs when D is added as shown in Fig- ure 6. When D is given, a cluster including A and C splits into two clusters, including C and D, and in- cluding only A. Now, a splitted cluster including A could merge with the other existing clusters. At that time, the distance between A and B is smaller than the threshold, so A and B should be merged into the same cluster. As a result, there will be two clusters as shows Figure 7 (b). Then, the merging method enables us to reduce the dependency on seed is successful.

,B v I W  Figure 7 :  Effects of seed  5 Discovery of motion association  After segmenting and clustering processes, a multi- stream that represents human motion is expressed as  rules in symbol multi-stream  a multiple sequences of symbols. We call the sequence of symbol a multi-stream.

Each symbol represents the segment of certain clus- ter, so the length of zones with the same symbol is usually different. In addition, segmentation process is executed on streams of the body parts. Therefore bor- ders of zones on the streams rarely appear at the same point on the time axis. Thus, the symbol multi-stream is synchronized at  the points where the changes of the content occur as shown in Figure 8 (a).

We call motions that influence on the others as ?ac- tive motions?, and we call ?passive motions? the ac- tions influenced by the ?active motions?. In order to find active motions and passive motions, we set 2 windows W,, (active) and W, (passive) with tixed interval. By sliding the 2 windows on synchronized symbol multi-stream, we can find motion association rules. Then combinations of symbol patterns in W,, and W, represent motion association rules.

We define the strength of motion association rules by using the frequency of occurrence for two symbol patterns. The frequency is calculated by the following function,  where CO is the identifier of motion association rules, Po and P, are patterns which appears in 2 windows W, and W,, t(Pa) is the number of occurrences of P, and t(Pa A P,) is the number of simultaneous occur- rences of Pa and P,. That means the system calculates probability of occurrence for a pattern B which occurs after a pattern A in certain blocks of interval.

Our algorithm finds the pattern P, which includes symbol ?B?, ? B ,  ?L?, ? M  in the streams of the right hand and elbow. After two blocks of symbols from the beginning of Pa, the algorithm finds the pattern Pb which consists of ?U?, ?U?, ?G?, ? G ,  in the streams of the left hand and elbow as shown in Figure 8 (a).

Assume that the combination of P, and P, occurs fie-  - 204 -    Discovery o f ?One raises left hand after  L e f t  Elbow * Time  Kinds Length(sec))  ~~~ ~  (b) Discovery of primitive motion (a) Synchronization of symbol multi-stream  Figure 8: The process of multi-stream  6 12 6 - 12 10 - 20  quently in symbol multi-stream, then we can under- stand that ?raising the left hand? occurs after ?raising the right hand? at higher probability as shown in Fig- ure 8 (b).

In order to  decrease the influence of the variation, we set the size of windows W, and W, to IW,l and IW,l, and, the interval of W, and W, to  ?int?. The values of IW,l, iW,l and ?int? may be determined flexibly. This flexibility allows the system to find Pa and P, with the same interval, even if those sizes are set IW,l = 2, IW,l = 2 and int = 2, or, IW,l = 3, IW,l = 3 and int  = 1. This flexibility decreases the influence of the variation.

The system discovers many motion association rules from motion multi-stream and each of them has a degree of strength to  characterize the motion. Proba- bility is an important parameter to  define the strength and to  select motion association rules as primitive mo- tions for the motion. However, it still requires a deep consideration to define it.

6 Experiments We prepared experimental data from 2 types of mo-  tion data. One is rumba (RM), known as moody and passionate dance from middle America. The other is Japanese traditional physical exercise (JTPE). Rumba is usually performed by a couple, but in this case we prepared data performed only by man.

Table 1 shows the details of motion data for RM and JTPE.

Table 1: Details of motion data  Amount I 23 I 25 I RM I JTPE  Features about contents of motion data are:  RM We prepared the basic and the frequently used steps. The arms are allowed to have wide varia- tion of expression in dance, but for our data, the  Table 2: Clustering result Parts name I N c  I NE I Correct rate Left wrist I 203 I 27 I 86.7 Right wrist 187 23 Left elbow 100 19 Right elbow ~ lo: 1 1 ![; Left knee Right knee 64.0 Left ankle 50 20 60.0 Right ankle 50 17 64.0 Correct rate = 100 x ( N c  - NE) /Nc NC : The number of clusters NE : The number of error clusters  performer keeps arms quiet. The performer tried not to play extreme acts. The steps include no movement of jumping.

JTPE The movements are mainly concentrate on the specific body parts, arms and feet are usually fixed to the specific position. Some motions in- clude bending knees and jumping.

Figure 9 shows the numbers for segments according to the body parts. ?Parts ID? in Figure 9 corresponds to the numbers in Figure 1.

Figure 9: Details of segmentation  Table 2 shows clustering result of JTPE. Correct rates of wrists are higher than those of elbows because movement of wrist is larger than those of elbows and  - 205 -    characteristics of motion appeared more at  wrists than at  elbows.

We heuristiclly set WasiZe = 5, Wpsjle = 5 and int = 0. Wesize = 5 (or Wpsiae = 5) is about 0.5 second long, and we can extract motion association rules in the scope of 0.5 + 0.5 + 0 = 1.0 second long for this setting. 1.0 second is proper to find motion association rules from RM and JTPE.

The following examples are discovered motion as- sociation rules for RM.

( R M  a) if then ?RElbou 18?  ( R M  b) if ?LHip 16? then ?RWrist 2? ( R M  c) if ?LAnkle 19? then ?RShmlder 13?  ( R M  a) is one of the motion association rules found for RM. IT can interpreted as follows: if the left ankle gets to higher position than the habitual one and the left hip draws an arc, then the arm on the opposite side spreads wide. It is a very important for dancers to keep exactly their weight on their feet and dancers create action from their feet through hips. Based on the results of ( R M  a),  ( R M  b) and ( R M  e) we can conclude the motion of the left side (active motion) affect the motion of the right parts of the body (pas- sive motion). This motion association rule is a specific characteristic for RM. For example, a motion for RM is the step that the performer moves to both sides of woman by turns with spreading his arms.

The following examples show discovered motion as- sociation rules for JTPE.

tags for motion retrieval and recognition. It is difficult to express exactly the features of the motion only by words, however, those discovered motion association rules are visually understandable tags. This means our method is effective to discover tags for multi-stream of motion.

There still remains the problem to decide which mo- tion association rules are better to be given to motion as tags. The occurrence probability is one of effective parameters, however, we should consider the peculiar- ity of the motion association rules: motion association rules that are frequently discovered in some categories of motion can not be specific tags to certain category of motion.

In motion recognition domain, many researchers have focused on the extraction of human motion in- formation from time series of 2-D images [3]. The ex- tracted information does not possesses correlation and they do not process the information as multi-stream.

From this point of view, our method is more effective to recognize and retrieve human motion data.

