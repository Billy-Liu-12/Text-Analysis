Determination of Rule Weights of Fuzzy Association Rules  Hisao Ishibuchi, Takashi Yamamoto, and Tomoharu Nakashima

Abstract In this paper, first we extend two basic measnres of association  rules in data mining (i.e., confidence and support) to the case of fimy association rules. The main difference between standard and fuzzy association rules i s  the discretization of continuous variables. While continuous variables are divided into intervals for generating standard association rules, they are divided into lingnistic valnes in the case of fuzzy association d e s .  Next we examine two specifications of rule weights of fuzzy association rules for pattern classification problems. One is the direct nse of the confidence as a d e  weight. The other is based on a slightly complicated formulation where the rule weight of each frizzy association rule is discounted by the confidence of other rnles with the same antecedent conditions and different consequent classes.

Through computer simulations on a pattern Classification problem with many continuous attrihutes, we compare these two definitions with each other. Simulation resnlts show that the direct use of the confidence is inferior to the other defmition of rule weights. Then we examine three d e  selection criteria (Le., confidence, support, and their prodnct). It is shown that good fumy association rules are extracted from nnmerical data using the prodnct criterion. Finally we compare the performance of fimy association rules with that of standard association rules.



I. WODUCTION  When our knowledge extraction task involves numerical data with continuous attributes, each attribute is usually discretized into several intervals [1,2]. The discretization into intervals is used in many machine learning techniques such as decision trees [3]. In some situations, human knowledge exactly corresponds to such discretization of continuous attributes. For example, the domain interval of our ages is divided into two intervals by the threshold age 20 in the following knowledge: ?People under 20 me nof allowed fo smoke?. In other situations, the discretization into intervals is not appropriate for describing human knowledge. For example, we may have the following knowledge: ?Tall people are no# comfortable in small cars ?. We cannot appropriately represent this knowledge using the discretization of the domain interval of our height into intervals. This is because the linguistic value ?tall? cannot be appropriately represented by an interval.

Mathematical framework for representing linguistic values is fuzzy logic. Fuzzy logic has been recognized as a convenient tool for handling continuous attributes by rule-based systems in a human understandable manner [4]. Such recognition is supported by many successful applications of fuzzy control methods [5] .

0-7803-7293-X/01/$17.00 0 2001 IEEE 1555  For h c t i o n  approximation problems with n inputs, we use fuzzy if-then rules of the following form: Rule R,:  If x l  is A,1 and ... and x, is A,, then y is B,,  (1) where R ,  is the label of the q-th fuzzy if-then rule, x = ( X I  ,..., X, ) is an n-dimensional input vector, Aqi is an antecedent linguistic value such as ?small? and ?large?, y is an output variable, and B, is a consequent linguistic value.

The fuzzy if-then rule in (1) can be viewed as a fuzzy association rule A, 3 B, where Ai = ( Ail , ..., Ai,, ) . The main difference between fuzzy and non-fuzzy association rules [6] is that the domain of each input (and output) variable is fuzzily divided into linguistic values in fuzzy association rules.

On the other hand, we use fuzzy if-then rules of the  following form for pattern classification problems: Rule R,:  If x1 is A,1 and ... and x ,  is A,, thenclass C,,  (2) where x = ( X I  ,..., x, ) is an n-dimensional pattern vector and C, is a consequent class. The fuzzy if-then rule in (2) can be viewed as a fuzzy association rule A, 3 C, .

In this paper, we first extend the definitions of the contidence and the support of standard association rules [6] to the cases of the fuzzy association rules A, 3 B ,  and A, a C ,  [7]. Next we examine two definitions of rule weights of fuzzy association rules for pattern classification problems. We also examine three criteria (i.e., confidence, support, and their product) that are used for extracting fuzzy association rules &om numerical data. Finally we compare the performance of fuzzy association rules with that of non-fuzzy association rules.

11. FUZZY ASSOCIATION RULES FOR APPROXIMATION  Let us assume that we have m input-output pairs ( x p  , y p  ) , p = 1,2 ,..., m where x p  is an n-dimensional input vector (i.e., x p  = ( x p l  ,..., x p n  ) ) and y p  is the corresponding output value. Our data set D consists of these m input-output pairs.

Thus the cardinality of D is m (Le., ID I= m ). In the same manner as standard association rules [6], the confidence of the fuzzy association rule A, a B, is defined as  (3)  where D(A,  ) is a fuzzy set of input-output pairs that are compatible with the antecedent part A,, D ( B q  ) is a fuzzy set of input-output pairs compatible with the consequent part  2001 IEEE International Fuzzy Systems Conference  mailto:ie.osakafu-u.ac.jp   B ,  , and I 1 denotes the cardinality of a fuzzy set. Eq.(3) can be calculated from the compatibility grades / L A ,  ( x p  ) and pclg, ( y p )  of ( x p ,  y p )  with the antecedent part A, and  the consequent part B, as follows [7]: m  p=l c P A q  ( x p  1 P B ,  ( u p  )  C ( A ,  s B ,  ) = * (4) m  P=l z P A q  ( x p  1  The compatibility grade p,, ( x p  ) is calculated fiom the membership function p~~~ ( x i  ) of A,i as  P A q  ( x p ) = P A q l  ( x p l ) x  "' ' P A ,  ( x p n ) .

In the same manner, the support of the fuzzy association rule A, a B, is calculated as follows [7]:  I w, ) n o w ,  ) i S ( A ,  * B ,  ) =  ID1 rn  P A q  ( x p )  P E q  ( y p ) p=l  . (6) - - m

III. FUZZY ASSOCIATION RULES FOR CLASSIFICATION  Let us assume that we have m labeled patterns ( x p  , t p  ) , p = 1,2, ..., m from A4 classes where x p  is an n-dimensional pattern vector and t p  is the class label of x p  . As in the previous section, we can define the confidence and the support of the fuzzy association rule A, s C ,  from the given training patterns. Since C ,  is a non-fuzzy class label, the compatibility grade of t p  with C, is 0 or 1: p q  ( t p  ) =1 if p ~ C l a s s C ,  otherwise p c q ( t p ) = O .

The confidence of the fuzzy association rule A, s C ,  is calculated as follows [7]:  p=l  The support of A, s C, is calculated as follows [7]:

IV. PERFORMANCE EVALUATION OF FUZZY RULES In this section, we examine the performance of fuzzy  association rules for pattern classification problems. First we  generate fuzzy association rules of the following type from training patterns.

R , :  If xl is A,, and ... and x, is A,, then C ,  with CF,,  where CFq is a rule weight (i.e., certainty factor). Then the performance of the generated rules is examined by classifying unseen test patterns as well as the training patterns. Two definitions of rule weighs and three rule selection criteria are examined through computer simulations.

A. Fuzzy Rule Extractionfiom Numerical Data For simplicity of explanation, we assume the pattern space  of our pattern classification problem is an n-dimensional hypercube [ 0,1]". Our fuzzy rule extraction is based on the discretization of each continuous attribute into some linguistic values. Fig. 1 shows an example of the fuzzy discretization, which is derived from the uniform discretization into three intervals. In this paper, we assume that the fuzzy discretization of each continuous attribute is given (i.e., we assume that a set of linguistic values is given for each continuous attribute).

(9)  Membership m  l.OW,  0.0  I 1 I 0.0 1 .O  I I  Fig. 1. An example of the filzzy discretization.

The antecedent part of the fuzzy association rule R, is specified by a combination of the given linguistic values. For high-dimensional pattern classification problems with many attributes, it is not practical to examine all combinations of.

antecedent conditions for generating fuzzy association rules.

Thus we only examine combinations of antecedent conditions including many don't cure conditions. Since don't care conditions are omitted, fuzzy association rules generated fiom such combhations are short. The number of antecedent conditions (excluding don't care conditions) of each rule is referred to as the rule length. In our computer simulations, we generate association rules of the length three or less (i.e., with three or less antecedent conditions). The consequent class C , and the rule weight CF, are determined from the given training patterns for each combination of antecedent conditions.

It is natural to choose the class with the maximum confidence as the consequent class C, for the antecedent part A , ,  That is, the consequent class C ,  of the fuzzy association rule R ,  in (9) is specified as c ( A q  +Cq ) = max{c(Aq *Class I),  ..., c ( A ,  aClass M ) } .

It is also natural to use the confidence c( A, 3 C, ) as the rule weight CF, of the fuzzy association rule R ,  :  (10)     CFq = c ( A q  - C , )  . (1 1) In Cordon et al.[8], rule weights were determined in this manner. A different formulation was proposed for determining rule weights in our former study [9]. The fornulation can be rewritten using the confidence as  CFq = c ( A ,  S C q ) - F .  (12)  where ' C is the average of c ( A q  = Class t )  over the (A4 -1) classes except for the consequent class C ,  :  B. Comparison of Two Definitions of Rule Weights For comparing the two definitions of rule weights with each  other, we used the wine recognition database in the UCI Machine Learning Repository. The wine data set is a three- class classification problem with 178 patterns and 13 continuous attributes. As a preprocessing procedure, we normalized each attribute value into a real number in the unit interval [0, 11. The domain of each attribute was discretized into three linguistic values as shown in Fig. 1.

First we evaluated classification rates on training patterns.

That is, we generated fuzzy association rules using all the given 178 patterns. Only fuzzy association rules of the length three or less were considered. The consequent class of each rule was determined by (10). The generated rules were divided into three groups according to their consequent classes. Fuzzy association rules in each gmup were sorted in a descending order of the product of the confidence and the support. When multiple rules had the same value of the product, they were randomly sorted. The fist  N / 3  rules were selected fkom each group. In this manner, the product of the confidence and the support was used as a rule selection criterion. The performance of the selected rules was examined by classifying all the given 178 patterns. In the classification phase, the two definitions of rule weights were examined. We also examined the case of no rule weights, which was simulated by assigning the same rule weight to all rules (i.e., CFq =1.0 for Vq ). Since our rule selection procedure used the random tiebreak mechanism, average results were calculated over ten independent runs.

Simulation results are summarized in Table 1. From this table, we can see that better results were obtained fkom the d e f ~ t i o n in (12)-(13) than the direct use of the confidence on the average. We can also see that the performance of fuzzy association rules with no rule weights drastically deteriorated when more than 30 rules were selected.

Table 1. Comparison among three specifications of rule weights using classification rates on training data.

We also examined the generalization ability of fuzzy rule- based systems using the leaving-one-out (LVl) technique. The whole LVl procedure (i.e., 178 iterations of the design and test of a fuzzy rule-based system for wine data) was iterated five times for calculating the average performance. Simulation results are summarized in Table 2. As in Table 1, better results were obtained from the definition of rule weights in (12)-(13) than the direct use of the confidence.

Table 2. Cornparison among three specifications of rule weights using classification rates on test data.

C. Comparison of Three Rule Selection Criferin In the previous subsection, we used the product of the  confidence and the support for selecting fuzzy association rules.

We also examined the confidence and the support as a rule selection criterion using the definition of rule weights in (12)- (13). Simulation results on training data and test data are summarized in Table 3 and Table 4, respectively. From these tables, we can see that the best results were obtained kom the product criterion among the three criteria. Poor results were obtained kom the confidence criterion because this criterion tends to select association rules with low support.

Table 3. Comparison among three rule selection criteria using classification rates on training data.

Table 4. Comparison among three rule selection criteria using classification rates on test data.

v. COMPAREON BETWEEN FUZZY AND STANDARD RULES In this section, we examine the performance of standard  non-fuzzy association rules. Instead of the fuzzy discretization in Fig: 1, we used the corresponding non-fuzzy discretization into three intervals, which was also shown in Fig. 1. Computer simulations were performed in the same manner as the previous section. Classification rates evaluated by the LVl techniques are summarized in Table 5 and Table 6, which correspond to Table 2 and Table 4, respectively.

Table 5. Classification rates on test data by standard association rules with different specifications of rule weights.

Direct use 86.5 91.6 92.9 92.7 92.7 96.5 95.7 94.4 93.3 93.3 91.0 (12)-(13) 86.5 91.6 92.9 92.7 92.7 96.5 95.7 94.4 93.3 93.3 91.0  No weights 84.3 79.2 80.0 80.3 79.8 79.8 72.5 20.8 16.9 14.0 3.9  Table 6. Classification rates on test data by standard association rules with different rule selection criteria.

#ofrules Confidence  Support  From Table 5,  we can see that the same results were obtained from the two definitions of rule weights. This is because the role of the rule weight of each standard association rule is to specify its priority in the classification phase. Since the same priority was assigned to each rule by the two definitions of rule weights, there was no difference in the simulation results by the two definitions. On the other hand, in the case of fuzzy association rules, rule weights can adjust the location of classification boundaries (see [lo]).

From the comparison between Table 4 (the best classification rate 96.6%) and Table 6 (the best classification rate 90.9), we can see that higher generalization ability was obtained h m  fuzzy association rules.

While standard association rules did not work well in the case of the uniform discretization in Fig. 1, classification performance can be drastically improved by choosing an appropriate pattition for each continuous attribute. We used the entropy measure [3] for independently dividing the domain of each continuous attribute into three intervals. Two threshold values were selected from 177 candidate values, each of which was the mid-point of a pair of neighboring attribute values. All the 177 C2 combinations were examined for choosing the discretization with the minimum entropy for each of the 13 continuous attributes. Simulation results are summarized in Table 7 and Table 8. From these tables, we can see that the generalization ability was improved by choosing an appropriate partition for each continuous attribute.

3 6 9 12 15 30 60 90 120 150 300 10.4 20.3 28.1 34.9 40.4 60.7 74.3 78.9 79.4 76.6 67.9 82.2 93.6 97.1 96.7 97.2 98.2 97.5 96.1 95.4 93.8 91.6

VI. CONCLUDING REMARKS In th is  paper, we first explained the extension of the  deikitions of the confidence and the support to the case of fuzzy association rules. Then we compared two definitions of rule weights with each other by examining the performance of fuzzy association rules. Simulation results showed that the direct use of the confidence was inferior to the other definition.

We also examined three criteria (i.e., confidence, support, and their product) for selecting fuzzy association rules. The best results were obtained by the product criterion. Finally we  compared fuzzy discretization with non-fuzzy discretization. It was shown that the performance of non-fuzzy association rules was sensitive to the choice of partitions than that of fuzzy association rules. It was also shown that the generalization ability of non-fuzzy association rules gradually decreased with the number of rules while such deterioration was not clear in the case of fuzzy association rules. These observations suggest high robustness of the classification performance of fuzzy rule- based systems.

Table 7. Classification rates on test data by standard association with different specification of rule weights and entropy-based discretization.

#ofrules1 3 I 6 I 9 I 1 2  I 1 5  I30 I60  I90  112011501300  Table 8. Classification rates on test data by standard association rules with different rule selection criteria and entropy-based discretization.

