Mining Fuzzy Sequential Patterns from Quantitative Data

ABSTRACT  Data mining is the process of extracting desirable knowledge or interesting patterns from existing databases for specific purposes.

Most of the conventional data mining algorithms can identify the relation among transactions with binary values. Temporal transactions with quantitative values are however commonly seen in real world applications. This paper thus attempts to propose a new data-mining algorithm, which takes the advantages of fuzzy sets theory, to enhance the capability of exploring interesting sequential patterns from the databases with quantitative values. The proposed algorithm integrates the concepts of fuzzy sets and the AprioriAll algorithm to find interesting sequential patterns and fuzzy association rules from transaction data.

1. INTRODUCTION  As useful databases have become public and pervasive, the technology of data mining is urgently requested and developed in the recent years. Data mining is the process to extract desirable knowledge with interesting patterns for a certain purpose from the existing databases. Due to the importance of data mining, many researchers in database and machine learning fields are primarily interested in this new research topic because it offers opportunities to discover useful information and important relevant patterns in large databases, thus helping decision-makers easily analyze the data and make good decisions regarding the domains concerned.

Data-mining is most commonly used in attempts to induce association rules from transaction data. Most previous studies have only shown, however, how binary valued transaction data may be handled. Transaction data in real-world applications usually consist of quantitative values, so designing a sophisticated data-mining algorithm able to deal with various types of data presents a challenge to workers in this research field. Among the topics of data mining, finding useful sequential patterns is very interesting. It is concerned with inter-transaction patterns, which are ordered lists of items, instead of unordered sets of items.

Fuzzy set theory is being used more and more frequently in intelligent systems because of its simplicity and similarity to human reasoning [9]. The theory has been applied in fields such as manufacturing, engineering, diagnosis, economics, among others [6, 9, 10, 121.

The proposed algorithm in this paper integrates the concepts of fuzzy sets and the AprioriAll algorithm [5] to find interesting  sequential patterns and fuzzy association rules from transaction data. It transforms quantitative values in transactions into linguistic terms, then filters them to find association rules by modifying the AprioriAll mining algorithm [5]. The proposed mining algorithm can predict the next plausible consequence underlying the generation of a given sequence of items. For example, the mined fuzzy rules can predict what products and quantities will be bought next for a customer, if a sequence of products and quantities have been bought by him. The rules mined out thus exhibit the sequential quantitative regularity in large databases and can be used to provide some suggestions to appropriate supervisors.

2. REVIEW OF AGRAWAL ET AL.'S DATA-MINING ALGORITHMS  The goal of data mining is to discover important associations among items such that the presence of some items in a transaction will imply the presence of some other items. To achieve this purpose, Agrawal and his co-workers proposed several mining algorithms based on the concept of large itemsets to find association rules in transaction data [ l ,  2, 3, 41. They divided the mining process into two phases. In the first phase, candidate itemsets were generated and counted by scanning the transaction data. If the number of an itemset appearing in the transactions was larger than a pre-defined threshold value (called minimum support), the itemset was considered a large itemset.

Itemsets containing only one item were processed first. Large itemsets containing only single items were then combined to form candidate itemsets containing two items. This process was repeated until all large itemsets had been found. In the second phase, association rules were induced from the large itemsets found in the first phase. All possible association combinations for each large itemset were formed, and those with calculated confidence values larger than a predefined threshold (called minimum confidence) were output as association rules.

In addition to proposing methods for mining association rules from transactions of binary values, Agrawal et al. also proposed a method [ l l ]  for mining association rules from those with quantitative and categorical attributes. Their proposed method first determines the number of partitions for each quantitative attribute, and then maps all possible values of each attribute into a set of consecutive integers. It then finds large itemsets whose support values are greater than the user-specified minimum- support levels. These large itemsets are then processed to generate association rules, and rules of interest to users are output.

0-7803-5731-0/99/$10.00 01999 IEEE II-962  Agrawal and Srikant also proposed several mining algorithms    for finding sequential patterns from transaction data. Five phases, including sort, litemset, transformation, sequence, maximal, are included in their algorithms.

In this paper, we use fuzzy set concepts to mine interesting sequential patterns from transactions with quantitative attributes.

The mined rules are expressed in linguistic terms, which are more natural and understandable for human beings.

3. THE FUZZY DATA-MINING ALGORITHM FOR SEQUENTIAL PATTERNS  In this paper, the fuzzy concepts are used in the AprioriAll data- mining algorithm [5] to discover interesting sequential patterns and fuzzy association rules from quantitative values. Notation used in this paper is first stated as follows.

n: the total number of transaction data; m: the total number of attributes; D(?) : the i-th transaction datum, I l i 5 n; A, : the j-th attribute, I l j I m;  I A I : the number of fuzzy regions for A,, R;k : the k-th fuzzy region of A j  , 1 5 k 5 I A I ; v!) : the quantitative value of Ai for D(?) ;  fj): the f izzy  set convertedfrom V y ) ; f;;? : the membership value of V y ?  in Region Rjk ; count j k  : the summation of f;;? for  i=l to n; a! : the predefined minimum support level; 2 : the predefined minimum confidence value; C,: the set of candidate itemsets with r attributes (items); L : the set of large itemsets with r attributes (items).

The proposed fuzzy mining algorithm first transforms each quantitative value into a fuzzy set with linguistic terms using membership functions. It then calculates the scalar cardinality of each linguistic term on all the transaction data. The linguistic terms with their scalar cardinalities larger than the minimum support value are kept as the large one-item set. Different permutations of patterns with two items are then formed from the large one-item set. Fuzzy operations are used to calculate the scalar cardinalities of these patterns. The patterns with their scalar cardinalities larger than the minimum support value are thus kept as the large two-item set. The same procedure is repeated to find large sets of other numbers of items. The mining process based on fuzzy counts is then performed to find fuzzy association rules from these sequential patterns. The detail of the proposed mining algorithm is described as follows.

The F u z v  Data Mining Algorithm f o r  sequential patterns: INPUT: A body of n transaction data, each with m attribute  values, a set of membership functions, a predefine minimum support va luea ,  and a predefined confidence value 1 .

OUTPUT: A set of fuzzy association rules.

STEP 1: Transform the quantitative value v Y )  of each  transaction datum D (i) , i=l to n, for each attribute A,, j=1 to m, into a fuzzy set f y )  represented as  membership functions, where RI, is the k-th fuzzy region of attribute A,, f,(k) is v ~ ) ? s  fuzzy membership value in region R,k , and I (= A ) IS the number of fuzzy regions for A,.

STEP 2: Calculate the scalar cardinality of each attribute region RI, in the transaction data:  I I1 ?  n  count ,, = fj? , = I  STEP 3:  For each R,,, 1 5 j l m  and I I k l l A , I ,  check  whether its count j~ is larger than or equal to the  predefined minimum support value a . If R,, satisfies the above condition, put it in the set of large I-itemsets (LJ .  That is: L,  = { RJk I count j~ 2 a, 1 l j l m  and I I k l  A  STEP 4: Set F I ,  where r is used to represent the number of items kept in the current large itemsets.

STEP 5 :  Generate the candidate set Cr+, from L, except that two regions belonging to the same attribute cannot simultaneously exist in an itemset in Cr+,. Restated, the algorithm first joins L, and L, under the condition that r-l items in the two itemsets are the same and with the same order of sequences, and the other one is different.

Different permutations represent different conditions.

The algorithm then keeps in Cr+, the itemsets which have all their sub-itemsets of r items existing in L, and do not have two items R,,, and RIy (p # 4) .

STEP 6 :  Do the following substeps for each newly formed (*I)- itemset s with items (., , s 2 ,  ..., (a) Calculate the fuzzy value of each transaction data  I J I ?  s,, ,  ) in C,+,:  region sj and (s,, s2, ..., s,+,) is a subsequence of D ( i )  . If the minimum operator is used for the intersection, then:  If more than one sequence exists, find their maximum fuzzy value as the final result.

(b)Calculate the scalar cardinality of s on the transactions as:  count, = f,?? .

i=l  (c)If count,v is larger than or equal to the predefined  STEP 7: IF L,+, is null, then do the next step; otherwise, set ~ r t l  and repeat STEPS 5 to 7.

STEP 8: Construct the association rules for all large q-itemset s with items 6 ,  , s 2  , ..., s q  ), 4 2 2 ,  using the following substeps: (a) Form the possible association rule as follows:  (b) Calculate the confidence values of all association  minimum support value a , put s in Lp+/ .

s , A s , A  ... A S , - ,  3 s c l ?  rules using:  IJI -963    i f s ( j ) i =  1  i ( fS : ' )A  f , s y ) A  ... A f . s y l , ) equal to the predefined confidence threshold I I  .

i =  I  STEP 9: Output the rules with confidence values larger than or  After STEP 9, the rules output can serve as meta-knowledge concerning the given transactions.

1 I May 5 '99  4. AN EXAMPLE  (B2)  In this section, an example is given to illustrate the proposed fuzzy data-mining algorithm. This is a simple example to show how the proposed algorithm can be used to generate interesting sequential patterns for customers' purchase behavior according to historical data with customers' purchase quantities. The data set, including IO transactions, is shown in Table 1.

Table 1:  The data set used in the examule  May 17 '99 (E931 May 28 '99 May 13 '99 (A4) May 19 '99 (B2)   May 12 '99 (B,1) May 16 '99 (C,6) May 3 1 '99 (E, 10) May 1 '99 (A>6) May 20 '99 (C21) May 27 '99 (E,7) May 13 '99 ( D a May 17 '99 (B91) May 28 '99 (C>7) May 7 '99 G 9 ) May 8 '99 (Q9)  May 19 '99 (E951 May 23 '99 (E391  May 2 1 '99 (D>4) May 7 '99 (A31  May 15 '99 (D97) May 18 '99 (A7)  4 May 11 '99 (B33)  Customer   May 16 '99  May 13 '99 May 17 '99  Fuzzy quantities of products bought (0.8/B.Low),(0.5/E.Low+0.3/E.Middle), (0.3/B.Low+O.7/B.Middle) (0.3/A.Low+0.7/A.Middle),(0.8/B.Low),   Here we assume that each customer buys only one product each time. The proposed method can be easily extended for a customer to buy several products each time. There are five kinds of products in this example. The data set in Table 1 is then represented for each customer according to the occuring time.

Results are shown in Table 2.

(0.3/D.Low+0.7/D.Middle) (0.5/A.Low+0.3/A.Middle),(O.3/D.Middle+0.4/D.High), (0.3/A.Middle +0.4/A.Hieh)  Assume the fuzzy membership functions for the product quantities are shown in Figure 1.

Table 2: The data set reoresented according to occuring time  (0.5/B.Low+0.3/B.Middle),~0.6/C.High),( 1 .O/E.Low) (l.O/A.Middle),(0.8/D.High),(0.8/B.Low),(0.8/E.High) (0.7/D.MiddIe+O.Z/D.High),(O.8/D.Low) (0.8/D.High),(l.O/B.Low),(0.7/C.Middle+0.2/C.High),  - - Transaction No. I  Items bought and Quantities  Membership Value ]+Low Middle High  Figure 1 : The membership functions used in this example  In this example, the quantities purchased are divided into three fuzzy regions: Low, Middle and High. Thus, three fuzzy membership values are produced for each transaction according to the predefined membership functions. For the transaction data in Table 1, the proposed mining algorithm proceeds as follows.

STEP 1: Transform the quantitative values of each transaction datum into fuzzy sets. Take the B product bought by customer 1 as an example. The quantity "2" is converted into a fuzzy set  0.8 0.0 0.0 using the given membership functions.

(-+- + -1 Low Middle High This step is repeated for the other products and customers, and the results are shown in Table 3.

Table 3: The fuzzy sets transformed from the data in Table 2  Each linguistic term such as B.Low is then thought of as an item in the mining process.

STEP 2: Calculate the scalar cardinality of each item in the transactions as the count value. Take the region A.Low as an example. Its scalar cardinality = (0.3 + 0.5) = 0.8. This step is repeated for the other regions, and the results are shown in Table  IlI -964    4.

Customer D.High 1 0.0 2 0.0  B.Low (D.High, B.Low) 0.8 0.0 0.8 0.0  Itemset A.Low  A.Middle  support 0.8 2.7  STEP 3: For each item, check whether its count is larger than or equal to the predefined minimum support value a . Assume a is set at 2 in this example. Since the count values of A.Middle, B.Low, C.High, D.High and E.High are larger than 2, these items are put in L ,  (Table 5 ) .

Table 5: The set o f  large I-itemsets L ,  for this examule  0.4 0.0 0.0 0.0 0.5 0.0 0.8 0.8 0.8 0.2 0.0 0.0 0.8 1 .o 0.8 0.0 0.0 0.0 0.6 1 .o 0.6 0.8 0.0 0.0  A.High 0.6  STEP 4: Set r=l  B.Low  STEP 5 :  Generate the candidate set Cr+/ from L,. C, is first generated from L, as follows: (A.Middle, B.Low), (B.Low, A.Middle), (A.Middle, C.High), (C.High, A.Middle), . . ., (E.High, D.High). Note that the same itemsets with different sequences are thought of as different.

4.9  STEP 6: Do the following substeps for each newly formed candidate iternset.

(a) Calculate the fuzzy membership value of the candidate itemset in each transaction datum. Here, the minimum operator is used for the intersection. Take (B.Low, D.High) as an examples. Its membership value for Customer 5 is calculated as: min(0.8, O.O)=O.O since no items of D.High appearing after B.Low. Note that the membership value for (D.High, B.Low) is 0.8. The results for the other customers are shown in Table 6 and Table 7.

B.Middle  E.Hieh ...

Table 6: The membership values for (B. Low, D. High)  The results for the other 2-itemsets can be derived in similar fashion.

1 .o  3.0 ...

Itemset A.Middle  B.Low  support 2.7 4.9  (b) Calculate the scalar cardinality (count) of each candidate 2- itemset in the transaction data. Results for this example are shown in Table 8.

C.High D.High E.High  Table 8: The fuzzy counts of the itemsets in C,  (A.Middle. B.Low) I 1.5 Itemset I support  2.0 3.6 3.0 (D.High, A.Middle)  ...

(E.High, D.High) 0.0  Itemset  D.Hiah E.Hinh D.High B.Low  STEP 7: IF Lr+, is null, then do the next step; otherwise, set r=r+l and repeat STEPs 5 to 7. Since L,  is not null in the example above, r=r+l=2. STEPs 5 to 7 are then repeated to find L,. C, is first generated from L,, and two itemsets (D.High, B.Low, E.High) and (D.High, E. High, B.Low) are formed.

Since all their counts are smaller than 2, they are not put in L,. L, is thus an empty set. STEP 8 then begins.

support 2.2 2.4  STEP 8: Construct the association rules for each large itemset using the following substeps.

(a) Form all possible association rules. The following two association rules are possible:  If D.High then B.Low, and If D.High then E.High.

(b) Calculate the confidence factors for the above association rules. Assume the given confidence threshold 1 is 0.6.

Take the second association rule as an example. The fuzzy count of (D.High, E.High) is calculated as shown in Table 10.

III -965    Table 10: The fuzzy count of (D.High, E.High)  The confidence factor for the association rule ? l f D  =High, then E = High is then:   i = l  2 . 4 3 . 6  C (D.High  n E.High )  C ( D . H i g h  ) = - =  0.67 IO  i = l  In the same way, the confidence factor for the association rule ?If D=High, then B.Low? is 0.61.

STEP 9: Check whether the confidence factors of the above association rules are larger than or equal to the predefined confidence threshold 1 . Since the confidence 1 was set at 0.6 in this example, the following one rule is thus output to users:  If a customer purchases high quantity of product D, then he will next purchases high quantity of product E, with a confidence factor of 0.67.

If a customer purchases high quantity of product D, then he will next purchases low quantity of product B, with a confidence factor of 0.61.

The two rules above are thus output as meta-knowledge concerning the given transactions.

5. CONCLUSION  In this paper, we have proposed a generalized data-mining algorithm, which can process transaction data with quantitative values and discover interesting sequential patterns among them.

The rules can thus predict what products and quantities will be bought next for a customer and can be used to provide some suggestions to appropriate supervisors.

Although the proposed method works well in data mining for quantitative values, it is just a beginning. There is still much work to be done in this field. Our method assumes that the membership functions are known in advance. In [7, 81, we also proposed some fuzzy learning methods to automatically derive the membership functions. In the future, we will attempt to dynamically adjust the membership functions in the proposed mining algorithm to avoid the bottleneck of membership function acquisition. We will also attempt to design specific data-mining models for various problem domains.

