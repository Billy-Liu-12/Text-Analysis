A Conceptual Framework for Privacy Preserving

Abstract ? This paper proposes a conceptual framework for  privacy preserving of association rule mining in e-commerce and  a novel heuristic approach for association rule hiding based on  intersection lattice theory. Our approach relies on characteristics  of intersection lattice and frequent itemsets to specify exactly  victim items in such a way that modifying them leads to reduction  of confidence of the sensitive association rules but less impact on  remains association rules. The experimental results indicate  effectiveness of the proposed algorithm in comparison with  previous work.

Keywords ? Privacy preserving, association rules hiding,  itemsets hiding, intersection lattice theory.



I. INTRODUCTION  In the business world, companies always face fierce competition. They must therefore form corporative alliance in order to get more benefits together. Data mining has been used extensively to support their business. The discovery of association rules from large database, in particular, has provided useful information for conducting the business of companies. Such rules create assets that collaborating companies can leverage to expand their businesses, improve profitability, reduce costs, and support marketing more effectively [1].

However, data publishing has generated much concern on individual privacy [2]. Consequently, in collaborative project, some companies did not want to share full database because revealing sensitive information can harm their business.

Privacy preserving of association rule mining, usually called sensitive association rules hiding, before sharing or publishing database is, therefore, most important for companies to share database without revealing their sensitive information.

Nevertheless, the main obstacle of the hiding sensitive association rules problem is the side effect, which is defined as new rules are generated in the released database but not appear in the original database (false rules) and non-sensitive rules are hidden (lost rules), arose by hiding process.

This paper introduces a conceptual framework of association rules hiding in e-commerce and a heuristic approach to solve this problem. The approach based on intersection lattice theory to propose a novel algorithm for hiding association rules. By determining exactly the items and least of transactions needed to be modified in order to hide the rule, the proposed algorithm focuses on maintenance itemsets that have small support and are vulnerable on the top of the  intersection lattice, called generating itemsets (or Gen) of frequent itemsets, to protect non-sensitive association rules from being hidden by hiding process as well as minimizing false rules.



II. RELATED WORK  Association rule hiding algorithms can be divided into three main classes, namely heuristic approach, border-based approach, and exact approach [3]. The proposed approaches mainly based on distortion or blocking technique to decrease support or confidence in order to hide the sensitive rules. In the previous works, the authors focused on proposing new approaches to minimize side effect of hiding rules process.

M. Atallah et al. [4] proposed an approach based on evaluation of the relationship between itemsets in a large itemset graph. V. S. Verykios et al. [5] focused on support and confidence approach for sensitive association rule hiding problem. Oliveira and Za?ane [6] proposed algorithms that specify items to change their values based on degree of sensitive transactions, the size of sensitive transactions and blocked inference channel in order to decrease confidence of the rule below minimum support threshold.

Y. Saygin et al. [7] are the first proposed blocking approach for association rule hiding. This approach use unknown instead of transforming 1?s and 0?s and the opposite. This approach relies on the reduction in support of the rule below given threshold in order to hide the rules. S. Verykios et al. [8] extend proposed approach in [7] by using negative border rules to reduce confidence of sensitive association rules below minimum confidence threshold.

Border-based approach relied on revised border introduced by Xingzhi Sun and Philip S. Yu [9]. George V. Moustakides and Vassilios S. Verykios [10] extent this approach to propose new algorithm called MaxMin. The proposed algorithms hide sensitive itemsets by trying to remove all the sensitive itemsets that belong to the revised negative border from the database, at the same time they maintain frequent all the itemsets of the revised positive border. The border-based is a new approach for hiding itemsets that got better results in decreasing side effect, but modifying one transaction per time and resolving association rule hiding by reducing support of generating itemset are drawbacks of this research.

Exact approaches give priority in providing superior solutions in comparison to the heuristic schemes. Menon et al.

User?s  sessions  [11] formulate a Constraint Satisfaction Problem (CSP) to specify minimum transactions needed to be modified for hiding sensitive association rules. Gkoulalas and Verykios [12] formulate a CSP by considering the itemsets belong to the revised positive and negative border to identify candidate itemsets for hiding process. Although this approach gets more efficiencies in minimizing side effect, but it is still at high computational cost in the negative side.

In conclusion, the previous works presented in this section indicate that the researches in the area of the hiding sensitive knowledge have been taking interest in researchers. Getting full advantages and overcome drawbacks of previous research to propose new approach for association rule hiding in such a way that minimizes side effect therefore is a future scenario.

Our research aims to propose conceptual framework and a heuristic approach to solve the problem in such a way that the side effect is reduced to a minimum. The details of the approach and its efficiency are presented in the following section.



III. PROBLEM FORMULATION  Association rule mining is first introduced by Agrawal, et al. [13] in 1993. The process of association rule mining is defined as follows:  Let I = {i1, i2, ?, im} be a set of literals, called items, where  m denotes the cardinality of the set. Any subset X ? I is called  an itemset over I. A k-itemset is an itemset of length  (equivalence of size) k, i.e. an itemset consisting of k items.

A transaction database D = {t1, t2, ???, tn} over n ? m table  consisting of n transactions over I carrying different identifies,  where entry tij = 1 if and only if the i-th item (i ? [1, m]) appears in the j-th (j ? [1, n]) transaction. Otherwise, tij = 0.

Itemset X ? I is supported by transaction ti ? D if ?xi?X such that xi = 1.

A support of itemset X denoted as ?(X) is defined as ?(X) = |X(t)| / |D|, where X(t) = {t ? D | t supports X} and |D| is total  of transactions of D. An itemset X is called as a frequent  itemset if ?(X) ?, where ? is the minimum support threshold that given by users or experts.

An association rule is the implication X?Y, where X?I,  Y?I, and X?Y = ?. We say that the rule X?Y holds in  database D with confidence ?(X?Y) = (?(X?Y)?100)/|X|. We also say that the rule X?Y has support ?(X?Y)=(?(X?Y)?100)/|D|.

Let the minimum support threshold ? and the minimum confidence threshold ? are given by users or experts. The association rule X?Y is called strong association rule if ?(X?Y) ? and ?(X?Y) ?.

In general, association rule mining algorithm [13] first finds all frequent itemsets and then it drives from them the association rules that are strong enough to be considered interesting. Some of these rules are most important to the company for decision supporting, called sensitive association  rules. This research aims at preventing sensitive association rules from being revealed.

The addressed problem in this paper is stated as follows:  Given transaction database D, a set of association rules R that  are mined from D and SR is a set of sensitive association rules  of R, how can we transform D into released database D? in  such a way that (i) all association rules in SR are hidden and (ii) the side effect is minimal?



IV. CONCEPTUAL FRAMEWORK  To protect sensitive association rules from being revealed during sharing or publishing database, we propose a conceptual framework for association rule hiding in e-commerce before sharing or publishing that includes three components as follows.

Experts  Figure 1. The Conceptual Framework for Association rule hiding in e-  commerce  1) Data Preprocessing: This component aims to collect, select, clean and transform data into the necessary form for association rule mining process.

2) Association rule mining: This component aims to discover association rules that satisfy given threshold for business process of the company and then find sensitive association rules needed to be hidden to protect their sensitive information. This component needs intervention of experts to decide which association rules are sensitive.

3) Sensitive association rule hiding: This component aims to hide sensitive association rules that are mined in the  Association  rule mining  Frequent  itemsets mining  i i  Association rule hiding  Specify itemsets  and transactions  need to be  modified  ?, ? Modify specified  items in specified  transactions  Sanitized  data Users  Suppliers/  cooperative  companies/ services  Sharing  Data  Association rules  SR: Sensitve Association Rules  SR ?  SR=?    3Raw Data  2000 2012 7th IEEE Conference on Industrial Electronics and Applications (ICIEA)    previous component before sharing data to partners such that the remains rules could be mined as more as possible.



V. PROPOSED APPROACH  A. Theory of intersection lattice  This subsection presents about intersection lattice theory and relationship between the theory and frequent itemsets. This research relies on this characteristic to propose algorithm for hiding association rules.

Definition 1. (Lattice) A given ordered set V is called a  lattice if with any element a, b ? V, the set {a, b} has upper and lower bounds. The upper and lower bounds of {a, b} are signed  as a?b and a?b, respectively.

Clause 1. Let G be a family of all subsets of a finite set U.

Then the set (G, ?) forms a lattice.

Definition 2. (Intersection lattice) Suppose that G is a family of subsets that are close to an intersection operator on a finite set U, namely, the result of the intersection from subsets of G always being a subset of G,  G ? SubSet(U): (? H ? G HX  X ?  ? G).

G is called an intersection lattice on a finite set U.

Definition 3. (The Generating set - Gen) An intersection  lattice G  contains a unique subset family S so that all elements of G can be presented by the intersection of other elements of S, namely, S is the smallest subset of G that satisfies the  property G = {Y | Y = X1 ? ? ?  Xk , k ? 0, X1, ? , Xk ? S}. S is called generating set of intersection lattice G and signed Gen(G).

Definition 4. (Set of maximum elements) Given (M, ?) is a finite set which has partial order attribute. Element m in M is  called maximum if ? x ? M and m ? x then m = x. We signed MAX(M) as a set of maximum elements of M.

It is easy to infer that each element x in M always exist with  element m in MAX(M) and satisfies x ? m. To conduct our proposal, we considered partial order ? for each family subsets of a given finite set U.

Lemma 1. (Lemma about maximum set in intersection lattice and Gen)  Let G be intersection lattice on finite set U. Then MAX(Gen(G)) = MAX(G\{U})  Definition 5. (Coatom) Let G be an intersection lattice on finite set U. We call elements of the set MAX(G\{U}) are coatoms of G and signed as Coatom(G).

Theorem 1. (Charateristic of Coatoms in the intersection lattice)  With any intersection lattice G on finite set U, it is obvious to have Coatom(G) = MAX(Gen(G)).

Definition 6. (in-degree of itemset) Let G be an  intersection lattice on finite set U, and X ? G. We define d(X) as in-degree of X, namely d(X) is the number of supper sets of X.

Clause 2. (Intersection lattice of frequent itemsets) The set of frequent itemset P of given transactions database T is an intersection lattice on finite set of items U. The set Gen(P) is calculated as follows,  Gen(P) = {X ? P | d(X) ? 1} - U, where d(X) = ||{Y ? G | X ? Y}||  Clause 3. For each subset of X in U, Poset(X) forms a complete intersection lattice that has a set Gen including itemsets located on second row.

Theorem 2. If an item in the intersection lattice P is reduced support then at least one itemset in Coatom(P) is decreased support.

These results are proof of the capability of applying intersection lattice to find out the exact upper and lower bounds of the itemset of which support need to be decreased in order to hide the sensitive association rules. Relying on these bounds, we can specify itemsets that may be affected directly when hiding the rule. Our approach based on this characteristic to propose heuristic for hiding rules so as to avoid impact to these itemsets, so that minimizes side effect.

B. ILARH algorithm  Suppose that the sensitive rule needs to be hidden each time is R S. Rely on the definition of confidence of association  rule that ?(R?S) = ?(RS)/?(R), where RS is written instead of R?S, the rule can be hidden by changing value of item A ? S in the transactions that support itemset RS such that confidence of the rule is below minimum support threshold. Our target is to protect the set Gen(P) during hiding process in such a way that enables it to avoid the impacts to non-sensitive association rules.

To protect itemsets in Gen(P), according to Theorem 2, we first give priority to protection of itemsets in Coatom(P). Let GEN_NF(RS) denotes the set of itemsets belonging to Coatom(P) and containing RS. In the set GEN_NF(RS), the itemsets that has greater support will be less vulnerable than the one that has smaller support. Furthermore, the itemsets that has smaller size always correlate to smaller number of association rules than the larger one. Therefore, the itemset that has maximum support and minimum size in GEN_NF(RS) is selected for the first process and called victim itemset.

Given X ? GEN_NF(RS), for each item A ? S, S ? X, we define the function L(A,X) that returns three values (A,Y,?), where ? is minimum support value among support of subsets Y that contain item A (that is Y ? X, Y  X and A ? Y),  L(A,X) = {A,Y,?} , ? = min{?(Y) | A ? S, S ? Y, Y ? Gen(X), X ? GEN_NF(RS)}   (1)  For each item A?S and itemset X belongs to GEN_NF(RS), we estimate that we should modify the value of item A in transaction support X or not. The criterion that we would like to attempt is to modify item A of X in such a way that causes minimal side effect to absolute subsets containing A of X. We  call M(S) as a function that returns four values (A,X,Z,?), where ? is maximum value among support values ? obtained from functions L(A, X), that is,  2012 7th IEEE Conference on Industrial Electronics and Applications (ICIEA) 2001    M(S) = (A, X, Z, ?), ? = max {? | L(A,X) = (A,Z,?), A ? S, X ? GEN_NF(RS)}                (2)  Function M(S) indicates that we need to modify item A in  transactions containing X ? V; item A obtains support value maxmin ? at itemset Z. In the other word, specified item A is victim item of hiding process.

Because of ?(R S) = ?(RS)/?(R), to have ?(R?S) < ?, item A needed to be modified in at least ?(RS) ? [?*?(R)] + 1 transactions. Le TX denotes the transactions that support itemset X, and T?RS denotes the transations that support only itemset RS.

Figure 2. Algorithm ILARH - Intersection Lattice-based Association Rule  Hiding

VI. RESULTS AND DISCUSSIONS  In this section, we have compared ILARH algorithm with the MaxMin2 presented in [10] to evaluate the results on the measurements of minimizing side effect of association rule hiding process. We consider the MaxMin2 algorithm in the context of association rule hiding.

To compare efficiency of ILARH algorithm and MaxMin2 algorithm, we created a table of performances of these algorithms for association rule hiding and present them in TABLE I.

TABLE I. RESULTS OF EXPERIMENTS  Number of  transactions/  Number of items  Number of  sensitive rules  Side effect  ILARH MaxMin2  80/8 2 42 24  22622/8 5 139 621  284/10 5 117 391  8406/11 5 53 166  25728/12 5 29 465  5000/13 5 91 274  15000/13 5 71 321  25000/13 7 47 334  10000/14 5 69 257  25729/14 5 53 258  TABLE I contains 4 columns. The first two columns are input information, while remains columns present output of the experiment. The performance of each algorithm is measured by the total of lost rules and false rules. By giving the same weight to both performance metrics, two algorithms are compared in the same criteria. Accordingly, the algorithm achieves minimum value (underline) in each row is the winner in this comparison.

The results are separated into two metrics of total transactions and number of items, respectively, to compare clearly side effect generated by these algorithms. The illustration is shown as graphs in Figure 3 and Figure 4.

Figure 3. The side effect by algorithms ILARH and MaxMin2 by changing total of transactions  Input: D ? transaction database; P ? family of frequent itemsets of U; ?? minimum confidence threshold; ?- minimum support threshold; SR ? set of sensitive association rules.

Output: Released database D? from which strong association rules can be discovered, except SR.

Method:  1. For each rule(R?S) ? SR Do 2. Compute the set of transactions that support the  rule TRS and the set of transactions that support only the rule T?RS;  3. While ?(R?S) ? Do  4. Compute the set Gen(P) and Coatom(P);  5.    Compute the number of transactions needed to be modified: n = ?(RS) ? [?*?(R)] + 1;  6.        Compute GEN_NF(RS);  7. For each X?GEN_NF(RS) Do 8.          Specify victim item A by computing  function Let(A, X, Z, ?) := M(S);  9.          Modify victim item A in transactions that support only rule T?RS and recuce n := n - |T?RS|;  10.              If n = 0 Then break;  11.              If RS = X Then  12.                   Modify item A in k transactions that support X and remove these transactions from TRS;  13.                       n := n ? k;  14.                Else  15.                   Modify item A in k? transactions that support Y?Gen(X), RS ? Y and remove these transactions from TRS;  16.                       n := n ? k?;  17.                EndIf:  18.                If n = 0 Then break;  19. EndFor:  20.        Compute ?(R?S); 21.   EndWhile:  22. End for;  2002 2012 7th IEEE Conference on Industrial Electronics and Applications (ICIEA)    Accordingly, the trends indicate that either total of transactions or amount of items increase, the ILARH algorithm outperforms MaxMin2. In other words, ILARH algorithm is better than MaxMin2 algorithm in terms of side effect during rule hiding process.

Figure 4. The side effect by algorithms ILARH and MaxMin2 by changing  total of items

VII. CONCLUSION  We have presented a novel algorithm to hide a set of sensitive association rules in the conceptual framework for privacy preserving of mining association rules in the context of sharing or publishing data of e-commerce companies. The proposed approach based on intersection lattice of frequent itemsets to find exactly items and transactions that can be modified in order to reduce confidence of sensitive association rule, but less impact to the other itemsets. Therefore, the proposed algorithm, ILARH, achieve good result in minimizing side effect. A thorough experimental evaluation indicates that the proposed algorithm reaches good results in minimizing side effect in comparison with the previous work.

REFERENCE  [1] Zorayda Ruth Andam. E-commerce and e-business.  E-Asean Task Force & UNDP Asia Pacific Development Information Program, 2003.

[2] Hui Wang, Ruilin Liu, ?Privacy-preserving publishing microdata with full functional dependencies?, Data & Knowledge Engineering vol. 70, 2011, pp.249?268.

[3] Aris Gkoulalas-Divanis and Vassilios S. Verykios, Association Rule Hiding for Data Mining, LaVergne, TN USA, 2011.

[4] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim, V. Verykios, ?Disclosure Limitation of Sensitive Rules?, in Proceedings of the 1999 Workshop on Knowledge and Data Engineering Exchange, 1999.

[5] V. S. Verykios, A. K. Emagarmid, E. Bertino, Y. Saygin, and E.

and Data Engineering, vol. 4, 2004, pp.434?447.

[6] S. R. M. Oliveira and O. R. Zaiane, ?A unified framework for protecting sensitive association rules in business collaboration?, International Journal of Business Intelligence and Data Mining, vol.1, 2006, pp.247? 287.

[7] Y. Saygin, V. S. Verykios, C. Clifton, ?Using unknowns to prevent discovery of association rules?, ACM SIGMOD Record, vol.4, 2001, pp.45?54.

[8] Vassilios S. Verykios, Emmanuel D. Pontikakis, Yannis Theodoridis, Liwu Chang Efficient, ?Algorithms for distortion and blocking techniques in association rule hiding?, Distributed Parallel Databases, 2007, pp.85?104.

[9] X. Sun and P. S. Yu, ?A border-based approach for hiding sensitive frequent itemsets?, In Proceedings of the Fifth IEEE International Conference on Data Mining, 2005, pp.426?433.

[10] George V. Moustakides, Vassilios S. Verykios, ?A MaxMin approach for hiding frequent itemsets?, Data & Knowledge Engineering, 2008, pp.75?89.

[11] S. Menon, S. Sarkar, and S. Mukherjee, ?Maximizing accuracy of shared databases when concealing sensitive patterns?, Information Systems Research, vol.3, 2005, pp.256?270.

[12] A. Gkoulalas-Divanis and V. S. Verykios, ?An integer programming approach for frequent itemset hiding?, Proceedings of the 2006 ACM Conference on Information and Knowledge Management, 2006, pp.748? 757.

[13] R. Agrawal, T. Imielinski, and A. N. Swami, ?Mining association rules between sets of items in large databases?, Proceedings of the 1993 ACM pp.207-216.

