Visualization of Events Using Twitter and Instagram

Abstract?In this demo we present a tool that allows us to visualize the real world events on a map interface using the contents shared by users on Twitter and Instagram. Social networks have become popular in recent times for sharing contents about observations made by users. Our tool incorporates a novel algorithm that analyzes the data from both Twitter and Instagram for fusing the contents corresponding to the same event thereby enhancing the corroboration of the event detection techniques for the individual networks. In addition to providing a much cleaner information our tool leverages the various data available from both the social networks (text, images, geo-data) to improve the overall experience of the user visualizing the events.



I. INTRODUCTION  Social networks have gained a lot of popularity over the past few years. This has led to many research directions for analyzing the content shared by users as well as studying the behavior of users. One such interesting task is to identify the events which occur in the physical world that are immediately shared by the people observing using their social network profiles. The event detection problem itself is a very broad category comprising of many smaller problems such as ver- ifying the credibility of the identified events, localizing the occurrence of the events, etc. The main contribution of this demo is a tool that utilizes a fusion algorithm for physical event detection from multiple social networks as a way to improve the accurcy of results. Specifically, we fuse data feeds from both Twitter [4] and Instagram [1]. The two networks have complementary advantages. Twitter data are more prolific (500 million tweets posted per day [5]), leading to detection of more events, but it is also more noisy, generating more false-positives. In contrast, Instagram data feeds are sparser (80 million images posted per day[2]), but events detected based on Instagram data tend to include fewer false positives. We show that fusing the two together, can offer a solution that features the benefits of both; the results have a much smaller fraction of false positives compared to using Twitter alone, and have more events detected, compared to Instagram. We believe that this approach offers a new point in the trade-off space between precision and recall in event detection techniques from social media data, aiming to combine the benefits of past solutions.

One of the earliest works in this context is on earthquake detection from Twitter [8] where each user is considered as a sensor node that reports a target event according to some prob- abilistic distribution. Since then there have been many other Twitter-based event detection techniques [11], [13], [12] that exploited statistical properties of tweets to identify ongoing events.

Another popular social network, Instagram, allows users to share pictures of their observations. The idea of event detection  from Instagram dates back several years [10], [9]. Unlike Twitter, where only only 1.5% of the Twitter data is geo- tagged, Instagram has a significantly higher fraction of objects with location information [7]. In our own previous work, we described a system that uses feeds from Twitter [6] (alone) and Instagram [7]1 (alone) to detect events.

We utilize the vantage points of both the social networks in order to device a fusion approach that performs better event detection overall. The novelty of our algorithm is an unsupervised learning based on the Expectation-Maximization technique in order to fuse the contents between the two social networks. In the following section we describe an example which gives an insight to the underlying principle of the tool followed by a brief description of the demo tool.



II. TOOL DESIGN  In this section we describe the components of the tool that uses the fusion model to automate the process of event detection. In past work the authors established that there is non-trivial overlap between events reported on Instagram and events reported on Twitter. This led to the idea of developing an event detection algorithm that utilizes data from both networks to enhance quality of detection.

The mapping between related Instagram and Twitter feeds, referred to above, is done on two steps. First, we start with the smaller feed (Instagram). For each object posted in this feed, we identify all potentially related posts in the larger (Twitter) feed. Second, with the set of potentially related posts identified, we make a decision on whether they correspond to a real event, or whether the similarity is accidental.

Instagram API crawler  Twitter API crawler  Detect Clusters of Locations  Preprocess Tweets: Eliminate Noise  Fusion Model  Map Visualization of Events  Fig. 1: Overall architecture of the tool for event detection  1This work was recently accepted at IEEE Infocom 2017 and can be accessed via the link http://hdl.handle.net/2142/94838 until published.

A. Demo Tool Architecture  1) Data Collection and Preprocessing: The first step in the work flow is the collection of data related to a query keyword provided by the user using the APIs for each social network. Figure 1 shows the overall implementation of the tool. The collected data is then preprocessed for data cleaning such as removing any redundant contents. Next we identify all the clusters of locations using the Instagram data that may represent an event. Our tool allows any detection algorithm for this step and also keeps track of the clusters that do not pass the threshold for qualifying as an event. These clusters of locations are then forwarded to the fusion model for the detection process.

2) Fusion Model: The key contribution of this tool is an automated way of figuring out the mapping between the same events across two different social networks. In the first step we first identify all the tweets that are potential candidates for being relevant to the Instagram cluster. In order to find these candidates we just look at the preprocessed tweets from the corresponding time window and assign a similarity score based on the fraction of Instagram hash tags contained within the tweet text. Once we have the candidate tweets assigned to an Instagram cluster the next step is to find the relevance of each tweet. This is achieved with the help of an Expectation- Maximization (EM) approach based on two parameters.

0.05  0.1 0.15  0.2 0.25  0.3 0.35  0.4  Pr ob  ab ili  ty D  en sit  y  Coherence Score  (a) Relevant Tweets  0.05  0.1 0.15  0.2 0.25  0.3 0.35  0.4  Pr ob  ab ili  ty D  en sit  y  Coherence Score  (b) Irrelevant Tweets  Fig. 2: Frequency distribution for Coherence scores  Our algorithm assumes that for an actual event the credi- bility of the claims being true increases with the mention of location names and the contents shared by different users for the same events having a high textual coherence. In order to find coherence of a tweet we get the average word vector from all the candidate tweets and then find the cosine distance of a tweet from this average word vector. Figure 2 shows the probability density of the coherence scores (ranging between 0 and 1) for a few randomly selected tweets from both the categories. It is evident that for relevant tweets the distribution tends to be dense towards 1. At the same time location mentions in the tweet is also important. With the help of Google Maps API we get location names of an Instagram cluster which can be used to link with the cadidate tweets.

We assume that the coherence score for either class follows a beta distribution and also assign prior probabilities for location names in both classes. Next we perform the EM method on the observed data to find the relevance score of each candidate tweet. Any tweet having a score less than 0.5 is marked as irrelevant. Based on the relevance scores we then apply the Twitter event detection to retain only those clusters of tweets that have a relevant tweet.

3) Visualization: In the last step we show all the detected events using the fusion model on a map based interface that  consists of a timeline story. For each interval a set of pins located on a geo-space can be seen that provides detailed information of the corresponding event using the images and text contents from the two social networks.

B. Demo Outline  For the live demonstration of the tool during the conference we will have an interface that allows the user to select one of the datasets that will be collected before and during the conference. The interface will consist of a timeline based map view where the user can scroll over the time stamps with events being displayed as pins on the map. The events will be localized to a specific point based on the geo-coordinates.

A further detailed explanation of the detected events can be viewed with the help of an information box displaying the images retrieved using Instagram and text retrieved using Twitter. In addition to this interface we will provide another interface indicating the advantages of our fusion model over the existing techniques for detecting events in the individual social networks.



III. EXPERIMENTAL RESULTS  In this section, we discuss evaluation using a real world dataset. To collect data from both Twitter and Instagram platforms, we ran the query Q = {protest} to collect all the content (tweets and tagged images) that has at least one occurrence of the word protest. We collect this data over a period of one month during February 2016.

TABLE I: Statistics of collected datasets  Dataset # Tweets GeotagFraction Instagram  posts Feb 2016 Week 1 77001 0.0016 1377 Feb 2016 Week 2 78334 0.0012 1424 Feb 2016 Week 3 75639 0.0015 1489 Feb 2016 Week 4 64669 0.0015 1398  Table I summarizes the data we collected using the above query. For each row, we show the total number of tweets, the fraction of tweets that are geotagged (tweets with lati- tude and longitude information available), and the number of Instagram posts. We retain only those Instagram posts that have location information available. In order to evaluate the performance of our fusion model at event detection we select two individual event detection techniques for each Instagram and Twitter. The Points of Interest (POI) method described in [9] and the Instagram Event localization (InstaLoc) [7] are used for detecting events on Instagram dataset. The Earthquake detection (TweetEvent) [8] and ClariSense [6] are used for detecting events on Twitter dataset. The evaluation is done using two separate criteria. The first one is the improvement in the amount of detected events against the Instagram detection techniques itself. The second one is the fraction of false positives present in the data against Twitter based detection techniques.

For both the Instagram event detection techniques we eliminate the below threshold clusters as mentioned in the respective papers but do not follow the same while applying the social fusion method. This allows us to see if the clusters       B1 B2 B3 B4  To ta  l E ve  nt s  Baseline Method Without Fusion With Fusion  (a) Week 1    B1 B2 B3 B4  To ta  l E ve  nt s  Baseline Method Without Fusion With Fusion  (b) Week 2    B1 B2 B3 B4  To ta  l E ve  nt s  Baseline Method Without Fusion With Fusion  (c) Week 3    B1 B2 B3 B4  To ta  l E ve  nt s  Baseline Method Without Fusion With Fusion  (d) Week 4  Fig. 3: Instagram detection improvement - comparison of different baseline methods with and without fusion method   0.2  0.4  0.6  0.8   B1 B2 B3 B4  Pr ec  isi on  Baseline Method Without Fusion With Fusion  (a) Week 1   0.2  0.4  0.6  0.8   B1 B2 B3 B4  Pr ec  isi on  Baseline Method Without Fusion With Fusion  (b) Week 2   0.2  0.4  0.6  0.8   B1 B2 B3 B4  Pr ec  isi on  Baseline Method Without Fusion With Fusion  (c) Week 3   0.2  0.4  0.6  0.8   B1 B2 B3 B4  Pr ec  isi on  Baseline Method Without Fusion With Fusion  (d) Week 4  Fig. 4: Twitter detection precision - comparison of different baseline methods with and without fusion method  that get eliminated due to lack of support can actually be identified using the fusion method. At the same time we use both the Twitter detection techniques with the same parameters mentioned in the papers and for the fusion method we only retain those clusters that contain any relevant tweet. With the mentioned techniques we have four pairs of baselines - (i) POI and TweetEvent (B1), (ii) InstaLoc and TweetEvent (B2), (iii) POI and ClariSense (B3), and (iv) InstaLoc and ClariSense (B4).

Figure 3 shows the plot for comparison with and without the fusion model for each of the baseline methods in order to find the improvement in the number of total events considering only Instagram detection techniques. There are four subplots for each week in the dataset with x-axis representing the baseline method and the y-axis representing the total detected events. It is evident from the plot that with the help of fusion model we are able to detect more events in general for any selected baseline method. Figure 4 shows the plot for comparison with and without the fusion model for each of the baseline methods in order to find the precision considering only Twitter detection techniques. There are four subplots for each week in the dataset with x-axis representing the baseline method and the y-axis representing the precision. This plot shows that with the help of fusion model we are able to remove a significant amount of false positives thereby resulting in a higher precision.



IV. CONCLUSIONS  This tool presents a fusion model for integrating data from two different social media platforms, namely, Twitter and Instagram. The work offers a better trade-off between false-positives and false-negatives compared to approaches that utilize individual networks independently. The motivation for our tool design comes from the fact that many events offer signatures in multiple networks that can somehow be correlated with the help of intrinsic characteristics such as location mentions and coherence among event descriptions.

