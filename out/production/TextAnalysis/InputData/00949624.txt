

137 1  Fuzzy Rules Extraction Using Self-Organising Neural Network and  Association Rules Kok Wai Wong, Tamis D. Gedeon, Chun Che Fung, and Patrick M. Wong  Abstmd- Fuzzy logic is becoming popular in dealing with data analysis problems that are normally handled by statistical approaches or ANNs. The major limitation is the difficulty in building the fuzzy rules from a given set of input-output data.

This paper proposed a technique to extract fuzzy rules directly from input-output pairs. It uses a self-organising neural network and association rules to construct the fuzzy rule base.

The self-organising neural network is first used to classify the output data by realising the probability distribution of the output space. Association rules are then used to find the relationships between the input space and the output classification, which are subsequently converted to fuzzy rules.

This technique is fast and efficient. The results of an illustrative example show that the fuzzy rules extracted are promising and useful for domain experts.

Index Terms- Association Rules, Fuzzy rules, Rule extraction, Self-organizing neural network

I. INTRODUCTION F uzzy logic (FL) is becoming popular in dealing with data analysis problems that are normally handled by statistical  approaches or A N N s  [ 11. In general, fuzzy control systems are the most important applications of fuzzy theory. This is a generalised form of expert control using fuzzy sets with fuzzy rules for modelling a system. In classical fuzzy approaches from Zadeh [2] and Mamdani [3], the basic idea is to calculate the conclusion by evaluating the degree of matches from the observation that triggered one or several rules in the model.

However, conventional FL data analysis systems do not have any learning algorithms to build the analysis model. Rather,  K. W. Wong and T. D. Gedeon are with the School of Information Technology, Murdoch University, Western Australia 6150. (telephone: 618-9360-6599/-6430, e-mail: { b o n g  I tgedeon }@murdoch.eduau).

C. C. Fung is with the School of Electrical and Computer Engineering, Curtin University, Western Australia 6102. (telephone: 618-9266-2575, e-mail: tfungcc@cc.curtin.edu.au).

P. M. Wong is with the School of Petroleum Engineering, University of New South Wales, Sydney, Australia. (telephone: 612-9385-5 189, e- mail: pm.wong@unsw.edu.au).

they make use of human knowledge, past experience or detailed analysis of the available data by other means in order to build the fuzzy rules for the data analysis. The advantages of using FL are the ability to handle imprecise data and to interpret the analysis model built. The data analysis model can also incorporate human knowledge by modifying the fuzzy rule base. The data analysis model can also be changed easily by modifying the fuzzy rule base. The major limitation is the difficulty in building the fuzzy rules.

However, if fuzzy rules can be extracted from measured input-output data, it will be very useful. This area has attracted much attention these few years [4, 5 ,  6, 71. The usual fuzzy controller, which normally puts emphasis on the rule premises, generates a large fuzzy rule base. In a fuzzy rule base, the number of rules depends very much on the number of inputs and the number of partitions. Also the rule extraction time can be very time consuming if the input space is very large.

In this paper, we propose an integrated use of a self-  organising neural network and association rules for building the fuzzy rule base. Our emphasis is placed on the rule consequents, and we then find an association concerning the premises. In this case, the partitioning of the input space is not ordinary as shown in Fig. 1, thus the number of fuzzy rules does not increase exponentially with the number of inputs. The propose technique is fast and efficient in generating a fuzzy rule base.

x2  IEEE Catalogue No. 01 CH37239 0-7803-7101-1/01/$10.00 0 2001 IEEE.

Fig. 1. Ordinary partition of input space.

137 2

II. SELFeRGANIZING NEURAL NETWORK Self-organising neural networks are designed with the intention to simulate the various organisations found in various brain structures and has a relationship to brain maps [8,9]. Its main feature is the ability to visualise high dimensional input spaces onto a smaller dimensional display, usually one or two-dimensional. Self-organizing neural networks, as the name suggests, have the ability to learn and organize information without being given correct outputs for the inputs. Therefore, self-organising neural networks perform unsupervised learning as shown in Fig. 2. Let the input data space .% be mapped by the self-organising neural network onto a onedimensional array with i nodes. Associated with each i node is a parametric reference vector m,=[&,M, ... ,uJT E S, where H is the connection weights between node i and input j. Therefore, the input data space 34 consisting of input vector X=[xl,x2,..,x,JT, i.e. X E %, can be visualised as being connected to all nodes in parallel via a scalar weights H. The aim of the learning is to map all the n input vectors Xn onto mi by adjusting weights such that the self-organising neural network gives the best match response locations.

n  Fig. 2. Self-organising Neural Network.

A self-organising neural network can also be said to be a nonlinear projection of the probability density fimctionp(X) of the high dimensional input vector space onto the one or two- dimensional display map. Normally, to find the best matching node i ,  the input vector Xis compared to all reference vectors  by searching for the smallest Euclidean distances 11 X- mi 11 signified by e. Therefore,  or  During the learning process, the node that best matches the input vector Xis  allowed to learn as well as those nodes that are close to the node up to a certain distance. The learning process is expressed as:  where t is discrete time coordinate and hei(t) is the neighbourhood function  After the learning process has converged, the map will display the probability density function p ( 3  that best describes all the input vectors. At be  end of the learning process, an average quantisation error of the map will be generated to indicate how well the map matches the entire input vectorsX,. The average quantisation error is defined as:  Beside the average quantisation error, an individual quantisation error is also used to measure how well the input vector matches the closest node i .

m. ASSOCIATION RULES Since data mining is a process of discovering useful and interesting knowledge [ 101, this paper explores the application of association rules [ 1 11 in finding the relationship between the input and output space. In other words, we proposed to use an association model to discover knowledge that exists in the relationship between input variables for the inference of the output variable. Such knowledge will be used for extracting the fuzzy rules that best describe the relationship between the input and output.

where X and Yare set ofitemsZ= {il,i2, ..., in} ,  such thatXcZ, YcZ, and X n Y # 0. Each association rule X=> Yhas a confidence, c. if c% of transactions in a database that containXalso contain Y.

The support, s, of a rule X=> Y means s% of transactions in the database contain X U  Y. Association rules can provide useful information about a database that cannot be done by using SQL.

However, the algorithm for finding the association rules may be time consuming if it requires multiple passes over the available data [lo]. In this paper we make use of a faster algorithm [12], which uses only two full scans to find the association rules. As this algorithm is normally used to find association rules from categorical attributes, it is modified with the concept in [13] to use for quantitative attributes for this fuzzy rules extraction technique.

An association rule can be expressed as X =>  Iv. FUZZY RULES EXTRACTION A. Clustering Output Space In a given data set, with k inputs, the given input-output  data pairs with n patterns are:  ( x i  , x; , x; , . . ., x; ; y i ) (5) where i = 1,2,3, ... n     137 3  For our application, only one dimensional output projection is , used. The assumption made here is one output neuron represents one cluster.

After all the unsupervised learning of the self-organising neural network has been completed, the min-max values of the data in the cluster c are used as the boundary values of the class:  Itemset support { <Age: 20..29> } 3 { <Age: 30..39> } 2 { <Married Yes> } 3 { <Married No> } 2 { <NumCars: O . . P  } 3 { <Age: 30..39> }, { +kried: Yes> } 2  where I=I ,  2, 3 ... i , and i, = the number of data in c cluster  B. Finding Association in Input Space  C. Determining Fuzzy Memberships  Until this stage, all the clusters we have obtained are crisp clusters with only upper Uand lower L values, and association rules that look like the following.

<Temp: 35..39> and <Wind speed 0..10> => <Weather: h o e  Before the information from the output cluster can be used In stage, all the crisp have to be converted to fuzzy membership sets. Only triangular membership functions in this stage, they need to be converted to a label B  are used as a start because they are less computationally complex and are used widely in real-time implementations. In most fuzzy inference system with fuzziness crossing at 0.5 i- cut, the values cutting below 0.5 become less and less true in that fuzzy set. Here, we propose the conversion as follows.

=> B, (8)  In this case, equation (5) can be re-written as:  [ x : , x i , x :  ,..., x;;B,(y')] (9) Refer to Fig. 4 for notations used.

where i = 1,2,3, . . . n  The first step of searching association rules is to find the appropriate partitions and the number of intervals. The equi- depth partitioning is used, as it is optimal for partial completeness [ 131. The number of intervals in the partition is determined as follows.

The properties that use to decide the number of intervals are based on the rule of partial completeness level, K. It is known that the minimum confidence must be set to 1/K times the desired level to guarantee that close rules will be generated.

The number of intervals required can be calculated by the formula:  Fig. 4. Notations used in the fuzzy set  The lower boundary value of the cluster is assigned to the (10)  where k is the number of quantitative attributes,  2k No. of Intervals=-  m(K -1) point where the left flank cuts at 0.5 Ccut, HLF?

m is the minimum support (as a fraction) specified HLF= L (1 1) by the user,     137 4  It is the same for the right flank of the fuzzy membership function. The point where &cut is 0.5 HRF is assigned to the upper boundary value of the cluster  For the left flank and the left core of the trapezoidal membership function, it takes the values of the left flank and the left core of the triangular membership function of AI :  H W = U  (12) LFTP = LFAl (16)  The core of the fuzzy membership function is taken as the LcTP =CO,, (17) average of the upper and the lower boundary values:  For the right side of the trapezoidal membership function, it can be calculated similar to the left side by taking the m + H R F  2 CO = (13) information from the A 2  instead of A I :  Then the left and right flanks of the fuzzy membership RFTP = RF,,  function finishes at the following points: RCTP = CO,, (19)  LF = HLF - (CO-HLF) (14)  RF = HRF + (HRF -CO) v. ILLUSTRATION EXAMPLE An illustrative example is used to demonstrate the  applicability of the proposed fuzzy rules extraction technique.

The nonlinear two input one output system with the following equation was used. The nonlinear function is shown in Fig. 6.

D. Constructing Fuzzy Rules F~~~ the association rules and the membership functions  constructed in the previous two stages, we can construct the following relation: y = (1+x;? +x;l.5)2 , 1 I 3 , x, I 5 (20)  A, ( x : )  = A&;) =BW?)  (16)  From the above relation, a fuzzy rule can be constructed as:  i fxl  is AI and x2 is A2, then y is B.

However, the fuzzy memberships that are found to be next to each other can be merged to form a trapezoidal fuzzy membership function. Both trapezoidal and triangular functions have the same computational efficiency and are commonly used in most real time applications. The triangular fuzzy membership function can be merged to form a trapezoidal function as follows, and shown in Fig. 5 .

Fig. 5. Merging neighbouring membership functions  Fifty data points were used to extract the fuzzy rules to model the above nonlinear system. First the self-organizing neural network was used to cluster the outputy. It was started from 4 clusters and then incremented one at a time. The increment was stopped when the minimum support for a cluster was 10% and the maximum support for a cluster was 30%. This meant stopping at 5 clusters in this example.

When looking for association rules, the minimum support was set to 20%, minimum confidence level to 25% and the maximum support to 30%. The K value was selected to be 5 .

The number of partitions was then calculated as 5.  Association rules were then extracted from the data.

Fuzzy membership functions were constructed based on the merged partitions, if there were any. With the association rules and the membership functions, a total of 14 fuzzy rules were constructed. The 14 fuzzy rules extracted are shown in Fig. 7.

Correlation factor and mean square error were used to measure the accuracy of the fuzzy model. The correlation factor is 0.887 and the mean square error is 0.253. The output plots of the predicted results and the actual output is shown in Fig. 8, and their cross plot is shown in Fig. 9. This model is considered to be a reasonably good model of the original nonlinear system based on equation (20). If some forms of parameter identification can be incorporated, the accuracy will be improved further. This is out of the scope of this paper.

137 5  ..

1 1  a  Fig. 6. The nonlinear system used for extracting fuzzy rules  4 Y  Fig. 7. Fuzzy model for the nonlinear system with 14 fuzzy rules  ?1  0 0  Fig. 8. Plot of the predicted results (black line) and the actual output (grey line).

137 6  * b  * * 6 ?  6:?. e  ., *  ** *  0 1 2 3 4 6  Fig. 9. Cross plot of the results.



I. CONCLUSION  This paper has shown a technique in extracting fuzzy rules from any available input-output data. It makes use of a self- organising neural network to cluster the output space. Then a data mining algorithm is used to extract association rules that describes the relationships between the input space and the output cluster. Fuzzy membership functions are constructed from the crisp cluster information. With the set of association rules and the fuzzy membership functions, fuzzy rules are then extracted. Our emphasis is put on the rule consequents and then finds an association conceming the premises. This has overcome the major problem of using fuzzy models, which is rule explosion. The size of the fuzzy rules in our technique is not increased exponentially with the increase of input variables and the membership functions. As the time taken by the self- organising neural network and the data-mining algorithm is fast, fuzzy rules can be extracted in a short period of time. Our illustration example has also shown that fuzzy rules extracted by this technique can be used to model nonlinear system with accurate prediction results.

ACKNOWLEDGEMENT  This research is supported by the Australian Research council.

