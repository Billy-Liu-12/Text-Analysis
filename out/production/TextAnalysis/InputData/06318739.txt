Continuous Traveling Time Prediction using Genetic Network Programming-based Data Mining and Neural Networks

Abstract?In this paper, a method combining Genetic Net- work Programming-based class association rule mining and Neural Networks is proposed for continuous traveling time prediction. Genetic Network Programming (GNP)[1], as an extended algorithm of GP[2], shows its advantage because of its graph structures. GNP is used to generate class association rules[3]. Then, the average matching degree of the data with the rules is calculated. Lastly, the back propagation algorithm of Neural Networks[4] is utilized in order to acquire the concrete prediction of the traveling time.



I. INTRODUCTION  Traffic prediction of road networks has always been an interest of industrial society. There are a lot of subjects in traffic prediction, such as traffic volume, time, density and speed. Traveling time is studied for traffic prediction in this paper for the reason that it could directly help the routing search. However, traveling time prediction is a difficult work, since the traffic situations may be quite different at different time points even in the same section. Thus, some research focus on the technique of discretizing traffic density[5] before conducting prediction. In that case, the traffic density could be described as Low, Middle and High, while in the proposed method, the traveling times of sections are discretized.

A lot of existing works make efforts for prediction based  on only one road section, where the upstream and down- stream information of the section are collected by detectors.

After that, historical patterns could be used for these models of predictions. The limitations of these models are that they may not be able to learn the whole traffic dynamic patterns well, and predictions for longer time ahead are not satisfying.

An important characteristic of the proposed method is that various sections are used for predicting one section. In this case, traffic patterns are available for mining the traffics even when predicting traffic situations of longer time ahead is expected.

In this paper, firstly GNP individuals are evolved to  generate time related class association rules with high quality, where the past data of the various sections are mined in order to obtain the useful information or patterns on the section to be predicted.

Then, neural networks are employed to predict the con-  tinuous traveling time, where the average matching degrees are used as the inputs of neural networks, while the traveling time is predicted from the output.

The unique point of this method is that the sections used for the inputs of neural networks are determined optimally by the rules obtained from the evolution of GNP, while in the conventional methods using neural networks, they are predefined.



II. GNP-BASED DATA MINING  A. Genetic Network Programming  GNP is an extension of GA[6] and GP. One of the out- standing characteristic of GNP is its directed graph structure which brings the ability of generating partially observable Markov decision processes. Basically, GNP includes three kinds of nodes, i.e., start node, which defines the first node to be examined, judgment nodes which are usually if-then type logical decision making functions, and processing nodes which actually define action functions.

When looking into a GNP individual, as it is shown in  Figure.1, firstly start node defines the beginning of the pro- cess. Then, the node connected to the start node is executed to check the condition or running the function which depends on the node type. There will be ending conditions like time delays threshold, number of checked judgment nodes and so on.

Fig. 1. GNP structure and the gene of nodes  Figure.1 also shows the genotype of a GNP individual.

??? defines the type of the node. ??? is its identification  SICE Annual Conference 2012    August 20-23, 2012, Akita University, Akita, Japan    PR0001/12/0000-    ?    400 ?2012 SICE    1763-1763-      number. ?? means the time delay needed for the node. ??? and ??? are the the nodes connected from the ?th branch of node ? and the time delay needed to transfer from the ?th branch of node ? to node ??? , respectively.

B. Preparation of Data  Discretization of the traveling time in the database is adopted so that the traveling time of each section should be described as Low (?), Middle (? ) or High (?). However, unlike the traffic density, volume or speed, which could be discretized with the same standard for different sections, the traveling time of different sections could not be discretized with one standard. This is because the long traveling time does not necessarily mean busy traffic, especially when the section being considered is quite long, and vice versa. The traveling time of various sections differs since some sections are short, while some others are quite long. For this reason, the real traveling time is not reasonable for discretizing the traveling time. Considering this point, Relative Traveling Time is proposed, which is defined by  ??? (?)? = ?????? (?)? ??? (?)  , (1)  ??? (?) = ??????(?)  ?????(?) , (2)  where, ??? (?)? : relative traveling time of section ? at time step  ? ?????? (?)? : real traveling time of section ? at time step ? ??? (?) : normal traveling time of section ? ??????(?) : the length of section ? ?????(?) : the limiting speed of section ?  The relative traveling time(RTT) describes how busy the section is, and all sections in a map could be treated in the same way by RTT for generating rules, which will be explained in part D.

After real traveling time is converted to relative one as  shown in Table I where, the relative traveling time of attribute ?1 and ?2(corresponding to section ?1 and ?2) at time step 0, 1, 2 and 3 are described, discretization is conducted.

Since there are three classes(?, ? and ?), one attribute is expanded to three attributes of which only one is set at 1, while the other two are set at 0 according to the discretization threshold. In Table I and Table II, a time step means a time interval which could be one minute or else. The thresholds for discretization for all sections are predefined before rules extraction. After discretization for the relative traveling time, each section is viewed to be Low (L), Middle (M) or High (H).

C. Time Related Class Association Rule  Let ??(?)(? = ?) be the ?th attribute (?th section) in the database at time step ?, whose value is 0 or 1. 1 means ??(?) happens at time step ?, while 0 means ??(?) does not happen. ??(?) is ??(???) / ??(??????) / ??(????)  TABLE I DATABASE BEFORE DISCRETIZATION  Time step ?1 ?2 0 1.5 3.7 1 2.3 2.4 2 0.8 1 3 4.1 1.9  TABLE II DATABASE AFTER DISCRETIZATION  Time step ?1 ?2 ?1(?) ?1(?) ?1(?) ?2(?) ?2(?) ?2(?)  0 0 1 0 0 0 1 1 0 1 0 0 1 0 2 1 0 0 1 0 0 3 0 0 1 0 1 0  Middle threshold=1.2; High threshold=2.5;  . The form of the time related class association rule is like: (??(?)(? = ?) = 1) ? ? ? ? ? (??(?)(? = ?) = 1) ? (??(?)(? = ?) = 1) , ? ? ? ? ?, and the first ? is set at 0.

The left side of the rule denoted by ? is called antecedent part of the rule and the right side of the rule denoted by ? is named consequent part of the rule. Thus, the form of the rule is like ? ? ? . In the proposed method, ???????, ?????????? and ?2 values are used as measurements to select the rules. Suppose, there are ? tuples of data in the database that satisfy ? and the total number of tuples is ? , then, ???????(?) = ?/? , where ??????? indicates how often the antecedent part occurs. Meanwhile, as the strength of the rule, ?????????? is used, which is calculated by ???????(?  ? ? )/???????(?) . If ???????(?) = ?,  ???????(? ) = ? and ???????(? ? ? ) = ?, then ?2 is  obtained by  ?(? ? ??)2 ??(1? ?)(1? ?) . (3)  If the support, confidence and ?2 values of a candidate rule are larger than their thresholds predefined, the candidate is considered to be a good rule. How to generate candidate rules will be explained in the next part. Here is an example of the rules, (?1(?)(? = 0) = 1) ? (?2(?)(? = 1) = 1) ? (??(?)(? = 4) = 1). Figure.2 shows what it is like in the database. When checking the database for rules, not only the attributes are checked one by one, but also the time steps of each attribute are considered.

D. Rule Mining using GNP  GNP individuals are used to extract rules. The aim of evolving GNPs is not to obtain the elite individual, but to obtain more rules with high quality. Initially, attributes of the database(sections of road networks) are randomly selected as the judgment nodes of all the GNP individuals. In each generation, when extracting the time related class association rules using GNP individuals, each node representing an attribute is checked with the database.

Figure.3 shows the transition process. If the judgment node  is satisfied, the count of this attribute will be added by 1 and  -1764-      Fig. 2. Class association rule in database  Fig. 3. Transition of checking attributes and rule extraction  the next judgment node is checked until the transition moves to a processing node, which is responsible for calculating the measurements of the rules after the whole database has been checked, i.e., ???????, ?????????? and ??????????? values are checked using the counts of the checked nodes, otherwise go to the next processing node. Along with the evolution of GNP individuals, expected number of rules with high quality are extracted and stored. Since each section is discretized into three classes, three rule pools for each section are built to store the rules. Each rule pool keeps a predefined number of good rules for different classes (Low, Middle, or High). The rules are used for the average matching degree calculation which will be explained in the next section.

Here, good GNP individuals should include the rules with  strong association or corelation between attributes. Thus, the fitness function of the GNP individuals is defined as follow:  ? = ?  ??? {?2(?) + 10(?????(?)? 1) + ????(?) + ?????(?)}.

Where, R : set of suffixes of rules which satisfy the requirements  of support, confidence and ?2 value ?2(?) : chi-squared value of rule ? ?????(?) : the number of attributes in the antecedent part of  rule ? ????(?) : constant reward for a new rule ? ?????(?) : constant reward for rule ? with many different  attributes ?2 value, ?????, ???? and ????? represent the corelation,  complexity, novelty and diversity of a rule respectively. In the early generations, it may not be easy to extract rules which satisfy all the measurements. However, along with the evolution of GNPs, individuals showing higher fitnesses will be selected so that positive information could be maintained.

This is followed by crossover and mutation operations on the selected GNPs so that new information is imported, which brings exploration. When GNP individuals could get higher fitness, it means that it is more likely for GNPs to generate interesting rules.



III. CONTINUOUS TRAVELING TIME PREDICTION USING NEURAL NETWORKS  A. Calculation of Average Matching Degree  In the proposed method, neural networks are employed to predict the continuous traveling time. The inputs of the networks are the average matching degrees of data with the rules in each class of each section. The average matching degree is calculated as follows:  ??(?) =  ???? ?  ???? ??????(?, ?), (4)  ??????(?, ?) = ??(?, ?)  ??(?) , (5)  where, ??(?): the number of attributes of the antecedent part of  rule ? in class ? ??(?, ?): the number of matched attributes with data ? of  the antecedent part of rule ? in class ? ??: set of suffixes of rules in class ?  The average matching degree shows how much the current data matches the rule set of a specific class, which describes the traffic patterns of each section.

B. Training Neural Networks with Back Propagation  Back propagation algorithm in neural networks is used because it is a powerful tool for this prediction problem, where the explicit relationships or mappings between inputs and outputs are not known. Another important reason for using neural networks is that they could provide continuous outputs for the combination of the average matching degrees of the data with rules, which is a very unique point compared with other traffic prediction models. The data used for neural networks are described in Fig.4:  -1765-      Fig. 4. An example of data used for neural networks training  where??(?) is the average matching degree of data ? with the rules in class ?. In Fig.4, z axis is the relative traveling time, while x and y axes are the matching degrees of data ? with the rules in different classes and ?? shows the training data. In Fig.4, ?1(??) and ?2(??) are the inputs of neural networks, while the traveling time of ?? is regarded as the teaching signal of neural networks.

Fig. 5. Training neural networks  Figure.5 shows the simple structure of the neural network and how training data is used. Since the number of inputs is determined by the number of classes of the section, three nodes are designed in the input layer, and each of them keeps the matching degree of ?? with the rules of the corresponding class. ??, i.e., the ?th data used for the training includes the data from time step 0 to ?. Thus, in fact, the information before time step ? ? ?? is used for matching with the rules and making prediction, where ?? means the prediction steps.

One hidden layer is enough for solving this problem since one neural network is designed only for one section. The output node is responsible for providing historical real time  value in order to train the neural network, so the value of the traveling time of attribute ? to be predicted in time unit ? is sent to the output node as the teaching signal.

C. Prediction using Neural Networks  After the neural network is constructed and trained, it could perform prediction. As is shown in Figure.6, the current data is retrieved from the database, and the aim of using the neural network is to predict the traveling time of the section ?? time steps later. Firstly, the rules extracted by the rule mining is utilized together with the current accumulated data ???????????? to calculate the average matching degrees, which describe how much the traffic situation is like the three classes of ???,?????? and????. Then, the average match- ing degrees are sent to the input nodes of the trained neural network, from which the prediction is obtained. There should be a memory that the traveling time generated is a relative one, hence simply multiplying the generated traveling time by the normal traveling time of this section could give the real traveling time for prediction.

Fig. 6. Predicting the traveling time ps time steps later

IV. SIMULATIONS  In this part, the effectiveness and novelty of the proposed method will be shown together with the simulations. The proposed method aims at not only predicting the levels of traffic situations, but also giving the accurate traveling time.

The time related class association rule mining ensures the traffic level or state of the section, while neural networks provide the concrete prediction for the traveling time of the section based on the traffic level of the section. The training and testing data are obtained from the traffic simulator SOUND/4U[7]. More than 9000 sections are included for extracting the rules.

A. Simulation Conditions  The parameters of GNP-based time related class associa- tion rule mining are shown in Table III. 100 individuals are included in one generation, and one quarter of them are se- lected in each generation to perform crossover and mutation,  -1766-      Fig. 7. Predictions of three different sections  TABLE III SIMULATION CONDITIONS  Parameter Value Generations 50 Individuals in each generation 100 Size of selection 1/4 Rate of crossover 0.3 Rate of mutation 0.05 Maximum antecedent attribute number 5 Prediction steps 10 Number of classes 3 Rules in each class 50 Nodes of hidden layer 30  i.e., mutation of judgment node functions, time delays and connections. For all the rules, at most 5 antecedent attributes are allowed and the prediction time step is 10. Each section owns 3 classes, i.e., Low, Middle and High, each of which collects 50 rules.

Currently, a three layer neural network with one hidden  layer is adopted. The number of nodes in hidden layer is 30 for the sake of avoiding overfitting, which is caused by overusing training data.

B. Simulation Results  Several representative sections are presented to reveal the prediction ability of the proposed method. Figure.7 shows three different kinds of sections, i.e., an inactive section, a normal section and a crowded section, all of which give  their predicted outcomes in pink points, while the expected traveling time is represented in blue points. The inactive one shows the best performance, this is because there are only a small number of cars in this section and the influencing sections and patterns on this section are easily obtained by the model.

When the traffic gets large, like the case depicted in  the second one, the proposed method could provide good predictions since most of the predicted values and target values are almost the same. However, in a crowded traffic situation which means not only the traffic volume is vast, but also the uncertainties take place very often, the prediction could only follow the trend of the target points, as shown in the third one.

Figure.8 and Figure.9 show the effectiveness of the predic-  tion in the matching degree space under a normal section.

The upper one shows the target traveling times which are expected, while the second one shows the predicted traveling times produced by the neural network. It is obvious that the distribution of the prediction is reasonable since three classes are clearly divided, what is more, the exact continuous traveling times are generated.



V. CONCLUSIONS  A new method combining GNP-based class association rule mining and neural networks is proposed in this paper to obtain the continuous exact traveling time of each section in road networks, which could help the route searching.

-1767-      Fig. 8. Distribution of target data in the average matching degree space  Fig. 9. Distribution of predicted data in the average matching degree space  It is a unique extension of the conventional GNP-based rule mining method which only provides the levels of the traffic situations. On the other hand, it also differs from many neural network methods aiming at traffic prediction, which makes use of various contributing sections to find the relationships between attributes and makes prediction. The proposed prediction model is believed to be more powerful and efficient.

