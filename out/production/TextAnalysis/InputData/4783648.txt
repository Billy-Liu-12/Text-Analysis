Mining Double Association Rules on Temporal Dataset

Abstract  This article mainly researches mining questions of association rules in temporal data. A fundamental structure for double association rules mining is proposed, based on temporal dataset, to define the main notion used in temporal knowledge discovery in a formal way. The relevant properties of the notion are proved A data structure, hash table based on the double linked list will be used for the storage of the temporal data. According to the notions of the time- model, a double association rules mining is developed We also have proposed that a kind of algorithm, and analyses about the result ofthe algorithm.

Keywords: Double Association Rules, Temporal Dataset, Time-Model, Hash Table.

1. Introduction  Data mining [1] researches the process of extracting implicit, previously unknown, and potentially useful information from large quantities of data. With the explosion of the current data, large datasets in electronic form than at any time heretofore. Various techniques have been employed to convert the data into information, including clustering, classification, regression, association rule induction, sequencing discovery, and so forth. We pay more attention to the temporal data to avoid processing huge data in real database. New knowledge discovery from temporal databases is a popular task in data mining.

Association rules mining [2] is identified as one of the important problems in data mining. Let us first define the problem for a database containing a set of transactions, where each transaction contains a set of items. An association rule has the form of where and are sets of items. In such a rule, we require that the frequency of the set of items is above a certain threshold called the minsup. The frequency (also known as support) of a set of items is the number of occurrences of in, or the number of transactions in that contain. The confidence of the rule should also be above a threshold. By confidence we mean the probability of given.

Following the original definition by Agrawal et al [2] the problem of association rule mining is defined as:  Let I =ji i2,..jni be a set of n binary attributes called items. Let D = t1,t2,...,tm} be a set of transactions called the database. Each transaction in D has a unique transaction ID and contains a subset of the items in I. A rule is defined as an implication of the form X>Y where X,Y5I and XnY=0 .

The sets of items (for short itemsets) X and Y are called antecedent (left-hand-side or LHS) and consequent (right-hand-side or RHS) ofthe rule.

Time is also an important factor in real databases.

We should extract useful information under the strict application of temporal database. So we also present a temporal relation model restricted within time limits.

The enterprise need to analyze the amount of data to form an exact estimation of customs' purchase power during a particular period of time.

Based on the positive association rule and the notion of the time-model, we propose a new kind of one called double association rule. It denotes a strong association among data in the temporal database.

2. Problem definition  2.1. Temporal relation  Temporal relation [3] is described as a relation involving time. As the application of the relation database grows, it's important for us to get more information in each period of time. So we present the temporal database which is a database with built-in time aspects, e.g. a temporal data model and a temporal version of structured query language.we consider it as a series of snapshots which can be treated as the traditional relation database.

Considering a relation pattern as follows: EMP = {Name, Dept, Sal, Valid} Names, Dept and Sal are all the classical attributes,  while Valid is the other kind with the domain of [d1-d2].

So the triple on EMP is described as follows:  Kx,y,z, [di - d2 ]) We can express that a person named x works in the  department y with a salary of z. The relation which consists of this kind of triple should be called temporal relation.

978-1-4244-2020-9/08/$25.00 02008 IEEE  - 543 -    2.2. Time-model  The sequence of natural number can be used for the denotation of time. N= {1,2,... }. Every element in N is a time spot, while time is disperse and liner. And then the element can be treated as second, minute, hour, day, week, month, and year etc. In a general way, we consider the element as the "day".

Definition 2.1. Let IJ5 N, I?(&J={(i,j) i I, je J,i< j} (forever) = N ?N  (present) ={(i, i) iE N} Any subset of <forever> is temporal relation and N  is radix. So, we can see that <forever> and <present> are all temporal relation. In addition, 0 is also a temporal relation. We can define week, month and year as follows. For example, let 1=Monday, 2=Tuesday ...

(1, 1),(1, 2),...(1,7), (2,2),(2,3),...(2,7),  (week) =  ......

(6,6),(6,7), (7,7) (8,8) (8,9),...(8,14), (9,9) (9,10),...(9,14), .... J  Definition 2.2 More specifically the temporal aspects usually include valid-time and transaction-time.

These attributes go together to form bi-temporal data.

Valid-time denotes the time period during which a fact is true with respect to the real world. Transaction-time is the time period during which a fact is stored in the database. Bi-temporal data combines both Valid and Transaction Time [4].

Given a temporal instance T, T, is valid on the time i.

so T, reflects valid-time instead of transaction-time. We can set T,=T,+1, when there is no change from i to i+1.

Double association rule Based on the positive  association rule we propose a new kind of rule which is called double association.

Definition 2.3. Following the notion of positive association rule and time-model the problem of double association rule is defined as:  Let I ={i1, i2, ..., in} be a set of n binary attributes called items. Let D = t1,t2,...,tm} be a set of transactions called the temporal database. Each transaction in D has a unique transaction ID and contains a subset of the items in I. A temporal rule is defined as an implication of the form X od Ywhere X,Y I , XrnY=0 andddenotedasatime spot with the value of [ds-de]. s, e= 1,2... The sets of items (for short itemsets) X and Y is called antecedent (left- hand-side or LHS) and consequent (right-hand-side or RHS) of the rule. It is called double association rule  when X =>d and Y =>d X show up at the same time. We consider the rule which has the form of X rd Y as the double association rule.

Now we give an example to explain this notion.

Somebody bought the merchandise X before the merchandise Y. There is just a record that somebody bought the merchandise X after the merchandise Y. It is called double association rule.

2.3. Temporal relation table  A ternary, three-valued or trivalent logic (sometimes abbreviated 3VL) is a term to describe any of several multi-valued logic systems in which there are three truth values indicating true, false and some third value.

This is contrasted with the more commonly known bivalent logics (such as Boolean logic) which provide only for true and false [5].

As with bivalent logic, truth values in ternary logic may be represented numerically using various representations of the ternary numeral system. It mainly illustrates a system of ternary propositional logic using the truth values {false, unknown, and true}, and extends conventional Boolean connectives to a trivalent context.

Table 1 shows a truth table showing the logic operations for Kleene's logic.

Table 1. Truth table I T I 1I I\q PvqI )T  FF T F F T T FF iT T F T T T T T T  I IT~~~~T FTF T u  U T u T T UI1 T (7 tx T u; u  uZ = ;S U~~(j' According to the Kleene's logic, we propose a  temporal relation table as follows: Table 2. Temporal relation table p>tq q tp pIPt-q  T T T T F F F T F F F F T U U F U U U T U U F U  . . __L . __~lhe representation otT is true, unknown.

Ii -s talse, and U is  3. Mining double association rules  3.1. Analyze and sort  Given a purchase basket as follows:  - 544 -  -1-1- I -1 T T '-    Table 3. Purchase basket TID Tranc-time Items TI 2008-03-05 3,7 TI 2008-03-25 1 TI 2008-03-30 6 T2 2008-03-10 6 T2 2008-03-15 7,8 T2 2008-03-20 1 T2 2008-04-15 3,6,8 T3 2008-03-04 1,7,8 T3 2008-03-25 4,5 T3 2008-03-30 3 T4 2008-03-12 3 T4 2008-03-23 4,5 T4 2008-03-30 5 T4 2008-04-05 3,5,7 T5 2008-03-12 1,3 T5 2008-03-20 2,5 T5 2008-03-30 4 T5 2008-04-30 5,8  According to the notion of temporal relation, we denote <month>. Let 1=2008-03-04, 2=2008-03-05...

and so on. We only need the time from 2008-03-10 to 2008-03-30. so the valid time d is during [7,27]. The simple convert like what Table 4 shows.

Table 4. Simple convert form TID Items TI 22 1 TI 27 6 T2 7 6 T2 12 7,8 T2 17 1 T3 22 4,5 T3 27 3 T4 9 3 T4 20 4,5 T4 27 5 T5 9 1,3 T5 17 2,5 T5 27 4  In this database, the primary key is custom id which is also called TID. We make the sort according to the order of d, grouping by TID.

3.2. Find the 1- frequency itemsets  Supposed the support is 2, shows as follows:  1-frequency itemsets  'Iable 5. t'requenc utemsei Itemsets Support Index  (1) 2 1 (3) 3 2 (4) 3 3 (5) 4 4 (4,5) 2 5 (6) 2 6  Is  we snould apply tte classic cata mmmg method, such as Apriori, FP-tree etc. to find the frequency itemsets in this step.

3.3. Transform  Then we convert TID sequence into big itemsets sequence [6]. Notice that the item in the sequence has an order. It is up to the time when the customer purchases the merchandise. The result is shown as follow:  Table 6. Big itemsets sequence TID Seq Mapping TI {(1)},{(6)} {1}{6} T2 {(6)},{(1)} {1}{6} T3 {(4,5)},{(3)} {3}{4,5} T4 {(3)},{(4,5)},{(5)} {3}{4}{4,5} T5 {(4)} {4}  Notice that T5 has only an item in its sequence, so we remove the T5 from the big itemsets sequence. Ifwe want to mine the double association rules, we should order the table 6 according to the first item in the sequence.

Table 7. Big itemsets sequence after ordering TID Seq Mapping TI {(1)},{(6)} {1}{6} T4 {(3)},{(4,5)},{(5)} {3}{4}{4,5} T3 {(4,5)},{(3)} {3}{4,5} T2 {(6)},{(1)} {1}{6}  3.4. Temporal relation sequence  3.4.1. Fill the TRT  After the last step, we introduce the temporal relation table (TRT) to record the double association rules. It is initialized with U, which represents unknown.

Table 8. Temporal relation table p q P=dq q %d P p <'d q (1) (6) U U U (3) (4,5) U U U (3) (5) U U U  (4,5) (3) U U U (6) (1) U U U  3.4.2. Hash table  We use a modified Hash table to store the itemsets.

In computer science [7], a hash table, or a hash map,  is a data structure that associates keys with values. The primary operation it supports efficiently is a lookup: given a key (e.g. a person's name), find the corresponding value (e.g. that person's telephone number). It works by transforming the key using a hash function into a hash, a number that is used as an index in an array to locate the desired location ("bucket") where the values should be.

We introduce a new data structure - a Hash Table combined with Double Linked List [8] to store our temporal datasets.

- 545 -  -4-1- -1Al T- -1 _-1    = 4,-*1 11-> 45 --1-- *5 A  Figure 1. Data structure As is shown in the figure 1, it is said that {(3),(4,5)}  and {(3),(5)},excluding {(4,5),(5)}. Because this kind of structure only represents the relationship among the first node and the others which follow the first one.

So we can record the result in the TRT, if the nodes linked each other for each bucket.

4. Algorithm DMTAR  We propose an algorithm DMTAR as follows: Algorithm: DMTAR.

Inputs: Temporal Database :D, Minimal support :minsup.

Outputs: Temporal Relation Table Set :TRT.

Steps: 1. Initialize: Generate frequent sequences:FSeq for each TID;  2. Fseq(tid)={lf f2 ...fk},fk = (xI,X2,...Xi,-.),xi = 0,1 3. ffr(i=p ,i<sTIDn,i++)t 4. p=Fseq1 (tid); 5. if (p is not in the Hash) 6. p=header.next; 7. for(k=2,k<jFseq(tid)l,k++) { 8. q=Fseqk (tid) 9. if (q <>header.next) { 10. q=p.next; 11. add pn, q= T into TRT} 12. else if(q.next includes p) 13. then add q r p=T into TRT; 14. } 15 } 16. return TRT;  5. Conclusion and further work  In order to prove the correct of our algorithm DMTAR, we conduct an experiment with the simulate database. Our experiments are performed on Pentium(R) 4, CPU 2.93GHz, 1.00GB, windows XP, Eclipse 5.0.

There are 400 records in the simulate temporal database.

Supposed the minsup is 30. We mined 143 double association rules with our algorithm DMTAR.

This paper introduces a new kind of association rules called Double Association Rule under the temporal database. And it also presents a data structure - a Hash Table combined with Double Linked List to  store the temporal datasets. At last, we give an algorithm DMTAR to solve this problem.

This kind of analysis is very useful especially in our temporal database according to the double association rules. The resulting rules are supposed to be actionable.

The user can establish some predictions and eventually launch prevention operations.

Because our method aims for a new pattern, there must be more appropriate algorithms should be proposed. The further steps should also take up with the more practical research.

Acknowledgement  We'd like to thank the National Natural Science Foundation of China under Grant No.60673130 and the Natural Science Foundation of Shandong Province of China under Grant No.Y2006G29, No.Y2007G24, and No.Y2007G38 for their funds. Part of the research was supported by Young Scientists Reward Foundation of Shandong Province under Grant No.2005BS01002, Key Technology R&D Program of Shandong Province under Grant No.2005GG3201088, No.2007GG100010--09 and Science and Technology develop Program of Shandong Province under Grant No.2006GG2201052.

