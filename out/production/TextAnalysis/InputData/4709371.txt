Personalized Instructing Recommendation System Based on Web Mining

Abstract   A novel Personalized Instructing Recommendation  System (PIRS) is designed for Web-based learning.

This system recognizes different patterns of learning style and Web using habits through testing the learning styles of students and mining their Web browsing logs.

Firstly, it processes the sparse data by Item-Based Top-N recommendation algorithm in the course of testing the learning styles. Then it analyzes the habits and the interests of the Web users through mining the frequent sequences in the Web browsing logs by AprioriAll algorithm. Finally, this system completes personalized recommendation of the learning content based on the learning style and the habit of Web usage.

Experiment shows that the recommendation model, proposed in this paper, is not only satisfied with the urgent need of the users, but also feasible and effective.

Key words: Learning Style, Web Mining, Personalized Recommendation, AprioriAll Algorithm.

1.  Introduction   With the popularization and rapid development of  the Internet, Web-based learning has become a new trend for its freedom in time, space and its convenience in collaboration learning. However, with the explosive growth of the information on Web, the Internet is flooded with is tremendous ?trashes?. The students do not know what to do while facing the miscellaneous information. So there is urgent need to the system to filter and recommend the information, which meet the need of the students.

There are many systems of personalized recommendation based on data mining technology at present. These systems mainly adopt three approaches for recommendation. Firstly, the systems combined the users? rating of the learned content and their personal information to carry out collaborative recommendation, such as literature [1]. After rating of Web pages made by students, the system gives recommendation to the students who share nearly the same interests based on their similar age, major and knowledge structure.

Secondly, the systems offered recommendation according to the content based on information filtering,  such as Personal WebWatcher[2], WebPersonalizer[3], GroupLens[4] and SiteSeer[5]. They offered recommendation using the similarities between the sources and the users? interesting, as well as the similarities among the users? personal information.

Thirdly, the systems gave recommendation according to the user?s sequences of accessing website. For example, WUM (Web Utilization Miner)[6,7] mined the sequential pattern of Web log, which provided a integrated environment including log preparation, pattern inquiry and visualization interface.

WebMiner[8] put forward a popular architecture of Web logs mining to find association rules and sequential patterns from Web log automatically, which adopted a usage pattern mining technology including route analysis and association rules mining.

This paper proposes a method to test learning style through the psychology scale. By the reason of he sparse of collected data, it uses collaborative filtering algorithm based on item rating prediction to fill in the score of un-rated items, so as to evaluate the students? learning styles as correctly as possible. Moreover, the system collects Web logs of different students to form a series of accessing sequence sets according to their learning styles. AprioriAll algorithm was used to find frequent sequences of these sets to obtain Web usage patterns of different learning style students. Hence, real time recommendation can be made to provide student possible Web pages of later click to improve their learning efficiency.

This paper is organized as follows: Section 2 is about the Architecture design of personalized instructing recommendation system. The realizing steps of PIRS is involved in Section 3. Section 4 describes the recommendation system and analyzes experimental results. Section 5 summarizes the paper, explains the existing problems and proposes the feasible solutions.

2. Architecture of PIRS   A new design framework should be adopted in the  mining process according to the architecture of WWW and the characteristics of E-learning. The author constructs a student model through mining behavior of students? browsing records (recorded in server?s logs)   DOI 10.1109/ICYCS.2008.115     and analyzes the learning styles of the students, shown in figure 1. When students register to the Website, their learning styles need to be tested firstly. There are always many un-rated items in psychology scale. PRIS uses the collaborative filtering algorithm based on item rating prediction to predict items? score which have not been rated, and then obtains the certain kinds of the students? learning styles after calculating the total score.

User brower  Collaborative filtering  pridicting un-rated items  Learning style  Testing learning style  Web server  Web log  MFR AprioriAll  Mining Frequent Sequences  User model data  Patterns Database  Personalized recommendation system  Log in  Recom m  endation  Register   Figure 1 Architecture of PIRS   When students login and browse the website, their  access paths are recorded in Web server in the form of Web logs. For the purpose of filtering the noisy information, students? access paths are pre-process to the Maximal forward reference paths (MFR). Then, AprioriAll algorithm is used to mine frequent sequences of Web logs. Separating frequent sequences by learning styles, the system get individual interested model according to the learning styles. Web access pattern database records frequent sequences associated with the learning styles, which provides for personalized recommendation module later. If students? access paths match the prefix of the frequent sequences belonging to their learning styles, the web pages which correspond to the later part of the sequences can be selected as recommendation web pages.

3. Implementation of PIRS  3.1. Testing learning style   Learning style is the direction or preference of student?s learning method. It is a specific cognitive, emotional and physiological behavior of the learner, which implies personal learning method of the  students. In order to test the learning style of the students accurately, this paper adopts Solomon?s Style scale and Kolb?s Scale. Because students may not rate all of the items of these two scales, the learning style can?t be tested accurately after summing up the items? scores of the target users.

As shown in figure 2, this paper adopts collaborative filtering algorithm based on item rating prediction to calculate the similarities among items. Hence, the neighbors of every un-rated item are found. The system predicts the un-rated items? scores by their neighbors? scores and the similarities between them. By using item-based collaborative filtering algorithm, the system solves the emerging problems of the sparseness data.

Now, students? learning style can be tested more accurately.

Scale items  Rating or not  Finding neighbors  NO  Pridicting un-rated items  Calculating Scale-Score  Outputing learning style  Yes   Figure 2 Procedure of Testing Learning Style   The students? rates are represented by matrix, as show in figure 3. The first column is the users? name or ID, and the first row is the testing items of psychology scales. Rij represents the score of item-j rated by User-i.

User \ Project Item-1 Item-2 ? Item-j ? Item-m  User-1 R11 R12 ? R1j ? /  User-2 R21 / ? R2j ? R2m  ? ? ? / ? ?  User-i Ri1 Ri2 ? Rij ? /  ? ? ? / ? ? ?  User-n / Rn2 ? Rnj ? Rnm   Figure 3 Data Matrix of Students? Rates   Because of the lack the students? rating on some items, it is very common in the self-learning environment that the psychology scale cannot estimates the students? learning style accurately. Therefore it is necessary to fill the unfinished part of the matrix, which means to rate the un-rated items? scores. The     author accomplishes the rating on the unfinished part by two steps.

1) Calculating the similarities between two items Supposing all of the users U have simultaneously  made the appraisal to Item-j1 and Item-j2, the similarities between Item-j1 and Item-j2 can be calculated by many kinds of arithmetic [11]. This paper uses Pearson-r to calculate, and its formula is shown as follows:  ( )( )1 2, 1 , 2 si ( 1, 2) 2 2( ) ( )1 2, 1 , 2  R R R Rj ju U u j u j m j j  R R R Rj ju U u Uu j u j  ? ?? ? =  ? ?? ?? ? (1)  Where , 1Ru j  denotes the rating of user U on item-  j1, 1R j  is the average rating of the j1-th item.

2) Calculating the un-rated item?s score According to the first step, the top-N most similar  items of un-rated item are obtained. Assuming that user has not rated item-i, the following formula can be used to calculate the unknown score.

( * ), , , ,  ( ), ,  Sim Rall simillar items N i N u N Pu i  Simall simillar items N i N  ? =  ? (2)  Finally, the recommendation system can get the summation of the students? rates on the scale, as well as the type of the students? learning style.

3.2. Pattern Discovery and Personalized Recommendation   Finding out all sets of frequent sequence from learners? access transactions of different styles is one of the main goals of the system to discover the Web using habit, which implies the factors of users? interests. Here, algorithm of AprioriAll is adopted to mine frequent sequences. Detail process of the implementation is described as follows.

1) Searching for frequent sequences After extracting user?s access sequences from Web  log file of the server, PIRS pre-processes these sequences to MFR path. As shown in figure 4(a), the field of Tid represents transaction number, Sid the type of learning styles, Tp the access path in the transactions. After that, AprioriAll algorithm is used to mining frequent sequences according to learning style respectively. Results are showed in figure 4(b), where Ep represents the frequent sequences, which respond to different learning styles.

Tid  T1000 T1001 T1002 T1003 T1004 T1005 T1006 T1007  Sid  S1 S1 S1 S1 S2 S2 S2 S2  Tp  ABCDEFD ACEFG  ABCEFG CEFG  ABCDEF BCADEF ABCEF  BCE  Tid  T1000 T1001 T1002 T1003 T1004 T1005 T1006 T1007  Sid  S1 S1 S1 S1 S2 S2 S2 S2  Fp  ACEFG  BCEF   (a)                                   (b)  Figure 4 Mining Frequent Sequences  2) Algorithm of AprioriAll The first step: is seeking for the frequent sequences.

For every candidate sequence c with length of i, the algorithm carries out the traversal of the transaction database to test whether its support value is greater than the threshold value, min_sup. All of the frequent sequences, which have lager support values than min_sup, constitute the frequent sequence set Li.

For the purpose of finding longer frequent sequences, the algorithm uses these sequences in collection Li to produce new longer sequences with length of i+1, as the candidates of longer frequent sequences. How to produce new longer candidate sequences is described in the second step.

The second step: is connecting step, carrying out  1Lk ? and 1Lk ? connection operation, such as connecting <1,2,3> and <1,2,4> to form <1,2,3,4> and <1, 2, 4, 3> two sequences.

The third step: is pruning step, carrying out the redundancy trim. After two sequences connected together, if any of its contiguous (k-1) subsequence is out of 1Lk ? , this sequence should be deleted.

Specific realization of AprioriAll algorithm is described as follows:  Input: transaction database D, Smallest support threshold value min_sup.

Output: all frequent sequences collection Lk of database D.

L1=find_frequent_items of sequences(D); For ( k=2; LK-1??; k++) {     Ck=AprioriAll-generate ( LK-1, min_sup); For each candidate c?Ck { If c.support > min_sup then  Lk=LkU c; } } Return L= all LK ;   Procedure AprioriAll-generate (LK-1: frequent (k-1); min_sup); For each sequence l1?LK-1; For each sequence l2?LK-1; If (l1 [1]= l2 [1]) ?  (l1 [2]= l2 [2]) ? ? ?  (l1 [k-2]=  l2 [k-2]) ?  (l1 [k-1]? l2 [k-1] )) then { c= l1 ?l2 ; If has_infrequent_subset (c, LK-1 ) then Delete c; Else add c to Ck; }     Return Ck;   Procedure has_infrequent_subset (c: candidate_k sequence; LK-1: frequent (k-1))  For each (k-1)-subsequences of c  If c?LK-1 then  Return true; Else Return false;  3) Personalized recommendation The students of different learning styles have  different sets of frequent sequence. Recommendation can be carried out according to these frequent sequences, which can be implemented as follows:  Recommendation system uses fixed size of sliding window to cover on present user?s access sequence for predicting next operating. Meanwhile, user?s access sequence is continually changing within the sliding window. Assuming that the size of the sliding windows is size 4, user?s present access sequence within the sliding window may be <A, B, C, D>. The next new ones will turn into the sequence of <B, C, D, E>. How can the recommendation system predict E from <A, B, C, D>? It relays on frequent sequence sets of different learning styles. For example, if sequences of <A, B, C, D, X> and <A, B, C, D, Y> are two frequent sequences whose learning style is the same with the user, then X and Y may be recommended to the user.

4.  Analysis of the Experiment Results   In the fall 2007 semester, the system was used for the sophomore students? course of computer organization and architecture, in Hangzhou Normal University of China. After class, students may use this system to learn extra content of the course. By providing recommendation, students can browse Web pages more convenient than before, which meet their need and interesting.

Figure 5 Comparison of Satisfaction Degree   To get subjective evaluation of this system, at the end of the course we administered a non-mandatory questionnaire that collected students' opinions about the main features of the system. Out of 63 students in 2 classes, 60 students filled the questionnaire. After processing the answers, we show the results in figure 5.

From the convenience, it shows that more then 60% of students considered the system improved, meaning that it has help learning. Two principal features of system?s speed and accuracy were evaluated. 63% and 64% of the students are satisfied with the speed and accuracy respectively, but there is no more than 40% students approve the recommendation system when only considering frequent sequence. Students enjoy the Next step recommendation, which greatly reduce searching time in self-learning.

Moreover, more then 50% of students considered the system is adaptive. The recommended information is also renewed as the learning styles are renewed. The students? learning styles are not limited to the only one, which may prefer to some styles more or less. This system carries out many times of testing on students? learning styles, updating the records when they changed.

5.  Conclusions   This paper presents the architecture and mechanism  of the personalized instructing recommendation system.

It has been shown that melting student?s learning style into recommendation strategy is useful to predict student?s next operating. AprioriAll algorithm is used to find frequent sequence of Web access pattern. The system has achieved a remarkable impact on student self-learning. Taking advantage of the system, the students have learned more content and browsed more Web pages they need. The high of the learning efficiency with the system resulted in the larger increase of their knowledge at the end of the course. In the future, technology of student model is worth studying deeply to improve the accuracy of learning style representation. For the sake of change of Web access path, adaptive and incremental mining method should be adopted to improve the system more flexibly.

