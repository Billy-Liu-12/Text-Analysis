? Corresponding Author

Abstract-There are many usages for the web services in the World Wide Web. For creating new services we can compose other developed services in the way we want to use them. The large amount of web services make composing of services a time consuming and impossible job. So to compose services some automated and semi-automated ways were developed.

One of these ways is semantic web services (SWS). In this paper we introduced a method based on association rule mining techniques on web services to find the best composition among possible compositions to improve quality and performance of web service composition.

Keywords- Semantic Web Services, Association Rules, Data  Mining, Web Service Composition, Performance

I. INTRODUCTION Nowadays Web is mentioned as the most popular media  allover the world. The growth of web services amount in the world make them as important part of Web. Some services need to be composed with other services to perform a new process. The large amount of services make composing of services a time consuming and impossible job. So to compose services some automated and semi-automated ways were developed. One of these ways is semantic web services.

SWSs are semantically enriched web services which are used for automation of web service invocation, execution, composition, and monitoring. Using these methods will recommend many compositions for performing a task which are all correct but not the best in accordance with performance. In this paper a new approach was recommended based on data mining techniques. Association rules mining techniques are used on web services log to  improve quality and performance of web services composition.

A. Basic Definitions Now, before describing our methodology and approaches  we should define some important and useful phrases in this sub-section.

Web services: Web services are a new breed of Web application. They are self-contained, self-describing, modular applications that can be published, located, and invoked across the Web. Web services perform functions, which can be anything from simple requests to complicated business processes. ... Once a Web service is deployed, other applications (and other Web services) can discover and invoke the deployed service [1].

Semantic web services: In order to add semantics to the web services, semantic web services (SWS) was introduced.

Semantics can be used for automation of web service invocation, execution, composition, and monitoring. Some approaches are used in SWS like OWL-S, WSMO and WSDL-S [2].

B. Paper Structure In this sub-section the paper structure was introduced. In  section 2 related works are mentioned. Web services composition performance is described in section 3. The next section is talking about web service logging and its types.

Section 5 describes data mining techniques that can be used for web service composition mining. Finally in the last section conclusions and future works are illustrated.



II. RELATED WORKS Noticeable efforts have been made in order to apply data  mining techniques on web services and also to compose web services. In this section some of these approaches are reviewed as related works to our paper. Two important categories are found in these related efforts. First efforts which are related to composition of web services and the second category is about data mining approaches which are applied on web services.

A. Web Service Composition As introduced, web service composition is important in  the WWW. Many related works are done in this area. From these related works we can classify web service composition in two main classes: dynamic and static. Semantic web service composition is an automated approach which is dynamic. Now in this sub-section we briefly introduce related works in the web service composition. G?mez-P?rez and Gonz?lez-Cabero developed a framework for Design and Composition of Semantic Web [3]. Majithia et al used semantic web services to automate composition of web services. Their framework has three main features which distinguish it from other work in this area [4]. Arpinar et al presented techniques for (semi) automatically composing Web Services into Web Processes by using their ontological descriptions and relationships to other services [5]. Charif and Sabouret made an Overview of Semantic Web Services Composition Approaches. They discuss existing techniques and their limitations with regards to semantic web service compositions [6]. Sirin et al have developed a prototype that guides a user in the dynamic composition of web services.

Their semi-automatic process includes presenting matching services to the user at each step of a composition, filtering the possibilities by using semantic descriptions of the services [7]. Zhang et al describes the Interface-Matching Automatic Composition technique that aims for generation of complex Web Services automatically [8]. Medjahed et al proposed an ontology-based framework for the automatic composition of Web services. They presented a technique to generate composite services from high-level declarative descriptions [9]. Rao and Su gave an overview of recent research efforts of automatic Web service composition both from the workflow and AI planning research [10]. Sirin used AI planning techniques to compose semantic web Services [11]. These related works illustrate that, current approaches to compose web services is based on semantic technology an automatic composition.

B. Data Mining and Web Service Many efforts used data mining techniques on web  service. In this sub-section we some of these applications are introduced. Cardoso used data mining techniques to manage workflow Quality of Service (QoS) which are created by web services  his project apply mining to predict QoS of workflow [12]. Gombotz and Dustdar  used Web Services Interaction Mining (WSIM) for workflow minig based on  web service log [13, 14] also Gombotz et al used Web Services Interaction Mining Architecture for e-commerce applications analysis [15]. Rouached et al described a novel way of applying process mining techniques to Web services logs in order to enable Web service intelligence [16]. Jafari and Abolhasani introduced Web Service Usage Mining for Executable Sequences and proposed an efficient algorithm for mining sequential patterns [17]. Serra da Cruz applied mining for Bioinformatics Web Services [18]. Some works used web services for doing data mining like [19] and [20].



III. WEB SERVICES COMPOSITIONS PERFOMANCE  In this section web service composition and related information about performance can be found.

Composition of a Web Services: There are two types of service composition: static and dynamic. In a static composition, the services to be composed are chosen at design time, while in a dynamic composition, they are chosen at run-time. Both types of composition involve searching for Web services. Process composition involves three phases [21]: planning, definition and implementation.

Performance of a Composed Web Service: A composed process should be efficient in terms of its service time, its ability to handle higher loads. For static compositions, as the services in the process are bound at the design time, the designer can search for services that have operational metrics (such as service time, load capacity, cost, and reliability) satisfying the requirements of the problem being solved. The operational metrics of services can be described using a suitable Quality of Service (QoS) model[22]. For dynamic compositions, the actual efficiency of a dynamically composed process can not be determined until it is invoked.

In both static and dynamic compositions, the performance data from the executed process could be analyzed to provide feedback on the efficiency of the composed services.

There are many languages and standards which supports web service composition like WSFL, XLANG, BPEL4WS, DAML-S, OWL-S and WSMO. Many works have compared these standards.

Web services performance evaluation techniques can be reviewed as [23]:  ? Time Analysis: Time analysis is related to time is taken by a Web service invocation.  It has three components:  o Message Delay Time (M) o Waiting Time (W) o Service Time (S)  If   We suppose ? as a Web service we can define T(?) = M(?) + W(?) + S(?)  ? Load Analysis: Performed by gradually loading each Web service involved in the process, and then measure their invocation times. We must notice that after a certain load point, the performance of the Web service will start degrading      ? Process Execution Monitoring: Monitoring the total number of Web service invocations present at a host will help in analyzing the process

IV. WEB SERVICE LOGGING In this section we will introduce some possible web  service logging levels and their differences and finally we will select the best approach for our purpose. After selecting the best level we should add some more data to this logging level and make some optimization according to our mining purposes.

Level 1: Standard HTTP-server logging This log format is usually used by web server. A log in  this case has the following format: 127.0.0.1 - - [13/Mar/2008:19:50:13 +0100] "POST /axis/services/ExampleService HTTP/1.0" 200 819 "-" "Axis/1.1"  It contains IP address, a timestamp, the request line, the HTTP code returned by the server, i.e., 200 for OK, the size of the returned resource, and the User-Agent, i.e., Axis/1.1.

Such log records are useful for tracking of the service consumer, determining which service is called how often (but not which operation of the service), or analyzing service failure rates.

Level 2: Logging of complete HTTP requests and responses  In addition to the level 1 (Web server logging), this level has an HTTP listener to record traffic directed to a given port. In this case we can log all the HTTP request and response traffic which involve SOAP messages. For this logging format we can use an existing open-source HTTP listener is Apache TCP Tunnel/Monitor.

Level 3: Logging at WS container level In this level of logging, flexibility is added to log. By  using configuration we can ignore HTTP request which are not related to web services. SOAP intermediaries can be used in this level.

Level 4: Logging client activity In level 1 through level 3, log contains data about server  side, but in the case of composition web services may be run in many hosts. Logging in level 4 solve this problem by using client side log, in this situation we can log additionally services which are executed in the client side log.

Level 5: Providing for process information Some useful information about the process which is done  by semantic web service composition must be logged to have better data mining on this log. This information may be taken from SOAP header. Data about the process identification and its interaction must be logged.

Table 1 makes an overview of these five levels of logging and the opportunities they make for data mining[13, 15].?          TABLE I.  LOGGING LEVELS AND FEATURES?  Level? Logged information ?  Logging facilities ?  1 ? consumer IP ? invoked WS ? timestamp ? HTTP status code  ? Web server  2 ? level 1 + ? SOAP request &  response ? timestamps  ? HTTP listener & logger  3 ? invoked WS & operation  ? SOAP request & response  ? timestamps  ? WS container ? SOAP handlers  4 ? level 3 + ? consumer-side  activity  ? WS container ? SOAP handlers  5 ? level 4 + ? process  information  ? level 4 + ? Web services   ?  In addition to these above five levels we need some more data about the result type and service's input and output parameters and their values and the type of ontology and its name which the semantic web services are annotated by, in the web service log in order to improve performance of semantic web service compositions.

??

V. WEB SERVICE LOG MINING Whenever our log structure is completed, we can do our  mining strategies to improve performance of semantic web service composition.

A. Data Mining Techniques There are many data mining approaches and algorithms  that can be used. But in this paper we have used association rule technique to improve performance of Semantic Web Services composition. A brief description of this technique is introduced in this sub section.

Associations: associations are useful methods to describe relations among inputs and outputs attributes of web services and web service usage.

Association Rule Mining is concerned with how items in a transactional database are grouped together. It is commonly known as market basket analysis, because it can be likened to the analysis of items that are frequently put together in a basket by shoppers in a market. From a statistical point of view, it is a semiautomatic technique to discover correlations among a set of variables [24].

In addition, its concepts have also been integrated into other mining tasks, such as Web usage mining [25],      clustering [26], outlier detection [27], and classification [28], for improved efficiency and effectiveness.

Figure 1. System Framework.

B. Improving Performance Using Association Rule Mining Techniques Now we want to show these methods influences on  improving semantic web services composition by using web service log. Finally we can have knowledge Repository which is based on mining techniques applied to web service Log which includes rules extracted by association rule mining techniques and algorithm.

In this case we are going to find rules from log. These rules can describe the most useful web services and their compositions based on user behaviors and processes.

We have chosen Apriori [29] algorithm for association rule mining. The result of algorithm is a set of web services which are related to each other and used and composed mostly based on a thresholds that we call them Min-Sup (Minimum Support) and Min-Conf (Minimum Confidence) in our algorithm  According to the result of association rule mining we can have a knowledge repository which includes rules. These rules can help us to know which services are most related and integrated and have the best performance in compositions and work flow process. Based on cases and invoked services we can recommend services which have the best performances, quality and usage among the available services.

By these rules we can also improve hit ratio, in this case we know which services will be used after the requested services and we can make them available or if they are not available we can replace them with another services. So we can save the invocation time and decrease the monitoring time.



VI. CONCLUSIONS Composing web services is important to create new  services from existing ones. This can be done dynamically.

Semantic web services is a way to composing web services automatically. Automatic composition does not mean the best quality and performance of composition. Finding the best composition needs something more. In this paper we create a log structure. Based on this log and its parameters we have applied data mining techniques to improve web services compositions performance. In order to improve performance we used association rules to make knowledge repository. The knowledge Repository will help us to predict the best composition based on users behaviors and processes.

As future works we are going to develop a prototype system in medical domain to improve performance of semantic web service compositions. Developing an expert or recommender system which used other intelligent and mining approaches can be done in this domain.

REFERNCES   [1] D. Fensel and C. Bussler, "The Web Service Modeling  Framework WSMF," Electronic Commerce Research and Applications, vol. 1, pp. 113-137, 2002.

[2] J. Cardoso and A. Sheth, Semantic Web Services, Processes and Applications: Springer, 2006.

[3] A. Gomez-Perez, R. Gonzalez-Cabero, and M. Lama, "A Framework for Design and Composition of Semantic Web Services," American Association for Artificial Intelligence, Stanford University Palo Alto 2004.

[4] S. Majithia, D. W. Walker, and W. A. Gray, "Automated Web service composition using semantic Web technologies," in Computing (ICAC?04), 2004, pp. 306-307.

[5] I. B. Arpinar, R. Zhang, B. Aleman-Meza, and A. Maduko, "Ontology-driven Web services composition platform," Information Systems and E-Business Management, vol. 3, pp.

175-199, 2005.

[6] Y. Charif and N. Sabouret, "An Overview of Semantic Web Services Composition Approaches," Electronic Notes in Theoretical Computer Science, vol. 146, pp. 33-41, 2006.

[7] E. Sirin, J. Hendler, and B. Parsia, "Semi-automatic composition of web services using semantic descriptions," mindswap.org, 2002.

[8] R. Zhang, I. B. Arpinar, and B. Aleman-Meza, "Automatic Composition of Semantic Web Services," in Proc. of the 2003 Int. Conf. on Web Services, 2003.

[9] B. Medjahed, A. Bouguettaya, and A. K. Elmagarmid, "Composing Web services on the Semantic Web," The VLDB Journal The International Journal on Very Large Data Bases, vol. 12, pp. 333-351, November, 2003 2003.

[10] J. Rao and X. Su, "A Survey of Automated Web Service Composition Methods," in Semantic Web Services and Web Process Composition, L. N. i. C. Science, Ed.: Springer, 2004.

[11] E. Sirin, "Automated Composition of Web Services using AI Planning Techniques," 2004.

[12] J. Cardoso, "Workflow Quality of Service Management using Data Mining Techniques," in 3rd International IEEE Conference Intelligent Systems London, 2006, pp. 479-482.

[13] R. Gombotz and S. Dustdar, "On Web Services Workflow Mining," in Business Process Management Workshops. vol.

Lecture Notes in Computer Science: Springer, 2005, pp. 216? 229.

[14] S. Dustdar and R. Gombotz, "Discovering web service workflows using web services interaction mining," Int. J.

Business Process Integration and Management, vol. 1, pp. 256- 266, 2006.

[15] R. Gombotz, K. Baina, and S. Dustdar, "Towards web services interaction mining architecture for e-commerce applications analysis," in Proceedings of the Conference on E-Business and E-Learning, 2005.

[16] M. Rouached, W. Gaaloul, W. M. P. van der Aalst, S. Bhiri, and C. Godart, "Web Service Mining and Verification of Properties: An approach based on Event Calculus," in On the Move to Meaningful Internet Systems 2006: CoopIS, DOA, GADA, and ODBASE. vol. 4275, L. N. i. C. Science, Ed.: Springer, 2006, pp. 408-425.

[17] M. J. Asbagh and H. Abolhassani, "Web service usage mining: mining for executable sequences," in Proceedings of the 7th Conference on 7th WSEAS: World Scientific and Engineering Academy and Society (WSEAS) Stevens Point, Wisconsin, USA, 2007, pp. 266-271.

[18] S. M. S. da Cruz, "Mining and Visualization of Logs of Bioinformatics Web Services in silico Experiments," 2005.

[19] R. Grossman, Y. Gu, C. Gupta, D. Hanley, X. Hong, and P.

Krishnaswamy, "Open DMIX: High Performance Web Services for Distributed Data Mining," in 7th International Workshop on High Performance Computing, 2004.

[20] S. Graves and R. Ramachandran, "Deployable Suite of Data Mining Web Services for Online Science Data Repositories," in 23rd Conference on IIPS, 2007.

[21] J. Yang and M. Papazoglou, "Web Components: A Substrate for Web Service Reuse and Composition," in Proceedings of the Systems Engineering Toronto, Canada, 2001.

[22] J. Cardoso, J. Miller, A. Sheth, and J. Arnold, "Modeling Quality of Service for Workflows and Web Service Processesl," VLDB Journal, 2002.

[23] S. Chandrasekaran, J. A. Miller, G. S. Silver, B. Arpinar, and A.

P. Sheth, "Composition, performance analysis and simulation of web services," Electronic Markets: The International Journal of Electronic vol. 13, 2003.

[24] Y. K. Woon, W. K. Ng, and E. P. Lim, "Association Rule Mining," in Encyclodedia of Data Mining and Warehousing.

vol. 1, J. Wang, Ed.: Idea Group Publishing, 2005, pp. 59-64.

[25] Y. K. Woon, W. K. Ng, and A. Das, " Fast online dynamic association rule mining," in Proceedings of the Second Engineering, Japan, 2001, pp. 278-287.

[26] M. L. Yiu and N. Mamoulis, "Frequent-pattern based iterative projected clustering," in Proceedings of the Third International Conference on Data Mining, USA, 2003.

[27] Y. K. Woon, X. Li, W. K. Ng, and W. F. Lu, "Parameterless data compression and noise filtering using association rule on Data Warehousing and Knowledge Discovery, Prague, 2003, pp. 278-287.

[28] G. Dong and J. Li, "Efficient mining of emerging patterns: Discovering trends and differences," in Proceedings of the Fifth Mining, USA, 1999, pp. 43-52.

[29] R. Agrawal and R. Srikant, "Fast algorithms for mining association rules," in Proceedings of the 20th International Conference on Very Large Data Bases (VLDB) San Francisco, CA, USA, 1994, pp. 487-499.

