Descriptive Data Mining; A Granular Model Anita Wasilewska

Abstract? We present here a formal syntax and semantics for descriptive data mining. We do so in terms of three abstract models: Descriptive, Semantic, and Granular. The Descriptive Model formalizes the syntactical concepts and properties of the data mining process. Semantic Model formalizes its semantical properties. The Granular Model establishes a relationship be- tween the Descriptive and Semantic models in terms of a formal satisfaction relation.



I. INTRODUCTION  One of the main goals of Data Mining is to provide comprehensible descriptions of information extracted from the data bases. We are hence interested in building models for a descriptive data mining, i.e. the data mining which main goal is to produce a set of descriptions in a language easily comprehensible to the user. These descriptions come in different forms. In case of classification problems it might be a set of characteristic or discriminant rules, it might be a decision tree or a neural network with fixed set of weights. In case of association analysis it is a set of associations (frequent item sets), or association rules with accuracy parameters. In case of cluster analysis it is a set of clusters, each of which has its own description and a cluster name. In case of approximate classification by the Rough Set analysis it is usually a set of discriminant or characteristic rules (with or without accuracy parameters) or a set of decision tables. Data Mining results are usually presented to the user in their descriptive, i.e. syntactic form as it is the most natural form of communication. But the Data Mining process is deeply semantical in its nature. We hence build our Granular Model on two levels: syntactic and semantic.

We understand by syntax, or syntactical concepts simple re- lations among symbols and expressions of a formal, symbolic languages. A symbolic language is a pair L = (A, E), where A is an alphabet and E is the set of expressions of L. The expressions of formal languages, even if created with a specific meaning in mind, do not carry themselves any meaning, they are just finite sequences of certain symbols. The meaning is being assigned to them by establishing a proper semantics.

Semantics for as given symbolic language L assigns a specific interpretation in some domain to all symbols and expressions of the language. It also involves related ideas such as truth and model. They are called semantical concepts to distinguish them from the syntactical ones.

The word model is used in many situations and has many meanings but they all reflect some parts, if not all, of its following formal meaning. A structure M , called also an  interpretation, is a model for a set E0 ? E of expressions of a formal language L if and only if every expression E ? E0 it true in M .

We present here three abstract models: Descriptive, Seman- tic, and Granular. All of them are abstract structures that allow us to formalize some general properties of Data Mining process and address the semantics-syntax duality inherent to any Data Mining process. Descriptive Model formalizes the syntactical concepts and properties of the process. Semantic Model formalizes its semantical properties. Finally, they form components of the Granular Model in which we establish a relationship between the Descriptive and Semantic models by providing a formal semantics for syntactical expressions of the language L of the Descriptive Model, thus justifying a use of the word model.

Moreover, within the Granular Model it is possible to provide a formal definition of Data Mining as the process of information generalization. The notion of generalization is defined in terms of granularity of steps of the process. In the model the data is represented in a form of Knowledge Systems. Each Knowledge System has a granularity associated with it and the process changes, or not, its granularity. The notion of granularity is crucial for defining some notions and components of the model, hence the Granular Model name.



II. SEMANTIC MODEL  The definition of a semantic model presented here is a simpler and more comprehensible version of [17], [18], [21], [22]. The initial investigations of the subject appeared also in [9], [10], [3], [8]. The notion of a Knowledge System is central to the definition and development of the semantic model. We define it formally in the next section. We also use it to formalize a notion of a granule and granularity (definition 2.3) that is central to our Granular Model.

A. Knowledge Systems and Granularity  The formal definitions of Information System, Knowledge and Target Knowledge Systems, and their granularity are as follows.

Definition 2.1: A Pawlak?s Information System is a system I = (U,A, VA, f), where U ?= ? is called a set of objects; A ?= ?, VA ?= ? are called the set of attributes and values of of attributes, respectively; f : U ? A ?? VA is called an information function.

Definition 2.2: A Knowledge System based on I = (U,A, VA, f) is a system K = (K(U), A,E, VA, VE , g) where:     the universe K(U) of K is a subset of the set P(U) of all subsets of the universe U of I , i.e. K(U) ? P(U); E is a finite set of knowledge attributes (k-attributes) such that A ? E = ?; VE is a finite set of values of k- attributes; g is a partial function called a knowledge function (k-function); g : P ? (A ? E) ?? (VA ? VE) is such that:  (i) g | (?x?U{x} ? A) = f ; (ii) ?S ? P, ?a ? A ((S, a) ? dom(g) ? g(S, a) ?  VA); (iii) ?S ? P, ?e ? E ((S, e) ? dom(g) ? g(S, e) ?  VE); We use the above notion of knowledge system to define  the granules of the universe and the granularity of the system, and hence when is needed, the granularity of the data mining process.

Definition 2.3: Any set S ? P(U) i.e. S ? U is called a granule of U . The cardinality |S| of S is called a granularity of S. The set GrK = {S ? P : ?b ? (E ? A)((S, b) ? dom(g))} is called a granule universe of K. A number grK = max{|S| : S ? GrK} is called a granularity of K.

Observe that by conditions (ii), (iii) of definition 2.2, GrK = K(U) and it justifies its name. The condition (i) of defini- tion 2.2 says that when E = ?, the k-function g is total on the set {{x} : x ? U} ?A and ?x ? U ?a ? A (g({x}, a) = f(x, a)). We denote P1(U) = {{x} : x ? U}.

Let I = (U,A, VA, f). Any system K1 = (P1(U), A, ?, VA, ?, g) = (P1(U), A, VA, g) = (P1(U), A, VA, g) is called a target knowledge system based on I .

In our Model we view data mining algorithms as certain operators. We put all the above observations and definitions into a formal notion of a semantic model.

Definition 2.4: A Semantic Model is a system SM = (P(U), K, G), where:  U ?= ? is the universe; K ?= ? is a set of knowledge systems, called also data mining process states; G ?= ? is the set of operators; Each operator p ? G is a partial function on the set of all data mining process states, i.e. p : K ?? K.

The semantic model is always being built for a given application. The target data is represented first in a form the target database, represented by the information system with the universe U , and then in the form of target knowledge system.



III. DESCRIPTIVE MODEL  Given a Semantic Model SM = (P(U), K, G) We associate with it its descriptive counterpart defined below.

Definition 3.1: A Descriptive Model is a system DM = ( L, E ,DK ) where:  L = ( A, E ) is called a descriptive language; A is a countably infinite set called the alphabet;  E ?= ? and E ? A? is the set of descriptive expressions of L; DK ?= ? and DK ? P(E) is a set of descriptions of knowledge states.

As in a case of semantic model, we build the descriptive model for a given application. We define here only a general form of the model. We assume however, that whatever is the application, the descriptions are always build in terms of at- tributes and values of the attributes, some logical connectives, some predicates and some extra parameters, if needed. For example, a neural network with its nodes and weights can be seen as a formal description (in an appropriate descriptive language), and the knowledge states would represent changes in parameters during the neural network training process, or a final, converged network. We also identify, for example, a decision tree constructed by the classification by Decision Tree algorithm with the set of discriminant rules obtained from the tree.

The commonly used descriptions have the form (a = v) to denote that the attribute a has a value v, but one might also use, as it is often done, a predicate form a(v) or a(x, v) instead.

We define the components of our Descriptive Model DM in the following stages.

Stage1 For each K ? K, we define (section III-A) its own descriptive language LK = ( AK , EK ).

Stage2 For each K ? K, and descriptive expression F ? EK , we define what does it mean that D satisfied in K; i.e. we define (definition 3.5) a satisfaction relation |=K .

Stage3 For each K ? K, and descriptive expression F ? EK , we define what does it mean that D is true K, i.e. |=KD (definition 3.8).

Stage4 We use the satisfaction relation |=K to define, for each K ? K, the set DK ? P(EK) of descriptions of its own knowledge (definition 3.6).

Stage5 We use the languages LK to define the descriptive language L (definition 3.9).

Stage6 We use the descriptive expressions EK of LK to define the set E of descriptive expressions of L (definition 3.10).

Stage7 We use the satisfaction relations |=K to define the satisfaction relation |= of our Granular Model GM (definitions 4.1 and 4.2, respectively).

A. K-Descriptive Language  As the stage one of our construction of the Descriptive Model we define, for each K ? K, its own description language LK . The language depends on the semantic model and the goal of the data mining process. As we have said, the descriptions produced by a data ming algorithms come is a different forms. We build here a model for a descriptive data mining, i.e. we assume that the descriptions are build from attributes and values of attributes and two logical connectives: conjunction and implication. The implication connective is needed to model the different kind of rules that    are being ?mined? by data mining algorithms: discriminant and characteristic rules in classification analysis; association rules by association analysis; or other rules obtained by hybrid systems.

Definition 3.2: For any K ? K, of SM, K = (P(U), A,E, VA, VE , g), we define the Descriptive Language of K, LK as LK = (AK , EK), where AK is called an alphabet, EK the set of descriptive expressions such that EK = DK ?FK , for DK the set of descriptive formulas and FK the set of formulas of LK (definition 3.3).

The alphabet AK = V ARK ?{?,?}?{(, )}, where ?,? are logical connectives of LK .

The set V ARK of variables of K is also called its set of atomic descriptions. We put V ARK = DA?DE , where DA = {(a = v) : a ? A, v ? VA}, DE = {(a = v) : a ? E, v ? VE}.

Atomic descriptions, i.e. the elements of V ARK = DA ? DE represent minimal ?blocks? of semantical description.

Elements of DA are atomic descriptions of minimal blocks build with use of the attributes of the initial target database.

Elements of DE are atomic descriptions of minimal blocks build with use of knowledge attributes used (if any) during the process of data mining. We use them to define the sets of descriptions and formulas as follows.

Definition 3.3: The set DK of all descriptive formulas of LK is the set DK = ADK ? EDK ? FK , where ADK , EDK ,FK are defined as below.

The set ADK ? AK? is called the set of data attribute descriptions and is the smallest set such that the following conditions hold.

(1) DA ? ADK (data attribute atomic description); (2) If D1,D2 ? ADK , then D1 ? D2 ? ADK .

The set EDK ? AK? is called the set of knowledge attribute descriptions and is the smallest set such that the following conditions hold.

(1) DE ? EDK (knowledge attribute atomic description); (2) If D1,D2 ? EDK , then D1 ? D2 ? EDK .

We distinguish two categories of formulas: one FA de- scribes a certain knowledge, the other, FE , the uncertain, or approximate knowledge. The certain knowledge is expressed in our model in terms of attributes and values of attributes of the initial, target data only. The description of the approximate knowledge includes the extra parameters,describing properties of granules as defined by the the knowledge attributes of K (definition 2.2).

Definition 3.4: The set FK of formulas of LK is a union of two sets of formulas; FA, FE , i.e. FK = FA ?FE , where FA = ADK ? ARK and FE = AEDK ? ERK are defined below.

The set AEDK = {D1 ? D2 : D1 ? ADK , D2 ? EDK} is the set of knowledge description formulas, with knowledge attribute descriptions depicting uncertainty measures.

The set ARK = {(D1 ? D2) : D1,D2 ? DA} is the set of attribute rule-formulas depicting certain rules obtained during the data mining process.

The set ERK = {(D1 ? D2)?D3 : D1,D2 ? DA, D3 ? DE} is the set of knowledge rule-formulas depicting rules with uncertainty measures described obtained by descriptions from DE .

The formulas of the language LK are not yet the data mining rules. They only describe a syntactical form of the rules appropriate for a given application. Formulas from FK become rules determined by K only when they do relate semantically to K, i.e. reflect the properties of our initial target database. In this case we say that they are true, or true under the measures described by descriptions from DE . We define, in the next section the notion of truthfulness, as we always do, via notion of satisfiability.

B. K- Satisfaction and K- Truth  In this section we define (definition 3.5) a satisfaction relation |=K ? P(U) ? EK that establishes the relationship between descriptive expressions of the LK and what they semantically represent in K. For any (S, F ) ? |=K we say that S satisfies F in K and write it symbolically as  S|=KF.

We call our satisfaction relation a k-satisfaction, as it repre- sents a satisfaction relation relative to the system K. As the next step we define the notion of K-truth (definition 3.8) i.e we define what does it mean that a descriptive expression F is true in K, symbolically expressed as  |=KF.

Let K = (K(U), A,E, VA, VE , g) and let LK = (AK , EK) be the description language defined by K (definition 3.2), where EK = DK ? FK .

Definition 3.5: A k- satisfaction relation |=K ? P(U) ? EK is defined by induction over level of complexity of any descriptive expression F ? EK as follows.

1. F ? DK .

(i) Let (a = v) ? DA be an atomic attribute  description. We define, for any S ? P(U), for any a ? A, v ? VA, S|=K(a = v) if and only if (S, a) ? dom(g) and g(S, a) = v;  (ii) Let (e = v) ? DE is an atomic knowledge attribute description. We define, for any S ? P(U), for any e ? E, v ? VE , S|=K(a = v) if and only if (S, e) ? dom(g) and g(S, e) = v;  2. F ? FK .

We extend |=K to the set FA = ADK ? ARK    (iii) Let D ? ADK and D = D1 ? ...?Dn. We define, for any S ? P(U), S|=K D if and only if ?(1 ? i ? n)(S|=K Di);  (iv) Let (D1 ? D2) ? ARK , i.e. D1,D2 ? ADK . We define, for any S ? P(U), S|=K (D1 ? D2) if and only if S|=K D1 and S|=K D2;  (v) Let (D1 ? D2) ? D3 ? ERK , i.e. (D1 ? D2) ? ARK and D3 ? DE . We define, for any S ? P(U), S|=K(D1 ? D2) ? D3 if and only if S|=K (D1 ? D2) and S|=KD3.

This ends the stage 2 of the definition of the Descriptive Model and we are ready for the stage 3, i.e. to define the set of all descriptions of knowledge states.

Definition 3.6: Let K ? K, the set DK ? P(EK) of descriptions of knowledge states of K is defined as follows.

DK = {F ? EK : ?S ? GrK(S|=KF )}.

Now we are ready to define, for any formula F ? FK , a notion of F is true in K. We express it symbolically by |=KF . This notion relates the satisfaction relation |=K , i.e satisfiability of formulas in the system K with the initial target data as out ultimate point of reference. This connection is being established by the notion of the truth set defined below.

Definition 3.7: For any attribute data description D ? ADK ? EDK the set S(D) = {x ? U : D} is called a truth set for D.

We define the notion |=KF (F is true in K) by induction over level of complexity of any descriptive expression F ? FK as follows.

Definition 3.8:  1. F ? ADK .

(i) For any any attribute data description D ? ADK , we  define: |=KD if and only if S(D)|=K D.

(ii) For any attribute description formula D ? ADK , we put |=KD if and only if S(D)|=KD.

2. F ? FA.

(iii) For an attribute rule-formula (D1 ? D2) ? ARK ,  we define |=K(D1 ? D2) if and only if S(D1)|=K D1, S(D1)|=K D2, and S(D1) ? S(D2) or (D1) ? S(D2) ?= ?.

3. F ? AEDK .

(iv) For any any knowledge attribute description D1 ?  D2 ? AEDK , D1 ? ADK , D2 ? EDK we define: |=KD1 ?D2 if and only if S(D1)?S(D2)|=K D1.

4. F ? FE .

(v) For an attribute rule-formula (D1 ? D2) ? D3 ?  AERK , we define |=K(D1 ? D2) ? D3 if and only if S(D1) ? S(D3)|=K D1, S(D1) ? S(D3)|=K D2, and S(D1)?S(D3) ? S(D2)?S(D3) or (D1)?S(D2)? S(D3) ?= ?.

In case when F ? FE and |=KF we say that F is true in K under the measures D (measures defined by conditions D), for a certain D ? AEDK .

If |=K(D1 ? D2) and the condition S(D1) ? S(D2) holds, then we call the formula (D1 ? D2) C- true in K, or C- true under the measures D, if |=K(D1 ? D2) ? D.

If |=K(D1 ? D2) and the condition (D1) ? S(D2) ?= ? holds, then we call the formula (D1 ? D2) D- true in K, or D - true under the measures D, if |=K(D1 ? D2) ? D.

The notion of D-truth reflex the semantics needed to define the discriminant rules for the classification analysis, and C- truth is needed for the characteristic rules, hence the names.

As we have said before the knowledge attributes from the set E describe uncertainty measures for the granules S ? K(U). The formulas that incorporate the knowledge attribute descriptions D ? EDK can be only true in K under some uncertainty measures.

C. Descriptive Language and Descriptive Model  We have already constructed (sections III-C, 3.5) all sub- components of the definition 3.1 of the Descriptive Model DM and now we are ready to define its two main components.

Definition 3.9: We define the language of DM as L = ( A, E ), where A = ?{AK : K ? K}, and E =  ?{EK : K ? K}, for AK , EK defined by definition 3.2.

The set DK of all descriptions of knowledge states of the Semantic Model SM = (P(U), K, G) is the following.

Definition 3.10: Let DK be the set of descriptions of knowledge states of K (definition 3.6). We define the set DK of descriptions of knowledge states of SM as follows.

DK = ?{DK : K ? K}.

This completes the definition of the Descriptive Model as a system DM = ( L, E ,DK ) where: L = ( A, E ) is a descriptive language; A an alphabet and E is the set of descriptive expressions (definition 3.9); DK is a set of descriptions of knowledge states (definition 3.10).



IV. GRANULAR MODEL: SATISFACTION AND TRUTH  We define our Granular Model as follows.

Definition 4.1: A Granular Model is a system  GM = ( SM, DM, |= ), where: SM is a Semantic Model (definition 2.4); DM is a Descriptive Model(definition 3.1); |= ? P(U) ? E is a satisfaction relation (definition 4.2), U is the universe of SM and E is the set of descriptions defined by the DM.

The satisfaction relation |= establishes the relationship be- tween expressions of the Semantic and Descriptive Models.

We have hence established formally the syntax-semantics duality of the data mining process. All the components of GM except the satisfaction relation have already been defined. As    the last step we define the satisfaction relation and the notion of truth in GM as follows.

Definition 4.2: For any S ? P(U) and for any F ? E , S |= F if and only if ?K ? K(S|=K F ).

Definition 4.3: We say that F ? E is true in GM (sym- bolically |=F ) if and only if ?K ? K( |=K F ).



V. FUTURE DIRECTIONS  The models presented here set a general framework for future foundational investigations. They can be carried on three levels. One, the most general would deal with further developments within the Granular Model. The second, a more specific one, would deal with applications of the methodology developed within the Granular Model to specific domains.

On this level one would build Semantic, Descriptive, and a Granular models for different Data Mining domains, i.e build and examine specific models for classification, clustering, and for association analysis. Finally, the most specific third level would deal with building models for basic descriptive data mining algorithms: decision trees and rough sets classification, association and classification by association, and clustering.

The general methodology of analysis of the data mining process developed for the Granular Model can hence serve as unifying language in which different data mining domains and algorithms can be studied, discussed, and compared.



