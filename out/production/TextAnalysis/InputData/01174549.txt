PRODUCT HIERARCHY-BASED CUSTOMER PROFILESFOR  ELECTRONIC COMMERCE RECOMMENDATION

Abstract: Personalized service is becoming a key strategy in electropic  commerce. Traditional personalization techniques such as collaborative filtering and rule-based method have many drawbacks, including lack of scalability, reliance on subjective user rating or static profiles, and the inability to capture a richer set of semantic relationships among objects. In this paper, we present a new approach, building customer profies based on product hierarchy for more effective personalization in electronic commerce. We divide each customer profde into three parts: basic profile, preference profile, and rule profie.

Based on the customer profiles, two kinds of recommendations can be generated, which are interest recommendation and association recommendation. We also propose a special data structure: Profile Tree for effective searching and matching.

In terms of our method, customer profiles can be constructed online, and realtime recommendations can be implemented. In the end, we conduct experiments to validate our methods, using real data.

Keywords: Personalization; Recommendation system; Customer profile; Data mining  1 Introduction  In recent years, E-commerce has been growing fast.

More and more companies are providing services on the Web. A report from Forrest Research showed that B2C (business to customer) retail spending was US$20.3 billion in 1999 and estimated to grow US$144 billion by 2003['].

Literature [2] argues that companies need to shift from the old world of mass production, where "standardized products, homogeneous markets, and long product life and development cycles were the rules", to the new world, where "variety and customization supplant the standardized products". When it comes to E-commerce, personalization techniques are the pivotal forces for that change.

Personalization is a fairly wide topic, including adaptive websites, targeting Web, recommendation systems etc. Its goals are to provide customers with what they want or need without requiring them to ask for it explicitly [3*41. In order to achieve its goals, understanding customer behaviors deeply is necessary. As for E-commerce, personalization is mainly about recommendation system, which can be used  for recommending products to customers according to their preferences. In general, most recommendation techniques fall in three fields: rules-based recommendation, collaborative filtering recommendation, and learning agent recommendation techniques.

Rules-based recommendation needs domain experts to specify rules based on user demographics or static profiles which are collected through a registration process by explicitly asking a series of questions. In terms of these static customer profiles, marketers can know customers' preferences related with products, and then recommend specific products to specific customers [51.

Collaborative filtering technique is deriving from information filtering, which is relative to information retrieval (IR). In IR, given a query, the system returns the contents matching the query requirements by searching the information source. As for information filtering, given the information objects, the task is to deliver them to users according to their preferences.

In collaborative filtering recommendation, two methods are prevailing, which are user-based collaborative filtering and item-based collaborative filtering [6, 'I. Both methods need customers' rating scores about products, which are explicitly given by the users. User-based collaborative filtering first search the rating score database to generate the K neighbors of the active customer, which have the similar opinions with the active customer. Then the recommendation of the active customer can be generated according to the history purchase records of k neighbors.

User-based collaborative filtering system is simple and easy to be implemented. However, its high latency in giving predictions for active user can be a very serious drawback in systems with a large number of requests that should be processed in real time.

Item-based collaborative filtering can improve the performance of user-based method by bridging the sparsity of data r71. The main idea is to analyze the user-item representation matrix to identify relations between different items and- than to use these relations to compute the prediction score for a given user-item pair. Their methods can produce recommendation sets more rapidly without computing neighbors of active customer.

Both user-based collaborative filtering and item-based filtering rely on subjective customer rating score about  0-7803-7508-4/02/$17.00 02002 IEEE   mailto:niulimail@263.net   products. Hence, the inaccuracy and sparsity of data always accompany them. Moreover, with the growth of customers and products, the scalability of those algorithms is also a serious problem.

Learning agent recommendation technique, a non- intrusive personalization, can. be expected to deal with the problems of traditional recommendation techniques. It employs many methods, such as data mining, machine learning, and statistics etc, to capture customer behavior data. After data analysis, customers are modeled by creating their profiles. From customer profiles, the preferences of each customer can be known and recommendation sets for customers can be generated.

Customer profiles are the most important component of learning-based recommendation system. Many approaches have been proposed to construct customer profiles.

Web objects (Web pages, images, sound etc) accessed by a customer often provide important information about the customer's interests. Web objects also have relations with their URLs. Literature [9, 101 proposed effective methods to model Web objects and customer profiles based on vector space model. An example of customer profile is  { a b j , ,  WI>, cobj,, WQ, ... ,cob&, w,>), Where wi is the weight of Web object obji, which can be measured in terms of several methods, for example, by the time consumption or frequencies of objects.

Based on content-based filtering techniques, literature [l 13 describes each user as a vector of document category.

Such user characterizations are then used to find user communities based on a projected clustering scheme.. Their approaches overcome some drawbacks of static profiles.

Data mining is an effective technique to extract interesting knowledge from database. Literature [12, 131 discussed some approaches to build customer profiles by using association rule mining. [I2] gave the concept of profile association rule and detailed its mining algorithms based on R-Tree. defined a customer profile as factual profile and behavioral profile. Behavioral profile can include association rules mined from transaction database.

These customer profiles mainly consisted of association rules, based on customer purchase history. Some methods were also given to validate thousands of original rules very effectively.

In this paper, we present such a method, building customer profiles based on product hierarchy for more effective personalization in electronic commerce. We divide each customer profile into three parts: basic profile learned from customer demographic data, preference profile learned from behavioral data, and rule profile mainly referring to association rules. Based on customer profiles, two kinds of recommendations can be generated, which are interest recommendation and association recommendation. We also propose a special data structure, that is Profile Tree for effective searching and matching. In terms of our method, customer profiles can be constructed online and real time recommendation can be implemented.

In the end, we conduct experiments to validate our methods, using real data.

2 Constructing customer profiles  2.1 Definition of business data  2.1.1 Customer data  There are many types of data about customer, such as demographics, clickstream, purchase data, call center data etc. We classify these data into two categories: basic datu and behavior datu. Each part describes a customer from a specific view, as shown in Figure 1.

Customer Data  clickstream, call center data, marketing data.. .)  Fig.l. Customer Data  Customer basic data can be obtained from registration process or other data service departments. In general, basic data show who the customer is as well as the basic characters of the customer. These data are much more static than behavior data, and they are independent from the behaviors between customer and E-commerce Website.

Basic data are useful for recommendation generation. For  example, a customer's sex and age can be used for cosmetic recommendations. In our method, customer basic data are used to build customer basic profiles, which will be detailed in next section.

Behavior data derive from customer purchase history and visitor clickstream. They also can be obtained from customer call center data and marketing campaign data etc.

Behavior data are generated when the behaviors between customer and Website happen. Most of customer behavior data have relations with products that the customer likes.

Thus they are important for recommendation system and we use them to construct customer profiles.

2.1.2 Product hierarchy  Product hierarchy is an instance of concept hierarchy. A concept hierarchy defines a map sequence, which maps lower level concepts to higher level concepts. For example, in a location hierarchy, a map sequence can bellstreet + city +province +country", of which every concept (e.g.

"street") can be mapped to a higher level concept (e.g.

"city"), unless it is the highest level concept(namely, "country"). The more detailed discussion about concept hierarchy can be found in [8].

I  Book Drink Electronic  Art inance Science iquor Syrup  Spirit IBeer lWine  Fig.2. Product Hierarchy  Note: the leaf nodes are products and they are not shown here.

In order to learn a customer's preferences on products, we use product hierarchy. Figure 2 gives us an example of a product hierarchy, presented as a tree. Each node is a product category, each product is a leaf node and the root of the tree is "Product".

Customer behavior data can tell us which type of products a customer likes, while product hierarchy gives us a detailed or global view of a specific product. So we combine customer behavior data with product hierarchy to learn a customer's preferences and construct his (or her) profile.

2.2 Definition of customer profile  The following features are necessary or very useful in E- commerce recommendation applications.

(1) Completely describing the customer's characters on shopping.

(2) Having uniform presentation with products in order to compute the similarity between a customer and a product easily.

(3) Dynamic and incremental.

(4) Supporting realtime recommendation.

Accordingly, we define a customer profile as shown in  Figure 3.

I Customer Prufde  Fig.3. Customer Profile  A static profile is stable or changes very slowly during a long period. It can be constructed based on customer basic data, which possibly includes a customer's name, sex, age,  job, salary etc. With respect to static profile, dynamic profile can be built and updated in real time, which is on the basis of customer behavior data. Because a customer may show continuous and diverse behavior in a period, the profile based on customer behavior data must be dynamic, such that it can reflect the specific preferences of the customer in a specific period. And with time on, it can be incrementally updated.

Dynamic profile has two parts: preference profile and rule profile. The former contains information about which types of products a customer likes. For example, Amy likes accounting books of which prices arrange from $40 to $120, while her dresses often cost no less than $500. The later of dynamic profile is made up of rules mined from customer behavior data, using data mining methods, such as association rule mining, clustering, classification etc. For instance, "if it is Mother's Day, Tom will buy Chopin's music CD for his mother". We adopt the techniques proposed in [ 131 to construct customer rule profile.

We name those recommendations based on static profile and preference profile as preference recommendation and those based on rule profile as rule recommendation.

2.3 Incremental learning  Customer preferences are the explicit description of a customer's shopping habits. We build customer preference profiles by using clustering and vector space model techniques on the basis of customer behavior data (e.g.

purchase history).

In a product hierarchy (referring to Figure 2), each node represents a product category and each category has some specific attributes. For example, the root node, product, may has attributes of price, brand, manufacture, discount.

In Figure 2, node product has three children node: Book, Drink, and Electronic. Because of the inheritance, each child node retains the whole attributes of its parent and also may bring some new attributes. The child node, Book, has price, brand, manufacture, and discount, inherited from its parent, and has its own attributes of content, author, page number etc. Each concrete product lies in the bottom of tree, namely leaf node. More examples are shown in Figure 4.

Product: <ProductID, SubTableID, Title, Relation, Price, Brand, Manufacturer, ProduceDate, Discount> Electronic <ProductlD, Title, Price, Brand, Manufacturer, ProduceDate, Discount Voltage, AC/DC, Power, Color, Weight> Aduiovisual <ProductID, Title, Price, Brand, Manufacturer, ProduceDate, Discount, Voltage, AC/DC, Power, Color, Weight SoundEffect> Cellphone <ProductID, Title, Price, Brand, Manufacturer, ProduceDate, Discount Voltage, ACDC, Power, Color, Weight sizeonch), MinimumRatedStandbyTime(hour),      MinimumRatedTakTime, BatteryType(hour), ChargingTime(hour), Network Type">  Fig.4. Examples of Inheritance of Product Attributes All of product attributes can be divided into two types:  numerical and literal. Numerical attributes can include price, book page number, discount etc, while literal attributes may include brand, manufacture, book content etc.

Based on product hierarchy, all products can be classified into specific category. From each node, we can obtain the view of a preference of a customer. Because the leaf nodes are specific products, we can extract customer preferences about their parents from customer purchase histories.

We define customer preference in terms of product (or product category) attributes. So the customer preference has the same presentation with products. That is,  Customer Preference =  Where, Ti is a taste of the preference. We define a taste as the subpreference of a customer preference, which has the more particular description about a customer. For example, "Accounting Book" is a customer preference, while "Price", "Title", "Authors" etc, are all tastes of "Accounting Book.

wi is the weight of Ti , which is specified by experts.

From numerical product attributes, we extract tastes by using clustering techniques. Thus the attributes are grouped into clusters. For example, the price attribute of an accounting book can be $49.00, and the price taste of a preference can be a number range, e.g. [$30, $851.

For literal attributes, we use vector space model to present customer tastes. That is,  Taste = {U,, wl>,<t2, WZ>, ..., <t, w,>I Where, ti is a taste term, representing a subvector of this taste vector and wi is its weight. After standard vector operation under one specific category, multiple products' literal attributes can be aggregated. Thus, the literal tastes can be built.

According to the above discussions, we give the completed representation of customer profile based on XML as follows:.

{ < T I ,  W I > ,  <T2, w2>1 e-., <Tn, wP}  <Customer Profile/> <Preference,/>  <Tastel/> value, weight m a s t e l > <Tastez/> value, weight </Taste2>  <Taste& value, weight m a s t e n , > ...

</Preference, > <Preference+  <Tastel/> value, weight </Tastel > <Tasted> value, weight </Taste2>  <Taste& value, weight dlasten2> ...

</Preference+  <Preference,,,/> ...

<Tastel/> value, weight </Tastel> <Taste+ value, weight </Taste+ ...

<Taste,,#> value, weight (/Taste,> </Preference,,,>  </Customer Profile>  Note that the customer static profile can also be represented as this model, and the rule profile is not included here.

The method of constructing customer profiles is an incremental process. When a customer has new purchase records, his (or her) profile can be updated and it is unnecessary to redo the whole job. Furthermore, the task of updating profile is fairly easy and can be conducted in real time.

3 Profiietree  We define a type of data structure to store customer profiles, which is named as Profile Tree. As will be showed in this section, a profile tree can contain the completed information of a customer profile, and also it is based on product hierarchy. Furthermore, profile tree supports for realtime recommendation by providing rapid indexing and profile computing.

( a ) An example of a profile tree  ( b ) Node structure Fig. 5. Profile Tree  In Section 2.3, we have discussed how to learn a customer's preferences based on product hierarchy. These customer preferences are learned directly from customer purchase records, which are leaf nodes in a profile tree.

After obtaining these leaf nodes, the higher level nodes can be deduced by aggregating preferences based on product hierarchy. The aggregation regulations are  (1) Only those preferences, which have the same parent, can be aggregated, and the result is their parent's preference;  (2) When a preference is to be aggregated with another, only the same tastes can be aggregated and the result is tastes of their parent's preference. If a taste of one  1 078     Atmbutes /Product Purchase Records / Customer Purchase Records / Leaf Node  preference has no matching taste in another preference, it will be deleted;  (3) The method of taste aggregating is alike with that of learning preferences (see Section 2.3).

4 Product recommendation  The goal of the recommendation system is to generate a "recommendation set" for active customer, of which the products most closely match active customer profile. In our method, both customer profiles and products are represented as the same model. So it is fairly convenient to compute the similarity between a customer profile and a product.

Preference = <TI, t w l ,  T2, twz, ..., T, twn> Product = 4 1 ,  awl, Az, aw2, ..., A,, awn>  If Ti(Ai) has numerical value, Ti= [vl, v2] and Ai= v, the similarity between Ti and Ai can be computed by  12v-v, +v, I Tastesimilarity = I-  v2 -v1 If it has literal value, then Ti = (<tl, tw1>, <tz, twz>, ...,  The similarity between Ti and Ai can be calculated by the et ,  twn>),andAi= (CUI, awl>, -2. w p ,  ..., <a,, awn>}.

following Cosine function.

2 (tw, x awi ) Tastesimilarity = i=l /= i=l i=l  So, the similarity of preference and product is  = (TasteSimilarity, x tasteweight,)  In the end, the recommendation set for active customer can be obtained by RecommendationSet = [ Product I PreferenceSimilarity >t), where, t is a threshold of preference similarity.

PreferenceSimilarity n  i=l  5 Experiments  The dataset is extracted from http://www.amazon.com, http://www .prime. wines .corn, http://www.needmorebeer.com, http://www.cornwellcoffee.com.

From these Web sites, we construct a product hierarchy.

Based on this product hierarchy, we set up a virtual Web store. Then 11 persons are invited to the experiments as customers and everyone generates about 15-30 purchase records on different products. The main parameters of the dataset are listed in Table 1.

Table 1. Dataset Nodes of Product Hierarchy Tree I 87 Leaf Nodes I 58  Products I233 Customers I 11  Based on the approaches denoted in previous sections, we implement a system prototype to construct customers' profiles. In order to check the incremental learning of our approaches, we select different number of purchase records.

First, we use 8-10 records to construct the original profiles, and then add 5-7 records into database to update customer profiles. An example of customer profiles constructed by our prototype is listed below.

Preference1D:lO PreferenceName: AccountingBook Preference Weight: 0.26 TasteNwn: I1  TasteName / TasteType / Tastevalue / Tasteweight Title: O / N U L U O Price: U45.5-84.3 /0.1 Manufacturer: ONULL / 0.05 Discount: UO. 7/0.1 Content: O/Fimncia,O.5.Accounting,0.3,Accounting Practices,O.Z / 0.4 Author: O/Charles W. Mulford.O.4,Raig D. Shoulders.0.2, Eugene E.

Comiskey,O.Z, Robert J. Freemn,O.Z /0.05 Pagecount: 1/305-407/0.02 Edition: O/Hardcover,O.7, Paperback,O.3 / 0.01  6 Conclusions  In this paper, we define business data and customer profile based on product hierarchy for E-commerce recommendation application. Especially, we analyze the differences between preference profile and d e  profile, and propose an incremental approach to construct customer preference profiles. In the end, we conduct experiment to validate our methods.

There are several problems we need to investigate further. These issues include:  * more customer behavior data should be used, especially the clickstream, because the Web clickstream contains very important information about how a customer likes products;  * Web content mining techniques can be employed to extract customer preferences;  * more reco,mendation experiments and the comparisons with other techniques such as user-based and item-based collaborative filtering, should be conducted in details.

